# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR Free Software Foundation, Inc.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Report-Msgid-Bugs-To: jn.avila@free.fr\n"
"POT-Creation-Date: 2022-09-16 20:56+0200\n"
"PO-Revision-Date: 2022-07-30 20:16+0000\n"
"Last-Translator: Wellington Terumi Uemura <wellingtonuemura@gmail.com>\n"
"Language-Team: none\n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n > 1;\n"
"X-Generator: Weblate 4.14-dev\n"

#. type: Labeled list
#: en/blame-options.txt:1 en/diff-options.txt:763 en/git-instaweb.txt:45 en/git-mailinfo.txt:49 en/git-mailsplit.txt:35 en/git-repack.txt:140 en/git-status.txt:31
#, ignore-same, no-wrap, priority:280
msgid "-b"
msgstr "-b"

#. type: Plain text
#: en/blame-options.txt:4
#, priority:100
msgid "Show blank SHA-1 for boundary commits.  This can also be controlled via the `blame.blankBoundary` config option."
msgstr "Exiba o SHA-1 em branco para os commits limite.  Também pode ser controlado através da configuração da opção `blame.blankBoundary`."

#. type: Labeled list
#: en/blame-options.txt:5 en/git-diff-tree.txt:42 en/git-format-patch.txt:396 en/git-fsck.txt:38 en/git-rebase.txt:561
#, ignore-same, no-wrap, priority:100
msgid "--root"
msgstr "--root"

#. type: Plain text
#: en/blame-options.txt:8
#, priority:100
msgid "Do not treat root commits as boundaries.  This can also be controlled via the `blame.showRoot` config option."
msgstr "Não trate os commits raiz como limitadores.  Também pode ser controlado através da opção da configuração `blame.showRoot`."

#. type: Labeled list
#: en/blame-options.txt:9
#, ignore-same, no-wrap, priority:100
msgid "--show-stats"
msgstr "--show-stats"

#. type: Plain text
#: en/blame-options.txt:11
#, priority:100
msgid "Include additional statistics at the end of blame output."
msgstr "Inclui estatísticas adicionais no fim da saída do comando blame."

#. type: Labeled list
#: en/blame-options.txt:12
#, no-wrap, priority:100
msgid "-L <start>,<end>"
msgstr "-L <inicio>,<fim>"

#. type: Labeled list
#: en/blame-options.txt:13
#, no-wrap, priority:100
msgid "-L :<funcname>"
msgstr "-L :<funcname>"

#. type: Plain text
#: en/blame-options.txt:17
#, priority:100
msgid "Annotate only the line range given by '<start>,<end>', or by the function name regex '<funcname>'.  May be specified multiple times. Overlapping ranges are allowed."
msgstr "Anote apenas a faixa das linhas informadas com '<inicio>,<fim>', ou através do nome da expressão-regular da função '<funcname>'. Pode ser utilizado mais de uma vez.  A sobreposição dos intervalos são permitidos."

#. type: Plain text
#: en/blame-options.txt:20
#, priority:100
msgid "'<start>' and '<end>' are optional. `-L <start>` or `-L <start>,` spans from '<start>' to end of file. `-L ,<end>` spans from start of file to '<end>'."
msgstr "'<inicio>' e '<fim>' são opcionais. `-L <inicio>` ou `-L <inicio>`, abrange do '<inicio>' para o final do arquivo. `-L ,<fim>` abrange do começo ao '<fim>'."

#. type: Labeled list
#: en/blame-options.txt:23 en/git-archive.txt:45 en/git-branch.txt:173 en/git-checkout.txt:201 en/git-clone.txt:45 en/git-config.txt:181 en/git-grep.txt:156 en/git-instaweb.txt:23 en/git-ls-tree.txt:51 en/git-repack.txt:77 en/git-svn.txt:244 en/git-tag.txt:99 en/git-var.txt:20
#, ignore-same, no-wrap, priority:300
msgid "-l"
msgstr "-l"

#. type: Plain text
#: en/blame-options.txt:25
#, priority:100
msgid "Show long rev (Default: off)."
msgstr "Exibe o rev longo (Predefinição: desligado)."

#. type: Labeled list
#: en/blame-options.txt:26 en/diff-options.txt:147 en/fetch-options.txt:187 en/git-branch.txt:209 en/git-cat-file.txt:42 en/git-checkout.txt:158 en/git-diff-tree.txt:39 en/git-ls-files.txt:120 en/git-ls-remote.txt:26 en/git-ls-tree.txt:47 en/git-svn.txt:312 en/git-switch.txt:153
#, ignore-same, no-wrap, priority:280
msgid "-t"
msgstr "-t"

#. type: Plain text
#: en/blame-options.txt:28
#, priority:100
msgid "Show raw timestamp (Default: off)."
msgstr "Exibe o registro de data e hora em formato bruto (Predefinição: desligado)."

#. type: Labeled list
#: en/blame-options.txt:29
#, no-wrap, priority:100
msgid "-S <revs-file>"
msgstr "-S <revs-file>"

#. type: Plain text
#: en/blame-options.txt:31
#, priority:100
msgid "Use revisions from revs-file instead of calling linkgit:git-rev-list[1]."
msgstr "Utilize as revisões do arquivo-revs no lugar de chamar linkgit:git-rev-list[1]."

#. type: Labeled list
#: en/blame-options.txt:32
#, no-wrap, priority:100
msgid "--reverse <rev>..<rev>"
msgstr "--reverse <rev>..<rev>"

#. type: Plain text
#: en/blame-options.txt:39
#, priority:100
msgid "Walk history forward instead of backward. Instead of showing the revision in which a line appeared, this shows the last revision in which a line has existed. This requires a range of revision like START..END where the path to blame exists in START.  `git blame --reverse START` is taken as `git blame --reverse START..HEAD` for convenience."
msgstr "Avance a história adiante em vez de retroceder. Em vez de exibir a revisão onde a linha apareceu, exibe a última revisão na qual a linha já existiu. É necessário um intervalo de revisões como START..END (INICIO..FIM) onde o caminho reclamado exista em START.  Por mera conveniência, o comando `git blame --reverse START` é atalho para `git blame --reverse START..HEAD`."

#. type: Labeled list
#: en/blame-options.txt:40 en/git-bisect.txt:368 en/git-describe.txt:122 en/rev-list-options.txt:129
#, ignore-same, no-wrap, priority:260
msgid "--first-parent"
msgstr "--first-parent"

#. type: Plain text
#: en/blame-options.txt:45
#, priority:100
msgid "Follow only the first parent commit upon seeing a merge commit. This option can be used to determine when a line was introduced to a particular integration branch, rather than when it was introduced to the history overall."
msgstr "Siga apenas o primeiro commit da origem ao ver um commit de mesclagem. Essa opção pode ser usada para determinar quando uma linha foi incorporado em um determinado ramo em vez da sua introdução no histórico geral."

#. type: Labeled list
#: en/blame-options.txt:46 en/diff-options.txt:16 en/diff-options.txt:22 en/fetch-options.txt:128 en/git-add.txt:96 en/git-cat-file.txt:55 en/git-checkout.txt:271 en/git-commit.txt:73 en/git-cvsexportcommit.txt:41 en/git-grep.txt:209 en/git-instaweb.txt:41 en/git-merge-file.txt:63 en/git-request-pull.txt:29 en/git-restore.txt:48 en/git-stash.txt:193 en/git-svn.txt:535 en/git-svn.txt:679 en/git.txt:129
#, ignore-same, no-wrap, priority:300
msgid "-p"
msgstr "-p"

#. type: Labeled list
#: en/blame-options.txt:47 en/git-commit.txt:149 en/git-push.txt:176 en/git-worktree.txt:224
#, ignore-same, no-wrap, priority:280
msgid "--porcelain"
msgstr "--porcelain"

#. type: Plain text
#: en/blame-options.txt:49
#, priority:100
msgid "Show in a format designed for machine consumption."
msgstr "Exiba num formato designado para o consumo de uma máquina."

#. type: Labeled list
#: en/blame-options.txt:50
#, ignore-same, no-wrap, priority:100
msgid "--line-porcelain"
msgstr "--line-porcelain"

#. type: Plain text
#: en/blame-options.txt:54
#, priority:100
msgid "Show the porcelain format, but output commit information for each line, not just the first time a commit is referenced.  Implies --porcelain."
msgstr "Exiba o formato porcelana, porém envie informações do commit na saída para cada linha e não apenas na primeira vez que um commit tiver uma referência.  Implica no uso da opção --porcelain."

#. type: Labeled list
#: en/blame-options.txt:55 en/git-pack-objects.txt:178 en/git-svn.txt:373
#, ignore-same, no-wrap, priority:100
msgid "--incremental"
msgstr "--incremental"

#. type: Plain text
#: en/blame-options.txt:58
#, priority:100
msgid "Show the result incrementally in a format designed for machine consumption."
msgstr "Exiba o resultado incrementadamente num formado designado para o consumo de uma máquina."

#. type: Labeled list
#: en/blame-options.txt:59 en/git-mailinfo.txt:64 en/pretty-options.txt:35
#, no-wrap, priority:260
msgid "--encoding=<encoding>"
msgstr "--encoding=<codificação>"

#. type: Plain text
#: en/blame-options.txt:65
#, priority:100
msgid "Specifies the encoding used to output author names and commit summaries. Setting it to `none` makes blame output unconverted data. For more information see the discussion about encoding in the linkgit:git-log[1] manual page."
msgstr "Defina a codificação a ser utilizada para gerar os nomes dos autores e do resumo dos commits. Definindo como `none` torna a saída \"blame\" em dados sem conversão. Para mais informações, consulte a discussão sobre codificação na página do manual linkgit:git-log[1]."

#. type: Labeled list
#: en/blame-options.txt:66
#, no-wrap, priority:100
msgid "--contents <file>"
msgstr "--contents <arquivo>"

#. type: Plain text
#: en/blame-options.txt:72
#, priority:100
msgid "When <rev> is not specified, the command annotates the changes starting backwards from the working tree copy.  This flag makes the command pretend as if the working tree copy has the contents of the named file (specify `-` to make the command read from the standard input)."
msgstr "Quando <rev> não for definido, o comando anotará as alterações iniciando em sentido contrário na cópia da árvore de trabalho.  Essa flag faz com que o comando pareça estar trabalhando na cópia da árvore de trabalho que tenha os conteúdos informados do arquivo (especifique `-` para que o comando leia a partir da entrada padrão)."

#. type: Labeled list
#: en/blame-options.txt:73
#, no-wrap, priority:100
msgid "--date <format>"
msgstr "--date <formato>"

#. type: Plain text
#: en/blame-options.txt:79
#, priority:100
msgid "Specifies the format used to output dates. If --date is not provided, the value of the blame.date config variable is used. If the blame.date config variable is also not set, the iso format is used. For supported values, see the discussion of the --date option at linkgit:git-log[1]."
msgstr "Especifica o formato utilizado para gerar as datas. Caso --date não seja utilizado, o valor da variável de configuração `blame.date` será utilizado. Caso a variável de configuração `blame.date` também não esteja definida, o formato ISO será utilizado. Para ver quais são os valores compatíveis, consulte a discussão da opção `--date` em linkgit:git-log[1]."

#. type: Labeled list
#: en/blame-options.txt:80 en/git-fsck.txt:100
#, ignore-same, no-wrap, priority:100
msgid "--[no-]progress"
msgstr "--[no-]progress"

#. type: Plain text
#: en/blame-options.txt:86
#, priority:100
msgid "Progress status is reported on the standard error stream by default when it is attached to a terminal. This flag enables progress reporting even if not attached to a terminal. Can't use `--progress` together with `--porcelain` or `--incremental`."
msgstr "É predefinido que a condição do progresso seja relatado no fluxo de erros padrão quando estiver conectado num terminal. Essa flag permite que os relatórios de progresso sejam feitos ainda que não estejam conectados num terminal. Não é possível usar `--progress` junto com `--porcelain` ou `--incremental`."

#. type: Labeled list
#: en/blame-options.txt:87
#, no-wrap, priority:100
msgid "-M[<num>]"
msgstr "-M[<num>]"

#. type: Plain text
#: en/blame-options.txt:97
#, priority:100
msgid "Detect moved or copied lines within a file. When a commit moves or copies a block of lines (e.g. the original file has A and then B, and the commit changes it to B and then A), the traditional 'blame' algorithm notices only half of the movement and typically blames the lines that were moved up (i.e. B) to the parent and assigns blame to the lines that were moved down (i.e. A) to the child commit.  With this option, both groups of lines are blamed on the parent by running extra passes of inspection."
msgstr "Detecte as linhas movidas ou copiadas num arquivo. Quando um commit move ou copia um bloco de linhas (o arquivo original possui A e, em seguida, B, e o commit muda para B e, em seguida, A por exemplo), o algoritmo tradicional de 'blame' percebe apenas metade do movimento e normalmente responsabiliza as linhas que forem movidos para cima (ou seja, B) para a origem e atribuem a responsabilidade às linhas que foram movidas para baixo (ou seja, A) para o herdeiro do commit.  Com esta opção, os dois grupos das linhas são atribuídos à origem durante a execução dos passes extras de inspeção."

#. type: Plain text
#: en/blame-options.txt:102
#, priority:100
msgid "<num> is optional but it is the lower bound on the number of alphanumeric characters that Git must detect as moving/copying within a file for it to associate those lines with the parent commit. The default value is 20."
msgstr "A opção `<num>` é opcional porém é o limite inferior da quantidade de caracteres alfanuméricos que o Git deve detectar como mover/copiar dentro de um arquivo para associar essas linhas ao commit de origem. 20 é o valor predefinido."

#. type: Labeled list
#: en/blame-options.txt:103
#, no-wrap, priority:100
msgid "-C[<num>]"
msgstr "-C[<num>]"

#. type: Plain text
#: en/blame-options.txt:112
#, priority:100
msgid "In addition to `-M`, detect lines moved or copied from other files that were modified in the same commit.  This is useful when you reorganize your program and move code around across files.  When this option is given twice, the command additionally looks for copies from other files in the commit that creates the file. When this option is given three times, the command additionally looks for copies from other files in any commit."
msgstr "Além de `-M`, detecte as linhas movidas ou copiadas de outros arquivos que foram alterados no mesmo commit.  É útil ao reorganizar o seu programa e move o código através dos arquivos.  Quando essa opção é utilizada duas vezes, o comando procura adicionalmente cópias dos outros arquivos no commit que cria o arquivo. Quando essa opção é utilizada três vezes, o comando procura adicionalmente por cópias dos outros arquivos em qualquer outro commit."

#. type: Plain text
#: en/blame-options.txt:119
#, priority:100
msgid "<num> is optional but it is the lower bound on the number of alphanumeric characters that Git must detect as moving/copying between files for it to associate those lines with the parent commit. And the default value is 40. If there are more than one `-C` options given, the <num> argument of the last `-C` will take effect."
msgstr "A opção `<num>` é opcional porém é o limite inferior da quantidade de caracteres alfanuméricos que o Git deve detectar como mover/copiar entre os arquivos para associar estas linhas ao commit de origem. 40 é o valor predefinido. Caso haja mais de uma opção `-C`, o argumento <num> do último `-C` entrará em vigor."

#. type: Labeled list
#: en/blame-options.txt:120
#, no-wrap, priority:100
msgid "--ignore-rev <rev>"
msgstr "--ignore-rev <rev>"

#. type: Plain text
#: en/blame-options.txt:131
#, priority:100
msgid "Ignore changes made by the revision when assigning blame, as if the change never happened.  Lines that were changed or added by an ignored commit will be blamed on the previous commit that changed that line or nearby lines.  This option may be specified multiple times to ignore more than one revision.  If the `blame.markIgnoredLines` config option is set, then lines that were changed by an ignored commit and attributed to another commit will be marked with a `?` in the blame output.  If the `blame.markUnblamableLines` config option is set, then those lines touched by an ignored commit that we could not attribute to another revision are marked with a '*'."
msgstr "Ignore as alterações feitas pela revisão assumindo a responsabilidade como se a mudança nunca tivesse acontecido.  As linhas que foram alteradas ou adicionadas através de um commit ignorado serão responsabilizados pelo commit anterior que alterou esta linha ou as próximas.  Esta opção pode ser utilizada várias vezes para ignorar mais de uma revisão.  Caso a opção da configuração `blame.markIgnoredLines` estiver definida, as linhas que forem alteradas por um commit ignorado e atribuídas a outro commit, serão marcados com um`?`.  Caso a opção da configuração `blame.markUnblamableLines` estiver definida, as linhas tocadas por um commit ignorado onde não foi possível atribuir uma outra revisão, serão marcadas com um '*'."

#. type: Labeled list
#: en/blame-options.txt:132
#, no-wrap, priority:100
msgid "--ignore-revs-file <file>"
msgstr "--ignore-revs-file <arquivo>"

#. type: Plain text
#: en/blame-options.txt:138
#, priority:100
msgid "Ignore revisions listed in `file`, which must be in the same format as an `fsck.skipList`.  This option may be repeated, and these files will be processed after any files specified with the `blame.ignoreRevsFile` config option.  An empty file name, `\"\"`, will clear the list of revs from previously processed files."
msgstr "Ignore as revisões listadas no `arquivo` que deve estar no mesmo formato que um `fsck.skipList`.  Esta opção pode ser repetida, estes arquivos serão processados após qualquer outro arquivo definido com a opção da configuração `blame.ignoreRevsFile`.  Um nome vazio de arquivo, `\"\"` limpará a lista de rotações dos arquivos processados anteriormente."

#. type: Labeled list
#: en/blame-options.txt:139
#, ignore-same, no-wrap, priority:100
msgid "--color-lines"
msgstr "--color-lines"

#. type: Plain text
#: en/blame-options.txt:144
#, priority:100
msgid "Color line annotations in the default format differently if they come from the same commit as the preceding line. This makes it easier to distinguish code blocks introduced by different commits. The color defaults to cyan and can be adjusted using the `color.blame.repeatedLines` config option."
msgstr "Anotações das cores da linha no formato padrão, diferentemente se elas vierem do mesmo commit da linha anterior. Isso torna mais fácil distinguir os blocos de código introduzidos por diferentes commits. A cor predefinida é ciano e pode ser ajustada usando a opção `color.blame.repeatedLines`."

#. type: Labeled list
#: en/blame-options.txt:145
#, ignore-same, no-wrap, priority:100
msgid "--color-by-age"
msgstr "--color-by-age"

#. type: Plain text
#: en/blame-options.txt:149
#, priority:100
msgid "Color line annotations depending on the age of the line in the default format.  The `color.blame.highlightRecent` config option controls what color is used for each range of age."
msgstr "Anotações das cores da linha dependendo da idade da linha no formato padrão.  A opção `color.blame.highlightRecent` controla qual cor é utilizada em cada faixa etária."

#. type: Labeled list
#: en/blame-options.txt:150 en/git-archimport.txt:71 en/git-cvsimport.txt:184 en/git-cvsserver.txt:60 en/git-grep.txt:114 en/git-ls-remote.txt:24 en/git.txt:50
#, ignore-same, no-wrap, priority:100
msgid "-h"
msgstr "-h"

#. type: Plain text
#: en/blame-options.txt:151
#, priority:100
msgid "Show help message."
msgstr "Exiba a mensagem de ajuda."

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:1 en/git-blame.txt:254
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-annotate[1]"
msgstr "linkgit:git-annotate[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:3
#, priority:100
msgid "Annotate file lines with commit information."
msgstr "Anota as linhas com as informações do commit."

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:4 en/git-annotate.txt:30
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-blame[1]"
msgstr "linkgit:git-blame[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:6
#, priority:100
msgid "Show what revision and author last modified each line of a file."
msgstr "Exibe quais foram as últimas modificações feitas em cada linha de um arquivo separados pela versão da revisão e do autor da modificação."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-bugreport[1]"
msgstr "linkgit:git-bugreport[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:9
#, priority:100
msgid "Collect information for user to file a bug report."
msgstr "Colete informações para que o usuário envie um relatório de erro."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-count-objects[1]"
msgstr "linkgit:git-count-objects[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:12
#, priority:100
msgid "Count unpacked number of objects and their disk consumption."
msgstr "Conta a quantidade dos objetos que não foram empacotados e seu consumo no disco."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-difftool[1]"
msgstr "linkgit:git-difftool[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:15
#, priority:100
msgid "Show changes using common diff tools."
msgstr "Exibe as mudanças utilizando ferramentas diff tradicionais."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-fsck[1]"
msgstr "linkgit:git-fsck[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:18 en/git-fsck.txt:20
#, priority:100
msgid "Verifies the connectivity and validity of the objects in the database."
msgstr "Verifica a conectividade e validade dos objetos num banco de dados."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:19
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-help[1]"
msgstr "linkgit:git-help[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:21
#, priority:100
msgid "Display help information about Git."
msgstr "Exiba a informação de ajuda sobre o Git."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:22
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-instaweb[1]"
msgstr "linkgit:git-instaweb[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:24
#, priority:100
msgid "Instantly browse your working repository in gitweb."
msgstr "Navegue instantaneamente no seu repositório de trabalho com o gitweb."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:25
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-merge-tree[1]"
msgstr "linkgit:git-merge-tree[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:27
#, priority:100
msgid "Show three-way merge without touching index."
msgstr "Exiba as três maneiras de mesclagem sem mexer no índice."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:28
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-rerere[1]"
msgstr "linkgit:git-rerere[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:30
#, priority:100
msgid "Reuse recorded resolution of conflicted merges."
msgstr "Reutilize uma resolução gravada das mesclagens conflitantes."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:31
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-show-branch[1]"
msgstr "linkgit:git-show-branch[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:33
#, priority:100
msgid "Show branches and their commits."
msgstr "Exiba os ramos e seus respectivos commits."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:34
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-verify-commit[1]"
msgstr "linkgit:git-verify-commit[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:36
#, priority:100
msgid "Check the GPG signature of commits."
msgstr "Verifique a assinatura GPG dos commits."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:37
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-verify-tag[1]"
msgstr "linkgit:git-verify-tag[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:39
#, priority:100
msgid "Check the GPG signature of tags."
msgstr "Verifique a assinatura GPG das tags."

#. type: Labeled list
#: en/cmds-ancillaryinterrogators.txt:40
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-whatchanged[1]"
msgstr "linkgit:git-whatchanged[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:42
#, priority:100
msgid "Show logs with difference each commit introduces."
msgstr "Exiba os registros logs com a diferença entre a introdução de cada commit."

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:43 en/git-instaweb.txt:91
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitweb[1]"
msgstr "linkgit:gitweb[1]"

#. type: Plain text
#: en/cmds-ancillaryinterrogators.txt:45
#, priority:100
msgid "Git web interface (web frontend to Git repositories)."
msgstr "Interface web do Git (frontend web para os repositórios Git)."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:1 en/git-difftool.txt:133
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-config[1]"
msgstr "linkgit:git-config[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:3
#, priority:100
msgid "Get and set repository or global options."
msgstr "Obtém e define os repositórios ou as opções globais."

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:4 en/git-fast-import.txt:1577
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-fast-export[1]"
msgstr "linkgit:git-fast-export[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:6
#, priority:100
msgid "Git data exporter."
msgstr "Exportador de dados do Git."

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:7 en/git-fast-export.txt:281
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-fast-import[1]"
msgstr "linkgit:git-fast-import[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:9
#, priority:100
msgid "Backend for fast Git data importers."
msgstr "Estrutura para os importadores de dados rápidos do Git."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-filter-branch[1]"
msgstr "linkgit:git-filter-branch[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:12
#, priority:100
msgid "Rewrite branches."
msgstr "Reescreve os ramos."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:13 en/git-difftool.txt:130
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-mergetool[1]"
msgstr "linkgit:git-mergetool[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:15
#, priority:100
msgid "Run merge conflict resolution tools to resolve merge conflicts."
msgstr "Executa as ferramentas de resolução problemas para resolver os conflitos de mesclagem."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-pack-refs[1]"
msgstr "linkgit:git-pack-refs[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:18
#, priority:100
msgid "Pack heads and tags for efficient repository access."
msgstr "Empacota os cabeçalhos e as tags para um acesso eficiente ao repositório."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:19
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-prune[1]"
msgstr "linkgit:git-prune[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:21
#, priority:100
msgid "Prune all unreachable objects from the object database."
msgstr "Corta todos os objetos fora de alcance do banco de dados de objetos."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:22
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-reflog[1]"
msgstr "linkgit:git-reflog[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:24
#, priority:100
msgid "Manage reflog information."
msgstr "Gerencia as informações do reflog."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:25
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-remote[1]"
msgstr "linkgit:git-remote[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:27
#, priority:100
msgid "Manage set of tracked repositories."
msgstr "Gerencia o conjunto de repositórios monitorados."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:28
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-repack[1]"
msgstr "linkgit:git-repack[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:30
#, priority:100
msgid "Pack unpacked objects in a repository."
msgstr "Empacota os objetos não empacotados num repositório."

#. type: Labeled list
#: en/cmds-ancillarymanipulators.txt:31
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-replace[1]"
msgstr "linkgit:git-replace[1]"

#. type: Plain text
#: en/cmds-ancillarymanipulators.txt:33
#, priority:100
msgid "Create, list, delete refs to replace objects."
msgstr "Cria, lista e exclui os refs para a reposição dos objetos."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:1
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-archimport[1]"
msgstr "linkgit:git-archimport[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:3
#, priority:100
msgid "Import a GNU Arch repository into Git."
msgstr "Importa um repositório GNU Arch no Git."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:4
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-cvsexportcommit[1]"
msgstr "linkgit:git-cvsexportcommit[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:6
#, priority:100
msgid "Export a single commit to a CVS checkout."
msgstr "Exporta um único commit para uma averiguação do CVS."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-cvsimport[1]"
msgstr "linkgit:git-cvsimport[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:9
#, priority:100
msgid "Salvage your data out of another SCM people love to hate."
msgstr "Recupera os seus dados vindos de outros SCM que as pessoas adoram odiar."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-cvsserver[1]"
msgstr "linkgit:git-cvsserver[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:12
#, priority:100
msgid "A CVS server emulator for Git."
msgstr "Um emulador de um servidor CVS para o Git."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-imap-send[1]"
msgstr "linkgit:git-imap-send[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:15
#, priority:100
msgid "Send a collection of patches from stdin to an IMAP folder."
msgstr "Envia uma coleção de patches da entrada padrão para um diretório IMAP."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-p4[1]"
msgstr "linkgit:git-p4[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:18
#, priority:100
msgid "Import from and submit to Perforce repositories."
msgstr "Importa de e submete aos repositório Perforce."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:19
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-quiltimport[1]"
msgstr "linkgit:git-quiltimport[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:21
#, priority:100
msgid "Applies a quilt patchset onto the current branch."
msgstr "Aplica um conjunto de patches no ramo atual."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:22
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-request-pull[1]"
msgstr "linkgit:git-request-pull[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:24
#, priority:100
msgid "Generates a summary of pending changes."
msgstr "Gera um resumo com as modificações pendentes."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:25
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-send-email[1]"
msgstr "linkgit:git-send-email[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:27
#, priority:100
msgid "Send a collection of patches as emails."
msgstr "Envia uma coleção de patches como sendo e-mails."

#. type: Labeled list
#: en/cmds-foreignscminterface.txt:28
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-svn[1]"
msgstr "linkgit:git-svn[1]"

#. type: Plain text
#: en/cmds-foreignscminterface.txt:30
#, priority:100
msgid "Bidirectional operation between a Subversion repository and Git."
msgstr "Operação bidirecional entre um repositório do Subversion e do Git."

#. type: Plain text
#: en/cmds-guide.txt:1 en/git-archive.txt:233
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitattributes[5]"
msgstr "linkgit:gitattributes[5]"

#. type: Plain text
#: en/cmds-guide.txt:3
#, priority:100
msgid "Defining attributes per path."
msgstr "Definindo todos os atributos por caminho."

#. type: Labeled list
#: en/cmds-guide.txt:4
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitcli[7]"
msgstr "linkgit:gitcli[7]"

#. type: Plain text
#: en/cmds-guide.txt:6
#, priority:100
msgid "Git command-line interface and conventions."
msgstr "Interface da linha de comando do Git e convenções."

#. type: Labeled list
#: en/cmds-guide.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitcore-tutorial[7]"
msgstr "linkgit:gitcore-tutorial[7]"

#. type: Plain text
#: en/cmds-guide.txt:9
#, priority:100
msgid "A Git core tutorial for developers."
msgstr "Um tutorial básico do Git para os desenvolvedores."

#. type: Labeled list
#: en/cmds-guide.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitcredentials[7]"
msgstr "linkgit:gitcredentials[7]"

#. type: Plain text
#: en/cmds-guide.txt:12
#, priority:100
msgid "Providing usernames and passwords to Git."
msgstr "Fornecendo nomes de usuário e as senhas para o Git."

#. type: Labeled list
#: en/cmds-guide.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitcvs-migration[7]"
msgstr "linkgit:gitcvs-migration[7]"

#. type: Plain text
#: en/cmds-guide.txt:15
#, priority:100
msgid "Git for CVS users."
msgstr "Git para os usuários do CVS."

#. type: Labeled list
#: en/cmds-guide.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitdiffcore[7]"
msgstr "linkgit:gitdiffcore[7]"

#. type: Plain text
#: en/cmds-guide.txt:18
#, priority:100
msgid "Tweaking diff output."
msgstr "Ajustando a saída diff."

#. type: Labeled list
#: en/cmds-guide.txt:19
#, ignore-same, no-wrap, priority:100
msgid "linkgit:giteveryday[7]"
msgstr "linkgit:giteveryday[7]"

#. type: Plain text
#: en/cmds-guide.txt:21
#, priority:100
msgid "A useful minimum set of commands for Everyday Git."
msgstr "Um conjunto mínimo de comandos úteis para o Everyday Git."

#. type: Labeled list
#: en/cmds-guide.txt:22
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitfaq[7]"
msgstr "linkgit:gitfaq[7]"

#. type: Plain text
#: en/cmds-guide.txt:24
#, priority:100
msgid "Frequently asked questions about using Git."
msgstr "Perguntas frequentes sobre a utilização do Git."

#. type: Labeled list
#: en/cmds-guide.txt:25
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitglossary[7]"
msgstr "linkgit:gitglossary[7]"

#. type: Plain text
#: en/cmds-guide.txt:27
#, priority:100
msgid "A Git Glossary."
msgstr "Um Glossário do Git."

#. type: Labeled list
#: en/cmds-guide.txt:28
#, ignore-same, no-wrap, priority:100
msgid "linkgit:githooks[5]"
msgstr "linkgit:githooks[5]"

#. type: Plain text
#: en/cmds-guide.txt:30
#, priority:100
msgid "Hooks used by Git."
msgstr "Ganchos utilizados pelo Git."

#. type: Plain text
#: en/cmds-guide.txt:31 en/git-clean.txt:146 en/git-status.txt:463
#, ignore-same, no-wrap, priority:280
msgid "linkgit:gitignore[5]"
msgstr "linkgit:gitignore[5]"

#. type: Plain text
#: en/cmds-guide.txt:33
#, priority:100
msgid "Specifies intentionally untracked files to ignore."
msgstr "Especifica quais arquivos intencionalmente não rastreados serão ignorados."

#. type: Labeled list
#: en/cmds-guide.txt:34
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitmailmap[5]"
msgstr "linkgit:gitmailmap[5]"

#. type: Plain text
#: en/cmds-guide.txt:36
#, priority:100
msgid "Map author/committer names and/or E-Mail addresses."
msgstr "Mapeie os nomes do autor/de quem fez o commit e/ou os endereços de e-mail."

#. type: Labeled list
#: en/cmds-guide.txt:37
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitmodules[5]"
msgstr "linkgit:gitmodules[5]"

#. type: Plain text
#: en/cmds-guide.txt:39
#, priority:100
msgid "Defining submodule properties."
msgstr "Definindo as propriedades do submódulo."

#. type: Plain text
#: en/cmds-guide.txt:40 en/git-upload-pack.txt:61
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitnamespaces[7]"
msgstr "linkgit:gitnamespaces[7]"

#. type: Plain text
#: en/cmds-guide.txt:42
#, priority:100
msgid "Git namespaces."
msgstr "Espaços de nome do Git."

#. type: Plain text
#: en/cmds-guide.txt:43 en/git-remote-ext.txt:122 en/git-remote-fd.txt:56
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitremote-helpers[7]"
msgstr "linkgit:gitremote-helpers[7]"

#. type: Plain text
#: en/cmds-guide.txt:45
#, priority:100
msgid "Helper programs to interact with remote repositories."
msgstr "Os programas auxiliares que interagem com os repositórios remotos."

#. type: Labeled list
#: en/cmds-guide.txt:46
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitrepository-layout[5]"
msgstr "linkgit:gitrepository-layout[5]"

#. type: Plain text
#: en/cmds-guide.txt:48
#, priority:100
msgid "Git Repository Layout."
msgstr "O Layout do Repositório Git."

#. type: Labeled list
#: en/cmds-guide.txt:49
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitrevisions[7]"
msgstr "linkgit:gitrevisions[7]"

#. type: Plain text
#: en/cmds-guide.txt:51
#, priority:100
msgid "Specifying revisions and ranges for Git."
msgstr "Determinando as revisões e os intervalor para o Git."

#. type: Labeled list
#: en/cmds-guide.txt:52
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitsubmodules[7]"
msgstr "linkgit:gitsubmodules[7]"

#. type: Plain text
#: en/cmds-guide.txt:54
#, priority:100
msgid "Mounting one repository inside another."
msgstr "Montando um repositório dentro do outro."

#. type: Labeled list
#: en/cmds-guide.txt:55
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gittutorial[7]"
msgstr "linkgit:gittutorial[7]"

#. type: Plain text
#: en/cmds-guide.txt:57
#, priority:100
msgid "A tutorial introduction to Git."
msgstr "Um tutorial de introdução ao Git."

#. type: Labeled list
#: en/cmds-guide.txt:58
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gittutorial-2[7]"
msgstr "linkgit:gittutorial-2[7]"

#. type: Plain text
#: en/cmds-guide.txt:60
#, priority:100
msgid "A tutorial introduction to Git: part two."
msgstr "Um tutorial de introdução ao Git: parte dois."

#. type: Labeled list
#: en/cmds-guide.txt:61
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitworkflows[7]"
msgstr "linkgit:gitworkflows[7]"

#. type: Plain text
#: en/cmds-guide.txt:63
#, priority:100
msgid "An overview of recommended workflows with Git."
msgstr "Uma visão geral das recomendações dos fluxos de trabalho com Git."

#. type: Plain text
#: en/cmds-mainporcelain.txt:1 en/git-rm.txt:201
#, ignore-same, no-wrap, priority:280
msgid "linkgit:git-add[1]"
msgstr "linkgit:git-add[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:3
#, priority:100
msgid "Add file contents to the index."
msgstr "Adiciona o conteúdo dos arquivos ao índice."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:4
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-am[1]"
msgstr "linkgit:git-am[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:6
#, priority:100
msgid "Apply a series of patches from a mailbox."
msgstr "Aplica uma série de patches vindos de uma caixa de e-mails."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-archive[1]"
msgstr "linkgit:git-archive[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:9
#, priority:100
msgid "Create an archive of files from a named tree."
msgstr "Cria um histórico dos arquivos a partir de uma determinada árvore."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-bisect[1]"
msgstr "linkgit:git-bisect[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:12
#, priority:100
msgid "Use binary search to find the commit that introduced a bug."
msgstr "Utilize a procura binária para localizar o commit que introduziu um bug."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-branch[1]"
msgstr "linkgit:git-branch[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:15
#, priority:100
msgid "List, create, or delete branches."
msgstr "Lista, cria ou exclui os ramos."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-bundle[1]"
msgstr "linkgit:git-bundle[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:18
#, priority:100
msgid "Move objects and refs by archive."
msgstr "Mova os objetos e as refs através do histórico."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:19
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-checkout[1]"
msgstr "linkgit:git-checkout[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:21
#, priority:100
msgid "Switch branches or restore working tree files."
msgstr "Mova os ramos ou restaura os arquivos da árvores de trabalho."

#. type: Plain text
#: en/cmds-mainporcelain.txt:22 en/git-revert.txt:155
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-cherry-pick[1]"
msgstr "linkgit:git-cherry-pick[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:24
#, priority:100
msgid "Apply the changes introduced by some existing commits."
msgstr "Aplica as mudanças introduzidas por alguns commits já existentes."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:25
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-citool[1]"
msgstr "linkgit:git-citool[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:27
#, priority:100
msgid "Graphical alternative to git-commit."
msgstr "Uma alternativa gráfica ao git-commit."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:28
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-clean[1]"
msgstr "linkgit:git-clean[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:30
#, priority:100
msgid "Remove untracked files from the working tree."
msgstr "Remove os arquivos da árvore de trabalho sem monitoramento."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:31
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-clone[1]"
msgstr "linkgit:git-clone[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:33
#, priority:100
msgid "Clone a repository into a new directory."
msgstr "Clona um repositório num novo diretório."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:34
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-commit[1]"
msgstr "linkgit:git-commit[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:36
#, priority:100
msgid "Record changes to the repository."
msgstr "Grava as alterações para o repositório."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:37
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-describe[1]"
msgstr "linkgit:git-describe[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:39
#, priority:100
msgid "Give an object a human readable name based on an available ref."
msgstr "Dá a um objeto um nome num formato legível para humanos com base num \"ref\" disponível."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:40 en/git-difftool.txt:127
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-diff[1]"
msgstr "linkgit:git-diff[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:42
#, priority:100
msgid "Show changes between commits, commit and working tree, etc."
msgstr "Exiba as alterações entre os commits, o commit, árvore de trabalho, etc."

#. type: Plain text
#: en/cmds-mainporcelain.txt:43 en/git-fetch-pack.txt:133
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-fetch[1]"
msgstr "linkgit:git-fetch[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:45
#, priority:100
msgid "Download objects and refs from another repository."
msgstr "Faz o download dos objetos e dos refs vindo de outro repositório."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:46
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-format-patch[1]"
msgstr "linkgit:git-format-patch[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:48
#, priority:100
msgid "Prepare patches for e-mail submission."
msgstr "Prepara os patches para serem enviados por e-mail."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:49
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-gc[1]"
msgstr "linkgit:git-gc[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:51
#, priority:100
msgid "Cleanup unnecessary files and optimize the local repository."
msgstr "Exclui os arquivos desnecessários e otimiza o repositório local."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:52
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-grep[1]"
msgstr "linkgit:git-grep[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:54
#, priority:100
msgid "Print lines matching a pattern."
msgstr "Imprima as linhas que coincidam com um padrão."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:55
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-gui[1]"
msgstr "linkgit:git-gui[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:57
#, priority:100
msgid "A portable graphical interface to Git."
msgstr "Uma interface gráfica portátil para o Git."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:58
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-init[1]"
msgstr "linkgit:git-init[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:60
#, priority:100
msgid "Create an empty Git repository or reinitialize an existing one."
msgstr "Cria um repositório vazio para o Git ou reinicializa um repositório já existente."

#. type: Plain text
#: en/cmds-mainporcelain.txt:61 en/git-range-diff.txt:294
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-log[1]"
msgstr "linkgit:git-log[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:63
#, priority:100
msgid "Show commit logs."
msgstr "Exibe os registros logs de um commit."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:64
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-maintenance[1]"
msgstr "linkgit:git-maintenance[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:66
#, priority:100
msgid "Run tasks to optimize Git repository data."
msgstr "Executa tarefas para otimizar os dados de um repositório Git."

#. type: Plain text
#: en/cmds-mainporcelain.txt:67 en/git-fmt-merge-msg.txt:79
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-merge[1]"
msgstr "linkgit:git-merge[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:69
#, priority:100
msgid "Join two or more development histories together."
msgstr "Une dois ou mais históricos de desenvolvimento juntos."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:70
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-mv[1]"
msgstr "linkgit:git-mv[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:72
#, priority:100
msgid "Move or rename a file, a directory, or a symlink."
msgstr "Move ou renomeia um arquivo, um diretório ou um link simbólico."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:73
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-notes[1]"
msgstr "linkgit:git-notes[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:75
#, priority:100
msgid "Add or inspect object notes."
msgstr "Adiciona ou inspeciona as anotações dos objetos."

#. type: Plain text
#: en/cmds-mainporcelain.txt:76 en/git-fetch.txt:305
#, ignore-same, no-wrap, priority:220
msgid "linkgit:git-pull[1]"
msgstr "linkgit:git-pull[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:78
#, priority:100
msgid "Fetch from and integrate with another repository or a local branch."
msgstr "Capture de e o integre com um outro repositório ou num outro ramo local."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:79
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-push[1]"
msgstr "linkgit:git-push[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:81
#, priority:100
msgid "Update remote refs along with associated objects."
msgstr "Atualiza os refs remotos através da associação dos objetos."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:82
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-range-diff[1]"
msgstr "linkgit:git-range-diff[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:84
#, priority:100
msgid "Compare two commit ranges (e.g. two versions of a branch)."
msgstr "Compara os dois intervalos de um commit (duas versões de um ramo por exemplo)."

#. type: Plain text
#: en/cmds-mainporcelain.txt:85 en/git-svn.txt:1171
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-rebase[1]"
msgstr "linkgit:git-rebase[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:87
#, priority:100
msgid "Reapply commits on top of another base tip."
msgstr "Reaplica os commits no topo do outro cume da base."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:88
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-reset[1]"
msgstr "linkgit:git-reset[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:90
#, priority:100
msgid "Reset current HEAD to the specified state."
msgstr "Redefine o HEAD atual para o para a condição determinada."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:91
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-restore[1]"
msgstr "linkgit:git-restore[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:93
#, priority:100
msgid "Restore working tree files."
msgstr "Restaura as árvores de trabalho."

#. type: Plain text
#: en/cmds-mainporcelain.txt:94 en/git-cherry-pick.txt:240
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-revert[1]"
msgstr "linkgit:git-revert[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:96
#, priority:100
msgid "Revert some existing commits."
msgstr "Reverte alguns commits já existentes."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:97
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-rm[1]"
msgstr "linkgit:git-rm[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:99
#, priority:100
msgid "Remove files from the working tree and from the index."
msgstr "Remove os arquivos da árvore de trabalho e do índice."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:100
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-shortlog[1]"
msgstr "linkgit:git-shortlog[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:102
#, priority:100
msgid "Summarize 'git log' output."
msgstr "Faça um resumo da saída do 'git log'."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:103
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-show[1]"
msgstr "linkgit:git-show[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:105
#, priority:100
msgid "Show various types of objects."
msgstr "Exiba os vários tipos de objetos."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:106
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-sparse-checkout[1]"
msgstr "linkgit:git-sparse-checkout[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:108
#, priority:100
msgid "Reduce your working tree to a subset of tracked files."
msgstr "Reduz a sua árvore de trabalho para um conjunto de arquivos trasteados."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:109
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-stash[1]"
msgstr "linkgit:git-stash[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:111
#, priority:100
msgid "Stash the changes in a dirty working directory away."
msgstr "Armazene as alterações num diretório fora do diretório de trabalho."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:112
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-status[1]"
msgstr "linkgit:git-status[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:114
#, priority:100
msgid "Show the working tree status."
msgstr "Exiba a condição atual da árvore de trabalho."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:115
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-submodule[1]"
msgstr "linkgit:git-submodule[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:117
#, priority:100
msgid "Initialize, update or inspect submodules."
msgstr "Inicializa, atualiza ou inspeciona submódulos."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:118
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-switch[1]"
msgstr "linkgit:git-switch[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:120
#, priority:100
msgid "Switch branches."
msgstr "Alterna entre os ramos."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:121
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-tag[1]"
msgstr "linkgit:git-tag[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:123
#, priority:100
msgid "Create, list, delete or verify a tag object signed with GPG."
msgstr "Cria, lista, exclui ou verifica uma tag do objeto com assinatura GPG."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:124
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-worktree[1]"
msgstr "linkgit:git-worktree[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:126
#, priority:100
msgid "Manage multiple working trees."
msgstr "Manipula as diversas árvores de trabalho."

#. type: Labeled list
#: en/cmds-mainporcelain.txt:127 en/git-gui.txt:104
#, ignore-same, no-wrap, priority:100
msgid "linkgit:gitk[1]"
msgstr "linkgit:gitk[1]"

#. type: Plain text
#: en/cmds-mainporcelain.txt:129
#, priority:100
msgid "The Git repository browser."
msgstr "O navegador do repositório Git."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:1
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-cat-file[1]"
msgstr "linkgit:git-cat-file[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:3
#, priority:100
msgid "Provide content or type and size information for repository objects."
msgstr "Proporciona o conteúdo, o tipo e a informação sobre o tamanho dos objetos no repositório."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:4
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-cherry[1]"
msgstr "linkgit:git-cherry[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:6
#, priority:100
msgid "Find commits yet to be applied to upstream."
msgstr "Procura os commits que ainda serão aplicados ao \"upstream\"."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-diff-files[1]"
msgstr "linkgit:git-diff-files[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:9
#, priority:100
msgid "Compares files in the working tree and the index."
msgstr "Compara os arquivos na árvore de trabalho e no índice."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-diff-index[1]"
msgstr "linkgit:git-diff-index[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:12
#, priority:100
msgid "Compare a tree to the working tree or index."
msgstr "Compara uma árvore com o diretório de trabalho ou índice."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-diff-tree[1]"
msgstr "linkgit:git-diff-tree[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:15
#, priority:100
msgid "Compares the content and mode of blobs found via two tree objects."
msgstr "Compara o conteúdo e o modo das bolhas encontrados através de dois objetos da árvore."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-for-each-ref[1]"
msgstr "linkgit:git-for-each-ref[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:18
#, priority:100
msgid "Output information on each ref."
msgstr "Informação de saída de cada \"ref\"."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:19
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-for-each-repo[1]"
msgstr "linkgit:git-for-each-repo[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:21
#, priority:100
msgid "Run a Git command on a list of repositories."
msgstr "Execute um comando Git numa lista de repositórios."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:22
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-get-tar-commit-id[1]"
msgstr "linkgit:git-get-tar-commit-id[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:24
#, priority:100
msgid "Extract commit ID from an archive created using git-archive."
msgstr "Extrai o ID do commit de um arquivo criado utilizando o 'git-archive'."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:25
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-ls-files[1]"
msgstr "linkgit:git-ls-files[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:27
#, priority:100
msgid "Show information about files in the index and the working tree."
msgstr "Exiba a informação sobre os arquivos no índice e na árvore de trabalho."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:28
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-ls-remote[1]"
msgstr "linkgit:git-ls-remote[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:30
#, priority:100
msgid "List references in a remote repository."
msgstr "Lista as referências num repositório remoto."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:31
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-ls-tree[1]"
msgstr "linkgit:git-ls-tree[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:33
#, priority:100
msgid "List the contents of a tree object."
msgstr "Lista o conteúdo de uma árvore de objetos."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:34
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-merge-base[1]"
msgstr "linkgit:git-merge-base[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:36
#, priority:100
msgid "Find as good common ancestors as possible for a merge."
msgstr "Localize os melhores ancestrais possíveis para fazer uma mesclagem."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:37
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-name-rev[1]"
msgstr "linkgit:git-name-rev[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:39
#, priority:100
msgid "Find symbolic names for given revs."
msgstr "Localize os nomes simbólicos para os \"revs\" que foram informados."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:40
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-pack-redundant[1]"
msgstr "linkgit:git-pack-redundant[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:42
#, priority:100
msgid "Find redundant pack files."
msgstr "Localiza os arquivos \"pack\" que forem redundantes."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:43
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-rev-list[1]"
msgstr "linkgit:git-rev-list[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:45
#, priority:100
msgid "Lists commit objects in reverse chronological order."
msgstr "Lista os objetos de commit em ordem cronológica reversa."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:46
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-rev-parse[1]"
msgstr "linkgit:git-rev-parse[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:48
#, priority:100
msgid "Pick out and massage parameters."
msgstr "Escolha e modele os parâmetros."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:49
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-show-index[1]"
msgstr "linkgit:git-show-index[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:51
#, priority:100
msgid "Show packed archive index."
msgstr "Exiba o índice do arquivo empacotado."

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:52 en/git-for-each-ref.txt:424
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-show-ref[1]"
msgstr "linkgit:git-show-ref[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:54
#, priority:100
msgid "List references in a local repository."
msgstr "Lista as referências num repositório local."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:55
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-unpack-file[1]"
msgstr "linkgit:git-unpack-file[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:57
#, priority:100
msgid "Creates a temporary file with a blob's contents."
msgstr "Cria um arquivo temporário com conteúdos bolha."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:58
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-var[1]"
msgstr "linkgit:git-var[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:60
#, priority:100
msgid "Show a Git logical variable."
msgstr "Exiba uma variável lógica local para o Git."

#. type: Labeled list
#: en/cmds-plumbinginterrogators.txt:61
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-verify-pack[1]"
msgstr "linkgit:git-verify-pack[1]"

#. type: Plain text
#: en/cmds-plumbinginterrogators.txt:63
#, priority:100
msgid "Validate packed Git archive files."
msgstr "Valide os arquivos empacotados do Git."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:1
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-apply[1]"
msgstr "linkgit:git-apply[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:3
#, priority:100
msgid "Apply a patch to files and/or to the index."
msgstr "Aplique um patch nos arquivos e/ou ao índice."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:4
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-checkout-index[1]"
msgstr "linkgit:git-checkout-index[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:6
#, priority:100
msgid "Copy files from the index to the working tree."
msgstr "Copie os arquivos do índice para a árvore de trabalho."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-commit-graph[1]"
msgstr "linkgit:git-commit-graph[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:9
#, priority:100
msgid "Write and verify Git commit-graph files."
msgstr "Escreve e verifica os arquivos `commit-graph` do Git."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-commit-tree[1]"
msgstr "linkgit:git-commit-tree[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:12
#, priority:100
msgid "Create a new commit object."
msgstr "Cria um novo objeto commit."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-hash-object[1]"
msgstr "linkgit:git-hash-object[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:15
#, priority:100
msgid "Compute object ID and optionally creates a blob from a file."
msgstr "Calcula o ID do objeto e opcionalmente cria uma bolha vinda de um arquivo."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-index-pack[1]"
msgstr "linkgit:git-index-pack[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:18
#, priority:100
msgid "Build pack index file for an existing packed archive."
msgstr "Constrói um pacote índice do arquivo para um arquivo de pacote já existente."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:19
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-merge-file[1]"
msgstr "linkgit:git-merge-file[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:21
#, priority:100
msgid "Run a three-way file merge."
msgstr "Execute a mesclagem de um arquivo de três vias."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:22
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-merge-index[1]"
msgstr "linkgit:git-merge-index[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:24
#, priority:100
msgid "Run a merge for files needing merging."
msgstr "Execute uma mesclagem para os arquivos que precisam ser mesclados."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:25
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-mktag[1]"
msgstr "linkgit:git-mktag[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:27
#, priority:100
msgid "Creates a tag object with extra validation."
msgstr "Cria um objeto tag com validação extra."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:28
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-mktree[1]"
msgstr "linkgit:git-mktree[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:30
#, priority:100
msgid "Build a tree-object from ls-tree formatted text."
msgstr "Cria uma árvore-objeto de um texto com formatação `ls-tree`."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:31
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-multi-pack-index[1]"
msgstr "linkgit:git-multi-pack-index[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:33
#, priority:100
msgid "Write and verify multi-pack-indexes."
msgstr "Escreve e verifica os diversos índices dos pacotes."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:34
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-pack-objects[1]"
msgstr "linkgit:git-pack-objects[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:36
#, priority:100
msgid "Create a packed archive of objects."
msgstr "Cria um histórico empacotado dos objetos."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:37
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-prune-packed[1]"
msgstr "linkgit:git-prune-packed[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:39
#, priority:100
msgid "Remove extra objects that are already in pack files."
msgstr "Remove os objetos extras que estejam atualmente nos arquivos empacotados."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:40
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-read-tree[1]"
msgstr "linkgit:git-read-tree[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:42
#, priority:100
msgid "Reads tree information into the index."
msgstr "Lê a informação da árvore no índice."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:43
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-symbolic-ref[1]"
msgstr "linkgit:git-symbolic-ref[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:45
#, priority:100
msgid "Read, modify and delete symbolic refs."
msgstr "Lê, modifica e exclui os refs simbólicos."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:46
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-unpack-objects[1]"
msgstr "linkgit:git-unpack-objects[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:48
#, priority:100
msgid "Unpack objects from a packed archive."
msgstr "Desempacota os objetos de um arquivo empacotado."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:49
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-update-index[1]"
msgstr "linkgit:git-update-index[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:51
#, priority:100
msgid "Register file contents in the working tree to the index."
msgstr "Registra o conteúdo de um arquivo na árvore de trabalho para o índice."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:52
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-update-ref[1]"
msgstr "linkgit:git-update-ref[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:54
#, priority:100
msgid "Update the object name stored in a ref safely."
msgstr "Atualiza o nome do objeto armazenado num \"ref\" de forma segura."

#. type: Labeled list
#: en/cmds-plumbingmanipulators.txt:55
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-write-tree[1]"
msgstr "linkgit:git-write-tree[1]"

#. type: Plain text
#: en/cmds-plumbingmanipulators.txt:57
#, priority:100
msgid "Create a tree object from the current index."
msgstr "Cria um objeto árvore com base no índice atual."

#. type: Labeled list
#: en/cmds-purehelpers.txt:1
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-check-attr[1]"
msgstr "linkgit:git-check-attr[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:3
#, priority:100
msgid "Display gitattributes information."
msgstr "Exiba a informação do `gitattributes`."

#. type: Labeled list
#: en/cmds-purehelpers.txt:4
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-check-ignore[1]"
msgstr "linkgit:git-check-ignore[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:6
#, priority:100
msgid "Debug gitignore / exclude files."
msgstr "Depure o gitignore / exclua os arquivos."

#. type: Labeled list
#: en/cmds-purehelpers.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-check-mailmap[1]"
msgstr "linkgit:git-check-mailmap[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:9
#, priority:100
msgid "Show canonical names and email addresses of contacts."
msgstr "Exiba os nomes canônicos e os endereços de e-mail dos contatos."

#. type: Labeled list
#: en/cmds-purehelpers.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-check-ref-format[1]"
msgstr "linkgit:git-check-ref-format[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:12
#, priority:100
msgid "Ensures that a reference name is well formed."
msgstr "Certifique que um nome de uma referência está bem formado."

#. type: Labeled list
#: en/cmds-purehelpers.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-column[1]"
msgstr "linkgit:git-column[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:15
#, priority:100
msgid "Display data in columns."
msgstr "Exiba os dados em colunas."

#. type: Labeled list
#: en/cmds-purehelpers.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-credential[1]"
msgstr "linkgit:git-credential[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:18
#, priority:100
msgid "Retrieve and store user credentials."
msgstr "Obtém e guarda as credenciais dos usuários."

#. type: Labeled list
#: en/cmds-purehelpers.txt:19
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-credential-cache[1]"
msgstr "linkgit:git-credential-cache[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:21
#, priority:100
msgid "Helper to temporarily store passwords in memory."
msgstr "Auxiliar para armazenar as senhas temporariamente na memória."

#. type: Labeled list
#: en/cmds-purehelpers.txt:22
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-credential-store[1]"
msgstr "linkgit:git-credential-store[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:24
#, priority:100
msgid "Helper to store credentials on disk."
msgstr "Auxiliar para armazenar as credenciais no disco."

#. type: Labeled list
#: en/cmds-purehelpers.txt:25
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-fmt-merge-msg[1]"
msgstr "linkgit:git-fmt-merge-msg[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:27
#, priority:100
msgid "Produce a merge commit message."
msgstr "Gera uma mensagem de mesclagem do commit."

#. type: Labeled list
#: en/cmds-purehelpers.txt:28
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-hook[1]"
msgstr "linkgit:git-hook[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:30
#, priority:100
msgid "Run git hooks."
msgstr "Executa os ganchos do git."

#. type: Labeled list
#: en/cmds-purehelpers.txt:31
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-interpret-trailers[1]"
msgstr "linkgit:git-interpret-trailers[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:33
#, priority:100
msgid "Add or parse structured information in commit messages."
msgstr "Adiciona ou analisa as informações estruturadas nas mensagens do commit."

#. type: Labeled list
#: en/cmds-purehelpers.txt:34
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-mailinfo[1]"
msgstr "linkgit:git-mailinfo[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:36
#, priority:100
msgid "Extracts patch and authorship from a single e-mail message."
msgstr "Extrai a correção e o autor de uma única mensagem de e-mail."

#. type: Labeled list
#: en/cmds-purehelpers.txt:37
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-mailsplit[1]"
msgstr "linkgit:git-mailsplit[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:39
#, priority:100
msgid "Simple UNIX mbox splitter program."
msgstr "Programa simples para dividir o mbox UNIX."

#. type: Labeled list
#: en/cmds-purehelpers.txt:40
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-merge-one-file[1]"
msgstr "linkgit:git-merge-one-file[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:42
#, priority:100
msgid "The standard helper program to use with git-merge-index."
msgstr "O programa assistente predefinido de ajuda para usar com o `git-merge-index`."

#. type: Plain text
#: en/cmds-purehelpers.txt:43 en/git-cherry.txt:142
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-patch-id[1]"
msgstr "linkgit:git-patch-id[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:45
#, priority:100
msgid "Compute unique ID for a patch."
msgstr "Compute um ID único para um patch."

#. type: Labeled list
#: en/cmds-purehelpers.txt:46
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-sh-i18n[1]"
msgstr "linkgit:git-sh-i18n[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:48
#, priority:100
msgid "Git's i18n setup code for shell scripts."
msgstr "Código da configuração do i18n do Git para scripts shell."

#. type: Labeled list
#: en/cmds-purehelpers.txt:49
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-sh-setup[1]"
msgstr "linkgit:git-sh-setup[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:51
#, priority:100
msgid "Common Git shell script setup code."
msgstr "Código da configuração comum do script shell do Git."

#. type: Labeled list
#: en/cmds-purehelpers.txt:52
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-stripspace[1]"
msgstr "linkgit:git-stripspace[1]"

#. type: Plain text
#: en/cmds-purehelpers.txt:54
#, priority:100
msgid "Remove unnecessary whitespace."
msgstr "Remove os espaços desnecessários."

#. type: Labeled list
#: en/cmds-synchelpers.txt:1
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-http-fetch[1]"
msgstr "linkgit:git-http-fetch[1]"

#. type: Plain text
#: en/cmds-synchelpers.txt:3
#, priority:100
msgid "Download from a remote Git repository via HTTP."
msgstr "Faz o download de um repositório remoto Git através do HTTP."

#. type: Labeled list
#: en/cmds-synchelpers.txt:4
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-http-push[1]"
msgstr "linkgit:git-http-push[1]"

#. type: Plain text
#: en/cmds-synchelpers.txt:6
#, priority:100
msgid "Push objects over HTTP/DAV to another repository."
msgstr "Impulsiona (push) os objetos através do HTTP/DAV para um outro repositório."

#. type: Labeled list
#: en/cmds-synchelpers.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-receive-pack[1]"
msgstr "linkgit:git-receive-pack[1]"

#. type: Plain text
#: en/cmds-synchelpers.txt:9
#, priority:100
msgid "Receive what is pushed into the repository."
msgstr "Receba o que é impulsionado ao repositório."

#. type: Labeled list
#: en/cmds-synchelpers.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-shell[1]"
msgstr "linkgit:git-shell[1]"

#. type: Plain text
#: en/cmds-synchelpers.txt:12
#, priority:100
msgid "Restricted login shell for Git-only SSH access."
msgstr "Shell de login restrito para acesso somente com o SSH do Git."

#. type: Labeled list
#: en/cmds-synchelpers.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-upload-archive[1]"
msgstr "linkgit:git-upload-archive[1]"

#. type: Plain text
#: en/cmds-synchelpers.txt:15
#, priority:100
msgid "Send archive back to git-archive."
msgstr "Envia um arquivo de volta ao `git-archive`."

#. type: Labeled list
#: en/cmds-synchelpers.txt:16
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-upload-pack[1]"
msgstr "linkgit:git-upload-pack[1]"

#. type: Plain text
#: en/cmds-synchelpers.txt:18
#, priority:100
msgid "Send objects packed back to git-fetch-pack."
msgstr "Envia os objetos compactados para o `git-fetch-pack`."

#. type: Labeled list
#: en/cmds-synchingrepositories.txt:1
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-daemon[1]"
msgstr "linkgit:git-daemon[1]"

#. type: Plain text
#: en/cmds-synchingrepositories.txt:3
#, priority:100
msgid "A really simple server for Git repositories."
msgstr "Um servidor realmente simples para os repositórios Git."

#. type: Labeled list
#: en/cmds-synchingrepositories.txt:4
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-fetch-pack[1]"
msgstr "linkgit:git-fetch-pack[1]"

#. type: Plain text
#: en/cmds-synchingrepositories.txt:6
#, priority:100
msgid "Receive missing objects from another repository."
msgstr "Recebe os objetos que faltam de um outro repositório."

#. type: Labeled list
#: en/cmds-synchingrepositories.txt:7
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-http-backend[1]"
msgstr "linkgit:git-http-backend[1]"

#. type: Plain text
#: en/cmds-synchingrepositories.txt:9
#, priority:100
msgid "Server side implementation of Git over HTTP."
msgstr "Implementação do lado do servidor do Git através do HTTP."

#. type: Labeled list
#: en/cmds-synchingrepositories.txt:10
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-send-pack[1]"
msgstr "linkgit:git-send-pack[1]"

#. type: Plain text
#: en/cmds-synchingrepositories.txt:12
#, priority:100
msgid "Push objects over Git protocol to another repository."
msgstr "impulsiona os objetos sob o protocolo Git de um outro repositório."

#. type: Labeled list
#: en/cmds-synchingrepositories.txt:13
#, ignore-same, no-wrap, priority:100
msgid "linkgit:git-update-server-info[1]"
msgstr "linkgit:git-update-server-info[1]"

#. type: Plain text
#: en/cmds-synchingrepositories.txt:15
#, priority:100
msgid "Update auxiliary info file to help dumb servers."
msgstr "Atualiza a informação auxiliar sobre o arquivo para ajudar os servidores burros."

#. type: Title -
#: en/config.txt:2 en/git-worktree.txt:293
#, no-wrap, priority:240
msgid "CONFIGURATION FILE"
msgstr "ARQUIVO DE CONFIGURAÇÃO"

#. type: Plain text
#: en/config.txt:12
#, priority:100
msgid "The Git configuration file contains a number of variables that affect the Git commands' behavior. The files `.git/config` and optionally `config.worktree` (see the \"CONFIGURATION FILE\" section of linkgit:git-worktree[1]) in each repository are used to store the configuration for that repository, and `$HOME/.gitconfig` is used to store a per-user configuration as fallback values for the `.git/config` file. The file `/etc/gitconfig` can be used to store a system-wide default configuration."
msgstr "O arquivo de configuração do Git contém várias variáveis que afetam o comportamento dos comandos do Git. Os arquivos `.git/config` e opcionalmente `config.worktree` (consulte a seção \"ARQUIVO DE CONFIGURAÇÃO\" do linkgit:git-worktree[1]) em cada repositório são utilizados para armazenar a configuração para aquele repositório e o `$HOME/.gitconfig` é utilizado para armazenar uma configuração por usuário como valores alternativos para o arquivo `.git/config`. O arquivo `/etc/gitconfig` pode ser utilizado para armazenar a predefinição de uma configuração em todo o sistema."

#. type: Plain text
#: en/config.txt:21
#, priority:100
msgid "The configuration variables are used by both the Git plumbing and the porcelains. The variables are divided into sections, wherein the fully qualified variable name of the variable itself is the last dot-separated segment and the section name is everything before the last dot. The variable names are case-insensitive, allow only alphanumeric characters and `-`, and must start with an alphabetic character.  Some variables may appear multiple times; we say then that the variable is multivalued."
msgstr "As variáveis de configuração são utilizadas pelo encanamento Git e pelas porcelanas. As variáveis são divididas em seções em que o nome completo da variável da variável em si é o último segmento separado por ponto e o nome da seção é tudo que estiver antes do último ponto. Os nomes das variáveis não diferenciam maiúsculas de minúsculas, permitem apenas os caracteres alfanuméricos e `-` que devem começar com um caractere alfabético.  Algumas variáveis podem aparecer várias vezes; dizemos então que a variável possui diversos valores."

#. type: Title ~
#: en/config.txt:23
#, no-wrap, priority:100
msgid "Syntax"
msgstr "Sintaxe"

#. type: Plain text
#: en/config.txt:28
#, priority:100
msgid "The syntax is fairly flexible and permissive; whitespaces are mostly ignored.  The '#' and ';' characters begin comments to the end of line, blank lines are ignored."
msgstr "A sintaxe é bastante flexível e permissiva; os espaços são ignorados na maioria das vezes.  Os caracteres '#' e ';' define o começo dos comentários até o final da linha, as linhas em branco são ignoradas."

#. type: Plain text
#: en/config.txt:35
#, priority:100
msgid "The file consists of sections and variables.  A section begins with the name of the section in square brackets and continues until the next section begins.  Section names are case-insensitive.  Only alphanumeric characters, `-` and `.` are allowed in section names.  Each variable must belong to some section, which means that there must be a section header before the first setting of a variable."
msgstr "O arquivo consiste em seções e variáveis.  Uma seção começa com o nome da seção entre colchetes e continua até a próxima seção.  Os nomes de seção não diferenciam as maiúsculas das minúsculas.  Apenas os caracteres alfanuméricos, `-` e `.` são permitidos nos nomes das seções.  Cada variável deve pertencer a alguma seção, o que significa que deve haver um cabeçalho da seção antes da primeira configuração de uma variável."

#. type: Plain text
#: en/config.txt:39
#, priority:100
msgid "Sections can be further divided into subsections.  To begin a subsection put its name in double quotes, separated by space from the section name, in the section header, like in the example below:"
msgstr "As seções podem ser divididas em subseções.  Para iniciar uma subseção, coloque seu nome entre aspas duplas, separado por um espaço do nome da seção, no cabeçalho da seção, como no exemplo abaixo:"

#. type: delimited block -
#: en/config.txt:42
#, no-wrap, priority:100
msgid "\t[section \"subsection\"]\n"
msgstr "\t[seção \"subseção\"]\n"

#. type: Plain text
#: en/config.txt:53
#, priority:100
msgid "Subsection names are case sensitive and can contain any characters except newline and the null byte. Doublequote `\"` and backslash can be included by escaping them as `\\\"` and `\\\\`, respectively. Backslashes preceding other characters are dropped when reading; for example, `\\t` is read as `t` and `\\0` is read as `0`. Section headers cannot span multiple lines.  Variables may belong directly to a section or to a given subsection. You can have `[section]` if you have `[section \"subsection\"]`, but you don't need to."
msgstr "Os nomes das subseções diferenciam as maiúsculas das minúsculas, podem conter qualquer caractere, exceto os que definem uma nova linha e um byte nulo. As aspas duplas `\"` e a barra invertida podem ser incluídas escapando-as como` \\\"` e `\\\\` respectivamente. As barras invertidas anteriores aos outros caracteres são descartadas durante a leitura; por exemplo, `\\t` é lido como` t` e `\\0` é lido como `0`. Os cabeçalhos da seção não podem abranger várias linhas.  As variáveis podem pertencer diretamente a uma seção ou a uma determinada subseção. Você pode ter `[section]` caso tenha `[section \"subsection\"]`, mas não é necessário."

#. type: Plain text
#: en/config.txt:58
#, priority:100
msgid "There is also a deprecated `[section.subsection]` syntax. With this syntax, the subsection name is converted to lower-case and is also compared case sensitively. These subsection names follow the same restrictions as section names."
msgstr "Também existe uma sintaxe obsoleta `[section.subsection]`. Com esta sintaxe o nome da subseção é convertido em minúsculas e também é comparado com distinção entre maiúsculas e minúsculas. Estes nomes de subseções seguem as mesmas restrições que os nomes de seção."

#. type: Plain text
#: en/config.txt:65
#, priority:100
msgid "All the other lines (and the remainder of the line after the section header) are recognized as setting variables, in the form 'name = value' (or just 'name', which is a short-hand to say that the variable is the boolean \"true\").  The variable names are case-insensitive, allow only alphanumeric characters and `-`, and must start with an alphabetic character."
msgstr "Todas as outras linhas (e o restante da linha após o cabeçalho da seção) são reconhecidas como variáveis de configuração, no formato 'name=value' (ou apenas 'name', que é uma abreviação para dizer que a variável é um valor booleano 'true').  Os nomes das variáveis não diferenciam maiúsculas de minúsculas, permitem apenas os caracteres alfanuméricos e `-` que devem começar com um caractere alfabético."

#. type: Plain text
#: en/config.txt:73
#, priority:100
msgid "A line that defines a value can be continued to the next line by ending it with a `\\`; the backslash and the end-of-line are stripped.  Leading whitespaces after 'name =', the remainder of the line after the first comment character '#' or ';', and trailing whitespaces of the line are discarded unless they are enclosed in double quotes.  Internal whitespaces within the value are retained verbatim."
msgstr "Uma linha que define um valor pode ser continuada para a próxima linha, terminando com um `\\`; a barra inclinada e o final da linha são removidos.  São descartados os espaços à esquerda após 'name=', o restante da linha após o primeiro caractere de comentário '#' ou ';' e os espaços à direita da linha a menos que estejam entre aspas duplas.  Internamente os espaços com valores são retidos de forma literal."

#. type: Plain text
#: en/config.txt:76
#, priority:100
msgid "Inside double quotes, double quote `\"` and backslash `\\` characters must be escaped: use `\\\"` for `\"` and `\\\\` for `\\`."
msgstr "Dentro de uma aspa dupla `\"` e barra invertida `\\` os caracteres podem ser utilizados literalmente: utilize `\\\"` para `\"` e `\\\\` para `\\`."

#. type: Plain text
#: en/config.txt:81
#, priority:100
msgid "The following escape sequences (beside `\\\"` and `\\\\`) are recognized: `\\n` for newline character (NL), `\\t` for horizontal tabulation (HT, TAB)  and `\\b` for backspace (BS).  Other char escape sequences (including octal escape sequences) are invalid."
msgstr "As seguintes sequências de escape (ao lado de `\\\"` e `\\\\`) são reconhecidos: `\\n` para caracteres de nova linha (NL), `\\t` para tabulação horizontal (HT, TAB)  e `\\b` para o backspace (BS).  São validas também as outras sequências de escape de caracteres (incluindo sequências de escape octais)."

#. type: Title ~
#: en/config.txt:84
#, no-wrap, priority:100
msgid "Includes"
msgstr "Inclui"

#. type: Plain text
#: en/config.txt:91
#, priority:100
msgid "The `include` and `includeIf` sections allow you to include config directives from another source. These sections behave identically to each other with the exception that `includeIf` sections may be ignored if their condition does not evaluate to true; see \"Conditional includes\" below."
msgstr "As seções `include` e `includeIf` permitem que você inclua diretivas da configuração de outra fonte. Estas seções se comportam de forma idêntica, com exceção das seções `includeIf` que podem ser ignorados se a sua condição não for avaliada como verdadeira; consulte \"Inclusão condicional\" abaixo."

#. type: Plain text
#: en/config.txt:96
#, priority:100
msgid "You can include a config file from another by setting the special `include.path` (or `includeIf.*.path`) variable to the name of the file to be included. The variable takes a pathname as its value, and is subject to tilde expansion. These variables can be given multiple times."
msgstr "Você pode incluir um arquivo da configuração de outro configurando a variável especial `include.path` (ou `includeIf.*.path`) como o nome do arquivo a ser incluído. A variável assume um nome do caminho como seu valor e está sujeita à expansão do til. Estas variáveis podem ser utilizadas várias vezes."

#. type: Plain text
#: en/config.txt:102
#, priority:100
msgid "The contents of the included file are inserted immediately, as if they had been found at the location of the include directive. If the value of the variable is a relative path, the path is considered to be relative to the configuration file in which the include directive was found.  See below for examples."
msgstr "O conteúdo do arquivo incluído é inserido imediatamente, como se tivesse sido encontrado no local da diretiva de inclusão. Caso o valor da variável seja um caminho relativo, o caminho será considerado relativo ao arquivo da configuração no qual a diretiva de inclusão foi encontrada.  Veja os exemplos abaixo."

#. type: Title ~
#: en/config.txt:104
#, no-wrap, priority:100
msgid "Conditional includes"
msgstr "Inclusão condicional"

#. type: Plain text
#: en/config.txt:109
#, priority:100
msgid "You can include a config file from another conditionally by setting a `includeIf.<condition>.path` variable to the name of the file to be included."
msgstr "Você pode incluir um arquivo da configuração de outro condicionalmente setando uma variável `includeIf.<condição>.path` para o nome do arquivo que será incluído."

#. type: Plain text
#: en/config.txt:113
#, priority:100
msgid "The condition starts with a keyword followed by a colon and some data whose format and meaning depends on the keyword. Supported keywords are:"
msgstr "A condição começa com uma palavra-chave seguida de dois pontos e alguns dados cujo formato e significado dependem da palavra-chave. As palavras-chave compatíveis são:"

#. type: Labeled list
#: en/config.txt:114
#, ignore-same, no-wrap, priority:100
msgid "`gitdir`"
msgstr "`gitdir`"

#. type: Plain text
#: en/config.txt:119
#, priority:100
msgid "The data that follows the keyword `gitdir:` is used as a glob pattern. If the location of the .git directory matches the pattern, the include condition is met."
msgstr "Os dados que seguem a palavra-chave `gitdir:` são utilizados como um padrão de agrupamento. Caso o local do diretório .git coincida com o padrão, a condição de inclusão será atendida."

#. type: Plain text
#: en/config.txt:124
#, priority:100
msgid "The .git location may be auto-discovered, or come from `$GIT_DIR` environment variable. If the repository is auto discovered via a .git file (e.g. from submodules, or a linked worktree), the .git location would be the final location where the .git directory is, not where the"
msgstr "O local .git pode ser descoberto automaticamente ou vir da variável de ambiente `$GIT_DIR`. Caso o repositório seja descoberto automaticamente por meio de um arquivo .git (de submódulos ou uma árvore de trabalho vinculada por exemplo), o local .git será o local final onde está o diretório .git, e não onde o"

#. type: Block title
#: en/config.txt:124
#, no-wrap, priority:100
msgid "git file is."
msgstr "o que o arquivo git seja."

#. type: Plain text
#: en/config.txt:129
#, priority:100
msgid "The pattern can contain standard globbing wildcards and two additional ones, `**/` and `/**`, that can match multiple path components. Please refer to linkgit:gitignore[5] for details. For convenience:"
msgstr "O padrão pode conter curingas de mascaramento padrão e dois adicionais, `**/` e `/**`, que podem coincidir com diversos componentes do caminho. Para mais detalhes, consulte o linkgit:gitignore[5] para detalhes. Por conveniência:"

#. type: Plain text
#: en/config.txt:132
#, priority:100
msgid "If the pattern starts with `~/`, `~` will be substituted with the content of the environment variable `HOME`."
msgstr "Caso o padrão comece com `~/`, `~` será substituído com o conteúdo da variável de ambiente `HOME`."

#. type: Plain text
#: en/config.txt:135
#, priority:100
msgid "If the pattern starts with `./`, it is replaced with the directory containing the current config file."
msgstr "Caso o padrão comece com `./`, é substituído com o diretório contendo o arquivo da configuração atual."

#. type: Plain text
#: en/config.txt:139
#, priority:100
msgid "If the pattern does not start with either `~/`, `./` or `/`, `**/` will be automatically prepended. For example, the pattern `foo/bar` becomes `**/foo/bar` and would match `/any/path/to/foo/bar`."
msgstr "Caso o padrão não comece com com nenhum `~/`, `./` ou `/`, `**/` será anexado automaticamente. O padrão `foo/bar` se torna `**/foo/bar` e coincidirá com `/qualquer/caminho/para/foo/bar` por exemplo."

#. type: Plain text
#: en/config.txt:143
#, priority:100
msgid "If the pattern ends with `/`, `**` will be automatically added. For example, the pattern `foo/` becomes `foo/**`. In other words, it matches \"foo\" and everything inside, recursively."
msgstr "Caso o padrão termine com `/`, `**` será adicionado automaticamente. O padrão `foo/` se torna `foo/**` por exemplo. Em outras palavras, ele combina \"foo\" e tudo dentro, recursivamente."

#. type: Labeled list
#: en/config.txt:144
#, no-wrap, priority:100
msgid "`gitdir/i`"
msgstr "`gitdir/i`"

#. type: Plain text
#: en/config.txt:147
#, priority:100
msgid "This is the same as `gitdir` except that matching is done case-insensitively (e.g. on case-insensitive file systems)"
msgstr "É o mesmo que `gitdir` exceto que a coincidência é feita sem distinguir as maiúsculas das minusculas (em sistemas onde seja indiferente o sistema de arquivos não se importa com maiúsculas de minusculas)"

#. type: Labeled list
#: en/config.txt:148
#, ignore-same, no-wrap, priority:100
msgid "`onbranch`"
msgstr "`onbranch`"

#. type: Plain text
#: en/config.txt:155
#, priority:100
msgid "The data that follows the keyword `onbranch:` is taken to be a pattern with standard globbing wildcards and two additional ones, `**/` and `/**`, that can match multiple path components.  If we are in a worktree where the name of the branch that is currently checked out matches the pattern, the include condition is met."
msgstr "Os dados que seguem a palavra-chave `onbranch:` são considerados um padrão com caracteres curinga de mascaramento predefinidos e dois adicionais, `**/` e `/**`, que podem coincidir com vários componentes do caminho.  Caso estejamos em uma árvore de trabalho cujo nome do ramo atual com check-out coincida com o padrão, a inclusão condicional será atendida."

#. type: Plain text
#: en/config.txt:161
#, priority:100
msgid "If the pattern ends with `/`, `**` will be automatically added. For example, the pattern `foo/` becomes `foo/**`. In other words, it matches all branches that begin with `foo/`. This is useful if your branches are organized hierarchically and you would like to apply a configuration to all the branches in that hierarchy."
msgstr "Caso o padrão termine com `/`, `**` será adicionado automaticamente. O padrão `foo/` se torna `foo/**` por exemplo. Em outras palavras, ele coincide com todos os ramos que começam com `foo/`. Isso é útil pois caso as suas ramificações estejam organizadas hierarquicamente e você queira aplicar uma configuração em todas as ramificações nesta hierarquia."

#. type: Labeled list
#: en/config.txt:162
#, no-wrap, priority:100
msgid "`hasconfig:remote.*.url:`"
msgstr "`hasconfig:remote.*.url:`"

#. type: Plain text
#: en/config.txt:170
#, priority:100
msgid "The data that follows this keyword is taken to be a pattern with standard globbing wildcards and two additional ones, `**/` and `/**`, that can match multiple components. The first time this keyword is seen, the rest of the config files will be scanned for remote URLs (without applying any values). If there exists at least one remote URL that matches this pattern, the include condition is met."
msgstr "Os dados que seguem esta palavra-chave são tomados como um padrão com curingas e dois adicionais, `**/` e `/**`, que podem corresponder com vários componentes. A primeira vez que esta palavra-chave for vista, o resto dos arquivos de configuração serão verificados com as URLs remotas (sem aplicar nenhum valor). Se existir pelo menos uma URL remota que corresponda a este padrão, a condição de inclusão será satisfeita."

#. type: Plain text
#: en/config.txt:173
#, priority:100
msgid "Files included by this option (directly or indirectly) are not allowed to contain remote URLs."
msgstr "Os arquivos inclusos por esta opção (direta ou indiretamente) não podem conter URLs remotas."

#. type: Plain text
#: en/config.txt:184
#, priority:100
msgid "Note that unlike other includeIf conditions, resolving this condition relies on information that is not yet known at the point of reading the condition. A typical use case is this option being present as a system-level or global-level config, and the remote URL being in a local-level config; hence the need to scan ahead when resolving this condition. In order to avoid the chicken-and-egg problem in which potentially-included files can affect whether such files are potentially included, Git breaks the cycle by prohibiting these files from affecting the resolution of these conditions (thus, prohibiting them from declaring remote URLs)."
msgstr "Note que, ao contrário de outras condições, resolver essa condição depende de informações que ainda não são conhecidas no momento da leitura da condição. Um caso de uso típico é que essa opção está presente como uma configuração a nível de sistema ou uma configuração de global, a URL remota está em uma configuração de nível local; daí a necessidade de digitalizar à frente ao resolver essa condição. A fim de evitar conflitos onde os arquivos incluídos podem afetar se tais arquivos estão potencialmente inclusos, o Git quebra o ciclo, proibindo estes arquivos de afetar a resolução destas condições (assim, proibindo-os de declarar URLs remotas)."

#. type: Plain text
#: en/config.txt:188
#, priority:100
msgid "As for the naming of this keyword, it is for forwards compatibiliy with a naming scheme that supports more variable-based include conditions, but currently Git only supports the exact keyword described above."
msgstr "Quanto à nomenclatura desta palavra-chave, serve como compatibilidade direta com um esquema de nomenclatura que suporta mais condições de inclusão com base nas variáveis, porém atualmente, o Git suporta apenas a palavra-chave exata descrita acima."

#. type: Plain text
#: en/config.txt:190
#, priority:100
msgid "A few more notes on matching via `gitdir` and `gitdir/i`:"
msgstr "Algumas poucas anotações sobre coincidir através de `gitdir` e `gitdir/i`:"

#. type: Plain text
#: en/config.txt:192
#, priority:100
msgid "Symlinks in `$GIT_DIR` are not resolved before matching."
msgstr "Os \"symlinks\" (links simbólicos) em `$GIT_DIR` não são resolvidos antes que sejam coincididos."

#. type: Plain text
#: en/config.txt:197
#, priority:100
msgid "Both the symlink & realpath versions of paths will be matched outside of `$GIT_DIR`. E.g. if ~/git is a symlink to /mnt/storage/git, both `gitdir:~/git` and `gitdir:/mnt/storage/git` will match."
msgstr "Ambas as versões do \"symlink\" (links simbólico) e do \"realpath\" (caminho real) dos caminhos serão coincididos fora do `$GIT_DIR`. Por exemplo, caso `~/git` seja um link simbólico para /mnt/storage/git, ambos os `gitdir:~/git` e `gitdir:/mnt/storage/git` coincidirão."

#. type: Plain text
#: en/config.txt:202
#, priority:100
msgid "This was not the case in the initial release of this feature in v2.13.0, which only matched the realpath version. Configuration that wants to be compatible with the initial release of this feature needs to either specify only the realpath version, or both versions."
msgstr "Este não foi o caso no lançamento inicial desse recurso na versão v2.13.0, que coincidia apenas à versão do caminho real. A configuração que queira ser compatível com o lançamento inicial deste recurso precisa definir apenas a versão do caminho real ou das duas versões."

#. type: Plain text
#: en/config.txt:205
#, priority:100
msgid "Note that \"../\" is not special and will match literally, which is unlikely what you want."
msgstr "Note que \"../\" não é especial e não irá coincidir literalmente, o que não é o que você quer."

#. type: Title ~
#: en/config.txt:207 en/git-rev-parse.txt:385 en/git-rev-parse.txt:441
#, no-wrap, priority:100
msgid "Example"
msgstr "Exemplo"

#. type: delimited block -
#: en/config.txt:214
#, no-wrap, priority:100
msgid ""
"# Core variables\n"
"[core]\n"
"\t; Don't trust file modes\n"
"\tfilemode = false\n"
msgstr ""
"# Principais variáveis\n"
"[core]\n"
"\t; Não confie nos modos dos arquivos\n"
"\tfilemode = false\n"

#. type: delimited block -
#: en/config.txt:219
#, no-wrap, priority:100
msgid ""
"# Our diff algorithm\n"
"[diff]\n"
"\texternal = /usr/local/bin/diff-wrapper\n"
"\trenames = true\n"
msgstr ""
"# Nosso algoritmo diff\n"
"[diff]\n"
"\texternal = /usr/local/bin/diff-wrapper\n"
"\trenames = true\n"

#. type: delimited block -
#: en/config.txt:223
#, no-wrap, priority:100
msgid ""
"[branch \"devel\"]\n"
"\tremote = origin\n"
"\tmerge = refs/heads/devel\n"
msgstr ""
"[ramo \"devel\"]\n"
"\tremote = origin\n"
"\tmerge = refs/heads/devel\n"

#. type: delimited block -
#: en/config.txt:228
#, no-wrap, priority:100
msgid ""
"# Proxy settings\n"
"[core]\n"
"\tgitProxy=\"ssh\" for \"kernel.org\"\n"
"\tgitProxy=default-proxy ; for the rest\n"
msgstr ""
"# Configurações de proxy\n"
"[core]\n"
"\tgitProxy=\"ssh\" for \"kernel.org\"\n"
"\tgitProxy=default-proxy ; for the rest\n"

#. type: delimited block -
#: en/config.txt:233
#, no-wrap, priority:100
msgid ""
"[include]\n"
"\tpath = /path/to/foo.inc ; include by absolute path\n"
"\tpath = foo.inc ; find \"foo.inc\" relative to the current file\n"
"\tpath = ~/foo.inc ; find \"foo.inc\" in your `$HOME` directory\n"
msgstr ""
"[include]\n"
"\tpath = /path/to/foo.inc ; incluído através de um caminho absoluto\n"
"\tpath = foo.inc ; find \"foo.inc\" relativo ao arquivo atual\n"
"\tpath = ~/foo.inc ; find \"foo.inc\" no seu diretório `$HOME`\n"

#. type: delimited block -
#: en/config.txt:237
#, no-wrap, priority:100
msgid ""
"; include if $GIT_DIR is /path/to/foo/.git\n"
"[includeIf \"gitdir:/path/to/foo/.git\"]\n"
"\tpath = /path/to/foo.inc\n"
msgstr ""
"; inclua caso $GIT_DIR seja /path/to/foo/.git\n"
"[includeIf \"gitdir:/path/to/foo/.git\"]\n"
"\tpath = /path/to/foo.inc\n"

#. type: delimited block -
#: en/config.txt:241
#, no-wrap, priority:100
msgid ""
"; include for all repositories inside /path/to/group\n"
"[includeIf \"gitdir:/path/to/group/\"]\n"
"\tpath = /path/to/foo.inc\n"
msgstr ""
"; inclua em todos os repositórios dentro do /path/to/group\n"
"[includeIf \"gitdir:/path/to/group/\"]\n"
"\tpath = /path/to/foo.inc\n"

#. type: delimited block -
#: en/config.txt:245
#, no-wrap, priority:100
msgid ""
"; include for all repositories inside $HOME/to/group\n"
"[includeIf \"gitdir:~/to/group/\"]\n"
"\tpath = /path/to/foo.inc\n"
msgstr ""
"; inclua em todos os repositórios dentro do $HOME/to/group\n"
"[includeIf \"gitdir:~/to/group/\"]\n"
"\tpath = /path/to/foo.inc\n"

#. type: delimited block -
#: en/config.txt:251
#, no-wrap, priority:100
msgid ""
"; relative paths are always relative to the including\n"
"; file (if the condition is true); their location is not\n"
"; affected by the condition\n"
"[includeIf \"gitdir:/path/to/group/\"]\n"
"\tpath = foo.inc\n"
msgstr ""
"; os caminhos relativos são sempre relativos à inclusão\n"
"; do arquivo (caso a condição seja verdadeira); a sua localização não é\n"
"; afetada pela condição\n"
"[includeIf \"gitdir:/path/to/group/\"]\n"
"\tpath = foo.inc\n"

#. type: delimited block -
#: en/config.txt:256
#, no-wrap, priority:100
msgid ""
"; include only if we are in a worktree where foo-branch is\n"
"; currently checked out\n"
"[includeIf \"onbranch:foo-branch\"]\n"
"\tpath = foo.inc\n"
msgstr ""
"; inclua apenas caso estejamos em uma árvore de trabalho\n"
"; onde \"foo-branch\" seja verificado\n"
"[includeIf \"onbranch:foo-branch\"]\n"
"\tpath = foo.inc\n"

#. type: delimited block -
#: en/config.txt:264
#, no-wrap, priority:100
msgid ""
"; include only if a remote with the given URL exists (note\n"
"; that such a URL may be provided later in a file or in a\n"
"; file read after this file is read, as seen in this example)\n"
"[includeIf \"hasconfig:remote.*.url:https://example.com/**\"]\n"
"\tpath = foo.inc\n"
"[remote \"origin\"]\n"
"\turl = https://example.com/git\n"
msgstr ""
"; inclua apenas caso exista um ramo remoto com a URL fornecida (observe\n"
"; que tal URL pode ser fornecida posteriormente num arquivo ou num\n"
"; arquivo lido após este arquivo ser lido, como visto neste exemplo)\n"
"[includeIf \"hasconfig:remote.*.url:https://example.com/**\"]\n"
"\tpath = foo.inc\n"
"[remote \"origin\"]\n"
"\turl = https://example.com/git\n"

#. type: Title ~
#: en/config.txt:267
#, no-wrap, priority:100
msgid "Values"
msgstr "Valores"

#. type: Plain text
#: en/config.txt:272
#, priority:100
msgid "Values of many variables are treated as a simple string, but there are variables that take values of specific types and there are rules as to how to spell them."
msgstr "Os Valores das várias variáveis são tratadas como uma cadeia de caracteres simples, porém existem variáveis que pegam os valores de tipos específicos e existem regras de como soletrá-los."

#. type: Labeled list
#: en/config.txt:273
#, no-wrap, priority:100
msgid "boolean"
msgstr "booleano"

#. type: Plain text
#: en/config.txt:278
#, priority:100
msgid "When a variable is said to take a boolean value, many synonyms are accepted for 'true' and 'false'; these are all case-insensitive."
msgstr "Quando uma variável pega um valor booleano, muitos sinônimos são aceitos para 'true' e 'false', estes são todos insensíveis as mudanças de maiúsculas e minusculas."

#. type: Labeled list
#: en/config.txt:279
#, no-wrap, priority:100
msgid "true"
msgstr "verdadeiro"

#. type: Plain text
#: en/config.txt:282
#, priority:100
msgid "Boolean true literals are `yes`, `on`, `true`, and `1`.  Also, a variable defined without `= <value>` is taken as true."
msgstr "Os verdadeiros literais booleanos são `yes`, `on`, `true` e `1`.  Além disso, é considerada como verdadeira uma variável definida sem `= <valor>`."

#. type: Labeled list
#: en/config.txt:283
#, no-wrap, priority:100
msgid "false"
msgstr "falso"

#. type: Plain text
#: en/config.txt:285
#, priority:100
msgid "Boolean false literals are `no`, `off`, `false`, `0` and the empty string."
msgstr "Os falsos literais booleanos são `no`, `off`, `false`, `0` e a string vazia."

#. type: Plain text
#: en/config.txt:289
#, priority:100
msgid "When converting a value to its canonical form using the `--type=bool` type specifier, 'git config' will ensure that the output is \"true\" or \"false\" (spelled in lowercase)."
msgstr "Quando converter um valor para a sua forma canônica utilizando o `--type=bool`, tipo de especificação 'git config' se assegurará que a saída seja 'true' ou 'false' (em minusculas)."

#. type: Labeled list
#: en/config.txt:290
#, no-wrap, priority:100
msgid "integer"
msgstr "inteiro"

#. type: Plain text
#: en/config.txt:294
#, ignore-ellipsis, priority:100
msgid "The value for many variables that specify various sizes can be suffixed with `k`, `M`,... to mean \"scale the number by 1024\", \"by 1024x1024\", etc."
msgstr "O valor das muitas variáveis que determinam os vários tamanhos podem ter como sufixo `k`, `M`,... que significa \"escale o número por 1024\", \"por 1024x1024\", etc."

#. type: Labeled list
#: en/config.txt:295 en/diff-options.txt:434 en/git-for-each-ref.txt:175
#, ignore-same, no-wrap, priority:280
msgid "color"
msgstr "color"

#. type: Plain text
#: en/config.txt:299
#, priority:100
msgid "The value for a variable that takes a color is a list of colors (at most two, one for foreground and one for background)  and attributes (as many as you want), separated by spaces."
msgstr "O valor de uma variável que pega uma cor de uma lista de cores (ao menos duas, uma para o primeiro plano e outra para o plano de fundo) e os atributos (quantos queira), separados por espaços."

#. type: Plain text
#: en/config.txt:305
#, priority:100
msgid "The basic colors accepted are `normal`, `black`, `red`, `green`, `yellow`, `blue`, `magenta`, `cyan`, `white` and `default`.  The first color given is the foreground; the second is the background.  All the basic colors except `normal` and `default` have a bright variant that can be specified by prefixing the color with `bright`, like `brightred`."
msgstr "As cores básicas que são aceitas são `normal` (normal), `black` (preto) , `red` (vermelho) , `green` (verde), `yellow` (amarelo) , `blue` (azul), `magenta` (magenta), `cyan` (ciano), `white` (branco) e `default` (predefinido).  A primeira cor é o primeiro plano; a segunda é o plano de fundo.  Todas as cores básicas, exceto `normal` e `default`, possuem uma variante brilhante da cor que pode ser definida com `bright`, assim como `brightred`."

#. type: Plain text
#: en/config.txt:309
#, priority:100
msgid "The color `normal` makes no change to the color. It is the same as an empty string, but can be used as the foreground color when specifying a background color alone (for example, \"normal red\")."
msgstr "A cor `normal` não faz qualquer alteração na cor. É o mesmo que uma string vazia mas pode ser usada como a cor do primeiro plano ao definir apenas uma cor de fundo (\"normal red\" por exemplo)."

#. type: Plain text
#: en/config.txt:313
#, priority:100
msgid "The color `default` explicitly resets the color to the terminal default, for example to specify a cleared background. Although it varies between terminals, this is usually not the same as setting to \"white black\"."
msgstr "A cor `default` repõe explicitamente a cor predefinida do terminal, por exemplo, para definir um fundo sem cor. Embora varie entre os terminais, isso normalmente não é o mesmo que definir para \"white black\" (branco preto)."

#. type: Plain text
#: en/config.txt:318
#, priority:100
msgid "Colors may also be given as numbers between 0 and 255; these use ANSI 256-color mode (but note that not all terminals may support this).  If your terminal supports it, you may also specify 24-bit RGB values as hex, like `#ff0ab3`."
msgstr "As cores também podem ser utilizadas como números entre 0 e 255; estes usam o modo ANSI com 256 cores (note que nem todos os terminais são compatíveis).  Caso o seu terminal seja compatível, você também pode definir os valores RGB de 24 bits como hexadecimais, `#ff0ab3` por exemplo."

#. type: Plain text
#: en/config.txt:325
#, priority:100
msgid "The accepted attributes are `bold`, `dim`, `ul`, `blink`, `reverse`, `italic`, and `strike` (for crossed-out or \"strikethrough\" letters).  The position of any attributes with respect to the colors (before, after, or in between), doesn't matter. Specific attributes may be turned off by prefixing them with `no` or `no-` (e.g., `noreverse`, `no-ul`, etc)."
msgstr "Os atributos compatíveis são `bold`, `dim`, `ul`, `blink`, `reverse`, `italic`, e `strike` (para letras cruzadas  ou \"rasuradas\").  A posição de qualquer atributo em relação às cores (antes, depois ou entre) não importa. Atributos específicos podem ser desativados prefixando-os com `no` ou `no-` (por exemplo `noreverse`, `no-ul`, etc)."

#. type: Plain text
#: en/config.txt:330
#, priority:100
msgid "The pseudo-attribute `reset` resets all colors and attributes before applying the specified coloring. For example, `reset green` will result in a green foreground and default background without any active attributes."
msgstr "O pseudo-atributo `reset` redefine todas as cores e os atributos antes de aplicar a cor definida. Por exemplo, o `reset green` resultará em um primeiro plano verde e o fundo padrão sem qualquer atributo ativo."

#. type: Plain text
#: en/config.txt:333
#, priority:100
msgid "An empty color string produces no color effect at all. This can be used to avoid coloring specific elements without disabling color entirely."
msgstr "Uma sequência de cores vazias não produz nenhum efeito de cor. Isso pode ser utilizado para evitar colorir elementos específicos sem desabilitar totalmente a cor."

#. type: Plain text
#: en/config.txt:342
#, priority:100
msgid "For git's pre-defined color slots, the attributes are meant to be reset at the beginning of each item in the colored output. So setting `color.decorate.branch` to `black` will paint that branch name in a plain `black`, even if the previous thing on the same output line (e.g.  opening parenthesis before the list of branch names in `log --decorate` output) is set to be painted with `bold` or some other attribute.  However, custom log formats may do more complicated and layered coloring, and the negated forms may be useful there."
msgstr "Para os slots com as cores predefinidas do git, os atributos devem ser redefinidos no início de cada item na saída colorida. Portanto ao definir a variável `color.decorate.branch` como` black` pintará esse nome do ramo como `preto` simples, mesmo se a coisa anterior na mesma linha de saída (abrir parênteses antes da lista dos nomes das ramificações na saída de `log --decorate` por exemplo) é definido para ser pintado com `bold` (negrito) ou algum outro atributo.  No entanto, os formatos dos registros log personalizados podem fazer uma coloração mais complicada e em camadas, as formas negadas podem ser úteis lá."

#. type: Labeled list
#: en/config.txt:343
#, no-wrap, priority:100
msgid "pathname"
msgstr "caminho do diretório"

#. type: Plain text
#: en/config.txt:349
#, priority:100
msgid "A variable that takes a pathname value can be given a string that begins with \"`~/`\" or \"`~user/`\", and the usual tilde expansion happens to such a string: `~/` is expanded to the value of `$HOME`, and `~user/` to the specified user's home directory."
msgstr "Uma variável que recebe um valor para o nome do caminho pode receber uma cadeia de caracteres que começa com \"`~/`\" ou \"`~user/`\", a expansão usual do til acontece com essa cadeia de caracteres: `~/` é expandida para o valor `$HOME`, e `~user/` para o diretório inicial do usuário que foi definido."

#. type: Plain text
#: en/config.txt:358
#, priority:100
msgid "If a path starts with `%(prefix)/`, the remainder is interpreted as a path relative to Git's \"runtime prefix\", i.e. relative to the location where Git itself was installed. For example, `%(prefix)/bin/` refers to the directory in which the Git executable itself lives. If Git was compiled without runtime prefix support, the compiled-in prefix will be substituted instead. In the unlikely event that a literal path needs to be specified that should _not_ be expanded, it needs to be prefixed by `./`, like so: `./%(prefix)/bin`."
msgstr "Caso um caminho comece com `%(prefixo)/`, o restante será interpretado como um caminho em relação ao \"prefixo de tempo de execução\" do Git, ou seja, em relação ao local onde o próprio Git foi instalado. Por exemplo, `%(prefixo)/bin/` refere-se ao diretório onde o próprio executável Git está. Se o Git for compilado sem suporte ao \"runtime prefix support\" (prefixo de tempo de execução), o prefixo compilado será substituído. No caso improvável de que um caminho literal precise ser especificado e que não_ deva_ser expandido, ele precisa ser prefixado por `./`, assim: `./%(prefixo)/bin`."

#. type: Title ~
#: en/config.txt:361
#, no-wrap, priority:100
msgid "Variables"
msgstr "Variáveis"

#. type: Plain text
#: en/config.txt:366
#, priority:100
msgid "Note that this list is non-comprehensive and not necessarily complete.  For command-specific variables, you will find a more detailed description in the appropriate manual page."
msgstr "Observe que esta lista não é abrangente e não está completa.  Para variáveis específicas do comando, você encontrará uma descrição mais detalhada na página apropriada do manual."

#. type: Plain text
#: en/config.txt:371
#, priority:100
msgid "Other git-related tools may and do use their own variables.  When inventing new variables for use in your own tool, make sure their names do not conflict with those that are used by Git itself and other popular tools, and describe them in your documentation."
msgstr "Outras ferramentas relacionadas ao `git-related` podem usar as suas próprias variáveis.  Ao inventar novas variáveis para utilização em sua própria ferramenta, certifique-se que os seus respectivos nomes não entram em conflito com os que já são utilizados pelo próprio Git e outras ferramentas populares, e descreva-os em sua documentação."

#. type: Labeled list
#: en/config/merge.txt:1
#, ignore-same, no-wrap, priority:240
msgid "merge.conflictStyle"
msgstr "merge.conflictStyle"

#. type: Plain text
#: en/config/merge.txt:15
#, priority:240
msgid "Specify the style in which conflicted hunks are written out to working tree files upon merge.  The default is \"merge\", which shows a `<<<<<<<` conflict marker, changes made by one side, a `=======` marker, changes made by the other side, and then a `>>>>>>>` marker.  An alternate style, \"diff3\", adds a `|||||||` marker and the original text before the `=======` marker.  The \"merge\" style tends to produce smaller conflict regions than diff3, both because of the exclusion of the original text, and because when a subset of lines match on the two sides they are just pulled out of the conflict region.  Another alternate style, \"zdiff3\", is similar to diff3 but removes matching lines on the two sides from the conflict region when those matching lines appear near either the beginning or end of a conflict region."
msgstr "Especifique o estilo no qual os blocos em conflito são gravados nos arquivos da árvore de trabalho durante a mesclagem.  A predefinição é \"mesclar\", onde exibe um marcador de conflito `<<<<<<<` nas modificações feitas por um lado, o `=======` marca as modificações feita pelo outro lado e então a marca `>>>>>>>`.  Um estilo alternativo, \"diff3\", adiciona um marcador `|||||||` e o texto original antes do marcador `=======`. O estilo \"merge\" tende a produzir menos regiões com conflito se comparado com o diff3, seja por causa da exclusão do texto original, seja porque quando um subconjunto das linhas combine nos dois lados elas são retiradas da região em conflito. O outro estilo alternativo, \"zdiff3\", é semelhante ao diff3 mas remove as linhas correspondentes nos dois lados da região em conflito quando essas linhas correspondentes aparecem perto do início ou do fim de uma região em conflito."

#. type: Labeled list
#: en/config/merge.txt:16
#, ignore-same, no-wrap, priority:240
msgid "merge.defaultToUpstream"
msgstr "merge.defaultToUpstream"

#. type: Plain text
#: en/config/merge.txt:25
#, priority:240
msgid "If merge is called without any commit argument, merge the upstream branches configured for the current branch by using their last observed values stored in their remote-tracking branches.  The values of the `branch.<current branch>.merge` that name the branches at the remote named by `branch.<current branch>.remote` are consulted, and then they are mapped via `remote.<remote>.fetch` to their corresponding remote-tracking branches, and the tips of these tracking branches are merged. Defaults to true."
msgstr "Se a mesclagem for chamada sem nenhum argumento para o commit, mescle as ramificações \"upstream\" configuradas para a ramificação atual utilizando os seus últimos valores observados e armazenados nos seus ramos monitorados remotamente.  Os valores do `branch.<ramo atual>.merge` que nomeiam as ramificações remotas, nomeadas através da consulta do `branch.<ramo atual>.remote` e em seguida são mapeadas através de `remote.<remoto>.fetch` para as suas ramificações coincidentes monitoradas remotamente, as pontas destas ramificações monitoradas são mescladas. A predefinição é true."

#. type: Labeled list
#: en/config/merge.txt:26
#, ignore-same, no-wrap, priority:240
msgid "merge.ff"
msgstr "merge.ff"

#. type: Plain text
#: en/config/merge.txt:35
#, priority:240
msgid "By default, Git does not create an extra merge commit when merging a commit that is a descendant of the current commit. Instead, the tip of the current branch is fast-forwarded. When set to `false`, this variable tells Git to create an extra merge commit in such a case (equivalent to giving the `--no-ff` option from the command line). When set to `only`, only such fast-forward merges are allowed (equivalent to giving the `--ff-only` option from the command line)."
msgstr "É predefinido que o Git não crie um commit de mesclagem extra ao mesclar um commit que seja descendente do commit atual. Em vez disso, a ponta do ramo atual é avançado rapidamente (fast-forwarded). Essa variável quando definida como `false` diz ao Git para criar um commit de mesclagem extra nesse caso (equivalente a utilizar a opção `--no-ff` na linha de comando). Quando definido como `only`, somente essas mesclagens de avanço rápido são permitidas (equivalente a fornecer a opção` --ff-only` na linha de comando)."

#. type: Labeled list
#: en/config/merge.txt:36
#, ignore-same, no-wrap, priority:240
msgid "merge.verifySignatures"
msgstr "merge.verifySignatures"

#. type: Plain text
#: en/config/merge.txt:39
#, priority:240
msgid "If true, this is equivalent to the --verify-signatures command line option. See linkgit:git-merge[1] for details."
msgstr "Se verdadeiro (true), equivale à opção da linha de comando `--verify-signatures`. Para mais detalhes consulte linkgit:git-merge[1]."

#. type: Labeled list
#: en/config/merge.txt:42
#, ignore-same, no-wrap, priority:240
msgid "merge.renameLimit"
msgstr "merge.renameLimit"

#. type: Plain text
#: en/config/merge.txt:49
#, priority:240
msgid "The number of files to consider in the exhaustive portion of rename detection during a merge.  If not specified, defaults to the value of diff.renameLimit.  If neither merge.renameLimit nor diff.renameLimit are specified, currently defaults to 7000.  This setting has no effect if rename detection is turned off."
msgstr "A quantidade de arquivos que serão considerados na exaustiva parte da detecção do renomeio durante uma mesclagem. Caso não seja especificado, o valor padrão é o valor de `diff.renameLimit`. Caso nada seja definido em `merge.renameLimit` e `diff.renameLimit`, o valor predefinido será 7000. Esta configuração não tem efeito caso a detecção de renomeação esteja desativada."

#. type: Labeled list
#: en/config/merge.txt:50
#, ignore-same, no-wrap, priority:240
msgid "merge.renames"
msgstr "merge.renames"

#. type: Plain text
#: en/config/merge.txt:54
#, priority:240
msgid "Whether Git detects renames.  If set to \"false\", rename detection is disabled. If set to \"true\", basic rename detection is enabled.  Defaults to the value of diff.renames."
msgstr "Se o Git detecta renomeações.  Se definido como 'false', a detecção da renomeação será desativada. Se definido como 'true', a detecção básica da renomeação será ativada.  A predefinição é o valor existente na opção de configuração `diff.renames`."

#. type: Labeled list
#: en/config/merge.txt:55
#, ignore-same, no-wrap, priority:240
msgid "merge.directoryRenames"
msgstr "merge.directoryRenames"

#. type: Plain text
#: en/config/merge.txt:67
#, priority:240
msgid "Whether Git detects directory renames, affecting what happens at merge time to new files added to a directory on one side of history when that directory was renamed on the other side of history.  If merge.directoryRenames is set to \"false\", directory rename detection is disabled, meaning that such new files will be left behind in the old directory.  If set to \"true\", directory rename detection is enabled, meaning that such new files will be moved into the new directory.  If set to \"conflict\", a conflict will be reported for such paths.  If merge.renames is false, merge.directoryRenames is ignored and treated as false.  Defaults to \"conflict\"."
msgstr "Se o Git detecta a renomeação de um diretório, afeta o que acontece no momento da mesclagem para os novos arquivos que foram adicionados para um diretório em um lado do histórico, quando este diretório foi renomeado do outro lado do histórico.  Caso `merge.directoryRenames` esteja definido como 'false', a detecção da renomeação do diretório será desativada, o que significa que estes novos arquivos serão deixados para trás no diretório antigo.  Caso seja definido como 'true', a detecção da renomeação do diretório será ativada, o que significa que esses novos arquivos serão movidos para o novo diretório.  Caso seja definido como \"conflict\", um conflito será relatado para tais caminhos.  Caso `merge.renames` seja 'false', a variável `merge.directoryRenames` será ignorada e tratado como 'false'.  A predefinição retorna para \"conflict\"."

#. type: Labeled list
#: en/config/merge.txt:68
#, ignore-same, no-wrap, priority:240
msgid "merge.renormalize"
msgstr "merge.renormalize"

#. type: Plain text
#: en/config/merge.txt:77
#, priority:240
msgid "Tell Git that canonical representation of files in the repository has changed over time (e.g. earlier commits record text files with CRLF line endings, but recent ones use LF line endings).  In such a repository, Git can convert the data recorded in commits to a canonical form before performing a merge to reduce unnecessary conflicts.  For more information, see section \"Merging branches with differing checkin/checkout attributes\" in linkgit:gitattributes[5]."
msgstr "Diga ao Git que a representação canônica dos arquivos no repositório mudou ao longo do tempo (os commits mais recentes registra os arquivos de texto com terminações de linha tipo CRLF, porém os mais  recentes utilizam terminações de linha tipo LF).  Em repositórios deste tipo o Git pode converter os dados registrados nos commits para um formato canônico antes de realizar uma mesclagem visando reduzir conflitos desnecessários.  Para obter mais informações consulte a seção \"Mesclando as ramificações com diferentes atributos de check-in/check-out\" em linkgit:gitattributes[5]."

#. type: Labeled list
#: en/config/merge.txt:78
#, ignore-same, no-wrap, priority:240
msgid "merge.stat"
msgstr "merge.stat"

#. type: Plain text
#: en/config/merge.txt:81
#, priority:240
msgid "Whether to print the diffstat between ORIG_HEAD and the merge result at the end of the merge.  True by default."
msgstr "Se deve imprimir a diferença entre `ORIG_HEAD` e o resultado da mesclagem no final da mesclagem.  A predefinição é `true`."

#. type: Labeled list
#: en/config/merge.txt:82
#, ignore-same, no-wrap, priority:240
msgid "merge.autoStash"
msgstr "merge.autoStash"

#. type: Plain text
#: en/config/merge.txt:91
#, priority:240
msgid "When set to true, automatically create a temporary stash entry before the operation begins, and apply it after the operation ends.  This means that you can run merge on a dirty worktree.  However, use with care: the final stash application after a successful merge might result in non-trivial conflicts.  This option can be overridden by the `--no-autostash` and `--autostash` options of linkgit:git-merge[1].  Defaults to false."
msgstr "Quando definido como 'true', crie automaticamente uma entrada \"stash\" temporária antes do início da operação e aplique-a ao concluir.  Significa que você pode executar a mesclagem em uma árvore de trabalho \"dirty\" (suja).  No entanto, utilize com cuidado: os conflitos não triviais podem acontecer caso a aplicação final do \"stash\" ocorra após uma mesclagem bem-sucedida.  Esta opção pode ser substituída pelas opções `--no-autostash` e `--autostash` do linkgit:git-merge[1].  A predefinição retorna para o valor `false`."

#. type: Labeled list
#: en/config/merge.txt:92
#, ignore-same, no-wrap, priority:240
msgid "merge.tool"
msgstr "merge.tool"

#. type: Plain text
#: en/config/merge.txt:97
#, priority:240
msgid "Controls which merge tool is used by linkgit:git-mergetool[1].  The list below shows the valid built-in values.  Any other value is treated as a custom merge tool and requires that a corresponding mergetool.<tool>.cmd variable is defined."
msgstr "Controla qual a ferramenta de mesclagem é utilizada pelo linkgit:git-mergetool[1].  A lista abaixo exibe os valores predefinidos que são válidos .  Qualquer outro valor é tratado como uma ferramenta de mesclagem personalizada e requer que uma variável `mergetool.<ferramenta>.cmd` correspondente seja definida."

#. type: Labeled list
#: en/config/merge.txt:98
#, ignore-same, no-wrap, priority:240
msgid "merge.guitool"
msgstr "merge.guitool"

#. type: Plain text
#: en/config/merge.txt:103
#, priority:240
msgid "Controls which merge tool is used by linkgit:git-mergetool[1] when the -g/--gui flag is specified. The list below shows the valid built-in values.  Any other value is treated as a custom merge tool and requires that a corresponding mergetool.<guitool>.cmd variable is defined."
msgstr "Controla qual a ferramenta de mesclagem é utilizada pelo linkgit:git-mergetool[1] quando a opção `-g/--gui` for utilizada. A lista abaixo exibe os valores predefinidos que são válidos .  Qualquer outro valor é tratado como uma ferramenta de mesclagem personalizada e requer que uma variável `mergetool.<guitool>.cmd` correspondente seja definida."

#. type: Labeled list
#: en/config/merge.txt:106
#, ignore-same, no-wrap, priority:240
msgid "merge.verbosity"
msgstr "merge.verbosity"

#. type: Plain text
#: en/config/merge.txt:113
#, priority:240
msgid "Controls the amount of output shown by the recursive merge strategy.  Level 0 outputs nothing except a final error message if conflicts were detected. Level 1 outputs only conflicts, 2 outputs conflicts and file changes.  Level 5 and above outputs debugging information.  The default is level 2.  Can be overridden by the `GIT_MERGE_VERBOSITY` environment variable."
msgstr "Controla a quantidade de saída exibida pela estratégia de mesclagem recursiva.  O level 0 não envia nada, exceto uma mensagem final de erro, caso conflitos sejam detectados. O level 1 gera apenas os conflitos na saída, o 2 gera conflitos e alterações nos arquivos.  O level 5 e acima gera informações de depuração.  2 é o valor predefinido.  Pode ser substituído pela variável de ambiente `GIT_MERGE_VERBOSITY`."

#. type: Labeled list
#: en/config/merge.txt:114
#, no-wrap, priority:240
msgid "merge.<driver>.name"
msgstr "merge.<driver>.name"

#. type: Plain text
#: en/config/merge.txt:117
#, priority:240
msgid "Defines a human-readable name for a custom low-level merge driver.  See linkgit:gitattributes[5] for details."
msgstr "Define um nome legível para o controle de mesclagem personalizado de baixo nível.  Para mais detalhes consulte linkgit:gitattributes[5]."

#. type: Labeled list
#: en/config/merge.txt:118
#, no-wrap, priority:240
msgid "merge.<driver>.driver"
msgstr "merge.<driver>.driver"

#. type: Plain text
#: en/config/merge.txt:121
#, priority:240
msgid "Defines the command that implements a custom low-level merge driver.  See linkgit:gitattributes[5] for details."
msgstr "Define o comando que irá implementar o controle de mesclagem personalizado de baixo nível.  Para mais detalhes consulte linkgit:gitattributes[5]."

#. type: Labeled list
#: en/config/merge.txt:122
#, no-wrap, priority:240
msgid "merge.<driver>.recursive"
msgstr "merge.<driver>.recursive"

#. type: Plain text
#: en/config/merge.txt:125
#, priority:240
msgid "Names a low-level merge driver to be used when performing an internal merge between common ancestors.  See linkgit:gitattributes[5] for details."
msgstr "Nomeia um controle de mesclagem de baixo nível que será utilizado durante a execução de uma mesclagem dos ancestrais em comum.  Para mais detalhes consulte linkgit:gitattributes[5]."

#. type: Labeled list
#: en/config/fmt-merge-msg.txt:1
#, ignore-same, no-wrap, priority:240
msgid "merge.branchdesc"
msgstr "merge.branchdesc"

#. type: Plain text
#: en/config/fmt-merge-msg.txt:5
#, priority:240
msgid "In addition to branch names, populate the log message with the branch description text associated with them.  Defaults to false."
msgstr "Além dos nomes das ramificações, preencha a mensagem do registro log com as descrições em formato texto associadas com ela.  A predefinição retorna para o valor `false`."

#. type: Labeled list
#: en/config/fmt-merge-msg.txt:6
#, ignore-same, no-wrap, priority:240
msgid "merge.log"
msgstr "merge.log"

#. type: Plain text
#: en/config/fmt-merge-msg.txt:11
#, priority:240
msgid "In addition to branch names, populate the log message with at most the specified number of one-line descriptions from the actual commits that are being merged.  Defaults to false, and true is a synonym for 20."
msgstr "Além dos nomes das ramificações, preencha o registro log com a mensagem com pelo menos a quantidade máxima usada nas descrições de uma linha a partir dos commits reais que estão sendo mesclados.  A predefinição retorna para o valor 'false' ou 'true' caso um sinônimo seja 20."

#. type: Labeled list
#: en/config/fmt-merge-msg.txt:12
#, ignore-same, no-wrap, priority:240
msgid "merge.suppressDest"
msgstr "merge.suppressDest"

#. type: Plain text
#: en/config/fmt-merge-msg.txt:18
#, priority:240
msgid "By adding a glob that matches the names of integration branches to this multi-valued configuration variable, the default merge message computed for merges into these integration branches will omit \"into <branch name>\" from its title."
msgstr "Ao adicionar um \"glob\" que coincida com os vários valores dos nomes das integrações dos ramos desta variável de configuração, o \"into <nome do ramo>\" será omitido do título na mensagem predefinida da mescla computada para as mesclagens integradas destes ramos."

#. type: Plain text
#: en/config/fmt-merge-msg.txt:22
#, priority:240
msgid "An element with an empty value can be used to clear the list of globs accumulated from previous configuration entries.  When there is no `merge.suppressDest` variable defined, the default value of `master` is used for backward compatibility."
msgstr "Um elemento sem valor pode ser usado para limpar a lista dos globs que estejam acumulados nas entradas de configuração anteriores.  Quando não há uma variável `merge.suppressDest`, o valor predefinido do `master` é utilizado para ser compatível com as versões anteriores."

#. type: Title -
#: en/date-formats.txt:2
#, no-wrap, priority:280
msgid "DATE FORMATS"
msgstr "OS FORMATOS DA DATA"

#. type: Plain text
#: en/date-formats.txt:6
#, priority:280
msgid "The `GIT_AUTHOR_DATE` and `GIT_COMMITTER_DATE` environment variables support the following date formats:"
msgstr "As variáveis de ambiente `GIT_AUTHOR_DATE` e `GIT_COMMITTER_DATE` são compatíveis com os seguintes formatos de data:"

#. type: Labeled list
#: en/date-formats.txt:7
#, no-wrap, priority:280
msgid "Git internal format"
msgstr "Formato interno do Git"

#. type: Plain text
#: en/date-formats.txt:12
#, priority:280
msgid "It is `<unix-timestamp> <time-zone-offset>`, where `<unix-timestamp>` is the number of seconds since the UNIX epoch.  `<time-zone-offset>` is a positive or negative offset from UTC.  For example CET (which is 1 hour ahead of UTC) is `+0100`."
msgstr "É `<unix-timestamp> <time-zone-offset>`, onde desde a época do UNIX `<unix-timestamp>` é o valor em segundos.  O `<time-zone-offset>` é o desvio positivo ou negativo a partir do UTC.  O CET por exemplo (onde é 1 hora à frente do UTC ) é `+0100`."

#. type: Labeled list
#: en/date-formats.txt:13
#, no-wrap, priority:280
msgid "RFC 2822"
msgstr "RFC 2822"

#. type: Plain text
#: en/date-formats.txt:16
#, priority:280
msgid "The standard email format as described by RFC 2822, for example `Thu, 07 Apr 2005 22:13:13 +0200`."
msgstr "O formato de e-mail padrão, conforme descrito pela RFC 2822, por exemplo, `Thu, 07 Apr 2005 22:13:13 +0200`."

#. type: Labeled list
#: en/date-formats.txt:17
#, no-wrap, priority:280
msgid "ISO 8601"
msgstr "ISO 8601"

#. type: Plain text
#: en/date-formats.txt:23
#, priority:280
msgid "Time and date specified by the ISO 8601 standard, for example `2005-04-07T22:13:13`. The parser accepts a space instead of the `T` character as well. Fractional parts of a second will be ignored, for example `2005-04-07T22:13:13.019` will be treated as `2005-04-07T22:13:13`."
msgstr "A data e hora definidas pela norma ISO 8601 `2005-04-07T22:13:13` por exemplo. O analisador também aceita um espaço em vez do caractere `T`. O analisador aceita um espaço em vez do caractere `T` também. As partes fracionadas de um segundo serão ignoradas, logo `2005-04-07T22:13:13.019` por exemplo, será tratada como `2005-04-07T22:13:13`."

#. type: Plain text
#: en/date-formats.txt:26
#, priority:280
msgid "In addition, the date part is accepted in the following formats: `YYYY.MM.DD`, `MM/DD/YYYY` and `DD.MM.YYYY`."
msgstr "Além disso, a parte da data é aceita nos seguintes formatos: `YYYY.MM.DD`, `MM/DD/YYYY` e `DD.MM.YYYY`."

#. type: Plain text
#: en/date-formats.txt:31
#, priority:280
msgid "In addition to recognizing all date formats above, the `--date` option will also try to make sense of other, more human-centric date formats, such as relative dates like \"yesterday\" or \"last Friday at noon\"."
msgstr "Além de reconhecer todos os formatos da data acima, a opção `--date` também tentará dar sentido aos outros formatos para que sejam legíveis, como \"ontem\" ou \"a última sexta-feira ao meio-dia\"."

#. type: Title -
#: en/diff-format.txt:2
#, no-wrap, priority:280
msgid "Raw output format"
msgstr "Gerando o formato bruto"

#. type: Plain text
#: en/diff-format.txt:6
#, priority:280
msgid "The raw output format from \"git-diff-index\", \"git-diff-tree\", \"git-diff-files\" and \"git diff --raw\" are very similar."
msgstr "O formato bruto gerado com os comandos \"git-diff-index\", \"git-diff-tree\", \"git-diff-files\" e \"git diff --raw\" são muito parecidos."

#. type: Plain text
#: en/diff-format.txt:9
#, priority:280
msgid "These commands all compare two sets of things; what is compared differs:"
msgstr "Todos estes comandos comparam dois conjuntos de coisas; o que é comparado difere de:"

#. type: Labeled list
#: en/diff-format.txt:10
#, no-wrap, priority:280
msgid "git-diff-index <tree-ish>"
msgstr "git-diff-index <árvore>"

#. type: Plain text
#: en/diff-format.txt:12
#, priority:280
msgid "compares the <tree-ish> and the files on the filesystem."
msgstr "compara a <árvore> e os arquivos no sistema de arquivos."

#. type: Labeled list
#: en/diff-format.txt:13
#, no-wrap, priority:280
msgid "git-diff-index --cached <tree-ish>"
msgstr "git-diff-index --cached <árvore>"

#. type: Plain text
#: en/diff-format.txt:15
#, priority:280
msgid "compares the <tree-ish> and the index."
msgstr "compara a <árvore> e o índice."

#. type: Labeled list
#: en/diff-format.txt:16
#, ignore-ellipsis, no-wrap, priority:280
msgid "git-diff-tree [-r] <tree-ish-1> <tree-ish-2> [<pattern>...]"
msgstr "git-diff-tree [-r] <tree-ish-1> <tree-ish-2> [<padrão>...]"

#. type: Plain text
#: en/diff-format.txt:18
#, priority:280
msgid "compares the trees named by the two arguments."
msgstr "compara as árvores citadas pelos dois argumentos."

#. type: Labeled list
#: en/diff-format.txt:19
#, ignore-ellipsis, no-wrap, priority:280
msgid "git-diff-files [<pattern>...]"
msgstr "git-diff-files [<padrão>...]"

#. type: Plain text
#: en/diff-format.txt:21
#, priority:280
msgid "compares the index and the files on the filesystem."
msgstr "compara o índice e os arquivos no sistema de arquivos."

#. type: Plain text
#: en/diff-format.txt:25
#, priority:280
msgid "The \"git-diff-tree\" command begins its output by printing the hash of what is being compared. After that, all the commands print one output line per changed file."
msgstr "O comando \"git-diff-tree\" inicia a sua saída imprimindo o hash do que está sendo comparado. Depois disso, todos os comandos imprimem uma linha na saída por arquivo modificado."

#. type: Plain text
#: en/diff-format.txt:27
#, priority:280
msgid "An output line is formatted this way:"
msgstr "A linha na saída é formatada da seguinte maneira:"

#. type: delimited block -
#: en/diff-format.txt:35
#, no-wrap, priority:280
msgid ""
"in-place edit  :100644 100644 bcd1234 0123456 M file0\n"
"copy-edit      :100644 100644 abcd123 1234567 C68 file1 file2\n"
"rename-edit    :100644 100644 abcd123 1234567 R86 file1 file3\n"
"create         :000000 100644 0000000 1234567 A file4\n"
"delete         :100644 000000 1234567 0000000 D file5\n"
"unmerged       :000000 000000 0000000 0000000 U file6\n"
msgstr ""
"edição no local  :100644 100644 bcd1234 0123456 M   arquivo0\n"
"copiar editar    :100644 100644 abcd123 1234567 C68 arquivo1 arquivo2\n"
"renomear editar  :100644 100644 abcd123 1234567 R86 arquivo1 arquivo3\n"
"criar            :000000 100644 0000000 1234567 A   arquivo4\n"
"excluir          :100644 000000 1234567 0000000 D   arquivo5\n"
"não mesclado     :000000 000000 0000000 0000000 U   arquivo6\n"

#. type: Plain text
#: en/diff-format.txt:38
#, priority:280
msgid "That is, from the left to the right:"
msgstr "Ou seja, da esquerda para a direita:"

#. type: Plain text
#: en/diff-format.txt:40
#, priority:280
msgid "a colon."
msgstr "dois pontos."

#. type: Plain text
#: en/diff-format.txt:41
#, priority:280
msgid "mode for \"src\"; 000000 if creation or unmerged."
msgstr "Um modo para \"src\"; 000000 caso seja criado ou não mesclado."

#. type: Plain text
#: en/diff-format.txt:42 en/diff-format.txt:44 en/diff-format.txt:46 en/diff-format.txt:48
#, priority:280
msgid "a space."
msgstr "um espaço."

#. type: Plain text
#: en/diff-format.txt:43
#, priority:280
msgid "mode for \"dst\"; 000000 if deletion or unmerged."
msgstr "O modo para \"dst\"; 000000 caso seja excluído ou não mesclado."

#. type: Plain text
#: en/diff-format.txt:45
#, priority:280
msgid "sha1 for \"src\"; 0\\{40\\} if creation or unmerged."
msgstr "sha1 para \"src\"; 0\\{40\\} caso seja criado ou não mesclado."

#. type: Plain text
#: en/diff-format.txt:47
#, fuzzy, priority:280
#| msgid "sha1 for \"dst\"; 0\\{40\\} if creation, unmerged or \"look at work tree\"."
msgid "sha1 for \"dst\"; 0\\{40\\} if deletion, unmerged or \"work tree out of sync with the index\"."
msgstr "sha1 para \"dst\"; 0\\{40\\} caso seja criado, não mesclado ou \"consultar a árvore de trabalho\"."

#. type: Plain text
#: en/diff-format.txt:49
#, priority:280
msgid "status, followed by optional \"score\" number."
msgstr "status, seguido pelo número \"score\" opcional."

#. type: Plain text
#: en/diff-format.txt:50
#, priority:280
msgid "a tab or a NUL when `-z` option is used."
msgstr "uma aba ou um NUL quando a opção `-z` é utilizada."

#. type: Plain text
#: en/diff-format.txt:51
#, priority:280
msgid "path for \"src\""
msgstr "path para \"src\""

#. type: Plain text
#: en/diff-format.txt:52
#, priority:280
msgid "a tab or a NUL when `-z` option is used; only exists for C or R."
msgstr "uma aba ou um NUL quando a opção `-z` é utilizada; existe apenas para C ou R."

#. type: Plain text
#: en/diff-format.txt:53
#, priority:280
msgid "path for \"dst\"; only exists for C or R."
msgstr "path para \"dst\"; existe apenas para C ou R."

#. type: Plain text
#: en/diff-format.txt:54
#, priority:280
msgid "an LF or a NUL when `-z` option is used, to terminate the record."
msgstr "um LF ou um NUL quando a opção `-z` é utilizada para finalizar o registro."

#. type: Plain text
#: en/diff-format.txt:56
#, priority:280
msgid "Possible status letters are:"
msgstr "As possíveis letras que exibem a condição são:"

#. type: Plain text
#: en/diff-format.txt:58
#, priority:280
msgid "A: addition of a file"
msgstr "A: a adição de um arquivo"

#. type: Plain text
#: en/diff-format.txt:59
#, priority:280
msgid "C: copy of a file into a new one"
msgstr "C: a cópia de um arquivo para um novo"

#. type: Plain text
#: en/diff-format.txt:60
#, priority:280
msgid "D: deletion of a file"
msgstr "D: a exclusão de um arquivo"

#. type: Plain text
#: en/diff-format.txt:61
#, priority:280
msgid "M: modification of the contents or mode of a file"
msgstr "M: a modificação do conteúdo ou do modo de um arquivo"

#. type: Plain text
#: en/diff-format.txt:62
#, priority:280
msgid "R: renaming of a file"
msgstr "R: uma renomeação de um arquivo"

#. type: Plain text
#: en/diff-format.txt:63
#, priority:280
msgid "T: change in the type of the file (regular file, symbolic link or submodule)"
msgstr "T: altera o tipo do arquivo (arquivo regular, link simbólico ou submódulo)"

#. type: Plain text
#: en/diff-format.txt:65
#, priority:280
msgid "U: file is unmerged (you must complete the merge before it can be committed)"
msgstr "U: o arquivo está sem mesclagem (você deve concluir a mesclagem antes que o commit possa ser feito)"

#. type: Plain text
#: en/diff-format.txt:66
#, priority:280
msgid "X: \"unknown\" change type (most probably a bug, please report it)"
msgstr "X: um tipo de alteração \"desconhecida\" (provavelmente um bug, por favor denuncie)"

#. type: Plain text
#: en/diff-format.txt:71
#, priority:280
msgid "Status letters C and R are always followed by a score (denoting the percentage of similarity between the source and target of the move or copy).  Status letter M may be followed by a score (denoting the percentage of dissimilarity) for file rewrites."
msgstr "As letras de condição C e R sempre são seguidas por uma pontuação (indicando a porcentagem da semelhança entre a origem e o destino da movimentação ou da cópia).  A letra de condição M pode ser seguida por uma pontuação (denotando a porcentagem de dissimilaridade) para reescrever os arquivos."

#. type: Plain text
#: en/diff-format.txt:74
#, fuzzy, priority:280
#| msgid "<sha1> is shown as all 0's if a file is new on the filesystem and it is out of sync with the index."
msgid "The sha1 for \"dst\" is shown as all 0's if a file on the filesystem is out of sync with the index."
msgstr "O <sha1> é exibido zerado caso um arquivo seja novo no sistema de arquivos e esteja fora de sincronia com o índice."

#. type: Labeled list
#: en/diff-format.txt:76 en/git-svn.txt:499 en/git-svn.txt:539
#, no-wrap, priority:280
msgid "Example:"
msgstr "Exemplo:"

#. type: delimited block -
#: en/diff-format.txt:79
#, no-wrap, priority:280
msgid ":100644 100644 5be4a4a 0000000 M file.c\n"
msgstr ":100644 100644 5be4a4a 0000000 M file.c\n"

#. type: Plain text
#: en/diff-format.txt:85 en/git-ls-files.txt:232 en/git-ls-tree.txt:134
#, priority:280
msgid "Without the `-z` option, pathnames with \"unusual\" characters are quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1]).  Using `-z` the filename is output verbatim and the line is terminated by a NUL byte."
msgstr "Sem a opção `z`, os `pathnames` com os caracteres \"incomuns\" são citados conforme explicado na variável de configuração `core.quotePath` (consulte linkgit:git-config[1]).  Utilizando a opção `-z`, o nome do arquivo é gerado literalmente e a linha é finalizada com um byte `NUL`."

#. type: Title -
#: en/diff-format.txt:87
#, no-wrap, priority:280
msgid "diff format for merges"
msgstr "O formato diff para as mesclagens"

#. type: Plain text
#: en/diff-format.txt:93
#, priority:280
msgid "\"git-diff-tree\", \"git-diff-files\" and \"git-diff --raw\" can take `-c` or `--cc` option to generate diff output also for merge commits.  The output differs from the format described above in the following way:"
msgstr "Os comandos \"git-diff-tree\", \"git-diff-files\" e \"git-diff --raw\" podem utilizar as opções `-c` ou `--cc` para também gerar uma saída \"diff\" com os commits mesclados.  A saída difere do formato descrito acima da seguinte maneira:"

#. type: Plain text
#: en/diff-format.txt:95
#, priority:280
msgid "there is a colon for each parent"
msgstr "há dois pontos para cada origem"

#. type: Plain text
#: en/diff-format.txt:96
#, priority:280
msgid "there are more \"src\" modes and \"src\" sha1"
msgstr "existem mais modos \"src\" e \"src\" sha1"

#. type: Plain text
#: en/diff-format.txt:97
#, priority:280
msgid "status is concatenated status characters for each parent"
msgstr "a condição é concatenada como uma condição dos caracteres para cada origem"

#. type: Plain text
#: en/diff-format.txt:98
#, priority:280
msgid "no optional \"score\" number"
msgstr "sem um número \"score\" opcional"

#. type: Plain text
#: en/diff-format.txt:99
#, priority:280
msgid "tab-separated pathname(s) of the file"
msgstr "os caminho(s) separado(s) por tabulações do arquivo"

#. type: Plain text
#: en/diff-format.txt:104
#, priority:280
msgid "For `-c` and `--cc`, only the destination or final path is shown even if the file was renamed on any side of history.  With `--combined-all-paths`, the name of the path in each parent is shown followed by the name of the path in the merge commit."
msgstr "Para as opções `-c` e `--cc` apenas o destino ou o caminho final é exibido ainda que o arquivo tenha sido renomeado em qualquer parte do histórico.  Com a opção `--combined-all-paths`, o nome do caminho em cada origem é exibido seguido pelo nome do caminho durante a mesclagem do commit."

#. type: Plain text
#: en/diff-format.txt:106
#, priority:280
msgid "Examples for `-c` and `--cc` without `--combined-all-paths`:"
msgstr "Exemplos para as opções `-c` e `--cc` sem utilizar a opção `--combined-all-paths`:"

#. type: delimited block -
#: en/diff-format.txt:110
#, no-wrap, priority:280
msgid ""
"::100644 100644 100644 fabadb8 cc95eb0 4866510 MM\tdesc.c\n"
"::100755 100755 100755 52b7a2d 6d1ac04 d2ac7d7 RM\tbar.sh\n"
"::100644 100644 100644 e07d6c5 9042e82 ee91881 RR\tphooey.c\n"
msgstr ""
"::100644 100644 100644 fabadb8 cc95eb0 4866510 MM\tdesc.c\n"
"::100755 100755 100755 52b7a2d 6d1ac04 d2ac7d7 RM\tbar.sh\n"
"::100644 100644 100644 e07d6c5 9042e82 ee91881 RR\tphooey.c\n"

#. type: Plain text
#: en/diff-format.txt:113
#, priority:280
msgid "Examples when `--combined-all-paths` added to either `-c` or `--cc`:"
msgstr "Exemplos quando a opção `--combined-all-paths` é adicionado entre `-c` ou `--cc`:"

#. type: delimited block -
#: en/diff-format.txt:118
#, no-wrap, priority:280
msgid ""
"::100644 100644 100644 fabadb8 cc95eb0 4866510 MM\tdesc.c\tdesc.c\tdesc.c\n"
"::100755 100755 100755 52b7a2d 6d1ac04 d2ac7d7 RM\tfoo.sh\tbar.sh\tbar.sh\n"
"::100644 100644 100644 e07d6c5 9042e82 ee91881 RR\tfooey.c\tfuey.c\tphooey.c\n"
msgstr ""
"::100644 100644 100644 fabadb8 cc95eb0 4866510 MM\tdesc.c\tdesc.c\tdesc.c\n"
"::100755 100755 100755 52b7a2d 6d1ac04 d2ac7d7 RM\tfoo.sh\tbar.sh\tbar.sh\n"
"::100644 100644 100644 e07d6c5 9042e82 ee91881 RR\tfooey.c\tfuey.c\tphooey.c\n"

#. type: Plain text
#: en/diff-format.txt:122
#, priority:280
msgid "Note that 'combined diff' lists only files which were modified from all parents."
msgstr "Note que o 'diff combinado' lista apenas os arquivos que foram alterados em todas as origems."

#. type: Title -
#: en/diff-format.txt:128
#, no-wrap, priority:280
msgid "other diff formats"
msgstr "Outros formatos diff"

#. type: Plain text
#: en/diff-format.txt:134
#, priority:280
msgid "The `--summary` option describes newly added, deleted, renamed and copied files.  The `--stat` option adds diffstat(1) graph to the output.  These options can be combined with other options, such as `-p`, and are meant for human consumption."
msgstr "A opção `--summary` descreve os arquivos adicionados, excluídos, renomeados e copiados recentemente.  A opção `--stat` adiciona o grafo diffstat(1) à saída.  Estas opções podem ser combinadas com outras opções como `-p`, que são legíveis para nós."

#. type: Plain text
#: en/diff-format.txt:139
#, priority:280
msgid "When showing a change that involves a rename or a copy, `--stat` output formats the pathnames compactly by combining common prefix and suffix of the pathnames.  For example, a change that moves `arch/i386/Makefile` to `arch/x86/Makefile` while modifying 4 lines will be shown like this:"
msgstr "Ao exibir uma alteração que envolva uma renomeação ou uma cópia, a saída do comando `--stat` formata os nomes do caminho de forma compacta combinando o prefixo e sufixo comum aos nomes do caminho.  Uma alteração que mova `arch/i386/Makefile` para `arch/x86/Makefile` enquanto modifica as 4 linhas será exibido assim:"

#. type: delimited block -
#: en/diff-format.txt:142
#, no-wrap, priority:280
msgid "arch/{i386 => x86}/Makefile    |   4 +--\n"
msgstr "arch/{i386 => x86}/Makefile    |   4 +--\n"

#. type: Plain text
#: en/diff-format.txt:147
#, priority:280
msgid "The `--numstat` option gives the diffstat(1) information but is designed for easier machine consumption.  An entry in `--numstat` output looks like this:"
msgstr "A opção `--numstat` fornece as informações diffstat(1), foi projetada para facilitar o consumo da máquina.  Uma entrada na saída `--numstat` fica assim:"

#. type: delimited block -
#: en/diff-format.txt:151
#, no-wrap, priority:280
msgid ""
"1\t2\tREADME\n"
"3\t1\tarch/{i386 => x86}/Makefile\n"
msgstr ""
"1\t2\tREADME\n"
"3\t1\tarch/{i386 => x86}/Makefile\n"

#. type: Plain text
#: en/diff-format.txt:154
#, priority:280
msgid "That is, from left to right:"
msgstr "Ou seja, da esquerda para a direita:"

#. type: Plain text
#: en/diff-format.txt:156 en/diff-format.txt:172
#, priority:280
msgid "the number of added lines;"
msgstr "a quantidade das linhas que foram adicionadas;"

#. type: Plain text
#: en/diff-format.txt:157 en/diff-format.txt:159 en/diff-format.txt:173 en/diff-format.txt:175
#, priority:280
msgid "a tab;"
msgstr "um separador;"

#. type: Plain text
#: en/diff-format.txt:158 en/diff-format.txt:174
#, priority:280
msgid "the number of deleted lines;"
msgstr "a quantidade de linhas que foram excluídas;"

#. type: Plain text
#: en/diff-format.txt:160
#, priority:280
msgid "pathname (possibly with rename/copy information);"
msgstr "nome do caminho (possivelmente com informações para renomear ou copiar);"

#. type: Plain text
#: en/diff-format.txt:161
#, priority:280
msgid "a newline."
msgstr "uma nova linha."

#. type: Plain text
#: en/diff-format.txt:163
#, priority:280
msgid "When `-z` output option is in effect, the output is formatted this way:"
msgstr "Quando a opção de saída `-z` está em vigor, a saída é formatada desta maneira:"

#. type: delimited block -
#: en/diff-format.txt:167
#, no-wrap, priority:280
msgid ""
"1\t2\tREADME NUL\n"
"3\t1\tNUL arch/i386/Makefile NUL arch/x86/Makefile NUL\n"
msgstr ""
"1\t2\tREADME NUL\n"
"3\t1\tNUL arch/i386/Makefile NUL arch/x86/Makefile NUL\n"

#. type: Plain text
#: en/diff-format.txt:170
#, priority:280
msgid "That is:"
msgstr "Isso é:"

#. type: Plain text
#: en/diff-format.txt:176 en/diff-format.txt:178
#, priority:280
msgid "a NUL (only exists if renamed/copied);"
msgstr "um NUL (apenas existe caso seja renomeado ou copiado);"

#. type: Plain text
#: en/diff-format.txt:177
#, priority:280
msgid "pathname in preimage;"
msgstr "nome do caminho na pré-imagem;"

#. type: Plain text
#: en/diff-format.txt:179
#, priority:280
msgid "pathname in postimage (only exists if renamed/copied);"
msgstr "nome do caminho na pós-imagem (só existe se for renomeado ou copiado);"

#. type: Plain text
#: en/diff-format.txt:180
#, priority:280
msgid "a NUL."
msgstr "um NUL."

#. type: Plain text
#: en/diff-format.txt:185
#, priority:280
msgid "The extra `NUL` before the preimage path in renamed case is to allow scripts that read the output to tell if the current record being read is a single-path record or a rename/copy record without reading ahead.  After reading added and deleted lines, reading up to `NUL` would yield the pathname, but if that is `NUL`, the record will show two paths."
msgstr "O `NUL` extra antes do caminho da pré-imagem é renomeado para permitir que os scripts que leem a saída digam se o registro atual que está sendo lido é um registro do caminho único ou um nome para a renomeação ou cópia sem fazer a leitura adiante.  Depois de ler as linhas adicionadas e excluídas, a leitura até o `NUL` produziria o nome do caminho, mas caso seja um `NUL`, o registro exibirá dois caminhos."

#. type: Title -
#: en/diff-generate-patch.txt:2
#, no-wrap, priority:280
msgid "Generating patch text with -p"
msgstr "Gerando a correção em um formato texto com a opção `-p`"

#. type: Plain text
#: en/diff-generate-patch.txt:15
#, priority:280
msgid "Running linkgit:git-diff[1], linkgit:git-log[1], linkgit:git-show[1], linkgit:git-diff-index[1], linkgit:git-diff-tree[1], or linkgit:git-diff-files[1] with the `-p` option produces patch text.  You can customize the creation of patch text via the `GIT_EXTERNAL_DIFF` and the `GIT_DIFF_OPTS` environment variables (see linkgit:git[1]), and the `diff` attribute (see linkgit:gitattributes[5])."
msgstr "Executando linkgit:git-diff[1], linkgit:git-log[1], linkgit:git-show[1], linkgit:git-diff-index[1], linkgit:git-diff-tree[1], ou linkgit:git-diff-files[1] com a opção `-p` produz um patch em formato texto.  É possível personalizar a criação do patch em um formato texto através das variáveis de ambiente `GIT_EXTERNAL_DIFF`, `GIT_DIFF_OPTS` (consulte linkgit:git[1]) e o atributo `diff` (consulte linkgit:gitattributes[5])."

#. type: Plain text
#: en/diff-generate-patch.txt:18
#, priority:280
msgid "What the -p option produces is slightly different from the traditional diff format:"
msgstr "O que a opção `-p` produz é um pouco diferente do formato diff tradicional:"

#. type: Plain text
#: en/diff-generate-patch.txt:20
#, priority:280
msgid "It is preceded with a \"git diff\" header that looks like this:"
msgstr "Ele é precedido por um cabeçalho \"git diff\" que se parece com:"

#. type: Plain text
#: en/diff-generate-patch.txt:22
#, no-wrap, priority:280
msgid "diff --git a/file1 b/file2\n"
msgstr "diff --git a/arquivo1 b/arquivo2\n"

#. type: Plain text
#: en/diff-generate-patch.txt:26
#, priority:280
msgid "The `a/` and `b/` filenames are the same unless rename/copy is involved.  Especially, even for a creation or a deletion, `/dev/null` is _not_ used in place of the `a/` or `b/` filenames."
msgstr "Os nomes dos arquivos `a/` e `b/` são os mesmos a menos que haja uma renomeação ou cópia.  Especialmente para uma criação ou exclusão, `/dev/null` _não_ é utilizado no lugar dos nomes do arquivo `a/` ou `b/`."

#. type: Plain text
#: en/diff-generate-patch.txt:30
#, priority:280
msgid "When rename/copy is involved, `file1` and `file2` show the name of the source file of the rename/copy and the name of the file that rename/copy produces, respectively."
msgstr "Quando há um envolvimento no processo de renomear ou copiar, `arquivo1` e `arquivo2` exibem o nome do arquivo de origem da renomeação ou cópia e o nome do arquivo produzido pela renomeação ou copia respectivamente."

#. type: Plain text
#: en/diff-generate-patch.txt:32
#, priority:280
msgid "It is followed by one or more extended header lines:"
msgstr "É seguido por uma ou mais linhas estendidas do cabeçalho:"

#. type: Plain text
#: en/diff-generate-patch.txt:44
#, no-wrap, priority:280
msgid ""
"old mode <mode>\n"
"new mode <mode>\n"
"deleted file mode <mode>\n"
"new file mode <mode>\n"
"copy from <path>\n"
"copy to <path>\n"
"rename from <path>\n"
"rename to <path>\n"
"similarity index <number>\n"
"dissimilarity index <number>\n"
"index <hash>..<hash> <mode>\n"
msgstr ""
"modo antigo               <modo>\n"
"modo novo                 <modo>\n"
"modo de arquivo excluído  <modo>\n"
"novo modo de arquivo      <modo>\n"
"copiar de                 <caminho>\n"
"copiar para               <caminho>\n"
"renomear de               <caminho>\n"
"renomear para             <caminho>\n"
"índice de similaridade    <quantidade>\n"
"índice de dissimilaridade <quantidade>\n"
"índice                    <hash>..<hash> <modo>\n"

#. type: Plain text
#: en/diff-generate-patch.txt:47
#, priority:280
msgid "File modes are printed as 6-digit octal numbers including the file type and file permission bits."
msgstr "Os modos dos arquivo são impressos como números octais com 6 dígitos, incluindo o tipo do arquivo e dos bits de permissão do arquivo."

#. type: Plain text
#: en/diff-generate-patch.txt:49
#, priority:280
msgid "Path names in extended headers do not include the `a/` and `b/` prefixes."
msgstr "Os nomes do caminho nos cabeçalhos estendidos não incluem os prefixos `a/` e `b/`."

#. type: Plain text
#: en/diff-generate-patch.txt:56
#, priority:280
msgid "The similarity index is the percentage of unchanged lines, and the dissimilarity index is the percentage of changed lines.  It is a rounded down integer, followed by a percent sign.  The similarity index value of 100% is thus reserved for two equal files, while 100% dissimilarity means that no line from the old file made it into the new one."
msgstr "O índice de similaridade é a porcentagem das linhas inalteradas e o índice de dissimilaridade é a porcentagem das linhas alteradas.  É um número inteiro arredondado, seguido por um sinal de porcentagem.  O valor do índice de similaridade de 100% é reservado para dois arquivos iguais, enquanto a dissimilaridade de 100% significa que nenhuma linha do arquivo antigo chegou ao novo."

#. type: Plain text
#: en/diff-generate-patch.txt:60
#, priority:280
msgid "The index line includes the blob object names before and after the change.  The <mode> is included if the file mode does not change; otherwise, separate lines indicate the old and the new mode."
msgstr "A linha do índice inclui os nomes dos objetos bolha antes e depois da alteração.  O `<modo>` será incluído caso o modo do arquivo não seja alterado; caso contrário, linhas separadas indicam o modo antigo e o novo."

#. type: Plain text
#: en/diff-generate-patch.txt:64
#, priority:280
msgid "Pathnames with \"unusual\" characters are quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1])."
msgstr "Os nomes dos caminhos com caracteres \"incomuns\" são citados como já explicado na variável de configuração `core.quotePath` (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/diff-generate-patch.txt:69
#, priority:280
msgid "All the `file1` files in the output refer to files before the commit, and all the `file2` files refer to files after the commit.  It is incorrect to apply each change to each file sequentially.  For example, this patch will swap a and b:"
msgstr "Todos os arquivos `arquivo1` na saída se referem aos arquivos antes do commit e todos os arquivos `arquivo2` se referem aos arquivos após o commit.  É incorreto aplicar cada alteração em cada arquivo sequencialmente.  Por exemplo, este patch irá substituir a e b:"

#. type: Plain text
#: en/diff-generate-patch.txt:76
#, no-wrap, priority:280
msgid ""
"diff --git a/a b/b\n"
"rename from a\n"
"rename to b\n"
"diff --git a/b b/a\n"
"rename from b\n"
"rename to a\n"
msgstr ""
"diff --git a/a b/b\n"
"renomeie a partir de a\n"
"renomeie para b\n"
"diff --git a/b b/a\n"
"renomeie a partir do b\n"
"renomeie para a\n"

#. type: Plain text
#: en/diff-generate-patch.txt:81
#, priority:280
msgid "Hunk headers mention the name of the function to which the hunk applies.  See \"Defining a custom hunk-header\" in linkgit:gitattributes[5] for details of how to tailor to this to specific languages."
msgstr "Os cabeçalhos \"hunk\" mencionam o nome da função à qual o \"hunk\" se aplica.  Consulte \"Definindo um cabeçalho personalizado do hunk\" em linkgit:gitattributes[5] para detalhes de como adaptar a isto e para linguagens específicas."

#. type: Title -
#: en/diff-generate-patch.txt:84
#, no-wrap, priority:280
msgid "Combined diff format"
msgstr "O formato diff combinado"

#. type: Plain text
#: en/diff-generate-patch.txt:92
#, priority:280
msgid "Any diff-generating command can take the `-c` or `--cc` option to produce a 'combined diff' when showing a merge. This is the default format when showing merges with linkgit:git-diff[1] or linkgit:git-show[1]. Note also that you can give suitable `--diff-merges` option to any of these commands to force generation of diffs in specific format."
msgstr "Qualquer comando que gere um diff pode utilizar a opção `-c` ou`--cc` para produzir um 'diff combinado' ao mostrar uma mesclagem. Este é o formato predefinido ao mostrar as mesclagens com linkgit:git-diff[1] ou linkgit:git-show[1]. Observe também que é possível usar a opção `--diff-merges` que é adequada para qualquer um destes comandos para impor a geração dos diffs em um determinado formato."

#. type: Plain text
#: en/diff-generate-patch.txt:94
#, priority:280
msgid "A \"combined diff\" format looks like this:"
msgstr "Um formato \"diff combinado\" fica assim:"

#. type: delimited block -
#: en/diff-generate-patch.txt:103
#, no-wrap, priority:280
msgid ""
"diff --combined describe.c\n"
"index fabadb8,cc95eb0..4866510\n"
"--- a/describe.c\n"
"+++ b/describe.c\n"
"@@@ -98,20 -98,12 +98,20 @@@\n"
"\treturn (a_date > b_date) ? -1 : (a_date == b_date) ? 0 : 1;\n"
"  }\n"
msgstr ""
"diff --combined describe.c\n"
"index fabadb8,cc95eb0..4866510\n"
"--- a/describe.c\n"
"+++ b/describe.c\n"
"@@@ -98,20 -98,12 +98,20 @@@\n"
"\treturn (a_date > b_date) ? -1 : (a_date == b_date) ? 0 : 1;\n"
"  }\n"

#. type: delimited block -
#: en/diff-generate-patch.txt:113
#, no-wrap, priority:280
msgid ""
"- static void describe(char *arg)\n"
" -static void describe(struct commit *cmit, int last_one)\n"
"++static void describe(char *arg, int last_one)\n"
"  {\n"
" +\tunsigned char sha1[20];\n"
" +\tstruct commit *cmit;\n"
"\tstruct commit_list *list;\n"
"\tstatic int initialized = 0;\n"
"\tstruct commit_name *n;\n"
msgstr ""
"- static void describe(char *arg)\n"
" -static void describe(struct commit *cmit, int last_one)\n"
"++static void describe(char *arg, int last_one)\n"
"  {\n"
" +\tunsigned char sha1[20];\n"
" +\tstruct commit *cmit;\n"
"\tstruct commit_list *list;\n"
"\tstatic int initialized = 0;\n"
"\tstruct commit_name *n;\n"

#. type: delimited block -
#: en/diff-generate-patch.txt:123
#, no-wrap, priority:280
msgid ""
" +\tif (get_sha1(arg, sha1) < 0)\n"
" +\t\tusage(describe_usage);\n"
" +\tcmit = lookup_commit_reference(sha1);\n"
" +\tif (!cmit)\n"
" +\t\tusage(describe_usage);\n"
" +\n"
"\tif (!initialized) {\n"
"\t\tinitialized = 1;\n"
"\t\tfor_each_ref(get_name);\n"
msgstr ""
" +\tif (get_sha1(arg, sha1) < 0)\n"
" +\t\tusage(describe_usage);\n"
" +\tcmit = lookup_commit_reference(sha1);\n"
" +\tif (!cmit)\n"
" +\t\tusage(describe_usage);\n"
" +\n"
"\tif (!initialized) {\n"
"\t\tinitialized = 1;\n"
"\t\tfor_each_ref(get_name);\n"

#. type: Plain text
#: en/diff-generate-patch.txt:127
#, priority:280
msgid "It is preceded with a \"git diff\" header, that looks like this (when the `-c` option is used):"
msgstr "Ele é precedido por um cabeçalho \"git diff\" parecido com este (quando a opção `-c` é utilizada):"

#. type: Plain text
#: en/diff-generate-patch.txt:129
#, no-wrap, priority:280
msgid "diff --combined file\n"
msgstr "diff --combined arquivo\n"

#. type: Plain text
#: en/diff-generate-patch.txt:131
#, priority:280
msgid "or like this (when the `--cc` option is used):"
msgstr "ou assim (quando a opção `--cc` é utilizada):"

#. type: Plain text
#: en/diff-generate-patch.txt:133
#, no-wrap, priority:280
msgid "       diff --cc file\n"
msgstr "       diff --cc arquivo\n"

#. type: Plain text
#: en/diff-generate-patch.txt:136
#, priority:280
msgid "It is followed by one or more extended header lines (this example shows a merge with two parents):"
msgstr "Ele é seguido por uma ou mais linhas estendidas do cabeçalho (este exemplo exibe uma mesclagem com duas origens):"

#. type: Plain text
#: en/diff-generate-patch.txt:141
#, no-wrap, priority:280
msgid ""
"index <hash>,<hash>..<hash>\n"
"mode <mode>,<mode>..<mode>\n"
"new file mode <mode>\n"
"deleted file mode <mode>,<mode>\n"
msgstr ""
"índice <hash>,<hash>..<hash>\n"
"modo <modo>,<modo>..<modo>\n"
"modo novo arquivo <modo>\n"
"modo arquivo excluído <modo>,<modo>\n"

#. type: Plain text
#: en/diff-generate-patch.txt:147
#, priority:280
msgid "The `mode <mode>,<mode>..<mode>` line appears only if at least one of the <mode> is different from the rest. Extended headers with information about detected contents movement (renames and copying detection) are designed to work with diff of two <tree-ish> and are not used by combined diff format."
msgstr "A linha `modo <modo>,<modo>..<modo>` aparece apenas caso pelo menos um dos <modos> seja diferente do restante. Os cabeçalhos estendidos com informações sobre a movimentação do conteúdo detectado (renomeação e detecção da cópia) são projetados para trabalhar com o diff com duas `<árvore>s` e não são utilizados pela combinação do formato diff."

#. type: Plain text
#: en/diff-generate-patch.txt:149
#, priority:280
msgid "It is followed by two-line from-file/to-file header"
msgstr "É seguido por duas linhas do cabeçalho do arquivo/para o arquivo"

#. type: Plain text
#: en/diff-generate-patch.txt:151 en/diff-generate-patch.txt:162 en/diff-generate-patch.txt:163 en/diff-generate-patch.txt:164
#, priority:280
msgid "a/file"
msgstr "a/arquivo"

#. type: Plain text
#: en/diff-generate-patch.txt:152 en/diff-generate-patch.txt:165
#, priority:280
msgid "b/file"
msgstr "b/arquivo"

#. type: Plain text
#: en/diff-generate-patch.txt:156
#, priority:280
msgid "Similar to two-line header for traditional 'unified' diff format, `/dev/null` is used to signal created or deleted files."
msgstr "Semelhante ao cabeçalho de duas linhas para o formato diff tradicional 'unificado', o `/dev/null` é utilizado para sinalizar os arquivos criados ou excluídos."

#. type: Plain text
#: en/diff-generate-patch.txt:160
#, priority:280
msgid "However, if the --combined-all-paths option is provided, instead of a two-line from-file/to-file you get a N+1 line from-file/to-file header, where N is the number of parents in the merge commit"
msgstr "No entanto, caso a opção `--combined-all-paths` seja utilizada, em vez de duas linhas do arquivo/para o arquivo, será obtido um cabeçalho `N+1` do cabeçalho do arquivo de \"origem\" para o arquivo de \"destino\" onde N é a quantidade de origens na mesclagem do commit"

#. type: Plain text
#: en/diff-generate-patch.txt:169
#, priority:280
msgid "This extended format can be useful if rename or copy detection is active, to allow you to see the original name of the file in different parents."
msgstr "Este formato estendido pode ser útil caso a detecção da renomeação ou cópia esteja ativa, permitindo que você veja o nome original do arquivo em diferentes origens."

#. type: Plain text
#: en/diff-generate-patch.txt:175
#, priority:280
msgid "Chunk header format is modified to prevent people from accidentally feeding it to `patch -p1`. Combined diff format was created for review of merge commit changes, and was not meant to be applied. The change is similar to the change in the extended 'index' header:"
msgstr "O formato do cabeçalho do pedaço é modificado para prevenir que as pessoas o alimentem acidentalmente com `patch -p1`. O formato diff combinado foi criado para revisar as alterações da mesclagem dos commits e não era para ser aplicado. A alteração é semelhante a alteração no cabeçalho estendido do 'índice':"

#. type: Plain text
#: en/diff-generate-patch.txt:177
#, no-wrap, priority:280
msgid "@@@ <from-file-range> <from-file-range> <to-file-range> @@@\n"
msgstr "@@@ <from-file-range> <from-file-range> <to-file-range> @@@\n"

#. type: Plain text
#: en/diff-generate-patch.txt:180
#, priority:280
msgid "There are (number of parents + 1) `@` characters in the chunk header for combined diff format."
msgstr "Existem (a quantidade de origens + 1) caracteres `@` no cabeçalho do bloco para o formato diff combinado."

#. type: Plain text
#: en/diff-generate-patch.txt:189
#, ignore-ellipsis, priority:280
msgid "Unlike the traditional 'unified' diff format, which shows two files A and B with a single column that has `-` (minus -- appears in A but removed in B), `+` (plus -- missing in A but added to B), or `\" \"` (space -- unchanged) prefix, this format compares two or more files file1, file2,... with one file X, and shows how X differs from each of fileN.  One column for each of fileN is prepended to the output line to note how X's line is different from it."
msgstr "Diferente do formato diff 'unificado' tradicional que exiba os dois arquivos A e B com uma única coluna que possua o sinal de menos `-` (o sinal de menos -- aparece em A mas é removido em B), `+` (o sinal de mais -- ausente em A, mas adicionado em B), ou o prefixo `\" \"` (sem alteração -- de espaço), este formato compara dois ou mais arquivos arquivo1, arquivo2, ... com um arquivo X e exibe como X difere de cada arquivoN.  Uma coluna para cada arquivoN é anexada à linha de saída para observar como a linha de X é diferente dela."

#. type: Plain text
#: en/diff-generate-patch.txt:195
#, priority:280
msgid "A `-` character in the column N means that the line appears in fileN but it does not appear in the result.  A `+` character in the column N means that the line appears in the result, and fileN does not have that line (in other words, the line was added, from the point of view of that parent)."
msgstr "Um caractere `-` na coluna N significa que a linha aparece no \"arquivoN\", mas não aparece no resultado.  Um caractere `+` na coluna N significa que a linha aparece no resultado e o arquivoN não possui essa linha (em outras palavras, a linha foi adicionada, do ponto de vista dessa origem)."

#. type: Plain text
#: en/diff-generate-patch.txt:201
#, priority:280
msgid "In the above example output, the function signature was changed from both files (hence two `-` removals from both file1 and file2, plus `++` to mean one line that was added does not appear in either file1 or file2).  Also eight other lines are the same from file1 but do not appear in file2 (hence prefixed with `+`)."
msgstr "Na saída do exemplo acima, a assinatura da função foi alterada nos dois arquivos (portanto, duas remoções `-` do arquivo1 e do arquivo2, mais `++` significa que uma linha que foi adicionada não aparece no arquivo1 ou no arquivo2).  Outras oito linhas também são iguais no arquivo1, mas não aparecem no arquivo2 (portanto, prefixadas com `+`)."

#. type: Plain text
#: en/diff-generate-patch.txt:207
#, priority:280
msgid "When shown by `git diff-tree -c`, it compares the parents of a merge commit with the merge result (i.e. file1..fileN are the parents).  When shown by `git diff-files -c`, it compares the two unresolved merge parents with the working tree file (i.e. file1 is stage 2 aka \"our version\", file2 is stage 3 aka \"their version\")."
msgstr "Quando exibido pelo comando `git diff-tree -c`, compara as origens de um commit mesclado com o resultado da mesclagem (ou seja, arquivo1..arquivoN são as origens).  Quando exibido pelo comando `git diff-files -c`, as duas origens com as suas respectivas mesclagens não resolvidas com o arquivo da árvore de trabalho (ou seja, arquivo1 é o estágio 2, informado como \"nossa versão\", o arquivo2 é o estágio 3, informado como \"a versão deles\")."

#. type: Labeled list
#: en/diff-options.txt:17 en/git-rebase.txt:403 en/merge-options.txt:109
#, ignore-same, no-wrap, priority:280
msgid "--no-stat"
msgstr "--no-stat"

#. type: Plain text
#: en/diff-options.txt:19
#, priority:280
msgid "Generate plain patches without any diffstats."
msgstr "Gere correções simples sem qualquer diffstats."

#. type: Labeled list
#: en/diff-options.txt:23 en/fetch-options.txt:257 en/git-add.txt:119 en/git-am.txt:90 en/git-checkout-index.txt:26 en/git-cvsexportcommit.txt:64 en/git-cvsimport.txt:98 en/git-ls-files.txt:70 en/git-mailinfo.txt:54 en/git-push.txt:372 en/git-read-tree.txt:45 en/git-stash.txt:163
#, ignore-same, no-wrap, priority:300
msgid "-u"
msgstr "-u"

#. type: Labeled list
#: en/diff-options.txt:24 en/git-add.txt:97 en/git-checkout.txt:272 en/git-commit.txt:74 en/git-restore.txt:49 en/git-stash.txt:194
#, ignore-same, no-wrap, priority:300
msgid "--patch"
msgstr "--patch"

#. type: Plain text
#: en/diff-options.txt:26
#, priority:280
msgid "Generate patch (see section on generating patches)."
msgstr "Gere um patch (consulte a seção sobre a geração de patches)."

#. type: Plain text
#: en/diff-options.txt:28 en/diff-options.txt:130
#, no-wrap, priority:280
msgid "\tThis is the default.\n"
msgstr "\tEsta é a predefinição.\n"

#. type: Labeled list
#: en/diff-options.txt:30 en/git-am.txt:36 en/git-blame.txt:75 en/git-cat-file.txt:46 en/git-cherry-pick.txt:105 en/git-clone.txt:71 en/git-diff-tree.txt:77 en/git-format-patch.txt:138 en/git-ls-files.txt:59 en/git-revert.txt:100 en/git-shortlog.txt:34 en/git-show-ref.txt:53 en/git-status.txt:27 en/git-stripspace.txt:38 en/git-svn.txt:46 en/git-tag.txt:64 en/git-verify-pack.txt:31 en/signoff-option.txt:2
#, ignore-same, no-wrap, priority:300
msgid "-s"
msgstr "-s"

#. type: Labeled list
#: en/diff-options.txt:31
#, ignore-same, no-wrap, priority:280
msgid "--no-patch"
msgstr "--no-patch"

#. type: Plain text
#: en/diff-options.txt:34
#, priority:280
msgid "Suppress diff output. Useful for commands like `git show` that show the patch by default, or to cancel the effect of `--patch`."
msgstr "Suprime a saída diff. Útil para comandos como `git show` que por predefinição exibem a correção ou para cancelar o efeito de `--patch`."

#. type: Labeled list
#: en/diff-options.txt:37
#, no-wrap, priority:280
msgid "--diff-merges=(off|none|on|first-parent|1|separate|m|combined|c|dense-combined|cc|remerge|r)"
msgstr "--diff-merges=(off|none|on|first-parent|1|separate|m|combined|c|dense-combined|cc|remerge|r)"

#. type: Labeled list
#: en/diff-options.txt:38 en/diff-options.txt:44
#, ignore-same, no-wrap, priority:280
msgid "--no-diff-merges"
msgstr "--no-diff-merges"

#. type: Plain text
#: en/diff-options.txt:42
#, priority:280
msgid "Specify diff format to be used for merge commits. Default is {diff-merges-default} unless `--first-parent` is in use, in which case `first-parent` is the default."
msgstr "Define o formato diff que será usado para a mesclagem dos commits. A predefinição é {diff-merges-default} a menos que a opção `--first-parent` esteja em uso, nesse caso a predefinição será `first-parent`."

#. type: Labeled list
#: en/diff-options.txt:43
#, no-wrap, priority:280
msgid "--diff-merges=(off|none)"
msgstr "--diff-merges=(off|none)"

#. type: Plain text
#: en/diff-options.txt:47
#, priority:280
msgid "Disable output of diffs for merge commits. Useful to override implied value."
msgstr "Desativa a saída dos diffs para a mesclagem dos commits. Útil para substituir valores implícitos."

#. type: Labeled list
#: en/diff-options.txt:48
#, no-wrap, priority:280
msgid "--diff-merges=on"
msgstr "--diff-merges=on"

#. type: Labeled list
#: en/diff-options.txt:49
#, no-wrap, priority:280
msgid "--diff-merges=m"
msgstr "--diff-merges=m"

#. type: Labeled list
#: en/diff-options.txt:50 en/git-am.txt:75 en/git-branch.txt:127 en/git-checkout.txt:244 en/git-cvsexportcommit.txt:60 en/git-cvsimport.txt:118 en/git-diff-index.txt:37 en/git-diff-tree.txt:71 en/git-help.txt:96 en/git-instaweb.txt:36 en/git-ls-files.txt:43 en/git-mailinfo.txt:71 en/git-read-tree.txt:33 en/git-rebase.txt:346 en/git-repack.txt:210 en/git-restore.txt:86 en/git-svn.txt:308 en/git-svn.txt:675 en/git-switch.txt:121 en/git-symbolic-ref.txt:49
#, ignore-same, no-wrap, priority:280
msgid "-m"
msgstr "-m"

#. type: Plain text
#: en/diff-options.txt:56
#, priority:280
msgid "This option makes diff output for merge commits to be shown in the default format. `-m` will produce the output only if `-p` is given as well. The default format could be changed using `log.diffMerges` configuration parameter, which default value is `separate`."
msgstr "Essa opção faz com que o diff gerado para a mesclagem dos commits seja mostrada no formato padrão. A opção `-m` produzirá uma saída caso a opção `-p` seja usada junto. O formato predefinido pode ser alterado usando o parâmetro de configuração `log.diffMerges`, onde o valor predefinido é `separate`."

#. type: Labeled list
#: en/diff-options.txt:57
#, no-wrap, priority:280
msgid "--diff-merges=first-parent"
msgstr "--diff-merges=first-parent"

#. type: Labeled list
#: en/diff-options.txt:58
#, no-wrap, priority:280
msgid "--diff-merges=1"
msgstr "--diff-merges=1"

#. type: Plain text
#: en/diff-options.txt:61
#, priority:280
msgid "This option makes merge commits show the full diff with respect to the first parent only."
msgstr "Esta opção faz com que os commits mesclados mostrem a diferença total apenas com ao que estiver relacionado com a primeira origem."

#. type: Labeled list
#: en/diff-options.txt:62
#, no-wrap, priority:280
msgid "--diff-merges=separate"
msgstr "--diff-merges=separate"

#. type: Plain text
#: en/diff-options.txt:66
#, priority:280
msgid "This makes merge commits show the full diff with respect to each of the parents. Separate log entry and diff is generated for each parent."
msgstr "Faz com que os commits mesclados mostrem a diferença total com relação a cada uma das suas origens. É gerado uma entrada de registro separada e um diff para cada um dos commits relacionados."

#. type: Labeled list
#: en/diff-options.txt:67
#, no-wrap, priority:280
msgid "--diff-merges=remerge"
msgstr "--diff-merges=remerge"

#. type: Labeled list
#: en/diff-options.txt:68
#, no-wrap, priority:280
msgid "--diff-merges=r"
msgstr "--diff-merges=r"

#. type: Labeled list
#: en/diff-options.txt:69
#, ignore-same, no-wrap, priority:280
msgid "--remerge-diff"
msgstr "--remerge-diff"

#. type: Plain text
#: en/diff-options.txt:74
#, priority:280
msgid "With this option, two-parent merge commits are remerged to create a temporary tree object -- potentially containing files with conflict markers and such.  A diff is then shown between that temporary tree and the actual merge commit."
msgstr "Com esta opção, os dois principais commits são mesclados novamente para criar um objeto temporário na árvore -- potencialmente contendo arquivos com os marcadores de conflito e tal.  Uma diferença é então mostrada entre essa árvore temporária e o commit real da mesclagem."

#. type: Plain text
#: en/diff-options.txt:78
#, priority:280
msgid "The output emitted when this option is used is subject to change, and so is its interaction with other options (unless explicitly documented)."
msgstr "A saída é gerada quando esta opção usada está sujeita a alterações, assim como a sua interação com as outras opções (a menos que esteja explicitamente documentada)."

#. type: Labeled list
#: en/diff-options.txt:79
#, no-wrap, priority:280
msgid "--diff-merges=combined"
msgstr "--diff-merges=combined"

#. type: Labeled list
#: en/diff-options.txt:80
#, no-wrap, priority:280
msgid "--diff-merges=c"
msgstr "--diff-merges=c"

#. type: Labeled list
#: en/diff-options.txt:81 en/git-am.txt:55 en/git-blame.txt:53 en/git-branch.txt:134 en/git-cvsexportcommit.txt:37 en/git-diff-files.txt:37 en/git-diff-tree.txt:93 en/git-grep.txt:188 en/git-help.txt:65 en/git-ls-files.txt:35 en/git-shortlog.txt:79 en/git-stripspace.txt:42
#, ignore-same, no-wrap, priority:280
msgid "-c"
msgstr "-c"

#. type: Plain text
#: en/diff-options.txt:88
#, priority:280
msgid "With this option, diff output for a merge commit shows the differences from each of the parents to the merge result simultaneously instead of showing pairwise diff between a parent and the result one at a time. Furthermore, it lists only files which were modified from all parents. `-c` implies `-p`."
msgstr "Com esta opção, a saída \"diff\" para um commit de mesclagem exibe as diferenças de cada uma das origens para a mesclagem resultante de forma simultânea em vez de mostrar a diferença pareada entre uma origem e o resultado, um de cada vez. Além disso, lista apenas os arquivos que foram alterados a partir de todas as origens. A opção `-c` exige o uso de `-p`."

#. type: Labeled list
#: en/diff-options.txt:89
#, no-wrap, priority:280
msgid "--diff-merges=dense-combined"
msgstr "--diff-merges=dense-combined"

#. type: Labeled list
#: en/diff-options.txt:90
#, no-wrap, priority:280
msgid "--diff-merges=cc"
msgstr "--diff-merges=cc"

#. type: Labeled list
#: en/diff-options.txt:91 en/git-diff-files.txt:38 en/git-diff-tree.txt:103
#, ignore-same, no-wrap, priority:280
msgid "--cc"
msgstr "--cc"

#. type: Plain text
#: en/diff-options.txt:97
#, priority:280
msgid "With this option the output produced by `--diff-merges=combined` is further compressed by omitting uninteresting hunks whose contents in the parents have only two variants and the merge result picks one of them without modification.  `--cc` implies `-p`."
msgstr "Com esta opção, a saída gerada pelo comando `--diff-merges=combined` é ainda mais comprimido ao omitir os blocos menos importantes cujo conteúdo relacionado possua apenas duas variantes e o resultado da mesclagem escolhe um deles sem alteração. A opção `-c` exige o uso de `-p`."

#. type: Labeled list
#: en/diff-options.txt:98 en/git-diff-tree.txt:113
#, ignore-same, no-wrap, priority:280
msgid "--combined-all-paths"
msgstr "--combined-all-paths"

#. type: Plain text
#: en/diff-options.txt:104
#, priority:280
msgid "This flag causes combined diffs (used for merge commits) to list the name of the file from all parents.  It thus only has effect when `--diff-merges=[dense-]combined` is in use, and is likely only useful if filename changes are detected (i.e.  when either rename or copy detection have been requested)."
msgstr "Esta opção faz com que os diffs combinados (usados para a mesclagem dos commits) listem o nome relacionados de todos os arquivos.  Dessa forma, só tem efeito quando a opção `--diff-merges=[dense-]combined` são utilizados e provavelmente é útil apenas caso as alterações no nome do arquivo sejam detectados (ou seja, quando a renomeação ou a detecção da cópia forem solicitadas)."

#. type: Labeled list
#: en/diff-options.txt:106
#, no-wrap, priority:280
msgid "-U<n>"
msgstr "-U<n>"

#. type: Labeled list
#: en/diff-options.txt:107
#, no-wrap, priority:280
msgid "--unified=<n>"
msgstr "--unified=<n>"

#. type: Plain text
#: en/diff-options.txt:110
#, priority:280
msgid "Generate diffs with <n> lines of context instead of the usual three."
msgstr "Gere diffs com uma quantidade de `<n>` linhas de contexto em vez das três usuais."

#. type: Plain text
#: en/diff-options.txt:112 en/diff-options.txt:520
#, no-wrap, priority:280
msgid "\tImplies `--patch`.\n"
msgstr "\tImplica no uso da opção `--patch`.\n"

#. type: Labeled list
#: en/diff-options.txt:114 en/git-archive.txt:59
#, no-wrap, priority:280
msgid "--output=<file>"
msgstr "--output=<arquivo>"

#. type: Plain text
#: en/diff-options.txt:116
#, priority:280
msgid "Output to a specific file instead of stdout."
msgstr "Escreve o arquivo para um determinado arquivo em vez de stdout."

#. type: Labeled list
#: en/diff-options.txt:117
#, no-wrap, priority:280
msgid "--output-indicator-new=<char>"
msgstr "--output-indicator-new=<caractere>"

#. type: Labeled list
#: en/diff-options.txt:118
#, no-wrap, priority:280
msgid "--output-indicator-old=<char>"
msgstr "--output-indicator-old=<caractere>"

#. type: Labeled list
#: en/diff-options.txt:119
#, no-wrap, priority:280
msgid "--output-indicator-context=<char>"
msgstr "--output-indicator-context=<caractere>"

#. type: Plain text
#: en/diff-options.txt:123
#, priority:280
msgid "Specify the character used to indicate new, old or context lines in the generated patch. Normally they are '+', '-' and ' ' respectively."
msgstr "Informe o caractere que será utilizado para indicar as linhas novas, antigas ou do contexto no patch que foi gerado. Normalmente eles são '+', '-' e ' ' respectivamente."

#. type: Labeled list
#: en/diff-options.txt:125 en/git-replace.txt:78 en/git-verify-commit.txt:19 en/git-verify-tag.txt:19
#, ignore-same, no-wrap, priority:280
msgid "--raw"
msgstr "--raw"

#. type: Plain text
#: en/diff-options.txt:128
#, no-wrap, priority:280
msgid "\tGenerate the diff in raw format.\n"
msgstr "\tGere o diff no formato bruto (raw).\n"

#. type: Plain text
#: en/diff-options.txt:138
#, no-wrap, priority:280
msgid ""
"\tFor each commit, show a summary of changes using the raw diff\n"
"\tformat. See the \"RAW OUTPUT FORMAT\" section of\n"
"\tlinkgit:git-diff[1]. This is different from showing the log\n"
"\titself in raw format, which you can achieve with\n"
"\t`--format=raw`.\n"
msgstr ""
"\tPara cada commit, exiba um resumo das alterações utilizando o formato\n"
"\tdiff bruto. Consulte a seção \"GERANDO O FORMATO BRUTO\"\n"
"\tlinkgit:git-diff[1]. É diferente de exibir o próprio registro log\n"
"\tem formato bruto, que pode ser obtido com\n"
"\ta opção `--format=raw`.\n"

#. type: Labeled list
#: en/diff-options.txt:142
#, ignore-same, no-wrap, priority:280
msgid "--patch-with-raw"
msgstr "--patch-with-raw"

#. type: Plain text
#: en/diff-options.txt:144
#, priority:280
msgid "Synonym for `-p --raw`."
msgstr "É um sinônimo para `-p --raw`."

#. type: Plain text
#: en/diff-options.txt:149
#, priority:280
msgid "Show the tree objects in the diff output."
msgstr "Exibe os objetos árvore no diff que foi gerado."

#. type: Labeled list
#: en/diff-options.txt:151
#, ignore-same, no-wrap, priority:280
msgid "--indent-heuristic"
msgstr "--indent-heuristic"

#. type: Plain text
#: en/diff-options.txt:154
#, priority:280
msgid "Enable the heuristic that shifts diff hunk boundaries to make patches easier to read. This is the default."
msgstr "Ativa a heurística que altera os limites dos pedaços diferentes para facilitar a leitura dos patches. Esta é a predefinição."

#. type: Labeled list
#: en/diff-options.txt:155
#, ignore-same, no-wrap, priority:280
msgid "--no-indent-heuristic"
msgstr "--no-indent-heuristic"

#. type: Plain text
#: en/diff-options.txt:157
#, priority:280
msgid "Disable the indent heuristic."
msgstr "Desative a heurística de recuo."

#. type: Labeled list
#: en/diff-options.txt:158
#, ignore-same, no-wrap, priority:280
msgid "--minimal"
msgstr "--minimal"

#. type: Plain text
#: en/diff-options.txt:161 en/diff-options.txt:187
#, priority:280
msgid "Spend extra time to make sure the smallest possible diff is produced."
msgstr "Expenda um tempo extra para garantir que o menor diferencial possível seja produzido."

#. type: Labeled list
#: en/diff-options.txt:162
#, ignore-same, no-wrap, priority:280
msgid "--patience"
msgstr "--patience"

#. type: Plain text
#: en/diff-options.txt:164
#, priority:280
msgid "Generate a diff using the \"patience diff\" algorithm."
msgstr "Gere um diff utilizando o algoritmo \"patience diff\" (ou diff de paciência)."

#. type: Labeled list
#: en/diff-options.txt:165
#, ignore-same, no-wrap, priority:280
msgid "--histogram"
msgstr "--histogram"

#. type: Plain text
#: en/diff-options.txt:167
#, priority:280
msgid "Generate a diff using the \"histogram diff\" algorithm."
msgstr "Gere um diff utilizando o algoritmo \"histogram diff\" (ou diff de histograma)."

#. type: Labeled list
#: en/diff-options.txt:168
#, no-wrap, priority:280
msgid "--anchored=<text>"
msgstr "--anchored=<texto>"

#. type: Plain text
#: en/diff-options.txt:170
#, priority:280
msgid "Generate a diff using the \"anchored diff\" algorithm."
msgstr "Gere um diff utilizando o algoritmo \"anchored diff\" (ou diff ancorado)."

#. type: Plain text
#: en/diff-options.txt:172
#, priority:280
msgid "This option may be specified more than once."
msgstr "Esta opção pode ser usada mais de uma vez."

#. type: Plain text
#: en/diff-options.txt:177
#, priority:280
msgid "If a line exists in both the source and destination, exists only once, and starts with this text, this algorithm attempts to prevent it from appearing as a deletion or addition in the output. It uses the \"patience diff\" algorithm internally."
msgstr "Caso uma linha exista na origem e no destino, exista apenas uma vez e comece com este texto, este algoritmo tenta impedir que apareça como uma exclusão ou adição na saída. O algoritmo \"patience diff\" é utilizado internamente."

#. type: Labeled list
#: en/diff-options.txt:178
#, no-wrap, priority:280
msgid "--diff-algorithm={patience|minimal|histogram|myers}"
msgstr "--diff-algorithm={patience|minimal|histogram|myers}"

#. type: Plain text
#: en/diff-options.txt:180
#, priority:280
msgid "Choose a diff algorithm. The variants are as follows:"
msgstr "Escolha um algoritmo diff. As variantes são as seguintes:"

#. type: Labeled list
#: en/diff-options.txt:182
#, ignore-same, no-wrap, priority:280
msgid "`default`, `myers`"
msgstr "`default`, `myers`"

#. type: Plain text
#: en/diff-options.txt:184
#, priority:280
msgid "The basic greedy diff algorithm. Currently, this is the default."
msgstr "O algoritmo diff ganancioso básico. Atualmente, este é o valor predefinido."

#. type: Labeled list
#: en/diff-options.txt:184
#, ignore-same, no-wrap, priority:280
msgid "`minimal`"
msgstr "`minimal`"

#. type: Labeled list
#: en/diff-options.txt:187
#, ignore-same, no-wrap, priority:280
msgid "`patience`"
msgstr "`patience`"

#. type: Plain text
#: en/diff-options.txt:189
#, priority:280
msgid "Use \"patience diff\" algorithm when generating patches."
msgstr "Utilize o algoritmo \"patience diff\" (ou diff de paciência) ao gerar os patches."

#. type: Labeled list
#: en/diff-options.txt:189
#, ignore-same, no-wrap, priority:280
msgid "`histogram`"
msgstr "`histogram`"

#. type: Plain text
#: en/diff-options.txt:192
#, priority:280
msgid "This algorithm extends the patience algorithm to \"support low-occurrence common elements\"."
msgstr "Este algoritmo estende o algoritmo \"patience\" (paciência) para \"se compatível com os elementos comuns com baixa ocorrência\"."

#. type: Plain text
#: en/diff-options.txt:197
#, priority:280
msgid "For instance, if you configured the `diff.algorithm` variable to a non-default value and want to use the default one, then you have to use `--diff-algorithm=default` option."
msgstr "Caso tenha configurado uma variável `diff.algorithm` para um valor sem predefinição e quer utilizar a variável predefinida por exemplo, então utilize a opção `--diff-algorithm=default`."

#. type: Labeled list
#: en/diff-options.txt:198
#, no-wrap, priority:280
msgid "--stat[=<width>[,<name-width>[,<count>]]]"
msgstr "--stat[=<largura>[,<largura-do-nome>[,<count>]]]"

#. type: Plain text
#: en/diff-options.txt:212
#, ignore-ellipsis, priority:280
msgid "Generate a diffstat. By default, as much space as necessary will be used for the filename part, and the rest for the graph part. Maximum width defaults to terminal width, or 80 columns if not connected to a terminal, and can be overridden by `<width>`. The width of the filename part can be limited by giving another width `<name-width>` after a comma. The width of the graph part can be limited by using `--stat-graph-width=<width>` (affects all commands generating a stat graph) or by setting `diff.statGraphWidth=<width>` (does not affect `git format-patch`).  By giving a third parameter `<count>`, you can limit the output to the first `<count>` lines, followed by `...` if there are more."
msgstr "Gera um diffstat. É predefinido que o espaço necessário será utilizado para a parte do nome do arquivo e o restante para a parte do grafo. A largura máxima a predefinição retorna para a largura do terminal ou 80 colunas, caso não esteja conectada num terminal e pode ser substituída por `<largura>`. A largura da parte do nome do arquivo pode ser limitada, fornecendo outra largura `<largura-do-nome>` após uma vírgula. A largura da parte do grafo pode ser limitada utilizando `--stat-graph-width=<largura>` (afeta todos os comandos que geram um grafo estatístico) ou definindo `diff.statGraphWidth=<largura>` (não afeta o `git format-patch`).  Ao fornecer um terceiro parâmetro `<count>`, é possível limitar a saída às primeiras linhas `<count>`, seguidas por `...` caso haja mais."

#. type: Plain text
#: en/diff-options.txt:215
#, priority:280
msgid "These parameters can also be set individually with `--stat-width=<width>`, `--stat-name-width=<name-width>` and `--stat-count=<count>`."
msgstr "Estes parâmetros também podem ser ajustados individualmente com `--stat-width=<largura>`, `--stat-name-width=<largura-do-nome>` e `--stat-count=<count>`."

#. type: Labeled list
#: en/diff-options.txt:216
#, ignore-same, no-wrap, priority:280
msgid "--compact-summary"
msgstr "--compact-summary"

#. type: Plain text
#: en/diff-options.txt:223
#, priority:280
msgid "Output a condensed summary of extended header information such as file creations or deletions (\"new\" or \"gone\", optionally \"+l\" if it's a symlink) and mode changes (\"+x\" or \"-x\" for adding or removing executable bit respectively) in diffstat. The information is put between the filename part and the graph part. Implies `--stat`."
msgstr "A saída de um resumo condensado das informações do cabeçalho estendido como criações ou exclusões dos arquivos (\"novo\" ou \"desaparecido\", opcionalmente \"+l\" se for um link simbólico) e alterações do modo (\"+x\" ou \"-x\" para adicionar ou remover um bit executável, respectivamente) no diffstat. As informações são colocadas entre a parte do nome do arquivo e a parte do grafo. Implica no uso da opção `--stat`."

#. type: Labeled list
#: en/diff-options.txt:224 en/git-apply.txt:45
#, ignore-same, no-wrap, priority:280
msgid "--numstat"
msgstr "--numstat"

#. type: Plain text
#: en/diff-options.txt:230
#, priority:280
msgid "Similar to `--stat`, but shows number of added and deleted lines in decimal notation and pathname without abbreviation, to make it more machine friendly.  For binary files, outputs two `-` instead of saying `0 0`."
msgstr "Semelhante ao `--stat`, exibe a quantidade de linhas adicionadas, excluídas, em notação decimal e o nome do caminho sem abreviação, para torná-lo mais amigável à máquina.  Para arquivos binários, gera dois `-` em vez de `0 0`."

#. type: Labeled list
#: en/diff-options.txt:231
#, ignore-same, no-wrap, priority:280
msgid "--shortstat"
msgstr "--shortstat"

#. type: Plain text
#: en/diff-options.txt:235
#, priority:280
msgid "Output only the last line of the `--stat` format containing total number of modified files, as well as number of added and deleted lines."
msgstr "Produz apenas a última linha do formato `--stat` contendo a quantidade total dos arquivos modificados, assim como a quantidade de linhas adicionadas e excluídas."

#. type: Labeled list
#: en/diff-options.txt:236
#, ignore-ellipsis, no-wrap, priority:280
msgid "-X[<param1,param2,...>]"
msgstr "-X[<parâmetro1,parâmetro2,...>]"

#. type: Labeled list
#: en/diff-options.txt:237
#, ignore-ellipsis, no-wrap, priority:280
msgid "--dirstat[=<param1,param2,...>]"
msgstr "--dirstat[=<parâmetro1,parâmetro2,...>]"

#. type: Plain text
#: en/diff-options.txt:244
#, priority:280
msgid "Output the distribution of relative amount of changes for each sub-directory. The behavior of `--dirstat` can be customized by passing it a comma separated list of parameters.  The defaults are controlled by the `diff.dirstat` configuration variable (see linkgit:git-config[1]).  The following parameters are available:"
msgstr "Produz a distribuição da quantidade relativa de alterações para cada subdiretório. O comportamento do `--dirstat` pode ser customizado passando uma lista de parâmetros separados por vírgula.  As predefinições são controlados pela variável de configuração `diff.dirstat` (veja linkgit:git-config[1]).  Os seguintes parâmetros estão disponíveis:"

#. type: Labeled list
#: en/diff-options.txt:246
#, ignore-same, no-wrap, priority:280
msgid "`changes`"
msgstr "`changes`"

#. type: Plain text
#: en/diff-options.txt:252
#, priority:280
msgid "Compute the dirstat numbers by counting the lines that have been removed from the source, or added to the destination. This ignores the amount of pure code movements within a file.  In other words, rearranging lines in a file is not counted as much as other changes.  This is the default behavior when no parameter is given."
msgstr "Calcule os números \"dirstat\" contando as linhas que foram removidas da fonte ou adicionadas ao destino. Ignora a quantidade de movimentos de código puro num arquivo.  Em outras palavras, reorganizar as linhas num arquivo não conta tanto quanto as outras alterações.  Este é o comportamento predefinido quando nenhum parâmetro for utilizado."

#. type: Labeled list
#: en/diff-options.txt:252
#, ignore-same, no-wrap, priority:280
msgid "`lines`"
msgstr "`lines`"

#. type: Plain text
#: en/diff-options.txt:260
#, priority:280
msgid "Compute the dirstat numbers by doing the regular line-based diff analysis, and summing the removed/added line counts. (For binary files, count 64-byte chunks instead, since binary files have no natural concept of lines). This is a more expensive `--dirstat` behavior than the `changes` behavior, but it does count rearranged lines within a file as much as other changes. The resulting output is consistent with what you get from the other `--*stat` options."
msgstr "Calcule os números \"dirstat\" fazendo a análise diferencial com base nas linhas regulares e somando as contagens das linhas removidas / adicionadas. (Para os arquivos binários, conte em blocos de 64 bytes, pois os arquivos binários não têm um conceito natural de linhas). Este é um comportamento mais dispendioso do `--dirstat` do que o comportamento `changes` (alterações), conta as linhas reorganizadas num arquivo tanto quanto as outras alterações. A produção resultante é consistente com o que você obtém das outras opções `--*stat`."

#. type: Labeled list
#: en/diff-options.txt:260
#, ignore-same, no-wrap, priority:280
msgid "`files`"
msgstr "`files`"

#. type: Plain text
#: en/diff-options.txt:265
#, priority:280
msgid "Compute the dirstat numbers by counting the number of files changed.  Each changed file counts equally in the dirstat analysis. This is the computationally cheapest `--dirstat` behavior, since it does not have to look at the file contents at all."
msgstr "Calcule os números \"dirstat\" contando a quantidade de arquivos alterados.  Cada arquivo alterado conta igualmente na análise do \"dirstat\". Este é o comportamento computacional mais barato do `--dirstat`, pois não precisa olhar o conteúdo do arquivo."

#. type: Labeled list
#: en/diff-options.txt:265
#, ignore-same, no-wrap, priority:280
msgid "`cumulative`"
msgstr "`cumulative`"

#. type: Plain text
#: en/diff-options.txt:270
#, priority:280
msgid "Count changes in a child directory for the parent directory as well.  Note that when using `cumulative`, the sum of the percentages reported may exceed 100%. The default (non-cumulative) behavior can be specified with the `noncumulative` parameter."
msgstr "Conta as alterações num diretório herdeiro e também para o diretório de origem.  Observe que, ao utilizar `cumulative` (cumulativo), a soma das porcentagens relatadas pode exceder os 100%. O comportamento predefinido (não cumulativo) pode ser especificado com o parâmetro `noncumulative` (não cumulativo)."

#. type: Labeled list
#: en/diff-options.txt:270 en/git-cherry.txt:39
#, no-wrap, priority:280
msgid "<limit>"
msgstr "<limite>"

#. type: Plain text
#: en/diff-options.txt:274
#, priority:280
msgid "An integer parameter specifies a cut-off percent (3% by default).  Directories contributing less than this percentage of the changes are not shown in the output."
msgstr "Um parâmetro inteiro especifica uma porcentagem de corte (a predefinição retorna para 3%).  Os diretórios que contribuem com menos que esta porcentagem nas alterações não são exibidos na saída."

#. type: Plain text
#: en/diff-options.txt:280
#, priority:280
msgid "Example: The following will count changed files, while ignoring directories with less than 10% of the total amount of changed files, and accumulating child directory counts in the parent directories: `--dirstat=files,10,cumulative`."
msgstr "Exemplo: O seguinte contará os arquivos alterados, ignorando os diretórios com menos de 10% da quantidade total dos arquivos alterados e acumulando as contagens de um diretório-herdado nos diretórios-raiz: `---dirstat=arquivos,10,cumulative`."

#. type: Labeled list
#: en/diff-options.txt:281
#, ignore-same, no-wrap, priority:280
msgid "--cumulative"
msgstr "--cumulative"

#. type: Plain text
#: en/diff-options.txt:283
#, priority:280
msgid "Synonym for --dirstat=cumulative"
msgstr "É um sinônimo para `--dirstat=cumulative`"

#. type: Labeled list
#: en/diff-options.txt:284
#, ignore-ellipsis, no-wrap, priority:280
msgid "--dirstat-by-file[=<param1,param2>...]"
msgstr "--dirstat-by-file[=<parâmetro1,parâmetro2>...]"

#. type: Plain text
#: en/diff-options.txt:286
#, ignore-ellipsis, priority:280
msgid "Synonym for --dirstat=files,param1,param2..."
msgstr "É um sinônimo para `--dirstat=arquivos,parâmetro1,parâmetro2...`"

#. type: Labeled list
#: en/diff-options.txt:287 en/git-apply.txt:52 en/git-shortlog.txt:35 en/merge-options.txt:168
#, ignore-same, no-wrap, priority:280
msgid "--summary"
msgstr "--summary"

#. type: Plain text
#: en/diff-options.txt:290
#, priority:280
msgid "Output a condensed summary of extended header information such as creations, renames and mode changes."
msgstr "Produza um resumo condensado das informações estendidas do cabeçalho, como criações, renomeações e alterações do modo."

#. type: Labeled list
#: en/diff-options.txt:292
#, ignore-same, no-wrap, priority:280
msgid "--patch-with-stat"
msgstr "--patch-with-stat"

#. type: Plain text
#: en/diff-options.txt:294
#, priority:280
msgid "Synonym for `-p --stat`."
msgstr "É um sinônimo para `-p --stat`."

#. type: Labeled list
#: en/diff-options.txt:298 en/git-apply.txt:116 en/git-cat-file.txt:216 en/git-check-attr.txt:34 en/git-check-ignore.txt:47 en/git-checkout-index.txt:73 en/git-commit.txt:158 en/git-config.txt:229 en/git-grep.txt:176 en/git-ls-files.txt:80 en/git-ls-tree.txt:55 en/git-merge-tree.txt:43 en/git-mktree.txt:23 en/git-status.txt:126 en/git-update-index.txt:173 en/git-worktree.txt:230
#, ignore-same, no-wrap, priority:280
msgid "-z"
msgstr "-z"

#. type: Plain text
#: en/diff-options.txt:301
#, no-wrap, priority:280
msgid "\tSeparate the commits with NULs instead of with new newlines.\n"
msgstr "\tSepare os commits com caracteres `NUL` em vez de novos caracteres \"newlines\" (novas linhas).\n"

#. type: Plain text
#: en/diff-options.txt:304
#, priority:280
msgid "Also, when `--raw` or `--numstat` has been given, do not munge pathnames and use NULs as output field terminators."
msgstr "Além disso, quando a opção `--raw` ou `--numstat` for utilizado, não una os nomes dos caminhos e utilize caracteres `NUL` como terminadores na saída dos campos."

#. type: Plain text
#: en/diff-options.txt:308
#, no-wrap, priority:280
msgid ""
"\tWhen `--raw`, `--numstat`, `--name-only` or `--name-status` has been\n"
"\tgiven, do not munge pathnames and use NULs as output field terminators.\n"
msgstr ""
"\tQuando `--raw`, `--numstat`, `--name-only` ou `--name-status` tenha sido\n"
"\tutilizado, não una os nomes do caminho e utilize caracteres `NUL` como terminadores do campo de saída.\n"

#. type: Plain text
#: en/diff-options.txt:313 en/git-apply.txt:123
#, priority:280
msgid "Without this option, pathnames with \"unusual\" characters are quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1])."
msgstr "Sem esta opção, os nomes do caminho com caracteres \"incomuns\" são citados como explicado na variável de configuração `core.quotePath` (veja linkgit:git-config [1])."

#. type: Labeled list
#: en/diff-options.txt:314 en/git-config.txt:238 en/git-grep.txt:158 en/git-ls-tree.txt:59 en/git-merge-tree.txt:49 en/git-name-rev.txt:77
#, ignore-same, no-wrap, priority:280
msgid "--name-only"
msgstr "--name-only"

#. type: Plain text
#: en/diff-options.txt:318
#, priority:280
msgid "Show only names of changed files. The file names are often encoded in UTF-8.  For more information see the discussion about encoding in the linkgit:git-log[1] manual page."
msgstr "Mostre apenas os nomes dos arquivos que foram alterados. Os nomes dos arquivos são frequentemente codificados em UTF-8.  Para mais informações, consulte a discussão sobre codificação na página do manual linkgit:git-log[1]."

#. type: Labeled list
#: en/diff-options.txt:319 en/git-ls-tree.txt:60
#, ignore-same, no-wrap, priority:280
msgid "--name-status"
msgstr "--name-status"

#. type: Plain text
#: en/diff-options.txt:323
#, priority:280
msgid "Show only names and status of changed files. See the description of the `--diff-filter` option on what the status letters mean.  Just like `--name-only` the file names are often encoded in UTF-8."
msgstr "Exiba apenas os nomes e a condição atual dos arquivos que foram alterados. Consulte a descrição da opção `--diff-filter` sobre o significado das letras de condição.  Assim como os nomes dos arquivos com `--name-only` geralmente são codificados em UTF-8."

#. type: Labeled list
#: en/diff-options.txt:324
#, no-wrap, priority:280
msgid "--submodule[=<format>]"
msgstr "--submodule[=<formato>]"

#. type: Plain text
#: en/diff-options.txt:335
#, priority:280
msgid "Specify how differences in submodules are shown.  When specifying `--submodule=short` the 'short' format is used.  This format just shows the names of the commits at the beginning and end of the range.  When `--submodule` or `--submodule=log` is specified, the 'log' format is used.  This format lists the commits in the range like linkgit:git-submodule[1] `summary` does.  When `--submodule=diff` is specified, the 'diff' format is used.  This format shows an inline diff of the changes in the submodule contents between the commit range.  Defaults to `diff.submodule` or the 'short' format if the config option is unset."
msgstr "Especifique como as diferenças nos submódulos são exibidos.  Ao especificar `--submodule=short`, o formato 'short' (curto) é utilizado.  Este formato exibe apenas os nomes dos commits no início e no final do intervalo.  Ao utilizar a opção `--submodule` ou `--submodule=log`, o formato 'log' passa a ser utilizado.  Este formato lista os commits no intervalo como o linkgit:git-submodule[1] `summary` (resumo) faz.  Ao utilizar a opção `--submodule=diff`, o formato 'diff' passa a ser utilizado.  Este formato exibe uma comparação nas linhas das alterações no conteúdo do submódulo entre o intervalo do commit.  A predefinição retorna para a opção de configuração `diff.submodule` ou o formato 'short' (curto) caso a opção da configuração estiver desativada."

#. type: Labeled list
#: en/diff-options.txt:336 en/git-branch.txt:141 en/git-for-each-ref.txt:60 en/git-grep.txt:193 en/git-show-branch.txt:119 en/git-tag.txt:125
#, no-wrap, priority:280
msgid "--color[=<when>]"
msgstr "--color[=<quando>]"

#. type: Plain text
#: en/diff-options.txt:340
#, priority:280
msgid "Show colored diff.  `--color` (i.e. without '=<when>') is the same as `--color=always`.  '<when>' can be one of `always`, `never`, or `auto`."
msgstr "Exibe o diff colorido.  A opção `--color` (sem '=<quando>' por exemplo) é o mesmo que a opção `--color=always`.  '<quando>' pode ser `always` (sempre), `never` (nunca), ou `auto`."

#. type: Plain text
#: en/diff-options.txt:343
#, no-wrap, priority:280
msgid ""
"\tIt can be changed by the `color.ui` and `color.diff`\n"
"\tconfiguration settings.\n"
msgstr ""
"\tPode ser alterado pelas definições da configuração\n"
"\t`color.ui` e `color.diff`.\n"

#. type: Labeled list
#: en/diff-options.txt:345 en/git-branch.txt:146 en/git-grep.txt:197 en/git-show-branch.txt:124
#, ignore-same, no-wrap, priority:280
msgid "--no-color"
msgstr "--no-color"

#. type: Plain text
#: en/diff-options.txt:347
#, priority:280
msgid "Turn off colored diff."
msgstr "Desativa o diff colorido."

#. type: Plain text
#: en/diff-options.txt:349
#, no-wrap, priority:280
msgid "\tThis can be used to override configuration settings.\n"
msgstr "\tPode ser utilizado para substituir a definição da configuração.\n"

#. type: Plain text
#: en/diff-options.txt:351
#, no-wrap, priority:280
msgid "\tIt is the same as `--color=never`.\n"
msgstr "\tÉ o mesmo que `--color=never`.\n"

#. type: Labeled list
#: en/diff-options.txt:352
#, no-wrap, priority:280
msgid "--color-moved[=<mode>]"
msgstr "--color-moved[=<modo>]"

#. type: Plain text
#: en/diff-options.txt:354
#, priority:280
msgid "Moved lines of code are colored differently."
msgstr "As linhas de código que foram movidas são coloridas de maneira diferente."

#. type: Plain text
#: en/diff-options.txt:356
#, no-wrap, priority:280
msgid "\tIt can be changed by the `diff.colorMoved` configuration setting.\n"
msgstr "\tPode ser alterado através da pela definição da configuração `diff.colorMoved`.\n"

#. type: Plain text
#: en/diff-options.txt:360
#, no-wrap, priority:280
msgid ""
"\tThe <mode> defaults to 'no' if the option is not given\n"
"\tand to 'zebra' if the option with no mode is given.\n"
"\tThe mode must be one of:\n"
msgstr ""
"\tO <modo> retorna para a predefinição como 'no' caso a opção não seja utilizada\n"
"\te para 'zebra' caso a opção seja utilizada sem nenhum modo.\n"
"\tO modo deve ser um dos seguintes:\n"

#. type: Labeled list
#: en/diff-options.txt:362 en/diff-options.txt:404
#, ignore-same, no-wrap, priority:280
msgid "no"
msgstr "no"

#. type: Plain text
#: en/diff-options.txt:364
#, priority:280
msgid "Moved lines are not highlighted."
msgstr "As linhas movidas não são destacadas."

#. type: Labeled list
#: en/diff-options.txt:364 en/git-commit.txt:252
#, ignore-same, no-wrap, priority:280
msgid "default"
msgstr "default"

#. type: Plain text
#: en/diff-options.txt:367
#, priority:280
msgid "Is a synonym for `zebra`. This may change to a more sensible mode in the future."
msgstr "É um sinônimo para `zebra`. Pode ser que isso mude para um modo mais sensível no futuro."

#. type: Labeled list
#: en/diff-options.txt:367 en/diff-options.txt:436
#, ignore-same, no-wrap, priority:280
msgid "plain"
msgstr "plain"

#. type: Plain text
#: en/diff-options.txt:374
#, priority:280
msgid "Any line that is added in one location and was removed in another location will be colored with 'color.diff.newMoved'.  Similarly 'color.diff.oldMoved' will be used for removed lines that are added somewhere else in the diff. This mode picks up any moved line, but it is not very useful in a review to determine if a block of code was moved without permutation."
msgstr "Qualquer linha adicionada num local e removida em outro será colorida com 'color.diff.newMoved'.  Da mesma forma, 'color.diff.oldMoved' será utilizado para as linhas que forem removidas e que foram adicionadas em outro lugar no diff. Este modo seleciona qualquer linha movida, mas não é muito útil numa revisão para determinar se um bloco do código foi movido sem permutação."

#. type: Labeled list
#: en/diff-options.txt:374
#, ignore-same, no-wrap, priority:280
msgid "blocks"
msgstr "blocks"

#. type: Plain text
#: en/diff-options.txt:379
#, priority:280
msgid "Blocks of moved text of at least 20 alphanumeric characters are detected greedily. The detected blocks are painted using either the 'color.diff.{old,new}Moved' color.  Adjacent blocks cannot be told apart."
msgstr "Os blocos de texto movidos com pelo menos 20 caracteres alfanuméricos são detectados de forma ávida. Os blocos detectados são pintados utilizando a cor `color.diff.{old,new}Moved`.  Os blocos adjacentes não podem ser separados."

#. type: Labeled list
#: en/diff-options.txt:379
#, ignore-same, no-wrap, priority:280
msgid "zebra"
msgstr "zebra"

#. type: Plain text
#: en/diff-options.txt:384
#, priority:280
msgid "Blocks of moved text are detected as in 'blocks' mode. The blocks are painted using either the 'color.diff.{old,new}Moved' color or 'color.diff.{old,new}MovedAlternative'. The change between the two colors indicates that a new block was detected."
msgstr "Os blocos de texto que foram movidos são detectados como no modo 'blocks' (blocos). Os blocos são pintados utilizando a cor `color.diff.{old,new}Moved` ou `color.diff.{old,new}MovedAlternative`. A alteração entre as duas cores indica que um novo bloco foi detectado."

#. type: Labeled list
#: en/diff-options.txt:384
#, ignore-same, no-wrap, priority:280
msgid "dimmed-zebra"
msgstr "dimmed-zebra"

#. type: Plain text
#: en/diff-options.txt:389
#, priority:280
msgid "Similar to 'zebra', but additional dimming of uninteresting parts of moved code is performed. The bordering lines of two adjacent blocks are considered interesting, the rest is uninteresting.  `dimmed_zebra` is a deprecated synonym."
msgstr "Semelhante ao 'zebra', porém é realizado o escurecimento adicional das partes desinteressantes do código que foi movido. As linhas limítrofes dos dois blocos adjacentes são considerados como interessantes, o resto como não interessante.  `dimmed_zebra` é um sinônimo obsoleto."

#. type: Labeled list
#: en/diff-options.txt:391
#, ignore-same, no-wrap, priority:280
msgid "--no-color-moved"
msgstr "--no-color-moved"

#. type: Plain text
#: en/diff-options.txt:394
#, priority:280
msgid "Turn off move detection. This can be used to override configuration settings. It is the same as `--color-moved=no`."
msgstr "Desativa a detecção de movimento. Pode ser utilizado para substituir a definição da configuração. É o mesmo que `--color-moved=no`."

#. type: Labeled list
#: en/diff-options.txt:395
#, no-wrap, priority:280
msgid "--color-moved-ws=<modes>"
msgstr "--color-moved-ws=<modos>"

#. type: Plain text
#: en/diff-options.txt:398
#, priority:280
msgid "This configures how whitespace is ignored when performing the move detection for `--color-moved`."
msgstr "Configura como o espaço é ignorado durante a execução da detecção do mover para `--color-moved`."

#. type: Plain text
#: en/diff-options.txt:400
#, no-wrap, priority:280
msgid "\tIt can be set by the `diff.colorMovedWS` configuration setting.\n"
msgstr "\tPode ser definido através da definição da variável de configuração `diff.colorMovedWS`.\n"

#. type: Plain text
#: en/diff-options.txt:402
#, no-wrap, priority:280
msgid "\tThese modes can be given as a comma separated list:\n"
msgstr "\tEstes modos podem ser utilizados como uma lista separada por vírgulas:\n"

#. type: Plain text
#: en/diff-options.txt:406
#, priority:280
msgid "Do not ignore whitespace when performing move detection."
msgstr "Não ignore os espaços quando realizar a detecção da ação de mover."

#. type: Labeled list
#: en/diff-options.txt:406 en/merge-strategies.txt:43
#, ignore-same, no-wrap, priority:280
msgid "ignore-space-at-eol"
msgstr "ignore-space-at-eol"

#. type: Plain text
#: en/diff-options.txt:408 en/diff-options.txt:762
#, priority:280
msgid "Ignore changes in whitespace at EOL."
msgstr "Ignore as alterações no espaço na EOL (fim da linha)."

#. type: Labeled list
#: en/diff-options.txt:408 en/merge-strategies.txt:41
#, ignore-same, no-wrap, priority:280
msgid "ignore-space-change"
msgstr "ignore-space-change"

#. type: Plain text
#: en/diff-options.txt:412 en/diff-options.txt:768
#, priority:280
msgid "Ignore changes in amount of whitespace.  This ignores whitespace at line end, and considers all other sequences of one or more whitespace characters to be equivalent."
msgstr "Ignore as alterações na quantidade do espaço.  Ignora o espaço no final da linha e considera todas as outras sequências de um ou mais caracteres de espaço como equivalentes."

#. type: Labeled list
#: en/diff-options.txt:412 en/merge-strategies.txt:42
#, ignore-same, no-wrap, priority:280
msgid "ignore-all-space"
msgstr "ignore-all-space"

#. type: Plain text
#: en/diff-options.txt:415
#, priority:280
msgid "Ignore whitespace when comparing lines. This ignores differences even if one line has whitespace where the other line has none."
msgstr "Ignore o espaço durante a comparação das linhas. Ignore as diferenças mesmo que uma linha tenha espaços quando a outra linha não tiver nenhuma."

#. type: Labeled list
#: en/diff-options.txt:415
#, ignore-same, no-wrap, priority:280
msgid "allow-indentation-change"
msgstr "allow-indentation-change"

#. type: Plain text
#: en/diff-options.txt:420
#, priority:280
msgid "Initially ignore any whitespace in the move detection, then group the moved code blocks only into a block if the change in whitespace is the same per line. This is incompatible with the other modes."
msgstr "Ignore inicialmente, qualquer espaço na detecção da ação de mover, em seguida, agrupe os blocos do código que foram movidos apenas num bloco caso a alteração no espaço seja a mesma em cada linha. Isto é incompatível com os outros modos."

#. type: Labeled list
#: en/diff-options.txt:422
#, ignore-same, no-wrap, priority:280
msgid "--no-color-moved-ws"
msgstr "--no-color-moved-ws"

#. type: Plain text
#: en/diff-options.txt:426
#, priority:280
msgid "Do not ignore whitespace when performing move detection. This can be used to override configuration settings. It is the same as `--color-moved-ws=no`."
msgstr "Não ignore os espaços quando realizar a detecção da ação de mover. Pode ser utilizado para substituir a definição da configuração. É o mesmo que `--color-moved-ws=no`."

#. type: Labeled list
#: en/diff-options.txt:427
#, no-wrap, priority:280
msgid "--word-diff[=<mode>]"
msgstr "--word-diff[=<modo>]"

#. type: Plain text
#: en/diff-options.txt:432
#, priority:280
msgid "Show a word diff, using the <mode> to delimit changed words.  By default, words are delimited by whitespace; see `--word-diff-regex` below.  The <mode> defaults to 'plain', and must be one of:"
msgstr "Exiba umadiff entre as palavras, usando o <modo> para delimitar as palavras alteradas.  É predefinido que as palavras sejam delimitadas por espaços; consulte `--word-diff-regex` abaixo.  O <modo> retorna para a predefinição 'plain' e deve ser um dos seguintes:"

#. type: Plain text
#: en/diff-options.txt:436
#, priority:280
msgid "Highlight changed words using only colors.  Implies `--color`."
msgstr "Destaque as palavras alteradas usando apenas as cores.  Implica no uso da opção `--color`."

#. type: Plain text
#: en/diff-options.txt:440
#, priority:280
msgid "Show words as `[-removed-]` and `{+added+}`.  Makes no attempts to escape the delimiters if they appear in the input, so the output may be ambiguous."
msgstr "Exiba as palavras como `[-removed-]` (removido) e `{+added+}` (adicionado).  Não faz nenhuma tentativa de escapar os delimitadores caso eles apareçam na entrada, portanto, a saída pode ser ambígua."

#. type: Labeled list
#: en/diff-options.txt:440
#, ignore-same, no-wrap, priority:280
msgid "porcelain"
msgstr "porcelain"

#. type: Plain text
#: en/diff-options.txt:447
#, priority:280
msgid "Use a special line-based format intended for script consumption.  Added/removed/unchanged runs are printed in the usual unified diff format, starting with a `+`/`-`/` ` character at the beginning of the line and extending to the end of the line.  Newlines in the input are represented by a tilde `~` on a line of its own."
msgstr "Use um formato especial orientado em linha destinado para a utilização com um script.  As execuções adicionadas/removidas/inalteradas são impressas no formato diff unificado tradicional, começando com um caractere `+`/`-`/` ` no início da linha e estendendo-se até o final.  As novas linhas na entrada são representadas por um til `~` numa linha própria."

#. type: Labeled list
#: en/diff-options.txt:447 en/git-daemon.txt:131 en/git-submodule.txt:172
#, ignore-same, no-wrap, priority:280
msgid "none"
msgstr "none"

#. type: Plain text
#: en/diff-options.txt:449
#, priority:280
msgid "Disable word diff again."
msgstr "Desative a palavra diff novamente."

#. type: Plain text
#: en/diff-options.txt:453
#, priority:280
msgid "Note that despite the name of the first mode, color is used to highlight the changed parts in all modes if enabled."
msgstr "Observe que, apesar do nome do primeiro modo, a cor é utilizada para realçar as partes alteradas em todos os modos caso seja ativada."

#. type: Labeled list
#: en/diff-options.txt:454
#, no-wrap, priority:280
msgid "--word-diff-regex=<regex>"
msgstr "--word-diff-regex=<expressão-regular>"

#. type: Plain text
#: en/diff-options.txt:458
#, priority:280
msgid "Use <regex> to decide what a word is, instead of considering runs of non-whitespace to be a word.  Also implies `--word-diff` unless it was already enabled."
msgstr "Utilize uma `<expressão-regular>` para decidir o que uma palavra é em vez de considerar as execuções dos espaços que não estejam vazios como uma palavra.  Também implica no uso da opção `--word-diff`, a menos que já esteja ativo."

#. type: Plain text
#: en/diff-options.txt:466
#, priority:280
msgid "Every non-overlapping match of the <regex> is considered a word.  Anything between these matches is considered whitespace and ignored(!) for the purposes of finding differences.  You may want to append `|[^[:space:]]` to your regular expression to make sure that it matches all non-whitespace characters.  A match that contains a newline is silently truncated(!) at the newline."
msgstr "Toda a coincidência não sobreposta do `<expressão-regular>` é considerado como sendo uma palavra.  Qualquer coisa entre estas coincidências é considerada um espaço e é ignorado(!) com o objetivo de encontrar as diferenças.  Você pode anexar `|[^[:space:]]` à sua expressão regular para garantir que ela coincida com todos os caracteres que não sejam espaços.  Uma coincidência que contenha uma nova linha é silenciosamente truncada(!) na nova linha."

#. type: Plain text
#: en/diff-options.txt:469
#, priority:280
msgid "For example, `--word-diff-regex=.` will treat each character as a word and, correspondingly, show differences character by character."
msgstr "A opção `--word-diff-regex=.` por exemplo, tratará cada caractere como uma palavra e coincidentemente, exibirá as diferenças caractere a caractere."

#. type: Plain text
#: en/diff-options.txt:474
#, priority:280
msgid "The regex can also be set via a diff driver or configuration option, see linkgit:gitattributes[5] or linkgit:git-config[1].  Giving it explicitly overrides any diff driver or configuration setting.  Diff drivers override configuration settings."
msgstr "A expressão regular também pode ser definida através de um controlador do diff ou uma opção de configuração, consulte linkgit:gitattributes[5] or linkgit:git-config[1].  A concessão explícita substitui qualquer controle diff ou uma configuração.  Os controles diff substituem as definições da configuração."

#. type: Labeled list
#: en/diff-options.txt:475
#, no-wrap, priority:280
msgid "--color-words[=<regex>]"
msgstr "--color-words[=<expressão-regular>]"

#. type: Plain text
#: en/diff-options.txt:478
#, priority:280
msgid "Equivalent to `--word-diff=color` plus (if a regex was specified) `--word-diff-regex=<regex>`."
msgstr "Equivalente a `--word-diff=color` mais (caso um regex seja utilizado) `--word-diff-regex=<expressão-regular>`."

#. type: Labeled list
#: en/diff-options.txt:480 en/git-status.txt:143
#, ignore-same, no-wrap, priority:280
msgid "--no-renames"
msgstr "--no-renames"

#. type: Plain text
#: en/diff-options.txt:483
#, priority:280
msgid "Turn off rename detection, even when the configuration file gives the default to do so."
msgstr "Desative a detecção da ação de renomear, mesmo quando o arquivo de configuração seja predefinido para tanto."

#. type: Labeled list
#: en/diff-options.txt:484
#, ignore-same, no-wrap, priority:280
msgid "--[no-]rename-empty"
msgstr "--[no-]rename-empty"

#. type: Plain text
#: en/diff-options.txt:486
#, priority:280
msgid "Whether to use empty blobs as rename source."
msgstr "Se usa ou não bolhas vazias como origem do nome."

#. type: Labeled list
#: en/diff-options.txt:488 en/git-apply.txt:58
#, ignore-same, no-wrap, priority:280
msgid "--check"
msgstr "--check"

#. type: Plain text
#: en/diff-options.txt:497
#, priority:280
msgid "Warn if changes introduce conflict markers or whitespace errors.  What are considered whitespace errors is controlled by `core.whitespace` configuration.  By default, trailing whitespaces (including lines that consist solely of whitespaces) and a space character that is immediately followed by a tab character inside the initial indent of the line are considered whitespace errors.  Exits with non-zero status if problems are found. Not compatible with --exit-code."
msgstr "Avise caso as alterações introduzirem os marcadores de conflito ou os erros de espaço.  A configuração `core.whitespace` define o que são considerados erros de espaço.  É predefinido que os espaços à direita (incluindo as linhas que consistem apenas de espaços) e um caractere de espaço que seja imediatamente seguido por um caractere de tabulação dentro do recuo inicial da linha, são considerados erros de espaço.  Encerra com uma condição diferente de zero caso problemas sejam encontrados. Não é compatível com `--exit-code`."

#. type: Labeled list
#: en/diff-options.txt:498
#, no-wrap, priority:280
msgid "--ws-error-highlight=<kind>"
msgstr "--ws-error-highlight=<tipo>"

#. type: Plain text
#: en/diff-options.txt:507
#, priority:280
msgid "Highlight whitespace errors in the `context`, `old` or `new` lines of the diff.  Multiple values are separated by comma, `none` resets previous values, `default` reset the list to `new` and `all` is a shorthand for `old,new,context`.  When this option is not given, and the configuration variable `diff.wsErrorHighlight` is not set, only whitespace errors in `new` lines are highlighted. The whitespace errors are colored with `color.diff.whitespace`."
msgstr "Destaque os erros de espaço nas linhas `context` (contexto), `old` (antigo) ou `new` (novo) do diff.  Vários valores são separados por vírgula, `none` redefine os valores anteriores, `default` redefine a lista para `new` e `all` é uma abreviação para `old,new,context`.  Quando esta opção não é utilizada e a variável de configuração `diff.wsErrorHighlight` não está definida, apenas os erros de espaço nas linhas `novas` são destacados. Os erros de espaço são coloridos com `color.diff.whitespace`."

#. type: Labeled list
#: en/diff-options.txt:510
#, ignore-same, no-wrap, priority:280
msgid "--full-index"
msgstr "--full-index"

#. type: Plain text
#: en/diff-options.txt:514
#, priority:280
msgid "Instead of the first handful of characters, show the full pre- and post-image blob object names on the \"index\" line when generating patch format output."
msgstr "Em vez do primeiro punhado de caracteres, exiba os nomes completos dos objetos bolha antes e depois da imagem na linha \"index\" ao produzir a saída no formato patch."

#. type: Labeled list
#: en/diff-options.txt:515 en/git-apply.txt:161
#, ignore-same, no-wrap, priority:280
msgid "--binary"
msgstr "--binary"

#. type: Plain text
#: en/diff-options.txt:518
#, priority:280
msgid "In addition to `--full-index`, output a binary diff that can be applied with `git-apply`."
msgstr "Além de `--full-index`, gere um diff binário que possa ser aplicado com o comando `git-apply`."

#. type: Labeled list
#: en/diff-options.txt:522 en/git-ls-files.txt:161 en/git-ls-tree.txt:72 en/git-show-ref.txt:65
#, no-wrap, priority:280
msgid "--abbrev[=<n>]"
msgstr "--abrev[=<n>]"

#. type: Plain text
#: en/diff-options.txt:531
#, priority:280
msgid "Instead of showing the full 40-byte hexadecimal object name in diff-raw format output and diff-tree header lines, show the shortest prefix that is at least '<n>' hexdigits long that uniquely refers the object.  In diff-patch output format, `--full-index` takes higher precedence, i.e. if `--full-index` is specified, full blob names will be shown regardless of `--abbrev`.  Non default number of digits can be specified with `--abbrev=<n>`."
msgstr "Em vez de exibir o nome completo do objeto hexadecimal com 40 bytes na produção do formato diff-raw e nas linhas do cabeçalho da árvore diff, exibe o prefixo mais curto que se refira de forma única ao objeto e que tenha até '<n>' hexdigits.  No formato da produção da saída do diff-patch,  a opção `--full-index` tem maior prioridade, ou seja, caso `--full-index` seja especificado o nome completo da bolha será exibido independente da opção `--abbrev`.  A quantidade dos dígitos fora do preestabelecido pode ser especificado através da opção `--abbrev=<n>`."

#. type: Labeled list
#: en/diff-options.txt:532
#, no-wrap, priority:280
msgid "-B[<n>][/<m>]"
msgstr "-B[<n>][/<m>]"

#. type: Labeled list
#: en/diff-options.txt:533
#, no-wrap, priority:280
msgid "--break-rewrites[=[<n>][/<m>]]"
msgstr "--break-rewrites[=[<n>][/<m>]]"

#. type: Plain text
#: en/diff-options.txt:536
#, priority:280
msgid "Break complete rewrite changes into pairs of delete and create. This serves two purposes:"
msgstr "Divida as alterações reescritas que foram completas em pares de exclusão e criação. Isso serve a dois propósitos:"

#. type: Plain text
#: en/diff-options.txt:546
#, priority:280
msgid "It affects the way a change that amounts to a total rewrite of a file not as a series of deletion and insertion mixed together with a very few lines that happen to match textually as the context, but as a single deletion of everything old followed by a single insertion of everything new, and the number `m` controls this aspect of the -B option (defaults to 60%). `-B/70%` specifies that less than 30% of the original should remain in the result for Git to consider it a total rewrite (i.e. otherwise the resulting patch will be a series of deletion and insertion mixed together with context lines)."
msgstr "Afeta a maneira como uma mudança que equivale a uma reescrita total de um arquivo, não como uma série de exclusão e inserção combinadas com poucas linhas que coincidem textualmente com o contexto, e sim como uma única exclusão de tudo o que é antigo seguido por um inserção única de tudo que for novo, o número `m` controla este aspecto da opção `-B` (a predefinição retorna para 60%). `-B / 70%` determina que menos de 30% do original deve permanecer no resultado para que o Git considere-o como uma reescrita total (ou seja, caso contrário, o patch resultante será uma série de exclusões e inserções combinados com linhas de contexto)."

#. type: Plain text
#: en/diff-options.txt:554
#, priority:280
msgid "When used with -M, a totally-rewritten file is also considered as the source of a rename (usually -M only considers a file that disappeared as the source of a rename), and the number `n` controls this aspect of the -B option (defaults to 50%). `-B20%` specifies that a change with addition and deletion compared to 20% or more of the file's size are eligible for being picked up as a possible source of a rename to another file."
msgstr "Quando utilizado com a opção `-M`, um arquivo totalmente reescrito também é considerado a fonte de uma renomeação (O `-M` geralmente considera apenas um arquivo que desapareceu como a origem de uma renomeação), o número `n` controla esse aspecto da opção `-B` (a predefinição retorna para 50%). O `-B20%` determina que uma alteração com a adição e a exclusão em comparação com 20% ou mais do tamanho do arquivo é elegível para ser selecionada como uma possível fonte de renomeação para um outro arquivo."

#. type: Labeled list
#: en/diff-options.txt:555
#, no-wrap, priority:280
msgid "-M[<n>]"
msgstr "-M[<n>]"

#. type: Labeled list
#: en/diff-options.txt:556 en/git-status.txt:147
#, no-wrap, priority:280
msgid "--find-renames[=<n>]"
msgstr "--find-renames[=<n>]"

#. type: Plain text
#: en/diff-options.txt:559
#, no-wrap, priority:280
msgid "\tDetect renames.\n"
msgstr "\tDetecte as renomeações.\n"

#. type: Plain text
#: en/diff-options.txt:564
#, no-wrap, priority:280
msgid ""
"\tIf generating diffs, detect and report renames for each commit.\n"
"\tFor following files across renames while traversing history, see\n"
"\t`--follow`.\n"
msgstr ""
"\tAo produzir os diffs, detecte e relate tudo que for renomeado em cada commit.\n"
"\tPara acompanhar os arquivos através das renomeações enquanto percorre o histórico\n"
"\tconsulte o comando `--follow`.\n"

#. type: Plain text
#: en/diff-options.txt:574
#, no-wrap, priority:280
msgid ""
"\tIf `n` is specified, it is a threshold on the similarity\n"
"\tindex (i.e. amount of addition/deletions compared to the\n"
"\tfile's size). For example, `-M90%` means Git should consider a\n"
"\tdelete/add pair to be a rename if more than 90% of the file\n"
"\thasn't changed.  Without a `%` sign, the number is to be read as\n"
"\ta fraction, with a decimal point before it.  I.e., `-M5` becomes\n"
"\t0.5, and is thus the same as `-M50%`.  Similarly, `-M05` is\n"
"\tthe same as `-M5%`.  To limit detection to exact renames, use\n"
"\t`-M100%`.  The default similarity index is 50%.\n"
msgstr ""
"\tCaso `n` seja utilizado, é a limítrofe do índice da similaridade\n"
"\t(A quantidade de adições/exclusões comparado ao tamanho\n"
"\tdo arquivo). `-M90%` significa que o Git deve considerar uma ação do par de\n"
"\texclusão/adição para ser renomeado caso mais que 90% do arquivo\n"
"\tnão tenha sido alterado.  Sem um sinal de `%`, a quantidade deve ser lida como\n"
"\tuma fração, com um ponto decimal antes dele.  `-M5` se torna por exemplo\n"
"\t0.5, portanto, é o mesmo que `-M50%`.  Da mesma forma que `-M05` é\n"
"\to mesmo que `-M5%`.  Para limitar a detecção para renomeações exatas, utilize\n"
"\t`-M100%`.  A predefinição para o índice de similaridade é 50%.\n"

#. type: Labeled list
#: en/diff-options.txt:575
#, no-wrap, priority:280
msgid "-C[<n>]"
msgstr "-C[<n>]"

#. type: Labeled list
#: en/diff-options.txt:576
#, no-wrap, priority:280
msgid "--find-copies[=<n>]"
msgstr "--find-copies[=<n>]"

#. type: Plain text
#: en/diff-options.txt:579
#, priority:280
msgid "Detect copies as well as renames.  See also `--find-copies-harder`.  If `n` is specified, it has the same meaning as for `-M<n>`."
msgstr "Detecte as cópias e também o que for renomeado.  Consulte também `--find-copies-harder`.  Caso `n` seja utilizado, ele terá o mesmo significado que `-M<n>`."

#. type: Labeled list
#: en/diff-options.txt:580 en/git-svn.txt:626
#, ignore-same, no-wrap, priority:280
msgid "--find-copies-harder"
msgstr "--find-copies-harder"

#. type: Plain text
#: en/diff-options.txt:588
#, priority:280
msgid "For performance reasons, by default, `-C` option finds copies only if the original file of the copy was modified in the same changeset.  This flag makes the command inspect unmodified files as candidates for the source of copy.  This is a very expensive operation for large projects, so use it with caution.  Giving more than one `-C` option has the same effect."
msgstr "Por motivos de desempenho, a predefinição retorna para que a opção `-C` encontre as cópias apenas caso o arquivo original da cópia tenha sido modificado no mesmo conjunto de alterações.  Essa flag faz com que o comando inspecione os arquivos que não modificados como candidatos à origem da cópia.  Esta é uma operação muito dispendiosa em projetos grandes, portanto, utilize-a com cuidado.  Tem o mesmo efeito caso a opção `-C` seja repetida."

#. type: Labeled list
#: en/diff-options.txt:589 en/git-branch.txt:104 en/git-http-push.txt:45
#, no-wrap, priority:280
msgid "-D"
msgstr "-D"

#. type: Labeled list
#: en/diff-options.txt:590
#, ignore-same, no-wrap, priority:280
msgid "--irreversible-delete"
msgstr "--irreversible-delete"

#. type: Plain text
#: en/diff-options.txt:598
#, priority:280
msgid "Omit the preimage for deletes, i.e. print only the header but not the diff between the preimage and `/dev/null`. The resulting patch is not meant to be applied with `patch` or `git apply`; this is solely for people who want to just concentrate on reviewing the text after the change. In addition, the output obviously lacks enough information to apply such a patch in reverse, even manually, hence the name of the option."
msgstr "Omita a imagem prévia que será excluída, ou seja, imprima apenas o cabeçalho, mas não a diferença entre a pré-imagem e `/dev/null`. O patch resultante não deve ser aplicado com com o comando `patch` ou `git apply`; é apenas para pessoas que desejam se concentrar em revisar o texto após a alteração. Além disso, a saída obviamente não possui informações suficientes para aplicar esse patch em sentido inverso, mesmo manualmente, daí o nome da opção."

#. type: Plain text
#: en/diff-options.txt:601
#, priority:280
msgid "When used together with `-B`, omit also the preimage in the deletion part of a delete/create pair."
msgstr "Quando utilizado em conjunto com a opção `-B`, omita também a pré-imagem na parte da exclusão de um par excluir/criar."

#. type: Labeled list
#: en/diff-options.txt:602 en/git-svn.txt:625
#, no-wrap, priority:280
msgid "-l<num>"
msgstr "-l<num>"

#. type: Plain text
#: en/diff-options.txt:614
#, priority:280
msgid "The `-M` and `-C` options involve some preliminary steps that can detect subsets of renames/copies cheaply, followed by an exhaustive fallback portion that compares all remaining unpaired destinations to all relevant sources.  (For renames, only remaining unpaired sources are relevant; for copies, all original sources are relevant.)  For N sources and destinations, this exhaustive check is O(N^2).  This option prevents the exhaustive portion of rename/copy detection from running if the number of source/destination files involved exceeds the specified number.  Defaults to diff.renameLimit.  Note that a value of 0 is treated as unlimited."
msgstr "As opções `-M` e `-C` precisa de algumas ações preliminares que podem detectar os subconjuntos das renomeações/cópias simples, seguidos por uma exaustiva porção de recursos que compara o resto de todos os destinos que ainda não foram reparados com todas as fontes relevantes.  (Para as renomeações, apenas as fontes restantes que não foram pareadas são relevantes; nas cópias, todas as fontes originais são relevantes).  Para N fontes e destinos, esta verificação exaustiva é O(N^2).  Esta opção impede que a parte exaustiva da detecção de renomeamento/cópia seja executada caso a quantidade dos arquivos de origem/destino envolvidos exceda a quantidade definida.  Caso contrário, retorna para o valor definido em `diff.renameLimit`.  Observe que o valor 0 é tratado como ilimitado."

#. type: Labeled list
#: en/diff-options.txt:616
#, ignore-ellipsis, no-wrap, priority:280
msgid "--diff-filter=[(A|C|D|M|R|T|U|X|B)...[*]]"
msgstr "--diff-filter=[(A|C|D|M|R|T|U|X|B)...[*]]"

#. type: Plain text
#: en/diff-options.txt:627
#, ignore-ellipsis, priority:280
msgid "Select only files that are Added (`A`), Copied (`C`), Deleted (`D`), Modified (`M`), Renamed (`R`), have their type (i.e. regular file, symlink, submodule, ...) changed (`T`), are Unmerged (`U`), are Unknown (`X`), or have had their pairing Broken (`B`).  Any combination of the filter characters (including none) can be used.  When `*` (All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected."
msgstr "Selecione apenas os arquivos Adicionados (`A`), Copiados (`C`), Excluídos (`D`), Modificados (`M`), Renomeados (`R`) e que tenham o seu tipo (por exemplo, arquivo normal, link simbólico, o submódulo, ...) alterado (`T`), não está mesclado (`U`), que seja desconhecido (`X`) ou que teve o seu emparelhamento quebrado (`B`).  Qualquer combinação dos caracteres do filtro (incluindo `none` nenhum) pode ser utilizado.  Quando `*` (Tudo ou nenhum) é adicionado à combinação, todos os caminhos são selecionados caso haja algum arquivo que coincida com outros critérios durante a comparação; caso não haja nenhum arquivo que coincida com outros critérios, nada será selecionado."

#. type: Plain text
#: en/diff-options.txt:630
#, priority:280
msgid "Also, these upper-case letters can be downcased to exclude.  E.g.  `--diff-filter=ad` excludes added and deleted paths."
msgstr "Além disso, estas letras maiúsculas podem ser transformadas em minusculas para se excluir.  `--diff-filter=ad` exclui os caminhos adicionados e excluídos por exemplo."

#. type: Plain text
#: en/diff-options.txt:633
#, priority:280
msgid "Note that not all diffs can feature all types. For instance, copied and renamed entries cannot appear if detection for those types is disabled."
msgstr "Observe que nem todas as diferenças diff podem apresentar todos os tipos. Por exemplo, as entradas copiadas e renomeadas não podem aparecer caso a detecção para estes tipos estiverem desativados."

#. type: Labeled list
#: en/diff-options.txt:634
#, no-wrap, priority:280
msgid "-S<string>"
msgstr "-S<texto>"

#. type: Plain text
#: en/diff-options.txt:638
#, priority:280
msgid "Look for differences that change the number of occurrences of the specified string (i.e. addition/deletion) in a file.  Intended for the scripter's use."
msgstr "Procure por diferenças que alterem a quantidade de ocorrências da cadeia de caracteres usada (ou seja, adição/exclusão) num arquivo.  Destinado ao uso do scripter."

#. type: Plain text
#: en/diff-options.txt:644
#, priority:280
msgid "It is useful when you're looking for an exact block of code (like a struct), and want to know the history of that block since it first came into being: use the feature iteratively to feed the interesting block in the preimage back into `-S`, and keep going until you get the very first version of the block."
msgstr "Útil durante a produra por um bloco de código exato (como uma \"struct\"), e quera saber o histórico deste bloco desde que ele surgiu: utilize o recurso de forma iterativa para alimentar o bloco de interesse na pré-imagem de volta `-S` e continue até você obter a primeira versão do bloco."

#. type: Plain text
#: en/diff-options.txt:646
#, priority:280
msgid "Binary files are searched as well."
msgstr "Os arquivos binários também são pesquisados."

#. type: Labeled list
#: en/diff-options.txt:647
#, no-wrap, priority:280
msgid "-G<regex>"
msgstr "-G<expressão-regular>"

#. type: Plain text
#: en/diff-options.txt:650
#, priority:280
msgid "Look for differences whose patch text contains added/removed lines that match <regex>."
msgstr "Procure por diferenças cujo texto do patch contenha as linhas adicionadas/removidas que correspondam a um `<expressão-regular>`."

#. type: Plain text
#: en/diff-options.txt:654
#, priority:280
msgid "To illustrate the difference between `-S<regex> --pickaxe-regex` and `-G<regex>`, consider a commit with the following diff in the same file:"
msgstr "Para ilustrar a diferença entre `-S<expressão-regular> --pickaxe-regex` e `-G<expressão-regular>`, considere um commit com o seguinte diff no mesmo arquivo:"

#. type: delimited block -
#: en/diff-options.txt:659
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"+    return frotz(nitfol, two->ptr, 1, 0);\n"
"...\n"
"-    hit = frotz(nitfol, mf2.ptr, 1, 0);\n"
msgstr ""
"+    return frotz(nitfol, two->ptr, 1, 0);\n"
"...\n"
"-    hit = frotz(nitfol, mf2.ptr, 1, 0);\n"

#. type: Plain text
#: en/diff-options.txt:664
#, priority:280
msgid "While `git log -G\"frotz\\(nitfol\"` will show this commit, `git log -S\"frotz\\(nitfol\" --pickaxe-regex` will not (because the number of occurrences of that string did not change)."
msgstr "Enquanto o `git log -G\"frotz\\(nitfol\"` exibirá este commit, já o `git log -S\"frotz\\(nitfol\" --pickaxe-regex` não (porque a quantidade de ocorrências dessa cadeia de caracteres não foi alterada) ."

#. type: Plain text
#: en/diff-options.txt:667
#, priority:280
msgid "Unless `--text` is supplied patches of binary files without a textconv filter will be ignored."
msgstr "A menos que `--text` seja utilizado, os patches dos arquivos binários sem um filtro \"textconv\" serão ignorados."

#. type: Plain text
#: en/diff-options.txt:670
#, priority:280
msgid "See the 'pickaxe' entry in linkgit:gitdiffcore[7] for more information."
msgstr "Para mais informações consulte a entrada 'pickaxe' em linkgit:gitdiffcore[7]."

#. type: Labeled list
#: en/diff-options.txt:671
#, no-wrap, priority:280
msgid "--find-object=<object-id>"
msgstr "--find-object=<id-do-objeto>"

#. type: Plain text
#: en/diff-options.txt:676
#, priority:280
msgid "Look for differences that change the number of occurrences of the specified object. Similar to `-S`, just the argument is different in that it doesn't search for a specific string but for a specific object id."
msgstr "Procure pelas diferenças que alteram a quantidade de ocorrências do objeto especificado. Similar ao `-S`, porém apenas o argumento é diferente pois ele não procura por uma sequência específica, mas por um ID específico do objeto."

#. type: Plain text
#: en/diff-options.txt:679
#, priority:280
msgid "The object can be a blob or a submodule commit. It implies the `-t` option in `git-log` to also find trees."
msgstr "O objeto pode ser uma bolha ou um commit do submódulo. Para também encontrar árvores, faça a utilização da opção `-t` também no `git-log`."

#. type: Labeled list
#: en/diff-options.txt:680
#, ignore-same, no-wrap, priority:280
msgid "--pickaxe-all"
msgstr "--pickaxe-all"

#. type: Plain text
#: en/diff-options.txt:684
#, priority:280
msgid "When `-S` or `-G` finds a change, show all the changes in that changeset, not just the files that contain the change in <string>."
msgstr "Quando a opção `-S` ou `-G` encontra uma alteração, exiba todas as alterações naquele conjunto de alterações e não apenas nos arquivos que contenham as alterações numa `<texto>`."

#. type: Labeled list
#: en/diff-options.txt:685
#, ignore-same, no-wrap, priority:280
msgid "--pickaxe-regex"
msgstr "--pickaxe-regex"

#. type: Plain text
#: en/diff-options.txt:688
#, priority:280
msgid "Treat the <string> given to `-S` as an extended POSIX regular expression to match."
msgstr "Trate o `<texto>` utilizado com o `-S` como uma expressão regular POSIX estendida para coincidir."

#. type: Labeled list
#: en/diff-options.txt:691 en/git-mergetool.txt:95
#, no-wrap, priority:280
msgid "-O<orderfile>"
msgstr "-O<ordem-do-arquivo>"

#. type: Plain text
#: en/diff-options.txt:696
#, priority:280
msgid "Control the order in which files appear in the output.  This overrides the `diff.orderFile` configuration variable (see linkgit:git-config[1]).  To cancel `diff.orderFile`, use `-O/dev/null`."
msgstr "Controlar a ordem em que os arquivos aparecem na saída.  Substitui a variável de configuração `diff.orderFile` (consulte linkgit:git-config[1]).  Para cancelar a variável `diff.orderFile`, utilize `-O/dev/null`."

#. type: Plain text
#: en/diff-options.txt:708
#, priority:280
msgid "The output order is determined by the order of glob patterns in <orderfile>.  All files with pathnames that match the first pattern are output first, all files with pathnames that match the second pattern (but not the first) are output next, and so on.  All files with pathnames that do not match any pattern are output last, as if there was an implicit match-all pattern at the end of the file.  If multiple pathnames have the same rank (they match the same pattern but no earlier patterns), their output order relative to each other is the normal order."
msgstr "A ordem da saída é determinada pela ordem dos padrões bolha na <ordem-do-arquivo>.  São enviados primeiro todos os arquivos cujos nomes do caminho coincidam com o primeiro padrão, em seguida todos os arquivos cujos nomes do caminho coincidam com o segundo padrão (mas não ao primeiro) e assim por diante.  São exibidos por último todos os arquivos cujos nomes do caminho não coincidam com nenhum padrão como se houvesse um padrão de coincidência total implícito no final do arquivo.  Caso vários nomes do caminho tenham a mesma classificação (eles coincidem com o mesmo padrão, mas não com os padrões anteriores), a sua ordem na saída em relação à outra é a ordem normal."

#. type: Plain text
#: en/diff-options.txt:710
#, priority:280
msgid "<orderfile> is parsed as follows:"
msgstr "A <ordem-do-arquivo> é analisado da seguinte maneira:"

#. type: Plain text
#: en/diff-options.txt:714
#, priority:280
msgid "Blank lines are ignored, so they can be used as separators for readability."
msgstr "As linhas em branco são ignoradas para que possam ser utilizadas como separadores, facilitando a leitura."

#. type: Plain text
#: en/diff-options.txt:718
#, priority:280
msgid "Lines starting with a hash (\"`#`\") are ignored, so they can be used for comments.  Add a backslash (\"`\\`\") to the beginning of the pattern if it starts with a hash."
msgstr "As linhas que começam com um hash (\"`#`\") são ignoradas para que possam ser utilizadas como comentários.  Adicione uma barra invertida (\"`\\`\") ao início do padrão caso ele comece com um hash."

#. type: Plain text
#: en/diff-options.txt:720
#, priority:280
msgid "Each other line contains a single pattern."
msgstr "Cada outra linha quem contenha um único padrão."

#. type: Plain text
#: en/diff-options.txt:727
#, priority:280
msgid "Patterns have the same syntax and semantics as patterns used for fnmatch(3) without the FNM_PATHNAME flag, except a pathname also matches a pattern if removing any number of the final pathname components matches the pattern.  For example, the pattern \"`foo*bar`\" matches \"`fooasdfbar`\" and \"`foo/bar/baz/asdf`\" but not \"`foobarx`\"."
msgstr "Os padrões têm a mesma sintaxe e semântica que os padrões utilizados para fnmatch(3) sem a flag `FNM_PATHNAME`, exceto que um nome do caminho também coincida com um padrão caso a remoção de qualquer quantidade dos componentes finais do nome do caminho coincida com o padrão.  O padrão \"`foo*bar`\" coincide com \"`fooasdfbar`\" e \"`foo/bar/baz/asdf`\" mas não com \"`foobarx`\" por exemplo."

#. type: Labeled list
#: en/diff-options.txt:728 en/git-difftool.txt:41
#, no-wrap, priority:280
msgid "--skip-to=<file>"
msgstr "--skip-to=<arquivo>"

#. type: Labeled list
#: en/diff-options.txt:729 en/git-difftool.txt:37
#, no-wrap, priority:280
msgid "--rotate-to=<file>"
msgstr "--rotate-to=<arquivo>"

#. type: Plain text
#: en/diff-options.txt:735
#, priority:280
msgid "Discard the files before the named <file> from the output (i.e. 'skip to'), or move them to the end of the output (i.e. 'rotate to').  These were invented primarily for use of the `git difftool` command, and may not be very useful otherwise."
msgstr "Descarte os arquivos da saída antes do <arquivo> (ou seja, 'pule para'), ou mova-os para o final da saída (ou seja, 'redirecione para').  Estas opções foram inventadas para uso do comando `git difftool` e podem não ser muito úteis para outra coisa."

#. type: Labeled list
#: en/diff-options.txt:737 en/git-apply.txt:105 en/git-cvsimport.txt:168
#, no-wrap, priority:280
msgid "-R"
msgstr "-R"

#. type: Plain text
#: en/diff-options.txt:740
#, priority:280
msgid "Swap two inputs; that is, show differences from index or on-disk file to tree contents."
msgstr "Troque as duas entradas; isto é, exiba as diferenças do índice ou do arquivo no disco para o conteúdo da árvore."

#. type: Labeled list
#: en/diff-options.txt:742
#, no-wrap, priority:280
msgid "--relative[=<path>]"
msgstr "--relative[=<caminho>]"

#. type: Labeled list
#: en/diff-options.txt:743
#, ignore-same, no-wrap, priority:280
msgid "--no-relative"
msgstr "--no-relative"

#. type: Plain text
#: en/diff-options.txt:752
#, priority:280
msgid "When run from a subdirectory of the project, it can be told to exclude changes outside the directory and show pathnames relative to it with this option.  When you are not in a subdirectory (e.g. in a bare repository), you can name which subdirectory to make the output relative to by giving a <path> as an argument.  `--no-relative` can be used to countermand both `diff.relative` config option and previous `--relative`."
msgstr "Com esta opção, quando executado a partir de um subdiretório do projeto, pode-se dizer para excluir as alterações fora do diretório e exibir os nomes do caminho relativos a ele.  Quando não estiver em um subdiretório (em um repositório simples por exemplo), é possível definir em qual subdiretório tornar a saída relativa, utilizando um <caminho> como argumento. A opção `--no-relative` pode ser utilizada para contrapor ambas as opções de configuração `diff.relative` e a anterior `--relative`."

#. type: Labeled list
#: en/diff-options.txt:753 en/fetch-options.txt:4 en/git-archimport.txt:99 en/git-branch.txt:168 en/git-checkout-index.txt:39 en/git-commit.txt:67 en/git-cvsexportcommit.txt:45 en/git-cvsimport.txt:135 en/git-grep.txt:71 en/git-help.txt:49 en/git-merge-base.txt:71 en/git-merge-index.txt:26 en/git-repack.txt:31 en/git-show-branch.txt:47 en/git-stash.txt:156 en/git-tag.txt:60
#, ignore-same, no-wrap, priority:280
msgid "-a"
msgstr "-a"

#. type: Labeled list
#: en/diff-options.txt:754 en/git-grep.txt:72
#, ignore-same, no-wrap, priority:280
msgid "--text"
msgstr "--text"

#. type: Plain text
#: en/diff-options.txt:756
#, priority:280
msgid "Treat all files as text."
msgstr "Trate todos os arquivos como texto."

#. type: Labeled list
#: en/diff-options.txt:757
#, ignore-same, no-wrap, priority:280
msgid "--ignore-cr-at-eol"
msgstr "--ignore-cr-at-eol"

#. type: Plain text
#: en/diff-options.txt:759
#, priority:280
msgid "Ignore carriage-return at the end of line when doing a comparison."
msgstr "Ignore o retorno do carro no final da linha durante uma comparação."

#. type: Labeled list
#: en/diff-options.txt:760
#, ignore-same, no-wrap, priority:280
msgid "--ignore-space-at-eol"
msgstr "--ignore-space-at-eol"

#. type: Labeled list
#: en/diff-options.txt:764 en/git-am.txt:117 en/git-apply.txt:183
#, ignore-same, no-wrap, priority:280
msgid "--ignore-space-change"
msgstr "--ignore-space-change"

#. type: Labeled list
#: en/diff-options.txt:769 en/git-blame.txt:84 en/git-cvsexportcommit.txt:71 en/git-grep.txt:104 en/git-hash-object.txt:29 en/git-help.txt:106
#, ignore-same, no-wrap, priority:280
msgid "-w"
msgstr "-w"

#. type: Labeled list
#: en/diff-options.txt:770
#, ignore-same, no-wrap, priority:280
msgid "--ignore-all-space"
msgstr "--ignore-all-space"

#. type: Plain text
#: en/diff-options.txt:774
#, priority:280
msgid "Ignore whitespace when comparing lines.  This ignores differences even if one line has whitespace where the other line has none."
msgstr "Ignore o espaço durante a comparação das linhas.  Ignore as diferenças mesmo que uma linha tenha espaços quando a outra linha não tiver nenhuma."

#. type: Labeled list
#: en/diff-options.txt:775
#, ignore-same, no-wrap, priority:280
msgid "--ignore-blank-lines"
msgstr "--ignore-blank-lines"

#. type: Plain text
#: en/diff-options.txt:777
#, priority:280
msgid "Ignore changes whose lines are all blank."
msgstr "Ignore as alterações cujas linhas estejam todas em branco."

#. type: Labeled list
#: en/diff-options.txt:778
#, no-wrap, priority:280
msgid "-I<regex>"
msgstr "-I<expressão-regular>"

#. type: Labeled list
#: en/diff-options.txt:779
#, no-wrap, priority:280
msgid "--ignore-matching-lines=<regex>"
msgstr "--ignore-matching-lines=<expressão-regular>"

#. type: Plain text
#: en/diff-options.txt:782
#, priority:280
msgid "Ignore changes whose all lines match <regex>.  This option may be specified more than once."
msgstr "Ignore as alterações cujas linhas coincidam com a <expressão-regular>. Esta opção pode ser usada mais de uma vez."

#. type: Labeled list
#: en/diff-options.txt:783
#, no-wrap, priority:280
msgid "--inter-hunk-context=<lines>"
msgstr "--inter-hunk-context=<linhas>"

#. type: Plain text
#: en/diff-options.txt:788
#, priority:280
msgid "Show the context between diff hunks, up to the specified number of lines, thereby fusing hunks that are close to each other.  Defaults to `diff.interHunkContext` or 0 if the config option is unset."
msgstr "Exiba o contexto entre as diferenças, até a quantidade de linhas usada, fundindo assim as que estão próximas umas das outras.  A predefinição retorna para `diff.interHunkContext` ou 0 caso a opção de configuração não esteja definida."

#. type: Labeled list
#: en/diff-options.txt:789 en/git-cvsexportcommit.txt:77 en/git-grep.txt:233 en/git-restore.txt:58
#, no-wrap, priority:280
msgid "-W"
msgstr "-W"

#. type: Labeled list
#: en/diff-options.txt:790 en/git-grep.txt:234
#, ignore-same, no-wrap, priority:280
msgid "--function-context"
msgstr "--function-context"

#. type: Plain text
#: en/diff-options.txt:795
#, priority:280
msgid "Show whole function as context lines for each change.  The function names are determined in the same way as `git diff` works out patch hunk headers (see 'Defining a custom hunk-header' in linkgit:gitattributes[5])."
msgstr "Exiba toda a função como linhas de contexto para cada alteração.  O nome da função é determinada da mesma maneira que o 'git diff' lida com os pedaços do cabeçalhos do patch (consulte 'Definindo um cabeçalho personalizado do hunk' em linkgit:gitattributes[5])."

#. type: Labeled list
#: en/diff-options.txt:798 en/git-ls-remote.txt:48
#, ignore-same, no-wrap, priority:280
msgid "--exit-code"
msgstr "--exit-code"

#. type: Plain text
#: en/diff-options.txt:802
#, priority:280
msgid "Make the program exit with codes similar to diff(1).  That is, it exits with 1 if there were differences and 0 means no differences."
msgstr "Faça com que o programa encerre com códigos semelhantes ao diff(1).  Ou seja, encerra com 1 caso haja diferenças ou 0 quando não houver."

#. type: Labeled list
#: en/diff-options.txt:803 en/fetch-options.txt:275 en/git-am.txt:87 en/git-apply.txt:232 en/git-branch.txt:195 en/git-bundle.txt:141 en/git-checkout-index.txt:32 en/git-checkout.txt:108 en/git-clean.txt:54 en/git-clone.txt:125 en/git-commit.txt:370 en/git-fast-import.txt:42 en/git-fetch-pack.txt:49 en/git-format-patch.txt:376 en/git-gc.txt:72 en/git-grep.txt:295 en/git-imap-send.txt:37 en/git-init.txt:44 en/git-ls-remote.txt:39 en/git-notes.txt:207 en/git-prune-packed.txt:37 en/git-pull.txt:81 en/git-push.txt:386 en/git-read-tree.txt:118 en/git-rebase.txt:391 en/git-repack.txt:90 en/git-reset.txt:107 en/git-restore.txt:67 en/git-rev-parse.txt:118 en/git-rm.txt:82 en/git-send-email.txt:422 en/git-show-ref.txt:71 en/git-stash.txt:236 en/git-submodule.txt:270 en/git-svn.txt:671 en/git-switch.txt:143 en/git-symbolic-ref.txt:40 en/git-worktree.txt:237 en/merge-options.txt:175 en/rev-list-options.txt:237
#, ignore-same, no-wrap, priority:300
msgid "--quiet"
msgstr "--quiet"

#. type: Plain text
#: en/diff-options.txt:805
#, priority:280
msgid "Disable all output of the program. Implies `--exit-code`."
msgstr "Faz com que o programa trabalhe em silêncio. Implica no uso da opção `--exit-code`."

#. type: Labeled list
#: en/diff-options.txt:808
#, ignore-same, no-wrap, priority:280
msgid "--ext-diff"
msgstr "--ext-diff"

#. type: Plain text
#: en/diff-options.txt:812
#, priority:280
msgid "Allow an external diff helper to be executed. If you set an external diff driver with linkgit:gitattributes[5], you need to use this option with linkgit:git-log[1] and friends."
msgstr "Permitir que um auxiliar diff externo seja executado. Caso um controlador diff externo seja definido com linkgit:gitattributes[5], será necessário a utilização desta opção com linkgit:git-log[1] e seus companheiros."

#. type: Labeled list
#: en/diff-options.txt:813
#, ignore-same, no-wrap, priority:280
msgid "--no-ext-diff"
msgstr "--no-ext-diff"

#. type: Plain text
#: en/diff-options.txt:815
#, priority:280
msgid "Disallow external diff drivers."
msgstr "Não permitir o uso de um controladores diff externo."

#. type: Labeled list
#: en/diff-options.txt:816 en/git-cat-file.txt:72 en/git-grep.txt:75
#, ignore-same, no-wrap, priority:280
msgid "--textconv"
msgstr "--textconv"

#. type: Labeled list
#: en/diff-options.txt:817 en/git-grep.txt:78
#, ignore-same, no-wrap, priority:280
msgid "--no-textconv"
msgstr "--no-textconv"

#. type: Plain text
#: en/diff-options.txt:826
#, priority:280
msgid "Allow (or disallow) external text conversion filters to be run when comparing binary files. See linkgit:gitattributes[5] for details. Because textconv filters are typically a one-way conversion, the resulting diff is suitable for human consumption, but cannot be applied. For this reason, textconv filters are enabled by default only for linkgit:git-diff[1] and linkgit:git-log[1], but not for linkgit:git-format-patch[1] or diff plumbing commands."
msgstr "Permita (ou não permita) a execução dos filtros externos para a conversão do texto durante a comparação dos arquivos binários. Para mais detalhes consulte linkgit:gitattributes[5]. Como os filtros \"textconv\" são normalmente uma conversão unidirecional, o diff resultante é legível para as pessoas porém não pode ser aplicado. Por este motivo, é predefinido que os filtros \"textconv\" estejam ativos apenas para os comandos linkgit:git-diff[1] e linkgit:git-log[1], mas não para os comandos linkgit:git-format-patch[1] ou comandos \"diff\" que possam ser redirecionados."

#. type: Labeled list
#: en/diff-options.txt:827 en/git-status.txt:87
#, no-wrap, priority:280
msgid "--ignore-submodules[=<when>]"
msgstr "--ignore-submodules[=<quando>]"

#. type: Plain text
#: en/diff-options.txt:839
#, priority:280
msgid "Ignore changes to submodules in the diff generation. <when> can be either \"none\", \"untracked\", \"dirty\" or \"all\", which is the default.  Using \"none\" will consider the submodule modified when it either contains untracked or modified files or its HEAD differs from the commit recorded in the superproject and can be used to override any settings of the 'ignore' option in linkgit:git-config[1] or linkgit:gitmodules[5]. When \"untracked\" is used submodules are not considered dirty when they only contain untracked content (but they are still scanned for modified content). Using \"dirty\" ignores all changes to the work tree of submodules, only changes to the commits stored in the superproject are shown (this was the behavior until 1.7.0). Using \"all\" hides all changes to submodules."
msgstr "Ignore as alterações nos submódulos durante a geração dos diffs. O `<quando>` pode ser \"none\" (nenhum), \"untracked\" (sem monitoramento/rastreamento), \"dirty\" (sujo) ou \"all\" (todos), que é a predefinição.  O \"none\" considera o submódulo modificado quando houver arquivos não estejam rastreados, modificados ou o seu `HEAD` seja diferente do commit registrado no superprojeto, pode ser utilizado para substituir qualquer configuração da opção 'ignore' (ignorar) em  linkgit:git-config[1] ou linkgit:gitmodules[5]. Quando o \"untracked\" é utilizado, os submódulos não são considerados sujos quando houver apenas  um conteúdo sem rastreamento (porém o monitoramento de alterações do seu conteúdo continua) O uso de \"dirty\" ignora todas as alterações na árvore de trabalho dos submódulos, apenas as alterações nos commits armazenados no superprojeto são exibidos (este era o comportamento anterior até a versão 1.7.0). O uso de \"all\" oculta todas as alterações nos submódulos."

#. type: Labeled list
#: en/diff-options.txt:840
#, no-wrap, priority:280
msgid "--src-prefix=<prefix>"
msgstr "--src-prefix=<prefixo>"

#. type: Plain text
#: en/diff-options.txt:842
#, priority:280
msgid "Show the given source prefix instead of \"a/\"."
msgstr "Exiba o prefixo da origem utilizada em vez de \"a/\"."

#. type: Labeled list
#: en/diff-options.txt:843
#, no-wrap, priority:280
msgid "--dst-prefix=<prefix>"
msgstr "--dst-prefix=<prefixo>"

#. type: Plain text
#: en/diff-options.txt:845
#, priority:280
msgid "Show the given destination prefix instead of \"b/\"."
msgstr "Exiba o prefixo do destino utilizado em vez de \"b/\"."

#. type: Labeled list
#: en/diff-options.txt:846
#, ignore-same, no-wrap, priority:280
msgid "--no-prefix"
msgstr "--no-prefix"

#. type: Plain text
#: en/diff-options.txt:848
#, priority:280
msgid "Do not show any source or destination prefix."
msgstr "Não exiba nenhum prefixo da origem ou destino."

#. type: Labeled list
#: en/diff-options.txt:849
#, no-wrap, priority:280
msgid "--line-prefix=<prefix>"
msgstr "--line-prefix=<prefixo>"

#. type: Plain text
#: en/diff-options.txt:851
#, priority:280
msgid "Prepend an additional prefix to every line of output."
msgstr "Prefira um prefixo adicional em cada linha produzida."

#. type: Labeled list
#: en/diff-options.txt:852
#, ignore-same, no-wrap, priority:280
msgid "--ita-invisible-in-index"
msgstr "--ita-invisible-in-index"

#. type: Plain text
#: en/diff-options.txt:859
#, priority:280
msgid "By default entries added by \"git add -N\" appear as an existing empty file in \"git diff\" and a new file in \"git diff --cached\".  This option makes the entry appear as a new file in \"git diff\" and non-existent in \"git diff --cached\". This option could be reverted with `--ita-visible-in-index`. Both options are experimental and could be removed in future."
msgstr "É predefinido que as entradas adicionadas através do comando \"git add -N\" apareçam como uma cadeia de caracteres vazia existente com o comando \"git diff\" e um novo arquivo com \"git diff --cached\".  Esta opção faz com que a entrada apareça como um novo arquivo no \"git diff\" e inexistente no \"git diff --cached\". Esta opção pode ser revertida com `--ita-visible-in-index`. Ambas as opções são experimentais e podem ser removidas no futuro."

#. type: Plain text
#: en/diff-options.txt:861
#, priority:280
msgid "For more detailed explanation on these common options, see also linkgit:gitdiffcore[7]."
msgstr "Para uma explicação mais detalhada sobre estas opções comuns, consulte também linkgit:gitdiffcore[7]."

#. type: Labeled list
#: en/fetch-options.txt:1 en/git-add.txt:131 en/git-branch.txt:169 en/git-checkout-index.txt:40 en/git-commit.txt:68 en/git-describe.txt:50 en/git-fetch-pack.txt:35 en/git-help.txt:50 en/git-http-push.txt:25 en/git-merge-base.txt:72 en/git-name-rev.txt:42 en/git-pack-objects.txt:78 en/git-pack-redundant.txt:32 en/git-pack-refs.txt:48 en/git-push.txt:149 en/git-reflog.txt:72 en/git-rev-parse.txt:165 en/git-send-pack.txt:37 en/git-show-branch.txt:48 en/git-stash.txt:157 en/git-submodule.txt:280 en/rev-list-options.txt:155
#, ignore-same, no-wrap, priority:300
msgid "--all"
msgstr "--all"

#. type: Plain text
#: en/fetch-options.txt:3
#, priority:220
msgid "Fetch all remotes."
msgstr "Capture todos os ramos remotos."

#. type: Labeled list
#: en/fetch-options.txt:5
#, ignore-same, no-wrap, priority:220
msgid "--append"
msgstr "--append"

#. type: Plain text
#: en/fetch-options.txt:9
#, priority:220
msgid "Append ref names and object names of fetched refs to the existing contents of `.git/FETCH_HEAD`.  Without this option old data in `.git/FETCH_HEAD` will be overwritten."
msgstr "Acrescente nomes ao \"ref\" e os nomes dos objetos refs capturados ao conteúdo existente de `.git/FETCH_HEAD`.  Sem esta opção, os dados antigos em `.git/FETCH_HEAD` serão substituídos."

#. type: Labeled list
#: en/fetch-options.txt:10 en/git-send-pack.txt:68
#, ignore-same, no-wrap, priority:220
msgid "--atomic"
msgstr "--atomic"

#. type: Plain text
#: en/fetch-options.txt:13
#, priority:220
msgid "Use an atomic transaction to update local refs. Either all refs are updated, or on error, no refs are updated."
msgstr "Utilize uma transação atômica para atualizar as refs locais. Ou todas as refs são atualizadas ou por erro, nenhuma será."

#. type: Labeled list
#: en/fetch-options.txt:14
#, no-wrap, priority:220
msgid "--depth=<depth>"
msgstr "--depth=<profundidade>"

#. type: Plain text
#: en/fetch-options.txt:20
#, priority:220
msgid "Limit fetching to the specified number of commits from the tip of each remote branch history. If fetching to a 'shallow' repository created by `git clone` with `--depth=<depth>` option (see linkgit:git-clone[1]), deepen or shorten the history to the specified number of commits. Tags for the deepened commits are not fetched."
msgstr "Limite a captura para uma quantidade específica de commits na ponta do histórico de cada ramificação remota. Caso esteja capturando um repositório 'shallow' (superficial) criado pelo `git clone` com a opção `--depth=<profundidade>` (consulte linkgit:git-clone[1]), aprofunde ou encurte o histórico para a quantidade usada de commits. As tags para os commits aprofundados não são capturados."

#. type: Labeled list
#: en/fetch-options.txt:21
#, no-wrap, priority:220
msgid "--deepen=<depth>"
msgstr "--deepen=<profundidade>"

#. type: Plain text
#: en/fetch-options.txt:25
#, priority:220
msgid "Similar to --depth, except it specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history."
msgstr "Semelhante a opção `--depth`, exceto que especifica a quantidade de commits do limite raso atual em vez da ponta de cada histórico do ramo remoto."

#. type: Labeled list
#: en/fetch-options.txt:26 en/git-clone.txt:247 en/git-fetch-pack.txt:90
#, no-wrap, priority:300
msgid "--shallow-since=<date>"
msgstr "--shallow-since=<data>"

#. type: Plain text
#: en/fetch-options.txt:29 en/git-fetch-pack.txt:93
#, priority:220
msgid "Deepen or shorten the history of a shallow repository to include all reachable commits after <date>."
msgstr "Aprofunde ou encurte o histórico de um repositório raso para incluir todas os commits acessíveis após a <data>."

#. type: Labeled list
#: en/fetch-options.txt:30 en/git-clone.txt:250 en/git-fetch-pack.txt:94
#, no-wrap, priority:300
msgid "--shallow-exclude=<revision>"
msgstr "--shallow-exclude=<revisão>"

#. type: Plain text
#: en/fetch-options.txt:34 en/git-fetch-pack.txt:98
#, priority:220
msgid "Deepen or shorten the history of a shallow repository to exclude commits reachable from a specified remote branch or tag.  This option can be specified multiple times."
msgstr "Aprofunde ou diminua o histórico de um repositório raso para excluir os commits acessíveis vindos de uma determinada tag ou ramificação remota.  Esta opção pode ser utilizada várias vezes."

#. type: Labeled list
#: en/fetch-options.txt:35
#, ignore-same, no-wrap, priority:220
msgid "--unshallow"
msgstr "--unshallow"

#. type: Plain text
#: en/fetch-options.txt:39
#, priority:220
msgid "If the source repository is complete, convert a shallow repository to a complete one, removing all the limitations imposed by shallow repositories."
msgstr "Caso o repositório de origem esteja completo, converta um repositório raso num completo, removendo todas as limitações impostas pelos repositórios rasos."

#. type: Plain text
#: en/fetch-options.txt:42
#, priority:220
msgid "If the source repository is shallow, fetch as much as possible so that the current repository has the same history as the source repository."
msgstr "Caso o repositório de origem seja superficial, busque o máximo possível para que o repositório atual tenha o mesmo histórico que o repositório de origem."

#. type: Labeled list
#: en/fetch-options.txt:43
#, ignore-same, no-wrap, priority:220
msgid "--update-shallow"
msgstr "--update-shallow"

#. type: Plain text
#: en/fetch-options.txt:48
#, priority:220
msgid "By default when fetching from a shallow repository, `git fetch` refuses refs that require updating .git/shallow. This option updates .git/shallow and accept such refs."
msgstr "É predefinido que durante a captura num repositório superficial, o `git fetch` recuse os refs que exijam a atualização do `.git/shallow`. Esta opção atualiza o `.git/shallow` e aceita tais refs."

#. type: Labeled list
#: en/fetch-options.txt:49
#, no-wrap, priority:220
msgid "--negotiation-tip=<commit|glob>"
msgstr "--negotiation-tip=<commit|glob>"

#. type: Plain text
#: en/fetch-options.txt:57
#, priority:220
msgid "By default, Git will report, to the server, commits reachable from all local refs to find common commits in an attempt to reduce the size of the to-be-received packfile. If specified, Git will only report commits reachable from the given tips.  This is useful to speed up fetches when the user knows which local ref is likely to have commits in common with the upstream ref being fetched."
msgstr "É predefinido que o Git relatará ao servidor os commits acessíveis de todos as refs locais para que localize os commits comuns na tentativa de reduzir o tamanho do pacote que será recebido. Caso seja utilizado, o Git relatará apenas os commits acessíveis a partir das dicas informadas.  Útil para acelerar o processo \"fetch\" quando o usuário sabe qual a ref local que provavelmente, haverá commits em comum com uma ref upstream que está sendo capturada."

#. type: Plain text
#: en/fetch-options.txt:60
#, priority:220
msgid "This option may be specified more than once; if so, Git will report commits reachable from any of the given commits."
msgstr "Esta opção pode ser utilizada mais de uma vez; Se assim for, o Git irá reportar os commits de qualquer um dos commits informados."

#. type: Plain text
#: en/fetch-options.txt:64
#, priority:220
msgid "The argument to this option may be a glob on ref names, a ref, or the (possibly abbreviated) SHA-1 of a commit. Specifying a glob is equivalent to specifying this option multiple times, one for each matching ref name."
msgstr "O argumento para esta opção pode ser um \"ref\" aos nomes de referência, uma referência ou o (possivelmente abreviado) SHA-1 de um commit. Especificar um agrupamento é o equivalente a utilizar esta opção várias vezes, uma para cada nome \"ref\" coincidente."

#. type: Plain text
#: en/fetch-options.txt:68
#, priority:220
msgid "See also the `fetch.negotiationAlgorithm` and `push.negotiate` configuration variables documented in linkgit:git-config[1], and the `--negotiate-only` option below."
msgstr "Consulte também a variável de configuração `fetch.negotiationAlgorithm` e `push.negotiate` documentada em linkgit:git-config[1] e na opção `--negotiate-only` abaixo."

#. type: Labeled list
#: en/fetch-options.txt:69
#, ignore-same, no-wrap, priority:220
msgid "--negotiate-only"
msgstr "--negotiate-only"

#. type: Plain text
#: en/fetch-options.txt:73
#, priority:220
msgid "Do not fetch anything from the server, and instead print the ancestors of the provided `--negotiation-tip=*` arguments, which we have in common with the server."
msgstr "Não busque nada do servidor e imprima os argumentos `--negotiation-tip=*` fornecidos anteriormente e que nós temos em comum com o servidor."

#. type: Plain text
#: en/fetch-options.txt:77
#, priority:220
msgid "This is incompatible with `--recurse-submodules=[yes|on-demand]`.  Internally this is used to implement the `push.negotiate` option, see linkgit:git-config[1]."
msgstr "Isso é compatível com a opção `--recurse-submodules=[yes|on-demand]`.  Internamente, isto é utilizado para implementar a opção `push.negotiate`, consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/fetch-options.txt:78 en/git-add.txt:70 en/git-clean.txt:50 en/git-commit.txt:373 en/git-http-push.txt:37 en/git-mv.txt:40 en/git-notes.txt:179 en/git-p4.txt:332 en/git-prune-packed.txt:32 en/git-prune.txt:37 en/git-push.txt:173 en/git-quiltimport.txt:35 en/git-read-tree.txt:59 en/git-reflog.txt:120 en/git-rm.txt:53 en/git-send-email.txt:413 en/git-send-pack.txt:51 en/git-svn.txt:687 en/git-worktree.txt:220
#, ignore-same, no-wrap, priority:300
msgid "--dry-run"
msgstr "--dry-run"

#. type: Plain text
#: en/fetch-options.txt:80
#, priority:220
msgid "Show what would be done, without making any changes."
msgstr "Exiba apenas o que seria feito, sem fazer quaisquer alterações."

#. type: Labeled list
#: en/fetch-options.txt:82
#, ignore-same, no-wrap, priority:220
msgid "--[no-]write-fetch-head"
msgstr "--[no-]write-fetch-head"

#. type: Plain text
#: en/fetch-options.txt:88
#, priority:220
msgid "Write the list of remote refs fetched in the `FETCH_HEAD` file directly under `$GIT_DIR`.  This is the default.  Passing `--no-write-fetch-head` from the command line tells Git not to write the file.  Under `--dry-run` option, the file is never written."
msgstr "Escreva a lista de referências remotas buscadas no arquivo `FETCH_HEAD` diretamente no`$GIT_DIR`.  Este é o padrão. Usando a opção `--no-write-fetch-head` na linha de comando diz ao Git para não escrever o arquivo. Com opção `--dry-run`, o arquivo nunca é escrito."

#. type: Labeled list
#: en/fetch-options.txt:90 en/git-add.txt:78 en/git-archimport.txt:81 en/git-blame.txt:65 en/git-branch.txt:117 en/git-checkout-index.txt:35 en/git-checkout.txt:118 en/git-clean.txt:36 en/git-cvsexportcommit.txt:54 en/git-filter-branch.txt:208 en/git-ls-files.txt:146 en/git-mv.txt:31 en/git-notes.txt:127 en/git-push.txt:332 en/git-rebase.txt:423 en/git-repack.txt:81 en/git-replace.txt:60 en/git-rm.txt:48 en/git-submodule.txt:293 en/git-switch.txt:110 en/git-tag.txt:79 en/git-worktree.txt:161
#, ignore-same, no-wrap, priority:300
msgid "-f"
msgstr "-f"

#. type: Labeled list
#: en/fetch-options.txt:91 en/git-add.txt:79 en/git-branch.txt:118 en/git-checkout-index.txt:36 en/git-checkout.txt:119 en/git-clean.txt:37 en/git-fast-import.txt:37 en/git-filter-branch.txt:209 en/git-gc.txt:75 en/git-http-push.txt:30 en/git-mv.txt:32 en/git-notes.txt:128 en/git-push.txt:333 en/git-replace.txt:61 en/git-rm.txt:49 en/git-send-email.txt:442 en/git-send-pack.txt:54 en/git-submodule.txt:294 en/git-switch.txt:111 en/git-tag.txt:80 en/git-worktree.txt:162
#, ignore-same, no-wrap, priority:300
msgid "--force"
msgstr "--force"

#. type: Plain text
#: en/fetch-options.txt:94
#, priority:220
msgid "When 'git fetch' is used with `<src>:<dst>` refspec it may refuse to update the local branch as discussed"
msgstr "Quando 'git fetch' é utilizado com `<src>:<dst>` \"refspec\" ele pode se recusar a atualizar o ramo local como discutido"

#. type: Plain text
#: en/fetch-options.txt:97
#, no-wrap, priority:220
msgid ""
"\tin the `<refspec>` part of the linkgit:git-fetch[1]\n"
"\tdocumentation.\n"
msgstr ""
"\tna parte `<refspec>` da documentação do\n"
"\tlinkgit:git-fetch[1].\n"

#. type: Plain text
#: en/fetch-options.txt:100
#, no-wrap, priority:220
msgid "\tin the `<refspec>` part below.\n"
msgstr "\tna parte `<refspec>` abaixo.\n"

#. type: Plain text
#: en/fetch-options.txt:102
#, no-wrap, priority:220
msgid "\tThis option overrides that check.\n"
msgstr "\tEsta opção sobrescreve esta verificação.\n"

#. type: Labeled list
#: en/fetch-options.txt:103 en/git-am.txt:42 en/git-cvsexportcommit.txt:67 en/git-cvsimport.txt:93 en/git-fetch-pack.txt:53 en/git-format-patch.txt:133 en/git-ls-files.txt:74 en/git-mailinfo.txt:29 en/git-mv.txt:34 en/git-repack.txt:171 en/git-stash.txt:186
#, ignore-same, no-wrap, priority:280
msgid "-k"
msgstr "-k"

#. type: Labeled list
#: en/fetch-options.txt:104 en/git-am.txt:43 en/git-fetch-pack.txt:54 en/git-index-pack.txt:62 en/git-reset.txt:86
#, ignore-same, no-wrap, priority:280
msgid "--keep"
msgstr "--keep"

#. type: Plain text
#: en/fetch-options.txt:106
#, priority:220
msgid "Keep downloaded pack."
msgstr "Mantenha o pacote que foi baixado."

#. type: Labeled list
#: en/fetch-options.txt:108
#, ignore-same, no-wrap, priority:220
msgid "--multiple"
msgstr "--multiple"

#. type: Plain text
#: en/fetch-options.txt:111
#, priority:220
msgid "Allow several <repository> and <group> arguments to be specified. No <refspec>s may be specified."
msgstr "Permita que vários argumentos <repositório> e <grupo> sejam utilizados. Nenhum `<refspec>` pode ser utilizado."

#. type: Labeled list
#: en/fetch-options.txt:112
#, ignore-same, no-wrap, priority:220
msgid "--[no-]auto-maintenance"
msgstr "--[no-]auto-maintenance"

#. type: Labeled list
#: en/fetch-options.txt:113
#, ignore-same, no-wrap, priority:220
msgid "--[no-]auto-gc"
msgstr "--[no-]auto-gc"

#. type: Plain text
#: en/fetch-options.txt:117
#, priority:220
msgid "Run `git maintenance run --auto` at the end to perform automatic repository maintenance if needed. (`--[no-]auto-gc` is a synonym.)  This is enabled by default."
msgstr "Caso seja necessário, execute o `git maintenance run --auto` no final para executar a manutenção automática do repositório. (`--[no-]auto-gc` is a synonym.)  A predefinição é sempre ativo."

#. type: Labeled list
#: en/fetch-options.txt:118
#, ignore-same, no-wrap, priority:220
msgid "--[no-]write-commit-graph"
msgstr "--[no-]write-commit-graph"

#. type: Plain text
#: en/fetch-options.txt:121
#, priority:220
msgid "Write a commit-graph after fetching. This overrides the config setting `fetch.writeCommitGraph`."
msgstr "Grave um grafo do commit após a captura remota. Este sobrescreve a configuração `fetch.writeCommitGraph`."

#. type: Labeled list
#: en/fetch-options.txt:123
#, ignore-same, no-wrap, priority:220
msgid "--prefetch"
msgstr "--prefetch"

#. type: Plain text
#: en/fetch-options.txt:127
#, priority:220
msgid "Modify the configured refspec to place all refs into the `refs/prefetch/` namespace. See the `prefetch` task in linkgit:git-maintenance[1]."
msgstr "Altere o refspec configurado para colocar todos os refs no namespace `refs/prefetch/`. Consulte a tarefa `prefetch` em linkgit:git-maintenance[1]."

#. type: Labeled list
#: en/fetch-options.txt:129 en/git-push.txt:153
#, ignore-same, no-wrap, priority:220
msgid "--prune"
msgstr "--prune"

#. type: Plain text
#: en/fetch-options.txt:139
#, priority:220
msgid "Before fetching, remove any remote-tracking references that no longer exist on the remote.  Tags are not subject to pruning if they are fetched only because of the default tag auto-following or due to a --tags option.  However, if tags are fetched due to an explicit refspec (either on the command line or in the remote configuration, for example if the remote was cloned with the --mirror option), then they are also subject to pruning. Supplying `--prune-tags` is a shorthand for providing the tag refspec."
msgstr "Antes de capturar, remova as referências do rastreamento remoto que não exista mais remotamente.  As tags não estão sujeitas a remoção caso sejam capturadas apenas por causa do acompanhamento automático da tag predefinida ou devido a uma opção `--tags`.  No entanto, caso as tags seja capturadas por causa de um \"refspec\" explícito (na linha de comandos ou na configuração remota, por exemplo, caso haja uma clonagem remota com a opção `--mirror`), elas também estarão sujeitas a remoção. Informar a opção `--prune-tags` é uma abreviação para informar a tag refspec."

#. type: Plain text
#: en/fetch-options.txt:142 en/fetch-options.txt:153
#, priority:220
msgid "See the PRUNING section below for more details."
msgstr "Consulte a seção de PRUNING abaixo para mais detalhes."

#. type: Labeled list
#: en/fetch-options.txt:143 en/git-cvsexportcommit.txt:57 en/git-grep.txt:135 en/git.txt:136 en/rev-list-options.txt:97
#, no-wrap, priority:260
msgid "-P"
msgstr "-p"

#. type: Labeled list
#: en/fetch-options.txt:144
#, ignore-same, no-wrap, priority:220
msgid "--prune-tags"
msgstr "--prune-tags"

#. type: Plain text
#: en/fetch-options.txt:151
#, priority:220
msgid "Before fetching, remove any local tags that no longer exist on the remote if `--prune` is enabled. This option should be used more carefully, unlike `--prune` it will remove any local references (local tags) that have been created. This option is a shorthand for providing the explicit tag refspec along with `--prune`, see the discussion about that in its documentation."
msgstr "Antes de capturar, remova as tags locais que não existam mais remotamente caso a opção `--prune` esteja ativa. Esta opção deve ser utilizada com mais cuidado, ao contrário da opção `--prune`, ela removerá todas as referências locais (tags locais) que forem criadas. Esta opção é um atalho para informar a tag explícita refspec junto com a opção `--prune`, consulte a discussão sobre isso em sua documentação."

#. type: Labeled list
#: en/fetch-options.txt:157 en/git-add.txt:69 en/git-blame.txt:71 en/git-checkout-index.txt:45 en/git-cherry-pick.txt:92 en/git-clean.txt:49 en/git-clone.txt:148 en/git-commit.txt:214 en/git-format-patch.txt:118 en/git-grep.txt:148 en/git-mailinfo.txt:68 en/git-mv.txt:39 en/git-notes.txt:178 en/git-p4.txt:331 en/git-prune-packed.txt:31 en/git-prune.txt:36 en/git-push.txt:172 en/git-quiltimport.txt:34 en/git-read-tree.txt:58 en/git-rebase.txt:402 en/git-reflog.txt:119 en/git-repack.txt:94 en/git-revert.txt:77 en/git-rm.txt:52 en/git-shortlog.txt:29 en/git-submodule.txt:316 en/git-svn.txt:686 en/git-unpack-objects.txt:30 en/git-worktree.txt:219 en/merge-options.txt:108
#, ignore-same, no-wrap, priority:300
msgid "-n"
msgstr "-n"

#. type: Labeled list
#: en/fetch-options.txt:159 en/git-clone.txt:265
#, ignore-same, no-wrap, priority:300
msgid "--no-tags"
msgstr "--no-tags"

#. type: Plain text
#: en/fetch-options.txt:165
#, priority:220
msgid "By default, tags that point at objects that are downloaded from the remote repository are fetched and stored locally.  This option disables this automatic tag following. The default behavior for a remote may be specified with the remote.<name>.tagOpt setting. See linkgit:git-config[1]."
msgstr "É predefinido que as tags que apontem para os objetos baixados do repositório remoto sejam capturados e armazenadas localmente.  Esta opção desativa essa tag automática a seguir. O comportamento remoto predefinido pode ser especificado com a configuração remote.<nome>.tagOpt. Consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/fetch-options.txt:167 en/git-fetch-pack.txt:104
#, ignore-same, no-wrap, priority:220
msgid "--refetch"
msgstr "--refetch"

#. type: Plain text
#: en/fetch-options.txt:174
#, priority:220
msgid "Instead of negotiating with the server to avoid transferring commits and associated objects that are already present locally, this option fetches all objects as a fresh clone would. Use this to reapply a partial clone filter from configuration or using `--filter=` when the filter definition has changed. Automatic post-fetch maintenance will perform object database pack consolidation to remove any duplicate objects."
msgstr "Em vez de negociar com o servidor para evitar a transferência dos commits e dos objetos associados que já estão presentes no local, esta opção faz a busca de todos os objetos da mesma maneira que seria feito com um novo clone. Use isso para reaplicar um filtro de clone parcial da configuração ou usando `--filter=` quando a definição do filtro for alterada. A manutenção automática pós-busca realizará a consolidação do pacote no banco de dados dos objetos para seja removido quaisquer objetos duplicados."

#. type: Labeled list
#: en/fetch-options.txt:176
#, no-wrap, priority:220
msgid "--refmap=<refspec>"
msgstr "--refmap=<refspec>"

#. type: Plain text
#: en/fetch-options.txt:186
#, priority:220
msgid "When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of `remote.*.fetch` configuration variables for the remote repository.  Providing an empty `<refspec>` to the `--refmap` option causes Git to ignore the configured refspecs and rely entirely on the refspecs supplied as command-line arguments. See section on \"Configured Remote-tracking Branches\" for details."
msgstr "Ao capturar as refs listadas na linha de comando, utilize o \"refspec\" informado (pode ser utilizado mais de uma vez) para mapear os refs para as ramificações rastreadas remotamente em vez dos valores das variáveis da configuração `remote.*.fetch` para o repositório remoto.  Informe um `<refspec>` vazio à opção `--refmap` faz com que o Git ignore os \"refspecs\" configurados e confie inteiramente nos \"refspecs\" informados como os argumentos da linha de comando. Para mais detalhes consulte a seção \"Configuração dos Ramos Monitorados Remotamente\"."

#. type: Labeled list
#: en/fetch-options.txt:188 en/git-describe.txt:55 en/git-fsck.txt:41 en/git-ls-remote.txt:27 en/git-name-rev.txt:24 en/git-push.txt:186 en/git-show-ref.txt:41
#, ignore-same, no-wrap, priority:260
msgid "--tags"
msgstr "--tags"

#. type: Plain text
#: en/fetch-options.txt:195
#, priority:220
msgid "Fetch all tags from the remote (i.e., fetch remote tags `refs/tags/*` into local tags with the same name), in addition to whatever else would otherwise be fetched.  Using this option alone does not subject tags to pruning, even if --prune is used (though tags may be pruned anyway if they are also the destination of an explicit refspec; see `--prune`)."
msgstr "Capture todas as tags remotas (ou seja, capture as tags remotas `refs/tags/*` nas tags locais com o mesmo nome), além de qualquer outra coisa que possa ser capturada.  O uso desta opção por si só não sujeita a remoção das tags, mesmo que `--prune` seja utilizado (embora as tags possam ser removidas de qualquer maneira, caso também sejam o destino de um \"refspec\" explícito; consulte `--prune`)."

#. type: Labeled list
#: en/fetch-options.txt:197
#, no-wrap, priority:220
msgid "--recurse-submodules[=yes|on-demand|no]"
msgstr "--recurse-submodules[=yes|on-demand|no]"

#. type: Plain text
#: en/fetch-options.txt:207
#, priority:220
msgid "This option controls if and under what conditions new commits of submodules should be fetched too. When recursing through submodules, `git fetch` always attempts to fetch \"changed\" submodules, that is, a submodule that has commits that are referenced by a newly fetched superproject commit but are missing in the local submodule clone. A changed submodule can be fetched as long as it is present locally e.g.  in `$GIT_DIR/modules/` (see linkgit:gitsubmodules[7]); if the upstream adds a new submodule, that submodule cannot be fetched until it is cloned e.g. by `git submodule update`."
msgstr "Esta opção controla quais as condições do \"if\" e do \"under\" se os novos commits dos submódulos também devem ser buscados. Ao utilizar recursos recursivos através dos submódulos, o comando `git fetch` sempre tenta buscar os submódulos que tenham sido \"alterados\", ou seja, um submódulo que tem commits que cujas referências num commit do superprojeto sido buscado recentemente, mas que estão faltando no clone do submódulo local. Um submódulo alterado pode ser buscado desde que esteja presente localmente como em `$GIT_DIR/modules/`, por exemplo (consulte linkgit:gitsubmodules[7]); caso o \"upstream\" adicione um novo submódulo, este submódulo não poderá ser buscado até que o mesmo seja clonado através do comando `git submodule update` por exemplo."

#. type: Plain text
#: en/fetch-options.txt:212
#, priority:220
msgid "When set to 'on-demand', only changed submodules are fetched. When set to 'yes', all populated submodules are fetched and submodules that are both unpopulated and changed are fetched. When set to 'no', submodules are never fetched."
msgstr "Quando for definido como 'sob demanda', apenas os submódulos que tenham sido alterados são buscados. Quando for definido como 'yes', todos os submódulos que tenham sido colonizados ou não, assim como tenham sido alterados, todos eles serão buscados . Quando for definido como 'no', os submódulos nunca serão buscados."

#. type: Plain text
#: en/fetch-options.txt:216
#, priority:220
msgid "When unspecified, this uses the value of `fetch.recurseSubmodules` if it is set (see linkgit:git-config[1]), defaulting to 'on-demand' if unset.  When this option is used without any value, it defaults to 'yes'."
msgstr "Quando não for definido, usa o valor de `fetch.recurseSubmodules`, quando não for (consulte linkgit:git-config[1]), usa o valor predefinido 'on-demand'. Quando esta opção é usada sem nenhum valor, o padrão é 'yes'."

#. type: Labeled list
#: en/fetch-options.txt:218
#, ignore-same, no-wrap, priority:220
msgid "-j"
msgstr "-j"

#. type: Labeled list
#: en/fetch-options.txt:219
#, no-wrap, priority:220
msgid "--jobs=<n>"
msgstr "--jobs=<n>"

#. type: Plain text
#: en/fetch-options.txt:221
#, priority:220
msgid "Number of parallel children to be used for all forms of fetching."
msgstr "A quantidade de processos paralelos que serão utilizados para todas as formas de captura."

#. type: Plain text
#: en/fetch-options.txt:226
#, priority:220
msgid "If the `--multiple` option was specified, the different remotes will be fetched in parallel. If multiple submodules are fetched, they will be fetched in parallel. To control them independently, use the config settings `fetch.parallel` and `submodule.fetchJobs` (see linkgit:git-config[1])."
msgstr "Caso a opção `--multiple` seja utilizada, os diferentes ramos remotos serão capturados em paralelo. Caso vários submódulos sejam capturados, estes serão capturados em paralelo. Para controlá-los de forma independente, utilize as definições da configuração `fetch.parallel` e `submodule.fetchJobs` (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/fetch-options.txt:229
#, priority:220
msgid "Typically, parallel recursive and multi-remote fetches will be faster. By default fetches are performed sequentially, not in parallel."
msgstr "Normalmente, as capturas remotas dos múltiplos ramos de forma paralela e recursiva serão mais rápidas. A predefinição é realizar as capturas em sequência e não em paralelo."

#. type: Labeled list
#: en/fetch-options.txt:231 en/git-checkout.txt:298 en/git-push.txt:401 en/git-restore.txt:111 en/git-switch.txt:184
#, ignore-same, no-wrap, priority:280
msgid "--no-recurse-submodules"
msgstr "--no-recurse-submodules"

#. type: Plain text
#: en/fetch-options.txt:234
#, priority:220
msgid "Disable recursive fetching of submodules (this has the same effect as using the `--recurse-submodules=no` option)."
msgstr "Desative a captura recursiva dos submódulos (tem o mesmo efeito que utilizar a opção `--recurse-submodules=no`)."

#. type: Labeled list
#: en/fetch-options.txt:236 en/git-branch.txt:259 en/git-push.txt:373
#, ignore-same, no-wrap, priority:260
msgid "--set-upstream"
msgstr "--set-upstream"

#. type: Plain text
#: en/fetch-options.txt:242
#, priority:220
msgid "If the remote is fetched successfully, add upstream (tracking) reference, used by argument-less linkgit:git-pull[1] and other commands. For more information, see `branch.<name>.merge` and `branch.<name>.remote` in linkgit:git-config[1]."
msgstr "Caso a captura remota seja bem sucedida, uma referência de rastreamento `add` será adicionada ao upstream, utilizado pelo argumento `less` linkgit:git-pull[1] e outros comandos. Para mais informações, consulte `branch.<nome>.merge` e `branch.<nome>.remote` em linkgit:git-config[1]."

#. type: Labeled list
#: en/fetch-options.txt:244
#, no-wrap, priority:220
msgid "--submodule-prefix=<path>"
msgstr "--submodule-prefix=<caminho>"

#. type: Plain text
#: en/fetch-options.txt:248
#, priority:220
msgid "Prepend <path> to paths printed in informative messages such as \"Fetching submodule foo\".  This option is used internally when recursing over submodules."
msgstr "Anexe o `<caminho>` para os caminhos impressos nas mensagens informativas como \"Recolhendo o submódulo foo\".  Esta opção é utilizada internamente quando recorrer as submódulos."

#. type: Labeled list
#: en/fetch-options.txt:249
#, no-wrap, priority:220
msgid "--recurse-submodules-default=[yes|on-demand]"
msgstr "--recurse-submodules-default=[yes|on-demand]"

#. type: Plain text
#: en/fetch-options.txt:256
#, priority:220
msgid "This option is used internally to temporarily provide a non-negative default value for the --recurse-submodules option.  All other methods of configuring fetch's submodule recursion (such as settings in linkgit:gitmodules[5] and linkgit:git-config[1]) override this option, as does specifying --[no-]recurse-submodules directly."
msgstr "Esta opção é utilizada internamente para prover temporariamente um valor não negativo da forma predefinida para a opção `--recurse-submodules`.  Todos os outros métodos de configurar a recursão do submódulo `fetch` (como as configurações em linkgit:gitmodules[5] e linkgit:git-config[1]) sobrescreva esta opção utilizando `--[no-]recurse-submodules` diretamente."

#. type: Labeled list
#: en/fetch-options.txt:258
#, ignore-same, no-wrap, priority:220
msgid "--update-head-ok"
msgstr "--update-head-ok"

#. type: Plain text
#: en/fetch-options.txt:265
#, priority:220
msgid "By default 'git fetch' refuses to update the head which corresponds to the current branch.  This flag disables the check.  This is purely for the internal use for 'git pull' to communicate with 'git fetch', and unless you are implementing your own Porcelain you are not supposed to use it."
msgstr "É predefinido que o 'git fetch' se recuse a atualizar o cabeçalho que corresponde ao ramo atual.  Esta flag desativa esta verificação.  Serve apenas para a utilização interna do 'git pull' para se comunicar com o 'git fetch', a menos que esteja implementando a sua própria porcelana, você não deve utilizá-la."

#. type: Labeled list
#: en/fetch-options.txt:267 en/git-clone.txt:214
#, no-wrap, priority:300
msgid "--upload-pack <upload-pack>"
msgstr "--upload-pack <pacote-para-envio>"

#. type: Plain text
#: en/fetch-options.txt:272
#, priority:220
msgid "When given, and the repository to fetch from is handled by 'git fetch-pack', `--exec=<upload-pack>` is passed to the command to specify non-default path for the command run on the other end."
msgstr "Quando o repositório é informado para capturar e que seja manipulado por 'git fetch-pack', o `--exec=<upload-pack>` é passado para o comando utilizar um caminho alternativo para o comando executado na outra extremidade."

#. type: Labeled list
#: en/fetch-options.txt:274 en/git-am.txt:86 en/git-apply.txt:231 en/git-branch.txt:194 en/git-bundle.txt:140 en/git-checkout-index.txt:31 en/git-checkout.txt:107 en/git-clean.txt:53 en/git-clone.txt:124 en/git-commit.txt:369 en/git-diff-files.txt:44 en/git-fetch-pack.txt:48 en/git-format-patch.txt:375 en/git-grep.txt:294 en/git-imap-send.txt:36 en/git-init.txt:43 en/git-ls-remote.txt:38 en/git-merge-file.txt:67 en/git-merge-index.txt:35 en/git-notes.txt:206 en/git-pack-objects.txt:213 en/git-prune-packed.txt:36 en/git-pull.txt:80 en/git-push.txt:385 en/git-read-tree.txt:117 en/git-rebase.txt:390 en/git-repack.txt:89 en/git-reset.txt:106 en/git-restore.txt:66 en/git-rev-parse.txt:117 en/git-rm.txt:81 en/git-show-ref.txt:70 en/git-stash.txt:235 en/git-submodule.txt:269 en/git-svn.txt:670 en/git-switch.txt:142 en/git-symbolic-ref.txt:39 en/git-unpack-objects.txt:34 en/git-update-index.txt:58 en/git-worktree.txt:236 en/merge-options.txt:174
#, ignore-same, no-wrap, priority:300
msgid "-q"
msgstr "-q"

#. type: Plain text
#: en/fetch-options.txt:279
#, priority:220
msgid "Pass --quiet to git-fetch-pack and silence any other internally used git commands. Progress is not reported to the standard error stream."
msgstr "Repasse a opção `--quiet` para o `git-fetch-pack` e silencie qualquer outro comando git utilizado internamente. O progresso não é relatado para o fluxo de erro predefinido."

#. type: Labeled list
#: en/fetch-options.txt:280 en/git-add.txt:74 en/git-apply.txt:225 en/git-archimport.txt:74 en/git-archive.txt:49 en/git-branch.txt:183 en/git-cherry.txt:29 en/git-clone.txt:129 en/git-commit.txt:354 en/git-count-objects.txt:21 en/git-cvsexportcommit.txt:82 en/git-cvsimport.txt:52 en/git-diff-tree.txt:83 en/git-fetch-pack.txt:115 en/git-grep.txt:110 en/git-http-fetch.txt:30 en/git-imap-send.txt:32 en/git-index-pack.txt:28 en/git-ls-files.txt:141 en/git-mv.txt:43 en/git-notes.txt:210 en/git-p4.txt:208 en/git-prune.txt:41 en/git-pull.txt:86 en/git-push.txt:391 en/git-read-tree.txt:63 en/git-rebase.txt:394 en/git-remote.txt:35 en/git-status.txt:50 en/git-svn.txt:366 en/git-tag.txt:87 en/git.txt:42 en/git-verify-commit.txt:23 en/git-verify-pack.txt:26 en/git-verify-tag.txt:23 en/git-worktree.txt:240 en/merge-options.txt:178
#, ignore-same, no-wrap, priority:300
msgid "-v"
msgstr "-v"

#. type: Labeled list
#: en/fetch-options.txt:281 en/git-add.txt:75 en/git-apply.txt:226 en/git-archive.txt:50 en/git-branch.txt:185 en/git-clone.txt:130 en/git-commit.txt:355 en/git-count-objects.txt:22 en/git-daemon.txt:148 en/git-fsck.txt:85 en/git-help.txt:61 en/git-http-push.txt:40 en/git-imap-send.txt:33 en/git-mv.txt:44 en/git-notes.txt:211 en/git-p4.txt:209 en/git-pack-redundant.txt:39 en/git-prune.txt:42 en/git-pull.txt:87 en/git-push.txt:392 en/git-rebase.txt:395 en/git-reflog.txt:124 en/git-remote.txt:36 en/git-send-pack.txt:61 en/git-status.txt:51 en/git-svn.txt:367 en/git-update-index.txt:158 en/git-verify-commit.txt:24 en/git-verify-pack.txt:27 en/git-verify-tag.txt:24 en/git-worktree.txt:241 en/merge-options.txt:179
#, ignore-same, no-wrap, priority:300
msgid "--verbose"
msgstr "--verbose"

#. type: Plain text
#: en/fetch-options.txt:283 en/git-add.txt:77 en/git-imap-send.txt:35 en/merge-options.txt:181
#, priority:300
msgid "Be verbose."
msgstr "Seja loquaz."

#. type: Labeled list
#: en/fetch-options.txt:285 en/git-bundle.txt:112 en/git-checkout.txt:111 en/git-clone.txt:134 en/git-format-patch.txt:403 en/git-pack-objects.txt:191 en/git-prune.txt:45 en/git-push.txt:395 en/git-restore.txt:70 en/git-submodule.txt:273 en/git-switch.txt:146 en/merge-options.txt:182
#, ignore-same, no-wrap, priority:300
msgid "--progress"
msgstr "--progress"

#. type: Plain text
#: en/fetch-options.txt:290 en/git-bundle.txt:117 en/git-pack-objects.txt:196 en/git-push.txt:400
#, priority:220
msgid "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal."
msgstr "É predefinido que a condição geral do progresso seja relatada no fluxo de erros quando estiver conectado num terminal, a menos que `-q` seja utilizado. Esta opção impõem a condição geral do progresso, mesmo que o fluxo de erro predefinido não seja direcionado para um terminal."

#. type: Labeled list
#: en/fetch-options.txt:291 en/git-ls-remote.txt:75 en/git-push.txt:215
#, no-wrap, priority:220
msgid "-o <option>"
msgstr "-o <opção>"

#. type: Labeled list
#: en/fetch-options.txt:292 en/git-clone.txt:140 en/git-ls-remote.txt:76
#, no-wrap, priority:300
msgid "--server-option=<option>"
msgstr "--server-option=<opção>"

#. type: Plain text
#: en/fetch-options.txt:299 en/git-clone.txt:147
#, priority:300
msgid "Transmit the given string to the server when communicating using protocol version 2.  The given string must not contain a NUL or LF character.  The server's handling of server options, including unknown ones, is server-specific.  When multiple `--server-option=<option>` are given, they are all sent to the other side in the order listed on the command line."
msgstr "Transmita a sequência usada para o servidor ao se comunicar utilizando o protocolo versão 2.  A sequência informada não deve conter um caractere `NUL` ou `LF`.  O tratamento das opções do servidor, incluindo os desconhecidos, é específico do servidor.  Quando a opção `--server-option=<opção>` forem utilizadas várias vezes, todos serão enviados para o outro lado na ordem listada na linha de comando."

#. type: Labeled list
#: en/fetch-options.txt:300
#, ignore-same, no-wrap, priority:220
msgid "--show-forced-updates"
msgstr "--show-forced-updates"

#. type: Plain text
#: en/fetch-options.txt:305
#, priority:220
msgid "By default, git checks if a branch is force-updated during fetch. This can be disabled through fetch.showForcedUpdates, but the --show-forced-updates option guarantees this check occurs.  See linkgit:git-config[1]."
msgstr "É predefinido que o Git verifique se a atualização do ramo foi imposta durante uma captura. Pode ser desativado por meio de `fetch.showForcedUpdates`, porém a opção `--show-forced-updates garante que essa verificação ocorra.  Consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/fetch-options.txt:306
#, ignore-same, no-wrap, priority:220
msgid "--no-show-forced-updates"
msgstr "--no-show-forced-updates"

#. type: Plain text
#: en/fetch-options.txt:312
#, priority:220
msgid "By default, git checks if a branch is force-updated during fetch. Pass --no-show-forced-updates or set fetch.showForcedUpdates to false to skip this check for performance reasons. If used during 'git-pull' the --ff-only option will still check for forced updates before attempting a fast-forward update. See linkgit:git-config[1]."
msgstr "É predefinido que o Git verifique se a atualização do ramo foi imposta durante uma captura. Utilize a opção `--no-show-forced-updates` ou defina `fetch.showForcedUpdates` como to `false` para ignorar esta verificação por questões de desempenho. Se utilizada durante o `git-pull`, a opção `--ff-only` ainda verificará quais as atualizações foram impostas antes de tentar uma atualização rápida. Consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/fetch-options.txt:313 en/git-push.txt:422
#, ignore-same, no-wrap, priority:220
msgid "-4"
msgstr "-4"

#. type: Labeled list
#: en/fetch-options.txt:314 en/git-push.txt:423
#, ignore-same, no-wrap, priority:220
msgid "--ipv4"
msgstr "--ipv4"

#. type: Plain text
#: en/fetch-options.txt:316 en/git-push.txt:425
#, priority:220
msgid "Use IPv4 addresses only, ignoring IPv6 addresses."
msgstr "Utilize apenas os endereços IPv4, ignorando os endereços IPv6."

#. type: Labeled list
#: en/fetch-options.txt:317 en/git-push.txt:426
#, ignore-same, no-wrap, priority:220
msgid "-6"
msgstr "-6"

#. type: Labeled list
#: en/fetch-options.txt:318 en/git-push.txt:427
#, ignore-same, no-wrap, priority:220
msgid "--ipv6"
msgstr "--ipv6"

#. type: Plain text
#: en/fetch-options.txt:319 en/git-push.txt:429
#, priority:220
msgid "Use IPv6 addresses only, ignoring IPv4 addresses."
msgstr "Utilize apenas os endereços IPv6, ignorando os endereços IPv4."

#. type: Title =
#: en/git-add.txt:2
#, ignore-same, no-wrap, priority:300
msgid "git-add(1)"
msgstr "git-add(1)"

#. type: Title -
#: en/git-add.txt:5 en/git-am.txt:5 en/git-annotate.txt:5 en/git-apply.txt:5 en/git-archimport.txt:5 en/git-archive.txt:5 en/git-bisect.txt:5 en/git-blame.txt:5 en/git-branch.txt:5 en/git-bugreport.txt:5 en/git-bundle.txt:5 en/git-cat-file.txt:5 en/git-check-attr.txt:5 en/git-check-ignore.txt:5 en/git-check-mailmap.txt:5 en/git-checkout-index.txt:5 en/git-checkout.txt:5 en/git-check-ref-format.txt:5 en/git-cherry-pick.txt:5 en/git-cherry.txt:5 en/git-citool.txt:5 en/git-clean.txt:5 en/git-clone.txt:5 en/git-column.txt:5 en/git-commit-tree.txt:5 en/git-commit.txt:5 en/git-config.txt:5 en/git-count-objects.txt:5 en/git-credential-cache--daemon.txt:5 en/git-credential-cache.txt:5 en/git-credential-store.txt:5 en/git-credential.txt:5 en/git-cvsexportcommit.txt:5 en/git-cvsimport.txt:5 en/git-cvsserver.txt:5 en/git-daemon.txt:5 en/git-describe.txt:5 en/git-diff-files.txt:5 en/git-diff-index.txt:5 en/git-difftool.txt:5 en/git-diff-tree.txt:5 en/git-diff.txt:5 en/git-fast-export.txt:5 en/git-fast-import.txt:5 en/git-fetch-pack.txt:5 en/git-fetch.txt:5 en/git-filter-branch.txt:5 en/git-fmt-merge-msg.txt:5 en/git-for-each-ref.txt:5 en/git-format-patch.txt:5 en/git-fsck-objects.txt:5 en/git-fsck.txt:5 en/git-gc.txt:5 en/git-get-tar-commit-id.txt:5 en/git-grep.txt:5 en/git-gui.txt:5 en/git-hash-object.txt:5 en/git-help.txt:5 en/git-http-backend.txt:5 en/git-http-fetch.txt:5 en/git-http-push.txt:5 en/git-imap-send.txt:5 en/git-index-pack.txt:5 en/git-init-db.txt:5 en/git-init.txt:5 en/git-instaweb.txt:5 en/git-interpret-trailers.txt:5 en/git-log.txt:5 en/git-ls-files.txt:5 en/git-ls-remote.txt:5 en/git-ls-tree.txt:5 en/git-mailinfo.txt:5 en/git-mailsplit.txt:5 en/git-merge-base.txt:5 en/git-merge-file.txt:5 en/git-merge-index.txt:5 en/git-merge-one-file.txt:5 en/git-mergetool--lib.txt:5 en/git-mergetool.txt:5 en/git-merge-tree.txt:5 en/git-merge.txt:5 en/git-mktag.txt:5 en/git-mktree.txt:5 en/git-mv.txt:5 en/git-name-rev.txt:5 en/git-notes.txt:5 en/git-p4.txt:5 en/git-pack-objects.txt:5 en/git-pack-redundant.txt:5 en/git-pack-refs.txt:5 en/git-patch-id.txt:5 en/git-prune-packed.txt:5 en/git-prune.txt:5 en/git-pull.txt:5 en/git-push.txt:5 en/git-quiltimport.txt:5 en/git-range-diff.txt:5 en/git-read-tree.txt:5 en/git-rebase.txt:5 en/git-receive-pack.txt:5 en/git-reflog.txt:5 en/git-remote-ext.txt:5 en/git-remote-fd.txt:5 en/git-remote.txt:5 en/git-repack.txt:5 en/git-replace.txt:5 en/git-request-pull.txt:5 en/git-rerere.txt:5 en/git-reset.txt:5 en/git-restore.txt:5 en/git-revert.txt:5 en/git-rev-list.txt:5 en/git-rev-parse.txt:5 en/git-rm.txt:5 en/git-send-email.txt:5 en/git-send-pack.txt:5 en/git-shell.txt:5 en/git-sh-i18n--envsubst.txt:5 en/git-sh-i18n.txt:5 en/git-shortlog.txt:5 en/git-show-branch.txt:5 en/git-show-index.txt:5 en/git-show-ref.txt:5 en/git-show.txt:5 en/git-sh-setup.txt:5 en/git-stage.txt:5 en/git-stash.txt:5 en/git-status.txt:5 en/git-stripspace.txt:5 en/git-submodule.txt:5 en/git-svn.txt:5 en/git-switch.txt:5 en/git-symbolic-ref.txt:5 en/git-tag.txt:5 en/git.txt:5 en/git-unpack-file.txt:5 en/git-unpack-objects.txt:5 en/git-update-index.txt:5 en/git-update-ref.txt:5 en/git-update-server-info.txt:5 en/git-upload-archive.txt:5 en/git-upload-pack.txt:5 en/git-var.txt:5 en/git-verify-commit.txt:5 en/git-verify-pack.txt:5 en/git-verify-tag.txt:5 en/git-web--browse.txt:5 en/git-whatchanged.txt:5 en/git-worktree.txt:5 en/git-write-tree.txt:5 en/gitglossary.txt:5
#, no-wrap, priority:310
msgid "NAME"
msgstr "NOME"

#. type: Plain text
#: en/git-add.txt:7
#, priority:300
msgid "git-add - Add file contents to the index"
msgstr "git-add - Adicione o conteúdo do arquivo ao índice"

#. type: Title -
#: en/git-add.txt:9 en/git-am.txt:10 en/git-annotate.txt:9 en/git-apply.txt:10 en/git-archimport.txt:10 en/git-archive.txt:10 en/git-bisect.txt:10 en/git-blame.txt:9 en/git-branch.txt:9 en/git-bugreport.txt:9 en/git-bundle.txt:10 en/git-cat-file.txt:10 en/git-check-attr.txt:10 en/git-check-ignore.txt:10 en/git-check-mailmap.txt:10 en/git-checkout-index.txt:10 en/git-checkout.txt:9 en/git-check-ref-format.txt:9 en/git-cherry-pick.txt:9 en/git-cherry.txt:9 en/git-citool.txt:9 en/git-clean.txt:9 en/git-clone.txt:10 en/git-column.txt:9 en/git-commit-tree.txt:10 en/git-commit.txt:9 en/git-config.txt:10 en/git-count-objects.txt:9 en/git-credential-cache--daemon.txt:9 en/git-credential-cache.txt:9 en/git-credential-store.txt:9 en/git-credential.txt:9 en/git-cvsexportcommit.txt:10 en/git-cvsimport.txt:10 en/git-cvsserver.txt:9 en/git-daemon.txt:9 en/git-describe.txt:9 en/git-diff-files.txt:10 en/git-diff-index.txt:10 en/git-difftool.txt:9 en/git-diff-tree.txt:10 en/git-diff.txt:10 en/git-fast-export.txt:10 en/git-fast-import.txt:10 en/git-fetch-pack.txt:10 en/git-fetch.txt:10 en/git-filter-branch.txt:9 en/git-fmt-merge-msg.txt:10 en/git-for-each-ref.txt:9 en/git-format-patch.txt:10 en/git-fsck-objects.txt:10 en/git-fsck.txt:10 en/git-gc.txt:10 en/git-get-tar-commit-id.txt:10 en/git-grep.txt:10 en/git-gui.txt:9 en/git-hash-object.txt:10 en/git-help.txt:9 en/git-http-backend.txt:9 en/git-http-fetch.txt:10 en/git-http-push.txt:10 en/git-imap-send.txt:10 en/git-index-pack.txt:10 en/git-init-db.txt:10 en/git-init.txt:10 en/git-instaweb.txt:9 en/git-interpret-trailers.txt:9 en/git-log.txt:10 en/git-ls-files.txt:10 en/git-ls-remote.txt:10 en/git-ls-tree.txt:10 en/git-mailinfo.txt:10 en/git-mailsplit.txt:9 en/git-merge-base.txt:10 en/git-merge-file.txt:10 en/git-merge-index.txt:10 en/git-merge-one-file.txt:10 en/git-mergetool--lib.txt:9 en/git-mergetool.txt:9 en/git-merge-tree.txt:10 en/git-merge.txt:10 en/git-mktag.txt:10 en/git-mktree.txt:10 en/git-mv.txt:10 en/git-name-rev.txt:10 en/git-notes.txt:9 en/git-p4.txt:10 en/git-pack-objects.txt:10 en/git-pack-redundant.txt:10 en/git-pack-refs.txt:9 en/git-patch-id.txt:9 en/git-prune-packed.txt:10 en/git-prune.txt:10 en/git-pull.txt:10 en/git-push.txt:10 en/git-quiltimport.txt:10 en/git-range-diff.txt:9 en/git-read-tree.txt:10 en/git-rebase.txt:9 en/git-receive-pack.txt:10 en/git-reflog.txt:10 en/git-remote-ext.txt:9 en/git-remote-fd.txt:9 en/git-remote.txt:10 en/git-repack.txt:10 en/git-replace.txt:9 en/git-request-pull.txt:9 en/git-rerere.txt:9 en/git-reset.txt:9 en/git-restore.txt:9 en/git-revert.txt:9 en/git-rev-list.txt:10 en/git-rev-parse.txt:10 en/git-rm.txt:9 en/git-send-email.txt:10 en/git-send-pack.txt:10 en/git-shell.txt:10 en/git-sh-i18n--envsubst.txt:9 en/git-sh-i18n.txt:9 en/git-shortlog.txt:9 en/git-show-branch.txt:9 en/git-show-index.txt:10 en/git-show-ref.txt:9 en/git-show.txt:10 en/git-sh-setup.txt:9 en/git-stage.txt:10 en/git-stash.txt:9 en/git-status.txt:10 en/git-stripspace.txt:10 en/git-submodule.txt:10 en/git-svn.txt:9 en/git-switch.txt:9 en/git-symbolic-ref.txt:9 en/git-tag.txt:10 en/git.txt:10 en/git-unpack-file.txt:11 en/git-unpack-objects.txt:10 en/git-update-index.txt:10 en/git-update-ref.txt:9 en/git-update-server-info.txt:10 en/git-upload-archive.txt:10 en/git-upload-pack.txt:10 en/git-var.txt:10 en/git-verify-commit.txt:9 en/git-verify-pack.txt:10 en/git-verify-tag.txt:9 en/git-web--browse.txt:9 en/git-whatchanged.txt:10 en/git-worktree.txt:10 en/git-write-tree.txt:10 en/gitglossary.txt:9
#, no-wrap, priority:310
msgid "SYNOPSIS"
msgstr "RESUMO"

#. type: Plain text
#: en/git-add.txt:16
#, ignore-ellipsis, no-wrap, priority:300
msgid ""
"'git add' [--verbose | -v] [--dry-run | -n] [--force | -f] [--interactive | -i] [--patch | -p]\n"
"\t  [--edit | -e] [--[no-]all | --[no-]ignore-removal | [--update | -u]] [--sparse]\n"
"\t  [--intent-to-add | -N] [--refresh] [--ignore-errors] [--ignore-missing] [--renormalize]\n"
"\t  [--chmod=(+|-)x] [--pathspec-from-file=<file> [--pathspec-file-nul]]\n"
"\t  [--] [<pathspec>...]\n"
msgstr ""
"'git add' [--verbose | -v] [--dry-run | -n] [--force | -f] [--interactive | -i] [--patch | -p]\n"
"\t  [--edit | -e] [--[no-]all | --[no-]ignore-removal | [--update | -u]] [--sparse]\n"
"\t  [--intent-to-add | -N] [--refresh] [--ignore-errors] [--ignore-missing] [--renormalize]\n"
"\t  [--chmod=(+|-)x] [--pathspec-from-file=<arquivo> [--pathspec-file-nul]]\n"
"\t  [--] [<pathspec>...]\n"

#. type: Title -
#: en/git-add.txt:18 en/git-am.txt:24 en/git-annotate.txt:14 en/git-apply.txt:22 en/git-archimport.txt:16 en/git-archive.txt:18 en/git-bisect.txt:15 en/git-blame.txt:18 en/git-branch.txt:29 en/git-bugreport.txt:15 en/git-bundle.txt:19 en/git-cat-file.txt:22 en/git-check-attr.txt:16 en/git-check-ignore.txt:16 en/git-check-mailmap.txt:16 en/git-checkout-index.txt:20 en/git-checkout.txt:20 en/git-check-ref-format.txt:17 en/git-cherry-pick.txt:16 en/git-cherry.txt:14 en/git-citool.txt:14 en/git-clean.txt:14 en/git-clone.txt:23 en/git-column.txt:15 en/git-commit-tree.txt:18 en/git-commit.txt:21 en/git-config.txt:29 en/git-count-objects.txt:14 en/git-credential-cache--daemon.txt:14 en/git-credential-cache.txt:15 en/git-credential-store.txt:15 en/git-credential.txt:15 en/git-cvsexportcommit.txt:17 en/git-cvsimport.txt:20 en/git-cvsserver.txt:28 en/git-daemon.txt:27 en/git-describe.txt:16 en/git-diff-files.txt:15 en/git-diff-index.txt:15 en/git-difftool.txt:14 en/git-diff-tree.txt:17 en/git-diff.txt:20 en/git-fast-export.txt:15 en/git-fast-import.txt:15 en/git-fetch-pack.txt:18 en/git-fetch.txt:19 en/git-filter-branch.txt:33 en/git-fmt-merge-msg.txt:16 en/git-for-each-ref.txt:18 en/git-format-patch.txt:37 en/git-fsck-objects.txt:15 en/git-fsck.txt:18 en/git-gc.txt:15 en/git-get-tar-commit-id.txt:16 en/git-grep.txt:35 en/git-gui.txt:14 en/git-hash-object.txt:16 en/git-help.txt:19 en/git-http-backend.txt:14 en/git-http-fetch.txt:15 en/git-http-push.txt:15 en/git-imap-send.txt:16 en/git-index-pack.txt:18 en/git-init-db.txt:16 en/git-init.txt:19 en/git-instaweb.txt:16 en/git-interpret-trailers.txt:15 en/git-log.txt:15 en/git-ls-files.txt:26 en/git-ls-remote.txt:17 en/git-ls-tree.txt:17 en/git-mailinfo.txt:18 en/git-mailsplit.txt:15 en/git-merge-base.txt:19 en/git-merge-file.txt:18 en/git-merge-index.txt:15 en/git-merge-one-file.txt:15 en/git-mergetool--lib.txt:14 en/git-mergetool.txt:14 en/git-merge-tree.txt:17 en/git-merge.txt:20 en/git-mktag.txt:15 en/git-mktree.txt:15 en/git-mv.txt:15 en/git-name-rev.txt:16 en/git-notes.txt:26 en/git-p4.txt:19 en/git-pack-objects.txt:22 en/git-pack-redundant.txt:15 en/git-pack-refs.txt:14 en/git-patch-id.txt:14 en/git-prune-packed.txt:16 en/git-prune.txt:15 en/git-pull.txt:16 en/git-push.txt:20 en/git-quiltimport.txt:17 en/git-range-diff.txt:18 en/git-read-tree.txt:18 en/git-rebase.txt:18 en/git-receive-pack.txt:15 en/git-reflog.txt:15 en/git-remote-ext.txt:14 en/git-remote-fd.txt:13 en/git-remote.txt:27 en/git-repack.txt:15 en/git-replace.txt:19 en/git-request-pull.txt:14 en/git-rerere.txt:14 en/git-reset.txt:17 en/git-restore.txt:16 en/git-revert.txt:15 en/git-rev-list.txt:15 en/git-rev-parse.txt:15 en/git-rm.txt:16 en/git-send-email.txt:18 en/git-send-pack.txt:18 en/git-shell.txt:17 en/git-sh-i18n--envsubst.txt:19 en/git-sh-i18n.txt:14 en/git-shortlog.txt:15 en/git-show-branch.txt:19 en/git-show-index.txt:16 en/git-show-ref.txt:17 en/git-show.txt:15 en/git-sh-setup.txt:14 en/git-stage.txt:16 en/git-stash.txt:25 en/git-status.txt:15 en/git-stripspace.txt:16 en/git-submodule.txt:27 en/git-svn.txt:14 en/git-switch.txt:17 en/git-symbolic-ref.txt:16 en/git-tag.txt:22 en/git.txt:20 en/git-unpack-file.txt:16 en/git-unpack-objects.txt:16 en/git-update-index.txt:32 en/git-update-ref.txt:14 en/git-update-server-info.txt:15 en/git-upload-archive.txt:15 en/git-upload-pack.txt:16 en/git-var.txt:15 en/git-verify-commit.txt:14 en/git-verify-pack.txt:16 en/git-verify-tag.txt:14 en/git-web--browse.txt:14 en/git-whatchanged.txt:15 en/git-worktree.txt:22 en/git-write-tree.txt:15 en/gitglossary.txt:13
#, no-wrap, priority:310
msgid "DESCRIPTION"
msgstr "DESCRIÇÃO"

#. type: Plain text
#: en/git-add.txt:25
#, priority:300
msgid "This command updates the index using the current content found in the working tree, to prepare the content staged for the next commit.  It typically adds the current content of existing paths as a whole, but with some options it can also be used to add content with only part of the changes made to the working tree files applied, or remove paths that do not exist in the working tree anymore."
msgstr "Este comando atualiza o índice utilizando o conteúdo atual encontrado na árvore de trabalho para preparar o conteúdo para o próximo commit.  Em geral ele adiciona o conteúdo atual dos caminhos existentes como um todo, mas com algumas opções ele também pode ser utilizado para adicionar o conteúdo com apenas a parte das alterações aplicadas nos arquivos da árvore de trabalho ou remover os caminhos que não existam mais na árvore de trabalho."

#. type: Plain text
#: en/git-add.txt:31
#, priority:300
msgid "The \"index\" holds a snapshot of the content of the working tree, and it is this snapshot that is taken as the contents of the next commit.  Thus after making any changes to the working tree, and before running the commit command, you must use the `add` command to add any new or modified files to the index."
msgstr "O \"index\" (ou índice) contém um instantâneo do conteúdo da árvore de trabalho que é tomado como o conteúdo do próximo commit.  Portanto, após fazer as alterações na árvore de trabalho e antes de executar o comando commit, utilize o comando `add` para adicionar qualquer novo arquivo ou qualquer outros arquivos que tenham sido alterados ao índice."

#. type: Plain text
#: en/git-add.txt:36
#, priority:300
msgid "This command can be performed multiple times before a commit.  It only adds the content of the specified file(s) at the time the add command is run; if you want subsequent changes included in the next commit, then you must run `git add` again to add the new content to the index."
msgstr "Este comando pode ser executado várias vezes antes de um commit.  Ele adiciona apenas o conteúdo do(s) arquivo(s) informados(s) no momento em que o comando `add` for executado; caso queira que as alterações subsequentes sejam incluídas no próximo commit, execute o comando `git add` novamente para adicionar o novo conteúdo ao índice."

#. type: Plain text
#: en/git-add.txt:39
#, priority:300
msgid "The `git status` command can be used to obtain a summary of which files have changes that are staged for the next commit."
msgstr "O comando `git status` pode ser utilizado para obter um resumo de quais os arquivos que possuem as alterações que foram testadas para o próximo commit."

#. type: Plain text
#: en/git-add.txt:46
#, priority:300
msgid "The `git add` command will not add ignored files by default.  If any ignored files were explicitly specified on the command line, `git add` will fail with a list of ignored files.  Ignored files reached by directory recursion or filename globbing performed by Git (quote your globs before the shell) will be silently ignored.  The 'git add' command can be used to add ignored files with the `-f` (force) option."
msgstr "É predefinido que o comando `git add` não adicione os arquivos que foram ignorados.  Caso algum arquivo ignorado seja especificado explicitamente na linha de comando, o `git add` falhará com uma lista de arquivos ignorados.  Arquivos ignorados alcançados de forma recursiva no diretório ou agrupamento do nome dos arquivos executados pelo Git (cite os seus agrupamentos antes do shell) serão ignorados silenciosamente.  O comando 'git add' pode ser utilizado para adicionar os arquivos ignorados com a opção `-f` (impor)."

#. type: Plain text
#: en/git-add.txt:49
#, priority:300
msgid "Please see linkgit:git-commit[1] for alternative ways to add content to a commit."
msgstr "Consulte linkgit:git-commit[1] para ver as formas alternativas de adicionar um conteúdo a um commit."

#. type: Title -
#: en/git-add.txt:52 en/git-am.txt:30 en/git-annotate.txt:24 en/git-apply.txt:36 en/git-archimport.txt:69 en/git-archive.txt:34 en/git-bisect.txt:356 en/git-blame.txt:50 en/git-branch.txt:97 en/git-bugreport.txt:45 en/git-bundle.txt:63 en/git-cat-file.txt:36 en/git-check-attr.txt:21 en/git-check-ignore.txt:27 en/git-check-mailmap.txt:25 en/git-checkout-index.txt:25 en/git-checkout.txt:106 en/git-check-ref-format.txt:100 en/git-cherry-pick.txt:42 en/git-cherry.txt:28 en/git-clean.txt:27 en/git-clone.txt:44 en/git-column.txt:22 en/git-commit-tree.txt:46 en/git-commit.txt:66 en/git-config.txt:79 en/git-count-objects.txt:20 en/git-credential-cache.txt:27 en/git-credential-store.txt:30 en/git-cvsexportcommit.txt:35 en/git-cvsimport.txt:51 en/git-cvsserver.txt:40 en/git-daemon.txt:48 en/git-describe.txt:36 en/git-diff-files.txt:22 en/git-diff-index.txt:23 en/git-difftool.txt:21 en/git-diff-tree.txt:26 en/git-diff.txt:120 en/git-fast-export.txt:25 en/git-fast-import.txt:35 en/git-fetch-pack.txt:34 en/git-fetch.txt:46 en/git-filter-branch.txt:96 en/git-fmt-merge-msg.txt:25 en/git-for-each-ref.txt:28 en/git-format-patch.txt:106 en/git-fsck.txt:22 en/git-gc.txt:35 en/git-grep.txt:43 en/git-hash-object.txt:24 en/git-help.txt:48 en/git-http-fetch.txt:23 en/git-http-push.txt:24 en/git-imap-send.txt:30 en/git-index-pack.txt:27 en/git-init.txt:41 en/git-instaweb.txt:21 en/git-interpret-trailers.txt:75 en/git-log.txt:28 en/git-ls-files.txt:34 en/git-ls-remote.txt:23 en/git-ls-tree.txt:37 en/git-mailinfo.txt:28 en/git-mailsplit.txt:23 en/git-merge-base.txt:70 en/git-merge-file.txt:53 en/git-merge-index.txt:22 en/git-mergetool.txt:26 en/git-merge-tree.txt:41 en/git-merge.txt:64 en/git-mktag.txt:41 en/git-mktree.txt:22 en/git-mv.txt:30 en/git-name-rev.txt:22 en/git-notes.txt:126 en/git-p4.txt:199 en/git-pack-objects.txt:51 en/git-pack-redundant.txt:29 en/git-pack-refs.txt:46 en/git-patch-id.txt:31 en/git-prune-packed.txt:30 en/git-prune.txt:34 en/git-pull.txt:78 en/git-quiltimport.txt:32 en/git-range-diff.txt:49 en/git-read-tree.txt:32 en/git-rebase.txt:205 en/git-receive-pack.txt:40 en/git-reflog.txt:61 en/git-remote.txt:33 en/git-repack.txt:29 en/git-replace.txt:59 en/git-request-pull.txt:28 en/git-reset.txt:104 en/git-restore.txt:34 en/git-revert.txt:35 en/git-rev-list.txt:27 en/git-rev-parse.txt:26 en/git-rm.txt:32 en/git-send-email.txt:45 en/git-send-pack.txt:27 en/git-shortlog.txt:27 en/git-show-branch.txt:32 en/git-show-index.txt:40 en/git-show-ref.txt:34 en/git-show.txt:36 en/git-stash.txt:155 en/git-status.txt:25 en/git-stripspace.txt:37 en/git-submodule.txt:268 en/git-svn.txt:575 en/git-switch.txt:35 en/git-symbolic-ref.txt:33 en/git-tag.txt:59 en/git.txt:41 en/git-unpack-file.txt:22 en/git-unpack-objects.txt:29 en/git-update-index.txt:43 en/git-upload-archive.txt:56 en/git-upload-pack.txt:26 en/git-var.txt:19 en/git-verify-commit.txt:18 en/git-verify-pack.txt:22 en/git-verify-tag.txt:18 en/git-web--browse.txt:43 en/git-worktree.txt:159 en/git-write-tree.txt:29
#, no-wrap, priority:300
msgid "OPTIONS"
msgstr "OPÇÕES"

#. type: Labeled list
#: en/git-add.txt:53 en/git-checkout.txt:365 en/git-commit.txt:401 en/git-grep.txt:307 en/git-reset.txt:130 en/git-restore.txt:144 en/git-rm.txt:33 en/git-stash.txt:247 en/git-status.txt:152
#, ignore-ellipsis, no-wrap, priority:300
msgid "<pathspec>..."
msgstr "<pathspec>..."

#. type: Plain text
#: en/git-add.txt:65
#, priority:300
msgid "Files to add content from.  Fileglobs (e.g. `*.c`) can be given to add all matching files.  Also a leading directory name (e.g. `dir` to add `dir/file1` and `dir/file2`) can be given to update the index to match the current state of the directory as a whole (e.g.  specifying `dir` will record not just a file `dir/file1` modified in the working tree, a file `dir/file2` added to the working tree, but also a file `dir/file3` removed from the working tree). Note that older versions of Git used to ignore removed files; use `--no-all` option if you want to add modified or new files but ignore removed ones."
msgstr "Os arquivos que serão adicionados ao conteúdo.  Os agrupamentos dos arquivos (`*.c` por exemplo) podem ser utilizados para adicionar todos os arquivos coincidentes.  Também um nome do diretório principal (`dir` para adicionar `dir/arquivo1` e `dir/arquivo2` por exemplo) pode ser utilizados para atualizar o índice para coincidir a condição atual do diretório como um todo (definindo o `dir` gravará não apenas um arquivo `dir/arquivo1` modificado na árvore de trabalho, um arquivo `dir/arquivo2` adicionado à árvore de trabalho, mas também um arquivo `dir/arquivo3` que será removido da árvore de trabalho por exemplo). Observe que as versões mais antigas do Git costumavam ignorar os arquivos removidos; utilize a opção `--no-all` caso queira adicionar os arquivos novos ou alterados, porém ignore os que foram removidos."

#. type: Plain text
#: en/git-add.txt:68 en/git-grep.txt:313
#, priority:300
msgid "For more details about the <pathspec> syntax, see the 'pathspec' entry in linkgit:gitglossary[7]."
msgstr "Para mais detalhes sobre a sintaxe `<pathspec>`, consulte a entrada 'pathspec' em linkgit:gitglossary[7]."

#. type: Plain text
#: en/git-add.txt:73
#, priority:300
msgid "Don't actually add the file(s), just show if they exist and/or will be ignored."
msgstr "Na verdade, não adicione o(s) arquivo(s), apenas demonstre se eles existem e/ou serão ignorados."

#. type: Plain text
#: en/git-add.txt:81
#, priority:300
msgid "Allow adding otherwise ignored files."
msgstr "Permitir a inclusão dos arquivos que já foram ignorados por outros motivos."

#. type: Labeled list
#: en/git-add.txt:82 en/git-clone.txt:169 en/git-ls-files.txt:190 en/git-rm.txt:75 en/git-show-branch.txt:67 en/rev-list-options.txt:387 en/rev-list-options.txt:522
#, ignore-same, no-wrap, priority:300
msgid "--sparse"
msgstr "--sparse"

#. type: Plain text
#: en/git-add.txt:88
#, priority:300
msgid "Allow updating index entries outside of the sparse-checkout cone.  Normally, `git add` refuses to update index entries whose paths do not fit within the sparse-checkout cone, since those files might be removed from the working tree without warning. See linkgit:git-sparse-checkout[1] for more details."
msgstr "Permite a atualização das entradas do índice fora da cônica sparse-checkout.  Normalmente, o comando `git add` se recusa a atualizar as entradas dos índices cujos caminhos não caibam dentro da cônica sparse-checkout, uma vez que estes arquivos podem ser removidos da árvore de trabalho sem aviso prévio. Consulte a opção linkgit:git-sparse-checkout[1] para obter mais detalhes."

#. type: Labeled list
#: en/git-add.txt:89 en/git-am.txt:137 en/git-branch.txt:151 en/git-clean.txt:44 en/git-commit.txt:301 en/git-cvsimport.txt:88 en/git-grep.txt:82 en/git-help.txt:91 en/git-ls-files.txt:51 en/git-read-tree.txt:49 en/git-rebase.txt:501 en/git-repack.txt:178 en/git-tag.txt:130 en/rev-list-options.txt:78
#, ignore-same, no-wrap, priority:300
msgid "-i"
msgstr "-i"

#. type: Labeled list
#: en/git-add.txt:90 en/git-am.txt:138 en/git-clean.txt:45 en/git-rebase.txt:502 en/git-rebase.txt:639 en/git-svn.txt:297
#, ignore-same, no-wrap, priority:300
msgid "--interactive"
msgstr "--interactive"

#. type: Plain text
#: en/git-add.txt:95
#, priority:300
msgid "Add modified contents in the working tree interactively to the index. Optional path arguments may be supplied to limit operation to a subset of the working tree. See ``Interactive mode'' for details."
msgstr "Adicione o conteúdo modificado interativamente ao índice da árvore de trabalho. Os argumentos opcionais do caminho podem ser utilizados para limitar a operação num subconjunto da árvore de trabalho. Para mais detalhes consulte ``modo interativo''."

#. type: Plain text
#: en/git-add.txt:102
#, priority:300
msgid "Interactively choose hunks of patch between the index and the work tree and add them to the index. This gives the user a chance to review the difference before adding modified contents to the index."
msgstr "Escolha interativamente os pedaços do patch entre o índice e a árvore de trabalho para ser adicionado ao índice. Permite que usuário revise a diferença antes de adicionar o conteúdo modificado ao índice."

#. type: Plain text
#: en/git-add.txt:106
#, priority:300
msgid "This effectively runs `add --interactive`, but bypasses the initial command menu and directly jumps to the `patch` subcommand.  See ``Interactive mode'' for details."
msgstr "Efetivamente executa o comando `add --interactive` porém ignora o menu do comando inicial e salta diretamente para o subcomando` patch`.  Para mais detalhes consulte ``modo interativo''."

#. type: Labeled list
#: en/git-add.txt:107 en/git-blame.txt:78 en/git-cat-file.txt:50 en/git-cherry-pick.txt:53 en/git-commit.txt:260 en/git-config.txt:275 en/git-grep.txt:274 en/git-revert.txt:44 en/git-shortlog.txt:38 en/git-svn.txt:614 en/git-tag.txt:177 en/merge-options.txt:19
#, ignore-same, no-wrap, priority:300
msgid "-e"
msgstr "-e"

#. type: Labeled list
#: en/git-add.txt:108 en/git-cherry-pick.txt:54 en/git-commit.txt:261 en/git-config.txt:276 en/git-revert.txt:45 en/git-svn.txt:615 en/git-tag.txt:178 en/merge-options.txt:18
#, ignore-same, no-wrap, priority:300
msgid "--edit"
msgstr "--edit"

#. type: Plain text
#: en/git-add.txt:112
#, priority:300
msgid "Open the diff vs. the index in an editor and let the user edit it.  After the editor was closed, adjust the hunk headers and apply the patch to the index."
msgstr "Abra o diff em conjunto com o índice num editor e deixe que o usuário o edite.  Após o fechamento do editor, ajuste os cabeçalhos dos pedaços e aplique o patch no índice."

#. type: Plain text
#: en/git-add.txt:118
#, priority:300
msgid "The intent of this option is to pick and choose lines of the patch to apply, or even to modify the contents of lines to be staged. This can be quicker and more flexible than using the interactive hunk selector.  However, it is easy to confuse oneself and create a patch that does not apply to the index. See EDITING PATCHES below."
msgstr "O objetivo desta opção é escolher as linhas do patch que serão aplicadas ou mesmo para modificar o conteúdo das linhas que serão preparadas. Isso pode ser mais rápido e flexível do que utilizar o seletor interativo de pedaços.  No entanto, é fácil se confundir e criar um patch que não se aplica ao índice. Consulte a seção EDIÇÃO DE PATCHES abaixo."

#. type: Labeled list
#: en/git-add.txt:120
#, ignore-same, no-wrap, priority:300
msgid "--update"
msgstr "--update"

#. type: Plain text
#: en/git-add.txt:124
#, priority:300
msgid "Update the index just where it already has an entry matching <pathspec>.  This removes as well as modifies index entries to match the working tree, but adds no new files."
msgstr "Atualize o índice exatamente onde ele já possua uma entrada que coincida com o `<pathspec>`.  Remove e altera as entradas no índice para coincidir com a árvore de trabalho sem adicionar novos arquivos."

#. type: Plain text
#: en/git-add.txt:129
#, priority:300
msgid "If no <pathspec> is given when `-u` option is used, all tracked files in the entire working tree are updated (old versions of Git used to limit the update to the current directory and its subdirectories)."
msgstr "Caso nenhum `<pathspec>` seja informado durante o uso da opção `-u`, todos os arquivos monitorados na árvore de trabalho serão atualizados (as versões antigas do Git costumavam limitar a atualização ao diretório atual e seus subdiretórios)."

#. type: Labeled list
#: en/git-add.txt:130 en/git-repack.txt:49 en/git-svn.txt:418
#, no-wrap, priority:300
msgid "-A"
msgstr "-A"

#. type: Labeled list
#: en/git-add.txt:132
#, ignore-same, no-wrap, priority:300
msgid "--no-ignore-removal"
msgstr "--no-ignore-removal"

#. type: Plain text
#: en/git-add.txt:137
#, priority:300
msgid "Update the index not only where the working tree has a file matching <pathspec> but also where the index already has an entry. This adds, modifies, and removes index entries to match the working tree."
msgstr "Atualize o índice não apenas onde a árvore de trabalho possa um arquivo que coincida com o `<pathspec>` mas também onde o índice já possua uma entrada. Adiciona, modifica e remove as entradas do índice para que coincida com a árvore de trabalho."

#. type: Plain text
#: en/git-add.txt:142
#, priority:300
msgid "If no <pathspec> is given when `-A` option is used, all files in the entire working tree are updated (old versions of Git used to limit the update to the current directory and its subdirectories)."
msgstr "Caso nenhum `<pathspec>` seja informado durante o uso da opção `-A`, todos os arquivos na árvore de trabalho serão atualizados (as versões antigas do Git costumavam limitar a atualização ao diretório atual e seus subdiretórios)."

#. type: Labeled list
#: en/git-add.txt:143
#, ignore-same, no-wrap, priority:300
msgid "--no-all"
msgstr "--no-all"

#. type: Labeled list
#: en/git-add.txt:144
#, ignore-same, no-wrap, priority:300
msgid "--ignore-removal"
msgstr "--ignore-removal"

#. type: Plain text
#: en/git-add.txt:149
#, priority:300
msgid "Update the index by adding new files that are unknown to the index and files modified in the working tree, but ignore files that have been removed from the working tree.  This option is a no-op when no <pathspec> is used."
msgstr "Atualize o índice adicionando os novos arquivos que sejam desconhecidos ao índice e os arquivos modificados na árvore de trabalho, no entanto ignore aqueles arquivos que foram removidos da árvore de trabalho.  Esta opção não funciona quando `<pathspec>` não for utilizado."

#. type: Plain text
#: en/git-add.txt:153
#, ignore-ellipsis, priority:300
msgid "This option is primarily to help users who are used to older versions of Git, whose \"git add <pathspec>...\" was a synonym for \"git add --no-all <pathspec>...\", i.e. ignored removed files."
msgstr "Esta opção serve principalmente para ajudar os usuários que estão acostumados com as versões mais antigas do Git, cujo `git add <pathspec>...` era um sinônimo para `git add --no-all <pathspec>...`, isto é, ignora a remoção dos arquivos."

#. type: Labeled list
#: en/git-add.txt:154 en/git-format-patch.txt:122 en/git-submodule.txt:355
#, no-wrap, priority:300
msgid "-N"
msgstr "-N"

#. type: Labeled list
#: en/git-add.txt:155 en/git-apply.txt:77
#, ignore-same, no-wrap, priority:300
msgid "--intent-to-add"
msgstr "--intent-to-add"

#. type: Plain text
#: en/git-add.txt:161
#, priority:300
msgid "Record only the fact that the path will be added later. An entry for the path is placed in the index with no content. This is useful for, among other things, showing the unstaged content of such files with `git diff` and committing them with `git commit -a`."
msgstr "Registre apenas o fato de onde caminho será adicionado posteriormente. Uma entrada para o caminho é colocada ao índice sem nenhum conteúdo. É útil para, entre outras coisas, para exibir os conteúdos dos tais arquivos que não foram preparados com o comando `git diff` e que o commit não foi feito com `git commit -a`."

#. type: Labeled list
#: en/git-add.txt:162 en/git-reset.txt:110 en/git-update-index.txt:54
#, ignore-same, no-wrap, priority:300
msgid "--refresh"
msgstr "--refresh"

#. type: Plain text
#: en/git-add.txt:165
#, priority:300
msgid "Don't add the file(s), but only refresh their stat()  information in the index."
msgstr "Não adicione o(s) arquivo(s), apenas renove as suas informações stat() no índice."

#. type: Labeled list
#: en/git-add.txt:166
#, ignore-same, no-wrap, priority:300
msgid "--ignore-errors"
msgstr "--ignore-errors"

#. type: Plain text
#: en/git-add.txt:172
#, priority:300
msgid "If some files could not be added because of errors indexing them, do not abort the operation, but continue adding the others. The command shall still exit with non-zero status.  The configuration variable `add.ignoreErrors` can be set to true to make this the default behaviour."
msgstr "Caso alguns arquivos não possam ser adicionados por motivos de erros durante a indexação, não interrompa a operação e continue a adicionar os outros que não tenham erros. O comando ainda deve sair com a condição diferente de zero.  Para que este comportamento esteja sempre ativado, a variável de configuração `add.ignoreErrors` pode ser definida como 'true'."

#. type: Labeled list
#: en/git-add.txt:173 en/git-notes.txt:169 en/git-update-index.txt:72 en/rev-list-options.txt:218
#, ignore-same, no-wrap, priority:300
msgid "--ignore-missing"
msgstr "--ignore-missing"

#. type: Plain text
#: en/git-add.txt:178
#, priority:300
msgid "This option can only be used together with --dry-run. By using this option the user can check if any of the given files would be ignored, no matter if they are already present in the work tree or not."
msgstr "Esta opção só pode ser utilizada em conjunto com a opção `--dry-run`. Ao utilizar esta opção, o usuário pode verificar se algum dos arquivos informados seriam ignorados, independentemente caso já estejam presentes na árvore de trabalho ou não."

#. type: Labeled list
#: en/git-add.txt:179
#, ignore-same, no-wrap, priority:300
msgid "--no-warn-embedded-repo"
msgstr "--no-warn-embedded-repo"

#. type: Plain text
#: en/git-add.txt:185
#, priority:300
msgid "By default, `git add` will warn when adding an embedded repository to the index without using `git submodule add` to create an entry in `.gitmodules`. This option will suppress the warning (e.g., if you are manually performing operations on submodules)."
msgstr "É predefinido que o comando `git add` avisará ao adicionar um repositório incorporado ao índice sem utilizar o comando `git submodule add` para criar uma entrada no `.gitmodules`. Esta opção suprimirá o alerta (caso esteja executando as operações manualmente nos submódulos por exemplo)."

#. type: Labeled list
#: en/git-add.txt:186
#, ignore-same, no-wrap, priority:300
msgid "--renormalize"
msgstr "--renormalize"

#. type: Plain text
#: en/git-add.txt:194
#, fuzzy, priority:300
#| msgid "Apply the \"clean\" process freshly to all tracked files to forcibly add them again to the index.  This is useful after changing `core.autocrlf` configuration or the `text` attribute in order to correct files added with wrong CRLF/LF line endings.  This option implies `-u`."
msgid "Apply the \"clean\" process freshly to all tracked files to forcibly add them again to the index.  This is useful after changing `core.autocrlf` configuration or the `text` attribute in order to correct files added with wrong CRLF/LF line endings.  This option implies `-u`. Lone CR characters are untouched, thus while a CRLF cleans to LF, a CRCRLF sequence is only partially cleaned to CRLF."
msgstr "Aplique o processo \"limpo\" em todos os arquivos monitorados para impor a sua adição novamente ao índice.  É útil após alterar a configuração da variável `core.autocrlf` ou do atributo` text` para corrigir os arquivos que foram adicionados com caracteres de quebra de linha `CRLF` ou `LF` incorretas.  Implica no uso da opção `-u`."

#. type: Labeled list
#: en/git-add.txt:195 en/git-update-index.txt:85
#, no-wrap, priority:300
msgid "--chmod=(+|-)x"
msgstr "--chmod=(+|-)x"

#. type: Plain text
#: en/git-add.txt:199
#, priority:300
msgid "Override the executable bit of the added files.  The executable bit is only changed in the index, the files on disk are left unchanged."
msgstr "Substitua o bit executável dos arquivos que foram adicionados.  Apenas no índice que o bit executável é alterado, os arquivos no disco permanecem inalterados."

#. type: Labeled list
#: en/git-add.txt:200 en/git-checkout.txt:315 en/git-commit.txt:322 en/git-reset.txt:114 en/git-restore.txt:128 en/git-rm.txt:86 en/git-stash.txt:218
#, no-wrap, priority:300
msgid "--pathspec-from-file=<file>"
msgstr "--pathspec-from-file=<arquivo>"

#. type: Plain text
#: en/git-add.txt:207 en/git-checkout.txt:322 en/git-commit.txt:329 en/git-reset.txt:121 en/git-restore.txt:135 en/git-rm.txt:93 en/git-stash.txt:227
#, priority:300
msgid "Pathspec is passed in `<file>` instead of commandline args. If `<file>` is exactly `-` then standard input is used. Pathspec elements are separated by LF or CR/LF. Pathspec elements can be quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1]). See also `--pathspec-file-nul` and global `--literal-pathspecs`."
msgstr "O \"pathspec\" é passado com `<arquivo>` em vez dos argumentos da linha de comando. Caso o `<arquivo>` seja exatamente `-`, a entrada padrão será utilizada. Os elementos do \"pathspec\" são separados por caracteres de término de linha `LF` ou `CR/LF`. Os elementos do \"pathspec\" podem ser citados conforme explicado na variável de configuração `core.quotePath` (consulte linkgit:git-config[1]). Consulte também opção `--pathspec-file-nul` e o global `--literal-pathspecs`."

#. type: Labeled list
#: en/git-add.txt:208 en/git-checkout.txt:323 en/git-commit.txt:330 en/git-reset.txt:122 en/git-restore.txt:136 en/git-rm.txt:94 en/git-stash.txt:228
#, ignore-same, no-wrap, priority:300
msgid "--pathspec-file-nul"
msgstr "--pathspec-file-nul"

#. type: Plain text
#: en/git-add.txt:212 en/git-checkout.txt:327 en/git-commit.txt:334 en/git-reset.txt:126 en/git-restore.txt:140 en/git-rm.txt:98 en/git-stash.txt:234
#, priority:300
msgid "Only meaningful with `--pathspec-from-file`. Pathspec elements are separated with NUL character and all other characters are taken literally (including newlines and quotes)."
msgstr "Só faz algum sentido caso seja utilizado junto com a opção `--pathspec-from-file`. Os elementos \"pathspec\" são separados com caracteres `NUL` e todos os outros caracteres são considerados de forma literal (incluindo as novas linhas e as citações)."

#. type: Labeled list
#: en/git-add.txt:213 en/git-check-attr.txt:39 en/git-checkout-index.txt:77 en/git-checkout.txt:362 en/git-commit.txt:398 en/git-grep.txt:303 en/git-ls-files.txt:202 en/git-merge-index.txt:23 en/git-prune.txt:51 en/git-reset.txt:127 en/git-restore.txt:141 en/git-rm.txt:62 en/git-stash.txt:242 en/git-update-index.txt:226 en/git-verify-pack.txt:36
#, no-wrap, priority:300
msgid "\\--"
msgstr "\\--"

#. type: Plain text
#: en/git-add.txt:217 en/git-rm.txt:66
#, priority:300
msgid "This option can be used to separate command-line options from the list of files, (useful when filenames might be mistaken for command-line options)."
msgstr "Esta opção pode ser utilizada para separar as opções da linha de comandos da lista dos arquivos (útil quando os nomes do arquivo puderem ser confundidos com as opções da linha de comando)."

#. type: Title -
#: en/git-add.txt:220 en/git-archive.txt:182 en/git-bisect.txt:380 en/git-branch.txt:344 en/git-bundle.txt:231 en/git-check-attr.txt:71 en/git-checkout-index.txt:149 en/git-checkout.txt:518 en/git-check-ref-format.txt:123 en/git-cherry-pick.txt:166 en/git-cherry.txt:43 en/git-clone.txt:337 en/git-column.txt:50 en/git-commit.txt:410 en/git-config.txt:435 en/git-credential-cache.txt:55 en/git-credential-store.txt:71 en/git-cvsexportcommit.txt:91 en/git-daemon.txt:259 en/git-describe.txt:128 en/git-diff.txt:147 en/git-fast-export.txt:167 en/git-fetch.txt:246 en/git-filter-branch.txt:247 en/git-fmt-merge-msg.txt:65 en/git-for-each-ref.txt:301 en/git-format-patch.txt:714 en/git-grep.txt:315 en/git-http-backend.txt:69 en/git-imap-send.txt:62 en/git-init.txt:157 en/git-interpret-trailers.txt:271 en/git-log.txt:136 en/git-ls-remote.txt:95 en/git-merge-file.txt:84 en/git-merge.txt:351 en/git-name-rev.txt:91 en/git-notes.txt:278 en/git-p4.txt:33 en/git-prune.txt:60 en/git-pull.txt:202 en/git-push.txt:594 en/git-range-diff.txt:135 en/git-remote-ext.txt:77 en/git-remote-fd.txt:37 en/git-remote.txt:220 en/git-request-pull.txt:50 en/git-reset.txt:136 en/git-restore.txt:150 en/git-revert.txt:131 en/git-rev-list.txt:35 en/git-rev-parse.txt:456 en/git-rm.txt:175 en/git-send-email.txt:464 en/git-shell.txt:66 en/git-show-branch.txt:177 en/git-show-ref.txt:124 en/git-show.txt:61 en/git-stash.txt:283 en/git-stripspace.txt:49 en/git-switch.txt:193 en/git-update-index.txt:360 en/git-var.txt:27 en/git-worktree.txt:478
#, no-wrap, priority:300
msgid "EXAMPLES"
msgstr "EXEMPLOS"

#. type: Plain text
#: en/git-add.txt:224
#, priority:300
msgid "Adds content from all `*.txt` files under `Documentation` directory and its subdirectories:"
msgstr "Adiciona conteúdo de todos os arquivos `*.txt` sob o diretório `Documentation` com os seus respectivos subdiretórios:"

#. type: delimited block -
#: en/git-add.txt:227
#, no-wrap, priority:300
msgid "$ git add Documentation/\\*.txt\n"
msgstr "$ git add Documentation/\\*.txt\n"

#. type: Plain text
#: en/git-add.txt:232
#, priority:300
msgid "Note that the asterisk `*` is quoted from the shell in this example; this lets the command include the files from subdirectories of `Documentation/` directory."
msgstr "Observe que o asterisco `*` neste exemplo é citado do shell; isso permite que o comando inclua todos os arquivos dos subdiretórios do diretório `Documentation/`."

#. type: Plain text
#: en/git-add.txt:234
#, priority:300
msgid "Considers adding content from all git-*.sh scripts:"
msgstr "Considera a adição do conteúdo de todos os scripts `git-*.sh`:"

#. type: delimited block -
#: en/git-add.txt:237
#, no-wrap, priority:300
msgid "$ git add git-*.sh\n"
msgstr "$ git add git-*.sh\n"

#. type: Plain text
#: en/git-add.txt:242
#, priority:300
msgid "Because this example lets the shell expand the asterisk (i.e. you are listing the files explicitly), it does not consider `subdir/git-foo.sh`."
msgstr "Pelo fato deste exemplo permitir que o shell expanda o asterisco (ou seja, você está listando os arquivos de forma explicita), ele desconsidera o `subdir/git-foo.sh`."

#. type: Title -
#: en/git-add.txt:244 en/git-rebase.txt:809
#, no-wrap, priority:300
msgid "INTERACTIVE MODE"
msgstr "MODO INTERATIVO"

#. type: Plain text
#: en/git-add.txt:248
#, priority:300
msgid "When the command enters the interactive mode, it shows the output of the 'status' subcommand, and then goes into its interactive command loop."
msgstr "Quando o comando entra no modo interativo, ele exibe a saída do subcomando 'status' e entra em seu loop de comando interativo."

#. type: Plain text
#: en/git-add.txt:253 en/git-clean.txt:85
#, priority:300
msgid "The command loop shows the list of subcommands available, and gives a prompt \"What now> \".  In general, when the prompt ends with a single '>', you can pick only one of the choices given and type return, like this:"
msgstr "O loop de comando exibe a lista de subcomandos disponíveis e fornece o prompt \"Agora o quê>\".  Em geral, quando o prompt termina com um único '>', é possível escolher apenas uma das opções informadas e teclar \"Enter\" para selecioná-la:"

#. type: delimited block -
#: en/git-add.txt:259
#, no-wrap, priority:300
msgid ""
"    *** Commands ***\n"
"      1: status       2: update       3: revert       4: add untracked\n"
"      5: patch        6: diff         7: quit         8: help\n"
"    What now> 1\n"
msgstr ""
"    *** Comandos ***\n"
"      1: status       2: atualiza       3: reverte       4: adiciona sem monitoramento\n"
"      5: patch        6: diff           7: encerra       8: ajuda\n"
"    Agora o quê> 1\n"

#. type: Plain text
#: en/git-add.txt:263
#, priority:300
msgid "You also could say `s` or `sta` or `status` above as long as the choice is unique."
msgstr "Também é possível utilizar `s` ou `sta` ou `status` acima, desde que a escolha seja única."

#. type: Plain text
#: en/git-add.txt:265
#, priority:300
msgid "The main command loop has 6 subcommands (plus help and quit)."
msgstr "O loop do comando principal tem 6 subcomandos (incluindo a ajuda e encerrar)."

#. type: Labeled list
#: en/git-add.txt:266
#, no-wrap, priority:300
msgid "status"
msgstr "status"

#. type: Plain text
#: en/git-add.txt:273
#, priority:300
msgid "This shows the change between HEAD and index (i.e. what will be committed if you say `git commit`), and between index and working tree files (i.e. what you could stage further before `git commit` using `git add`) for each path.  A sample output looks like this:"
msgstr "Exibe a alteração entre o `HEAD` e o índice (ou seja, o commit que será caso utilize o comando `git commit`) e entre o índice e os arquivos da árvore de trabalho (ou seja, o que você poderia realizar antes do comando `git commit` utilizando o comando `git add`) para cada caminho.  Uma amostra da saída fica assim:"

#. type: delimited block -
#: en/git-add.txt:278
#, no-wrap, priority:300
msgid ""
"              staged     unstaged path\n"
"     1:       binary      nothing foo.png\n"
"     2:     +403/-35        +1/-1 git-add--interactive.perl\n"
msgstr ""
"              staged     unstaged path\n"
"     1:       binary      nothing foo.png\n"
"     2:     +403/-35        +1/-1 git-add--interactive.perl\n"

#. type: Plain text
#: en/git-add.txt:289
#, priority:300
msgid "It shows that foo.png has differences from HEAD (but that is binary so line count cannot be shown) and there is no difference between indexed copy and the working tree version (if the working tree version were also different, 'binary' would have been shown in place of 'nothing').  The other file, git-add{litdd}interactive.perl, has 403 lines added and 35 lines deleted if you commit what is in the index, but working tree file has further modifications (one addition and one deletion)."
msgstr "Demonstra que foo.png tem diferenças em relação ao `HEAD` (mas por ser binário a contagem das linhas não pode ser exibida) e não há diferença entre a cópia indexada e a versão na árvore de trabalho (caso a versão na árvore de trabalho também fosse diferente, a informação 'binary' (binário) seria exibido no lugar de 'nothing' (nada)).  O outro arquivo, `git-add{litdd}interactive.perl`, possui 403 linhas que foram adicionadas e 35 linhas que foram excluídas caso faça o commit do que está no índice, porém o arquivo na árvore de trabalho possui outras modificações (uma adição e uma exclusão)."

#. type: Labeled list
#: en/git-add.txt:290 en/git-update-ref.txt:102
#, ignore-same, no-wrap, priority:300
msgid "update"
msgstr "update"

#. type: Plain text
#: en/git-add.txt:299
#, priority:300
msgid "This shows the status information and issues an \"Update>>\" prompt.  When the prompt ends with double '>>', you can make more than one selection, concatenated with whitespace or comma.  Also you can say ranges.  E.g. \"2-5 7,9\" to choose 2,3,4,5,7,9 from the list.  If the second number in a range is omitted, all remaining patches are taken.  E.g. \"7-\" to choose 7,8,9 from the list.  You can say '*' to choose everything."
msgstr "Exibe as informações da condição geral e emite um prompt \"Update>>\" (Atualizar).  Quando o prompt termina com duplo '>>', é possível fazer mais de uma seleção concatenada com um espaço ou uma vírgula.  Além disso, você pode utilizar os intervalos.  Por exemplo, \"2-5 7,9\" para escolher 2,3,4,5,7,9 da lista.  Caso o segundo número de um intervalo seja omitido, todos os patches restantes serão tomados.  Por exemplo. \"7-\" para escolher 7,8,9 da lista.  É possível utilizar '*' para escolher tudo."

#. type: Plain text
#: en/git-add.txt:302
#, priority:300
msgid "What you chose are then highlighted with '*', like this:"
msgstr "O que você escolheu é destacado com '*', assim:"

#. type: delimited block -
#: en/git-add.txt:307
#, no-wrap, priority:300
msgid ""
"           staged     unstaged path\n"
"  1:       binary      nothing foo.png\n"
"* 2:     +403/-35        +1/-1 git-add--interactive.perl\n"
msgstr ""
"           staged     unstaged path\n"
"  1:       binary      nothing foo.png\n"
"* 2:     +403/-35        +1/-1 git-add--interactive.perl\n"

#. type: Plain text
#: en/git-add.txt:311
#, priority:300
msgid "To remove selection, prefix the input with `-` like this:"
msgstr "Para remover a seleção, prefixe a entrada com `-` desta maneira:"

#. type: delimited block -
#: en/git-add.txt:314
#, no-wrap, priority:300
msgid "Update>> -2\n"
msgstr "Update>> -2\n"

#. type: Plain text
#: en/git-add.txt:318
#, priority:300
msgid "After making the selection, answer with an empty line to stage the contents of working tree files for selected paths in the index."
msgstr "Depois de fazer a seleção, responda com uma linha vazia para preparar o conteúdo dos arquivos na árvore de trabalho para os caminhos selecionados no índice."

#. type: Labeled list
#: en/git-add.txt:319
#, no-wrap, priority:300
msgid "revert"
msgstr "reverte"

#. type: Plain text
#: en/git-add.txt:324
#, priority:300
msgid "This has a very similar UI to 'update', and the staged information for selected paths are reverted to that of the HEAD version.  Reverting new paths makes them untracked."
msgstr "Há uma interface muito semelhante à 'update' (atualização) e as informações preparadas para os caminhos selecionados são revertidas para a versão do `HEAD`.  A reversão dos novos caminhos os torna não rastreáveis."

#. type: Labeled list
#: en/git-add.txt:325
#, no-wrap, priority:300
msgid "add untracked"
msgstr "adiciona sem monitoramento"

#. type: Plain text
#: en/git-add.txt:329
#, priority:300
msgid "This has a very similar UI to 'update' and 'revert', and lets you add untracked paths to the index."
msgstr "Há uma interface do usuário muito semelhante para 'update' (atualizar) e 'revert' (reverter) que permite adicionar caminhos não rastreados ao índice."

#. type: Labeled list
#: en/git-add.txt:330
#, no-wrap, priority:300
msgid "patch"
msgstr "patch"

#. type: Plain text
#: en/git-add.txt:337
#, priority:300
msgid "This lets you choose one path out of a 'status' like selection.  After choosing the path, it presents the diff between the index and the working tree file and asks you if you want to stage the change of each hunk.  You can select one of the following options and type return:"
msgstr "Permite a escolha de um caminho dentre uma seleção de 'status'.  Depois de escolher o caminho, é apresentado a diferença entre o índice e o arquivo na árvore de trabalho, pergunta caso queira preparar a alteração de cada pedaço.  Você pode selecionar uma das seguintes opções e pressional enter:"

#. type: Plain text
#: en/git-add.txt:352
#, no-wrap, priority:300
msgid ""
"y - stage this hunk\n"
"n - do not stage this hunk\n"
"q - quit; do not stage this hunk or any of the remaining ones\n"
"a - stage this hunk and all later hunks in the file\n"
"d - do not stage this hunk or any of the later hunks in the file\n"
"g - select a hunk to go to\n"
"/ - search for a hunk matching the given regex\n"
"j - leave this hunk undecided, see next undecided hunk\n"
"J - leave this hunk undecided, see next hunk\n"
"k - leave this hunk undecided, see previous undecided hunk\n"
"K - leave this hunk undecided, see previous hunk\n"
"s - split the current hunk into smaller hunks\n"
"e - manually edit the current hunk\n"
"? - print help\n"
msgstr ""
"y - prepare este pedaço\n"
"n - não prepare este pedaço\n"
"q - saia; não prepare este pedaço ou qualquer um dos restantes\n"
"a - prepare este pedaço e todos os pedaços posteriores no arquivo\n"
"d - não prepare este pedaço ou qualquer um dos pedaços posteriores no arquivo\n"
"g - selecione um pedaço para ir de encontro com\n"
"/ - procure um pedaço correspondente ao regex especificado\n"
"j - não decida sobre este pedaço, veja o próximo pedaço indeciso\n"
"J - não decida sobre este pedaço, veja o próximo pedaço\n"
"k - não decida sobre este pedaço, veja o pedaço indeciso anterior\n"
"K - não decida sobre este pedaço, veja o pedaço anterior\n"
"s - divide o pedaço atual em pedaços menores\n"
"e - edite manualmente o pedaço atual\n"
"? - imprima a ajuda\n"

#. type: Plain text
#: en/git-add.txt:355
#, priority:300
msgid "After deciding the fate for all hunks, if there is any hunk that was chosen, the index is updated with the selected hunks."
msgstr "Depois de decidir o destino de todos os pedaços, caso haja algum pedaço selecionado, o índice é atualizado com os pedaços que foram selecionados."

#. type: Plain text
#: en/git-add.txt:358
#, priority:300
msgid "You can omit having to type return here, by setting the configuration variable `interactive.singleKey` to `true`."
msgstr "Não é necessário pressionar o enter, ao configurar a variável de configuração `interactive.singleKey` para `true`."

#. type: Labeled list
#: en/git-add.txt:359
#, ignore-same, no-wrap, priority:300
msgid "diff"
msgstr "diff"

#. type: Plain text
#: en/git-add.txt:363
#, priority:300
msgid "This lets you review what will be committed (i.e. between HEAD and index)."
msgstr "Permite a revisão do commit que será feito (entre o HEAD e o índice por exemplo)."

#. type: Title -
#: en/git-add.txt:366
#, no-wrap, priority:300
msgid "EDITING PATCHES"
msgstr "EDIÇÃO DE PATCHES"

#. type: Plain text
#: en/git-add.txt:376
#, priority:300
msgid "Invoking `git add -e` or selecting `e` from the interactive hunk selector will open a patch in your editor; after the editor exits, the result is applied to the index. You are free to make arbitrary changes to the patch, but note that some changes may have confusing results, or even result in a patch that cannot be applied.  If you want to abort the operation entirely (i.e., stage nothing new in the index), simply delete all lines of the patch. The list below describes some common things you may see in a patch, and which editing operations make sense on them."
msgstr "Ao invocar o comando `git add -e` ou selecionando `e` no seletor interativo de pedaços, será aberto um patch no seu editor; após a saída do editor, o resultado é aplicado ao índice. Você é livre para fazer alterações arbitrárias no patch, porém observe que algumas alterações podem ter resultados confusos ou até resultar num patch que não possa ser aplicado.  Caso queira abortar completamente a operação (ou seja, não criar nada novo no índice), simplesmente exclua todas as linhas do patch. A lista abaixo descreve algumas coisas comuns que são possíveis de visualizar num patch e quais as operações da edição fazem sentido nelas."

#. type: Labeled list
#: en/git-add.txt:378
#, no-wrap, priority:300
msgid "added content"
msgstr "conteúdo que foi adicionado"

#. type: Plain text
#: en/git-add.txt:382
#, priority:300
msgid "Added content is represented by lines beginning with \"{plus}\". You can prevent staging any addition lines by deleting them."
msgstr "O conteúdo adicionado é representado por linhas começando com \"{plus}\". Você pode impedir a preparação de qualquer linha de adição excluindo-as."

#. type: Labeled list
#: en/git-add.txt:383
#, no-wrap, priority:300
msgid "removed content"
msgstr "conteúdo que foi removido"

#. type: Plain text
#: en/git-add.txt:387
#, priority:300
msgid "Removed content is represented by lines beginning with \"-\". You can prevent staging their removal by converting the \"-\" to a \" \" (space)."
msgstr "O conteúdo removido é representado por linhas que começam com \"-\". É possível evitar a preparação da remoção convertendo o \"-\" para um \" \" (espaço)."

#. type: Labeled list
#: en/git-add.txt:388
#, no-wrap, priority:300
msgid "modified content"
msgstr "conteúdo que foi alterado"

#. type: Plain text
#: en/git-add.txt:395
#, priority:300
msgid "Modified content is represented by \"-\" lines (removing the old content)  followed by \"{plus}\" lines (adding the replacement content). You can prevent staging the modification by converting \"-\" lines to \" \", and removing \"{plus}\" lines. Beware that modifying only half of the pair is likely to introduce confusing changes to the index."
msgstr "O conteúdo modificado é representado por linhas \"-\" (removendo o conteúdo antigo)  seguido por linhas \"{plus}\" (adicionando o conteúdo de reposição). Você pode impedir a preparação da modificação convertendo as linhas \"-\" para \" \" e removendo as linhas \"{plus}\". Lembre-se que alterar apenas a metade do par provavelmente introduzirá mudanças confusas ao índice."

#. type: Plain text
#: en/git-add.txt:403
#, priority:300
msgid "There are also more complex operations that can be performed. But beware that because the patch is applied only to the index and not the working tree, the working tree will appear to \"undo\" the change in the index.  For example, introducing a new line into the index that is in neither the HEAD nor the working tree will stage the new line for commit, but the line will appear to be reverted in the working tree."
msgstr "Também existem operações mais complexas que podem ser executadas. Mas cuidado, porque o patch é aplicado apenas ao índice e não à árvore de trabalho, a árvore de trabalho aparecerá para \"desfazer\" a mudança no índice.  A introdução de uma nova linha no índice que não esteja em HEAD nem na árvore de trabalho por exemplo, organizará a nova linha para o commit, porém a linha parecerá ter sido revertida na árvore de trabalho."

#. type: Plain text
#: en/git-add.txt:405
#, priority:300
msgid "Avoid using these constructs, or do so with extreme caution."
msgstr "Evite utilizar estas construções ou faça isso com extrema cautela."

#. type: Labeled list
#: en/git-add.txt:407
#, no-wrap, priority:300
msgid "removing untouched content"
msgstr "removendo um conteúdo intocado"

#. type: Plain text
#: en/git-add.txt:413
#, priority:300
msgid "Content which does not differ between the index and working tree may be shown on context lines, beginning with a \" \" (space).  You can stage context lines for removal by converting the space to a \"-\". The resulting working tree file will appear to re-add the content."
msgstr "O conteúdo que não difere entre o índice e a árvore de trabalho podem ser exibidas nas linhas do contexto, começando com um \" \" (espaço).  Você pode preparar as linhas de contexto para a remoção, convertendo o espaço num \"-\". O arquivo da árvore de trabalho resultante aparecerá para ser adicionada novamente ao conteúdo."

#. type: Labeled list
#: en/git-add.txt:414
#, no-wrap, priority:300
msgid "modifying existing content"
msgstr "modificando um conteúdo já existente"

#. type: Plain text
#: en/git-add.txt:421
#, priority:300
msgid "One can also modify context lines by staging them for removal (by converting \" \" to \"-\") and adding a \"{plus}\" line with the new content.  Similarly, one can modify \"{plus}\" lines for existing additions or modifications. In all cases, the new modification will appear reverted in the working tree."
msgstr "Também é possível modificar as linhas do contexto, preparando-as para a remoção (convertendo \" \" para \"-\") e adicionando uma linha \"{plus}\" (sinal de mais) ao novo conteúdo.  Da mesma forma, é possível modificar as linhas \"{plus}\" para as adições ou modificações existentes. Em todos os casos, a nova alteração aparecerá de forma reversa na árvore de trabalho."

#. type: Labeled list
#: en/git-add.txt:422
#, no-wrap, priority:300
msgid "new content"
msgstr "novos conteúdos"

#. type: Plain text
#: en/git-add.txt:427
#, priority:300
msgid "You may also add new content that does not exist in the patch; simply add new lines, each starting with \"{plus}\". The addition will appear reverted in the working tree."
msgstr "Você também pode adicionar um novo conteúdo que não existe no patch; basta adicionar as novas linhas, cada uma começando com \"{plus}\". A adição aparecerá de forma reversa na árvore de trabalho."

#. type: Plain text
#: en/git-add.txt:431
#, priority:300
msgid "There are also several operations which should be avoided entirely, as they will make the patch impossible to apply:"
msgstr "Existem também várias outras operações que devem ser totalmente evitadas, pois elas tornarão o patch impossível de se aplicar:"

#. type: Plain text
#: en/git-add.txt:433
#, priority:300
msgid "adding context (\" \") or removal (\"-\") lines"
msgstr "adicionando as linhas de contexto (\" \") ou de remoção (\"-\")"

#. type: Plain text
#: en/git-add.txt:434
#, priority:300
msgid "deleting context or removal lines"
msgstr "excluindo as linhas de contexto ou de remoção"

#. type: Plain text
#: en/git-add.txt:435
#, priority:300
msgid "modifying the contents of context or removal lines"
msgstr "modificando o conteúdo do contexto ou as linhas de remoção"

#. type: Title -
#: en/git-add.txt:437 en/git-am.txt:262 en/git-apply.txt:264 en/git-archive.txt:132 en/git-blame.txt:245 en/git-branch.txt:334 en/git-check-mailmap.txt:40 en/git-checkout.txt:604 en/git-clean.txt:137 en/git-clone.txt:374 en/git-column.txt:78 en/git-config.txt:291 en/git-cvsexportcommit.txt:86 en/git-difftool.txt:117 en/git-diff.txt:217 en/git-fast-import.txt:1568 en/git-fetch.txt:289 en/git-fmt-merge-msg.txt:57 en/git-format-patch.txt:407 en/git-fsck.txt:108 en/git-gc.txt:111 en/git-grep.txt:344 en/git-imap-send.txt:52 en/git-init.txt:173 en/git-instaweb.txt:70 en/git-log.txt:198 en/git-mailinfo.txt:119 en/git-mergetool.txt:103 en/git-merge.txt:385 en/git-notes.txt:312 en/git-pack-objects.txt:445 en/git-push.txt:696 en/git-range-diff.txt:128 en/git-rebase.txt:1260 en/git-repack.txt:216 en/git-revert.txt:146 en/git-send-email.txt:457 en/git-show-branch.txt:203 en/git-stash.txt:386 en/git-status.txt:425 en/git-svn.txt:1064 en/git-switch.txt:269 en/git-tag.txt:215 en/git-update-index.txt:555
#, no-wrap, priority:300
msgid "CONFIGURATION"
msgstr "CONFIGURAÇÃO"

#. type: Title -
#: en/git-add.txt:444 en/git-am.txt:269 en/git-annotate.txt:28 en/git-apply.txt:286 en/git-archive.txt:231 en/git-bisect.txt:504 en/git-blame.txt:252 en/git-branch.txt:412 en/git-check-attr.txt:115 en/git-check-ignore.txt:119 en/git-checkout.txt:611 en/git-cherry-pick.txt:238 en/git-cherry.txt:140 en/git-clean.txt:144 en/git-commit-tree.txt:95 en/git-commit.txt:581 en/git-difftool.txt:126 en/git-diff.txt:224 en/git-fast-export.txt:279 en/git-fast-import.txt:1575 en/git-fetch-pack.txt:131 en/git-fetch.txt:303 en/git-fmt-merge-msg.txt:77 en/git-for-each-ref.txt:422 en/git-format-patch.txt:767 en/git-gc.txt:158 en/git-gui.txt:103 en/git-imap-send.txt:141 en/git-instaweb.txt:89 en/git-interpret-trailers.txt:449 en/git-ls-files.txt:295 en/git-ls-remote.txt:116 en/git-merge.txt:397 en/git-pack-objects.txt:455 en/git-pack-redundant.txt:43 en/git-prune-packed.txt:41 en/git-prune.txt:81 en/git-pull.txt:249 en/git-range-diff.txt:292 en/git-read-tree.txt:431 en/git-receive-pack.txt:256 en/git-remote-ext.txt:120 en/git-remote-fd.txt:54 en/git-remote.txt:262 en/git-repack.txt:236 en/git-replace.txt:149 en/git-restore.txt:212 en/git-revert.txt:153 en/git-rm.txt:199 en/git-send-email.txt:506 en/git-shell.txt:99 en/git-show-ref.txt:178 en/git-stash.txt:394 en/git-status.txt:461 en/git-submodule.txt:455 en/git-svn.txt:1169 en/git-switch.txt:276 en/git-tag.txt:386 en/git.txt:1071 en/git-update-index.txt:599 en/git-upload-pack.txt:59 en/git-var.txt:66 en/gitglossary.txt:18
#, no-wrap, priority:310
msgid "SEE ALSO"
msgstr "VEJA TAMBÉM"

#. type: Plain text
#: en/git-add.txt:451
#, ignore-same, priority:300
msgid "linkgit:git-status[1] linkgit:git-rm[1] linkgit:git-reset[1] linkgit:git-mv[1] linkgit:git-commit[1] linkgit:git-update-index[1]"
msgstr "linkgit:git-status[1] linkgit:git-rm[1] linkgit:git-reset[1] linkgit:git-mv[1] linkgit:git-commit[1] linkgit:git-update-index[1]"

#. type: Title -
#: en/git-add.txt:453 en/git-am.txt:273 en/git-annotate.txt:32 en/git-apply.txt:290 en/git-archimport.txt:112 en/git-archive.txt:235 en/git-bisect.txt:509 en/git-blame.txt:256 en/git-branch.txt:420 en/git-bugreport.txt:71 en/git-bundle.txt:344 en/git-cat-file.txt:372 en/git-check-attr.txt:119 en/git-check-ignore.txt:125 en/git-check-mailmap.txt:53 en/git-checkout-index.txt:182 en/git-checkout.txt:616 en/git-check-ref-format.txt:139 en/git-cherry-pick.txt:242 en/git-cherry.txt:144 en/git-citool.txt:24 en/git-clean.txt:148 en/git-clone.txt:384 en/git-column.txt:85 en/git-commit-tree.txt:100 en/git-commit.txt:589 en/git-config.txt:591 en/git-count-objects.txt:53 en/git-credential-cache--daemon.txt:29 en/git-credential-cache.txt:79 en/git-credential-store.txt:109 en/git-credential.txt:164 en/git-cvsexportcommit.txt:117 en/git-cvsimport.txt:227 en/git-cvsserver.txt:432 en/git-daemon.txt:340 en/git-describe.txt:210 en/git-diff-files.txt:51 en/git-diff-index.txt:126 en/git-difftool.txt:137 en/git-diff-tree.txt:130 en/git-diff.txt:234 en/git-fast-export.txt:283 en/git-fast-import.txt:1579 en/git-fetch-pack.txt:135 en/git-fetch.txt:307 en/git-filter-branch.txt:702 en/git-fmt-merge-msg.txt:81 en/git-for-each-ref.txt:426 en/git-format-patch.txt:771 en/git-fsck-objects.txt:21 en/git-fsck.txt:168 en/git-gc.txt:165 en/git-get-tar-commit-id.txt:29 en/git-grep.txt:351 en/git-gui.txt:120 en/git-hash-object.txt:62 en/git-help.txt:230 en/git-http-backend.txt:300 en/git-http-fetch.txt:61 en/git-http-push.txt:95 en/git-imap-send.txt:145 en/git-index-pack.txt:144 en/git-init-db.txt:22 en/git-init.txt:180 en/git-instaweb.txt:93 en/git-interpret-trailers.txt:453 en/git-log.txt:219 en/git-ls-files.txt:299 en/git-ls-remote.txt:120 en/git-ls-tree.txt:164 en/git-mailinfo.txt:126 en/git-mailsplit.txt:56 en/git-merge-base.txt:246 en/git-merge-file.txt:97 en/git-merge-index.txt:82 en/git-merge-one-file.txt:20 en/git-mergetool--lib.txt:52 en/git-mergetool.txt:128 en/git-merge-tree.txt:239 en/git-merge.txt:406 en/git-mktag.txt:65 en/git-mktree.txt:39 en/git-mv.txt:68 en/git-name-rev.txt:114 en/git-notes.txt:357 en/git-p4.txt:802 en/git-pack-objects.txt:461 en/git-pack-redundant.txt:49 en/git-pack-refs.txt:72 en/git-patch-id.txt:60 en/git-prune-packed.txt:46 en/git-prune.txt:88 en/git-pull.txt:253 en/git-push.txt:703 en/git-quiltimport.txt:63 en/git-range-diff.txt:296 en/git-read-tree.txt:436 en/git-rebase.txt:1268 en/git-receive-pack.txt:260 en/git-reflog.txt:137 en/git-remote-ext.txt:124 en/git-remote-fd.txt:58 en/git-remote.txt:268 en/git-repack.txt:241 en/git-replace.txt:160 en/git-request-pull.txt:78 en/git-rerere.txt:221 en/git-reset.txt:504 en/git-restore.txt:217 en/git-revert.txt:157 en/git-rev-list.txt:128 en/git-rev-parse.txt:481 en/git-rm.txt:203 en/git-send-email.txt:510 en/git-send-pack.txt:155 en/git-shell.txt:105 en/git-sh-i18n--envsubst.txt:35 en/git-sh-i18n.txt:42 en/git-shortlog.txt:121 en/git-show-branch.txt:210 en/git-show-index.txt:51 en/git-show-ref.txt:185 en/git-show.txt:89 en/git-sh-setup.txt:94 en/git-stage.txt:22 en/git-stash.txt:402 en/git-status.txt:465 en/git-stripspace.txt:93 en/git-submodule.txt:459 en/git-svn.txt:1173 en/git-switch.txt:281 en/git-symbolic-ref.txt:68 en/git-tag.txt:391 en/git.txt:1079 en/git-unpack-file.txt:27 en/git-unpack-objects.txt:51 en/git-update-index.txt:605 en/git-update-ref.txt:179 en/git-update-server-info.txt:34 en/git-upload-archive.txt:61 en/git-upload-pack.txt:63 en/git-var.txt:72 en/git-verify-commit.txt:31 en/git-verify-pack.txt:52 en/git-verify-tag.txt:31 en/git-web--browse.txt:123 en/git-whatchanged.txt:42 en/git-worktree.txt:504 en/git-write-tree.txt:41 en/gitglossary.txt:26
#, no-wrap, priority:310
msgid "GIT"
msgstr "GIT"

#. type: Plain text
#: en/git-add.txt:454 en/git-am.txt:274 en/git-annotate.txt:33 en/git-apply.txt:291 en/git-archimport.txt:113 en/git-archive.txt:236 en/git-bisect.txt:510 en/git-blame.txt:257 en/git-branch.txt:421 en/git-bugreport.txt:72 en/git-bundle.txt:345 en/git-cat-file.txt:373 en/git-check-attr.txt:120 en/git-check-ignore.txt:126 en/git-check-mailmap.txt:54 en/git-checkout-index.txt:183 en/git-checkout.txt:617 en/git-check-ref-format.txt:140 en/git-cherry-pick.txt:243 en/git-cherry.txt:145 en/git-citool.txt:25 en/git-clean.txt:149 en/git-clone.txt:385 en/git-column.txt:86 en/git-commit-tree.txt:101 en/git-commit.txt:590 en/git-config.txt:592 en/git-count-objects.txt:54 en/git-credential-cache--daemon.txt:30 en/git-credential-cache.txt:80 en/git-credential-store.txt:110 en/git-credential.txt:165 en/git-cvsexportcommit.txt:118 en/git-cvsimport.txt:228 en/git-cvsserver.txt:433 en/git-daemon.txt:341 en/git-describe.txt:211 en/git-diff-files.txt:52 en/git-diff-index.txt:127 en/git-difftool.txt:138 en/git-diff-tree.txt:131 en/git-diff.txt:235 en/git-fast-export.txt:284 en/git-fast-import.txt:1580 en/git-fetch-pack.txt:136 en/git-fetch.txt:308 en/git-filter-branch.txt:703 en/git-fmt-merge-msg.txt:82 en/git-for-each-ref.txt:427 en/git-format-patch.txt:772 en/git-fsck-objects.txt:22 en/git-fsck.txt:169 en/git-gc.txt:166 en/git-get-tar-commit-id.txt:30 en/git-grep.txt:352 en/git-gui.txt:121 en/git-hash-object.txt:63 en/git-help.txt:231 en/git-http-backend.txt:301 en/git-http-fetch.txt:62 en/git-http-push.txt:96 en/git-imap-send.txt:146 en/git-index-pack.txt:145 en/git-init-db.txt:23 en/git-init.txt:181 en/git-instaweb.txt:94 en/git-interpret-trailers.txt:454 en/git-log.txt:220 en/git-ls-files.txt:300 en/git-ls-remote.txt:121 en/git-ls-tree.txt:165 en/git-mailinfo.txt:127 en/git-mailsplit.txt:57 en/git-merge-base.txt:247 en/git-merge-file.txt:98 en/git-merge-index.txt:83 en/git-merge-one-file.txt:21 en/git-mergetool--lib.txt:53 en/git-mergetool.txt:129 en/git-merge-tree.txt:240 en/git-merge.txt:407 en/git-mktag.txt:66 en/git-mktree.txt:40 en/git-mv.txt:69 en/git-name-rev.txt:115 en/git-notes.txt:358 en/git-p4.txt:803 en/git-pack-objects.txt:462 en/git-pack-redundant.txt:50 en/git-pack-refs.txt:73 en/git-patch-id.txt:61 en/git-prune-packed.txt:47 en/git-prune.txt:89 en/git-pull.txt:254 en/git-push.txt:704 en/git-quiltimport.txt:64 en/git-range-diff.txt:297 en/git-read-tree.txt:437 en/git-rebase.txt:1269 en/git-receive-pack.txt:261 en/git-reflog.txt:138 en/git-remote-ext.txt:125 en/git-remote-fd.txt:59 en/git-remote.txt:269 en/git-repack.txt:242 en/git-replace.txt:161 en/git-request-pull.txt:79 en/git-rerere.txt:222 en/git-reset.txt:505 en/git-restore.txt:218 en/git-revert.txt:158 en/git-rev-list.txt:129 en/git-rev-parse.txt:482 en/git-rm.txt:204 en/git-send-email.txt:511 en/git-send-pack.txt:156 en/git-shell.txt:106 en/git-sh-i18n--envsubst.txt:36 en/git-sh-i18n.txt:43 en/git-shortlog.txt:122 en/git-show-branch.txt:211 en/git-show-index.txt:52 en/git-show-ref.txt:186 en/git-show.txt:90 en/git-sh-setup.txt:95 en/git-stage.txt:23 en/git-stash.txt:403 en/git-status.txt:466 en/git-stripspace.txt:94 en/git-submodule.txt:460 en/git-svn.txt:1174 en/git-switch.txt:282 en/git-symbolic-ref.txt:69 en/git-tag.txt:392 en/git.txt:1080 en/git-unpack-file.txt:28 en/git-unpack-objects.txt:52 en/git-update-index.txt:606 en/git-update-ref.txt:180 en/git-update-server-info.txt:35 en/git-upload-archive.txt:62 en/git-upload-pack.txt:64 en/git-var.txt:73 en/git-verify-commit.txt:32 en/git-verify-pack.txt:53 en/git-verify-tag.txt:32 en/git-web--browse.txt:124 en/git-whatchanged.txt:43 en/git-worktree.txt:505 en/git-write-tree.txt:42 en/gitglossary.txt:27
#, priority:310
msgid "Part of the linkgit:git[1] suite"
msgstr "Parte do conjunto linkgit:git[1]"

#. type: Title =
#: en/git-am.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-am(1)"
msgstr "git-am(1)"

#. type: Plain text
#: en/git-am.txt:7
#, priority:100
msgid "git-am - Apply a series of patches from a mailbox"
msgstr "git-am - Aplica uma série de patches vindas de um mailbox (caixa de correio unix)"

#. type: Plain text
#: en/git-am.txt:22
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git am' [--signoff] [--keep] [--[no-]keep-cr] [--[no-]utf8]\n"
"\t [--[no-]3way] [--interactive] [--committer-date-is-author-date]\n"
"\t [--ignore-date] [--ignore-space-change | --ignore-whitespace]\n"
"\t [--whitespace=<option>] [-C<n>] [-p<n>] [--directory=<dir>]\n"
"\t [--exclude=<path>] [--include=<path>] [--reject] [-q | --quiet]\n"
"\t [--[no-]scissors] [-S[<keyid>]] [--patch-format=<format>]\n"
"\t [--quoted-cr=<action>]\n"
"\t [--empty=(stop|drop|keep)]\n"
"\t [(<mbox> | <Maildir>)...]\n"
"'git am' (--continue | --skip | --abort | --quit | --show-current-patch[=(diff|raw)] | --allow-empty)\n"
msgstr ""
"'git am' [--signoff] [--keep] [--[no-]keep-cr] [--[no-]utf8]\n"
"\t [--[no-]3way] [--interactive] [--committer-date-is-author-date]\n"
"\t [--ignore-date] [--ignore-space-change | --ignore-whitespace]\n"
"\t [--whitespace=<opção>] [-C<n>] [-p<n>] [--directory=<dir>]\n"
"\t [--exclude=<caminho>] [--include=<caminho>] [--reject] [-q | --quiet]\n"
"\t [--[no-]scissors] [-S[<keyid>]] [--patch-format=<formato>]\n"
"\t [--quoted-cr=<ação>]\n"
"\t [--empty=(stop|drop|keep)]\n"
"\t [(<mbox> | <Maildir>)...]\n"
"'git am' (--continue | --skip | --abort | --quit | --show-current-patch[=(diff|raw)]) | --allow-empty)\n"

#. type: Plain text
#: en/git-am.txt:28
#, priority:100
msgid "Splits mail messages in a mailbox into commit log message, authorship information and patches, and applies them to the current branch."
msgstr "Divide as mensagens de correio num mailbox dentro das mensagens do registro log do commit, as informações de autoria, os patches e as aplica ao ramo atual."

#. type: Labeled list
#: en/git-am.txt:31
#, ignore-ellipsis, no-wrap, priority:100
msgid "(<mbox>|<Maildir>)..."
msgstr "(<mbox>|<Maildir>)..."

#. type: Plain text
#: en/git-am.txt:35
#, priority:100
msgid "The list of mailbox files to read patches from. If you do not supply this argument, the command reads from the standard input.  If you supply directories, they will be treated as Maildirs."
msgstr "A lista dos arquivos da caixa de correio para leitura dos patches. Caso você não utilize este argumento, o comando lê na entrada padrão.  Caso utilize os diretórios, eles serão tratados como caixas de correio."

#. type: Labeled list
#: en/git-am.txt:37 en/git-cherry-pick.txt:106 en/git-format-patch.txt:139 en/git-rebase.txt:494 en/git-revert.txt:101 en/signoff-option.txt:4
#, ignore-same, no-wrap, priority:280
msgid "--signoff"
msgstr "--signoff"

#. type: Plain text
#: en/git-am.txt:41 en/git-format-patch.txt:143
#, priority:100
msgid "Add a `Signed-off-by` trailer to the commit message, using the committer identity of yourself.  See the signoff option in linkgit:git-commit[1] for more information."
msgstr "Adicione uma linha `Assinada por` à mensagem do commit utilizando a sua identidade.  Para mais informações sobre a assinatura na saída da mensagem, consulte em linkgit:git-commit[1]."

#. type: Plain text
#: en/git-am.txt:45
#, priority:100
msgid "Pass `-k` flag to 'git mailinfo' (see linkgit:git-mailinfo[1])."
msgstr "Repasse o comando `-k` para o comando 'git mailinfo' (consulte linkgit:git-mailinfo[1])."

#. type: Labeled list
#: en/git-am.txt:46 en/git-quiltimport.txt:59
#, ignore-same, no-wrap, priority:100
msgid "--keep-non-patch"
msgstr "--keep-non-patch"

#. type: Plain text
#: en/git-am.txt:48 en/git-quiltimport.txt:61
#, priority:100
msgid "Pass `-b` flag to 'git mailinfo' (see linkgit:git-mailinfo[1])."
msgstr "Repasse o comando `-b` para o comando 'git mailinfo' (consulte linkgit:git-mailinfo[1])."

#. type: Labeled list
#: en/git-am.txt:49
#, ignore-same, no-wrap, priority:100
msgid "--[no-]keep-cr"
msgstr "--[no-]keep-cr"

#. type: Plain text
#: en/git-am.txt:54
#, priority:100
msgid "With `--keep-cr`, call 'git mailsplit' (see linkgit:git-mailsplit[1])  with the same option, to prevent it from stripping CR at the end of lines. `am.keepcr` configuration variable can be used to specify the default behaviour.  `--no-keep-cr` is useful to override `am.keepcr`."
msgstr "Com `--keep-cr`, chame o comando 'git mailsplit' (consulte linkgit:git-mailsplit[1]) com a mesma opção para evitar que ele retire caractere `CR` do final das linhas. A variável de configuração `am.keepcr` pode ser utilizada para definir o comportamento predefinido.  O comando `--no-keep-cr` é útil para substituir a variável `am.keepcr`."

#. type: Labeled list
#: en/git-am.txt:56 en/git-mailinfo.txt:76
#, ignore-same, no-wrap, priority:100
msgid "--scissors"
msgstr "--scissors"

#. type: Plain text
#: en/git-am.txt:60
#, priority:100
msgid "Remove everything in body before a scissors line (see linkgit:git-mailinfo[1]). Can be activated by default using the `mailinfo.scissors` configuration variable."
msgstr "Remova tudo no corpo antes de uma linha \"scissors\" (tesouras) (see linkgit:git-mailinfo[1]). Pode ser ativada de fora predefinida ao utilizar a variável de configuração `mailinfo.scissors`."

#. type: Labeled list
#: en/git-am.txt:61 en/git-mailinfo.txt:91
#, ignore-same, no-wrap, priority:100
msgid "--no-scissors"
msgstr "--no-scissors"

#. type: Plain text
#: en/git-am.txt:63
#, priority:100
msgid "Ignore scissors lines (see linkgit:git-mailinfo[1])."
msgstr "Ignore linhas \"scissors\" (tesouras) (veja linkgit:git-mailinfo[1])."

#. type: Labeled list
#: en/git-am.txt:64 en/git-mailinfo.txt:94
#, no-wrap, priority:100
msgid "--quoted-cr=<action>"
msgstr "--quoted-cr=<ação>"

#. type: Plain text
#: en/git-am.txt:66
#, priority:100
msgid "This flag will be passed down to 'git mailinfo' (see linkgit:git-mailinfo[1])."
msgstr "Esta opção será passada ao comando 'git mailinfo' (consulte linkgit:git-mailinfo[1])."

#. type: Labeled list
#: en/git-am.txt:67
#, no-wrap, priority:100
msgid "--empty=(stop|drop|keep)"
msgstr "--empty=(stop|drop|keep)"

#. type: Plain text
#: en/git-am.txt:74
#, priority:100
msgid "By default, or when the option is set to 'stop', the command errors out on an input e-mail message lacking a patch and stops into the middle of the current am session. When this option is set to 'drop', skip such an e-mail message instead.  When this option is set to 'keep', create an empty commit, recording the contents of the e-mail message as its log."
msgstr "É predefinido, ou quando a opção está definida como 'stop', que o comando de um erro numa mensagem de e-mail recebida sem um patch e que pare no meio da sessão atual. Quando esta opção está definida para 'drop', ignora a mensagem de e-mail.  Quando esta opção está definida para 'keep', cria um commit vazio, registrando o conteúdo da mensagem de e-mail em seu registro."

#. type: Labeled list
#: en/git-am.txt:76 en/git-mailinfo.txt:72
#, ignore-same, no-wrap, priority:100
msgid "--message-id"
msgstr "--message-id"

#. type: Plain text
#: en/git-am.txt:81
#, priority:100
msgid "Pass the `-m` flag to 'git mailinfo' (see linkgit:git-mailinfo[1]), so that the Message-ID header is added to the commit message.  The `am.messageid` configuration variable can be used to specify the default behaviour."
msgstr "Encaminha a opção `-m` para o comando 'git mailinfo' (consulte linkgit:git-mailinfo[1]), para que o ID do cabeçalho seja adicionado na mensagem do commit.  A variável de configuração `am.messageid` pode ser utilizada para definir o comportamento predefinido."

#. type: Labeled list
#: en/git-am.txt:82
#, ignore-same, no-wrap, priority:100
msgid "--no-message-id"
msgstr "--no-message-id"

#. type: Plain text
#: en/git-am.txt:85
#, priority:100
msgid "Do not add the Message-ID header to the commit message.  `no-message-id` is useful to override `am.messageid`."
msgstr "Não adicione o ID do cabeçalho da mensagem à mensagem do commit.  A opção `--no-message-id` é útil para substituir a variável `am.messageid`."

#. type: Plain text
#: en/git-am.txt:89
#, priority:100
msgid "Be quiet. Only print error messages."
msgstr "Fique em silêncio Exiba apenas as mensagens de erro."

#. type: Labeled list
#: en/git-am.txt:91
#, ignore-same, no-wrap, priority:100
msgid "--utf8"
msgstr "--utf8"

#. type: Plain text
#: en/git-am.txt:97
#, priority:100
msgid "Pass `-u` flag to 'git mailinfo' (see linkgit:git-mailinfo[1]).  The proposed commit log message taken from the e-mail is re-coded into UTF-8 encoding (configuration variable `i18n.commitEncoding` can be used to specify project's preferred encoding if it is not UTF-8)."
msgstr "Passe a opção `-u` para o 'git mailinfo' (consulte linkgit:git-mailinfo[1]).  A mensagem proposta do registro log do commit obtida a partir do e-mail é recodificada para UTF-8 (a variável de configuração `i18n.commitEncoding` pode ser usada para definir a codificação preferida do projeto caso não seja UTF-8)."

#. type: Plain text
#: en/git-am.txt:100
#, no-wrap, priority:100
msgid ""
"This was optional in prior versions of git, but now it is the\n"
"default.   You can use `--no-utf8` to override this.\n"
msgstr ""
"Isso era opcional nas versões anteriores do git, agora é a codificação\n"
"predefinida.   É possível utilizar a opção `--no-utf8` para se sobrepor a predefinição.\n"

#. type: Labeled list
#: en/git-am.txt:101
#, ignore-same, no-wrap, priority:100
msgid "--no-utf8"
msgstr "--no-utf8"

#. type: Plain text
#: en/git-am.txt:104
#, priority:100
msgid "Pass `-n` flag to 'git mailinfo' (see linkgit:git-mailinfo[1])."
msgstr "Repasse o comando `-n` para o comando 'git mailinfo' (consulte linkgit:git-mailinfo[1])."

#. type: Labeled list
#: en/git-am.txt:105 en/git-apply.txt:85
#, ignore-same, no-wrap, priority:100
msgid "-3"
msgstr "-3"

#. type: Labeled list
#: en/git-am.txt:106 en/git-apply.txt:86
#, ignore-same, no-wrap, priority:100
msgid "--3way"
msgstr "--3way"

#. type: Labeled list
#: en/git-am.txt:107
#, ignore-same, no-wrap, priority:100
msgid "--no-3way"
msgstr "--no-3way"

#. type: Plain text
#: en/git-am.txt:114
#, priority:100
msgid "When the patch does not apply cleanly, fall back on 3-way merge if the patch records the identity of blobs it is supposed to apply to and we have those blobs available locally. `--no-3way` can be used to override am.threeWay configuration variable. For more information, see am.threeWay in linkgit:git-config[1]."
msgstr "Quando o patch não for aplicado corretamente, use a mesclagem de 3 vias caso o patch registre a identidade das bolhas aos quais devem ser aplicadas disponibilizando-as localmente. A opção `--no-3way` pode ser utilizada para substituir uma variável de configuração de três vias. Para mais informações, consulte `am.threeWay` em linkgit:git-config[1]."

#. type: Labeled list
#: en/git-am.txt:118 en/git-apply.txt:184 en/git-rebase.txt:456
#, ignore-same, no-wrap, priority:100
msgid "--ignore-whitespace"
msgstr "--ignore-whitespace"

#. type: Labeled list
#: en/git-am.txt:119 en/git-rebase.txt:474
#, no-wrap, priority:100
msgid "--whitespace=<option>"
msgstr "--whitespace=<opção>"

#. type: Labeled list
#: en/git-am.txt:120 en/git-apply.txt:130 en/git-rebase.txt:413
#, no-wrap, priority:100
msgid "-C<n>"
msgstr "-C<n>"

#. type: Labeled list
#: en/git-am.txt:121 en/git-apply.txt:124
#, no-wrap, priority:100
msgid "-p<n>"
msgstr "-p<n>"

#. type: Labeled list
#: en/git-am.txt:122
#, no-wrap, priority:100
msgid "--directory=<dir>"
msgstr "--directory=<dir>"

#. type: Labeled list
#: en/git-am.txt:123
#, no-wrap, priority:100
msgid "--exclude=<path>"
msgstr "--exclude=<caminho>"

#. type: Labeled list
#: en/git-am.txt:124
#, no-wrap, priority:100
msgid "--include=<path>"
msgstr "--include=<caminho>"

#. type: Labeled list
#: en/git-am.txt:125 en/git-apply.txt:109
#, ignore-same, no-wrap, priority:100
msgid "--reject"
msgstr "--reject"

#. type: Plain text
#: en/git-am.txt:129
#, priority:100
msgid "These flags are passed to the 'git apply' (see linkgit:git-apply[1])  program that applies the patch."
msgstr "Estas opções são repassadas ao comando 'git apply' (conulte linkgit:git-apply[1]) que aplica o patch."

#. type: Labeled list
#: en/git-am.txt:130
#, ignore-same, no-wrap, priority:100
msgid "--patch-format"
msgstr "--patch-format"

#. type: Plain text
#: en/git-am.txt:136
#, priority:100
msgid "By default the command will try to detect the patch format automatically. This option allows the user to bypass the automatic detection and specify the patch format that the patch(es) should be interpreted as. Valid formats are mbox, mboxrd, stgit, stgit-series and hg."
msgstr "É predefinido que o comando tentará detectar o formato do patch automaticamente. Esta opção permite que o usuário ignore a detecção automática e determine como o formato do patch deve ser interpretados. Os formatos válidos são `mbox`, `mboxrd`, `stgit`, `stgit-series` e `hg`."

#. type: Plain text
#: en/git-am.txt:140
#, priority:100
msgid "Run interactively."
msgstr "Execute de forma interativa."

#. type: Labeled list
#: en/git-am.txt:141 en/git-rebase.txt:481
#, ignore-same, no-wrap, priority:100
msgid "--committer-date-is-author-date"
msgstr "--committer-date-is-author-date"

#. type: Plain text
#: en/git-am.txt:147
#, priority:100
msgid "By default the command records the date from the e-mail message as the commit author date, and uses the time of commit creation as the committer date. This allows the user to lie about the committer date by using the same value as the author date."
msgstr "É predefinido que o comando registre a data da mensagem do e-mail como a data do autor que fez o commit e utilize a hora da criação como a data do commit. Permite que usuário minta sobre a data do commit utilizando o mesmo valor da data de quem fez o commit."

#. type: Labeled list
#: en/git-am.txt:148 en/git-rebase.txt:486
#, ignore-same, no-wrap, priority:100
msgid "--ignore-date"
msgstr "--ignore-date"

#. type: Plain text
#: en/git-am.txt:154
#, priority:100
msgid "By default the command records the date from the e-mail message as the commit author date, and uses the time of commit creation as the committer date. This allows the user to lie about the author date by using the same value as the committer date."
msgstr "É predefinido que o comando registre a data da mensagem do e-mail como a data do autor que fez o commit e utilize a hora da criação como a data do commit. Permite que usuário minta sobre a data do autor utilizando o mesmo valor da data de quem fez o commit."

#. type: Labeled list
#: en/git-am.txt:155 en/git-rebase.txt:335 en/sequencer.txt:6
#, ignore-same, no-wrap, priority:100
msgid "--skip"
msgstr "--skip"

#. type: Plain text
#: en/git-am.txt:158
#, priority:100
msgid "Skip the current patch.  This is only meaningful when restarting an aborted patch."
msgstr "Ignore o patch atual.  É justificado apenas quando for reiniciar um patch que foi abortado."

#. type: Labeled list
#: en/git-am.txt:159 en/git-cherry-pick.txt:110 en/git-commit-tree.txt:62 en/git-commit.txt:389 en/git-rebase.txt:381 en/git-revert.txt:91 en/merge-options.txt:84
#, no-wrap, priority:280
msgid "-S[<keyid>]"
msgstr "-S[<keyid>]"

#. type: Labeled list
#: en/git-am.txt:160 en/git-cherry-pick.txt:111 en/git-commit-tree.txt:63 en/git-commit.txt:390 en/git-rebase.txt:382 en/git-revert.txt:92 en/merge-options.txt:85
#, no-wrap, priority:280
msgid "--gpg-sign[=<keyid>]"
msgstr "--gpg-sign[=<keyid>]"

#. type: Labeled list
#: en/git-am.txt:161 en/git-cherry-pick.txt:112 en/git-commit-tree.txt:64 en/git-commit.txt:391 en/git-rebase.txt:383 en/git-revert.txt:93 en/merge-options.txt:86
#, ignore-same, no-wrap, priority:280
msgid "--no-gpg-sign"
msgstr "--no-gpg-sign"

#. type: Plain text
#: en/git-am.txt:167 en/git-cherry-pick.txt:118 en/git-commit.txt:397 en/git-rebase.txt:389 en/git-revert.txt:99
#, priority:280
msgid "GPG-sign commits. The `keyid` argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space. `--no-gpg-sign` is useful to countermand both `commit.gpgSign` configuration variable, and earlier `--gpg-sign`."
msgstr "Commits assinados com o GPG O argumento `keyid` é opcional e a predefinição retorna para a identidade de quem fez o commit; caso seja utilizado, deve estar anexado a opção e sem espaço. A opção `--no-gpg-sign` é útil para revogar a variável de configuração `commit.gpgSign` e a anterior `--gpg-sign`."

#. type: Labeled list
#: en/git-am.txt:168 en/git-merge.txt:121 en/git-rebase.txt:243 en/sequencer.txt:1
#, ignore-same, no-wrap, priority:240
msgid "--continue"
msgstr "--continue"

#. type: Labeled list
#: en/git-am.txt:169 en/git-branch.txt:163 en/git-cherry-pick.txt:79 en/git-diff-tree.txt:36 en/git-grep.txt:97 en/git-ls-tree.txt:44 en/git-pull.txt:107 en/git-rebase.txt:513 en/git-rm.txt:58 en/git-show-branch.txt:43 en/git-unpack-objects.txt:38
#, ignore-same, no-wrap, priority:280
msgid "-r"
msgstr "-r"

#. type: Labeled list
#: en/git-am.txt:170
#, ignore-same, no-wrap, priority:100
msgid "--resolved"
msgstr "--resolved"

#. type: Plain text
#: en/git-am.txt:177
#, priority:100
msgid "After a patch failure (e.g. attempting to apply conflicting patch), the user has applied it by hand and the index file stores the result of the application.  Make a commit using the authorship and commit log extracted from the e-mail message and the current index file, and continue."
msgstr "Após uma falha no patch (tentando aplicar um patch conflitante por exemplo), o usuário o aplicou manualmente e o arquivo do índice armazena o resultado.  Faça um commit utilizando o registro de autori, o registro log do commit extraído da mensagem do e-mail, do arquivo do índice atual e continue."

#. type: Labeled list
#: en/git-am.txt:178
#, no-wrap, priority:100
msgid "--resolvemsg=<msg>"
msgstr "--resolvemsg=<msg>"

#. type: Plain text
#: en/git-am.txt:184
#, priority:100
msgid "When a patch failure occurs, <msg> will be printed to the screen before exiting.  This overrides the standard message informing you to use `--continue` or `--skip` to handle the failure.  This is solely for internal use between 'git rebase' and 'git am'."
msgstr "Quando ocorrer uma falha no patch, a `<msg>` será exibida na tela antes de encerrar.  Substitui a mensagem predefinida informando que você deve utilizar `--continue` ou `--skip` para lidar com a falha.  Serve apenas para a utilização interna entre o comando 'git rebase' e 'git am'."

#. type: Labeled list
#: en/git-am.txt:185 en/git-merge.txt:100 en/git-notes.txt:201 en/git-rebase.txt:246 en/sequencer.txt:15
#, ignore-same, no-wrap, priority:280
msgid "--abort"
msgstr "--abort"

#. type: Plain text
#: en/git-am.txt:189
#, priority:100
msgid "Restore the original branch and abort the patching operation.  Revert contents of files involved in the am operation to their pre-am state."
msgstr "Restaure a ramificação original e aborte a operação de correção. Reverte o conteúdo dos arquivos envolvidos na operação am ao seu estado anterior."

#. type: Labeled list
#: en/git-am.txt:190 en/git-merge.txt:116 en/git-rebase.txt:253 en/sequencer.txt:10
#, ignore-same, no-wrap, priority:240
msgid "--quit"
msgstr "--quit"

#. type: Plain text
#: en/git-am.txt:193
#, priority:100
msgid "Abort the patching operation but keep HEAD and the index untouched."
msgstr "Anule a operação de correção, porém mantenha o `HEAD` e o índice inalterados."

#. type: Labeled list
#: en/git-am.txt:194
#, no-wrap, priority:100
msgid "--show-current-patch[=(diff|raw)]"
msgstr "--show-current-patch[=(diff|raw)]"

#. type: Plain text
#: en/git-am.txt:199
#, priority:100
msgid "Show the message at which `git am` has stopped due to conflicts.  If `raw` is specified, show the raw contents of the e-mail message; if `diff`, show the diff portion only.  Defaults to `raw`."
msgstr "Exiba uma mensagem onde o `git am` tenha parado por causa dos conflitos.  Caso `raw` seja utilizado, exiba o conteúdo bruto da mensagem do e-mail; no caso do `diff`, exiba apenas a porção relacionada ao diff.  A predefinição retorna para \"raw\" (bruto/puro)."

#. type: Labeled list
#: en/git-am.txt:200 en/git-apply.txt:259 en/git-cherry-pick.txt:124 en/git-commit.txt:220 en/git-notes.txt:158
#, ignore-same, no-wrap, priority:280
msgid "--allow-empty"
msgstr "--allow-empty"

#. type: Plain text
#: en/git-am.txt:204
#, priority:100
msgid "After a patch failure on an input e-mail message lacking a patch, create an empty commit with the contents of the e-mail message as its log message."
msgstr "Após uma falha do patch numa mensagem de e-mail recebida sem um patch, crie um commit vazio com o conteúdo da mensagem de e-mail como sua mensagem de registro log."

#. type: Title -
#: en/git-am.txt:206 en/git-commit.txt:541 en/git-format-patch.txt:431 en/git-fsck.txt:115 en/git-log.txt:193 en/git-merge-base.txt:76 en/git-notes.txt:218 en/git-remote.txt:202 en/git-rerere.txt:77 en/git-reset.txt:380 en/git-show.txt:84 en/git-stash.txt:265 en/git-tag.txt:231
#, no-wrap, priority:280
msgid "DISCUSSION"
msgstr "DISCUSSÃO"

#. type: Plain text
#: en/git-am.txt:214
#, priority:100
msgid "The commit author name is taken from the \"From: \" line of the message, and commit author date is taken from the \"Date: \" line of the message.  The \"Subject: \" line is used as the title of the commit, after stripping common prefix \"[PATCH <anything>]\".  The \"Subject: \" line is supposed to concisely describe what the commit is about in one line of text."
msgstr "Na mensagem, o nome do autor do commit é obtido da linha \"From:\" (De:) e a data do autor do commit é obtida da linha \"Date:\" (Data:).  O título do commit vem da linha \"Subject:\" (Assunto:) após a exclusão do prefixo comum \"[PATCH <alguma-coisa>]\".  A linha \"Subject:\" deve descrever de forma concisa do que se trata o commit numa linha de texto."

#. type: Plain text
#: en/git-am.txt:217
#, priority:100
msgid "\"From: \", \"Date: \", and \"Subject: \" lines starting the body override the respective commit author name and title values taken from the headers."
msgstr "As linhas que iniciam com \"From:\" (De:), \"Date:\" (Data) e \"Subject:\" (Assunto:) no corpo, substituem os respectivos valores do nome e título do autor do commit que foram retirados dos cabeçalhos."

#. type: Plain text
#: en/git-am.txt:222
#, priority:100
msgid "The commit message is formed by the title taken from the \"Subject: \", a blank line and the body of the message up to where the patch begins.  Excess whitespace at the end of each line is automatically stripped."
msgstr "A mensagem do commit é formada pelo título obtido do \"Subject:\" (Assunto:), uma linha em branco e do corpo da mensagem até o início do patch.  O espaço em excesso no final de cada linha é removido automaticamente."

#. type: Plain text
#: en/git-am.txt:225
#, priority:100
msgid "The patch is expected to be inline, directly following the message.  Any line that is of the form:"
msgstr "Espera-se que o patch já esteja embutido após a mensagem.  Qualquer linha que esteja no formato:"

#. type: Plain text
#: en/git-am.txt:227
#, priority:100
msgid "three-dashes and end-of-line, or"
msgstr "três-traços e fim-de-linha, ou"

#. type: Plain text
#: en/git-am.txt:228
#, priority:100
msgid "a line that begins with \"diff -\", or"
msgstr "uma linha que começa com \"diff -\" ou"

#. type: Plain text
#: en/git-am.txt:229
#, priority:100
msgid "a line that begins with \"Index: \""
msgstr "uma linha que começa com \"Index:\""

#. type: Plain text
#: en/git-am.txt:232
#, priority:100
msgid "is taken as the beginning of a patch, and the commit log message is terminated before the first occurrence of such a line."
msgstr "é tomado como o início de um patch, a mensagem do registro log do commit é finalizado antes da primeira ocorrência de tal linha."

#. type: Plain text
#: en/git-am.txt:236
#, priority:100
msgid "When initially invoking `git am`, you give it the names of the mailboxes to process.  Upon seeing the first patch that does not apply, it aborts in the middle.  You can recover from this in one of two ways:"
msgstr "Ao invocar inicialmente o comando `git am`, indique os nomes das caixas do correio que serão processadas.  Ao ver que o primeiro patch que não possa ser aplicado, o processo é interrompido imediatamente.  É possível se recuperar deste processo de duas maneiras:"

#. type: Plain text
#: en/git-am.txt:239
#, priority:100
msgid "skip the current patch by re-running the command with the `--skip` option."
msgstr "pule o patch atual reexecutando o comando com a opção `--skip`."

#. type: Plain text
#: en/git-am.txt:243
#, priority:100
msgid "hand resolve the conflict in the working directory, and update the index file to bring it into a state that the patch should have produced.  Then run the command with the `--continue` option."
msgstr "manualmente resolva o conflito no diretório de trabalho e atualize o arquivo do índice para colocá-lo na condição onde o patch deveria ter sido produzido.  Em seguida, execute o comando com a opção `--continue`."

#. type: Plain text
#: en/git-am.txt:248
#, priority:100
msgid "The command refuses to process new mailboxes until the current operation is finished, so if you decide to start over from scratch, run `git am --abort` before running the command with mailbox names."
msgstr "O comando se recusa a processar as novas caixas de correio até que a operação atual seja concluída, portanto, caso decida recomeçar do zero, execute o comando `git am --abort` antes de executar o comando com os nomes das caixas de correio."

#. type: Plain text
#: en/git-am.txt:254
#, priority:100
msgid "Before any patches are applied, ORIG_HEAD is set to the tip of the current branch.  This is useful if you have problems with multiple commits, like running 'git am' on the wrong branch or an error in the commits that is more easily fixed by changing the mailbox (e.g.  errors in the \"From:\" lines)."
msgstr "Antes de aplicar quaisquer correções, o `ORIG_HEAD` é definido na ponta do ramo atual.  É útil caso tenha problemas com os vários commits como executar o comando 'git am' na ramificação errada ou caso haja um erro nos commits que são mais facilmente corrigidos alterando a caixa de correio (erros nas linhas \"From:\" (De:) por exemplo)."

#. type: Title -
#: en/git-am.txt:256 en/git-commit.txt:565 en/git-gc.txt:151
#, no-wrap, priority:280
msgid "HOOKS"
msgstr "GANCHOS"

#. type: Plain text
#: en/git-am.txt:260
#, priority:100
msgid "This command can run `applypatch-msg`, `pre-applypatch`, and `post-applypatch` hooks.  See linkgit:githooks[5] for more information."
msgstr "Este comando pode executar os ganchos `applypatch-msg`, `pre-applypatch` e `post-applypatch`.  Para mais informações consulte linkgit:githooks[5]."

#. type: Plain text
#: en/git-am.txt:271
#, ignore-same, priority:100
msgid "linkgit:git-apply[1]."
msgstr "linkgit:git-apply[1]."

#. type: Title =
#: en/git-annotate.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-annotate(1)"
msgstr "git-annotate(1)"

#. type: Plain text
#: en/git-annotate.txt:7
#, priority:100
msgid "git-annotate - Annotate file lines with commit information"
msgstr "git-annotate - Anote linhas do arquivo com as informações do commit"

#. type: Plain text
#: en/git-annotate.txt:12
#, no-wrap, priority:100
msgid "'git annotate' [<options>] <file> [<revision>]\n"
msgstr "'git annotate' [<opções>] <arquivo> [<revisão>]\n"

#. type: Plain text
#: en/git-annotate.txt:17
#, priority:100
msgid "Annotates each line in the given file with information from the commit which introduced the line. Optionally annotates from a given revision."
msgstr "Anota cada linha no arquivo informado com as informações do commit que introduziu a linha. Anota opcionalmente numa determinada revisão."

#. type: Plain text
#: en/git-annotate.txt:22
#, priority:100
msgid "The only difference between this command and linkgit:git-blame[1] is that they use slightly different output formats, and this command exists only for backward compatibility to support existing scripts, and provide a more familiar command name for people coming from other SCM systems."
msgstr "A única diferença entre esse comando e o linkgit:git-blame[1] é que eles utilizam formatos de saída ligeiramente diferentes, este comando existe apenas para a compatibilidade com as versões anteriores, visando a compatibilidade dos scripts já existentes e para fornecer um nome do comando mais familiar para as pessoas vindas de outros sistemas SCM."

#. type: Title =
#: en/git-apply.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-apply(1)"
msgstr "git-apply(1)"

#. type: Plain text
#: en/git-apply.txt:7
#, priority:100
msgid "git-apply - Apply a patch to files and/or to the index"
msgstr "git-apply - Aplica um patch aos arquivos e/ou ao índice"

#. type: Plain text
#: en/git-apply.txt:20
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git apply' [--stat] [--numstat] [--summary] [--check] [--index | --intent-to-add] [--3way]\n"
"\t  [--apply] [--no-add] [--build-fake-ancestor=<file>] [-R | --reverse]\n"
"\t  [--allow-binary-replacement | --binary] [--reject] [-z]\n"
"\t  [-p<n>] [-C<n>] [--inaccurate-eof] [--recount] [--cached]\n"
"\t  [--ignore-space-change | --ignore-whitespace]\n"
"\t  [--whitespace=(nowarn|warn|fix|error|error-all)]\n"
"\t  [--exclude=<path>] [--include=<path>] [--directory=<root>]\n"
"\t  [--verbose | --quiet] [--unsafe-paths] [--allow-empty] [<patch>...]\n"
msgstr ""
"'git apply' [--stat] [--numstat] [--summary] [--check] [--index | --intent-to-add] [--3way]\n"
"\t  [--apply] [--no-add] [--build-fake-ancestor=<arquivo>] [-R | --reverse]\n"
"\t  [--allow-binary-replacement | --binary] [--reject] [-z]\n"
"\t  [-p<n>] [-C<n>] [--inaccurate-eof] [--recount] [--cached]\n"
"\t  [--ignore-space-change | --ignore-whitespace]\n"
"\t  [--whitespace=(nowarn|warn|fix|error|error-all)]\n"
"\t  [--exclude=<caminho>] [--include=<caminho>] [--directory=<root>]\n"
"\t  [--verbose | --quiet] [--unsafe-paths] [--allow-empty] [<patch>...]\n"

#. type: Plain text
#: en/git-apply.txt:30
#, priority:100
msgid "Reads the supplied diff output (i.e. \"a patch\") and applies it to files.  When running from a subdirectory in a repository, patched paths outside the directory are ignored.  With the `--index` option the patch is also applied to the index, and with the `--cached` option the patch is only applied to the index.  Without these options, the command applies the patch only to files, and does not require them to be in a Git repository."
msgstr "Lê a saída diff informada (ou seja, \"um patch\") e a aplica aos arquivos.  Ao executar a partir de um subdiretório num repositório, os caminhos corrigidos fora do diretório são ignorados.  Com a opção `--index`, o patch também é aplicado ao índice, com a opção `--cached` o patch é aplicado apenas ao índice.  Sem essas opções, o comando aplica o patch apenas aos arquivos e não exige que eles estejam num repositório Git."

#. type: Plain text
#: en/git-apply.txt:34
#, priority:100
msgid "This command applies the patch but does not create a commit.  Use linkgit:git-am[1] to create commits from patches generated by linkgit:git-format-patch[1] and/or received by email."
msgstr "Este comando aplica o patch, mas não cria um commit.  Utilize linkgit:git-am[1] para criar os commits a partir dos patches que foram gerados através do linkgit:git-format-patch[1] ou que tenham sido recebidos por email."

#. type: Labeled list
#: en/git-apply.txt:37
#, ignore-ellipsis, no-wrap, priority:100
msgid "<patch>..."
msgstr "<patch>..."

#. type: Plain text
#: en/git-apply.txt:40
#, priority:100
msgid "The files to read the patch from.  '-' can be used to read from the standard input."
msgstr "Os arquivos que serão lidos do patch.  '-' pode ser utilizado para ler a entrada padrão."

#. type: Labeled list
#: en/git-apply.txt:41 en/git-rebase.txt:398 en/merge-options.txt:107
#, ignore-same, no-wrap, priority:240
msgid "--stat"
msgstr "--stat"

#. type: Plain text
#: en/git-apply.txt:44
#, priority:100
msgid "Instead of applying the patch, output diffstat for the input.  Turns off \"apply\"."
msgstr "Em vez de aplicar o patch, gere o `diffstat` na entrada.  Desativa o \"apply\" (aplicar)."

#. type: Plain text
#: en/git-apply.txt:51
#, priority:100
msgid "Similar to `--stat`, but shows the number of added and deleted lines in decimal notation and the pathname without abbreviation, to make it more machine friendly.  For binary files, outputs two `-` instead of saying `0 0`.  Turns off \"apply\"."
msgstr "Semelhante ao `--stat` porém exibe a quantidade de linhas que foram adicionadas e excluídas na notação decimal do nome do caminho sem a abreviação, tornando-o mais amigável à máquina.  Para arquivos binários, gera dois `-` em vez de `0 0`.  Desativa o \"apply\" (aplicar)."

#. type: Plain text
#: en/git-apply.txt:57
#, priority:100
msgid "Instead of applying the patch, output a condensed summary of information obtained from git diff extended headers, such as creations, renames and mode changes.  Turns off \"apply\"."
msgstr "Em vez de aplicar o patch, produza um resumo condensado das informações obtidas dos cabeçalhos estendidos do `git diff` como criações, renomeações e as alterações do modo.  Desativa o \"apply\" (aplicar)."

#. type: Plain text
#: en/git-apply.txt:62
#, priority:100
msgid "Instead of applying the patch, see if the patch is applicable to the current working tree and/or the index file and detects errors.  Turns off \"apply\"."
msgstr "Em vez de aplicar o patch, verifique se o patch é aplicável à árvore de trabalho atual ou ao arquivo do índice assim como, detecte os erros.  Desativa o \"apply\" (aplicar)."

#. type: Labeled list
#: en/git-apply.txt:63 en/git-checkout-index.txt:27 en/git-stash.txt:178
#, ignore-same, no-wrap, priority:240
msgid "--index"
msgstr "--index"

#. type: Plain text
#: en/git-apply.txt:71
#, priority:100
msgid "Apply the patch to both the index and the working tree (or merely check that it would apply cleanly to both if `--check` is in effect). Note that `--index` expects index entries and working tree copies for relevant paths to be identical (their contents and metadata such as file mode must match), and will raise an error if they are not, even if the patch would apply cleanly to both the index and the working tree in isolation."
msgstr "Aplica o patch ao índice e à árvore de trabalho (ou apenas verifica se ele se aplicaria corretamente em ambos caso `--check` esteja em uso). Observe que `--index` espera que as entradas do índice e as cópias da árvore de trabalho para os caminhos relevantes sejam idênticos (o seu conteúdo e seus metadados, como o modo arquivo, devem coincidir) e um erro será gerado caso não sejam mesmo que o patch seja aplicado corretamente no índice e na árvore de trabalho de forma isolada."

#. type: Labeled list
#: en/git-apply.txt:72 en/git-check-attr.txt:27 en/git-diff-index.txt:29 en/git-grep.txt:44 en/git-ls-files.txt:36 en/git-rm.txt:67 en/git-submodule.txt:306
#, ignore-same, no-wrap, priority:280
msgid "--cached"
msgstr "--cached"

#. type: Plain text
#: en/git-apply.txt:76
#, priority:100
msgid "Apply the patch to just the index, without touching the working tree. If `--check` is in effect, merely check that it would apply cleanly to the index entry."
msgstr "Aplica o patch apenas no índice sem afetar a árvore de trabalho. Caso a opção `--check` esteja em vigor, basta verificar se ele se aplicaria de forma limpa à entrada do índice."

#. type: Plain text
#: en/git-apply.txt:84
#, priority:100
msgid "When applying the patch only to the working tree, mark new files to be added to the index later (see `--intent-to-add` option in linkgit:git-add[1]). This option is ignored unless running in a Git repository and `--index` is not specified.  Note that `--index` could be implied by other options such as `--cached` or `--3way`."
msgstr "Ao aplicar o patch apenas na árvore de trabalho, marque os novos arquivos que serão adicionados ao índice posteriormente (consulte a opção `--intent-to-add` no linkgit:git-add[1]). Esta opção é ignorada a menos que seja executada num repositório Git e o comando `--index` não seja utilizado.  Observe que o comando `--index` pode estar implícito em outras opções como `--cached` ou `--3way`."

#. type: Plain text
#: en/git-apply.txt:94
#, priority:100
msgid "Attempt 3-way merge if the patch records the identity of blobs it is supposed to apply to and we have those blobs available locally, possibly leaving the conflict markers in the files in the working tree for the user to resolve.  This option implies the `--index` option unless the `--cached` option is used, and is incompatible with the `--reject` option.  When used with the `--cached` option, any conflicts are left at higher stages in the cache."
msgstr "Tente a mesclagem de 3 vias caso o patch registre a identidade das bolhas onde de deve aplicar e se tivermos essas bolhas disponíveis localmente, possivelmente deixando os marcadores de conflito nos arquivos da árvore de trabalho para o usuário resolver.  Esta opção implica no uso da opção `--index`, a menos que a opção `--cached` seja usada, é incompatível com a opção `--reject`.  Quando usado com a opção `--cached`, quaisquer conflitos são deixados nos estágios mais altos no cache."

#. type: Labeled list
#: en/git-apply.txt:95
#, no-wrap, priority:100
msgid "--build-fake-ancestor=<file>"
msgstr "--build-fake-ancestor=<arquivo>"

#. type: Plain text
#: en/git-apply.txt:101
#, priority:100
msgid "Newer 'git diff' output has embedded 'index information' for each blob to help identify the original version that the patch applies to.  When this flag is given, and if the original versions of the blobs are available locally, builds a temporary index containing those blobs."
msgstr "O 'git diff' mais recentemente gerado incorporou 'as informações do índice' para cada bolha para ajudar a identificar qual foi a versão original à qual o patch se aplica.  Quando esta opção for utilizada e caso as versões originais das bolhas estejam disponíveis localmente, crie um índice temporário contendo essas bolhas."

#. type: Plain text
#: en/git-apply.txt:104
#, priority:100
msgid "When a pure mode change is encountered (which has no index information), the information is read from the current index instead."
msgstr "Quando uma alteração do modo puro é encontrado (que não contém as informações do índice), as informações são lidas a partir do índice atual."

#. type: Labeled list
#: en/git-apply.txt:106 en/rev-list-options.txt:868
#, ignore-same, no-wrap, priority:260
msgid "--reverse"
msgstr "--reverse"

#. type: Plain text
#: en/git-apply.txt:108
#, priority:100
msgid "Apply the patch in reverse."
msgstr "Aplique o patch ao contrário."

#. type: Plain text
#: en/git-apply.txt:115
#, priority:100
msgid "For atomicity, 'git apply' by default fails the whole patch and does not touch the working tree when some of the hunks do not apply.  This option makes it apply the parts of the patch that are applicable, and leave the rejected hunks in corresponding *.rej files."
msgstr "Por atomicidade, a predefinição do comando 'git apply' falha o patch inteiro e não toca na árvore de trabalho quando alguns dos pedaços não se aplicarem.  Essa opção faz com que se aplique as partes do patch que forem aplicáveis e deixe os pedaços rejeitados nos arquivos * .rej correspondentes."

#. type: Plain text
#: en/git-apply.txt:119
#, priority:100
msgid "When `--numstat` has been given, do not munge pathnames, but use a NUL-terminated machine-readable format."
msgstr "Quando o comando `--numstat` for utilizado, não una os nomes dos caminhos, porém utilize um formato legível para a máquina e utilize caracteres `NUL` para a terminação."

#. type: Plain text
#: en/git-apply.txt:129
#, priority:100
msgid "Remove <n> leading path components (separated by slashes) from traditional diff paths. E.g., with `-p2`, a patch against `a/dir/file` will be applied directly to `file`. The default is 1."
msgstr "Remova os `<n>` componentes do caminho principal (separados por barras) dos caminhos diff tradicionais. Com `-p2`, um patch contra` a/dir/file` será aplicado diretamente ao `file` por exemplo. A predefinição é 1."

#. type: Plain text
#: en/git-apply.txt:135
#, priority:100
msgid "Ensure at least <n> lines of surrounding context match before and after each change.  When fewer lines of surrounding context exist they all must match.  By default no context is ever ignored."
msgstr "Assegure que pelo menos `<n>` linhas ao redor do contexto coincidente antes e após cada alteração.  Quando há menos linhas de contexto ao redor, todas elas devem coincidir.  É predefinido que nenhum contexto seja ignorado."

#. type: Labeled list
#: en/git-apply.txt:136
#, ignore-same, no-wrap, priority:100
msgid "--unidiff-zero"
msgstr "--unidiff-zero"

#. type: Plain text
#: en/git-apply.txt:142
#, priority:100
msgid "By default, 'git apply' expects that the patch being applied is a unified diff with at least one line of context.  This provides good safety measures, but breaks down when applying a diff generated with `--unified=0`. To bypass these checks use `--unidiff-zero`."
msgstr "É predefinido que o comando 'git apply' espere que o patch que está sendo aplicado seja um diff unificado com pelo menos uma linha relacionada ao contexto.  Fornece boas medidas de segurança, porém é interrompido ao aplicar um diff gerado com `--unified=0`. Para ignorar estas verificações, utilize `--unidiff-zero`."

#. type: Plain text
#: en/git-apply.txt:145
#, priority:100
msgid "Note, for the reasons stated above usage of context-free patches is discouraged."
msgstr "Observe que pelas razões expostas acima, a utilização de patches sem contexto é desencorajado."

#. type: Plain text
#: en/git-apply.txt:146 en/git-rebase.txt:259 en/git-rebase.txt:627
#, ignore-same, no-wrap, priority:100
msgid "--apply"
msgstr "--apply"

#. type: Plain text
#: en/git-apply.txt:152
#, priority:100
msgid "If you use any of the options marked \"Turns off 'apply'\" above, 'git apply' reads and outputs the requested information without actually applying the patch.  Give this flag after those flags to also apply the patch."
msgstr "Caso utilize qualquer uma das opções marcadas \"Desativa o 'apply'\" acima, o comando 'git apply' lê e gera as informações solicitadas sem realmente aplicar o patch.  Informe essa flag depois destas flags para também aplicar o patch."

#. type: Labeled list
#: en/git-apply.txt:153
#, ignore-same, no-wrap, priority:100
msgid "--no-add"
msgstr "--no-add"

#. type: Plain text
#: en/git-apply.txt:159
#, priority:100
msgid "When applying a patch, ignore additions made by the patch.  This can be used to extract the common part between two files by first running 'diff' on them and applying the result with this option, which would apply the deletion part but not the addition part."
msgstr "Ao aplicar um patch, ignore as adições feitas pelo patch.  Pode ser utilizado para extrair a parte comum entre os dois arquivos executando o primeiro 'diff' neles e aplicando o resultado com esta opção que aplicaria a parte a ser excluída, mas não a parte da adição."

#. type: Labeled list
#: en/git-apply.txt:160
#, ignore-same, no-wrap, priority:100
msgid "--allow-binary-replacement"
msgstr "--allow-binary-replacement"

#. type: Plain text
#: en/git-apply.txt:166
#, priority:100
msgid "Historically we did not allow binary patch applied without an explicit permission from the user, and this flag was the way to do so.  Currently we always allow binary patch application, so this is a no-op."
msgstr "Historicamente, não permitimos que um patch binário seja aplicado sem uma permissão explícita do usuário, esta opção era o caminho para fazê-lo.  Atualmente, nós sempre permitimos que os patches binários sejam aplicados, então isso não é operacional."

#. type: Labeled list
#: en/git-apply.txt:167
#, no-wrap, priority:100
msgid "--exclude=<path-pattern>"
msgstr "--exclude=<path-pattern>"

#. type: Plain text
#: en/git-apply.txt:171
#, priority:100
msgid "Don't apply changes to files matching the given path pattern. This can be useful when importing patchsets, where you want to exclude certain files or directories."
msgstr "Não aplique as alterações nos arquivos que coincidam com o padrão do caminho informado. Pode ser útil ao importar os conjuntos dos patches onde você queira que determinados arquivos ou diretórios sejam excluídos."

#. type: Labeled list
#: en/git-apply.txt:172
#, no-wrap, priority:100
msgid "--include=<path-pattern>"
msgstr "--include=<path-pattern>"

#. type: Plain text
#: en/git-apply.txt:176
#, priority:100
msgid "Apply changes to files matching the given path pattern. This can be useful when importing patchsets, where you want to include certain files or directories."
msgstr "Aplique as alterações nos arquivos que coincidam com padrão do caminho informado. Pode ser útil ao importar os conjuntos dos patches, onde você queira incluir certos arquivos ou diretórios."

#. type: Plain text
#: en/git-apply.txt:182
#, priority:100
msgid "When `--exclude` and `--include` patterns are used, they are examined in the order they appear on the command line, and the first match determines if a patch to each path is used.  A patch to a path that does not match any include/exclude pattern is used by default if there is no include pattern on the command line, and ignored if there is any include pattern."
msgstr "Quando os padrões `--exclude` e `--include` são utilizados, eles são examinados na ordem em que aparecem na linha de comando, a primeira correspondência determina se para cada caminho um patch será utilizado.  É predefinido que um patch para um caminho que não coincida com nenhum padrão para incluir/excluir seja utilizado caso não haja um padrão de inclusão na linha de comandos e ignorado caso haja algum padrão para a inclusão."

#. type: Plain text
#: en/git-apply.txt:190
#, priority:100
msgid "When applying a patch, ignore changes in whitespace in context lines if necessary.  Context lines will preserve their whitespace, and they will not undergo whitespace fixing regardless of the value of the `--whitespace` option. New lines will still be fixed, though."
msgstr "Ao aplicar um patch, ignore as alterações no espaço das linhas do contexto, se necessário.  As linhas do contexto preservam os seus espaços e não serão corrigidas, independentemente do valor da opção `--whitespace`. No entanto, as novas linhas ainda serão corrigidas."

#. type: Labeled list
#: en/git-apply.txt:191
#, no-wrap, priority:100
msgid "--whitespace=<action>"
msgstr "--whitespace=<ação>"

#. type: Plain text
#: en/git-apply.txt:199
#, priority:100
msgid "When applying a patch, detect a new or modified line that has whitespace errors.  What are considered whitespace errors is controlled by `core.whitespace` configuration.  By default, trailing whitespaces (including lines that solely consist of whitespaces) and a space character that is immediately followed by a tab character inside the initial indent of the line are considered whitespace errors."
msgstr "Ao aplicar um patch, detecte se há erros de espaço numa nova linha ou numa linha que foi modificada.  A configuração `core.whitespace` define o que são considerados erros de espaço.  É predefinido que os espaços à direita (incluindo as linhas que consistam apenas nos espaços) e um caractere de espaço que seja imediatamente seguido por um caractere de tabulação dentro do recuo inicial da linha, são considerados erros do espaço."

#. type: Plain text
#: en/git-apply.txt:203
#, priority:100
msgid "By default, the command outputs warning messages but applies the patch.  When `git-apply` is used for statistics and not applying a patch, it defaults to `nowarn`."
msgstr "É predefinido que o comando gere mensagens de aviso, mas continue a aplicar o patch.  Quando o comando `git-apply` é utilizado para gerar as estatísticas e não para aplicar um patch, a predefinição retorna ao valor `nowarn`."

#. type: Plain text
#: en/git-apply.txt:206
#, priority:100
msgid "You can use different `<action>` values to control this behavior:"
msgstr "Você pode utilizar valores diferentes valores de controle para `<ação>`:"

#. type: Plain text
#: en/git-apply.txt:208
#, priority:100
msgid "`nowarn` turns off the trailing whitespace warning."
msgstr "`nowarn` desativa o aviso de espaço à direita."

#. type: Plain text
#: en/git-apply.txt:210
#, priority:100
msgid "`warn` outputs warnings for a few such errors, but applies the patch as-is (default)."
msgstr "`warn` envia avisos para alguns desses erros, mas aplica o patch como está (predefinido)."

#. type: Plain text
#: en/git-apply.txt:214
#, priority:100
msgid "`fix` outputs warnings for a few such errors, and applies the patch after fixing them (`strip` is a synonym --- the tool used to consider only trailing whitespace characters as errors, and the fix involved 'stripping' them, but modern Gits do more)."
msgstr "`fix` gera os avisos para alguns destes erros e aplica o patch após corrigí-los (o `strip` é um sinônimo --- a ferramenta costumava considerar apenas os caracteres de espaço como erros e a correção envolvia em 'removê-los', porém os Gits mais modernos fazem mais que isso)."

#. type: Plain text
#: en/git-apply.txt:216
#, priority:100
msgid "`error` outputs warnings for a few such errors, and refuses to apply the patch."
msgstr "`error` gera os avisos para alguns destes erros e se recusa a aplicar o patch."

#. type: Plain text
#: en/git-apply.txt:217
#, priority:100
msgid "`error-all` is similar to `error` but shows all errors."
msgstr "`error-all` é semelhante ao `error`, porém exibe todos os erros."

#. type: Labeled list
#: en/git-apply.txt:218
#, ignore-same, no-wrap, priority:100
msgid "--inaccurate-eof"
msgstr "--inaccurate-eof"

#. type: Plain text
#: en/git-apply.txt:224
#, priority:100
msgid "Under certain circumstances, some versions of 'diff' do not correctly detect a missing new-line at the end of the file. As a result, patches created by such 'diff' programs do not record incomplete lines correctly. This option adds support for applying such patches by working around this bug."
msgstr "Em determinadas circunstâncias, algumas versões do 'diff' não detectam corretamente uma nova linha que esteja ausente no final do arquivo. Como resultado, os patches criados por estes programas 'diff' não registram as linhas que estejam incompletas de forma correta. Esta opção adiciona a compatibilidade para que seja possível aplicar tais correções contornando este problema."

#. type: Plain text
#: en/git-apply.txt:230
#, priority:100
msgid "Report progress to stderr. By default, only a message about the current patch being applied will be printed. This option will cause additional information to be reported."
msgstr "Relate o progresso para o stderr. É predefinido que apenas seja exibida uma mensagem do patch que está sendo aplicado atualmente. Esta opção fará com que as informações adicionais sejam relatadas."

#. type: Plain text
#: en/git-apply.txt:235
#, priority:100
msgid "Suppress stderr output. Messages about patch status and progress will not be printed."
msgstr "Suprime a saída stderr. As mensagens sobre o estado do patch e o progresso não serão impressas."

#. type: Labeled list
#: en/git-apply.txt:236
#, ignore-same, no-wrap, priority:100
msgid "--recount"
msgstr "--recount"

#. type: Plain text
#: en/git-apply.txt:240
#, priority:100
msgid "Do not trust the line counts in the hunk headers, but infer them by inspecting the patch (e.g. after editing the patch without adjusting the hunk headers appropriately)."
msgstr "Não confie nas contagens da linha nos cabeçalhos, deduza-as inspecionando o patch (após editar o patch sem ajustar os cabeçalhos adequadamente por exemplo)."

#. type: Labeled list
#: en/git-apply.txt:241
#, no-wrap, priority:100
msgid "--directory=<root>"
msgstr "--directory=<root>"

#. type: Plain text
#: en/git-apply.txt:244
#, priority:100
msgid "Prepend <root> to all filenames.  If a \"-p\" argument was also passed, it is applied before prepending the new root."
msgstr "Anexe `<root>` (raiz) em todos os nomes dos arquivos.  Caso \"-p\" também seja utilizado, ele é aplicado antes de anexar a nova raiz."

#. type: Plain text
#: en/git-apply.txt:248
#, priority:100
msgid "For example, a patch that talks about updating `a/git-gui.sh` to `b/git-gui.sh` can be applied to the file in the working tree `modules/git-gui/git-gui.sh` by running `git apply --directory=modules/git-gui`."
msgstr "Por exemplo, um patch que seja utilizado para a atualização de `a/git-gui.sh` para `b/git-gui.sh`, pode ser aplicado ao arquivo na árvore de trabalho `modules/git-gui/git-gui.sh` ao executar o comando `git apply --directory=modules/git-gui`."

#. type: Labeled list
#: en/git-apply.txt:249
#, ignore-same, no-wrap, priority:100
msgid "--unsafe-paths"
msgstr "--unsafe-paths"

#. type: Plain text
#: en/git-apply.txt:254
#, priority:100
msgid "By default, a patch that affects outside the working area (either a Git controlled working tree, or the current working directory when \"git apply\" is used as a replacement of GNU patch) is rejected as a mistake (or a mischief)."
msgstr "É predefinido que um patch que tenha efeito fora da área de trabalho (uma árvore de trabalho controlada pelo Git ou um diretório de trabalho atual quando o \"git apply\" é utilizado como uma reposição do patch GNU) seja rejeitado como um erro (ou um dano)."

#. type: Plain text
#: en/git-apply.txt:258
#, priority:100
msgid "When `git apply` is used as a \"better GNU patch\", the user can pass the `--unsafe-paths` option to override this safety check.  This option has no effect when `--index` or `--cached` is in use."
msgstr "Quando o comando `git apply` for utilizado como um \"better GNU patch\" (patch melhor do que o do GNU), o usuário pode encaminhar a opção `--unsafe-paths` para substituir esta verificação de segurança.  Esta opção não tem efeito quando a opção `--index` ou `--cached` estiver em uso."

#. type: Plain text
#: en/git-apply.txt:262
#, priority:100
msgid "Don't return error for patches containing no diff. This includes empty patches and patches with commit text only."
msgstr "Não retorne um erro para as correções que não contenham um diff. Isso inclui correções vazias e correções que tenham apenas um commit com texto."

#. type: Title -
#: en/git-apply.txt:271 en/git-mv.txt:48 en/git-rm.txt:153
#, no-wrap, priority:280
msgid "SUBMODULES"
msgstr "SUBMÓDULOS"

#. type: Plain text
#: en/git-apply.txt:274
#, priority:100
msgid "If the patch contains any changes to submodules then 'git apply' treats these changes as follows."
msgstr "Caso um patch contenha alguma alteração nos submódulos, o comando 'git apply' tratará estas alterações da seguinte maneira."

#. type: Plain text
#: en/git-apply.txt:280
#, priority:100
msgid "If `--index` is specified (explicitly or implicitly), then the submodule commits must match the index exactly for the patch to apply.  If any of the submodules are checked-out, then these check-outs are completely ignored, i.e., they are not required to be up to date or clean and they are not updated."
msgstr "Caso `--index` seja utilizado (explícita ou implicitamente), o commit do submódulo deverá coincidir de forma exata ao índice para que o patch possa ser aplicado.  Não serão atualizados qualquer um dos submódulos que tenha uma averiguação, estes check-outs serão completamente ignorados, ou seja, eles não precisam estar atualizados ou limpos."

#. type: Plain text
#: en/git-apply.txt:284
#, priority:100
msgid "If `--index` is not specified, then the submodule commits in the patch are ignored and only the absence or presence of the corresponding subdirectory is checked and (if possible) updated."
msgstr "Caso o `--index` não seja utilizado, os commit dos submódulos no patch serão ignorados e somente a ausência ou a presença do subdiretório coincidente será verificado e (se possível) atualizado."

#. type: Plain text
#: en/git-apply.txt:288
#, ignore-same, priority:100
msgid "linkgit:git-am[1]."
msgstr "linkgit:git-am[1]."

#. type: Title =
#: en/git-archimport.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-archimport(1)"
msgstr "git-archimport(1)"

#. type: Plain text
#: en/git-archimport.txt:7
#, priority:100
msgid "git-archimport - Import a GNU Arch repository into Git"
msgstr "git-archimport - Importe um repositório do GNU Arch para o Git"

#. type: Plain text
#: en/git-archimport.txt:14
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git archimport' [-h] [-v] [-o] [-a] [-f] [-T] [-D <depth>] [-t <tempdir>]\n"
"\t       <archive>/<branch>[:<git-branch>]...\n"
msgstr ""
"'git archimport' [-h] [-v] [-o] [-a] [-f] [-T] [-D <profundidade>] [-t <tempdir>]\n"
"\t       <arquivo>/<ramo>[:<git-branch>]...\n"

#. type: Plain text
#: en/git-archimport.txt:23
#, priority:100
msgid "Imports a project from one or more GNU Arch repositories.  It will follow branches and repositories within the namespaces defined by the <archive>/<branch> parameters supplied. If it cannot find the remote branch a merge comes from it will just import it as a regular commit. If it can find it, it will mark it as a merge whenever possible (see discussion below)."
msgstr "Importa um projeto de um ou mais repositórios do GNU Arch.  Ele seguirá as ramificações e repositórios dentro dos espaço de nomes definidos através do parâmetro <arquivo>/<ramo> informado. Caso ele não consiga encontrar o ramo remoto, a mesclagem será importada apenas como um commit normal. Caso possa localizá-lo, será marcado como uma mesclagem sempre que for possível (consulte a discussão abaixo)."

#. type: Plain text
#: en/git-archimport.txt:27
#, priority:100
msgid "The script expects you to provide the key roots where it can start the import from an 'initial import' or 'tag' type of Arch commit. It will follow and import new branches within the provided roots."
msgstr "O script espera que você informe as principais raízes nas quais ele possa iniciar a 'importação inicial' ou 'tag' do commit do Arch. Ele seguirá e importará as novas ramificações dentro das raízes informadas."

#. type: Plain text
#: en/git-archimport.txt:32
#, priority:100
msgid "It expects to be dealing with one project only. If it sees branches that have different roots, it will refuse to run. In that case, edit your <archive>/<branch> parameters to define clearly the scope of the import."
msgstr "Ele espera lidar apenas com um projeto apenas. Caso veja ramificações com raízes diferentes, a execução será impedida de prosseguir. Nesse caso, edite os parâmetros <arquivo>/<ramo> para definir claramente o escopo da importação."

#. type: Plain text
#: en/git-archimport.txt:37
#, priority:100
msgid "'git archimport' uses `tla` extensively in the background to access the Arch repository.  Make sure you have a recent version of `tla` available in the path. `tla` must know about the repositories you pass to 'git archimport'."
msgstr "O comando 'git archimport' utiliza o `tla` em segundo plano de forma exclusiva para acessar o repositório Arch.  Verifique se você tem uma versão recente do `tla` disponível no caminho. O `tla` deve saber sobre os repositórios que você passa ao 'git archimport'."

#. type: Plain text
#: en/git-archimport.txt:42
#, priority:100
msgid "For the initial import, 'git archimport' expects to find itself in an empty directory. To follow the development of a project that uses Arch, rerun 'git archimport' with the same parameters as the initial import to perform incremental imports."
msgstr "Para a importação inicial, o comando 'git archimport' espera se encontrar num diretório vazio. Para acompanhar o desenvolvimento de um projeto que utilize o Arch, execute novamente o comando 'git archimport' com os mesmos parâmetros que a importação inicial para que as importações incrementais possam ser executadas."

#. type: Plain text
#: en/git-archimport.txt:49
#, priority:100
msgid "While 'git archimport' will try to create sensible branch names for the archives that it imports, it is also possible to specify Git branch names manually.  To do so, write a Git branch name after each <archive>/<branch> parameter, separated by a colon.  This way, you can shorten the Arch branch names and convert Arch jargon to Git jargon, for example mapping a \"PROJECT{litdd}devo{litdd}VERSION\" branch to \"master\"."
msgstr "Enquanto o 'git archimport' tentará criar os nomes exatos das ramificações para os arquivos importados, também é possível especificar os nomes das ramificações do Git manualmente.  Para fazer isso, escreva cada nome do ramo após cada parâmetro <arquivo>/<ramo>, separado por dois pontos.  Dessa forma, você pode encurtar os nomes das ramificações do Arch e converter o jargão do Arch para o Git mapeando uma ramificação \"PROJECT{litdd}devo{litdd}VERSION\" para \"master\" por exemplo."

#. type: Plain text
#: en/git-archimport.txt:54
#, priority:100
msgid "Associating multiple Arch branches to one Git branch is possible; the result will make the most sense only if no commits are made to the first branch, after the second branch is created.  Still, this is useful to convert Arch repositories that had been rotated periodically."
msgstr "É possível associar as várias ramificações do Arch numa ramificação do Git; o resultado fará mais sentido quando nenhum commit for feito na primeira ramificação, depois que o segundo ramo for criado.  Ainda assim, é útil para converter os repositórios do Arch que foram rotacionados periodicamente."

#. type: Title -
#: en/git-archimport.txt:57
#, no-wrap, priority:100
msgid "MERGES"
msgstr "MESCLAGENS"

#. type: Plain text
#: en/git-archimport.txt:63
#, priority:100
msgid "Patch merge data from Arch is used to mark merges in Git as well. Git does not care much about tracking patches, and only considers a merge when a branch incorporates all the commits since the point they forked. The end result is that Git will have a good idea of how far branches have diverged. So the import process does lose some patch-trading metadata."
msgstr "Os dados da mesclagem dos patches do Arch também são utilizados para marcar as mesclagens no Git. O Git não se importa muito com o rastreamento do patches, apenas considera uma mesclagem quando um ramo incorpora todos os commits desde o ponto em que eles foram bifurcados. O resultado final é que o Git terá uma boa ideia de quão longe as ramificações divergem. Portanto, o processo de importação perde alguns metadados durante a negociação dos patches."

#. type: Plain text
#: en/git-archimport.txt:67
#, priority:100
msgid "Fortunately, when you try and merge branches imported from Arch, Git will find a good merge base, and it has a good chance of identifying patches that have been traded out-of-sequence between the branches."
msgstr "Felizmente, quando você tenta mesclar as ramificações importadas do Arch, o Git encontrará uma boa base para a mesclagem e tem uma boa chance de identificar quais os patches foram trocados fora da sequência entre os ramos."

#. type: Plain text
#: en/git-archimport.txt:73
#, priority:100
msgid "Display usage."
msgstr "Exiba a utilização."

#. type: Plain text
#: en/git-archimport.txt:76
#, priority:100
msgid "Verbose output."
msgstr "Saída detalhada."

#. type: Labeled list
#: en/git-archimport.txt:77
#, no-wrap, priority:100
msgid "-T"
msgstr "-T"

#. type: Plain text
#: en/git-archimport.txt:80
#, priority:100
msgid "Many tags. Will create a tag for every commit, reflecting the commit name in the Arch repository."
msgstr "Muitas tags. Criará uma tag para cada commit, refletindo o nome do commit no repositório do Arch."

#. type: Plain text
#: en/git-archimport.txt:85
#, priority:100
msgid "Use the fast patchset import strategy.  This can be significantly faster for large trees, but cannot handle directory renames or permissions changes.  The default strategy is slow and safe."
msgstr "Use a estratégia de importação rápida no conjunto dos patches.  Isso pode acelerar o processo significativamente em árvores muito grandes, no entanto não pode lidar com as renomeações dos diretórios ou das alterações das permissões.  A estratégia predefinida é lenta e segura."

#. type: Labeled list
#: en/git-archimport.txt:86 en/git-commit.txt:308 en/git-grep.txt:183 en/git-ls-files.txt:47 en/git-merge-index.txt:29
#, ignore-same, no-wrap, priority:280
msgid "-o"
msgstr "-o"

#. type: Plain text
#: en/git-archimport.txt:93
#, priority:100
msgid "Use this for compatibility with old-style branch names used by earlier versions of 'git archimport'.  Old-style branch names were category{litdd}branch, whereas new-style branch names are archive,category{litdd}branch{litdd}version.  In both cases, names given on the command-line will override the automatically-generated ones."
msgstr "Use isso para ter a compatibilidade com os nomes das ramificações do estilo antigo utilizados pelas versões anteriores ao comando 'git archimport'.  Os nomes das ramificações no estilo antigo foram as ramificações da categoria {litdd}, enquanto os nomes das ramificações no novo estilo são \"archive\", category{litdd}branch{litdd}version.  Nos dois casos, os nomes dos fornecidos na linha de comando substituirão os que forem gerados automaticamente."

#. type: Labeled list
#: en/git-archimport.txt:94
#, no-wrap, priority:100
msgid "-D <depth>"
msgstr "-D <profundidade>"

#. type: Plain text
#: en/git-archimport.txt:98
#, priority:100
msgid "Follow merge ancestry and attempt to import trees that have been merged from.  Specify a depth greater than 1 if patch logs have been pruned."
msgstr "Siga a mesclagem de ascendência e tente importar as árvores das quais foram mescladas.  Informe uma profundidade maior que 1 caso os registros logs do patch tenham sido removidos."

#. type: Plain text
#: en/git-archimport.txt:102
#, priority:100
msgid "Attempt to auto-register archives at `http://mirrors.sourcecontrol.net` This is particularly useful with the -D option."
msgstr "Tente registrar automaticamente os arquivos em `http://mirrors.sourcecontrol.net` muito útil se utilizado com a opção `-D`."

#. type: Labeled list
#: en/git-archimport.txt:103
#, no-wrap, priority:100
msgid "-t <tmpdir>"
msgstr "-t <tmpdir>"

#. type: Plain text
#: en/git-archimport.txt:105
#, priority:100
msgid "Override the default tempdir."
msgstr "Sobrescreve o diretório temporário predefinido."

#. type: Labeled list
#: en/git-archimport.txt:107
#, no-wrap, priority:100
msgid "<archive>/<branch>"
msgstr "<arquivo>/<ramo>"

#. type: Plain text
#: en/git-archimport.txt:109
#, priority:100
msgid "<archive>/<branch> identifier in a format that `tla log` understands."
msgstr "<arquivo>/<ramo > é um identificador em um formato que o `tla log` compreende."

#. type: Title =
#: en/git-archive.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-archive(1)"
msgstr "git-archive(1)"

#. type: Plain text
#: en/git-archive.txt:7
#, priority:100
msgid "git-archive - Create an archive of files from a named tree"
msgstr "git-archive - Cria um arquivo dos arquivos vindos de uma determinada árvore"

#. type: Plain text
#: en/git-archive.txt:16
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git archive' [--format=<fmt>] [--list] [--prefix=<prefix>/] [<extra>]\n"
"\t      [-o <file> | --output=<file>] [--worktree-attributes]\n"
"\t      [--remote=<repo> [--exec=<git-upload-archive>]] <tree-ish>\n"
"\t      [<path>...]\n"
msgstr ""
"'git archive' [--format=<fmt>] [--list] [--prefix=<prefixo>/] [<extra>]\n"
"\t      [-o <arquivo> | --output=<arquivo>] [--worktree-attributes]\n"
"\t      [--remote=<repo> [--exec=<arquivo-de-upload-git>]] <árvore>\n"
"\t      [<caminho>...]\n"

#. type: Plain text
#: en/git-archive.txt:23
#, priority:100
msgid "Creates an archive of the specified format containing the tree structure for the named tree, and writes it out to the standard output.  If <prefix> is specified it is prepended to the filenames in the archive."
msgstr "Cria um arquivo no formato informado que contenha uma estrutura de determinada árvore e grava na saída padrão.  Caso o `<prefixo>` seja utilizado, ele será anexado aos nomes dos arquivos no arquivo."

#. type: Plain text
#: en/git-archive.txt:32
#, priority:100
msgid "'git archive' behaves differently when given a tree ID versus when given a commit ID or tag ID.  In the first case the current time is used as the modification time of each file in the archive.  In the latter case the commit time as recorded in the referenced commit object is used instead.  Additionally the commit ID is stored in a global extended pax header if the tar format is used; it can be extracted using 'git get-tar-commit-id'. In ZIP files it is stored as a file comment."
msgstr "O comando 'git archive' se comporta de maneira diferente quando recebe um ID da árvore e quando recebe um ID do commit ou o ID de uma tag.  No primeiro caso, a hora atual é utilizada como a hora da alteração de cada arquivo no arquivo.  Neste último caso, a hora que foi registrada no objeto do commit será utilizado.  Além disso, o ID do commit é armazenado num cabeçalho global estendido pax caso o formato tar seja utilizado; pode ser extraído utilizando o comando 'git get-tar-commit-id'. Nos arquivos ZIP, ele é armazenado como um comentário do arquivo."

#. type: Labeled list
#: en/git-archive.txt:36
#, no-wrap, priority:100
msgid "--format=<fmt>"
msgstr "--format=<fmt>"

#. type: Plain text
#: en/git-archive.txt:44
#, fuzzy, priority:100
#| msgid "Format of the resulting archive: 'tar' or 'zip'. If this option is not given, and the output file is specified, the format is inferred from the filename if possible (e.g. writing to \"foo.zip\" makes the output to be in the zip format). Otherwise the output format is `tar`."
msgid "Format of the resulting archive. Possible values are `tar`, `zip`, `tar.gz`, `tgz`, and any format defined using the configuration option `tar.<format>.command`. If `--format` is not given, and the output file is specified, the format is inferred from the filename if possible (e.g. writing to `foo.zip` makes the output to be in the `zip` format). Otherwise the output format is `tar`."
msgstr "Formato do arquivo resultante: 'tar' ou 'zip'. Caso esta opção não seja utilizada e o arquivo na saída for definido, o tipo do formato será deduzido através do nome do arquivo, quando for possível (ao gravar como \"foo.zip\" faz com que a saída esteja no formato zip por exemplo). Caso contrário, o formato gerado será `tar`."

#. type: Labeled list
#: en/git-archive.txt:46 en/git-branch.txt:174 en/git-config.txt:182 en/git-show-branch.txt:80 en/git-tag.txt:100
#, ignore-same, no-wrap, priority:260
msgid "--list"
msgstr "--list"

#. type: Plain text
#: en/git-archive.txt:48
#, priority:100
msgid "Show all available formats."
msgstr "Exiba todos os formatos disponíveis."

#. type: Plain text
#: en/git-archive.txt:52
#, priority:100
msgid "Report progress to stderr."
msgstr "Relate o progresso para o stderr."

#. type: Labeled list
#: en/git-archive.txt:53 en/git-write-tree.txt:35
#, no-wrap, priority:100
msgid "--prefix=<prefix>/"
msgstr "--prefix=<prefixo>/"

#. type: Plain text
#: en/git-archive.txt:57
#, priority:100
msgid "Prepend <prefix>/ to paths in the archive.  Can be repeated; its rightmost value is used for all tracked files.  See below which value gets used by `--add-file` and `--add-virtual-file`."
msgstr "Anexe o <prefix>/ aos caminhos no arquivo. Pode ser repetido; o seu valor mais à direita é usado para todos os arquivos que estejam sendo rastreados. Veja abaixo qual o valor é utilizado por `--add-file` e por `--add-virtual-file`."

#. type: Labeled list
#: en/git-archive.txt:58
#, no-wrap, priority:100
msgid "-o <file>"
msgstr "-o <arquivo>"

#. type: Plain text
#: en/git-archive.txt:61
#, priority:100
msgid "Write the archive to <file> instead of stdout."
msgstr "Escreva o arquivo para o `<arquivo>` em vez do stdout."

#. type: Labeled list
#: en/git-archive.txt:62
#, no-wrap, priority:100
msgid "--add-file=<file>"
msgstr "--add-file=<arquivo>"

#. type: Plain text
#: en/git-archive.txt:67
#, priority:100
msgid "Add a non-tracked file to the archive.  Can be repeated to add multiple files.  The path of the file in the archive is built by concatenating the value of the last `--prefix` option (if any)  before this `--add-file` and the basename of <file>."
msgstr "Adiciona um arquivo não rastreado ao arquivo.  Pode ser repetido para que seja possível adicionar diversos arquivos.  O caminho do arquivo no arquivo é construído concatenando o valor do último `--prefix` (caso haja) antes deste `--add-file` e o nome principal do <arquivo>."

#. type: Labeled list
#: en/git-archive.txt:68
#, no-wrap, priority:100
msgid "--add-virtual-file=<path>:<content>"
msgstr "--add-virtual-file=<caminho>:<conteúdo>"

#. type: Plain text
#: en/git-archive.txt:73
#, priority:100
msgid "Add the specified contents to the archive.  Can be repeated to add multiple files.  The path of the file in the archive is built by concatenating the value of the last `--prefix` option (if any)  before this `--add-virtual-file` and `<path>`."
msgstr "Adicione o conteúdo especificado ao arquivo.  Pode ser repetido para que seja possível adicionar diversos arquivos.  O caminho do arquivo no arquivo é construído concatenando o valor da última opção `--prefix` (caso haja) antes deste `--add-virtual-file` e `<caminho>`."

#. type: Plain text
#: en/git-archive.txt:80
#, priority:100
msgid "The `<path>` argument can start and end with a literal double-quote character; the contained file name is interpreted as a C-style string, i.e. the backslash is interpreted as escape character. The path must be quoted if it contains a colon, to avoid the colon from being misinterpreted as the separator between the path and the contents, or if the path begins or ends with a double-quote character."
msgstr "O argumento `<caminho>` pode começar e terminar com um caractere literal de aspas duplas; o nome do arquivo contido é interpretado como um texto estilo C, ou seja, a barra invertida é interpretada como caractere de escape. O caminho deve ser citado tenha dois pontos, para evitar que os dois pontos sejam mal interpretados como o separador entre o caminho e o conteúdo, ou, caso o caminho comece ou termine com um caractere de aspas duplas."

#. type: Plain text
#: en/git-archive.txt:84
#, priority:100
msgid "The file mode is limited to a regular file, and the option may be subject to platform-dependent command-line limits. For non-trivial cases, write an untracked file and use `--add-file` instead."
msgstr "O modo do arquivo é limitado a um arquivo regular, a opção pode estar sujeita aos limites da linha de comando que dependem da plataforma. Para casos não triviais, grave um arquivo não rastreado e use `--add-file`."

#. type: Labeled list
#: en/git-archive.txt:85
#, ignore-same, no-wrap, priority:100
msgid "--worktree-attributes"
msgstr "--worktree-attributes"

#. type: Plain text
#: en/git-archive.txt:88
#, priority:100
msgid "Look for attributes in .gitattributes files in the working tree as well (see <<ATTRIBUTES>>)."
msgstr "Procure pelos atributos nos arquivos `.gitattributes` da árvore de trabalho (consulte <<ATRIBUTOS>>)."

#. type: Labeled list
#: en/git-archive.txt:89
#, no-wrap, priority:100
msgid "<extra>"
msgstr "<extra>"

#. type: Plain text
#: en/git-archive.txt:92
#, priority:100
msgid "This can be any options that the archiver backend understands.  See next section."
msgstr "Pode ser qualquer opção que seja compatível com a estrutura do arquivador.  Consulte a próxima seção."

#. type: Labeled list
#: en/git-archive.txt:93
#, no-wrap, priority:100
msgid "--remote=<repo>"
msgstr "--remote=<repo>"

#. type: Plain text
#: en/git-archive.txt:99
#, priority:100
msgid "Instead of making a tar archive from the local repository, retrieve a tar archive from a remote repository. Note that the remote repository may place restrictions on which sha1 expressions may be allowed in `<tree-ish>`. See linkgit:git-upload-archive[1] for details."
msgstr "Em vez de criar um arquivo tar do repositório local, recupere um arquivo tar de um repositório remoto. Observe que o repositório remoto pode colocar restrições sobre quais as expressões sha1 podem ser permitidas na `<árvore>`. Para mais detalhes consulte linkgit:git-upload-archive[1]."

#. type: Labeled list
#: en/git-archive.txt:100
#, ignore-same, no-wrap, priority:100
msgid "--exec=<git-upload-archive>"
msgstr "--exec=<git-upload-archive>"

#. type: Plain text
#: en/git-archive.txt:103
#, priority:100
msgid "Used with --remote to specify the path to the 'git-upload-archive' on the remote side."
msgstr "Utilizado com `--remote` para informar o caminho para o 'git-upload-archive' no lado remoto."

#. type: Labeled list
#: en/git-archive.txt:104 en/git-checkout.txt:354 en/git-diff-index.txt:26 en/git-diff-tree.txt:29 en/git-ls-tree.txt:38 en/git.txt:403
#, no-wrap, priority:240
msgid "<tree-ish>"
msgstr "<árvore>"

#. type: Plain text
#: en/git-archive.txt:106
#, priority:100
msgid "The tree or commit to produce an archive for."
msgstr "A árvore ou o commit que será utilizado para produzir um arquivo."

#. type: Labeled list
#: en/git-archive.txt:107
#, no-wrap, priority:100
msgid "<path>"
msgstr "<caminho>"

#. type: Plain text
#: en/git-archive.txt:111
#, priority:100
msgid "Without an optional path parameter, all files and subdirectories of the current working directory are included in the archive.  If one or more paths are specified, only these are included."
msgstr "Sem um parâmetro opcional do caminho, todos os arquivos e os subdiretórios do diretório de trabalho atual serão incluídos no arquivo.  Caso um ou mais caminhos sejam informados, apenas estes, serão incluídos."

#. type: Title -
#: en/git-archive.txt:113
#, no-wrap, priority:100
msgid "BACKEND EXTRA OPTIONS"
msgstr "OPÇÕES EXTRAS DA ESTRUTURA"

#. type: Title ~
#: en/git-archive.txt:116
#, no-wrap, priority:100
msgid "zip"
msgstr "zip"

#. type: Labeled list
#: en/git-archive.txt:117
#, no-wrap, priority:100
msgid "-<digit>"
msgstr "-<digito>"

#. type: Plain text
#: en/git-archive.txt:122
#, priority:100
msgid "Specify compression level.  Larger values allow the command to spend more time to compress to smaller size.  Supported values are from `-0` (store-only) to `-9` (best ratio).  Default is `-6` if not given."
msgstr "Especifica o nível da compressão.  Valores maiores permitem que o comando passe mais tempo de compressão visando um tamanho menor.  Os valores compatíveis vão de `-0` (apenas armazena) até `-9` (melhor proporção).  A predefinição é `-6` caso nada seja usado."

#. type: Title ~
#: en/git-archive.txt:124
#, no-wrap, priority:100
msgid "tar"
msgstr "tar"

#. type: Labeled list
#: en/git-archive.txt:125 en/rev-list-options.txt:16
#, no-wrap, priority:260
msgid "-<number>"
msgstr "-<quantidade>"

#. type: Plain text
#: en/git-archive.txt:130
#, priority:100
msgid "Specify compression level. The value will be passed to the compression command configured in `tar.<format>.command`. See manual page of the configured command for the list of supported levels and the default level if this option isn't specified."
msgstr "Especifique o nível de compressão. O valor será passado ao comando de compressão configurado em `tar.<formato>.comando`. Consulte a página do manual do comando para conhecer a lista dos níveis suportados e o nível padrão caso essa opção não seja definida."

#. type: Labeled list
#: en/git-archive.txt:134
#, no-wrap, priority:100
msgid "tar.umask"
msgstr "tar.umask"

#. type: Plain text
#: en/git-archive.txt:141
#, priority:100
msgid "This variable can be used to restrict the permission bits of tar archive entries.  The default is 0002, which turns off the world write bit.  The special value \"user\" indicates that the archiving user's umask will be used instead.  See umask(2) for details.  If `--remote` is used then only the configuration of the remote repository takes effect."
msgstr "Essa variável pode ser utilizada para restringir os bits de permissão das entradas do arquivo tar.  A predefinição é 0002, que desliga o bit de gravação global.  O valor especial \"user\" (usuário) indica que o umask do arquivo do usuário será utilizado.  Para mais detalhes consulte umask(2).  Caso `--remote` seja utilizado, somente a configuração do repositório remoto entrará em vigor."

#. type: Labeled list
#: en/git-archive.txt:142
#, no-wrap, priority:100
msgid "tar.<format>.command"
msgstr "tar.<formato>.comando"

#. type: Plain text
#: en/git-archive.txt:149
#, fuzzy, priority:100
#| msgid "This variable specifies a shell command through which the tar output generated by `git archive` should be piped. The command is executed using the shell with the generated tar file on its standard input, and should produce the final output on its standard output. Any compression-level options will be passed to the command (e.g., \"-9\"). An output file with the same extension as `<format>` will be use this format if no other format is given."
msgid "This variable specifies a shell command through which the tar output generated by `git archive` should be piped. The command is executed using the shell with the generated tar file on its standard input, and should produce the final output on its standard output. Any compression-level options will be passed to the command (e.g., `-9`)."
msgstr "Esta variável define um comando shell por onde o tar será gerado pelo `git archive` através de um \"pipe\". O comando é executado utilizando o shell com o arquivo tar gerado na sua entrada padrão e deve produzir a saída final na sua saída padrão. Quaisquer opções do nível de compressão serão passadas ao comando (\"-9\" por exemplo). Um arquivo gerado com a mesma extensão que `<formato>`, este será utilizado caso nenhum outro seja informado."

#. type: Plain text
#: en/git-archive.txt:153
#, fuzzy, priority:100
#| msgid "The \"tar.gz\" and \"tgz\" formats are defined automatically and default to `gzip -cn`. You may override them with custom commands."
msgid "The `tar.gz` and `tgz` formats are defined automatically and use the magic command `git archive gzip` by default, which invokes an internal implementation of gzip."
msgstr "Os formatos \"tar.gz\" e \"tgz\" são definidos automaticamente e predefinidos para `gzip -cn`. Você pode substituí-los com comandos personalizados."

#. type: Labeled list
#: en/git-archive.txt:154
#, no-wrap, priority:100
msgid "tar.<format>.remote"
msgstr "tar.<formato>.remoto"

#. type: Plain text
#: en/git-archive.txt:159
#, fuzzy, priority:100
#| msgid "If true, enable `<format>` for use by remote clients via linkgit:git-upload-archive[1]. Defaults to false for user-defined formats, but true for the \"tar.gz\" and \"tgz\" formats."
msgid "If true, enable the format for use by remote clients via linkgit:git-upload-archive[1]. Defaults to false for user-defined formats, but true for the `tar.gz` and `tgz` formats."
msgstr "Caso seja 'true', ative o `<formato>` para que seja utilizado por clientes remotos através do linkgit:git-upload-archive[1]. A predefinição retorna para 'false' nos formatos definidos pelo usuário, mas 'true' para os formatos \"tar.gz\" e \"tgz\"."

#. type: Title -
#: en/git-archive.txt:162
#, no-wrap, priority:100
msgid "ATTRIBUTES"
msgstr "ATRIBUTOS"

#. type: Labeled list
#: en/git-archive.txt:164
#, no-wrap, priority:100
msgid "export-ignore"
msgstr "export-ignore"

#. type: Plain text
#: en/git-archive.txt:167
#, priority:100
msgid "Files and directories with the attribute export-ignore won't be added to archive files.  See linkgit:gitattributes[5] for details."
msgstr "Arquivos e os diretórios com o atributo `export-ignore` não serão adicionados aos arquivos compactados.  Para mais detalhes consulte linkgit:gitattributes[5]."

#. type: Labeled list
#: en/git-archive.txt:168
#, no-wrap, priority:100
msgid "export-subst"
msgstr "export-subst"

#. type: Plain text
#: en/git-archive.txt:172
#, priority:100
msgid "If the attribute export-subst is set for a file then Git will expand several placeholders when adding this file to an archive.  See linkgit:gitattributes[5] for details."
msgstr "Caso o atributo `export-subst` esteja definido para um arquivo, o Git expandirá os vários espaços reservados ao adicionar este arquivo num arquivo.  Para mais detalhes consulte linkgit:gitattributes[5]."

#. type: Plain text
#: en/git-archive.txt:180
#, priority:100
msgid "Note that attributes are by default taken from the `.gitattributes` files in the tree that is being archived.  If you want to tweak the way the output is generated after the fact (e.g. you committed without adding an appropriate export-ignore in its `.gitattributes`), adjust the checked out `.gitattributes` file as necessary and use `--worktree-attributes` option.  Alternatively you can keep necessary attributes that should apply while archiving any tree in your `$GIT_DIR/info/attributes` file."
msgstr "Observe que, por predefinição, os atributos são obtidos através dos arquivos `.gitattributes` na árvore que está sendo arquivada.  Caso queira ajustar a maneira como a saída é gerada após o fato (você fez um commit sem adicionar um `export-ignore` adequado no seus `.gitattributes` por exemplo), ajuste o arquivo `.gitattributes` conforme seja necessário e utilize a opção `--worktree-attributes`.  Como alternativa, você pode manter os atributos necessários que devem ser aplicados ao arquivar qualquer árvore no seu arquivo `$GIT_DIR/info/attributes`."

#. type: Labeled list
#: en/git-archive.txt:183
#, no-wrap, priority:100
msgid "`git archive --format=tar --prefix=junk/ HEAD | (cd /var/tmp/ && tar xf -)`"
msgstr "`git archive --format=tar --prefix=junk/ HEAD | (cd /var/tmp/ && tar xf -)`"

#. type: Plain text
#: en/git-archive.txt:188
#, priority:100
msgid "Create a tar archive that contains the contents of the latest commit on the current branch, and extract it in the `/var/tmp/junk` directory."
msgstr "Crie um arquivo tar com o conteúdo do commit mais recente no ramo atual e extraia-o no diretório `/var/tmp/junk`."

#. type: Labeled list
#: en/git-archive.txt:189
#, no-wrap, priority:100
msgid "`git archive --format=tar --prefix=git-1.4.0/ v1.4.0 | gzip >git-1.4.0.tar.gz`"
msgstr "`git archive --format=tar --prefix=git-1.4.0/ v1.4.0 | gzip >git-1.4.0.tar.gz`"

#. type: Plain text
#: en/git-archive.txt:192
#, priority:100
msgid "Create a compressed tarball for v1.4.0 release."
msgstr "Crie um \"tarball\" comprimido para a versão v1.4.0."

#. type: Labeled list
#: en/git-archive.txt:193
#, no-wrap, priority:100
msgid "`git archive --format=tar.gz --prefix=git-1.4.0/ v1.4.0 >git-1.4.0.tar.gz`"
msgstr "`git archive --format=tar.gz --prefix=git-1.4.0/ v1.4.0 >git-1.4.0.tar.gz`"

#. type: Plain text
#: en/git-archive.txt:196
#, priority:100
msgid "Same as above, but using the builtin tar.gz handling."
msgstr "O mesmo que acima porém lidando com o \"tar.gz\" embutido."

#. type: Labeled list
#: en/git-archive.txt:197
#, no-wrap, priority:100
msgid "`git archive --prefix=git-1.4.0/ -o git-1.4.0.tar.gz v1.4.0`"
msgstr "`git archive --prefix=git-1.4.0/ -o git-1.4.0.tar.gz v1.4.0`"

#. type: Plain text
#: en/git-archive.txt:200
#, priority:100
msgid "Same as above, but the format is inferred from the output file."
msgstr "O mesmo que acima, porém o formato é deduzido do arquivo gerado."

#. type: Labeled list
#: en/git-archive.txt:201
#, no-wrap, priority:100
msgid "`git archive --format=tar --prefix=git-1.4.0/ v1.4.0^{tree} | gzip >git-1.4.0.tar.gz`"
msgstr "`git archive --format=tar --prefix=git-1.4.0/ v1.4.0^{tree} | gzip >git-1.4.0.tar.gz`"

#. type: Plain text
#: en/git-archive.txt:205
#, priority:100
msgid "Create a compressed tarball for v1.4.0 release, but without a global extended pax header."
msgstr "Crie um tarball compactado para a versão v1.4.0, porém sem um cabeçalho pax global estendido."

#. type: Labeled list
#: en/git-archive.txt:206
#, no-wrap, priority:100
msgid "`git archive --format=zip --prefix=git-docs/ HEAD:Documentation/ > git-1.4.0-docs.zip`"
msgstr "`git archive --format=zip --prefix=git-docs/ HEAD:Documentation/ > git-1.4.0-docs.zip`"

#. type: Plain text
#: en/git-archive.txt:210
#, priority:100
msgid "Put everything in the current head's Documentation/ directory into 'git-1.4.0-docs.zip', with the prefix 'git-docs/'."
msgstr "Coloque tudo no diretório Documentation/ do cabeçalho atual no arquivo 'git-1.4.0-docs.zip', com o prefixo 'git-docs/'."

#. type: Labeled list
#: en/git-archive.txt:211
#, no-wrap, priority:100
msgid "`git archive -o latest.zip HEAD`"
msgstr "`git archive -o latest.zip HEAD`"

#. type: Plain text
#: en/git-archive.txt:216
#, priority:100
msgid "Create a Zip archive that contains the contents of the latest commit on the current branch. Note that the output format is inferred by the extension of the output file."
msgstr "Crie um arquivo Zip com o conteúdo do commit mais recente na ramificação atual. Observe que o formato gerado é deduzido através da extensão do arquivo utilizado na saída."

#. type: Labeled list
#: en/git-archive.txt:217
#, no-wrap, priority:100
msgid "`git archive -o latest.tar --prefix=build/ --add-file=configure --prefix= HEAD`"
msgstr "`git archive -o latest.tar --prefix=build/ --add-file=configure --prefix= HEAD`"

#. type: Plain text
#: en/git-archive.txt:222
#, priority:100
msgid "Creates a tar archive that contains the contents of the latest commit on the current branch with no prefix and the untracked file 'configure' with the prefix 'build/'."
msgstr "Cria um arquivo tar que contém o conteúdo do último commit no ramo atual sem o prefixo e o arquivo não rastreado 'configure' com o prefixo 'build/'."

#. type: Labeled list
#: en/git-archive.txt:223
#, no-wrap, priority:100
msgid "`git config tar.tar.xz.command \"xz -c\"`"
msgstr "`git config tar.tar.xz.command \"xz -c\"`"

#. type: Plain text
#: en/git-archive.txt:228
#, priority:100
msgid "Configure a \"tar.xz\" format for making LZMA-compressed tarfiles.  You can use it specifying `--format=tar.xz`, or by creating an output file like `-o foo.tar.xz`."
msgstr "Configure um formato \"tar.xz\" para criar arquivo tarfiles compactados com LZMA.  Você pode utilizá-lo utilizando a opção `--format=tar.xz` ou criando um arquivo gerado com `-o foo.tar.xz`."

#. type: Title =
#: en/git-bisect.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-bisect(1)"
msgstr "git-bisect(1)"

#. type: Plain text
#: en/git-bisect.txt:7
#, priority:100
msgid "git-bisect - Use binary search to find the commit that introduced a bug"
msgstr "git-bisect - Utilize a pesquisa binária para localizar o commit que introduziu um bug"

#. type: Plain text
#: en/git-bisect.txt:13
#, no-wrap, priority:100
msgid "'git bisect' <subcommand> <options>\n"
msgstr "'git bisect' <subcomando> <opções>\n"

#. type: Plain text
#: en/git-bisect.txt:18 en/git-reflog.txt:18
#, priority:100
msgid "The command takes various subcommands, and different options depending on the subcommand:"
msgstr "O comando assume vários subcomandos das diferentes opções dependendo do subcomando:"

#. type: Plain text
#: en/git-bisect.txt:31
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
" git bisect start [--term-{new,bad}=<term> --term-{old,good}=<term>]\n"
"\t\t  [--no-checkout] [--first-parent] [<bad> [<good>...]] [--] [<paths>...]\n"
" git bisect (bad|new|<term-new>) [<rev>]\n"
" git bisect (good|old|<term-old>) [<rev>...]\n"
" git bisect terms [--term-good | --term-bad]\n"
" git bisect skip [(<rev>|<range>)...]\n"
" git bisect reset [<commit>]\n"
" git bisect (visualize|view)\n"
" git bisect replay <logfile>\n"
" git bisect log\n"
" git bisect run <cmd>...\n"
" git bisect help\n"
msgstr ""
" git bisect start [--term-{new,bad}=<term> --term-{old,good}=<term>]\n"
"\t\t    [--no-checkout] [--first-parent] [<bad> [<good>...]] [--] [<paths>...]\n"
" git bisect (bad|new|<novo-termo>) [<rev>]\n"
" git bisect (good|old|<termo-antigo>) [<rev>...]\n"
" git bisect terms [--term-good | --term-bad]\n"
" git bisect skip [(<rev>|<range>)...]\n"
" git bisect reset [<commit>]\n"
" git bisect (visualize|view)\n"
" git bisect replay <logfile>\n"
" git bisect log\n"
" git bisect run <cmd>...\n"
" git bisect help\n"

#. type: Plain text
#: en/git-bisect.txt:40
#, priority:100
msgid "This command uses a binary search algorithm to find which commit in your project's history introduced a bug. You use it by first telling it a \"bad\" commit that is known to contain the bug, and a \"good\" commit that is known to be before the bug was introduced. Then `git bisect` picks a commit between those two endpoints and asks you whether the selected commit is \"good\" or \"bad\". It continues narrowing down the range until it finds the exact commit that introduced the change."
msgstr "Este comando utiliza um algoritmo de pesquisa binária para descobrir qual o commit no histórico do seu projeto introduziu um \"bug\" (problema). Você o utiliza informando primeiro a um commit \"bad\" (ruim) que é informado por conter o bug e um commit \"good\" (bom) informado antes da introdução do bug. Então o comando `git bisect` seleciona um commit entre estes dois pontos extremos e pergunta se o commit selecionado é \"bom\" ou \"ruim\". Continua estreitando o intervalo até encontrar o commit exato responsável pela introdução da alteração."

#. type: Plain text
#: en/git-bisect.txt:47
#, priority:100
msgid "In fact, `git bisect` can be used to find the commit that changed *any* property of your project; e.g., the commit that fixed a bug, or the commit that caused a benchmark's performance to improve. To support this more general usage, the terms \"old\" and \"new\" can be used in place of \"good\" and \"bad\", or you can choose your own terms. See section \"Alternate terms\" below for more information."
msgstr "De fato, o comando `git bisect` pode ser utilizado para encontrar o commit que alterou *qualquer* propriedade do seu projeto; um commit que corrigiu um problema ou um commit que fez com que o desempenho de um benchmark melhorasse por exemplo. Para dar apoio a nesta utilização mais genérica, os termos \"old\" (antigo) e \"new\" (novo) podem ser utilizados no lugar de \"good\" (bom) e \"bad\" (ruim), ou escolha os seus próprios termos. Consulte a seção \"Termos alternativos\" abaixo para obter mais informações."

#. type: Title ~
#: en/git-bisect.txt:49
#, no-wrap, priority:100
msgid "Basic bisect commands: start, bad, good"
msgstr "Comandos \"bisect\" básicos : `start` (começar), `bad` (ruim), `good` (bom)"

#. type: Plain text
#: en/git-bisect.txt:54
#, priority:100
msgid "As an example, suppose you are trying to find the commit that broke a feature that was known to work in version `v2.6.13-rc2` of your project. You start a bisect session as follows:"
msgstr "Como exemplo, suponha que você esteja tentando encontrar um commit que estragou um recurso que funcionava na versão `v2.6.13-rc2` do seu projeto. Você começa uma seção \"besect\" como demonstrado abaixo:"

#. type: delimited block -
#: en/git-bisect.txt:59
#, no-wrap, priority:100
msgid ""
"$ git bisect start\n"
"$ git bisect bad                 # Current version is bad\n"
"$ git bisect good v2.6.13-rc2    # v2.6.13-rc2 is known to be good\n"
msgstr ""
"$ git bisect start\n"
"$ git bisect bad                 # A versão atual está ruim\n"
"$ git bisect good v2.6.13-rc2    # v2.6.13-rc2 é conhecido por estar bom\n"

#. type: Plain text
#: en/git-bisect.txt:64
#, priority:100
msgid "Once you have specified at least one bad and one good commit, `git bisect` selects a commit in the middle of that range of history, checks it out, and outputs something similar to the following:"
msgstr "Uma vez que você tenha utilizado pelo menos um commit ruim e um commit bom, o comando `git bisect` seleciona um commit no meio deste intervalo do histórico, faz a averiguação e produz algo por exemplo:"

#. type: delimited block -
#: en/git-bisect.txt:67
#, no-wrap, priority:100
msgid "Bisecting: 675 revisions left to test after this (roughly 10 steps)\n"
msgstr "Bisecting: 675 revisões deixadas para testar depois disso (aproximadamente 10 passos)\n"

#. type: Plain text
#: en/git-bisect.txt:71
#, priority:100
msgid "You should now compile the checked-out version and test it. If that version works correctly, type"
msgstr "Agora você deve compilar a versão com check-out e testá-la. Caso esta versão não funcione corretamente, digite"

#. type: delimited block -
#: en/git-bisect.txt:74
#, no-wrap, priority:100
msgid "$ git bisect good\n"
msgstr "$ git bisect good\n"

#. type: Plain text
#: en/git-bisect.txt:77
#, priority:100
msgid "If that version is broken, type"
msgstr "Se essa versão estiver quebrada, digite"

#. type: delimited block -
#: en/git-bisect.txt:80
#, no-wrap, priority:100
msgid "$ git bisect bad\n"
msgstr "$ git bisect bad\n"

#. type: Plain text
#: en/git-bisect.txt:83
#, priority:100
msgid "Then `git bisect` will respond with something like"
msgstr "Então o comando `git bisect` irá responder algo como"

#. type: delimited block -
#: en/git-bisect.txt:86
#, no-wrap, priority:100
msgid "Bisecting: 337 revisions left to test after this (roughly 9 steps)\n"
msgstr "Bisecting: 337 revisões deixadas para testar depois disso (aproximadamente 9 passos)\n"

#. type: Plain text
#: en/git-bisect.txt:91
#, priority:100
msgid "Keep repeating the process: compile the tree, test it, and depending on whether it is good or bad run `git bisect good` or `git bisect bad` to ask for the next commit that needs testing."
msgstr "Continue repetindo o processo: compile a árvore, teste-a e dependendo se ela for boa ou ruim, execute o comando `git bisect good` ou `git bisect bad` para solicitar o próximo commit que precisa ser testado."

#. type: Plain text
#: en/git-bisect.txt:95
#, priority:100
msgid "Eventually there will be no more revisions left to inspect, and the command will print out a description of the first bad commit. The reference `refs/bisect/bad` will be left pointing at that commit."
msgstr "Eventualmente, não haverá mais revisões a serem inspecionadas e o comando exibirá uma descrição do primeiro commit ruim. A referência `refs/bisect/bad` será deixada apontando para o commit."

#. type: Title ~
#: en/git-bisect.txt:98
#, no-wrap, priority:100
msgid "Bisect reset"
msgstr "Bisect reset"

#. type: Plain text
#: en/git-bisect.txt:102
#, priority:100
msgid "After a bisect session, to clean up the bisection state and return to the original HEAD, issue the following command:"
msgstr "Para limpar a condição geral bisseção e retornar ao `HEAD` original, execute o seguinte comando:"

#. type: delimited block -
#: en/git-bisect.txt:105
#, no-wrap, priority:100
msgid "$ git bisect reset\n"
msgstr "$ git bisect reset\n"

#. type: Plain text
#: en/git-bisect.txt:110
#, priority:100
msgid "By default, this will return your tree to the commit that was checked out before `git bisect start`.  (A new `git bisect start` will also do that, as it cleans up the old bisection state.)"
msgstr "É predefinido que isso faça com que a sua árvore retorne para o commit que foi retirado antes do `git bisect start`.  (Um novo `git bisect start` também fará isso, pois limpa a condição antiga da bisseção.)"

#. type: Plain text
#: en/git-bisect.txt:113
#, priority:100
msgid "With an optional argument, you can return to a different commit instead:"
msgstr "Com um argumento opcional, você pode retornar para um commit diferente:"

#. type: delimited block -
#: en/git-bisect.txt:116
#, no-wrap, priority:100
msgid "$ git bisect reset <commit>\n"
msgstr "$ git bisect reset <commit>\n"

#. type: Plain text
#: en/git-bisect.txt:121
#, priority:100
msgid "For example, `git bisect reset bisect/bad` will check out the first bad revision, while `git bisect reset HEAD` will leave you on the current bisection commit and avoid switching commits at all."
msgstr "Por exemplo, `git bisect reset bisect/bad` irá verificar a primeira revisão ruim enquanto o `git bisect reset HEAD` deixará você no commit atual da bisseção evitando a alternância para outros commits."

#. type: Title ~
#: en/git-bisect.txt:124
#, no-wrap, priority:100
msgid "Alternate terms"
msgstr "Termos alternativos"

#. type: Plain text
#: en/git-bisect.txt:132
#, priority:100
msgid "Sometimes you are not looking for the commit that introduced a breakage, but rather for a commit that caused a change between some other \"old\" state and \"new\" state. For example, you might be looking for the commit that introduced a particular fix. Or you might be looking for the first commit in which the source-code filenames were finally all converted to your company's naming standard. Or whatever."
msgstr "Às vezes, você não está procurando por um commit que introduziu um problema, mas sim um commit que causou uma alteração \"antiga\" entre alguma condição \"nova\". Você pode estar procurando por um commit que introduziu uma correção em específico por exemplo. Ou você pode estar procurando o primeiro commit onde os nomes dos arquivos do código-fonte foram finalmente convertidos para o padrão de nomes da sua empresa. Ou algo assim."

#. type: Plain text
#: en/git-bisect.txt:138
#, priority:100
msgid "In such cases it can be very confusing to use the terms \"good\" and \"bad\" to refer to \"the state before the change\" and \"the state after the change\". So instead, you can use the terms \"old\" and \"new\", respectively, in place of \"good\" and \"bad\". (But note that you cannot mix \"good\" and \"bad\" with \"old\" and \"new\" in a single session.)"
msgstr "Nesses casos, pode ser muito confuso utilizar as opções \"good\" e \"bad\" para se referir a \"condição antes da mudança\" e \"a condição após a mudança\". Portanto, você pode utilizar os termos \"old\" e \"new\" respectivamente, no lugar de \"good\" e \"bad\". (Observe que não é possível misturar \"good\" e \"bad\" com \"old\" e \"new\" numa única sessão.)"

#. type: Plain text
#: en/git-bisect.txt:145
#, priority:100
msgid "In this more general usage, you provide `git bisect` with a \"new\" commit that has some property and an \"old\" commit that doesn't have that property. Each time `git bisect` checks out a commit, you test if that commit has the property. If it does, mark the commit as \"new\"; otherwise, mark it as \"old\". When the bisection is done, `git bisect` will report which commit introduced the property."
msgstr "Neste uso mais geral, você utiliza o comando `git bisect` com um commit \"new\" que tem alguma propriedade e um commit \"old\" que não tem nenhuma. Cada vez que o comando `git bisect` faz a verificação de um commit, você testa se o commit tem a propriedade. Em caso afirmativo, marque o commit como \"new\"; Caso contrário, marque-o como \"old\". Quando a bisseção tiver sido concluída, o comando `git bisect` informará qual o commit que introduziu a propriedade."

#. type: Plain text
#: en/git-bisect.txt:149
#, priority:100
msgid "To use \"old\" and \"new\" instead of \"good\" and bad, you must run `git bisect start` without commits as argument and then run the following commands to add the commits:"
msgstr "Para utilizar \"old\" e \"new\" em vez de \"good\" e \"bad\", você deve executar `git bisect start` sem nenhum commit e depois executar os seguintes comandos para adicionar os commits:"

#. type: delimited block -
#: en/git-bisect.txt:152
#, no-wrap, priority:100
msgid "git bisect old [<rev>]\n"
msgstr "git bisect old [<rev>]\n"

#. type: Plain text
#: en/git-bisect.txt:155
#, priority:100
msgid "to indicate that a commit was before the sought change, or"
msgstr "para indicar que um commit foi feito antes da alteração solicitada, ou"

#. type: delimited block -
#: en/git-bisect.txt:158
#, ignore-ellipsis, no-wrap, priority:100
msgid "git bisect new [<rev>...]\n"
msgstr "git bisect new [<rev>...]\n"

#. type: Plain text
#: en/git-bisect.txt:161
#, priority:100
msgid "to indicate that it was after."
msgstr "para indicar que foi depois."

#. type: Plain text
#: en/git-bisect.txt:163
#, priority:100
msgid "To get a reminder of the currently used terms, use"
msgstr "Para receber um lembrete dos termos utilizados no momento, utilize"

#. type: delimited block -
#: en/git-bisect.txt:166
#, no-wrap, priority:100
msgid "git bisect terms\n"
msgstr "git bisect terms\n"

#. type: Plain text
#: en/git-bisect.txt:170
#, priority:100
msgid "You can get just the old (respectively new) term with `git bisect terms --term-old` or `git bisect terms --term-good`."
msgstr "Você pode obter apenas o termo antigo (respectivamente novo) com `git bisect terms --term-old` ou `git bisect terms --term-good`."

#. type: Plain text
#: en/git-bisect.txt:175
#, ignore-ellipsis, priority:100
msgid "If you would like to use your own terms instead of \"bad\"/\"good\" or \"new\"/\"old\", you can choose any names you like (except existing bisect subcommands like `reset`, `start`, ...) by starting the bisection using"
msgstr "Caso queira utilizar os seus próprios termos em vez de \"bad\"/\"good\" ou \"new\"/\"old\", escolha qualquer nome que quiser (exceto os subcomandos bisect já existentes como `reset`, `start`, ...) iniciando uma bisseção utilizando"

#. type: delimited block -
#: en/git-bisect.txt:178
#, no-wrap, priority:100
msgid "git bisect start --term-old <term-old> --term-new <term-new>\n"
msgstr "git bisect start --term-old <termo-antigo> --term-new <novo-termo>\n"

#. type: Plain text
#: en/git-bisect.txt:182
#, priority:100
msgid "For example, if you are looking for a commit that introduced a performance regression, you might use"
msgstr "Caso esteja procurando por um commit que introduziu uma regressão ao desempenho, poderá utilizar por exemplo"

#. type: delimited block -
#: en/git-bisect.txt:185
#, no-wrap, priority:100
msgid "git bisect start --term-old fast --term-new slow\n"
msgstr "git bisect start --term-old fast --term-new slow\n"

#. type: Plain text
#: en/git-bisect.txt:188
#, priority:100
msgid "Or if you are looking for the commit that fixed a bug, you might use"
msgstr "Ou caso esteja procurando o commit que corrigiu um problema, você pode usar"

#. type: delimited block -
#: en/git-bisect.txt:191
#, no-wrap, priority:100
msgid "git bisect start --term-new fixed --term-old broken\n"
msgstr "git bisect start --term-new fixed --term-old broken\n"

#. type: Plain text
#: en/git-bisect.txt:195
#, priority:100
msgid "Then, use `git bisect <term-old>` and `git bisect <term-new>` instead of `git bisect good` and `git bisect bad` to mark commits."
msgstr "Então, utilize `git bisect <termo-antigo>` e `git bisect <novo-termo>` em vez de `git bisect good` e `git bisect bad` para marcar os commits."

#. type: Title ~
#: en/git-bisect.txt:197
#, no-wrap, priority:100
msgid "Bisect visualize/view"
msgstr "Bisect visualize/observe"

#. type: Plain text
#: en/git-bisect.txt:202
#, priority:100
msgid "To see the currently remaining suspects in 'gitk', issue the following command during the bisection process (the subcommand `view` can be used as an alternative to `visualize`):"
msgstr "Para ver os suspeitos restantes no 'gitk', utilize o seguinte comando durante o processo de bisseção (o `view` do subcomando pode ser utilizado como uma alternativa ao `visualize`):"

#. type: delimited block -
#: en/git-bisect.txt:205
#, no-wrap, priority:100
msgid "$ git bisect visualize\n"
msgstr "$ git bisect visualize\n"

#. type: Plain text
#: en/git-bisect.txt:210
#, priority:100
msgid "If the `DISPLAY` environment variable is not set, 'git log' is used instead.  You can also give command-line options such as `-p` and `--stat`."
msgstr "Caso a variável de ambiente `DISPLAY` não seja definido, o comando 'git log' é utilizado em seu lugar.  Você também pode utilizar as opções `-p` e `--stat` na linha de comando."

#. type: delimited block -
#: en/git-bisect.txt:213
#, no-wrap, priority:100
msgid "$ git bisect visualize --stat\n"
msgstr "$ git bisect visualize --stat\n"

#. type: Title ~
#: en/git-bisect.txt:216
#, no-wrap, priority:100
msgid "Bisect log and bisect replay"
msgstr "Bisect log e bisect replay"

#. type: Plain text
#: en/git-bisect.txt:220
#, priority:100
msgid "After having marked revisions as good or bad, issue the following command to show what has been done so far:"
msgstr "Depois de ter marcado as revisões como boas ou ruins, emita o seguinte comando para exibir o que foi feito até agora:"

#. type: delimited block -
#: en/git-bisect.txt:223
#, no-wrap, priority:100
msgid "$ git bisect log\n"
msgstr "$ git bisect log\n"

#. type: Plain text
#: en/git-bisect.txt:229
#, priority:100
msgid "If you discover that you made a mistake in specifying the status of a revision, you can save the output of this command to a file, edit it to remove the incorrect entries, and then issue the following commands to return to a corrected state:"
msgstr "Caso descubra que cometeu um erro ao especificar a condição de uma revisão, é possível salvar o arquivo gerado num arquivo, editá-lo para remover as entradas que estiverem incorretas e em seguida, utilizar os seguintes comandos para corrigir a condição de corrigido:"

#. type: delimited block -
#: en/git-bisect.txt:233
#, no-wrap, priority:100
msgid ""
"$ git bisect reset\n"
"$ git bisect replay that-file\n"
msgstr ""
"$ git bisect reset\n"
"$ git bisect replay that-file\n"

#. type: Title ~
#: en/git-bisect.txt:236
#, no-wrap, priority:100
msgid "Avoiding testing a commit"
msgstr "Evitando o teste de um commit"

#. type: Plain text
#: en/git-bisect.txt:243
#, priority:100
msgid "If, in the middle of a bisect session, you know that the suggested revision is not a good one to test (e.g. it fails to build and you know that the failure does not have anything to do with the bug you are chasing), you can manually select a nearby commit and test that one instead."
msgstr "Se no meio de uma sessão bisect, você sabe que a revisão sugerida não é boa para testar (ela falha em construir e você sabe que a falha não tem nada a ver com o bug que você está procurando por exemplo), é possível selecionar manualmente um commit próximo e testá-lo em vez disso."

#. type: Plain text
#: en/git-bisect.txt:245 en/git-name-rev.txt:52 en/git-tag.txt:373 en/git-bisect-lk2009.txt:914 en/git-bisect-lk2009.txt:1136 en/git-bisect-lk2009.txt:1152 en/git-bisect-lk2009.txt:1175
#, priority:240
msgid "For example:"
msgstr "Por exemplo:"

#. type: delimited block -
#: en/git-bisect.txt:252
#, no-wrap, priority:100
msgid ""
"$ git bisect good/bad\t\t\t# previous round was good or bad.\n"
"Bisecting: 337 revisions left to test after this (roughly 9 steps)\n"
"$ git bisect visualize\t\t\t# oops, that is uninteresting.\n"
"$ git reset --hard HEAD~3\t\t# try 3 revisions before what\n"
"\t\t\t\t\t# was suggested\n"
msgstr ""
"$ git bisect good/bad\t\t\t# a rodada anterior estava boa ou ruim.\n"
"Bisecting: 337 revisions left to test after this (roughly 9 steps)\n"
"$ git bisect visualize\t\t\t# oops, isso não foi interessante.\n"
"$ git reset --hard HEAD~3\t\t# tente 3 revisões anteriores\n"
"\t\t\t\t\t# ao que foi sugerido\n"

#. type: Plain text
#: en/git-bisect.txt:256
#, priority:100
msgid "Then compile and test the chosen revision, and afterwards mark the revision as good or bad in the usual manner."
msgstr "Em seguida, compile, teste a revisão escolhida e depois marque a revisão da maneira usual como boa ou ruim."

#. type: Title ~
#: en/git-bisect.txt:258
#, no-wrap, priority:100
msgid "Bisect skip"
msgstr "Bisect skip"

#. type: Plain text
#: en/git-bisect.txt:262
#, priority:100
msgid "Instead of choosing a nearby commit by yourself, you can ask Git to do it for you by issuing the command:"
msgstr "Em vez de escolher um commit próximo, é possível pedir ao Git para fazer isso por você, utilizando o comando:"

#. type: delimited block -
#: en/git-bisect.txt:265
#, no-wrap, priority:100
msgid "$ git bisect skip                 # Current version cannot be tested\n"
msgstr "$ git bisect skip                 # A versão atual não pode ser testada\n"

#. type: Plain text
#: en/git-bisect.txt:270
#, priority:100
msgid "However, if you skip a commit adjacent to the one you are looking for, Git will be unable to tell exactly which of those commits was the first bad one."
msgstr "No entanto, caso você pule um commit adjacente ao que você está procurando, o Git não saberá exatamente qual destes commits foi o primeiro que estava ruim."

#. type: Plain text
#: en/git-bisect.txt:273
#, priority:100
msgid "You can also skip a range of commits, instead of just one commit, using range notation. For example:"
msgstr "É possível Você também pular um intervalo de commits em vez de apenas um, utilizando a notação do intervalo. Por exemplo:"

#. type: delimited block -
#: en/git-bisect.txt:276
#, no-wrap, priority:100
msgid "$ git bisect skip v2.5..v2.6\n"
msgstr "$ git bisect skip v2.5..v2.6\n"

#. type: Plain text
#: en/git-bisect.txt:280
#, priority:100
msgid "This tells the bisect process that no commit after `v2.5`, up to and including `v2.6`, should be tested."
msgstr "Isso diz ao processo \"bisect\" que nenhum commit após a versão `v2.5` e até a versão `v2.6`, deve ser testada."

#. type: Plain text
#: en/git-bisect.txt:283
#, priority:100
msgid "Note that if you also want to skip the first commit of the range you would issue the command:"
msgstr "Observe que, caso você também queira pular o primeiro commit do intervalo, utilize o seguinte comando:"

#. type: delimited block -
#: en/git-bisect.txt:286
#, no-wrap, priority:100
msgid "$ git bisect skip v2.5 v2.5..v2.6\n"
msgstr "$ git bisect skip v2.5 v2.5..v2.6\n"

#. type: Plain text
#: en/git-bisect.txt:290
#, priority:100
msgid "This tells the bisect process that the commits between `v2.5` and `v2.6` (inclusive) should be skipped."
msgstr "Informa ao processo \"bisect\" que os commits entre as versões `v2.5` e `v2.6` (inclusive) devem ser ignorados."

#. type: Title ~
#: en/git-bisect.txt:293
#, no-wrap, priority:100
msgid "Cutting down bisection by giving more parameters to bisect start"
msgstr "Reduza a bisseção informando mais parâmetros para o início do bisect"

#. type: Plain text
#: en/git-bisect.txt:298
#, priority:100
msgid "You can further cut down the number of trials, if you know what part of the tree is involved in the problem you are tracking down, by specifying path parameters when issuing the `bisect start` command:"
msgstr "É possível reduzir ainda mais a quantidade de tentativas caso saiba que parte da árvore está envolvida no problema que você está procurando ao informar os parâmetros do caminho durante a utilização do comando `bisect start`:"

#. type: delimited block -
#: en/git-bisect.txt:301
#, no-wrap, priority:100
msgid "$ git bisect start -- arch/i386 include/asm-i386\n"
msgstr "$ git bisect start -- arch/i386 include/asm-i386\n"

#. type: Plain text
#: en/git-bisect.txt:306
#, priority:100
msgid "If you know beforehand more than one good commit, you can narrow the bisect space down by specifying all of the good commits immediately after the bad commit when issuing the `bisect start` command:"
msgstr "Caso saiba de antemão se há mais de um commit bom, é possível restringir o espaço do \"bisect\" ao informar todos os commits bons imediatamente após o commit com problema quando utilizar o comando `bisect start`:"

#. type: delimited block -
#: en/git-bisect.txt:311
#, no-wrap, priority:100
msgid ""
"$ git bisect start v2.6.20-rc6 v2.6.20-rc4 v2.6.20-rc1 --\n"
"                   # v2.6.20-rc6 is bad\n"
"                   # v2.6.20-rc4 and v2.6.20-rc1 are good\n"
msgstr ""
"$ git bisect start v2.6.20-rc6 v2.6.20-rc4 v2.6.20-rc1 --\n"
"                   # v2.6.20-rc6 é ruim\n"
"                   # v2.6.20-rc4 é v2.6.20-rc1 está bom\n"

#. type: Title ~
#: en/git-bisect.txt:314
#, no-wrap, priority:100
msgid "Bisect run"
msgstr "Bisect run"

#. type: Plain text
#: en/git-bisect.txt:318
#, priority:100
msgid "If you have a script that can tell if the current source code is good or bad, you can bisect by issuing the command:"
msgstr "Caso tenha um script que possa dizer se o código-fonte atual é bom ou ruim, é possível fazer o \"bisect\" utilize o seguinte comando:"

#. type: delimited block -
#: en/git-bisect.txt:321
#, no-wrap, priority:100
msgid "$ git bisect run my_script arguments\n"
msgstr "$ git bisect run meu_script opções\n"

#. type: Plain text
#: en/git-bisect.txt:327
#, priority:100
msgid "Note that the script (`my_script` in the above example) should exit with code 0 if the current source code is good/old, and exit with a code between 1 and 127 (inclusive), except 125, if the current source code is bad/new."
msgstr "Observe que o script (`meu_script` no exemplo acima) deve encerrar com o código 0 caso o código-fonte atual seja bom/antigo e encerrar com um código entre 1 e 127 (inclusive), exceto 125, caso o código-fonte atual seja ruim/novo."

#. type: Plain text
#: en/git-bisect.txt:331
#, priority:100
msgid "Any other exit code will abort the bisect process. It should be noted that a program that terminates via `exit(-1)` leaves $? = 255, (see the exit(3) manual page), as the value is chopped with `& 0377`."
msgstr "Qualquer outro código gerado interromperá o processo bisect. Deve ser observado que um programa que encerra com `exit (-1)` deixa um $? = 255, (consulte a página do manual exit(3)), pois o valor é cortado com `& 0377`."

#. type: Plain text
#: en/git-bisect.txt:340
#, priority:100
msgid "The special exit code 125 should be used when the current source code cannot be tested. If the script exits with this code, the current revision will be skipped (see `git bisect skip` above). 125 was chosen as the highest sensible value to use for this purpose, because 126 and 127 are used by POSIX shells to signal specific error status (127 is for command not found, 126 is for command found but not executable--these details do not matter, as they are normal errors in the script, as far as `bisect run` is concerned)."
msgstr "O código especial 125 da saída deve ser utilizado quando o código-fonte atual não puder ser testado. Caso o script encerre com este código, a revisão atual será ignorada (consulte o comando `git bisect skip` acima). O 125 foi selecionado como o maior valor a ser utilizado para esta finalidade, pois 126 e 127 são utilizandos pelos shells POSIX para sinalizar uma condição de erro específica (127 é utilizado para o comando não encontrado, 126 é para o comando que foi encontrado, mas não é executável - estes detalhes não são importantes, pois são erros normais do script, no que diz respeito ao comando `bisect run`)."

#. type: Plain text
#: en/git-bisect.txt:346
#, priority:100
msgid "You may often find that during a bisect session you want to have temporary modifications (e.g. s/#define DEBUG 0/#define DEBUG 1/ in a header file, or \"revision that does not have this commit needs this patch applied to work around another problem this bisection is not interested in\") applied to the revision being tested."
msgstr "Muitas vezes você pode achar que durante uma sessão bisect você queira ter alterações temporárias (`s/#define DEBUG 0/#define DEBUG 1/` ao cabeçalho de um arquivo, ou \"a revisão que não tem este commit e precisa que esta correção seja aplicada como um quebra galho que seja irrelevante para esta bisseção por exemplo\") aplicada à revisão que está sendo testada."

#. type: Plain text
#: en/git-bisect.txt:354
#, priority:100
msgid "To cope with such a situation, after the inner 'git bisect' finds the next revision to test, the script can apply the patch before compiling, run the real test, and afterwards decide if the revision (possibly with the needed patch) passed the test and then rewind the tree to the pristine state.  Finally the script should exit with the status of the real test to let the `git bisect run` command loop determine the eventual outcome of the bisect session."
msgstr "Para lidar com esta situação, depois que o comando 'git bisect' encontrar a próxima revisão para ser testada, o script poderá aplicar o patch antes da compilação, executar um teste real e depois decidir se a revisão (possivelmente com a correção necessária) passou no teste e depois retornar a árvore para a sua perfeita condição.  Finalmente, o script deve encerrar com a condição do teste real permitindo que o loop de comando `git bisect run` determine o resultado final da sessão bisect."

#. type: Labeled list
#: en/git-bisect.txt:357 en/git-clone.txt:149
#, ignore-same, no-wrap, priority:300
msgid "--no-checkout"
msgstr "--no-checkout"

#. type: Plain text
#: en/git-bisect.txt:362
#, priority:100
msgid "Do not checkout the new working tree at each iteration of the bisection process. Instead just update a special reference named `BISECT_HEAD` to make it point to the commit that should be tested."
msgstr "Não faça a averiguação da nova árvore de trabalho em cada iteração do processo de bisseção. Em vez disso, atualize apenas uma referência especial chamada `BISECT_HEAD` indicando o commit que deve ser testado."

#. type: Plain text
#: en/git-bisect.txt:365
#, priority:100
msgid "This option may be useful when the test you would perform in each step does not require a checked out tree."
msgstr "Essa opção pode ser útil quando o teste que você executaria em cada etapa não exigir uma árvore com check-out."

#. type: Plain text
#: en/git-bisect.txt:367
#, priority:100
msgid "If the repository is bare, `--no-checkout` is assumed."
msgstr "Caso o repositório seja simples, assume-se a opção `--no-checkout`."

#. type: Plain text
#: en/git-bisect.txt:371
#, priority:100
msgid "Follow only the first parent commit upon seeing a merge commit."
msgstr "Siga apenas o primeiro commit ao ver a mesclagem de um commit."

#. type: Plain text
#: en/git-bisect.txt:375
#, priority:100
msgid "In detecting regressions introduced through the merging of a branch, the merge commit will be identified as introduction of the bug and its ancestors will be ignored."
msgstr "Durante a detecção das regressões introduzidas através da mesclagem de um ramo o commit mesclado será identificado como uma introdução do bug e os seus ancestrais serão ignorados."

#. type: Plain text
#: en/git-bisect.txt:378
#, priority:100
msgid "This option is particularly useful in avoiding false positives when a merged branch contained broken or non-buildable commits, but the merge itself was OK."
msgstr "Esta opção é útil para evitar falsos positivos quando um ramo que foi mesclado tenham commits quebrados ou que não possam ser construídos, porém a mesclagem em si foi OK."

#. type: Plain text
#: en/git-bisect.txt:383
#, priority:100
msgid "Automatically bisect a broken build between v1.2 and HEAD:"
msgstr "Faça o bisect automaticamente uma construção quebrada entre v1.2 e HEAD:"

#. type: delimited block -
#: en/git-bisect.txt:388
#, no-wrap, priority:100
msgid ""
"$ git bisect start HEAD v1.2 --      # HEAD is bad, v1.2 is good\n"
"$ git bisect run make                # \"make\" builds the app\n"
"$ git bisect reset                   # quit the bisect session\n"
msgstr ""
"$ git bisect start HEAD v1.2 --      # HEAD está ruim, v1.2 está bom\n"
"$ git bisect run make                # \"make\" compila o app\n"
"$ git bisect reset                   # encerra a seção bisect\n"

#. type: Plain text
#: en/git-bisect.txt:391
#, priority:100
msgid "Automatically bisect a test failure between origin and HEAD:"
msgstr "Faça o bisect automaticamente num teste que falhou entre a `origin` (origem) e o `HEAD`:"

#. type: delimited block -
#: en/git-bisect.txt:396
#, no-wrap, priority:100
msgid ""
"$ git bisect start HEAD origin --    # HEAD is bad, origin is good\n"
"$ git bisect run make test           # \"make test\" builds and tests\n"
"$ git bisect reset                   # quit the bisect session\n"
msgstr ""
"$ git bisect start HEAD origin --    # HEAD está ruim, origin está bom\n"
"$ git bisect run make test           # \"make test\" compila e testa\n"
"$ git bisect reset                   # encerra a seção bisect\n"

#. type: Plain text
#: en/git-bisect.txt:399 en/git-bisect.txt:453
#, priority:100
msgid "Automatically bisect a broken test case:"
msgstr "Faça o bisect automaticamente num teste quebrado:"

#. type: delimited block -
#: en/git-bisect.txt:408
#, no-wrap, priority:100
msgid ""
"$ cat ~/test.sh\n"
"#!/bin/sh\n"
"make || exit 125                     # this skips broken builds\n"
"~/check_test_case.sh                 # does the test case pass?\n"
"$ git bisect start HEAD HEAD~10 --   # culprit is among the last 10\n"
"$ git bisect run ~/test.sh\n"
"$ git bisect reset                   # quit the bisect session\n"
msgstr ""
"$ cat ~/test.sh\n"
"#!/bin/sh\n"
"make || exit 125                     # ignora as construções quebradas\n"
"~/check_test_case.sh                 # será que o exemplo passa?\n"
"$ git bisect start HEAD HEAD~10 --   # o culpado está entre os últimos 10\n"
"$ git bisect run ~/test.sh\n"
"$ git bisect reset                   # encerra a seção bisect\n"

#. type: Plain text
#: en/git-bisect.txt:414
#, priority:100
msgid "Here we use a `test.sh` custom script. In this script, if `make` fails, we skip the current commit.  `check_test_case.sh` should `exit 0` if the test case passes, and `exit 1` otherwise."
msgstr "Aqui utilizamos um script personalizado `test.sh`. Neste script, caso o `make` falhe, ignoramos o commit atual.  `check_test_case.sh` deve `exit 0` (encerrar com 0) ou caso o teste passe e seja `exit 1`."

#. type: Plain text
#: en/git-bisect.txt:418
#, priority:100
msgid "It is safer if both `test.sh` and `check_test_case.sh` are outside the repository to prevent interactions between the bisect, make and test processes and the scripts."
msgstr "É mais seguro se os arquivos `test.sh` e `check_test_case.sh` estiverem fora do repositório para evitar interações entre os processos `bisect`, `make`, `test` e os scripts."

#. type: Plain text
#: en/git-bisect.txt:420
#, priority:100
msgid "Automatically bisect with temporary modifications (hot-fix):"
msgstr "Faça o bisect automaticamente com alterações temporárias (hot-fix):"

#. type: delimited block -
#: en/git-bisect.txt:424
#, no-wrap, priority:100
msgid ""
"$ cat ~/test.sh\n"
"#!/bin/sh\n"
msgstr ""
"$ cat ~/test.sh\n"
"#!/bin/sh\n"

#. type: delimited block -
#: en/git-bisect.txt:437
#, no-wrap, priority:100
msgid ""
"# tweak the working tree by merging the hot-fix branch\n"
"# and then attempt a build\n"
"if\tgit merge --no-commit --no-ff hot-fix &&\n"
"\tmake\n"
"then\n"
"\t# run project specific test and report its status\n"
"\t~/check_test_case.sh\n"
"\tstatus=$?\n"
"else\n"
"\t# tell the caller this is untestable\n"
"\tstatus=125\n"
"fi\n"
msgstr ""
"# faz ajustes na árvore de trabalho ao mesclar\n"
"# a solução do problema no ramo e tenta compilá-lo\n"
"if\tgit merge --no-commit --no-ff hot-fix &&\n"
"\tmake\n"
"then\n"
"\t# executa testes específicos no projeto e informa a sua condição atual\n"
"\t~/check_test_case.sh\n"
"\tstatus=$?\n"
"else\n"
"\t# diga a quem requisitou que isso não pode ser testado\n"
"\tstatus=125\n"
"fi\n"

#. type: delimited block -
#: en/git-bisect.txt:440
#, no-wrap, priority:100
msgid ""
"# undo the tweak to allow clean flipping to the next commit\n"
"git reset --hard\n"
msgstr ""
"# desfaça o ajuste para permitir uma alteração limpa para o próximo commit\n"
"git reset --hard\n"

#. type: delimited block -
#: en/git-bisect.txt:443
#, no-wrap, priority:100
msgid ""
"# return control\n"
"exit $status\n"
msgstr ""
"# controle de retorno\n"
"existir $status\n"

#. type: Plain text
#: en/git-bisect.txt:451
#, priority:100
msgid "This applies modifications from a hot-fix branch before each test run, e.g. in case your build or test environment changed so that older revisions may need a fix which newer ones have already. (Make sure the hot-fix branch is based off a commit which is contained in all revisions which you are bisecting, so that the merge does not pull in too much, or use `git cherry-pick` instead of `git merge`.)"
msgstr "São aplicadas alterações de um hotfix para ramificação antes de cada teste, caso o seu ambiente de construção ou teste tenha sido alterado para que as revisões mais antigas precisem de uma correção que as mais recentes já tenham por exemplo. (Certifique-se que o hot-fix do ramo tenha base num commit que está contida em todos as revisões que você esteja fazendo o bisect, para que a mesclagem não realize muitos resgates ou utilize o comando `git cherry-pick` em vez do `git merge`. )"

#. type: delimited block -
#: en/git-bisect.txt:458
#, no-wrap, priority:100
msgid ""
"$ git bisect start HEAD HEAD~10 --   # culprit is among the last 10\n"
"$ git bisect run sh -c \"make || exit 125; ~/check_test_case.sh\"\n"
"$ git bisect reset                   # quit the bisect session\n"
msgstr ""
"$ git bisect start HEAD HEAD~10 --   # o culpado está entre os últimos 10\n"
"$ git bisect run sh -c \"make || exit 125; ~/check_test_case.sh\"\n"
"$ git bisect reset                   # encerra a seção bisect\n"

#. type: Plain text
#: en/git-bisect.txt:462
#, priority:100
msgid "This shows that you can do without a run script if you write the test on a single line."
msgstr "Isso exibe o que você pode fazer sem executar um script caso escreva o teste numa única linha."

#. type: Plain text
#: en/git-bisect.txt:464
#, priority:100
msgid "Locate a good region of the object graph in a damaged repository"
msgstr "Localize uma boa região do grafo dos objetos num repositório que foi danificado"

#. type: delimited block -
#: en/git-bisect.txt:474
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"$ git bisect start HEAD <known-good-commit> [ <boundary-commit> ... ] --no-checkout\n"
"$ git bisect run sh -c '\n"
"\tGOOD=$(git for-each-ref \"--format=%(objectname)\" refs/bisect/good-*) &&\n"
"\tgit rev-list --objects BISECT_HEAD --not $GOOD >tmp.$$ &&\n"
"\tgit pack-objects --stdout >/dev/null <tmp.$$\n"
"\trc=$?\n"
"\trm -f tmp.$$\n"
"\ttest $rc = 0'\n"
msgstr ""
"$ git bisect start HEAD <known-good-commit> [ <boundary-commit> ... ] --no-checkout\n"
"$ git bisect run sh -c '\n"
"\tGOOD=$(git for-each-ref \"--format=%(objectname)\" refs/bisect/good-*) &&\n"
"\tgit rev-list --objects BISECT_HEAD --not $GOOD >tmp.$$ &&\n"
"\tgit pack-objects --stdout >/dev/null <tmp.$$\n"
"\trc=$?\n"
"\trm -f tmp.$$\n"
"\ttest $rc = 0'\n"

#. type: delimited block -
#: en/git-bisect.txt:476
#, no-wrap, priority:100
msgid "$ git bisect reset                   # quit the bisect session\n"
msgstr "$ git bisect reset                   # encerra a seção bisect\n"

#. type: Plain text
#: en/git-bisect.txt:481
#, priority:100
msgid "In this case, when 'git bisect run' finishes, bisect/bad will refer to a commit that has at least one parent whose reachable graph is fully traversable in the sense required by 'git pack objects'."
msgstr "Neste caso, quando 'git bisect run' encerra, o bisect/bad (ruim) irá apontar para um commit que tenha pelo menos uma origem cujo grafo seja completamente cruzado no sentido requerido pelo comando 'git pack objects'."

#. type: Plain text
#: en/git-bisect.txt:483
#, priority:100
msgid "Look for a fix instead of a regression in the code"
msgstr "Procure por uma correção em vez de uma regressão no código"

#. type: delimited block -
#: en/git-bisect.txt:488
#, no-wrap, priority:100
msgid ""
"$ git bisect start\n"
"$ git bisect new HEAD    # current commit is marked as new\n"
"$ git bisect old HEAD~10 # the tenth commit from now is marked as old\n"
msgstr ""
"$ git bisect start\n"
"$ git bisect new HEAD    # o commit atual é marcado como novo\n"
"$ git bisect old HEAD~10 # o décimo commit a partir de agora é marcado como antigo\n"

#. type: Plain text
#: en/git-bisect.txt:491
#, priority:100
msgid "or:"
msgstr "ou:"

#. type: delimited block -
#: en/git-bisect.txt:495
#, no-wrap, priority:100
msgid ""
"$ git bisect start --term-old broken --term-new fixed\n"
"$ git bisect fixed\n"
"$ git bisect broken HEAD~10\n"
msgstr ""
"$ git bisect start --term-old broken --term-new fixed\n"
"$ git bisect fixed\n"
"$ git bisect broken HEAD~10\n"

#. type: Title ~
#: en/git-bisect.txt:498
#, no-wrap, priority:100
msgid "Getting help"
msgstr "Conseguindo ajuda"

#. type: Plain text
#: en/git-bisect.txt:502
#, priority:100
msgid "Use `git bisect` to get a short usage description, and `git bisect help` or `git bisect -h` to get a long usage description."
msgstr "Utilize o comando `git bisect` para obter uma descrição resumida da sua utilização e `git bisect help` ou `git bisect -h` para obter uma descrição completa."

#. type: Plain text
#: en/git-bisect.txt:507
#, priority:100
msgid "link:git-bisect-lk2009.html[Fighting regressions with git bisect], linkgit:git-blame[1]."
msgstr "link:git-bisect-lk2009.html[Lutando contra regressões com git bisect], linkgit:git-blame[1]."

#. type: Title =
#: en/git-blame.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-blame(1)"
msgstr "git-blame(1)"

#. type: Plain text
#: en/git-blame.txt:7
#, priority:100
msgid "git-blame - Show what revision and author last modified each line of a file"
msgstr "git-blame - Exiba qual revisão e qual foi o autor que alterou cada linha de um arquivo pela última vez"

#. type: Plain text
#: en/git-blame.txt:16
#, no-wrap, priority:100
msgid ""
"'git blame' [-c] [-b] [-l] [--root] [-t] [-f] [-n] [-s] [-e] [-p] [-w] [--incremental]\n"
"\t    [-L <range>] [-S <revs-file>] [-M] [-C] [-C] [-C] [--since=<date>]\n"
"\t    [--ignore-rev <rev>] [--ignore-revs-file <file>]\n"
"\t    [--color-lines] [--color-by-age] [--progress] [--abbrev=<n>]\n"
"\t    [<rev> | --contents <file> | --reverse <rev>..<rev>] [--] <file>\n"
msgstr ""
"'git blame' [-c] [-b] [-l] [--root] [-t] [-f] [-n] [-s] [-e] [-p] [-w] [--incremental]\n"
"\t    [-L <range>] [-S <revs-file>] [-M] [-C] [-C] [-C] [--since=<data>]\n"
"\t    [--ignore-rev <rev>] [--ignore-revs-file <arquivo>]\n"
"\t    [--color-lines] [--color-by-age] [--progress] [--abbrev=<n>]\n"
"\t    [<rev> | --contents <arquivo> | --reverse <rev>..<rev>] [--] <arquivo>\n"

#. type: Plain text
#: en/git-blame.txt:22
#, priority:100
msgid "Annotates each line in the given file with information from the revision which last modified the line. Optionally, start annotating from the given revision."
msgstr "Anota cada linha no arquivo informado com informações da revisão que modificou a linha pela última vez. Opcionalmente, comece a anotar a partir da revisão informada."

#. type: Plain text
#: en/git-blame.txt:25
#, priority:100
msgid "When specified one or more times, `-L` restricts annotation to the requested lines."
msgstr "Quando informado uma ou mais vezes, a opção `-L` limita a anotação às linhas solicitadas."

#. type: Plain text
#: en/git-blame.txt:31
#, priority:100
msgid "The origin of lines is automatically followed across whole-file renames (currently there is no option to turn the rename-following off). To follow lines moved from one file to another, or to follow lines that were copied and pasted from another file, etc., see the `-C` and `-M` options."
msgstr "A origem das linhas é seguida automaticamente pelas renomeações através de todos os arquivos (atualmente não há uma opção para desativar a presente renomeação). Para seguir as linhas movidas de um arquivo para outro ou para seguir as linhas que foram copiadas e coladas de um outro arquivo, etc., consulte as opções `-C` e `-M`."

#. type: Plain text
#: en/git-blame.txt:35
#, priority:100
msgid "The report does not tell you anything about lines which have been deleted or replaced; you need to use a tool such as 'git diff' or the \"pickaxe\" interface briefly mentioned in the following paragraph."
msgstr "O relatório não informa nada sobre quais as linhas foram eliminadas ou quais foram substituídas; é necessário utilizar uma ferramenta como \"git diff\" ou a interface \"pickaxe\" mencionada de forma breve no parágrafo seguinte."

#. type: Plain text
#: en/git-blame.txt:42
#, priority:100
msgid "Apart from supporting file annotation, Git also supports searching the development history for when a code snippet occurred in a change. This makes it possible to track when a code snippet was added to a file, moved or copied between files, and eventually deleted or replaced. It works by searching for a text string in the diff. A small example of the pickaxe interface that searches for `blame_usage`:"
msgstr "Além de oferecer compatibilidade à anotação do arquivo, o Git também é compatível com a pesquisa no histórico do desenvolvimento para quando ocorra uma alteração num trecho do código. Isso torna possível o monitoramento quando um trecho do código for adicionado num arquivo, movido ou copiado entre os arquivos e eventualmente tenha sido excluído ou substituído. Funciona pesquisando uma sequência de texto no diff. Um pequeno exemplo da interface \"pickaxe\" que pesquisa por `blame_usage`:"

#. type: delimited block -
#: en/git-blame.txt:47
#, no-wrap, priority:100
msgid ""
"$ git log --pretty=oneline -S'blame_usage'\n"
"5040f17eba15504bad66b14a645bddd9b015ebb7 blame -S <ancestry-file>\n"
"ea4c7f9bf69e781dd0cd88d2bccb2bf5cc15c9a7 git-blame: Make the output\n"
msgstr ""
"$ git log --pretty=oneline -S'blame_usage'\n"
"5040f17eba15504bad66b14a645bddd9b015ebb7 blame -S <ancestry-file>\n"
"ea4c7f9bf69e781dd0cd88d2bccb2bf5cc15c9a7 git-blame: Make the output\n"

#. type: Plain text
#: en/git-blame.txt:55
#, priority:100
msgid "Use the same output mode as linkgit:git-annotate[1] (Default: off)."
msgstr "Utilize o mesmo modo de saída como o linkgit:git-annotate[1] (Predefinição: desligado)."

#. type: Labeled list
#: en/git-blame.txt:56
#, ignore-same, no-wrap, priority:100
msgid "--score-debug"
msgstr "--score-debug"

#. type: Plain text
#: en/git-blame.txt:64
#, priority:100
msgid "Include debugging information related to the movement of lines between files (see `-C`) and lines moved within a file (see `-M`).  The first number listed is the score.  This is the number of alphanumeric characters detected as having been moved between or within files.  This must be above a certain threshold for 'git blame' to consider those lines of code to have been moved."
msgstr "Inclua as informações de depuração relacionadas a movimentação das linhas entre os arquivos (consulte `-C`) e as linhas que foram movidas dentro de um arquivo (consulte `-M`).  O primeiro número listado é a pontuação.  Esta é a quantidade de caracteres alfanuméricos detectados como movidos entre os arquivos ou dentro deles.  Deve estar acima de um certo limite para que o comando 'git blame' considere que estas linhas do código tenham sido movidas."

#. type: Labeled list
#: en/git-blame.txt:66
#, ignore-same, no-wrap, priority:100
msgid "--show-name"
msgstr "--show-name"

#. type: Plain text
#: en/git-blame.txt:70
#, priority:100
msgid "Show the filename in the original commit.  By default the filename is shown if there is any line that came from a file with a different name, due to rename detection."
msgstr "Exiba o nome do arquivo no commit original.  É predefinido que o nome do arquivo seja exibido caso haja alguma linha que tenha vindo de um arquivo com um nome diferente, devido à detecção de renomeação."

#. type: Labeled list
#: en/git-blame.txt:72
#, ignore-same, no-wrap, priority:100
msgid "--show-number"
msgstr "--show-number"

#. type: Plain text
#: en/git-blame.txt:74
#, priority:100
msgid "Show the line number in the original commit (Default: off)."
msgstr "Exiba o número da linha no commit original (Predefinição: desligado)."

#. type: Plain text
#: en/git-blame.txt:77
#, priority:100
msgid "Suppress the author name and timestamp from the output."
msgstr "Suprima o nome do autor e o registro de data e hora da saída."

#. type: Labeled list
#: en/git-blame.txt:79
#, ignore-same, no-wrap, priority:100
msgid "--show-email"
msgstr "--show-email"

#. type: Plain text
#: en/git-blame.txt:83
#, priority:100
msgid "Show the author email instead of author name (Default: off).  This can also be controlled via the `blame.showEmail` config option."
msgstr "Exiba o endereço e-mail do autor em vez do se nome (Predefinição: desligado).  Também pode ser controlado através da opção da configuração `blame.showEmail`."

#. type: Plain text
#: en/git-blame.txt:87
#, priority:100
msgid "Ignore whitespace when comparing the parent's version and the child's to find where the lines came from."
msgstr "Ignore os espaços durante a comparação da versão das origens e seus herdeiros para descobrir de onde vieram as linhas."

#. type: Labeled list
#: en/git-blame.txt:88 en/git-branch.txt:199 en/git-describe.txt:65
#, no-wrap, priority:260
msgid "--abbrev=<n>"
msgstr "--abbrev=<n>"

#. type: Plain text
#: en/git-blame.txt:94
#, priority:100
msgid "Instead of using the default 7+1 hexadecimal digits as the abbreviated object name, use <m>+1 digits, where <m> is at least <n> but ensures the commit object names are unique.  Note that 1 column is used for a caret to mark the boundary commit."
msgstr "Em vez de utilizar os dígitos 7+1 hexadecimais predefinidos como o nome abreviado do objeto, utilize <m>+1 dígitos, onde <m> seja pelo menos <n>, porém garanta que o nome do objeto que foi feito o commit seja único.  Observe que 1 coluna é utilizada para um sinal de intercalação marcando o limite do commit."

#. type: Title -
#: en/git-blame.txt:97
#, no-wrap, priority:100
msgid "THE DEFAULT FORMAT"
msgstr "O FORMATO PADRÃO"

#. type: Plain text
#: en/git-blame.txt:101
#, priority:100
msgid "When neither `--porcelain` nor `--incremental` option is specified, `git blame` will output annotation for each line with:"
msgstr "Quando nenhuma opção `--porcelain` nem `--incremental` for definida, a opção `git blame` produzirá uma anotação para cada linha com:"

#. type: Plain text
#: en/git-blame.txt:103
#, priority:100
msgid "abbreviated object name for the commit the line came from;"
msgstr "nome do objeto abreviado para o commit de onde a linha veio;"

#. type: Plain text
#: en/git-blame.txt:105
#, priority:100
msgid "author ident (by default author name and date, unless `-s` or `-e` is specified); and"
msgstr "identidade do autor (por padrão, nome do autor e data, a menos que `-s` ou `-e` seja usado); e"

#. type: Plain text
#: en/git-blame.txt:106
#, priority:100
msgid "line number"
msgstr "número da linha"

#. type: Plain text
#: en/git-blame.txt:108
#, priority:100
msgid "before the line contents."
msgstr "antes do conteúdo da linha."

#. type: Title -
#: en/git-blame.txt:110
#, no-wrap, priority:100
msgid "THE PORCELAIN FORMAT"
msgstr "O FORMATO PORCELANA"

#. type: Plain text
#: en/git-blame.txt:114
#, priority:100
msgid "In this format, each line is output after a header; the header at the minimum has the first line which has:"
msgstr "Nesse formato, cada linha é enviada após um cabeçalho; o cabeçalho no mínimo tem a primeira linha que tem:"

#. type: Plain text
#: en/git-blame.txt:116
#, priority:100
msgid "40-byte SHA-1 of the commit the line is attributed to;"
msgstr "40-byte SHA-1 do commit da linha é atribuído a;"

#. type: Plain text
#: en/git-blame.txt:117
#, priority:100
msgid "the line number of the line in the original file;"
msgstr "o número da linha no arquivo original;"

#. type: Plain text
#: en/git-blame.txt:118
#, priority:100
msgid "the line number of the line in the final file;"
msgstr "o número da linha no arquivo final;"

#. type: Plain text
#: en/git-blame.txt:121
#, priority:100
msgid "on a line that starts a group of lines from a different commit than the previous one, the number of lines in this group.  On subsequent lines this field is absent."
msgstr "numa linha que inicie um grupo de linhas a partir de um commit diferente ao anterior, a quantidade de linhas neste grupo.  Nas linhas subsequentes este campo está ausente."

#. type: Plain text
#: en/git-blame.txt:124
#, priority:100
msgid "This header line is followed by the following information at least once for each commit:"
msgstr "Esta linha de cabeçalho é seguida pelas seguintes informações por pelo menos uma vez para cada commit:"

#. type: Plain text
#: en/git-blame.txt:128
#, priority:100
msgid "the author name (\"author\"), email (\"author-mail\"), time (\"author-time\"), and time zone (\"author-tz\"); similarly for committer."
msgstr "o nome do autor (\"autor\"), email (\"autor-mail\"), tempo (\"author-time\") e o fuso horário (\"autor-tz\"); da mesma forma para quem realizou o commit."

#. type: Plain text
#: en/git-blame.txt:129
#, priority:100
msgid "the filename in the commit that the line is attributed to."
msgstr "o nome do arquivo no commit ao qual a linha seja atribuída."

#. type: Plain text
#: en/git-blame.txt:130
#, priority:100
msgid "the first line of the commit log message (\"summary\")."
msgstr "a primeira linha da mensagem do registro log do commit (\"resumo\")."

#. type: Plain text
#: en/git-blame.txt:134
#, priority:100
msgid "The contents of the actual line is output after the above header, prefixed by a TAB. This is to allow adding more header elements later."
msgstr "O conteúdo da linha real é gerado após o cabeçalho acima, prefixado por um TAB. Permite adicionar mais elementos de cabeçalho posteriormente."

#. type: Plain text
#: en/git-blame.txt:142
#, priority:100
msgid "The porcelain format generally suppresses commit information that has already been seen. For example, two lines that are blamed to the same commit will both be shown, but the details for that commit will be shown only once. This is more efficient, but may require more state be kept by the reader. The `--line-porcelain` option can be used to output full commit information for each line, allowing simpler (but less efficient)  usage like:"
msgstr "O formato porcelana geralmente suprime as informações dos commits que já foram vistos. Duas linhas forem atribuídos ao mesmo commit serão exibidos, porém os detalhes deste commit serão exibidos apenas uma vez por exemplo. É mais eficiente porém pode exigir que mais condições sejam mantidos pelo leitor. A opção `--line-porcelain` pode ser utilizado para gerar informações completas do commit em cada linha, permitindo um uso mais simples (porém menos eficiente), como:"

#. type: Plain text
#: en/git-blame.txt:147
#, no-wrap, priority:100
msgid ""
"\t# count the number of lines attributed to each author\n"
"\tgit blame --line-porcelain file |\n"
"\tsed -n 's/^author //p' |\n"
"\tsort | uniq -c | sort -rn\n"
msgstr ""
"\t# conta a quantidade de linhas atribuídas para cada autor\n"
"\tgit blame --line-porcelain file |\n"
"\tsed -n 's/^author //p' |\n"
"\tsort | uniq -c | sort -rn\n"

#. type: Title -
#: en/git-blame.txt:150 en/revisions.txt:244
#, no-wrap, priority:100
msgid "SPECIFYING RANGES"
msgstr "DEFININDO OS INTERVALOS"

#. type: Plain text
#: en/git-blame.txt:156
#, priority:100
msgid "Unlike 'git blame' and 'git annotate' in older versions of git, the extent of the annotation can be limited to both line ranges and revision ranges. The `-L` option, which limits annotation to a range of lines, may be specified multiple times."
msgstr "Ao contrário do comando 'git blame' e do 'git annotate' nas versões mais antigas do git, a extensão da anotação pode ser limitada a intervalos de linhas e de revisão. A opção `-L`, que limita a anotação a um intervalo de linhas, pode ser utilizada várias vezes."

#. type: Plain text
#: en/git-blame.txt:161
#, priority:100
msgid "When you are interested in finding the origin for lines 40-60 for file `foo`, you can use the `-L` option like so (they mean the same thing -- both ask for 21 lines starting at line 40):"
msgstr "Quando quiser encontrar a origem para as linhas 40-60 do arquivo `foo`, utilize a opção` -L` assim (eles significam a mesma coisa - ambos pedem 21 linhas iniciando na linha 40):"

#. type: Plain text
#: en/git-blame.txt:164
#, no-wrap, priority:100
msgid ""
"\tgit blame -L 40,60 foo\n"
"\tgit blame -L 40,+21 foo\n"
msgstr ""
"\tgit blame -L 40,60 foo\n"
"\tgit blame -L 40,+21 foo\n"

#. type: Plain text
#: en/git-blame.txt:166
#, priority:100
msgid "Also you can use a regular expression to specify the line range:"
msgstr "Você tambem pode utilizar uma expressão regular para determinar o intervalo da linha:"

#. type: Plain text
#: en/git-blame.txt:168
#, no-wrap, priority:100
msgid "\tgit blame -L '/^sub hello {/,/^}$/' foo\n"
msgstr "\tgit blame -L '/^sub hello {/,/^}$/' foo\n"

#. type: Plain text
#: en/git-blame.txt:170
#, priority:100
msgid "which limits the annotation to the body of the `hello` subroutine."
msgstr "que limita a anotação ao corpo da sub-rotina `hello`."

#. type: Plain text
#: en/git-blame.txt:174
#, priority:100
msgid "When you are not interested in changes older than version v2.6.18, or changes older than 3 weeks, you can use revision range specifiers similar to 'git rev-list':"
msgstr "Quando não quiser encontrar as alterações mais antigas que a versão v2.6.18 ou nas alterações anteriores a 3 semanas, utilize especificadores de intervalo da revisão similares ao 'git rev-list':"

#. type: Plain text
#: en/git-blame.txt:177
#, no-wrap, priority:100
msgid ""
"\tgit blame v2.6.18.. -- foo\n"
"\tgit blame --since=3.weeks -- foo\n"
msgstr ""
"\tgit blame v2.6.18.. -- foo\n"
"\tgit blame --since=3.weeks -- foo\n"

#. type: Plain text
#: en/git-blame.txt:183
#, priority:100
msgid "When revision range specifiers are used to limit the annotation, lines that have not changed since the range boundary (either the commit v2.6.18 or the most recent commit that is more than 3 weeks old in the above example) are blamed for that range boundary commit."
msgstr "Quando os especificadores de intervalo da revisão forem utilizados para limitar a anotação, as linhas que não foram alteradas desde o limite do intervalo (seja o commit v2.6.18 ou o commit mais recente que seja 3 semanas mais antigo como no exemplo acima) são responsabilizadas por este limite do intervalo do commit."

#. type: Plain text
#: en/git-blame.txt:189
#, priority:100
msgid "A particularly useful way is to see if an added file has lines created by copy-and-paste from existing files.  Sometimes this indicates that the developer was being sloppy and did not refactor the code properly.  You can first find the commit that introduced the file with:"
msgstr "Uma maneira particularmente útil é verificar se um arquivo que foi adicionado possua linhas criadas através de um copiar e colar vindos dos arquivos já existentes.  Às vezes isso indica que o desenvolvedor estava sendo desleixado e não reorganizou o código corretamente.  Você pode encontrar primeiro o commit que introduziu o arquivo com o comando:"

#. type: Plain text
#: en/git-blame.txt:191
#, no-wrap, priority:100
msgid "\tgit log --diff-filter=A --pretty=short -- foo\n"
msgstr "\tgit log --diff-filter=A --pretty=short -- foo\n"

#. type: Plain text
#: en/git-blame.txt:194
#, priority:100
msgid "and then annotate the change between the commit and its parents, using `commit^!` notation:"
msgstr "e então anote a alteração entre o commit e as suas origens, utilizando a notação `commit^!`:"

#. type: Plain text
#: en/git-blame.txt:196
#, no-wrap, priority:100
msgid "\tgit blame -C -C -f $commit^! -- foo\n"
msgstr "\tgit blame -C -C -f $commit^! -- foo\n"

#. type: Title -
#: en/git-blame.txt:199
#, no-wrap, priority:100
msgid "INCREMENTAL OUTPUT"
msgstr "SAÍDA INCREMENTAL"

#. type: Plain text
#: en/git-blame.txt:206
#, priority:100
msgid "When called with `--incremental` option, the command outputs the result as it is built.  The output generally will talk about lines touched by more recent commits first (i.e. the lines will be annotated out of order) and is meant to be used by interactive viewers."
msgstr "Quando invocado com a opção `--incremental`, o comando gera o resultado conforme ele foi construído.  A saída geralmente fala sobre as linhas tocadas pelos commits mais recentes primeiro (ou seja, as linhas serão anotadas fora de ordem) e deve ser utilizado por visualizadores interativos."

#. type: Plain text
#: en/git-blame.txt:210
#, priority:100
msgid "The output format is similar to the Porcelain format, but it does not contain the actual lines from the file that is being annotated."
msgstr "O formato da saída é semelhante ao formato Porcelana, mas não contém as linhas reais do arquivo que está sendo anotado."

#. type: Plain text
#: en/git-blame.txt:212
#, priority:100
msgid "Each blame entry always starts with a line of:"
msgstr "Cada entrada responsabilizada sempre começa com uma linha com:"

#. type: Plain text
#: en/git-blame.txt:214
#, no-wrap, priority:100
msgid "<40-byte hex sha1> <sourceline> <resultline> <num_lines>\n"
msgstr "<40-byte hex sha1> <sourceline> <resultline> <num_lines>\n"

#. type: Plain text
#: en/git-blame.txt:216
#, priority:100
msgid "Line numbers count from 1."
msgstr "Os números das linhas começam a contagem a partir do 1."

#. type: Plain text
#: en/git-blame.txt:221
#, priority:100
msgid "The first time that a commit shows up in the stream, it has various other information about it printed out with a one-word tag at the beginning of each line describing the extra commit information (author, email, committer, dates, summary, etc.)."
msgstr "A primeira vez que um commit é exibido no fluxo, ele contém várias outras informações sobre ele impressas com uma tag de uma palavra no início de cada linha, descrevendo as informações adicionais do commit (autor, e-mail, quem fez o commit, as datas, resumo, etc.)."

#. type: Plain text
#: en/git-blame.txt:224
#, priority:100
msgid "Unlike the Porcelain format, the filename information is always given and terminates the entry:"
msgstr "Ao contrário do formato Porcelana, as informações do nome do arquivo são sempre informadas e encerram a entrada:"

#. type: Plain text
#: en/git-blame.txt:226
#, no-wrap, priority:100
msgid "\"filename\" <whitespace-quoted-filename-goes-here>\n"
msgstr "\"nome do arquivo\" <citação-do-nome-do-arquivo-com-espaço-em-branco-vai-aqui>\n"

#. type: Plain text
#: en/git-blame.txt:229
#, priority:100
msgid "and thus it is really quite easy to parse for some line- and word-oriented parser (which should be quite natural for most scripting languages)."
msgstr "logo, é realmente muito fácil analisar alguma linha algo que seja orientado por palavra (que deve ser bastante natural para a maioria das linguagens de script)."

#. type: Plain text
#: en/git-blame.txt:237
#, priority:100
msgid "For people who do parsing: to make it more robust, just ignore any lines between the first and last one (\"<sha1>\" and \"filename\" lines)  where you do not recognize the tag words (or care about that particular one) at the beginning of the \"extended information\" lines. That way, if there is ever added information (like the commit encoding or extended commit commentary), a blame viewer will not care."
msgstr "Para pessoas que fazem a analise: para torná-lo mais robusto, ignore todas as linhas entre a primeira e a última (linhas \"<sha1>\" e \"filename\") nas quais você não reconheça as palavras-chave (ou se preocupe com uma em particular) no início das linhas com \"informações estendidas\". Dessa forma, caso alguma vez haja informações que foram adicionadas (como a codificação do commit ou o comentário estendido do commit), um \"blame viewer\" não irá se importar."

#. type: Title -
#: en/git-blame.txt:240 en/git-check-mailmap.txt:47 en/git-shortlog.txt:112
#, no-wrap, priority:260
msgid "MAPPING AUTHORS"
msgstr "MAPEANDO AUTORES"

#. type: Plain text
#: en/git-blame.txt:243 en/git-check-mailmap.txt:50 en/git-shortlog.txt:115
#, priority:260
msgid "See linkgit:gitmailmap[5]."
msgstr "Consulte linkgit:gitmailmap[5]."

#. type: Title =
#: en/git-branch.txt:2
#, ignore-same, no-wrap, priority:260
msgid "git-branch(1)"
msgstr "git-branch(1)"

#. type: Plain text
#: en/git-branch.txt:7
#, priority:260
msgid "git-branch - List, create, or delete branches"
msgstr "git-branch - Lista, cria ou exclui ramificações"

#. type: Plain text
#: en/git-branch.txt:27
#, ignore-ellipsis, no-wrap, priority:260
msgid ""
"'git branch' [--color[=<when>] | --no-color] [--show-current]\n"
"\t[-v [--abbrev=<n> | --no-abbrev]]\n"
"\t[--column[=<options>] | --no-column] [--sort=<key>]\n"
"\t[--merged [<commit>]] [--no-merged [<commit>]]\n"
"\t[--contains [<commit>]] [--no-contains [<commit>]]\n"
"\t[--points-at <object>] [--format=<format>]\n"
"\t[(-r | --remotes) | (-a | --all)]\n"
"\t[--list] [<pattern>...]\n"
"'git branch' [--track[=(direct|inherit)] | --no-track] [-f]\n"
"\t[--recurse-submodules] <branchname> [<start-point>]\n"
"'git branch' (--set-upstream-to=<upstream> | -u <upstream>) [<branchname>]\n"
"'git branch' --unset-upstream [<branchname>]\n"
"'git branch' (-m | -M) [<oldbranch>] <newbranch>\n"
"'git branch' (-c | -C) [<oldbranch>] <newbranch>\n"
"'git branch' (-d | -D) [-r] <branchname>...\n"
"'git branch' --edit-description [<branchname>]\n"
msgstr ""
"'git branch' [--color[=<quando>] | --no-color] [--show-current]\n"
"\t[-v [--abbrev=<n> | --no-abbrev]]\n"
"\t[--column[=<opções>] | --no-column] [--sort=<chaves>]\n"
"\t[--merged [<commit>]] [--no-merged [<commit>]]\n"
"\t[--contains [<commit>]] [--no-contains [<commit>]]\n"
"\t[--points-at <objeto>] [--format=<formato>]\n"
"\t[(-r | --remotes) | (-a | --all)]\n"
"\t[--list] [<padrão>...]\n"
"'git branch' [--track[=(direct|inherit)] | --no-track] [-f]\n"
"\t[--recurse-submodules] <nome-do-ramo> [<ponto-de-partida>]\n"
"'git branch' (--set-upstream-to=<upstream> | -u <upstream>) [<nome-do-ramo>]\n"
"'git branch' --unset-upstream [<nome-do-ramo>]\n"
"'git branch' (-m | -M) [<ramo-antigo>] <nome-do-ramo>\n"
"'git branch' (-c | -C) [<ramo-antigo>] <novo-ramo>\n"
"'git branch' (-d | -D) [-r] <nome-do-ramo>...\n"
"'git branch' --edit-description [<nome-do-ramo>]\n"

#. type: Plain text
#: en/git-branch.txt:37
#, priority:260
msgid "If `--list` is given, or if there are no non-option arguments, existing branches are listed; the current branch will be highlighted in green and marked with an asterisk.  Any branches checked out in linked worktrees will be highlighted in cyan and marked with a plus sign. Option `-r` causes the remote-tracking branches to be listed, and option `-a` shows both local and remote branches."
msgstr "Caso a opção `--list` seja utilizada ou caso não haja argumentos não opcionais, as ramificações existentes serão listadas; o ramo atual será destacado em verde e marcado com um asterisco.  Quaisquer ramificações retiradas das áreas de trabalho vinculadas, serão destacadas em ciano e marcadas com um sinal de adição. A opção `-r` faz com que as ramificações monitoradas remotamente sejam listadas, a opção `-a` exibe as ramificações locais e as remotas."

#. type: Plain text
#: en/git-branch.txt:42
#, priority:260
msgid "If a `<pattern>` is given, it is used as a shell wildcard to restrict the output to matching branches. If multiple patterns are given, a branch is shown if it matches any of the patterns."
msgstr "Caso um `<padrão>` seja informado, ele será utilizado como um curinga do shell para restringir a saída das ramificações correspondentes. Caso vários padrões sejam informados, um ramo será exibido caso coincida com qualquer um dos padrões."

#. type: Plain text
#: en/git-branch.txt:46
#, priority:260
msgid "Note that when providing a `<pattern>`, you must use `--list`; otherwise the command may be interpreted as branch creation."
msgstr "Note que ao fornecer um `<padrão>` você deve utilizar `--list`; caso contrário, o comando pode ser interpretado como uma criação do ramo."

#. type: Plain text
#: en/git-branch.txt:55
#, priority:260
msgid "With `--contains`, shows only the branches that contain the named commit (in other words, the branches whose tip commits are descendants of the named commit), `--no-contains` inverts it. With `--merged`, only branches merged into the named commit (i.e. the branches whose tip commits are reachable from the named commit) will be listed.  With `--no-merged` only branches not merged into the named commit will be listed.  If the <commit> argument is missing it defaults to `HEAD` (i.e. the tip of the current branch)."
msgstr "Com a opção `--contains`, exibe apenas os ramos que contenham o commit informado (em outras palavras, os ramos cujos commits do topo sejam os descendentes do commit informado),`--no-contains` funciona ao contrário. Com a opção `--merged`, apenas as ramificações mescladas no commit informado serão listados (ou seja, os ramos cujos commits do cume esteja acessível a partir do commit informado).  Com `--no-merged', serão listados apenas as ramificações não mescladas do commit informado.  Caso o argumento `<commit>` esteja ausente, a predefinição retorna para `HEAD` (ou seja, o  do ramo atual)."

#. type: Plain text
#: en/git-branch.txt:62
#, ignore-ellipsis, priority:260
msgid "The command's second form creates a new branch head named <branchname> which points to the current `HEAD`, or <start-point> if given. As a special case, for <start-point>, you may use `\"A...B\"` as a shortcut for the merge base of `A` and `B` if there is exactly one merge base. You can leave out at most one of `A` and `B`, in which case it defaults to `HEAD`."
msgstr "O segundo formulário do comando cria um novo cabeçalho do ramo informado `<nome-do-ramo>` (nome do ramo0), que aponta para o `HEAD` atual, ou o `<ponto-de-partida>` caso seja utilizado. Como um caso especial, para o `<ponto-de-partida>`, utilize `\"A...B\"` como um atalho para a base da mesclagem de `A` e `B` caso sejam exatamente uma base para ser mesclada. Você pode deixar de fora no máximo um de `A` e `B`, caso onde a predefinição retorna para `HEAD`."

#. type: Plain text
#: en/git-branch.txt:66
#, priority:260
msgid "Note that this will create the new branch, but it will not switch the working tree to it; use \"git switch <newbranch>\" to switch to the new branch."
msgstr "Observe que isso criará a nova ramificação mas não mudará a árvore de trabalho para ela; para alternar para a nova ramificação utilize \"git switch <novo-ramo>\"."

#. type: Plain text
#: en/git-branch.txt:74
#, priority:260
msgid "When a local branch is started off a remote-tracking branch, Git sets up the branch (specifically the `branch.<name>.remote` and `branch.<name>.merge` configuration entries) so that 'git pull' will appropriately merge from the remote-tracking branch. This behavior may be changed via the global `branch.autoSetupMerge` configuration flag. That setting can be overridden by using the `--track` and `--no-track` options, and changed later using `git branch --set-upstream-to`."
msgstr "Quando uma ramificação local é iniciada numa ramificação remotamente monitorada, o Git define a ramificação (especificamente as entradas da configuração `branch.<nome>.remote` e `branch.<nome>.merge`) para que o comando 'git pull' mescle adequadamente a partir do ramo monitorado remotamente. Este comportamento pode ser alterado através da variável de configuração global `branch.autoSetupMerge`. Esta configuração pode ser substituída utilizando as opções `--track` e `--no-track`, podendo ser alterada posteriormente utilizando o comando `git branch --set-upstream-to`."

#. type: Plain text
#: en/git-branch.txt:80
#, priority:260
msgid "With a `-m` or `-M` option, <oldbranch> will be renamed to <newbranch>.  If <oldbranch> had a corresponding reflog, it is renamed to match <newbranch>, and a reflog entry is created to remember the branch renaming. If <newbranch> exists, -M must be used to force the rename to happen."
msgstr "Com uma opção `-m` ou `-M`, o ramo antigo `<ramo-antigo>` será renomeado para o novo ramo `<novo-ramo>`.  Caso o `<ramo-antigo>` tenha um reflog correspondente, ele será renomeado para coincidir com o `<novo-ramo>`, uma entrada de reflog será criada para lembrar da renomeação do ramo. Caso `<novo-ramo>` exista, -M deve ser utilizado para impor que a renomeação aconteça."

#. type: Plain text
#: en/git-branch.txt:84
#, priority:260
msgid "The `-c` and `-C` options have the exact same semantics as `-m` and `-M`, except instead of the branch being renamed, it will be copied to a new name, along with its config and reflog."
msgstr "As opções `-c` e `-C` têm exatamente a mesma semântica que `-m` e `-M`, exceto que em vez do ramo que está sendo renomeado, ele será copiado com um novo nome junto com a sua configuração e o reflog ."

#. type: Plain text
#: en/git-branch.txt:88
#, priority:260
msgid "With a `-d` or `-D` option, `<branchname>` will be deleted.  You may specify more than one branch for deletion.  If the branch currently has a reflog then the reflog will also be deleted."
msgstr "Com uma opção `-d` ou `-D`, o `<nome-do-ramo>` será excluído.  Você pode informar mais de uma ramificação para ser excluído.  Caso o ramo tiver atualmente um reflog, este também será excluído."

#. type: Plain text
#: en/git-branch.txt:94
#, priority:260
msgid "Use `-r` together with `-d` to delete remote-tracking branches. Note, that it only makes sense to delete remote-tracking branches if they no longer exist in the remote repository or if 'git fetch' was configured not to fetch them again. See also the 'prune' subcommand of linkgit:git-remote[1] for a way to clean up all obsolete remote-tracking branches."
msgstr "Utilize a opção `-r` junto com `-d` para excluir o monitoramento das ramificações remotas. Observe que só faz sentido excluir o monitoramento das ramificações remotas caso elas não existam mais no repositório remoto ou caso o comando 'git fetch' tenha sido configurado para não resgatá-las novamente. Consulte também o subcomando 'prune' linkgit:git-remote[1] para conhecer uma maneira de limpar todos os monitoramentos obsoletos das ramificações remotas."

#. type: Labeled list
#: en/git-branch.txt:98 en/git-checkout.txt:205 en/git-clean.txt:28 en/git-cvsexportcommit.txt:49 en/git-difftool.txt:22 en/git-http-push.txt:44 en/git-instaweb.txt:27 en/git-ls-files.txt:39 en/git-ls-tree.txt:41 en/git-push.txt:181 en/git-repack.txt:60 en/git-replace.txt:65 en/git-show-ref.txt:47 en/git-switch.txt:81 en/git-symbolic-ref.txt:35 en/git-tag.txt:83 en/git-worktree.txt:187
#, ignore-same, no-wrap, priority:260
msgid "-d"
msgstr "-d"

#. type: Labeled list
#: en/git-branch.txt:99 en/git-push.txt:182 en/git-replace.txt:66 en/git-symbolic-ref.txt:36 en/git-tag.txt:84
#, ignore-same, no-wrap, priority:260
msgid "--delete"
msgstr "--delete"

#. type: Plain text
#: en/git-branch.txt:103
#, priority:260
msgid "Delete a branch. The branch must be fully merged in its upstream branch, or in `HEAD` if no upstream was set with `--track` or `--set-upstream-to`."
msgstr "Exclua uma ramificação. A ramificação deve ser totalmente mesclada sua ramificação \"upstream\" ou no `HEAD` caso nenhum \"upstream\" tenha sido definido, utilize `--track` ou `--set-upstream-to`."

#. type: Plain text
#: en/git-branch.txt:106
#, priority:260
msgid "Shortcut for `--delete --force`."
msgstr "Um atalho para `--delete --force`."

#. type: Labeled list
#: en/git-branch.txt:107 en/git-tag.txt:190
#, ignore-same, no-wrap, priority:260
msgid "--create-reflog"
msgstr "--create-reflog"

#. type: Plain text
#: en/git-branch.txt:116
#, priority:260
msgid "Create the branch's reflog.  This activates recording of all changes made to the branch ref, enabling use of date based sha1 expressions such as \"<branchname>@\\{yesterday}\".  Note that in non-bare repositories, reflogs are usually enabled by default by the `core.logAllRefUpdates` config option.  The negated form `--no-create-reflog` only overrides an earlier `--create-reflog`, but currently does not negate the setting of `core.logAllRefUpdates`."
msgstr "Crie o reflog do ramo.  Ativa a gravação de todas as alterações feitas no \"ref\" do ramo, permitindo a utilização de expressões sha1 baseadas na data, como `<nome-do-ramo>@\\{yesterday}`.  Observe que nos repositórios que não estiverem vazios, é predefinido que os reflogs geralmente sejam ativados através da variável de configuração `core.logAllRefUpdates`.  A forma negada o comando `--no-create-reflog` substitui apenas um `--create-reflog` anterior, mas atualmente não nega a configuração do `core.logAllRefUpdates`."

#. type: Plain text
#: en/git-branch.txt:126
#, priority:260
msgid "Reset <branchname> to <startpoint>, even if <branchname> exists already. Without `-f`, 'git branch' refuses to change an existing branch.  In combination with `-d` (or `--delete`), allow deleting the branch irrespective of its merged status, or whether it even points to a valid commit. In combination with `-m` (or `--move`), allow renaming the branch even if the new branch name already exists, the same applies for `-c` (or `--copy`)."
msgstr "Redefina o `<nome-do-ramo>` para `<startpoint>`, mesmo se o `<nome-do-ramo>` já existir. Sem o `-f`, o comando 'git branch' se recusa a alterar uma ramificação já existente.  Em combinação com `-d` (ou `--delete`), permita excluir a ramificação, independentemente da sua condição de mesclagem, ou mesmo se ele aponta para um commit válido. Em combinação com `-m` (ou `--move`), permita renomear a ramificação, mesmo que o novo nome do ramo já exista, o mesmo se aplica com `-c` (ou `--copy`)."

#. type: Labeled list
#: en/git-branch.txt:128
#, ignore-same, no-wrap, priority:260
msgid "--move"
msgstr "--move"

#. type: Plain text
#: en/git-branch.txt:130
#, priority:260
msgid "Move/rename a branch, together with its config and reflog."
msgstr "Move/renomeia uma ramificação junto com a sua configuração e o reflog."

#. type: Labeled list
#: en/git-branch.txt:131 en/git-fast-export.txt:53 en/git-p4.txt:317
#, no-wrap, priority:260
msgid "-M"
msgstr "-M"

#. type: Plain text
#: en/git-branch.txt:133
#, priority:260
msgid "Shortcut for `--move --force`."
msgstr "Atalho para `--mover --força`."

#. type: Labeled list
#: en/git-branch.txt:135
#, ignore-same, no-wrap, priority:260
msgid "--copy"
msgstr "--copy"

#. type: Plain text
#: en/git-branch.txt:137
#, priority:260
msgid "Copy a branch, together with its config and reflog."
msgstr "Copia uma ramificação, junto com a sua configuração e o reflog."

#. type: Plain text
#: en/git-branch.txt:138 en/git-fast-export.txt:54 en/git-rebase.txt:629
#, no-wrap, priority:260
msgid "-C"
msgstr "-C"

#. type: Plain text
#: en/git-branch.txt:140
#, priority:260
msgid "Shortcut for `--copy --force`."
msgstr "Shortcut for `--cópia --força`."

#. type: Plain text
#: en/git-branch.txt:145
#, priority:260
msgid "Color branches to highlight current, local, and remote-tracking branches.  The value must be always (the default), never, or auto."
msgstr "Colora as ramificações para dar destaque nas ramificações atuais, locais e monitoradas remotamente.  Always (sempre) é o valor predefinido, as outras opções são \"never\" ou \"auto\"."

#. type: Plain text
#: en/git-branch.txt:150
#, priority:260
msgid "Turn off branch colors, even when the configuration file gives the default to color output.  Same as `--color=never`."
msgstr "Desative as cores do ramo, mesmo quando o arquivo de configuração informar o valor predefinido para a saída das cores.  O mesmo que `--color=never`."

#. type: Labeled list
#: en/git-branch.txt:152 en/git-for-each-ref.txt:93 en/git-grep.txt:83 en/git-tag.txt:131
#, ignore-same, no-wrap, priority:260
msgid "--ignore-case"
msgstr "--ignore-case"

#. type: Plain text
#: en/git-branch.txt:154
#, priority:260
msgid "Sorting and filtering branches are case insensitive."
msgstr "As ramificações de classificação e filtragem não diferenciam maiúsculas de minúsculas."

#. type: Labeled list
#: en/git-branch.txt:155 en/git-status.txt:130 en/git-tag.txt:134
#, no-wrap, priority:280
msgid "--column[=<options>]"
msgstr "--coluna[=<opções>]"

#. type: Labeled list
#: en/git-branch.txt:156 en/git-status.txt:131 en/git-tag.txt:135
#, ignore-same, no-wrap, priority:280
msgid "--no-column"
msgstr "--no-column"

#. type: Plain text
#: en/git-branch.txt:160
#, priority:260
msgid "Display branch listing in columns. See configuration variable `column.branch` for option syntax. `--column` and `--no-column` without options are equivalent to 'always' and 'never' respectively."
msgstr "Exiba lista dos ramos em colunas. Para conhecer a sintaxe da opção, consulte a variável de configuração `column.branch`. `--column` e `--no-column` sem opções são respectivamente o mesmo que 'always' e 'never'."

#. type: Plain text
#: en/git-branch.txt:162
#, priority:260
msgid "This option is only applicable in non-verbose mode."
msgstr "Esta opção é aplicável apenas no modo não detalhado."

#. type: Labeled list
#: en/git-branch.txt:164 en/git-show-branch.txt:44
#, ignore-same, no-wrap, priority:260
msgid "--remotes"
msgstr "--remotes"

#. type: Plain text
#: en/git-branch.txt:167
#, priority:260
msgid "List or delete (if used with -d) the remote-tracking branches.  Combine with `--list` to match the optional pattern(s)."
msgstr "Liste ou exclua (se utilizado com -d) as ramificações rastreadas remotamente.  Combine com a opção `--list` para coincidir com os padrões opcionais."

#. type: Plain text
#: en/git-branch.txt:172
#, priority:260
msgid "List both remote-tracking branches and local branches.  Combine with `--list` to match optional pattern(s)."
msgstr "Liste ambas as ramificações rastreadas remotamente e as ramificações locais.  Combine com a opção `--list` para que coincida com os padrões opcionais."

#. type: Plain text
#: en/git-branch.txt:178
#, ignore-ellipsis, priority:260
msgid "List branches.  With optional `<pattern>...`, e.g. `git branch --list 'maint-*'`, list only the branches that match the pattern(s)."
msgstr "Lista as ramificações.  Com o `<padrão>...` opcional, o comando `git branch --list 'maint-*'`, lista apenas as ramificações que coincidam com os padrões."

#. type: Labeled list
#: en/git-branch.txt:179
#, ignore-same, no-wrap, priority:260
msgid "--show-current"
msgstr "--show-current"

#. type: Plain text
#: en/git-branch.txt:182
#, priority:260
msgid "Print the name of the current branch. In detached HEAD state, nothing is printed."
msgstr "Exiba o nome do ramo atual. Na condição onde `HEAD` esteja desanexado, nada é impresso."

#. type: Labeled list
#: en/git-branch.txt:184
#, ignore-same, no-wrap, priority:260
msgid "-vv"
msgstr "-vv"

#. type: Plain text
#: en/git-branch.txt:193
#, priority:260
msgid "When in list mode, show sha1 and commit subject line for each head, along with relationship to upstream branch (if any). If given twice, print the path of the linked worktree (if any) and the name of the upstream branch, as well (see also `git remote show <remote>`).  Note that the current worktree's HEAD will not have its path printed (it will always be your current directory)."
msgstr "Quando estiver no modo de listagem, exiba o sha1 e confirme a linha do assunto para cada cabeçalho, juntamente com o relacionamento com o ramo \"upstream\" (caso haja). Se utilizado duas vezes, exiba a vinculação do caminho da árvore de trabalho (caso haja) e o nome do ramo \"upstream\" (consulte também `git remote show <remoto>`).  Observe que o `HEAD` da árvore de trabalho atual não terá o seu caminho mostrado (sempre será seu diretório atual)."

#. type: Plain text
#: en/git-branch.txt:198
#, priority:260
msgid "Be more quiet when creating or deleting a branch, suppressing non-error messages."
msgstr "Seja mais silencioso ao criar ou excluir uma ramificação, suprimindo as mensagens que não sejam de erro."

#. type: Plain text
#: en/git-branch.txt:205
#, priority:260
msgid "In the verbose listing that show the commit object name, show the shortest prefix that is at least '<n>' hexdigits long that uniquely refers the object.  The default value is 7 and can be overridden by the `core.abbrev` config option."
msgstr "Na listagem louquaz que exibe o nome do objeto que foi feito o commit, exibe o prefixo mais curto que se refira de forma única ao objeto e que tenha até '<n>' hexdigits .  O valor predefinido é 7, pode ser substituído através da variável de configuração `core.abbrev`."

#. type: Labeled list
#: en/git-branch.txt:206
#, ignore-same, no-wrap, priority:260
msgid "--no-abbrev"
msgstr "--no-abbrev"

#. type: Plain text
#: en/git-branch.txt:208
#, priority:260
msgid "Display the full sha1s in the output listing rather than abbreviating them."
msgstr "Exibe o sha1 completo na saída da listagem em vez de abreviá-los."

#. type: Labeled list
#: en/git-branch.txt:210 en/git-checkout.txt:159
#, no-wrap, priority:260
msgid "--track[=(direct|inherit)]"
msgstr "--track[=(direct|inherit)]"

#. type: Plain text
#: en/git-branch.txt:218
#, priority:260
msgid "When creating a new branch, set up `branch.<name>.remote` and `branch.<name>.merge` configuration entries to set \"upstream\" tracking configuration for the new branch. This configuration will tell git to show the relationship between the two branches in `git status` and `git branch -v`. Furthermore, it directs `git pull` without arguments to pull from the upstream when the new branch is checked out."
msgstr "Ao criar uma nova ramificação, configure as entradas da configuração `branch.<nome>.remote` e `branch.<nome>.merge` para definir a configuração do monitoramento \"upstream\" partindo da nova ramificação. Esta configuração instruirá o git a exibir o relacionamento entre as duas ramificações com o `git status` e com o `git branch -v`. Além disso, ele direciona o `git pull` sem argumentos para extrair do \"upstream\" quando o novo ramo for retirado."

#. type: Plain text
#: en/git-branch.txt:223
#, priority:260
msgid "The exact upstream branch is chosen depending on the optional argument: `-t`, `--track`, or `--track=direct` means to use the start-point branch itself as the upstream; `--track=inherit` means to copy the upstream configuration of the start-point branch."
msgstr "O exato ramo \"upstream\" é escolhido dependendo do argumento opcional: `-t`, `--track` ou `--track=direct`, significa usar o próprio ramo do ponto inicial como o \"upstream\"; já a opção `--track=inherit` significa copiar a configuração \"upstream\" da ramificação do ponto inicial."

#. type: Plain text
#: en/git-branch.txt:227
#, priority:260
msgid "The branch.autoSetupMerge configuration variable specifies how `git switch`, `git checkout` and `git branch` should behave when neither `--track` nor `--no-track` are specified:"
msgstr "A variável de configuração branch.autoSetupMerge determina como os comandos `git switch`, `git checkout` e `git branch` devem se comportar quando nem uma opção `--track` nem `--no-track` são usados:"

#. type: Plain text
#: en/git-branch.txt:235
#, priority:260
msgid "The default option, `true`, behaves as though `--track=direct` were given whenever the start-point is a remote-tracking branch.  `false` behaves as if `--no-track` were given. `always` behaves as though `--track=direct` were given. `inherit` behaves as though `--track=inherit` were given. `simple` behaves as though `--track=direct` were given only when the start-point is a remote-tracking branch and the new branch has the same name as the remote branch."
msgstr "A opção padrão, `true`, se comporta como se `--track=direct` fosse usado sempre que o ponto inicial fosse um ramo de rastreamento remoto. A definição `false` se comporta como se `--no-track` fosse usado. A definição `always` se comporta como se `--track=direct` fosse usado. A definição `inherit` se comporta como se `--track=inherit` fosse usado. A definição `simple` se comporta como se `--track=direct` fosse usado apenas quando o ponto inicial for um ramo de rastreamento remoto e o novo ramo tenha o mesmo nome do ramo remoto."

#. type: Plain text
#: en/git-branch.txt:238
#, priority:260
msgid "See linkgit:git-pull[1] and linkgit:git-config[1] for additional discussion on how the `branch.<name>.remote` and `branch.<name>.merge` options are used."
msgstr "Consulte linkgit:git-pull[1] e linkgit:git-config[1] para uma discussão adicional sobre como as opções `branch.<nome>.remote` e `branch.<nome>.merge` são utilizadas."

#. type: Labeled list
#: en/git-branch.txt:239 en/git-checkout.txt:173 en/git-switch.txt:169
#, ignore-same, no-wrap, priority:260
msgid "--no-track"
msgstr "--no-track"

#. type: Plain text
#: en/git-branch.txt:242
#, priority:260
msgid "Do not set up \"upstream\" configuration, even if the branch.autoSetupMerge configuration variable is set."
msgstr "Não configure o \"upstream\", ainda que a variável de configuração `branch.autoSetupMerge` seja definida."

#. type: Labeled list
#: en/git-branch.txt:243 en/git-checkout.txt:297 en/git-grep.txt:64 en/git-ls-files.txt:157 en/git-restore.txt:110 en/git-switch.txt:183
#, ignore-same, no-wrap, priority:280
msgid "--recurse-submodules"
msgstr "--recurse-submodules"

#. type: Plain text
#: en/git-branch.txt:249
#, priority:260
msgid "THIS OPTION IS EXPERIMENTAL! Causes the current command to recurse into submodules if `submodule.propagateBranches` is enabled. See `submodule.propagateBranches` in linkgit:git-config[1]. Currently, only branch creation is supported."
msgstr "ESSA OPÇÃO É EXPERIMENTAL! Faz com que o comando atual se repita no submódulos caso `submodule.propagateBranches` esteja ativado. Consulte `submodule.propagateBranches` em linkgit:git-config[1]. No momento, há apenas suporte para a criação do ramo."

#. type: Plain text
#: en/git-branch.txt:258
#, priority:260
msgid "When used in branch creation, a new branch <branchname> will be created in the superproject and all of the submodules in the superproject's <start-point>. In submodules, the branch will point to the submodule commit in the superproject's <start-point> but the branch's tracking information will be set up based on the submodule's branches and remotes e.g. `git branch --recurse-submodules topic origin/main` will create the submodule branch \"topic\" that points to the submodule commit in the superproject's \"origin/main\", but tracks the submodule's \"origin/main\"."
msgstr "Quando usado na criação dos ramos, um novo ramo <nome-do-ramo> será criado no super projeto (superproject) e todos os submódulos no super projeto <ponto-de-início>. Nos submódulos, o ramo irá apontar para o commit do submódulo no <ponto-de-inicio> do super projeto, porém a informação do rastreamento do ramo será configurado com base no submódulo's dos ramos locais e remotos por exemplo. O ramo `git --recurse-submodules topic origin/main` irá criar o ramo do submódulo \"topic\" que aponta para o commit do submódulo no super projeto \"origin/main\", contudo rastreia o submódulos \"origin/main\"."

#. type: Plain text
#: en/git-branch.txt:262
#, priority:260
msgid "As this option had confusing syntax, it is no longer supported.  Please use `--track` or `--set-upstream-to` instead."
msgstr "Como esta opção tinha a sintaxe confusa, agora ela é obsoleta.  Utilize `--track` ou `--set-upstream-to`."

#. type: Labeled list
#: en/git-branch.txt:263
#, no-wrap, priority:260
msgid "-u <upstream>"
msgstr "-u <upstream>"

#. type: Labeled list
#: en/git-branch.txt:264
#, no-wrap, priority:260
msgid "--set-upstream-to=<upstream>"
msgstr "--set-upstream-to=<upstream>"

#. type: Plain text
#: en/git-branch.txt:268
#, priority:260
msgid "Set up <branchname>'s tracking information so <upstream> is considered <branchname>'s upstream branch. If no <branchname> is specified, then it defaults to the current branch."
msgstr "Configure as informações do monitoramento do `<nome-do-ramo>` para que o `<upstream>` seja considerado o ramo \"upstream\" do `<nome-do-ramo>`. Caso nenhum `<nome-do-ramo>` seja utilizado, então a predefinição retorna para o ramo atual."

#. type: Labeled list
#: en/git-branch.txt:269
#, ignore-same, no-wrap, priority:260
msgid "--unset-upstream"
msgstr "--unset-upstream"

#. type: Plain text
#: en/git-branch.txt:272
#, priority:260
msgid "Remove the upstream information for <branchname>. If no branch is specified it defaults to the current branch."
msgstr "Remova as informações \"upstream\" para o `<nome-do-ramo>`. Caso nenhuma ramificação seja utilizada, a predefinição retorna para a ramificação atual."

#. type: Labeled list
#: en/git-branch.txt:273
#, ignore-same, no-wrap, priority:260
msgid "--edit-description"
msgstr "--edit-description"

#. type: Plain text
#: en/git-branch.txt:278
#, priority:260
msgid "Open an editor and edit the text to explain what the branch is for, to be used by various other commands (e.g. `format-patch`, `request-pull`, and `merge` (if enabled)). Multi-line explanations may be used."
msgstr "Abra um editor e edite o texto para explicar para que serve a ramificação, para ser utilizado por outros comandos (`format-patch`, `request-pull` e `merge` por exemplo (se ativado)). Podem ser utilizadas as explicações em mais de uma linha."

#. type: Labeled list
#: en/git-branch.txt:279 en/git-tag.txt:142
#, no-wrap, priority:260
msgid "--contains [<commit>]"
msgstr "--contains [<commit>]"

#. type: Plain text
#: en/git-branch.txt:282
#, priority:260
msgid "Only list branches which contain the specified commit (HEAD if not specified). Implies `--list`."
msgstr "Listar apenas as ramificações que contenham o commit informado (`HEAD`, caso nenhum seja informado). Implica no uso da opção `--list`."

#. type: Labeled list
#: en/git-branch.txt:283 en/git-tag.txt:146
#, no-wrap, priority:260
msgid "--no-contains [<commit>]"
msgstr "--no-contains [<commit>]"

#. type: Plain text
#: en/git-branch.txt:286
#, priority:260
msgid "Only list branches which don't contain the specified commit (HEAD if not specified). Implies `--list`."
msgstr "Liste apenas as ramificações que não contenha o commit informado (`HEAD`, caso nenhum seja informado). Implica no uso da opção `--list`."

#. type: Labeled list
#: en/git-branch.txt:287 en/git-tag.txt:150
#, no-wrap, priority:260
msgid "--merged [<commit>]"
msgstr "--merged [<commit>]"

#. type: Plain text
#: en/git-branch.txt:290
#, priority:260
msgid "Only list branches whose tips are reachable from the specified commit (HEAD if not specified). Implies `--list`."
msgstr "Liste apenas as ramificações cujas dicas são acessíveis a partir do commit informado (`HEAD`, caso nenhum seja informado). Implica no uso da opção `--list`."

#. type: Labeled list
#: en/git-branch.txt:291 en/git-tag.txt:154
#, no-wrap, priority:260
msgid "--no-merged [<commit>]"
msgstr "--no-merged [<commit>]"

#. type: Plain text
#: en/git-branch.txt:294
#, priority:260
msgid "Only list branches whose tips are not reachable from the specified commit (HEAD if not specified). Implies `--list`."
msgstr "Liste apenas as ramificações cujas dicas não possam ser acessadas a partir do commit informado (`HEAD`, caso nenhum seja informado). Implica no uso da opção `--list`."

#. type: Labeled list
#: en/git-branch.txt:295
#, no-wrap, priority:260
msgid "<branchname>"
msgstr "<nome-do-ramo>"

#. type: Plain text
#: en/git-branch.txt:300
#, priority:260
msgid "The name of the branch to create or delete.  The new branch name must pass all checks defined by linkgit:git-check-ref-format[1].  Some of these checks may restrict the characters allowed in a branch name."
msgstr "O nome do ramo que será criada ou excluída.  O nome da nova ramificação deve passar em todas as verificações definidas pelo linkgit:git-check-ref-format[1].  Algumas dessas verificações podem restringir os caracteres permitidos no nome de uma ramificação."

#. type: Labeled list
#: en/git-branch.txt:301 en/git-checkout.txt:346 en/git-switch.txt:42
#, no-wrap, priority:260
msgid "<start-point>"
msgstr "<ponto-de-partida>"

#. type: Plain text
#: en/git-branch.txt:305
#, priority:260
msgid "The new branch head will point to this commit.  It may be given as a branch name, a commit-id, or a tag.  If this option is omitted, the current HEAD will be used instead."
msgstr "O cabeçalho da nova ramificação apontará para este commit.  Pode ser utilizado como um nome do ramo, um ID do commit ou uma tag.  Caso esta opção seja omitida, o `HEAD` atual será utilizado."

#. type: Labeled list
#: en/git-branch.txt:306
#, no-wrap, priority:260
msgid "<oldbranch>"
msgstr "<ramo-antigo>"

#. type: Plain text
#: en/git-branch.txt:308
#, priority:260
msgid "The name of an existing branch to rename."
msgstr "O nome de uma ramificação existente que será renomeada."

#. type: Labeled list
#: en/git-branch.txt:309
#, no-wrap, priority:260
msgid "<newbranch>"
msgstr "<novo-ramo>"

#. type: Plain text
#: en/git-branch.txt:312
#, priority:260
msgid "The new name for an existing branch. The same restrictions as for <branchname> apply."
msgstr "Um novo nome para um ramo já existente. Se aplicam as mesmas restrições para `<nome-do-ramo>`."

#. type: Labeled list
#: en/git-branch.txt:313 en/git-for-each-ref.txt:40 en/git-ls-remote.txt:65 en/git-tag.txt:112
#, no-wrap, priority:260
msgid "--sort=<key>"
msgstr "--sort=<chave>"

#. type: Plain text
#: en/git-branch.txt:323
#, ignore-ellipsis, priority:260
msgid "Sort based on the key given. Prefix `-` to sort in descending order of the value. You may use the --sort=<key> option multiple times, in which case the last key becomes the primary key. The keys supported are the same as those in `git for-each-ref`. Sort order defaults to the value configured for the `branch.sort` variable if exists, or to sorting based on the full refname (including `refs/...` prefix). This lists detached HEAD (if present) first, then local branches and finally remote-tracking branches. See linkgit:git-config[1]."
msgstr "Classifique com base na chave informada. O prefixo `-` é utilizado para classificar em ordem decrescente. Você pode utilizar a opção `--sort=<chave>` mais de uma vez; nesse caso, a última chave se torna a chave primária. As chaves compatíveis são as mesmas que as do `git for-each-ref`. A predefinição da ordem da classificação retorna para o valor configurado para a variável `branch.sort`, caso exista ou a classificação com base no nome completo da \"ref\" (incluindo o prefixo `refs/...`). Isso lista primeiro o `HEAD` desanexado (caso esteja presente), depois as ramificações locais e finalmente as ramificações monitoradas remotamente. Consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/git-branch.txt:325 en/git-tag.txt:158
#, no-wrap, priority:260
msgid "--points-at <object>"
msgstr "--points-at <objeto>"

#. type: Plain text
#: en/git-branch.txt:327
#, priority:260
msgid "Only list branches of the given object."
msgstr "Apenas lista os objetos das ramificações informadas."

#. type: Labeled list
#: en/git-branch.txt:328
#, no-wrap, priority:260
msgid "--format <format>"
msgstr "--format <formato>"

#. type: Plain text
#: en/git-branch.txt:332
#, priority:260
msgid "A string that interpolates `%(fieldname)` from a branch ref being shown and the object it points at.  The format is the same as that of linkgit:git-for-each-ref[1]."
msgstr "Uma cadeia de caracteres que interpola `%(fieldname)` de uma tag \"ref\" que está sendo exibida e o objeto para o qual ele aponta.  O formato é o mesmo do linkgit:git-for-each-ref[1]."

#. type: Plain text
#: en/git-branch.txt:338
#, priority:260
msgid "`pager.branch` is only respected when listing branches, i.e., when `--list` is used or implied. The default is to use a pager.  See linkgit:git-config[1]."
msgstr "O `pager.branch` é respeitado apenas ao listar as ramificações, ou seja, quando a opção `--list` é utilizado ou implícito. A predefinição é utilizar um pager.  Consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/git-branch.txt:346
#, no-wrap, priority:260
msgid "Start development from a known tag"
msgstr "Inicie o desenvolvimento a partir de uma tag conhecida"

#. type: delimited block -
#: en/git-branch.txt:353
#, ignore-ellipsis, no-wrap, priority:260
msgid ""
"$ git clone git://git.kernel.org/pub/scm/.../linux-2.6 my2.6\n"
"$ cd my2.6\n"
"$ git branch my2.6.14 v2.6.14   <1>\n"
"$ git switch my2.6.14\n"
msgstr ""
"$ git clone git://git.kernel.org/pub/scm/.../linux-2.6 my2.6\n"
"$ cd my2.6\n"
"$ git branch my2.6.14 v2.6.14   <1>\n"
"$ git switch my2.6.14\n"

#. type: Plain text
#: en/git-branch.txt:357
#, priority:260
msgid "This step and the next one could be combined into a single step with \"checkout -b my2.6.14 v2.6.14\"."
msgstr "Esta etapa e a próxima poderiam ser combinadas numa única etapa com \"checkout -b my2.6.14 v2.6.14\"."

#. type: Labeled list
#: en/git-branch.txt:358
#, no-wrap, priority:260
msgid "Delete an unneeded branch"
msgstr "Exclua um ramo que seja desnecessário"

#. type: delimited block -
#: en/git-branch.txt:365
#, ignore-ellipsis, no-wrap, priority:260
msgid ""
"$ git clone git://git.kernel.org/.../git.git my.git\n"
"$ cd my.git\n"
"$ git branch -d -r origin/todo origin/html origin/man   <1>\n"
"$ git branch -D test                                    <2>\n"
msgstr ""
"$ git clone git://git.kernel.org/.../git.git my.git\n"
"$ cd my.git\n"
"$ git branch -d -r origin/todo origin/html origin/man   <1>\n"
"$ git branch -D test                                    <2>\n"

#. type: Plain text
#: en/git-branch.txt:370
#, priority:260
msgid "Delete the remote-tracking branches \"todo\", \"html\" and \"man\". The next 'fetch' or 'pull' will create them again unless you configure them not to.  See linkgit:git-fetch[1]."
msgstr "Exclua as ramificações rastreadas remotamente \"todo\", \"html\" e \"man\". O próximo 'fetch' (resgate) ou 'pull' (captura) os criará novamente a menos que você os configure para não fazê-lo.  Consulte linkgit:git-fetch[1]."

#. type: Plain text
#: en/git-branch.txt:372
#, priority:260
msgid "Delete the \"test\" branch even if the \"master\" branch (or whichever branch is currently checked out) does not have all commits from the test branch."
msgstr "Exclua o ramo \"teste\", mesmo que o ramo \"principal\" (ou o ramo que está com a averiguação no momento) não tenha todos os commits do ramo do teste."

#. type: Labeled list
#: en/git-branch.txt:373
#, no-wrap, priority:260
msgid "Listing branches from a specific remote"
msgstr "Listando as ramificações de um determinado ponto remoto"

#. type: delimited block -
#: en/git-branch.txt:378
#, no-wrap, priority:260
msgid ""
"$ git branch -r -l '<remote>/<pattern>'                 <1>\n"
"$ git for-each-ref 'refs/remotes/<remote>/<pattern>'    <2>\n"
msgstr ""
"$ git branch -r -l '<remoto>/<padrão>'                 <1>\n"
"$ git for-each-ref 'refs/remotes/<remoto>/<padrão>'    <2>\n"

#. type: Plain text
#: en/git-branch.txt:382
#, priority:260
msgid "Using `-a` would conflate <remote> with any local branches you happen to have been prefixed with the same <remote> pattern."
msgstr "Utilizando a opção `-a` entraria em conflito com `<remoto>` em quaisquer ramificações locais que foram prefixadas com o mesmo padrão `<remoto>`."

#. type: Plain text
#: en/git-branch.txt:383
#, priority:260
msgid "`for-each-ref` can take a wide range of options. See linkgit:git-for-each-ref[1]"
msgstr "'for-each-ref' pode ter uma ampla gama de opções. Consulte linkgit:git-for-each-ref[1] Consulte linkgit:git-for-each-ref[1]"

#. type: Plain text
#: en/git-branch.txt:385
#, priority:260
msgid "Patterns will normally need quoting."
msgstr "Os padrões normalmente precisam ser citados."

#. type: Title -
#: en/git-branch.txt:387 en/git-for-each-ref.txt:417 en/git-gc.txt:118 en/git-index-pack.txt:134 en/git-prune.txt:71 en/git-rebase.txt:795 en/git-symbolic-ref.txt:54 en/git-tag.txt:381 en/git-update-index.txt:583
#, no-wrap, priority:260
msgid "NOTES"
msgstr "OBSERVAÇÕES"

#. type: Plain text
#: en/git-branch.txt:392
#, priority:260
msgid "If you are creating a branch that you want to switch to immediately, it is easier to use the \"git switch\" command with its `-c` option to do the same thing with a single command."
msgstr "Caso esteja criando uma nova ramificação para o qual deseja alternar imediatamente é mais fácil usar o comando \"git switch\" com a sua opção `-c` para fazer a mesma coisa utilizando apenas um único comando."

#. type: Plain text
#: en/git-branch.txt:395
#, priority:260
msgid "The options `--contains`, `--no-contains`, `--merged` and `--no-merged` serve four related but different purposes:"
msgstr "As opções `--contains`, `--no-contains`, `--merged` e `--no-merged` servem para quatro finalidades relacionadas, porém diferentes:"

#. type: Plain text
#: en/git-branch.txt:399
#, priority:260
msgid "`--contains <commit>` is used to find all branches which will need special attention if <commit> were to be rebased or amended, since those branches contain the specified <commit>."
msgstr "`--contains <commit>` é utilizado para encontrar todas as ramificações que precisarão de atenção especial caso `<commit>` precise de um novo \"rebase\" ou corrigido, uma vez que essas ramificações contêm o `<commit>` informato."

#. type: Plain text
#: en/git-branch.txt:402
#, priority:260
msgid "`--no-contains <commit>` is the inverse of that, i.e. branches that don't contain the specified <commit>."
msgstr "`--no-contains <commit>` é o inverso, isto é, as ramificações que não contêm o `<commit>` informado."

#. type: Plain text
#: en/git-branch.txt:405
#, priority:260
msgid "`--merged` is used to find all branches which can be safely deleted, since those branches are fully contained by HEAD."
msgstr "`--merged` é utilizado para encontrar todas as ramificações que podem ser excluídas com segurança, uma vez que essas ramificações são totalmente contidas pelo `HEAD`."

#. type: Plain text
#: en/git-branch.txt:408
#, priority:260
msgid "`--no-merged` is used to find branches which are candidates for merging into HEAD, since those branches are not fully contained by HEAD."
msgstr "`--no-merged` é utilizado para encontrar as ramificações candidatas a serem mescladas no `HEAD`, uma vez que essas ramificações não são totalmente contidas pelo `HEAD`."

#. type: Plain text
#: en/git-branch.txt:418
#, priority:260
msgid "linkgit:git-check-ref-format[1], linkgit:git-fetch[1], linkgit:git-remote[1], link:user-manual.html#what-is-a-branch[``Understanding history: What is a branch?''] in the Git User's Manual."
msgstr "linkgit:git-check-ref-format[1], linkgit:git-fetch[1], linkgit:git-remote[1], link:user-manual.html#what-is-a-branch[``Compreendendo a história: O que é um ramo?''] no Manual do Usuário Git."

#. type: Title =
#: en/git-bugreport.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-bugreport(1)"
msgstr "git-bugreport(1)"

#. type: Plain text
#: en/git-bugreport.txt:7
#, priority:100
msgid "git-bugreport - Collect information for user to file a bug report"
msgstr "git-bugreport - Colete informações para que o usuário arquive um relatório de erro"

#. type: Plain text
#: en/git-bugreport.txt:13
#, fuzzy, no-wrap, priority:100
#| msgid "'git bugreport' [(-o | --output-directory) <path>] [(-s | --suffix) <format>]\n"
msgid ""
"'git bugreport' [(-o | --output-directory) <path>] [(-s | --suffix) <format>]\n"
"\t\t[--diagnose[=<mode>]]\n"
msgstr "'git bugreport' [(-o | --output-directory) <caminho>] [(-s | --suffix) <formato>]\n"

#. type: Plain text
#: en/git-bugreport.txt:20
#, priority:100
msgid "Captures information about the user's machine, Git client, and repository state, as well as a form requesting information about the behavior the user observed, into a single text file which the user can then share, for example to the Git mailing list, in order to report an observed bug."
msgstr "Capture as informações sobre a máquina do usuário, o cliente Git e a condição geral do repositório, bem como um formulário solicitando as informações sobre o comportamento observado pelo usuário em um único arquivo do texto que o usuário pode compartilhar, na lista de correspondência Git, para relatar um bug observado por exemplo."

#. type: Plain text
#: en/git-bugreport.txt:22
#, priority:100
msgid "The following information is requested from the user:"
msgstr "As seguintes informações são solicitadas ao usuário:"

#. type: Plain text
#: en/git-bugreport.txt:24
#, priority:100
msgid "Reproduction steps"
msgstr "Etapas para a reprodução do problema"

#. type: Plain text
#: en/git-bugreport.txt:25
#, priority:100
msgid "Expected behavior"
msgstr "Comportamento esperado"

#. type: Plain text
#: en/git-bugreport.txt:26
#, priority:100
msgid "Actual behavior"
msgstr "Comportamento atual"

#. type: Plain text
#: en/git-bugreport.txt:28
#, priority:100
msgid "The following information is captured automatically:"
msgstr "As seguintes informações são capturadas automaticamente:"

#. type: Plain text
#: en/git-bugreport.txt:30
#, priority:100
msgid "'git version --build-options'"
msgstr "'git version --build-options'"

#. type: Plain text
#: en/git-bugreport.txt:31
#, priority:100
msgid "uname sysname, release, version, and machine strings"
msgstr "`uname sysname`, `release`, `version`, e `machine strings`"

#. type: Plain text
#: en/git-bugreport.txt:32
#, priority:100
msgid "Compiler-specific info string"
msgstr "Cadeia de caracteres específicas do compilador"

#. type: Plain text
#: en/git-bugreport.txt:33
#, priority:100
msgid "A list of enabled hooks"
msgstr "Uma lista com ganchos ativos"

#. type: Plain text
#: en/git-bugreport.txt:34
#, priority:100
msgid "$SHELL"
msgstr "$SHELL"

#. type: Plain text
#: en/git-bugreport.txt:38
#, priority:100
msgid "Additional information may be gathered into a separate zip archive using the `--diagnose` option, and can be attached alongside the bugreport document to provide additional context to readers."
msgstr ""

#. type: Plain text
#: en/git-bugreport.txt:43
#, priority:100
msgid "This tool is invoked via the typical Git setup process, which means that in some cases, it might not be able to launch - for example, if a relevant config file is unreadable. In this kind of scenario, it may be helpful to manually gather the kind of information listed above when manually asking for help."
msgstr "Essa ferramenta é chamada através do processo de configuração típica do Git que significa que, em alguns casos, talvez não seja possível iniciar caso um arquivo de configuração relevante estiver ilegível por exemplo. Nesse tipo de cenário, pode ser útil reunir manualmente o tipo de informação listado acima ao pedir ajuda manualmente."

#. type: Labeled list
#: en/git-bugreport.txt:46
#, no-wrap, priority:100
msgid "-o <path>"
msgstr "-o <caminho>"

#. type: Labeled list
#: en/git-bugreport.txt:47
#, no-wrap, priority:100
msgid "--output-directory <path>"
msgstr "--output-directory <caminho>"

#. type: Plain text
#: en/git-bugreport.txt:50
#, priority:100
msgid "Place the resulting bug report file in `<path>` instead of the current directory."
msgstr "Coloque o arquivo do relatório dos erros resultantes em `<caminho>` em vez do diretório atual."

#. type: Labeled list
#: en/git-bugreport.txt:51
#, no-wrap, priority:100
msgid "-s <format>"
msgstr "-s <formato>"

#. type: Labeled list
#: en/git-bugreport.txt:52
#, no-wrap, priority:100
msgid "--suffix <format>"
msgstr "--suffix <formato>"

#. type: Plain text
#: en/git-bugreport.txt:56
#, priority:100
msgid "Specify an alternate suffix for the bugreport name, to create a file named 'git-bugreport-<formatted suffix>'. This should take the form of a strftime(3) format string; the current local time will be used."
msgstr "Defina um sufixo alternativo para o nome do relatório de erros, para criar um arquivo com o nome de 'git-bugreport-<sufixo formatado>'. Isso deve assumir a forma compatível com strftime(3) ; a hora local será utilizada."

#. type: Labeled list
#: en/git-bugreport.txt:57
#, ignore-same, no-wrap, priority:100
msgid "--no-diagnose"
msgstr "--no-diagnose"

#. type: Labeled list
#: en/git-bugreport.txt:58
#, fuzzy, no-wrap, priority:100
#| msgid "--ignored[=<mode>]"
msgid "--diagnose[=<mode>]"
msgstr "--ignored[=<modo>]"

#. type: Plain text
#: en/git-bugreport.txt:63
#, priority:100
msgid "Create a zip archive of supplemental information about the user's machine, Git client, and repository state. The archive is written to the same output directory as the bug report and is named 'git-diagnostics-<formatted suffix>'."
msgstr ""

#. type: Plain text
#: en/git-bugreport.txt:69
#, priority:100
msgid "Without `mode` specified, the diagnostic archive will contain the default set of statistics reported by `git diagnose`. An optional `mode` value may be specified to change which information is included in the archive. See linkgit:git-diagnose[1] for the list of valid values for `mode` and details about their usage."
msgstr ""

#. type: Title =
#: en/git-bundle.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-bundle(1)"
msgstr "git-bundle(1)"

#. type: Plain text
#: en/git-bundle.txt:7
#, priority:100
msgid "git-bundle - Move objects and refs by archive"
msgstr "git-bundle - Mova os objetos e as refs através do arquivo"

#. type: Plain text
#: en/git-bundle.txt:17
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git bundle' create [-q | --quiet | --progress | --all-progress] [--all-progress-implied]\n"
"\t\t    [--version=<version>] <file> <git-rev-list-args>\n"
"'git bundle' verify [-q | --quiet] <file>\n"
"'git bundle' list-heads <file> [<refname>...]\n"
"'git bundle' unbundle [--progress] <file> [<refname>...]\n"
msgstr ""
"'git bundle' create [-q | --quiet | --progress | --all-progress] [--all-progress-implied]\n"
"\t\t    [--version=<versão>] <arquivo> <git-rev-list-args>\n"
"'git bundle' verify [-q | --quiet] <arquivo>\n"
"'git bundle' list-heads <arquivo> [<refname>...]\n"
"'git bundle' unbundle [--progress] <arquivo> [<refname>...]\n"

#. type: Plain text
#: en/git-bundle.txt:24
#, priority:100
msgid "Create, unpack, and manipulate \"bundle\" files. Bundles are used for the \"offline\" transfer of Git objects without an active \"server\" sitting on the other side of the network connection."
msgstr "Crie, desempacote e manipule os arquivos \"bundle\" (pacote). Os pacotes são usados para a transferência \"offline\" dos objetos Git sem um \"servidor\" ativo esperando do outro lado da conexão de rede."

#. type: Plain text
#: en/git-bundle.txt:28
#, priority:100
msgid "They can be used to create both incremental and full backups of a repository, and to relay the state of the references in one repository to another."
msgstr "Eles podem ser usados para criar backups incrementais e completos de um repositório e para retransmitir o estado das referências de um repositório para outro."

#. type: Plain text
#: en/git-bundle.txt:36
#, priority:100
msgid "Git commands that fetch or otherwise \"read\" via protocols such as `ssh://` and `https://` can also operate on bundle files. It is possible linkgit:git-clone[1] a new repository from a bundle, to use linkgit:git-fetch[1] to fetch from one, and to list the references contained within it with linkgit:git-ls-remote[1]. There's no corresponding \"write\" support, i.e.a 'git push' into a bundle is not supported."
msgstr "Os comandos do Git que buscam ou \"leem\" através de protocolos como `ssh://` e `https://` também podem operar nos arquivos de pacote (bundle). É possível linkgit:git-clone[1] (clonar) um novo repositório a partir de um pacote, usar o comando linkgit:git-fetch[1] para buscar a partir de um e para listar as referências contidas nele usando o comando linkgit:git-ls-remote[1]. Não há suporte correspondente de \"gravação\", ou seja, não há suporte para fazer um 'git push' num pacote."

#. type: Plain text
#: en/git-bundle.txt:38
#, priority:100
msgid "See the \"EXAMPLES\" section below for examples of how to use bundles."
msgstr "Consulte a seção de EXEMPLOS abaixo para mais exemplos de como usar."

#. type: Title -
#: en/git-bundle.txt:40
#, no-wrap, priority:100
msgid "BUNDLE FORMAT"
msgstr "FORMATO BUNDLE"

#. type: Plain text
#: en/git-bundle.txt:44
#, priority:100
msgid "Bundles are `.pack` files (see linkgit:git-pack-objects[1]) with a header indicating what references are contained within the bundle."
msgstr "Os pacotes são arquivos `.pack` (consulte linkgit:git-pack-objects[1]) com um cabeçalho indicando quais as referências estão contidas nele."

#. type: Plain text
#: en/git-bundle.txt:48
#, fuzzy, priority:100
#| msgid "Like the the packed archive format itself bundles can either be self-contained, or be created using exclusions.  See the \"OBJECT PREREQUISITES\" section below."
msgid "Like the packed archive format itself bundles can either be self-contained, or be created using exclusions.  See the \"OBJECT PREREQUISITES\" section below."
msgstr "Como o próprio formato de um arquivo empacotado pode ser independente ou pode ser criado usando exclusões.  Consulte a seção \"PRÉ-REQUISITOS DO OBJETO\" abaixo."

#. type: Plain text
#: en/git-bundle.txt:52
#, priority:100
msgid "Bundles created using revision exclusions are \"thin packs\" created using the `--thin` option to linkgit:git-pack-objects[1], and unbundled using the `--fix-thin` option to linkgit:git-index-pack[1]."
msgstr "Os pacotes criados usando exclusões de revisão são \"pacotes finos\" criados usando a opção `--thin` para linkgit:git-pack-objects[1] (empacotar os objetos), e descompactados usando a opção `--fix-thin` para linkgit:git-index-pack[1]."

#. type: Plain text
#: en/git-bundle.txt:58
#, priority:100
msgid "There is no option to create a \"thick pack\" when using revision exclusions, and users should not be concerned about the difference. By using \"thin packs\", bundles created using exclusions are smaller in size. That they're \"thin\" under the hood is merely noted here as a curiosity, and as a reference to other documentation."
msgstr "Não há opção de criar um \"pacote grosso\" ao usar as exclusões de revisão, e os usuários não devem estar preocupados com essa diferença. Ao usar \"pacotes finos\", os pacotes \"bundles\" criados usando exclusões são menores em tamanho. A questão de serem \"finos\" sob o capô é meramente notado aqui como uma curiosidade e como uma referência a outra documentação."

#. type: Plain text
#: en/git-bundle.txt:61
#, fuzzy, priority:100
#| msgid "See link:technical/bundle-format.html[the `bundle-format` documentation] for more details and the discussion of \"thin pack\" in link:technical/pack-format.html[the pack format documentation] for further details."
msgid "See linkgit:gitformat-bundle[5] for more details and the discussion of \"thin pack\" in linkgit:gitformat-pack[5] for further details."
msgstr "Para mais detalhes consulte link:technical/bundle-format.html[a documentação do `bundle-format`], e consulte também a discussão sobre o \"pacote fino\" em link:technical/pack-format.html[documentação do formato do pacote]."

#. type: Labeled list
#: en/git-bundle.txt:65
#, no-wrap, priority:100
msgid "create [options] <file> <git-rev-list-args>"
msgstr "create [options] <arquivo> <git-rev-list-args>"

#. type: Plain text
#: en/git-bundle.txt:70
#, priority:100
msgid "Used to create a bundle named 'file'.  This requires the '<git-rev-list-args>' arguments to define the bundle contents.  'options' contains the options specific to the 'git bundle create' subcommand."
msgstr "Utilize para criar um pacote chamado 'arquivo'.  Isso requer a utilização dos argumentos '<git-rev-list-args>' para definir o conteúdo do pacote.  'options' contém as opções específicas para o subcomando 'git bundle create'."

#. type: Labeled list
#: en/git-bundle.txt:71
#, no-wrap, priority:100
msgid "verify <file>"
msgstr "verify <arquivo>"

#. type: Plain text
#: en/git-bundle.txt:81
#, fuzzy, priority:100
#| msgid "Used to check that a bundle file is valid and will apply cleanly to the current repository.  This includes checks on the bundle format itself as well as checking that the prerequisite commits exist and are fully linked in the current repository.  Then, 'git bundle' prints a list of missing commits, if any.  Finally, information about additional capabilities, such as \"object filter\", is printed. See \"Capabilities\" in link:technical/bundle-format.html for more information. The exit code is zero for success, but will be nonzero if the bundle file is invalid."
msgid "Used to check that a bundle file is valid and will apply cleanly to the current repository.  This includes checks on the bundle format itself as well as checking that the prerequisite commits exist and are fully linked in the current repository.  Then, 'git bundle' prints a list of missing commits, if any.  Finally, information about additional capabilities, such as \"object filter\", is printed. See \"Capabilities\" in linkgit:gitformat-bundle[5] for more information. The exit code is zero for success, but will be nonzero if the bundle file is invalid."
msgstr "Utilizado para verificar se um arquivo do pacote é válido e se será aplicado de forma limpa ao repositório atual.  Isso incluí as verificações no formato do pacote e também a que verificação dos pré-requisitos dos commits existam e estejam totalmente vinculados ao repositório atual.  O comando 'git bundle' exibe uma lista dos commits que faltam, caso haja.  Finalmente, a informação sobre as capacidades adicionais tais como \"object filter\" é exibida. Veja \"Recursos\" em link:technical/bundle-format.html para obter mais informações. O código de encerramento é zero em caso de sucesso, mas não será zero se o arquivo do pacote for inválido."

#. type: Labeled list
#: en/git-bundle.txt:82
#, no-wrap, priority:100
msgid "list-heads <file>"
msgstr "list-heads <arquivo>"

#. type: Plain text
#: en/git-bundle.txt:86
#, priority:100
msgid "Lists the references defined in the bundle.  If followed by a list of references, only references matching those given are printed out."
msgstr "Lista as referências definidas no pacote.  Caso seja seguido por uma lista de referências, apenas as referências que coincidam com as informadas são exibidas."

#. type: Labeled list
#: en/git-bundle.txt:87
#, no-wrap, priority:100
msgid "unbundle <file>"
msgstr "unbundle <arquivo>"

#. type: Plain text
#: en/git-bundle.txt:93
#, priority:100
msgid "Passes the objects in the bundle to 'git index-pack' for storage in the repository, then prints the names of all defined references. If a list of references is given, only references matching those in the list are printed. This command is really plumbing, intended to be called only by 'git fetch'."
msgstr "Passa os objetos no pacote para o para armazenamento no repositório com o comando 'git index-pack' e depois imprime os nomes de todas as referências que foram definidas. Se uma lista de referências for informada, apenas as referências que coincidam às da lista serão exibidas. Este comando é realmente \"plumbing\", feito para ser chamado apenas através do 'git fetch'."

#. type: Labeled list
#: en/git-bundle.txt:94
#, no-wrap, priority:100
msgid "<git-rev-list-args>"
msgstr "<git-rev-list-args>"

#. type: Plain text
#: en/git-bundle.txt:103
#, priority:100
msgid "A list of arguments, acceptable to 'git rev-parse' and 'git rev-list' (and containing a named ref, see SPECIFYING REFERENCES below), that specifies the specific objects and references to transport.  For example, `master~10..master` causes the current master reference to be packaged along with all objects added since its 10th ancestor commit.  There is no explicit limit to the number of references and objects that may be packaged."
msgstr "Uma lista de argumentos aceitáveis para o comando 'git rev-parse' e 'git rev-list' (contendo uma determinada referência, consulte ESPECIFICANDO AS REFERÊNCIAS logo abaixo), que determina quais os objetos e as referências específicas que serão transportados.  Por exemplo, `master~10..master` faz com que a referência principal seja empacotada juntamente com todos os objetos que foram adicionados desde o seu décimo commit ancestral.  Não há um limite explícito para a quantidade de referências e dos objetos que podem ser empacotados."

#. type: Labeled list
#: en/git-bundle.txt:105
#, ignore-ellipsis, no-wrap, priority:100
msgid "[<refname>...]"
msgstr "[<refname>...]"

#. type: Plain text
#: en/git-bundle.txt:111
#, priority:100
msgid "A list of references used to limit the references reported as available. This is principally of use to 'git fetch', which expects to receive only those references asked for and not necessarily everything in the pack (in this case, 'git bundle' acts like 'git fetch-pack')."
msgstr "Uma lista de referências utilizadas para limitar as referências relatadas como disponíveis. É muito útil para ser utilizado com o 'git fetch' que espera receber apenas as referências solicitadas e não necessariamente tudo no pacote (nesse caso, 'git bundle' age como 'git fetch-pack')."

#. type: Labeled list
#: en/git-bundle.txt:118 en/git-pack-objects.txt:197
#, ignore-same, no-wrap, priority:100
msgid "--all-progress"
msgstr "--all-progress"

#. type: Plain text
#: en/git-bundle.txt:128 en/git-pack-objects.txt:207
#, priority:100
msgid "When --stdout is specified then progress report is displayed during the object count and compression phases but inhibited during the write-out phase. The reason is that in some cases the output stream is directly linked to another command which may wish to display progress status of its own as it processes incoming pack data.  This flag is like --progress except that it forces progress report for the write-out phase as well even if --stdout is used."
msgstr "Quando o `--stdout` é utilizado, o relatório do progresso é exibido durante as fases da contagem e da compactação dos objetos, porém inibido durante a fase de gravação. A razão é que em alguns casos, o fluxo da saída está diretamente vinculada a um outro comando que possa querer exibir a sua própria condição do progresso à medida que os dados do pacote vão sendo processados.  Esta opção é semelhante ao `--progress`, exceto que impõem também que um relatório do progresso seja feito na fase de gravação, mesmo que a opção `--stdout` seja utilizado."

#. type: Labeled list
#: en/git-bundle.txt:129 en/git-pack-objects.txt:208
#, ignore-same, no-wrap, priority:100
msgid "--all-progress-implied"
msgstr "--all-progress-implied"

#. type: Plain text
#: en/git-bundle.txt:133 en/git-pack-objects.txt:212
#, priority:100
msgid "This is used to imply --all-progress whenever progress display is activated.  Unlike --all-progress this flag doesn't actually force any progress display by itself."
msgstr "Isso é utilizado para impor a opção `--all-progress` sempre que a exibição do progresso estiver ativo.  Ao contrário da opção `--all-progress`, esta opção por si só não impõem que a exibição do progresso seja exibida."

#. type: Labeled list
#: en/git-bundle.txt:134
#, no-wrap, priority:100
msgid "--version=<version>"
msgstr "--version=<versão>"

#. type: Plain text
#: en/git-bundle.txt:139
#, priority:100
msgid "Specify the bundle version.  Version 2 is the older format and can only be used with SHA-1 repositories; the newer version 3 contains capabilities that permit extensions. The default is the oldest supported format, based on the hash algorithm in use."
msgstr "Informe a versão do pacote. A versão 2 é o formato mais antigo e só pode ser usado com os repositórios SHA-1; a versão 3 mais recente contém recursos que permitem o uso de extensões. A predefinição é usar o formato compatível mais antigo com base no algoritmo hash em uso."

#. type: Plain text
#: en/git-bundle.txt:144 en/git-pack-objects.txt:216
#, priority:100
msgid "This flag makes the command not to report its progress on the standard error stream."
msgstr "Esta opção faz com que o comando não relate o seu progresso em meio ao fluxo de erros já predefinido."

#. type: Title -
#: en/git-bundle.txt:146
#, no-wrap, priority:100
msgid "SPECIFYING REFERENCES"
msgstr "ESPECIFICANDO AS REFERÊNCIAS"

#. type: Plain text
#: en/git-bundle.txt:150
#, priority:100
msgid "Revisions must be accompanied by reference names to be packaged in a bundle."
msgstr "As revisões devem ser acompanhadas pelos nomes de referência que serão empacotados num pacote (bundle)."

#. type: Plain text
#: en/git-bundle.txt:154
#, priority:100
msgid "More than one reference may be packaged, and more than one set of prerequisite objects can be specified.  The objects packaged are those not contained in the union of the prerequisites."
msgstr "Mais de uma referência pode ser empacotada e mais de um conjunto de pré-requisitos do objetos podem ser definidos.  Os objetos empacotados são aqueles que não estão inclusos na união dos pré-requisitos."

#. type: Plain text
#: en/git-bundle.txt:159
#, priority:100
msgid "The 'git bundle create' command resolves the reference names for you using the same rules as `git rev-parse --abbrev-ref=loose`. Each prerequisite can be specified explicitly (e.g. `^master~10`), or implicitly (e.g. `master~10..master`, `--since=10.days.ago master`)."
msgstr "O comando 'git bundle create' resolve para você, os nomes de referência, usando as mesmas regras do comando `git rev-parse --abbrev-ref=loose`. Cada pré-requisito pode ser definido de forma explicita (como `^master~10` por exemplo) ou implicitamente (`master~10..master`, `--since=10.days.ago master` por exemplo)."

#. type: Plain text
#: en/git-bundle.txt:162
#, priority:100
msgid "All of these simple cases are OK (assuming we have a \"master\" and \"next\" branch):"
msgstr "Todos estes casos simples funcionam (assumindo que temos um ramo \"master\" e \"next\"):"

#. type: delimited block -
#: en/git-bundle.txt:168
#, no-wrap, priority:100
msgid ""
"$ git bundle create master.bundle master\n"
"$ echo master | git bundle create master.bundle --stdin\n"
"$ git bundle create master-and-next.bundle master next\n"
"$ (echo master; echo next) | git bundle create master-and-next.bundle --stdin\n"
msgstr ""
"$ git bundle create master.bundle master\n"
"$ echo master | git bundle create master.bundle --stdin\n"
"$ git bundle create master-and-next.bundle master next\n"
"$ (echo master; echo next) | git bundle create master-and-next.bundle --stdin\n"

#. type: Plain text
#: en/git-bundle.txt:171
#, priority:100
msgid "And so are these (and the same but omitted `--stdin` examples):"
msgstr "E assim são estes (e os mesmos, mas omitidos, exemplos `--stdin`):"

#. type: delimited block -
#: en/git-bundle.txt:175
#, no-wrap, priority:100
msgid ""
"$ git bundle create recent-master.bundle master~10..master\n"
"$ git bundle create recent-updates.bundle master~10..master next~5..next\n"
msgstr ""
"$ git bundle create recent-master.bundle master~10..master\n"
"$ git bundle create recent-updates.bundle master~10..master next~5..next\n"

#. type: Plain text
#: en/git-bundle.txt:179
#, priority:100
msgid "A revision name or a range whose right-hand-side cannot be resolved to a reference is not accepted:"
msgstr "Um nome para a revisão ou intervalo não é aceito quando o lado direito não pode ser resolvido uma referência:"

#. type: delimited block -
#: en/git-bundle.txt:185
#, no-wrap, priority:100
msgid ""
"$ git bundle create HEAD.bundle $(git rev-parse HEAD)\n"
"fatal: Refusing to create empty bundle.\n"
"$ git bundle create master-yesterday.bundle master~10..master~5\n"
"fatal: Refusing to create empty bundle.\n"
msgstr ""
"$ git bundle create HEAD.bundle $(git rev-parse HEAD)\n"
"fatal: Recusando a criação de um pacote vazio.\n"
"$ git bundle create master-yesterday.bundle master~10..master~5\n"
"fatal: Recusando a criação de um pacote vazio.\n"

#. type: Title -
#: en/git-bundle.txt:188
#, no-wrap, priority:100
msgid "OBJECT PREREQUISITES"
msgstr "PRÉ-REQUISITOS DO OBJETO"

#. type: Plain text
#: en/git-bundle.txt:194
#, priority:100
msgid "When creating bundles it is possible to create a self-contained bundle that can be unbundled in a repository with no common history, as well as providing negative revisions to exclude objects needed in the earlier parts of the history."
msgstr "Ao criar os pacotes, é possível criar um pacote independente que pode ser descompactado num repositório sem um histórico em comum, além de fornecer revisões negativas para excluir objetos necessários nas partes anteriores da história."

#. type: Plain text
#: en/git-bundle.txt:199
#, priority:100
msgid "Feeding a revision such as `new` to `git bundle create` will create a bundle file that contains all the objects reachable from the revision `new`. That bundle can be unbundled in any repository to obtain a full history that leads to the revision `new`:"
msgstr "A alimentação de uma revisão como `new` (nova) para `git bundle create` criará um arquivo pacote que contém todos os objetos acessíveis a partir da `nova` revisão. Esse pacote pode ser descompactado em qualquer repositório obtendo assim uma história completa que leva até à `nova` revisão:"

#. type: delimited block -
#: en/git-bundle.txt:202
#, no-wrap, priority:100
msgid "$ git bundle create full.bundle new\n"
msgstr "$ git bundle create full.bundle new\n"

#. type: Plain text
#: en/git-bundle.txt:207
#, priority:100
msgid "A revision range such as `old..new` will produce a bundle file that will require the revision `old` (and any objects reachable from it)  to exist for the bundle to be \"unbundle\"-able:"
msgstr "Uma linha de revisão como `old..new` produzirá um arquivo pacote que exigirá que a revisão `old` (antiga) (e quaisquer objetos alcançáveis a partir dele) exista para que o pacote possa ser descompactado:"

#. type: delimited block -
#: en/git-bundle.txt:210
#, no-wrap, priority:100
msgid "$ git bundle create full.bundle old..new\n"
msgstr "$ git bundle create full.bundle old..new\n"

#. type: Plain text
#: en/git-bundle.txt:215
#, priority:100
msgid "A self-contained bundle without any prerequisites can be extracted into anywhere, even into an empty repository, or be cloned from (i.e., `new`, but not `old..new`)."
msgstr "Um pacote independente e sem qualquer pré-requisito, pode ser extraído em qualquer lugar, mesmo num repositório vazio ou pode ser clonado a partir de (ou por exemplo, `new` mas não `old..new`)."

#. type: Plain text
#: en/git-bundle.txt:219
#, priority:100
msgid "It is okay to err on the side of caution, causing the bundle file to contain objects already in the destination, as these are ignored when unpacking at the destination."
msgstr "É bom errar pelo excesso de zelo, fazendo com que o arquivo bundle (pacote) contenha os objetos já no destino, pois eles são ignorados durante a descompactação no destino."

#. type: Plain text
#: en/git-bundle.txt:225
#, priority:100
msgid "If you want to match `git clone --mirror`, which would include your refs such as `refs/remotes/*`, use `--all`.  If you want to provide the same set of refs that a clone directly from the source repository would get, use `--branches --tags` for the `<git-rev-list-args>`."
msgstr "Caso queira combinar o comando `git clone --mirror`, que incluiria os seus refs como `refs/remotes/*`, utilize `--all`.  Caso queira informar o mesmo conjunto de referências que um clone vindo direto do repositório da origem teria, utilize `--branches --tags` para o `<git-rev-list-args>`."

#. type: Plain text
#: en/git-bundle.txt:229
#, priority:100
msgid "The 'git bundle verify' command can be used to check whether your recipient repository has the required prerequisite commits for a bundle."
msgstr "O comando 'git bundle verify' pode ser usado para verificar se o repositório do destinatário tem os pré-requisitos necessários para fazer o commit de um pacote."

#. type: Plain text
#: en/git-bundle.txt:238
#, priority:100
msgid "Assume you want to transfer the history from a repository R1 on machine A to another repository R2 on machine B.  For whatever reason, direct connection between A and B is not allowed, but we can move data from A to B via some mechanism (CD, email, etc.).  We want to update R2 with development made on the branch master in R1."
msgstr "Suponha que você queira transferir o histórico de um repositório R1 na máquina A para outro repositório R2 na máquina B.  Por algum motivo, a conexão direta entre A e B não é permitida, mas podemos mover os dados de A para B através de algum mecanismo (CD , e-mail, etc.).  Porém queremos atualizar o R2 com o desenvolvimento feito na ramificação master em R1."

#. type: Plain text
#: en/git-bundle.txt:243
#, priority:100
msgid "To bootstrap the process, you can first create a bundle that does not have any prerequisites. You can use a tag to remember up to what commit you last processed, in order to make it easy to later update the other repository with an incremental bundle:"
msgstr "Para inicializar o processo, você pode primeiro criar um pacote que não exista qualquer pré-requisitos. Você pode usar uma tag para ser lembrado até o último commit que for processado, serve para facilitar a atualização posterior do outro repositório com um pacote incremental:"

#. type: delimited block -
#: en/git-bundle.txt:248
#, no-wrap, priority:100
msgid ""
"machineA$ cd R1\n"
"machineA$ git bundle create file.bundle master\n"
"machineA$ git tag -f lastR2bundle master\n"
msgstr ""
"machineA$ cd R1\n"
"machineA$ git bundle create file.bundle master\n"
"machineA$ git tag -f lastR2bundle master\n"

#. type: Plain text
#: en/git-bundle.txt:253
#, priority:100
msgid "Then you transfer file.bundle to the target machine B. Because this bundle does not require any existing object to be extracted, you can create a new repository on machine B by cloning from it:"
msgstr "Em seguida, você transfere `file.bundle` para a máquina no destino B. Como esse pacote não requer que nenhum objeto existente seja extraído, você pode criar um novo repositório na máquina B clonando a partir dele:"

#. type: delimited block -
#: en/git-bundle.txt:256
#, no-wrap, priority:100
msgid "machineB$ git clone -b master /home/me/tmp/file.bundle R2\n"
msgstr "machineB$ git clone -b master /home/me/tmp/file.bundle R2\n"

#. type: Plain text
#: en/git-bundle.txt:261
#, priority:100
msgid "This will define a remote called \"origin\" in the resulting repository that lets you fetch and pull from the bundle. The $GIT_DIR/config file in R2 will have an entry like this:"
msgstr "Isso irá definir um ponto remoto chamado \"origin\" (origem) no repositório que permite que você capture e extraia do pacote. O arquivo `$GIT_DIR/config` no R2 terá uma entrada como esta:"

#. type: delimited block -
#: en/git-bundle.txt:266
#, no-wrap, priority:100
msgid ""
"[remote \"origin\"]\n"
"    url = /home/me/tmp/file.bundle\n"
"    fetch = refs/heads/*:refs/remotes/origin/*\n"
msgstr ""
"[remote \"origin\"]\n"
"    url = /home/me/tmp/file.bundle\n"
"    fetch = refs/heads/*:refs/remotes/origin/*\n"

#. type: Plain text
#: en/git-bundle.txt:271
#, priority:100
msgid "To update the resulting mine.git repository, you can fetch or pull after replacing the bundle stored at /home/me/tmp/file.bundle with incremental updates."
msgstr "Para atualizar o repositório `mine.git`, você pode capturar ou extrair após a reposição do pacote armazenado em `/home/me/tmp/file.bundle` com as atualizações incrementais."

#. type: Plain text
#: en/git-bundle.txt:274
#, priority:100
msgid "After working some more in the original repository, you can create an incremental bundle to update the other repository:"
msgstr "Depois de trabalhar um pouco mais no repositório original, você pode criar um pacote incremental para atualizar um outro repositório:"

#. type: delimited block -
#: en/git-bundle.txt:279
#, no-wrap, priority:100
msgid ""
"machineA$ cd R1\n"
"machineA$ git bundle create file.bundle lastR2bundle..master\n"
"machineA$ git tag -f lastR2bundle master\n"
msgstr ""
"machineA$ cd R1\n"
"machineA$ git bundle create file.bundle lastR2bundle..master\n"
"machineA$ git tag -f lastR2bundle master\n"

#. type: Plain text
#: en/git-bundle.txt:283
#, priority:100
msgid "You then transfer the bundle to the other machine to replace /home/me/tmp/file.bundle, and pull from it."
msgstr "Em seguida, você transfere o pacote para uma outra máquina para substituir o `/home/me/tmp/file.bundle` e captura dele."

#. type: delimited block -
#: en/git-bundle.txt:287
#, no-wrap, priority:100
msgid ""
"machineB$ cd R2\n"
"machineB$ git pull\n"
msgstr ""
"machineB$ cd R2\n"
"machineB$ git pull\n"

#. type: Plain text
#: en/git-bundle.txt:295
#, priority:100
msgid "If you know up to what commit the intended recipient repository should have the necessary objects, you can use that knowledge to specify the prerequisites, giving a cut-off point to limit the revisions and objects that go in the resulting bundle. The previous example used the lastR2bundle tag for this purpose, but you can use any other options that you would give to the linkgit:git-log[1] command. Here are more examples:"
msgstr "Caso saiba até qual commit do repositório nos destinatários pretendidos devem ter os objetos necessários, você poderá utilizar este conhecimento para definir o pré-requisito, informando um ponto de corte para limitar as revisões e os objetos inclusos no pacote. O exemplo anterior utilizou a tag `lastR2bundle` para essa finalidade, porém é possível utilizar outras opções que você daria ao comando linkgit:git-log[1]. Aqui mais alguns exemplos:"

#. type: Plain text
#: en/git-bundle.txt:297
#, priority:100
msgid "You can use a tag that is present in both:"
msgstr "Você pode utilizar uma tag que esteja presente em ambos:"

#. type: delimited block -
#: en/git-bundle.txt:300
#, no-wrap, priority:100
msgid "$ git bundle create mybundle v1.0.0..master\n"
msgstr "$ git bundle create mybundle v1.0.0..master\n"

#. type: Plain text
#: en/git-bundle.txt:303
#, priority:100
msgid "You can use a prerequisite based on time:"
msgstr "Você pode utilizar um pré-requisito utilizando o tempo como referência:"

#. type: delimited block -
#: en/git-bundle.txt:306
#, no-wrap, priority:100
msgid "$ git bundle create mybundle --since=10.days master\n"
msgstr "$ git bundle create mybundle --since=10.days master\n"

#. type: Plain text
#: en/git-bundle.txt:309
#, priority:100
msgid "You can use the number of commits:"
msgstr "Você pode utilizar a quantidade dos commits:"

#. type: delimited block -
#: en/git-bundle.txt:312
#, no-wrap, priority:100
msgid "$ git bundle create mybundle -10 master\n"
msgstr "$ git bundle create mybundle -10 master\n"

#. type: Plain text
#: en/git-bundle.txt:316
#, priority:100
msgid "You can run `git-bundle verify` to see if you can extract from a bundle that was created with a prerequisite:"
msgstr "Você pode executar o comando `git-bundle verify` para ver se você consegue extrair de um pacote que foi criado com um pré-requisito:"

#. type: delimited block -
#: en/git-bundle.txt:319
#, no-wrap, priority:100
msgid "$ git bundle verify mybundle\n"
msgstr "$ git bundle verify mybundle\n"

#. type: Plain text
#: en/git-bundle.txt:323
#, priority:100
msgid "This will list what commits you must have in order to extract from the bundle and will error out if you do not have them."
msgstr "Isso listará quais os commits você deve ter para extrair do pacote e encerrará com um erro caso você não os tenha."

#. type: Plain text
#: en/git-bundle.txt:327
#, priority:100
msgid "A bundle from a recipient repository's point of view is just like a regular repository which it fetches or pulls from. You can, for example, map references when fetching:"
msgstr "Um pacote do ponto de vista de um repositório do destinatário é como um repositório regular do qual ele captura ou extrai. Você pode, por exemplo, durante a captura é possível mapear quais são as referências:"

#. type: delimited block -
#: en/git-bundle.txt:330
#, no-wrap, priority:100
msgid "$ git fetch mybundle master:localRef\n"
msgstr "$ git fetch mybundle master:localRef\n"

#. type: Plain text
#: en/git-bundle.txt:333
#, priority:100
msgid "You can also see what references it offers:"
msgstr "Você também pode ver quais são as referências que ela oferece:"

#. type: delimited block -
#: en/git-bundle.txt:336
#, no-wrap, priority:100
msgid "$ git ls-remote mybundle\n"
msgstr "$ git ls-remote mybundle\n"

#. type: Title -
#: en/git-bundle.txt:339
#, fuzzy, no-wrap, priority:100
#| msgid "BUNDLE FORMAT"
msgid "FILE FORMAT"
msgstr "FORMATO BUNDLE"

#. type: Plain text
#: en/git-bundle.txt:342
#, fuzzy, priority:100
#| msgid "See linkgit:gitmailmap[5]."
msgid "See linkgit:gitformat-bundle[5]."
msgstr "Consulte linkgit:gitmailmap[5]."

#. type: Title =
#: en/git-cat-file.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-cat-file(1)"
msgstr "git-cat-file(1)"

#. type: Plain text
#: en/git-cat-file.txt:7
#, priority:80
msgid "git-cat-file - Provide content or type and size information for repository objects"
msgstr "git-cat-file - Forneça as informações do conteúdo, tipo e do tamanho para os objetos do repositório"

#. type: Plain text
#: en/git-cat-file.txt:20
#, fuzzy, no-wrap, priority:80
#| msgid ""
#| "'git cat-file' <type> <object>\n"
#| "'git cat-file' (-e | -p) <object>\n"
#| "'git cat-file' (-t | -s) [--allow-unknown-type] <object>\n"
#| "'git cat-file' (--batch | --batch-check | --batch-command) [--batch-all-objects]\n"
#| "\t     [--buffer] [--follow-symlinks] [--unordered]\n"
#| "\t     [--textconv | --filters]\n"
#| "'git cat-file' (--textconv | --filters)\n"
#| "\t     [<rev>:<path|tree-ish> | --path=<path|tree-ish> <rev>]\n"
msgid ""
"'git cat-file' <type> <object>\n"
"'git cat-file' (-e | -p) <object>\n"
"'git cat-file' (-t | -s) [--allow-unknown-type] <object>\n"
"'git cat-file' (--batch | --batch-check | --batch-command) [--batch-all-objects]\n"
"\t     [--buffer] [--follow-symlinks] [--unordered]\n"
"\t     [--textconv | --filters] [-z]\n"
"'git cat-file' (--textconv | --filters)\n"
"\t     [<rev>:<path|tree-ish> | --path=<path|tree-ish> <rev>]\n"
msgstr ""
"'git cat-file' <tipo> <objeto>\n"
"'git cat-file' (-e | -p) <objeto>\n"
"'git cat-file' (-t | -s) [--allow-unknown-type] <objeto>\n"
"'git cat-file' (--batch | --batch-check | --batch-command) [--batch-all-objects]\n"
"\t     [--buffer] [--follow-symlinks] [--unordered]\n"
"\t     [--textconv | --filters]\n"
"'git cat-file' (--textconv | --filters)\n"
"\t     [<rev>:<path|tree-ish> | --path=<path|tree-ish> <rev>]\n"

#. type: Plain text
#: en/git-cat-file.txt:27
#, priority:80
msgid "In its first form, the command provides the content or the type of an object in the repository. The type is required unless `-t` or `-p` is used to find the object type, or `-s` is used to find the object size, or `--textconv` or `--filters` is used (which imply type \"blob\")."
msgstr "Em sua primeira forma, o comando fornece o conteúdo ou o tipo de um objeto no repositório. O tipo é necessário, a menos que a opção `-t` ou `-p` seja utilizado para encontrar o tipo de objeto, ou `-s` seja utilizado para encontrar seu tamanho, ou a opção `--textconv` ou `--filters` seja utilizado (que implica no tipo \"blob\" (bolha))."

#. type: Plain text
#: en/git-cat-file.txt:34
#, priority:80
msgid "In the second form, a list of objects (separated by linefeeds) is provided on stdin, and the SHA-1, type, and size of each object is printed on stdout. The output format can be overridden using the optional `<format>` argument. If either `--textconv` or `--filters` was specified, the input is expected to list the object names followed by the path name, separated by a single whitespace, so that the appropriate drivers can be determined."
msgstr "Em sua segunda forma, é oferecida uma lista de objetos (separados por linhas de alimentação) no \"stdin\", o SHA-1, o tipo e seu tamanho de cada objeto exibidos no \"stdout\". O formato de saída pode ser substituído utilizando a opção opcional `<formato>`. Caso a opção `--textconv` ou` --filters` foram sejam utilizados, espera-se que a entrada liste os nomes dos objetos seguidos pelo nome do caminho, separados por um único espaço, para que os devidos controladores ser determinados."

#. type: Labeled list
#: en/git-cat-file.txt:37 en/git-fsck.txt:23 en/git-tag.txt:210 en/git.txt:391
#, no-wrap, priority:240
msgid "<object>"
msgstr "<objeto>"

#. type: Plain text
#: en/git-cat-file.txt:41
#, priority:80
msgid "The name of the object to show.  For a more complete list of ways to spell object names, see the \"SPECIFYING REVISIONS\" section in linkgit:gitrevisions[7]."
msgstr "O nome do objeto que será exibido.  Para uma lista mais completa de maneiras de escrever os nomes dos objetos, consulte a seção \"DEFININDO AS REVISÕES\" no linkgit:gitrevisions[7]."

#. type: Plain text
#: en/git-cat-file.txt:45
#, priority:80
msgid "Instead of the content, show the object type identified by `<object>`."
msgstr "Em vez do conteúdo, exiba o tipo do objeto identificado por `<objeto>`."

#. type: Plain text
#: en/git-cat-file.txt:49
#, priority:80
msgid "Instead of the content, show the object size identified by `<object>`."
msgstr "Em vez do conteúdo, exiba o tamanho do objeto identificado por `<objeto>`."

#. type: Plain text
#: en/git-cat-file.txt:54
#, priority:80
msgid "Exit with zero status if `<object>` exists and is a valid object. If `<object>` is of an invalid format exit with non-zero and emits an error on stderr."
msgstr "Encerre com a condição zero caso o `<objeto>` exista e seja um objeto válido. Caso o `<objeto>` tenha um formato inválido, encerre com um valor diferente de zero e emita uma mensagem de erro no \"stderr\"."

#. type: Plain text
#: en/git-cat-file.txt:57
#, priority:80
msgid "Pretty-print the contents of `<object>` based on its type."
msgstr "Faça uma impressão bonita do conteúdo do `<objeto>` com base no seu tipo."

#. type: Labeled list
#: en/git-cat-file.txt:58 en/git.txt:415
#, no-wrap, priority:100
msgid "<type>"
msgstr "<tipo>"

#. type: Plain text
#: en/git-cat-file.txt:65
#, priority:80
msgid "Typically this matches the real type of `<object>` but asking for a type that can trivially be dereferenced from the given `<object>` is also permitted.  An example is to ask for a \"tree\" with `<object>` being a commit object that contains it, or to ask for a \"blob\" with `<object>` being a tag object that points at it."
msgstr "Normalmente, isso coincide com tipo real do `<objeto>`, mas solicitar um tipo sem referência de um determinado `<objeto>` também é permitido.  Um exemplo é pedir uma \"árvore\" com o `<objeto>` sendo um objeto commit que o contém, ou pedir uma \"bolha\" com o `<objeto>` sendo uma tag que aponte para ela."

#. type: Labeled list
#: en/git-cat-file.txt:66 en/git-log.txt:70
#, ignore-same, no-wrap, priority:260
msgid "--[no-]mailmap"
msgstr "--[no-]mailmap"

#. type: Labeled list
#: en/git-cat-file.txt:67 en/git-log.txt:71
#, ignore-same, no-wrap, priority:260
msgid "--[no-]use-mailmap"
msgstr "--[no-]use-mailmap"

#. type: Plain text
#: en/git-cat-file.txt:71
#, fuzzy, priority:80
#| msgid "Use mailmap file to map author and committer names and email addresses to canonical real names and email addresses. See linkgit:git-shortlog[1]."
msgid "Use mailmap file to map author, committer and tagger names and email addresses to canonical real names and email addresses.  See linkgit:git-shortlog[1]."
msgstr "Utilize o arquivo mailmap para mapear os nomes dos autores dos commits e seus endereços de e-mail para nomes e endereços de e-mail reais canônicos. Consulte linkgit:git-shortlog[1]."

#. type: Plain text
#: en/git-cat-file.txt:77
#, priority:80
msgid "Show the content as transformed by a textconv filter. In this case, `<object>` has to be of the form `<tree-ish>:<path>`, or `:<path>` in order to apply the filter to the content recorded in the index at `<path>`."
msgstr "Exiba o conteúdo da maneira que foi transformado por um filtro textconv. Nesse caso, o `<objeto>` deve estar no formato `<árvore>:<caminho>` ou `:<caminho>` para aplicar o filtro ao conteúdo registrado no índice do `<caminho>`."

#. type: Labeled list
#: en/git-cat-file.txt:78
#, ignore-same, no-wrap, priority:80
msgid "--filters"
msgstr "--filters"

#. type: Plain text
#: en/git-cat-file.txt:83
#, priority:80
msgid "Show the content as converted by the filters configured in the current working tree for the given `<path>` (i.e. smudge filters, end-of-line conversion, etc). In this case, `<object>` has to be of the form `<tree-ish>:<path>`, or `:<path>`."
msgstr "Exiba o conteúdo conforme foi convertido pelos filtros configurados na árvore de trabalho atual para o `<caminho>` informado (por exemplo, filtros de manchas, conversão da quebra de linha, etc.). Nesse caso, o `<objeto>` deve estar no formato `<árvore>:<caminho>` ou `:<caminho>`."

#. type: Labeled list
#: en/git-cat-file.txt:84
#, no-wrap, priority:80
msgid "--path=<path>"
msgstr "--path=<caminho>"

#. type: Plain text
#: en/git-cat-file.txt:88
#, priority:80
msgid "For use with `--textconv` or `--filters`, to allow specifying an object name and a path separately, e.g. when it is difficult to figure out the revision from which the blob came."
msgstr "Para a utilização com o comando `--textconv` ou `--filters`, permitindo a definição de um nome do objeto e um caminho separadamente, quando for difícil descobrir a revisão de onde a bolha veio por exemplo."

#. type: Labeled list
#: en/git-cat-file.txt:89 en/git-mktree.txt:32
#, ignore-same, no-wrap, priority:100
msgid "--batch"
msgstr "--batch"

#. type: Labeled list
#: en/git-cat-file.txt:90
#, no-wrap, priority:80
msgid "--batch=<format>"
msgstr "--batch=<formato>"

#. type: Plain text
#: en/git-cat-file.txt:96
#, priority:80
msgid "Print object information and contents for each object provided on stdin.  May not be combined with any other options or arguments except `--textconv` or `--filters`, in which case the input lines also need to specify the path, separated by whitespace.  See the section `BATCH OUTPUT` below for details."
msgstr "Exiba a informação do objeto e seu conteúdo para cada objeto informado no stdin.  Talvez não possa ser combinado com nenhuma outra opção exceto `--textconv` ou `--filters`, neste caso, as linhas da entrada também precisam informar o caminho, separado por espaços.  Para mais detalhes consulte a seção `SAÍDA DO LOTE` abaixo."

#. type: Labeled list
#: en/git-cat-file.txt:97
#, ignore-same, no-wrap, priority:80
msgid "--batch-check"
msgstr "--batch-check"

#. type: Labeled list
#: en/git-cat-file.txt:98
#, no-wrap, priority:80
msgid "--batch-check=<format>"
msgstr "--batch-check=<formato>"

#. type: Plain text
#: en/git-cat-file.txt:104
#, priority:80
msgid "Print object information for each object provided on stdin.  May not be combined with any other options or arguments except `--textconv` or `--filters`, in which case the input lines also need to specify the path, separated by whitespace.  See the section `BATCH OUTPUT` below for details."
msgstr "Exiba as informações do objeto para cada objeto informado no stdin.  Talvez não possa ser combinado com nenhuma outra opção exceto `--textconv` ou `--filters`, neste caso, as linhas da entrada também precisam informar o caminho, separado por espaços.  Para mais detalhes consulte a seção `SAÍDA DO LOTE` abaixo."

#. type: Labeled list
#: en/git-cat-file.txt:105
#, ignore-same, no-wrap, priority:80
msgid "--batch-command"
msgstr "--batch-command"

#. type: Labeled list
#: en/git-cat-file.txt:106
#, no-wrap, priority:80
msgid "--batch-command=<format>"
msgstr "--batch-command=<formato>"

#. type: Plain text
#: en/git-cat-file.txt:112
#, priority:80
msgid "Enter a command mode that reads commands and arguments from stdin. May only be combined with `--buffer`, `--textconv` or `--filters`. In the case of `--textconv` or `--filters`, the input lines also need to specify the path, separated by whitespace. See the section `BATCH OUTPUT` below for details."
msgstr "Insira um modo de comando que faça a leitura dos comandos e dos argumentos do stdin. Só pode ser combinado com `--buffer`, `--textconv` ou `--filters`. No caso de `--textconv` ou de `--filters`, as linhas da entrada também precisam especificar o caminho, separado por espaços em branco. Consulte a seção `SAÍDA DE LOTE` abaixo para obter mais detalhes."

#. type: Plain text
#: en/git-cat-file.txt:114
#, priority:80
msgid "`--batch-command` recognizes the following commands:"
msgstr "o `--batch-command` reconhece os seguintes comandos:"

#. type: Labeled list
#: en/git-cat-file.txt:116
#, no-wrap, priority:80
msgid "contents <object>"
msgstr "conteúdos <objeto>"

#. type: Plain text
#: en/git-cat-file.txt:119
#, priority:80
msgid "Print object contents for object reference `<object>`. This corresponds to the output of `--batch`."
msgstr "Imprime o conteúdo do objeto para a referência do objeto `<objeto>`. Isso corresponde à saída `--batch`."

#. type: Labeled list
#: en/git-cat-file.txt:120
#, no-wrap, priority:80
msgid "info <object>"
msgstr "info <objeto>"

#. type: Plain text
#: en/git-cat-file.txt:123
#, priority:80
msgid "Print object info for object reference `<object>`. This corresponds to the output of `--batch-check`."
msgstr "Imprime as informações do objeto para a referência do objeto `<objeto>`. Isso corresponde à saída `--batch-check`."

#. type: Labeled list
#: en/git-cat-file.txt:124
#, no-wrap, priority:80
msgid "flush"
msgstr "flush"

#. type: Plain text
#: en/git-cat-file.txt:129
#, priority:80
msgid "Used with `--buffer` to execute all preceding commands that were issued since the beginning or since the last flush was issued. When `--buffer` is used, no output will come until a `flush` is issued. When `--buffer` is not used, commands are flushed each time without issuing `flush`."
msgstr "É utilizado com a opção `--buffer` para executar todos os comandos anteriores que foram emitidos desde o início ou desde que o último flush tenha sido feito. Quando a opção `--buffer` é utilizada, nenhuma saída virá até que um `flush` seja emitido. Quando `--buffer` não for utilizado, os comandos são liberados um por vez sem emitir um `flush`."

#. type: Labeled list
#: en/git-cat-file.txt:132
#, ignore-same, no-wrap, priority:80
msgid "--batch-all-objects"
msgstr "--batch-all-objects"

#. type: Plain text
#: en/git-cat-file.txt:140
#, priority:80
msgid "Instead of reading a list of objects on stdin, perform the requested batch operation on all objects in the repository and any alternate object stores (not just reachable objects).  Requires `--batch` or `--batch-check` be specified. By default, the objects are visited in order sorted by their hashes; see also `--unordered` below. Objects are presented as-is, without respecting the \"replace\" mechanism of linkgit:git-replace[1]."
msgstr "Em vez de ler uma lista dos objetos no stdin, execute a operação em lote solicitada em todos os objetos no repositório e em quaisquer outros armazenamentos alternativos dos objetos (não apenas nos objetos que forem acessíveis).  Requer que o comando `--batch` ou `--batch-check` seja utilizado. É predefinido que os objetos são capturados através da ordem dos seus hashes; consulte abaixo também o comando `--unordered`. Os objetos são apresentados como estão, sem respeitar o mecanismo de \"replace\" (substituição) do comando linkgit:git-replace[1]."

#. type: Labeled list
#: en/git-cat-file.txt:141
#, ignore-same, no-wrap, priority:80
msgid "--buffer"
msgstr "--buffer"

#. type: Plain text
#: en/git-cat-file.txt:147
#, priority:80
msgid "Normally batch output is flushed after each object is output, so that a process can interactively read and write from `cat-file`. With this option, the output uses normal stdio buffering; this is much more efficient when invoking `--batch-check` or `--batch-command` on a large number of objects."
msgstr "Normalmente, a saída em lote é liberada após a saída de cada objeto, para que um processo possa ler e gravar de forma interativa a partir do `cat-file`. Com esta opção, a saída utiliza uma memória intermédia normal no stdio; por ser muito mais eficiente ao invocar comando `--batch-check` ou `--batch-command` numa grande quantidade de objetos."

#. type: Labeled list
#: en/git-cat-file.txt:148
#, ignore-same, no-wrap, priority:80
msgid "--unordered"
msgstr "--unordered"

#. type: Plain text
#: en/git-cat-file.txt:157
#, priority:80
msgid "When `--batch-all-objects` is in use, visit objects in an order which may be more efficient for accessing the object contents than hash order. The exact details of the order are unspecified, but if you do not require a specific order, this should generally result in faster output, especially with `--batch`.  Note that `cat-file` will still show each object only once, even if it is stored multiple times in the repository."
msgstr "Quando o comando `--batch-all-objects` estiver em uso, visite os objetos numa ordem que possa ser mais eficiente para acessar o conteúdo do objeto do que pela ordem do hash. Os detalhes exatos do pedido não são especificados, porém caso não precise de um pedido específico, em geral isso resultará numa saída mais rápida, especialmente com a opção `--batch`.  Observe que `cat-file` ainda exibirá cada objeto apenas uma vez, mesmo que ele seja armazenado várias vezes no repositório."

#. type: Labeled list
#: en/git-cat-file.txt:158
#, ignore-same, no-wrap, priority:80
msgid "--allow-unknown-type"
msgstr "--allow-unknown-type"

#. type: Plain text
#: en/git-cat-file.txt:160
#, priority:80
msgid "Allow `-s` or `-t` to query broken/corrupt objects of unknown type."
msgstr "Permita que `-s` ou `-t` consultem os objetos quebrados/corrompidos de um tipo desconhecido."

#. type: Labeled list
#: en/git-cat-file.txt:161
#, ignore-same, no-wrap, priority:80
msgid "--follow-symlinks"
msgstr "--follow-symlinks"

#. type: Plain text
#: en/git-cat-file.txt:170
#, priority:80
msgid "With `--batch` or `--batch-check`, follow symlinks inside the repository when requesting objects with extended SHA-1 expressions of the form tree-ish:path-in-tree.  Instead of providing output about the link itself, provide output about the linked-to object.  If a symlink points outside the tree-ish (e.g. a link to `/foo` or a root-level link to `../foo`), the portion of the link which is outside the tree will be printed."
msgstr "Com a opção `--batch` ou `--batch-check`, siga os links simbólicos dentro do repositório durante a solicitação dos objetos das expressões SHA-1 estendidas no formato `tree-ish: path-in-tree`.  Em vez de providenciar a geração sobre o próprio link, gere uma saída sobre o objeto que for vinculado.  Caso um link simbólico aponte para fora da árvore (um link para `/foo` ou um link na raiz para `../foo` por exemplo), a parte do link que está fora da árvore será exibida."

#. type: Plain text
#: en/git-cat-file.txt:174
#, priority:80
msgid "This option does not (currently) work correctly when an object in the index is specified (e.g. `:link` instead of `HEAD:link`) rather than one in the tree."
msgstr "Esta opção (atualmente) não funciona corretamente quando um objeto no índice seja definido (`:link` em vez do `HEAD:link` por exemplo) em vez de um na árvore."

#. type: Plain text
#: en/git-cat-file.txt:177
#, priority:80
msgid "This option cannot (currently) be used unless `--batch` or `--batch-check` is used."
msgstr "Esta opção (atualmente) não pode ser utilizada, a menos que a opção `--batch` ou `--batch-check` seja utilizado."

#. type: Plain text
#: en/git-cat-file.txt:179
#, priority:80
msgid "For example, consider a git repository containing:"
msgstr "Considere um repositório git contendo, por exemplo:"

#. type: Plain text
#: en/git-cat-file.txt:186
#, no-wrap, priority:80
msgid ""
"\tf: a file containing \"hello\\n\"\n"
"\tlink: a symlink to f\n"
"\tdir/link: a symlink to ../f\n"
"\tplink: a symlink to ../f\n"
"\talink: a symlink to /etc/passwd\n"
msgstr ""
"\tf: a file containing \"hello\\n\"\n"
"\tlink: um link simbólico para f\n"
"\tdir/link: um link simbólico para ../f\n"
"\tplink: um link simbólico para ../f\n"
"\talink: um link simbólico para /etc/passwd\n"

#. type: Plain text
#: en/git-cat-file.txt:189
#, priority:80
msgid "For a regular file `f`, `echo HEAD:f | git cat-file --batch` would print"
msgstr "Para um arquivo normal `f`, `echo HEAD:f | git cat-file --batch` exibe"

#. type: Plain text
#: en/git-cat-file.txt:192
#, no-wrap, priority:80
msgid "\tce013625030ba8dba906f756967f9e9ca394464a blob 6\n"
msgstr "\tce013625030ba8dba906f756967f9e9ca394464a blob 6\n"

#. type: Plain text
#: en/git-cat-file.txt:197
#, priority:80
msgid "And `echo HEAD:link | git cat-file --batch --follow-symlinks` would print the same thing, as would `HEAD:dir/link`, as they both point at `HEAD:f`."
msgstr "E `echo HEAD:link | git cat-file --batch --follow-symlinks` exibiria a mesma coisa, assim como `HEAD:dir/link`, como ambos apontam para `HEAD:f`."

#. type: Plain text
#: en/git-cat-file.txt:200
#, priority:80
msgid "Without `--follow-symlinks`, these would print data about the symlink itself.  In the case of `HEAD:link`, you would see"
msgstr "Sem a opção `--follow-symlinks`, irão exibir os dados sobre o próprio link simbólico.  No caso de `HEAD: link`, você veria"

#. type: Plain text
#: en/git-cat-file.txt:203
#, no-wrap, priority:80
msgid "\t4d1ae35ba2c8ec712fa2a379db44ad639ca277bd blob 1\n"
msgstr "\t4d1ae35ba2c8ec712fa2a379db44ad639ca277bd blob 1\n"

#. type: Plain text
#: en/git-cat-file.txt:207
#, priority:80
msgid "Both `plink` and `alink` point outside the tree, so they would respectively print:"
msgstr "Ambos `plink` e `alink` apontam para fora da árvore, então eles imprimiriam respectivamente:"

#. type: Plain text
#: en/git-cat-file.txt:211
#, no-wrap, priority:80
msgid ""
"\tsymlink 4\n"
"\t../f\n"
msgstr ""
"\tsymlink 4\n"
"\t../f\n"

#. type: Plain text
#: en/git-cat-file.txt:214
#, no-wrap, priority:80
msgid ""
"\tsymlink 11\n"
"\t/etc/passwd\n"
msgstr ""
"\tsymlink 11\n"
"\t/etc/passwd\n"

#. type: Plain text
#: en/git-cat-file.txt:220
#, priority:80
msgid "Only meaningful with `--batch`, `--batch-check`, or `--batch-command`; input is NUL-delimited instead of newline-delimited."
msgstr ""

#. type: Title -
#: en/git-cat-file.txt:223 en/git-check-attr.txt:48 en/git-check-ignore.txt:66 en/git-check-mailmap.txt:32 en/git-cvsimport.txt:188 en/git-fetch.txt:194 en/git-ls-files.txt:210 en/git-merge-tree.txt:69 en/git-push.txt:433 en/git-show-branch.txt:134 en/git-show-ref.txt:97 en/git-status.txt:156 en/git-update-server-info.txt:23
#, no-wrap, priority:280
msgid "OUTPUT"
msgstr "SAÍDA"

#. type: Plain text
#: en/git-cat-file.txt:225
#, priority:80
msgid "If `-t` is specified, one of the `<type>`."
msgstr "Caso a opção `-t` seja utilizada, um do `<tipo>`."

#. type: Plain text
#: en/git-cat-file.txt:227
#, priority:80
msgid "If `-s` is specified, the size of the `<object>` in bytes."
msgstr "Caso a opção `-s` seja utilizada, o tamanho do `<objeto>` em bytes."

#. type: Plain text
#: en/git-cat-file.txt:229
#, priority:80
msgid "If `-e` is specified, no output, unless the `<object>` is malformed."
msgstr "Caso a opção `-e` seja utilizada, nenhuma saída, a menos que o `<objeto>` esteja malformado."

#. type: Plain text
#: en/git-cat-file.txt:231
#, priority:80
msgid "If `-p` is specified, the contents of `<object>` are pretty-printed."
msgstr "Caso a opção `-p` seja utilizada, o conteúdo de `<objeto>` será bem impresso."

#. type: Plain text
#: en/git-cat-file.txt:234
#, priority:80
msgid "If `<type>` is specified, the raw (though uncompressed) contents of the `<object>` will be returned."
msgstr "Caso um `<tipo>` seja utilizada, o conteúdo bruto (embora não compactado) do `<objeto>` será retornado."

#. type: Title -
#: en/git-cat-file.txt:236
#, no-wrap, priority:80
msgid "BATCH OUTPUT"
msgstr "SAÍDA DO LOTE"

#. type: Plain text
#: en/git-cat-file.txt:242
#, priority:80
msgid "If `--batch` or `--batch-check` is given, `cat-file` will read objects from stdin, one per line, and print information about them. By default, the whole line is considered as an object, as if it were fed to linkgit:git-rev-parse[1]."
msgstr "Caso o comando `--batch` ou `--batch-check` seja utilizado, o `cat-file` lerá os objetos vindos do stdin, um por linha, imprimindo as informações sobre eles. É predefinido que a linha inteira seja considerada como um objeto, como se fosse alimentada para o linkgit:git-rev-parse[1]."

#. type: Plain text
#: en/git-cat-file.txt:249
#, priority:80
msgid "When `--batch-command` is given, `cat-file` will read commands from stdin, one per line, and print information based on the command given. With `--batch-command`, the `info` command followed by an object will print information about the object the same way `--batch-check` would, and the `contents` command followed by an object prints contents in the same way `--batch` would."
msgstr "Quando a opção `--batch-command` for dado, o `cat-file` fará a leitura dos comandos do stdin, um por linha, imprimindo informações com base no comando informado. Com o `--batch-command`, o comando `info` seguido de um objeto imprimirá as informações sobre o objeto da mesma maneira que a opção `--batch-check` faria, e o comando `contents` seguido de um conteúdo impresso do objeto igual ao que a opção `--batch` faria."

#. type: Plain text
#: en/git-cat-file.txt:254
#, priority:80
msgid "You can specify the information shown for each object by using a custom `<format>`. The `<format>` is copied literally to stdout for each object, with placeholders of the form `%(atom)` expanded, followed by a newline. The available atoms are:"
msgstr "Você pode definir as informações exibidas para cada objeto utilizando um `<formato>` personalizado. O `<formato>` é copiado de forma literal para cada objeto no stdout, com espaços reservados no formato `%(atom)` expandidos, seguidos por uma nova linha. Os átomos que estão disponíveis são:"

#. type: Labeled list
#: en/git-cat-file.txt:255
#, ignore-same, no-wrap, priority:80
msgid "`objectname`"
msgstr "`objectname`"

#. type: Plain text
#: en/git-cat-file.txt:257
#, priority:80
msgid "The full hex representation of the object name."
msgstr "A representação completa do hex do nome do objeto."

#. type: Labeled list
#: en/git-cat-file.txt:258
#, ignore-same, no-wrap, priority:80
msgid "`objecttype`"
msgstr "`objecttype`"

#. type: Plain text
#: en/git-cat-file.txt:260
#, priority:80
msgid "The type of the object (the same as `cat-file -t` reports)."
msgstr "O tipo do objeto (o mesmo que os relatórios `cat-file -t`)."

#. type: Labeled list
#: en/git-cat-file.txt:261
#, ignore-same, no-wrap, priority:80
msgid "`objectsize`"
msgstr "`objectsize`"

#. type: Plain text
#: en/git-cat-file.txt:264
#, priority:80
msgid "The size, in bytes, of the object (the same as `cat-file -s` reports)."
msgstr "O tamanho, em bytes, do objeto (o mesmo que os relatórios `cat-file -s`)."

#. type: Labeled list
#: en/git-cat-file.txt:265
#, no-wrap, priority:80
msgid "`objectsize:disk`"
msgstr "`objectsize:disk`"

#. type: Plain text
#: en/git-cat-file.txt:268
#, priority:80
msgid "The size, in bytes, that the object takes up on disk. See the note about on-disk sizes in the `CAVEATS` section below."
msgstr "O tamanho, em bytes, que o objeto ocupa no disco. Consulte a nota sobre os tamanhos do disco na seção `RESSALVAS` abaixo."

#. type: Labeled list
#: en/git-cat-file.txt:269
#, ignore-same, no-wrap, priority:80
msgid "`deltabase`"
msgstr "`deltabase`"

#. type: Plain text
#: en/git-cat-file.txt:274
#, priority:80
msgid "If the object is stored as a delta on-disk, this expands to the full hex representation of the delta base object name.  Otherwise, expands to the null OID (all zeroes). See `CAVEATS` below."
msgstr "Caso o objeto seja armazenado como um delta no disco, isso se expandirá para a representação hexadecimal completa do nome do objeto base delta.  Caso contrário, expande-se para o OID nulo (todos zeros). Consulte `RESSALVAS` abaixo."

#. type: Labeled list
#: en/git-cat-file.txt:275
#, ignore-same, no-wrap, priority:80
msgid "`rest`"
msgstr "`rest`"

#. type: Plain text
#: en/git-cat-file.txt:281
#, priority:80
msgid "If this atom is used in the output string, input lines are split at the first whitespace boundary. All characters before that whitespace are considered to be the object name; characters after that first run of whitespace (i.e., the \"rest\" of the line) are output in place of the `%(rest)` atom."
msgstr "Caso este átomo seja utilizado na cadeia da saída, as linhas de entrada serão divididas no primeiro limite de espaço. Todos os caracteres anteriores a esse espaço são considerados como o nome do objeto; caracteres após a primeira execução do espaço (ou seja, o \"resto\" da linha) são exibidos no lugar do átomo `%(rest)`."

#. type: Plain text
#: en/git-cat-file.txt:284
#, priority:80
msgid "If no format is specified, the default format is `%(objectname)  %(objecttype) %(objectsize)`."
msgstr "Caso nenhum formato seja definido, o formato predefinido é `%(objectname)  %(objecttype) %(objectsize)`."

#. type: Plain text
#: en/git-cat-file.txt:288
#, priority:80
msgid "If `--batch` is specified, or if `--batch-command` is used with the `contents` command, the object information is followed by the object contents (consisting of `%(objectsize)` bytes), followed by a newline."
msgstr "Caso `--batch` seja utilizado, ou caso o `--batch-command` seja utilizado com o comando `contents`, as informações do objeto são seguidas pelo conteúdo do objeto (consistindo em `%(objectsize)` bytes), seguido por uma nova linha."

#. type: Plain text
#: en/git-cat-file.txt:290
#, priority:80
msgid "For example, `--batch` without a custom format would produce:"
msgstr "Por exemplo, o comando `--batch` sem um formato personalizado produziria:"

#. type: delimited block -
#: en/git-cat-file.txt:294
#, no-wrap, priority:80
msgid ""
"<oid> SP <type> SP <size> LF\n"
"<contents> LF\n"
msgstr ""
"<oid> SP <tipo> SP <tamanho> LF\n"
"<conteúdo> LF\n"

#. type: Plain text
#: en/git-cat-file.txt:297
#, priority:80
msgid "Whereas `--batch-check='%(objectname) %(objecttype)'` would produce:"
msgstr "Considerando que `--batch-check ='%(objeto-nome)% (objeto-tipo)'` produziria:"

#. type: delimited block -
#: en/git-cat-file.txt:300
#, no-wrap, priority:80
msgid "<oid> SP <type> LF\n"
msgstr "<oid> SP <tipo> LF\n"

#. type: Plain text
#: en/git-cat-file.txt:304
#, priority:80
msgid "If a name is specified on stdin that cannot be resolved to an object in the repository, then `cat-file` will ignore any custom format and print:"
msgstr "Caso um nome seja utilizado no stdin que não possa ser resolvido como um objeto no repositório, então o `cat-file` irá ignorar qualquer outro formato customizado e exibirá:"

#. type: delimited block -
#: en/git-cat-file.txt:307 en/git-cat-file.txt:333
#, no-wrap, priority:80
msgid "<object> SP missing LF\n"
msgstr "<objeto> SP faltando LF\n"

#. type: Plain text
#: en/git-cat-file.txt:310
#, priority:80
msgid "If a name is specified that might refer to more than one object (an ambiguous short sha), then `cat-file` will ignore any custom format and print:"
msgstr "Caso seja utilizado um nome que possa se referir a mais de um objeto (um SHA-1 curto e ambíguo), então o `cat-file` ignorará qualquer formato personalizado e exibirá:"

#. type: delimited block -
#: en/git-cat-file.txt:313
#, no-wrap, priority:80
msgid "<object> SP ambiguous LF\n"
msgstr "<objeto> SP ambíguo LF\n"

#. type: Plain text
#: en/git-cat-file.txt:318
#, priority:80
msgid "If `--follow-symlinks` is used, and a symlink in the repository points outside the repository, then `cat-file` will ignore any custom format and print:"
msgstr "Caso a opção `--follow-symlinks` seja utilizado e um link-simbólico no repositório apontar para fora do repositório, então o `cat-file` irá ignorar qualquer outro formato customizado e exibirá:"

#. type: delimited block -
#: en/git-cat-file.txt:322
#, no-wrap, priority:80
msgid ""
"symlink SP <size> LF\n"
"<symlink> LF\n"
msgstr ""
"link-simbólico SP <tamanho> LF\n"
"<link-simbólico> LF\n"

#. type: Plain text
#: en/git-cat-file.txt:327
#, priority:80
msgid "The symlink will either be absolute (beginning with a `/`), or relative to the tree root.  For instance, if dir/link points to `../../foo`, then `<symlink>` will be `../foo`.  `<size>` is the size of the symlink in bytes."
msgstr "O link simbólico ou será absoluto (começando com um `/`) ou relativo à raiz da árvore.  Por exemplo, caso o  dir/link aponte para `../../foo`, então o `<symlink>` será `../foo`.  O `<tamanho>` é o tamanho do link simbólico em bytes."

#. type: Plain text
#: en/git-cat-file.txt:330
#, priority:80
msgid "If `--follow-symlinks` is used, the following error messages will be displayed:"
msgstr "Caso a opção `--follow-symlinks` seja utilizado, as seguintes mensagens de erro serão exibidas:"

#. type: Plain text
#: en/git-cat-file.txt:335
#, priority:80
msgid "is printed when the initial symlink requested does not exist."
msgstr "é impresso quando o link simbólico inicial solicitado não existir."

#. type: delimited block -
#: en/git-cat-file.txt:339
#, no-wrap, priority:80
msgid ""
"dangling SP <size> LF\n"
"<object> LF\n"
msgstr ""
"dangling SP <tamanho> LF\n"
"<objeto> LF\n"

#. type: Plain text
#: en/git-cat-file.txt:342
#, priority:80
msgid "is printed when the initial symlink exists, but something that it (transitive-of) points to does not."
msgstr "é impresso quando o link-simbólico inicial existe, mas algo que ele (transitivo de ) aponte o contrário."

#. type: delimited block -
#: en/git-cat-file.txt:346
#, no-wrap, priority:80
msgid ""
"loop SP <size> LF\n"
"<object> LF\n"
msgstr ""
"loop SP <tamanho> LF\n"
"<objeto> LF\n"

#. type: Plain text
#: en/git-cat-file.txt:349
#, priority:80
msgid "is printed for symlink loops (or any symlinks that require more than 40 link resolutions to resolve)."
msgstr "é impresso para os loops dos links simbólicos (ou quaisquer links simbólicos onde exijam mais de 40 resoluções de link para serem resolvidos)."

#. type: delimited block -
#: en/git-cat-file.txt:353
#, no-wrap, priority:80
msgid ""
"notdir SP <size> LF\n"
"<object> LF\n"
msgstr ""
"notdir SP <tamanho> LF\n"
"<objeto> LF\n"

#. type: Plain text
#: en/git-cat-file.txt:356
#, priority:80
msgid "is printed when, during symlink resolution, a file is used as a directory name."
msgstr "é impresso quando, durante a resolução do link-simbólico, um arquivo é utilizado como um nome do diretório."

#. type: Title -
#: en/git-cat-file.txt:358 en/git-for-each-ref.txt:403 en/git-format-patch.txt:759 en/git-svn.txt:998
#, no-wrap, priority:100
msgid "CAVEATS"
msgstr "RESSALVAS"

#. type: Plain text
#: en/git-cat-file.txt:366 en/git-for-each-ref.txt:411
#, priority:80
msgid "Note that the sizes of objects on disk are reported accurately, but care should be taken in drawing conclusions about which refs or objects are responsible for disk usage. The size of a packed non-delta object may be much larger than the size of objects which delta against it, but the choice of which object is the base and which is the delta is arbitrary and is subject to change during a repack."
msgstr "Observe que os tamanhos dos objetos no disco são relatados com precisão, porém é preciso ter cuidado ao tirar conclusões sobre quais as refs ou os objetos sejam responsáveis pela utilização do disco. O tamanho de um objeto não delta compactado, pode ser muito maior do que o tamanho dos objetos onde o delta seja contra ele, porém a escolha de qual objeto é a base e qual é o delta é arbitrária e está sujeita a alterações durante um reempacotamento."

#. type: Plain text
#: en/git-cat-file.txt:370 en/git-for-each-ref.txt:415
#, priority:80
msgid "Note also that multiple copies of an object may be present in the object database; in this case, it is undefined which copy's size or delta base will be reported."
msgstr "Observe também que as várias cópias de um objeto podem estar presentes no banco de dados dos objetos; neste caso, é indefinido qual o tamanho da cópia ou da base delta que será relatada."

#. type: Title =
#: en/git-check-attr.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-check-attr(1)"
msgstr "git-check-attr(1)"

#. type: Plain text
#: en/git-check-attr.txt:7
#, priority:100
msgid "git-check-attr - Display gitattributes information"
msgstr "git-check-attr - Exiba as informações sobre os gitattributes"

#. type: Plain text
#: en/git-check-attr.txt:14
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git check-attr' [-a | --all | <attr>...] [--] <pathname>...\n"
"'git check-attr' --stdin [-z] [-a | --all | <attr>...]\n"
msgstr ""
"'git check-attr' [-a | --all | <attr>...] [--] <pathname>...\n"
"'git check-attr' --stdin [-z] [-a | --all | <attr>...]\n"

#. type: Plain text
#: en/git-check-attr.txt:19
#, priority:100
msgid "For every pathname, this command will list if each attribute is 'unspecified', 'set', or 'unset' as a gitattribute on that pathname."
msgstr "Para cada nome do caminho, este comando listará se cada atributo é `unspecified` (não especificado), `set` (definido) ou `unset` (não definido) como um gitattribute neste nome do caminho."

#. type: Labeled list
#: en/git-check-attr.txt:22
#, no-wrap, priority:100
msgid "-a, --all"
msgstr "-a, --all"

#. type: Plain text
#: en/git-check-attr.txt:26
#, priority:100
msgid "List all attributes that are associated with the specified paths.  If this option is used, then 'unspecified' attributes will not be included in the output."
msgstr "Liste todos os atributos que estão associados com os caminhos definidos.  Caso esra opção seja utilizada, os atributos 'unspecified' não serão inclusos na saída."

#. type: Plain text
#: en/git-check-attr.txt:29
#, priority:100
msgid "Consider `.gitattributes` in the index only, ignoring the working tree."
msgstr "Considere o `.gitattributos` apenas no índice, ignorando a árvore de trabalho."

#. type: Labeled list
#: en/git-check-attr.txt:30 en/git-check-ignore.txt:43 en/git-check-mailmap.txt:26 en/git-checkout-index.txt:68 en/git-diff-tree.txt:51 en/git-fetch-pack.txt:38 en/git-fetch.txt:51 en/git-hash-object.txt:32 en/git-http-fetch.txt:37 en/git-index-pack.txt:46 en/git-name-rev.txt:73 en/git-notes.txt:173 en/git-send-pack.txt:41 en/git-svn.txt:595 en/git-update-index.txt:153 en/rev-list-options.txt:230
#, ignore-same, no-wrap, priority:280
msgid "--stdin"
msgstr "--stdin"

#. type: Plain text
#: en/git-check-attr.txt:33 en/git-check-ignore.txt:46
#, priority:100
msgid "Read pathnames from the standard input, one per line, instead of from the command-line."
msgstr "Leia os nomes do caminho na entrada padrão, um por linha, em vez da linha de comando."

#. type: Plain text
#: en/git-check-attr.txt:38
#, priority:100
msgid "The output format is modified to be machine-parsable.  If `--stdin` is also given, input paths are separated with a NUL character instead of a linefeed character."
msgstr "O formato da saída é modificado para ser analisável por uma máquina.  Caso o `--stdin` também seja informado, os caminhos da entrada serão separados por um caractere `NUL` em vez de um caractere de avanço de linha."

#. type: Plain text
#: en/git-check-attr.txt:42
#, priority:100
msgid "Interpret all preceding arguments as attributes and all following arguments as path names."
msgstr "Interprete todas as opções anteriores como atributos e todos as opções a seguir como nomes do caminho."

#. type: Plain text
#: en/git-check-attr.txt:46
#, priority:100
msgid "If none of `--stdin`, `--all`, or `--` is used, the first argument will be treated as an attribute and the rest of the arguments as pathnames."
msgstr "Caso nenhuma opção `--stdin`, `--all` ou `--` seja utilizado, a primeira será tratada como um atributo e o restante das opções como os nomes do caminho."

#. type: Plain text
#: en/git-check-attr.txt:52
#, priority:100
msgid "The output is of the form: <path> COLON SP <attribute> COLON SP <info> LF"
msgstr "A saída assume a forma: <caminho> COLON SP <atributo> COLON SP <info> LF"

#. type: Plain text
#: en/git-check-attr.txt:55
#, priority:100
msgid "unless `-z` is in effect, in which case NUL is used as delimiter: <path> NUL <attribute> NUL <info> NUL"
msgstr "a menos que `-z` esteja em vigor, no caso onde `NUL` é utilizado como um delimitador: <caminho> NUL <atributo> NUL <info> NUL"

#. type: Plain text
#: en/git-check-attr.txt:59
#, priority:100
msgid "<path> is the path of a file being queried, <attribute> is an attribute being queried and <info> can be either:"
msgstr "`<caminho>` é o caminho de um arquivo sendo consultado, `<attribute>` é um atributo sendo consultado e <info> pode ser:"

#. type: Labeled list
#: en/git-check-attr.txt:60
#, ignore-same, no-wrap, priority:100
msgid "'unspecified'"
msgstr "'unspecified'"

#. type: Plain text
#: en/git-check-attr.txt:61
#, priority:100
msgid "when the attribute is not defined for the path."
msgstr "quando o atributo não esteja definido para o caminho."

#. type: Labeled list
#: en/git-check-attr.txt:61
#, ignore-same, no-wrap, priority:100
msgid "'unset'"
msgstr "'unset'"

#. type: Plain text
#: en/git-check-attr.txt:62
#, priority:100
msgid "when the attribute is defined as false."
msgstr "quando o atributo é definido como falso."

#. type: Labeled list
#: en/git-check-attr.txt:62
#, ignore-same, no-wrap, priority:100
msgid "'set'"
msgstr "'set'"

#. type: Plain text
#: en/git-check-attr.txt:63
#, priority:100
msgid "when the attribute is defined as true."
msgstr "quando o atributo é definido como verdadeiro."

#. type: Labeled list
#: en/git-check-attr.txt:63
#, no-wrap, priority:100
msgid "<value>"
msgstr "<valor>"

#. type: Plain text
#: en/git-check-attr.txt:64
#, priority:100
msgid "when a value has been assigned to the attribute."
msgstr "quando um valor foi atribuído ao atributo."

#. type: Plain text
#: en/git-check-attr.txt:69 en/git-check-ignore.txt:105
#, priority:100
msgid "Buffering happens as documented under the `GIT_FLUSH` option in linkgit:git[1].  The caller is responsible for avoiding deadlocks caused by overfilling an input buffer or reading from an empty output buffer."
msgstr "A carga da memória intermédia (buffering) ocorre como foi documentada na opção `GIT_FLUSH` em linkgit:git[1].   O responsável pela chamada é aquele que evita que os bloqueios causados pelo preenchimento excessivo de uma memória intermédia na entrada ou pela leitura de uma memória intermédia vazia na saída."

#. type: Plain text
#: en/git-check-attr.txt:74
#, priority:100
msgid "In the examples, the following '.gitattributes' file is used:"
msgstr "Nos exemplos, o seguinte arquivo '.gitattributos' é utilizado:"

#. type: delimited block -
#: en/git-check-attr.txt:78
#, no-wrap, priority:100
msgid ""
"*.java diff=java -crlf myAttr\n"
"NoMyAttr.java !myAttr\n"
"README caveat=unspecified\n"
msgstr ""
"*.java diff=java -crlf myAttr\n"
"NoMyAttr.java !myAttr\n"
"README caveat=unspecified\n"

#. type: Plain text
#: en/git-check-attr.txt:81
#, priority:100
msgid "Listing a single attribute:"
msgstr "Listando um único atributo:"

#. type: delimited block -
#: en/git-check-attr.txt:84
#, no-wrap, priority:100
msgid ""
"$ git check-attr diff org/example/MyClass.java\n"
"org/example/MyClass.java: diff: java\n"
msgstr ""
"$ git check-attr diff org/example/MyClass.java\n"
"org/example/MyClass.java: diff: java\n"

#. type: Plain text
#: en/git-check-attr.txt:87
#, priority:100
msgid "Listing multiple attributes for a file:"
msgstr "Listando vários atributos para um arquivo:"

#. type: delimited block -
#: en/git-check-attr.txt:92
#, no-wrap, priority:100
msgid ""
"$ git check-attr crlf diff myAttr -- org/example/MyClass.java\n"
"org/example/MyClass.java: crlf: unset\n"
"org/example/MyClass.java: diff: java\n"
"org/example/MyClass.java: myAttr: set\n"
msgstr ""
"$ git check-attr crlf diff myAttr -- org/example/MyClass.java\n"
"org/example/MyClass.java: crlf: unset\n"
"org/example/MyClass.java: diff: java\n"
"org/example/MyClass.java: myAttr: set\n"

#. type: Plain text
#: en/git-check-attr.txt:95
#, priority:100
msgid "Listing all attributes for a file:"
msgstr "Listando todos os atributos de um arquivo:"

#. type: delimited block -
#: en/git-check-attr.txt:99
#, no-wrap, priority:100
msgid ""
"$ git check-attr --all -- org/example/MyClass.java\n"
"org/example/MyClass.java: diff: java\n"
"org/example/MyClass.java: myAttr: set\n"
msgstr ""
"$ git check-attr --all -- org/example/MyClass.java\n"
"org/example/MyClass.java: diff: java\n"
"org/example/MyClass.java: myAttr: set\n"

#. type: Plain text
#: en/git-check-attr.txt:102
#, priority:100
msgid "Listing an attribute for multiple files:"
msgstr "Listando um atributo para vários arquivos:"

#. type: delimited block -
#: en/git-check-attr.txt:106
#, no-wrap, priority:100
msgid ""
"$ git check-attr myAttr -- org/example/MyClass.java org/example/NoMyAttr.java\n"
"org/example/MyClass.java: myAttr: set\n"
"org/example/NoMyAttr.java: myAttr: unspecified\n"
msgstr ""
"$ git check-attr myAttr -- org/example/MyClass.java org/example/NoMyAttr.java\n"
"org/example/MyClass.java: myAttr: set\n"
"org/example/NoMyAttr.java: myAttr: unspecified\n"

#. type: Plain text
#: en/git-check-attr.txt:109
#, priority:100
msgid "Not all values are equally unambiguous:"
msgstr "Nem todos os valores não ambíguos são iguais:"

#. type: delimited block -
#: en/git-check-attr.txt:112
#, no-wrap, priority:100
msgid ""
"$ git check-attr caveat README\n"
"README: caveat: unspecified\n"
msgstr ""
"$ git check-attr caveat README\n"
"README: caveat: unspecified\n"

#. type: Plain text
#: en/git-check-attr.txt:117
#, ignore-same, priority:100
msgid "linkgit:gitattributes[5]."
msgstr "linkgit:gitattributes[5]."

#. type: Title =
#: en/git-check-ignore.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-check-ignore(1)"
msgstr "git-check-ignore(1)"

#. type: Plain text
#: en/git-check-ignore.txt:7
#, priority:80
msgid "git-check-ignore - Debug gitignore / exclude files"
msgstr "git-verifique-ignorar - Depure o gitignorar / excluir arquivos"

#. type: Plain text
#: en/git-check-ignore.txt:14
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git check-ignore' [<options>] <pathname>...\n"
"'git check-ignore' [<options>] --stdin\n"
msgstr ""
"'git check-ignore' [<opções>] <pathname>...\n"
"'git check-ignore' [<opções>] --stdin\n"

#. type: Plain text
#: en/git-check-ignore.txt:22
#, priority:80
msgid "For each pathname given via the command-line or from a file via `--stdin`, check whether the file is excluded by .gitignore (or other input files to the exclude mechanism) and output the path if it is excluded."
msgstr "Para cada nome do caminho informado através da linha de comando ou de um arquivo via `--stdin`, verifique se o arquivo foi excluído por .gitignorar (ou outros arquivos de entrada para o mecanismo de exclusão) e imprima o caminho se ele for excluído."

#. type: Plain text
#: en/git-check-ignore.txt:25
#, priority:80
msgid "By default, tracked files are not shown at all since they are not subject to exclude rules; but see `--no-index'."
msgstr "Por padrão, os arquivos rastreados não são exibidos, pois não estão sujeitos a regras de exclusão. mas veja `--não-índice '."

#. type: Labeled list
#: en/git-check-ignore.txt:28
#, no-wrap, priority:80
msgid "-q, --quiet"
msgstr "-q, --quieto"

#. type: Plain text
#: en/git-check-ignore.txt:31
#, priority:80
msgid "Don't output anything, just set exit status.  This is only valid with a single pathname."
msgstr "Não produza nada, apenas defina a condição do encerramento.  É válido apenas com um único nome do caminho."

#. type: Labeled list
#: en/git-check-ignore.txt:32
#, no-wrap, priority:80
msgid "-v, --verbose"
msgstr "-v, --verbose"

#. type: Plain text
#: en/git-check-ignore.txt:39
#, priority:80
msgid "Instead of printing the paths that are excluded, for each path that matches an exclude pattern, print the exclude pattern together with the path.  (Matching an exclude pattern usually means the path is excluded, but if the pattern begins with \"`!`\" then it is a negated pattern and matching it means the path is NOT excluded.)"
msgstr "Em vez de imprimir quais os caminhos foram excluídos, para cada caminho que coincida a um padrão de exclusão, imprima o padrão de exclusão junto com o caminho.  (A correspondência da exclusão de um padrão geralmente significa que o caminho foi excluído, porém caso o padrão comece com \"`!`\", então é um padrão negado e a coincidência significa que o caminho NÃO é excluído.)"

#. type: Plain text
#: en/git-check-ignore.txt:42
#, priority:80
msgid "For precedence rules within and between exclude sources, see linkgit:gitignore[5]."
msgstr "Para as regras da precedência dentro e entre as fontes eliminadas, consulte linkgit:gitignorar[5]."

#. type: Plain text
#: en/git-check-ignore.txt:51
#, priority:80
msgid "The output format is modified to be machine-parsable (see below).  If `--stdin` is also given, input paths are separated with a NUL character instead of a linefeed character."
msgstr "O formato gerado é modificado para ser analisável pela máquina (veja abaixo).  Caso o `--stdin` também seja informado, os caminhos da entrada serão separados por um caractere `NUL` em vez de um caractere de avanço de linha."

#. type: Labeled list
#: en/git-check-ignore.txt:52
#, no-wrap, priority:80
msgid "-n, --non-matching"
msgstr "-n, --non-matching"

#. type: Plain text
#: en/git-check-ignore.txt:57
#, priority:80
msgid "Show given paths which don't match any pattern.\t This only makes sense when `--verbose` is enabled, otherwise it would not be possible to distinguish between paths which match a pattern and those which don't."
msgstr "Exiba os caminhos informados que não coincidam com qualquer padrão.\t Só faz sentido quando a opção `--verbose` está ativa, caso contrário não seria possível distinguir entre os caminhos que coincidem ou não com um padrão."

#. type: Labeled list
#: en/git-check-ignore.txt:58 en/git-grep.txt:48
#, ignore-same, no-wrap, priority:100
msgid "--no-index"
msgstr "--no-index"

#. type: Plain text
#: en/git-check-ignore.txt:64
#, priority:80
msgid "Don't look in the index when undertaking the checks. This can be used to debug why a path became tracked by e.g. `git add .` and was not ignored by the rules as expected by the user or when developing patterns including negation to match a path previously added with `git add -f`."
msgstr "Não procure no índice ao realizar as verificações. Pode ser utilizado para depurar o motivo de um caminho ter sido rastreado por ex. `git add .` e não foi ignorado pelas regras conforme o esperado pelo usuário ou ao desenvolver padrões incluindo a negação da coincidência a um caminho adicionado anteriormente com o comando `git add -f`."

#. type: Plain text
#: en/git-check-ignore.txt:72
#, priority:80
msgid "By default, any of the given pathnames which match an ignore pattern will be output, one per line.  If no pattern matches a given path, nothing will be output for that path; this means that path will not be ignored."
msgstr "É predefinido que será gerado qualquer um dos nomes do caminho informados que coincidam com um padrão para ser ignorado, um por linha.  Caso nenhum padrão coincida com um determinado caminho, nada será gerado; significa que o caminho não será ignorado."

#. type: Plain text
#: en/git-check-ignore.txt:74
#, priority:80
msgid "If `--verbose` is specified, the output is a series of lines of the form:"
msgstr "Caso a opção `--verbose` seja utilizada, a saída será uma série de linhas desta forma:"

#. type: Plain text
#: en/git-check-ignore.txt:76
#, priority:80
msgid "<source> <COLON> <linenum> <COLON> <pattern> <HT> <pathname>"
msgstr "<fonte> <COLON> <linenum> <COLON> <padrão> <HT> <pathname>"

#. type: Plain text
#: en/git-check-ignore.txt:84
#, priority:80
msgid "<pathname> is the path of a file being queried, <pattern> is the matching pattern, <source> is the pattern's source file, and <linenum> is the line number of the pattern within that source.  If the pattern contained a \"`!`\" prefix or \"`/`\" suffix, it will be preserved in the output.  <source> will be an absolute path when referring to the file configured by `core.excludesFile`, or relative to the repository root when referring to `.git/info/exclude` or a per-directory exclude file."
msgstr "<pathname> é o caminho de um arquivo que está sendo consultado, <padrão> é o padrão que será coincidido, <fonte> é o arquivo de origem do padrão e <linenum> é o número da linha do padrão nesta origem.  Caso o padrão contenha um prefixo \"`!`\" Ou um sufixo \"`/`\", ele será preservado na saída.  <fonte> será um caminho absoluto ao se referir ao arquivo configurado por `core.excludesFile`, ou relativo à raiz do repositório ao se referir a um `.git/info/exclude` ou a exclusão de um arquivo por diretório."

#. type: Plain text
#: en/git-check-ignore.txt:88
#, priority:80
msgid "If `-z` is specified, the pathnames in the output are delimited by the null character; if `--verbose` is also specified then null characters are also used instead of colons and hard tabs:"
msgstr "Caso `-z` seja utilizado, os nomes do caminho gerado são delimitados pelo caractere nulo; caso `--verbose` também seja utilizado, então os caracteres nulos também serão utilizados em vez das vírgulas e das guias rígidas:"

#. type: Plain text
#: en/git-check-ignore.txt:90
#, priority:80
msgid "<source> <NULL> <linenum> <NULL> <pattern> <NULL> <pathname> <NULL>"
msgstr "<fonte> <NULL> <linenum> <NULL> <padrão> <NULL> <pathname> <NULL>"

#. type: Plain text
#: en/git-check-ignore.txt:100
#, priority:80
msgid "If `-n` or `--non-matching` are specified, non-matching pathnames will also be output, in which case all fields in each output record except for <pathname> will be empty.  This can be useful when running non-interactively, so that files can be incrementally streamed to STDIN of a long-running check-ignore process, and for each of these files, STDOUT will indicate whether that file matched a pattern or not.  (Without this option, it would be impossible to tell whether the absence of output for a given file meant that it didn't match any pattern, or that the output hadn't been generated yet.)"
msgstr "Caso `-n` ou `--nonnon-matching` sejam utilizados, os nomes do caminho que não coincidam também serão gerados; nesse caso, todos os campos de cada registro da saída, exceto o `<pathname>` que estará vazio.  Pode ser útil ao ser executado de forma não interativa, para que os arquivos possam ser transmitidos incrementalmente para o `STDIN` de um longo processo de verificar/ignorar para cada um destes arquivos, o `STDOUT` indicará caso esse arquivo coincida ou não com um padrão.  (Sem essa opção, seria impossível dizer se a ausência da saída para um determinado arquivo significava que não há coincidência com nenhum padrão ou que a saída ainda não havia sido gerada.)"

#. type: Title -
#: en/git-check-ignore.txt:107 en/git-filter-branch.txt:239 en/git-merge-tree.txt:125 en/git-remote.txt:209
#, no-wrap, priority:220
msgid "EXIT STATUS"
msgstr "CONDIÇÃO DE ENCERRAMENTO"

#. type: Labeled list
#: en/git-check-ignore.txt:109
#, no-wrap, priority:80
msgid "0"
msgstr "0"

#. type: Plain text
#: en/git-check-ignore.txt:111
#, priority:80
msgid "One or more of the provided paths is ignored."
msgstr "Um ou mais dos caminhos informados são ignorados."

#. type: Labeled list
#: en/git-check-ignore.txt:112
#, no-wrap, priority:80
msgid "1"
msgstr "1"

#. type: Plain text
#: en/git-check-ignore.txt:114
#, priority:80
msgid "None of the provided paths are ignored."
msgstr "Nenhum dos caminhos informados serão ignorados."

#. type: Labeled list
#: en/git-check-ignore.txt:115
#, no-wrap, priority:80
msgid "128"
msgstr "128"

#. type: Plain text
#: en/git-check-ignore.txt:117
#, priority:80
msgid "A fatal error was encountered."
msgstr "Um erro fatal foi encontrado."

#. type: Plain text
#: en/git-check-ignore.txt:123
#, ignore-same, priority:80
msgid "linkgit:gitignore[5] linkgit:git-config[1] linkgit:git-ls-files[1]"
msgstr "linkgit:gitignore[5] linkgit:git-config[1] linkgit:git-ls-files[1]"

#. type: Title =
#: en/git-check-mailmap.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-check-mailmap(1)"
msgstr "git-check-mailmap(1)"

#. type: Plain text
#: en/git-check-mailmap.txt:7
#, priority:100
msgid "git-check-mailmap - Show canonical names and email addresses of contacts"
msgstr "git-check-mailmap - Exiba os nomes canônicos e os endereços de e-mail dos contatos"

#. type: Plain text
#: en/git-check-mailmap.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git check-mailmap' [<options>] <contact>...\n"
msgstr "'git check-mailmap' [<opções>] <contato>...\n"

#. type: Plain text
#: en/git-check-mailmap.txt:22
#, priority:100
msgid "For each ``Name $$<user@host>$$'' or ``$$<user@host>$$'' from the command-line or standard input (when using `--stdin`), look up the person's canonical name and email address (see \"Mapping Authors\" below). If found, print them; otherwise print the input as-is."
msgstr "Para cada ``Name $$<user@host>$$'' ou ``$$<user@host>$$'' na linha de comando ou na entrada padrão (ao utilizar o `--stdin`), procure o nome canônico e o endereço do e-mail da pessoa (consulte \"Mapeando os autores\" logo abaixo). Se encontrado, exiba-os; caso contrário, exiba a entrada como estiver."

#. type: Plain text
#: en/git-check-mailmap.txt:29
#, priority:100
msgid "Read contacts, one per line, from the standard input after exhausting contacts provided on the command-line."
msgstr "Leia os contatos, um por linha, a partir da entrada padrão após esgotar os contatos informados na linha de comando."

#. type: Plain text
#: en/git-check-mailmap.txt:37
#, priority:100
msgid "For each contact, a single line is output, terminated by a newline.  If the name is provided or known to the 'mailmap', ``Name $$<user@host>$$'' is printed; otherwise only ``$$<user@host>$$'' is printed."
msgstr "Para cada contato, uma única linha é emitida, finalizada através de uma nova linha.  Caso um nome seja informado ou seja desconhecido ao 'mailmap', ``Name $$<user@host>$$'' é exibido; caso contrário será exibido apenas ``$$<user@host>$$''."

#. type: Plain text
#: en/git-check-mailmap.txt:44
#, priority:100
msgid "See `mailmap.file` and `mailmap.blob` in linkgit:git-config[1] for how to specify a custom `.mailmap` target file or object."
msgstr "Consulte `mailmap.file` e `mailmap.blob` no linkgit:git-config[1] para saber como definir um arquivo alvo `.mailmap` personalizado ou um objeto."

#. type: Title =
#: en/git-checkout-index.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-checkout-index(1)"
msgstr "git-checkout-index(1)"

#. type: Plain text
#: en/git-checkout-index.txt:7
#, priority:80
msgid "git-checkout-index - Copy files from the index to the working tree"
msgstr "git-checkout-index - Copie os arquivos do índice para a árvore de trabalho"

#. type: Plain text
#: en/git-checkout-index.txt:18
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git checkout-index' [-u] [-q] [-a] [-f] [-n] [--prefix=<string>]\n"
"\t\t   [--stage=<number>|all]\n"
"\t\t   [--temp]\n"
"\t\t   [--ignore-skip-worktree-bits]\n"
"\t\t   [-z] [--stdin]\n"
"\t\t   [--] [<file>...]\n"
msgstr ""
"'git checkout-index' [-u] [-q] [-a] [-f] [-n] [--prefix=<texto>]\n"
"\t\t   [--stage=<número>|all]\n"
"\t\t   [--temp]\n"
"\t\t   [--ignore-skip-worktree-bits]\n"
"\t\t   [-z] [--stdin]\n"
"\t\t   [--] [<arquivo>...]\n"

#. type: Plain text
#: en/git-checkout-index.txt:23
#, priority:80
msgid "Will copy all files listed from the index to the working directory (not overwriting existing files)."
msgstr "Copiará todos os arquivos listados no índice para o diretório de trabalho (não sobrescrevendo os arquivos já existentes)."

#. type: Plain text
#: en/git-checkout-index.txt:30
#, priority:80
msgid "update stat information for the checked out entries in the index file."
msgstr "atualiza as informações das estatísticas para as entradas com check-out no arquivo do índice."

#. type: Plain text
#: en/git-checkout-index.txt:34
#, priority:80
msgid "be quiet if files exist or are not in the index"
msgstr "fique em silêncio caso os arquivos já existirem ou não estiverem no índice"

#. type: Plain text
#: en/git-checkout-index.txt:38
#, priority:80
msgid "forces overwrite of existing files"
msgstr "impõem que os arquivos existentes sejam sobrescritos"

#. type: Plain text
#: en/git-checkout-index.txt:44
#, priority:80
msgid "checks out all files in the index except for those with the skip-worktree bit set (see `--ignore-skip-worktree-bits`).  Cannot be used together with explicit filenames."
msgstr "faz a verificação de todos os arquivos no índice, menos para aqueles que com o bit `skip-worktree bit `.  Não pode ser utilizado junto com os nomes dos arquivos explícitos."

#. type: Labeled list
#: en/git-checkout-index.txt:46
#, ignore-same, no-wrap, priority:80
msgid "--no-create"
msgstr "--no-create"

#. type: Plain text
#: en/git-checkout-index.txt:49
#, priority:80
msgid "Don't checkout new files, only refresh files already checked out."
msgstr "Não faça a verificação dos novos arquivos, apenas renove os arquivos já verificados."

#. type: Labeled list
#: en/git-checkout-index.txt:50
#, no-wrap, priority:80
msgid "--prefix=<string>"
msgstr "--prefix=<texto>"

#. type: Plain text
#: en/git-checkout-index.txt:53
#, priority:80
msgid "When creating files, prepend <string> (usually a directory including a trailing /)"
msgstr "Ao criar os arquivos, anexe uma `<texto>` (geralmente um diretório incluindo uma barra `/`)"

#. type: Labeled list
#: en/git-checkout-index.txt:54
#, no-wrap, priority:80
msgid "--stage=<number>|all"
msgstr "--stage=<número>|all"

#. type: Plain text
#: en/git-checkout-index.txt:58
#, priority:80
msgid "Instead of checking out unmerged entries, copy out the files from named stage.  <number> must be between 1 and 3.  Note: --stage=all automatically implies --temp."
msgstr "Em vez de fazer a verificação das entradas que não foram mescladas, copie os arquivos do estágio informado.  <number> deve ser entre 1 e 3.  Observação: `--stage=all` automaticamente implica no uso da opção `--temp`."

#. type: Labeled list
#: en/git-checkout-index.txt:59
#, ignore-same, no-wrap, priority:80
msgid "--temp"
msgstr "--temp"

#. type: Plain text
#: en/git-checkout-index.txt:63
#, priority:80
msgid "Instead of copying the files to the working directory write the content to temporary files.  The temporary name associations will be written to stdout."
msgstr "Em vez de copiar os arquivos para o diretório de trabalho, grave o conteúdo em arquivos temporários.  As associações do nome temporário serão gravadas no stdout."

#. type: Labeled list
#: en/git-checkout-index.txt:64 en/git-checkout.txt:238 en/git-restore.txt:103
#, ignore-same, no-wrap, priority:280
msgid "--ignore-skip-worktree-bits"
msgstr "--ignore-skip-worktree-bits"

#. type: Plain text
#: en/git-checkout-index.txt:67
#, priority:80
msgid "Check out all files, including those with the skip-worktree bit set."
msgstr "Verifica todos os arquivos, incluindo aqueles com o bit skip-worktree definido."

#. type: Plain text
#: en/git-checkout-index.txt:72 en/git-update-index.txt:157
#, priority:80
msgid "Instead of taking list of paths from the command line, read list of paths from the standard input.  Paths are separated by LF (i.e. one path per line) by default."
msgstr "Em vez de pegar a lista dos caminhos da linha de comando, leia a lista dos caminhos na entrada padrão.  É predefinido que os caminhos sejam separados por LF (ou seja, um caminho por linha)."

#. type: Plain text
#: en/git-checkout-index.txt:76
#, priority:80
msgid "Only meaningful with `--stdin`; paths are separated with NUL character instead of LF."
msgstr "Somente faz sentido se utilizado junto com a opção `--stdin`; os caminhos são separados com caracteres `NUL` em vez de `LF`."

#. type: Plain text
#: en/git-checkout-index.txt:79 en/git-checkout.txt:364 en/git-commit.txt:400 en/git-ls-files.txt:204 en/git-merge-index.txt:25 en/git-prune.txt:53 en/git-reset.txt:129 en/git-restore.txt:143 en/git-update-index.txt:228 en/git-verify-pack.txt:38
#, priority:280
msgid "Do not interpret any more arguments as options."
msgstr "Não interprete mais argumentos como opções."

#. type: Plain text
#: en/git-checkout-index.txt:81
#, priority:80
msgid "The order of the flags used to matter, but not anymore."
msgstr "A ordem das opções costumava importar, agora não mais."

#. type: Plain text
#: en/git-checkout-index.txt:85
#, priority:80
msgid "Just doing `git checkout-index` does nothing. You probably meant `git checkout-index -a`. And if you want to force it, you want `git checkout-index -f -a`."
msgstr "Agora ao executar o comando `git checkout-index`, ele não faz nada. Você provavelmente quis utilizar `git checkout-index -a`. E caso queira impor a sua utilização, utilize `git checkout-index -f -a`."

#. type: Plain text
#: en/git-checkout-index.txt:89
#, priority:80
msgid "Intuitiveness is not the goal here. Repeatability is. The reason for the \"no arguments means no work\" behavior is that from scripts you are supposed to be able to do:"
msgstr "A intuição não é o objetivo aqui. A repetibilidade é. A razão para o comportamento \"sem argumentos significa que não há trabalho\" é que, a partir dos scripts que você deve ser capaz de executar:"

#. type: delimited block -
#: en/git-checkout-index.txt:92
#, no-wrap, priority:80
msgid "$ find . -name '*.h' -print0 | xargs -0 git checkout-index -f --\n"
msgstr "$ find . -name '*.h' -print0 | xargs -0 git checkout-index -f --\n"

#. type: Plain text
#: en/git-checkout-index.txt:98
#, priority:80
msgid "which will force all existing `*.h` files to be replaced with their cached copies. If an empty command line implied \"all\", then this would force-refresh everything in the index, which was not the point.  But since 'git checkout-index' accepts --stdin it would be faster to use:"
msgstr "o que irá impor a reposição de todos os arquivos `* .h` pelas suas cópias no cache. Uma linha de comando vazia implica em \"all\", isso impõem que a renovação ocorra em tudo o que estava no índice, o que não era o caso.  Mas como 'git checkout-index' aceita `--stdin`, seria muito mais rápido utilizar:"

#. type: delimited block -
#: en/git-checkout-index.txt:101
#, no-wrap, priority:80
msgid "$ find . -name '*.h' -print0 | git checkout-index -f -z --stdin\n"
msgstr "$ find . -name '*.h' -print0 | git checkout-index -f -z --stdin\n"

#. type: Plain text
#: en/git-checkout-index.txt:106
#, priority:80
msgid "The `--` is just a good idea when you know the rest will be filenames; it will prevent problems with a filename of, for example, `-a`.  Using `--` is probably a good policy in scripts."
msgstr "O `--` apenas é uma boa ideia quando você sabe que o resto será um nome do arquivo; isso evitará problemas com um nome do arquivo de, por exemplo, `-a`.  Utilizar `--` provavelmente é uma boa política nos scripts."

#. type: Title -
#: en/git-checkout-index.txt:109
#, no-wrap, priority:80
msgid "Using --temp or --stage=all"
msgstr "Utilizando `--temp` ou `--stage=all`"

#. type: Plain text
#: en/git-checkout-index.txt:116
#, priority:80
msgid "When `--temp` is used (or implied by `--stage=all`)  'git checkout-index' will create a temporary file for each index entry being checked out.  The index will not be updated with stat information.  These options can be useful if the caller needs all stages of all unmerged entries so that the unmerged files can be processed by an external merge tool."
msgstr "Quando o `--temp` é utilizado (ou de forma implícita por `--stage=all`), o comando 'git checkout-index' cria um arquivo temporário para cada entrada do índice que está sendo retirado.  O índice não será atualizado com as informações das estatísticas.  Estas opções podem ser úteis caso quem chame, precise de todos os estágios, de todas as entradas não mescladas para que os arquivos não mesclados possam ser processados por uma ferramenta de mesclagem externa."

#. type: Plain text
#: en/git-checkout-index.txt:120
#, priority:80
msgid "A listing will be written to stdout providing the association of temporary file names to tracked path names.  The listing format has two variations:"
msgstr "Uma lista será gravada no stdout, fornecendo a associação dos nomes dos arquivos temporários para os nomes dos caminhos rastreados.  O formato da listagem possui duas variações:"

#. type: Plain text
#: en/git-checkout-index.txt:122
#, priority:80
msgid "tempname TAB path RS"
msgstr "tempname TAB path RS"

#. type: Plain text
#: en/git-checkout-index.txt:127
#, priority:80
msgid "The first format is what gets used when `--stage` is omitted or is not `--stage=all`. The field tempname is the temporary file name holding the file content and path is the tracked path name in the index.  Only the requested entries are output."
msgstr "O primeiro formato é o que é utilizado quando o `--stage` for omitido ou não seja um `stage=all`. O campo `tempname` é o nome do arquivo temporário que contenha o conteúdo do arquivo e `path` é o nome do caminho monitorado no índice. O campo `tempname` é o arquivo com o nome temporário que armazena o conteúdo do arquivo, o `path` e o nome do caminho monitorado no índice.  Apenas as entradas solicitadas são produzidas."

#. type: Plain text
#: en/git-checkout-index.txt:129
#, priority:80
msgid "stage1temp SP stage2temp SP stage3tmp TAB path RS"
msgstr "stage1temp SP stage2temp SP stage3tmp TAB path RS"

#. type: Plain text
#: en/git-checkout-index.txt:135
#, priority:80
msgid "The second format is what gets used when `--stage=all`.  The three stage temporary fields (stage1temp, stage2temp, stage3temp) list the name of the temporary file if there is a stage entry in the index or `.` if there is no stage entry.  Paths which only have a stage 0 entry will always be omitted from the output."
msgstr "O segundo formato é o que é utilizado quando a opção for `--stage=all`.  Os campos temporários dos três estágios (stage1temp, stage2temp, stage3temp) listam o nome do arquivo temporário caso haja uma entrada no estágio, no índice ou em `.`, caso não haja uma entrada do estágio.  Os caminhos que possuem apenas uma entrada do estágio 0 sempre serão omitidos da saída."

#. type: Plain text
#: en/git-checkout-index.txt:142
#, priority:80
msgid "In both formats RS (the record separator) is newline by default but will be the null byte if -z was passed on the command line.  The temporary file names are always safe strings; they will never contain directory separators or whitespace characters.  The path field is always relative to the current directory and the temporary file names are always relative to the top level directory."
msgstr "Nos dois formatos, o RS (separador de registros) por predefinição é a nova linha, mas será o byte nulo caso `-z` seja utilizado na linha de comando.  Os nomes dos arquivos temporários são sempre gerados de forma segura com uma cadeia de caracteres; eles nunca conterão separadores de diretório ou caracteres de espaço.  O campo do caminho é sempre relativo ao diretório atual e os nomes dos arquivos temporários são sempre relativos ao cume do diretório."

#. type: Plain text
#: en/git-checkout-index.txt:146
#, priority:80
msgid "If the object being copied out to a temporary file is a symbolic link the content of the link will be written to a normal file.  It is up to the end-user or the Porcelain to make use of this information."
msgstr "Caso o objeto que está sendo copiado para um arquivo temporário seja um link simbólico, o conteúdo do link será registrado num arquivo normal.  Cabe ao usuário final ou a Porcelana a responsabilidade do que fazer com essa informação."

#. type: Labeled list
#: en/git-checkout-index.txt:150
#, no-wrap, priority:80
msgid "To update and refresh only the files already checked out"
msgstr "Para atualizar e renovar somente os arquivos já verificados"

#. type: delimited block -
#: en/git-checkout-index.txt:154 en/git-update-index.txt:365
#, no-wrap, priority:80
msgid "$ git checkout-index -n -f -a && git update-index --ignore-missing --refresh\n"
msgstr "$ git checkout-index -n -f -a && git update-index --ignore-missing --refresh\n"

#. type: Labeled list
#: en/git-checkout-index.txt:156
#, no-wrap, priority:80
msgid "Using 'git checkout-index' to \"export an entire tree\""
msgstr "Utilizando 'git checkout-index' para \"exportar uma árvore inteira\""

#. type: Plain text
#: en/git-checkout-index.txt:160
#, priority:80
msgid "The prefix ability basically makes it trivial to use 'git checkout-index' as an \"export as tree\" function.  Just read the desired tree into the index, and do:"
msgstr "A habilidade do prefixo basicamente torna trivial a utilização do comando 'git checkout-index' como uma função \"exportar como árvore\".  Leia apenas a árvore desejada no índice e faça:"

#. type: delimited block -
#: en/git-checkout-index.txt:163
#, no-wrap, priority:80
msgid "$ git checkout-index --prefix=git-export-dir/ -a\n"
msgstr "$ git checkout-index --prefix=git-export-dir/ -a\n"

#. type: Plain text
#: en/git-checkout-index.txt:167
#, priority:80
msgid "`git checkout-index` will \"export\" the index into the specified directory."
msgstr "O comando `git checkout-index` irá \"exportar\" o índice para um determinado diretório."

#. type: Plain text
#: en/git-checkout-index.txt:171
#, priority:80
msgid "The final \"/\" is important. The exported name is literally just prefixed with the specified string.  Contrast this with the following example."
msgstr "O \"/\" no final é importante. O nome que foi exportado é literalmente prefixado com a cadeia de caracteres definida.  Faça o contraste disso com o seguinte exemplo."

#. type: Labeled list
#: en/git-checkout-index.txt:172
#, no-wrap, priority:80
msgid "Export files with a prefix"
msgstr "Exportar os arquivos com um prefixo"

#. type: delimited block -
#: en/git-checkout-index.txt:176
#, no-wrap, priority:80
msgid "$ git checkout-index --prefix=.merged- Makefile\n"
msgstr "$ git checkout-index --prefix=.merged- Makefile\n"

#. type: Plain text
#: en/git-checkout-index.txt:180
#, priority:80
msgid "This will check out the currently cached copy of `Makefile` into the file `.merged-Makefile`."
msgstr "Verifica se a cópia disponível no cache do `Makefile` está no arquivo `.merged-Makefile`."

#. type: Title =
#: en/git-checkout.txt:2
#, ignore-same, no-wrap, priority:240
msgid "git-checkout(1)"
msgstr "git-checkout(1)"

#. type: Plain text
#: en/git-checkout.txt:7
#, priority:240
msgid "git-checkout - Switch branches or restore working tree files"
msgstr "git-checkout - Alterne entre os ramos ou restaure os arquivos da árvore de trabalho"

#. type: Plain text
#: en/git-checkout.txt:18
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"'git checkout' [-q] [-f] [-m] [<branch>]\n"
"'git checkout' [-q] [-f] [-m] --detach [<branch>]\n"
"'git checkout' [-q] [-f] [-m] [--detach] <commit>\n"
"'git checkout' [-q] [-f] [-m] [[-b|-B|--orphan] <new-branch>] [<start-point>]\n"
"'git checkout' [-f|--ours|--theirs|-m|--conflict=<style>] [<tree-ish>] [--] <pathspec>...\n"
"'git checkout' [-f|--ours|--theirs|-m|--conflict=<style>] [<tree-ish>] --pathspec-from-file=<file> [--pathspec-file-nul]\n"
"'git checkout' (-p|--patch) [<tree-ish>] [--] [<pathspec>...]\n"
msgstr ""
"'git checkout' [-q] [-f] [-m] [<ramo>]\n"
"'git checkout' [-q] [-f] [-m] --detach [<ramo>]\n"
"'git checkout' [-q] [-f] [-m] [--detach] <commit>\n"
"'git checkout' [-q] [-f] [-m] [[-b|-B|--orphan] <novo-ramo>] [<ponto-de-partida>]\n"
"'git checkout' [-f|--ours|--theirs|-m|--conflict=<estilo>] [<árvore>] [--] <pathspec>...\n"
"'git checkout' [-f|--ours|--theirs|-m|--conflict=<estilo>] [<árvore>] --pathspec-from-file=<arquivo> [--pathspec-file-nul]\n"
"'git checkout' (-p|--patch) [<árvore>] [--] [<pathspec>...]\n"

#. type: Plain text
#: en/git-checkout.txt:25
#, priority:240
msgid "Updates files in the working tree to match the version in the index or the specified tree.  If no pathspec was given, 'git checkout' will also update `HEAD` to set the specified branch as the current branch."
msgstr "Atualiza os arquivos na árvore de trabalho para coincidir com a versão no índice ou na árvore informada.  Se nenhum \"pathspec\" seja utilizado, o comando 'git checkout' também atualizará o `HEAD` para definir o ramo informado como o ramo atual."

#. type: Labeled list
#: en/git-checkout.txt:26
#, no-wrap, priority:240
msgid "'git checkout' [<branch>]"
msgstr "'git checkout' [<ramo>]"

#. type: Plain text
#: en/git-checkout.txt:32
#, priority:240
msgid "To prepare for working on `<branch>`, switch to it by updating the index and the files in the working tree, and by pointing `HEAD` at the branch. Local modifications to the files in the working tree are kept, so that they can be committed to the `<branch>`."
msgstr "Para se preparar para trabalhar em um `<ramo>`, alterne para ele atualizando o índice, os arquivos na árvore de trabalho e apontando para o `HEAD` do ramo. As modificações locais são mantidas nos arquivos da árvore de trabalho, para que o commit possa ser no `<ramo>`."

#. type: Plain text
#: en/git-checkout.txt:36
#, priority:240
msgid "If `<branch>` is not found but there does exist a tracking branch in exactly one remote (call it `<remote>`) with a matching name and `--no-guess` is not specified, treat as equivalent to"
msgstr "Caso o `<ramificação>` não seja encontrada mas exista uma monitorada remotamente (chame-o de `<remoto>`) com um nome que coincida e quando `--no-guess` não seja utilizado, trate-o como um equivalente a"

#. type: delimited block -
#: en/git-checkout.txt:39 en/git-checkout.txt:185
#, no-wrap, priority:240
msgid "$ git checkout -b <branch> --track <remote>/<branch>\n"
msgstr "$ git checkout -b <ramo> --track <remoto>/<ramo>\n"

#. type: Plain text
#: en/git-checkout.txt:45
#, priority:240
msgid "You could omit `<branch>`, in which case the command degenerates to \"check out the current branch\", which is a glorified no-op with rather expensive side-effects to show only the tracking information, if exists, for the current branch."
msgstr "Você pode omitir o `<ramo>` no caso em que o comando se degenera para \"verificar o branch atual\", que é um glorificado não-op com efeitos colaterais bastante dispendiosos para exibir apenas as informações de rastreamento, caso existam, para o ramo atual."

#. type: Labeled list
#: en/git-checkout.txt:46
#, no-wrap, priority:240
msgid "'git checkout' -b|-B <new-branch> [<start-point>]"
msgstr "'git checkout' -b|-B <new-branch> [<ponto-de-partida>]"

#. type: Plain text
#: en/git-checkout.txt:54
#, priority:240
msgid "Specifying `-b` causes a new branch to be created as if linkgit:git-branch[1] were called and then checked out.  In this case you can use the `--track` or `--no-track` options, which will be passed to 'git branch'.  As a convenience, `--track` without `-b` implies branch creation; see the description of `--track` below."
msgstr "Usando a opção `-b` faz com que um novo ramo seja criado como se o linkgit:git-branch[1] fosse chamado e então averiguado.  Neste caso utilize as opções `--track` ou `--no-track`, para que sejam encaminhadas ao comando 'git branch'.  Por questão de conveniência, a opção `--track` sem `-b` implica na criação do ramo; consulte a descrição da opção `--track` abaixo."

#. type: Plain text
#: en/git-checkout.txt:57
#, priority:240
msgid "If `-B` is given, `<new-branch>` is created if it doesn't exist; otherwise, it is reset. This is the transactional equivalent of"
msgstr "Caso a opção `-B` seja utilizada, então um `<novo-ramo>` é criado caso ainda não exista, senão, será redefinido. Este é o equivalente transacional do"

#. type: delimited block -
#: en/git-checkout.txt:61
#, no-wrap, priority:240
msgid ""
"$ git branch -f <branch> [<start-point>]\n"
"$ git checkout <branch>\n"
msgstr ""
"$ git branch -f <ramo> [<ponto-de-partida>]\n"
"$ git checkout <ramo>\n"

#. type: Plain text
#: en/git-checkout.txt:65
#, priority:240
msgid "that is to say, the branch is not reset/created unless \"git checkout\" is successful."
msgstr "isto é, a ramificação não é redefinida/criada a menos que \"git checkout\" seja bem-sucedido."

#. type: Labeled list
#: en/git-checkout.txt:66
#, no-wrap, priority:240
msgid "'git checkout' --detach [<branch>]"
msgstr "'git checkout' --detach [<ramo>]"

#. type: Labeled list
#: en/git-checkout.txt:67
#, no-wrap, priority:240
msgid "'git checkout' [--detach] <commit>"
msgstr "'git checkout' [--detach] <commit>"

#. type: Plain text
#: en/git-checkout.txt:75
#, priority:240
msgid "Prepare to work on top of `<commit>`, by detaching `HEAD` at it (see \"DETACHED HEAD\" section), and updating the index and the files in the working tree.  Local modifications to the files in the working tree are kept, so that the resulting working tree will be the state recorded in the commit plus the local modifications."
msgstr "Prepare-se para trabalhar em cima do `<commit>`, através da desanexação do `HEAD` (consulte a seção \"HEAD DESANEXADO\"), atualizando o índice e os arquivos na árvore de trabalho.  As alterações locais dos arquivos da árvore de trabalho são mantidas, para que a árvore de trabalho resultante seja a condição registrada no commit, incluindo as alterações locais."

#. type: Plain text
#: en/git-checkout.txt:79
#, priority:240
msgid "When the `<commit>` argument is a branch name, the `--detach` option can be used to detach `HEAD` at the tip of the branch (`git checkout <branch>` would check out that branch without detaching `HEAD`)."
msgstr "Quando o argumento `<commit>` é um nome de ramificação a opção `--detach` pode ser utilizada para desanexar o `HEAD` na ponta do ramo (`git checkout <ramo>` verificaria aquela ramificação sem desanexar o `HEAD`)."

#. type: Plain text
#: en/git-checkout.txt:81
#, priority:240
msgid "Omitting `<branch>` detaches `HEAD` at the tip of the current branch."
msgstr "Ao omitir o `<ramo>` isso desanexa o `HEAD` na ponta do ramo atual."

#. type: Labeled list
#: en/git-checkout.txt:82
#, ignore-ellipsis, no-wrap, priority:240
msgid "'git checkout' [-f|--ours|--theirs|-m|--conflict=<style>] [<tree-ish>] [--] <pathspec>..."
msgstr "'git checkout' [-f|--ours|--theirs|-m|--conflict=<estilo>] [<árvore>] [--] <pathspec>..."

#. type: Labeled list
#: en/git-checkout.txt:83
#, no-wrap, priority:240
msgid "'git checkout' [-f|--ours|--theirs|-m|--conflict=<style>] [<tree-ish>] --pathspec-from-file=<file> [--pathspec-file-nul]"
msgstr "'git checkout' [-f|--ours|--theirs|-m|--conflict=<estilo>] [<árvore>] --pathspec-from-file=<arquivo> [--pathspec-file-nul]"

#. type: Plain text
#: en/git-checkout.txt:90
#, priority:240
msgid "Overwrite the contents of the files that match the pathspec.  When the `<tree-ish>` (most often a commit) is not given, overwrite working tree with the contents in the index.  When the `<tree-ish>` is given, overwrite both the index and the working tree with the contents at the `<tree-ish>`."
msgstr "Substitua o conteúdo dos arquivos que correspondem ao `pathspec`.  Quando a `<árvore>` (na maioria das vezes um commit) não for informado, substitua a árvore de trabalho pelo conteúdo do índice.  Quando o `` for informado, substitua o índice e a árvore de trabalho pelo conteúdo na `<árvore>`."

#. type: Plain text
#: en/git-checkout.txt:98
#, priority:240
msgid "The index may contain unmerged entries because of a previous failed merge.  By default, if you try to check out such an entry from the index, the checkout operation will fail and nothing will be checked out.  Using `-f` will ignore these unmerged entries.  The contents from a specific side of the merge can be checked out of the index by using `--ours` or `--theirs`.  With `-m`, changes made to the working tree file can be discarded to re-create the original conflicted merge result."
msgstr "O índice pode conter lançamentos que não foram mesclados, por causa de uma falha durante a mesclagem anterior.  É predefinido que caso tente fazer uma averiguação deste lançamento no índice, a operação de averiguação irá falhar e nada será retirado.  A utilização da opção `-f` ignorará estes lançamentos que não foram mesclados.  O conteúdo de um lado específico da mesclagem pode ser retirado do índice através do uso da opção `--ours` ou `--theirs`.  Com a opção `-m`, as alterações feitas no arquivo da árvore de trabalho podem ser descartadas para recriar o resultado da mesclagem do conflito original."

#. type: Labeled list
#: en/git-checkout.txt:99
#, ignore-ellipsis, no-wrap, priority:240
msgid "'git checkout' (-p|--patch) [<tree-ish>] [--] [<pathspec>...]"
msgstr "'git checkout' (-p|--patch) [<árvore>] [--] [<pathspec>...]"

#. type: Plain text
#: en/git-checkout.txt:104
#, priority:240
msgid "This is similar to the previous mode, but lets you use the interactive interface to show the \"diff\" output and choose which hunks to use in the result.  See below for the description of `--patch` option."
msgstr "Isto é semelhante ao modo anterior, porém permite usar a interface interativa para exibir o \"diff\" gerado e escolher quais os blocos utilizar no resultado.  Veja abaixo a descrição da opção `--patch`."

#. type: Plain text
#: en/git-checkout.txt:110 en/git-read-tree.txt:120 en/git-stash.txt:241 en/git-switch.txt:145
#, priority:240
msgid "Quiet, suppress feedback messages."
msgstr "Silencioso, suprima as mensagens de feedback."

#. type: Labeled list
#: en/git-checkout.txt:112 en/git-fetch-pack.txt:108 en/git-restore.txt:71 en/git-switch.txt:147 en/merge-options.txt:183
#, ignore-same, no-wrap, priority:280
msgid "--no-progress"
msgstr "--no-progress"

#. type: Plain text
#: en/git-checkout.txt:117 en/git-restore.txt:76 en/git-switch.txt:152
#, priority:280
msgid "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless `--quiet` is specified. This flag enables progress reporting even if not attached to a terminal, regardless of `--quiet`."
msgstr "A condição do progresso é relatado no fluxo de erro predefinido ao estar conectado num terminal, a menos que as opções `--quiet` seja utilizados. Esta opção ativa os relatórios de progresso, mesmo que não estejam anexados a um terminal, independentemente da opção `--quiet`."

#. type: Plain text
#: en/git-checkout.txt:124
#, priority:240
msgid "When switching branches, proceed even if the index or the working tree differs from `HEAD`, and even if there are untracked files in the way.  This is used to throw away local changes and any untracked files or directories that are in the way."
msgstr "Ao alternar as ramificações, continue mesmo se o índice ou a árvore de trabalho forem diferentes do `HEAD`, e mesmo que haja arquivos não rastreados no caminho. Isto é usado para descartar as alterações locais e quaisquer arquivos ou diretórios não rastreados que estejam pelo caminho."

#. type: Plain text
#: en/git-checkout.txt:127
#, priority:240
msgid "When checking out paths from the index, do not fail upon unmerged entries; instead, unmerged entries are ignored."
msgstr "Ao verificar os caminhos do índice, não falhe em entradas não mescladas; Em vez disso, as entradas não mescladas são ignoradas."

#. type: Labeled list
#: en/git-checkout.txt:128 en/git-merge-file.txt:76 en/git-restore.txt:77
#, ignore-same, no-wrap, priority:280
msgid "--ours"
msgstr "--ours"

#. type: Labeled list
#: en/git-checkout.txt:129 en/git-merge-file.txt:77 en/git-restore.txt:78
#, ignore-same, no-wrap, priority:280
msgid "--theirs"
msgstr "--theirs"

#. type: Plain text
#: en/git-checkout.txt:132
#, priority:240
msgid "When checking out paths from the index, check out stage #2 ('ours') or #3 ('theirs') for unmerged paths."
msgstr "Ao verificar os caminhos do índice, confira o estágio #2 ('nosso') ou #3 ('deles') para paths não mesclados."

#. type: Plain text
#: en/git-checkout.txt:137
#, priority:240
msgid "Note that during `git rebase` and `git pull --rebase`, 'ours' and 'theirs' may appear swapped; `--ours` gives the version from the branch the changes are rebased onto, while `--theirs` gives the version from the branch that holds your work that is being rebased."
msgstr "Observe que durante o `git rebase` e o `git pull --rebase`, o 'ours' (nosso) e o 'theirs' (deles) podem aparecer trocados; `--ours` informa a versão do ramo onde as alterações são feitas, enquanto `--theirs` informa a versão do ramo que contém o seu trabalho que está sendo feito o \"rebase\"."

#. type: Plain text
#: en/git-checkout.txt:147
#, priority:240
msgid "This is because `rebase` is used in a workflow that treats the history at the remote as the shared canonical one, and treats the work done on the branch you are rebasing as the third-party work to be integrated, and you are temporarily assuming the role of the keeper of the canonical history during the rebase.  As the keeper of the canonical history, you need to view the history from the remote as `ours` (i.e. \"our shared canonical history\"), while what you did on your side branch as `theirs` (i.e. \"one contributor's work on top of it\")."
msgstr "Isso ocorre porque o `rebase` é usado num fluxo de trabalho que trata o histórico no ramo remoto como o canônico compartilhado e trata o trabalho realizado no ramo que você está reconstruindo como o trabalho de terceiros que será integrado, e você está assumindo temporariamente o papel do detentor da história canônica durante o \"rebase\".  Como detentor da história canônica, você precisa ver a história do ramo remoto como `nossa` (ou seja, a \"nossa história canônica compartilhada\"), enquanto o que você fez do seu lado se ramifica como `deles` (ou seja, \"o trabalho de um colaborador no topo dela \")."

#. type: Labeled list
#: en/git-checkout.txt:148 en/git-worktree.txt:178
#, no-wrap, priority:240
msgid "-b <new-branch>"
msgstr "-b <novo-ramo>"

#. type: Plain text
#: en/git-checkout.txt:151
#, priority:240
msgid "Create a new branch named `<new-branch>` and start it at `<start-point>`; see linkgit:git-branch[1] for details."
msgstr "Crie uma nova ramificação chamada `<-novo-ramo>` e inicie-a em `<ponto-de-partida>`; para mais detalhes consulte linkgit:git-branch[1]."

#. type: Labeled list
#: en/git-checkout.txt:152 en/git-worktree.txt:179
#, no-wrap, priority:240
msgid "-B <new-branch>"
msgstr "-B <novo-ramo>"

#. type: Plain text
#: en/git-checkout.txt:157
#, priority:240
msgid "Creates the branch `<new-branch>` and start it at `<start-point>`; if it already exists, then reset it to `<start-point>`. This is equivalent to running \"git branch\" with \"-f\"; see linkgit:git-branch[1] for details."
msgstr "Cria o `<novo-ramo>` e inicia no `<ponto-de-partida>`; caso já exista, redefina-o para o `<ponto-de-partida>`. É o mesmo que executar o comando \"git branch\" com a opção \"-f\"; para mais detalhes, consulte linkgit:git-branch[1]."

#. type: Plain text
#: en/git-checkout.txt:162
#, priority:240
msgid "When creating a new branch, set up \"upstream\" configuration. See \"--track\" in linkgit:git-branch[1] for details."
msgstr "Durante a criação de um novo ramo, defina a configuração do \"upstream\". Para mais detalhes, consulte \"--track\" em linkgit:git-branch[1]."

#. type: Plain text
#: en/git-checkout.txt:172
#, priority:240
msgid "If no `-b` option is given, the name of the new branch will be derived from the remote-tracking branch, by looking at the local part of the refspec configured for the corresponding remote, and then stripping the initial part up to the \"*\".  This would tell us to use `hack` as the local branch when branching off of `origin/hack` (or `remotes/origin/hack`, or even `refs/remotes/origin/hack`).  If the given name has no slash, or the above guessing results in an empty name, the guessing is aborted.  You can explicitly give a name with `-b` in such a case."
msgstr "Caso nenhuma opção `-b` seja utilizada, o nome do novo ramo será derivado do ramo monitorado remotamente, observando a parte local da \"refspec\" configurada para o ramo remoto correspondente e removendo a parte inicial em seguida para o \"*\".  Isso nos diria para usar um `hack` como um ramo local ao se ramificar do `origin/hack` (ou `remotes/origin/hack` ou até  mesmo do `refs/remotes/origin/hack`).  Caso o nome informado não tenha barra ou se a dedução acima resultar em um nome vazio, a dedução será abortada.  Em tais casos, é possível dar um nome diretamente usando a opção `-b`."

#. type: Plain text
#: en/git-checkout.txt:176 en/git-switch.txt:172
#, priority:240
msgid "Do not set up \"upstream\" configuration, even if the `branch.autoSetupMerge` configuration variable is true."
msgstr "Não configure \"upstream\" mesmo que a variável de configuração `branch.autoSetupMerge` seja verdadeira."

#. type: Labeled list
#: en/git-checkout.txt:177 en/git-switch.txt:87
#, ignore-same, no-wrap, priority:240
msgid "--guess"
msgstr "--guess"

#. type: Labeled list
#: en/git-checkout.txt:178 en/git-switch.txt:88
#, ignore-same, no-wrap, priority:240
msgid "--no-guess"
msgstr "--no-guess"

#. type: Plain text
#: en/git-checkout.txt:182 en/git-switch.txt:92
#, priority:240
msgid "If `<branch>` is not found but there does exist a tracking branch in exactly one remote (call it `<remote>`) with a matching name, treat as equivalent to"
msgstr "Caso o `<ramo>` não seja encontrado mas exista uma ramificação de rastreamento exatamente em uma localidade remota (chame-o <remoto>) que coincida com um nome, trate como equivalente a"

#. type: Plain text
#: en/git-checkout.txt:195 en/git-switch.txt:104
#, priority:240
msgid "If the branch exists in multiple remotes and one of them is named by the `checkout.defaultRemote` configuration variable, we'll use that one for the purposes of disambiguation, even if the `<branch>` isn't unique across all remotes. Set it to e.g. `checkout.defaultRemote=origin` to always checkout remote branches from there if `<branch>` is ambiguous but exists on the 'origin' remote. See also `checkout.defaultRemote` in linkgit:git-config[1]."
msgstr "Caso o ramo exista em diversos ramos remotos e um deles seja nomeado pela variável de configuração `checkout.defaultRemote`, para propósitos de desambiguação, mesmo que `<ramo>` não seja o único em todos os outros ramos remotos. Defina por exemplo, `checkout.defaultRemote=origin` para que sempre verifique as ramificações remotas de lá caso `<ramo>` seja ambíguo e ainda assim `origin` exista. Consulte também `checkout.defaultRemote` em linkgit:git-config[1]."

#. type: Plain text
#: en/git-checkout.txt:197 en/git-switch.txt:106
#, priority:240
msgid "`--guess` is the default behavior. Use `--no-guess` to disable it."
msgstr "`--guess` é o comportamento predefinido. Utilize a opção `--no-guess` para desativá-lo."

#. type: Plain text
#: en/git-checkout.txt:200 en/git-switch.txt:109
#, priority:240
msgid "The default behavior can be set via the `checkout.guess` configuration variable."
msgstr "O comportamento predefinido pode ser definido através da variável de configuração `checkout.guess`."

#. type: Plain text
#: en/git-checkout.txt:204
#, priority:240
msgid "Create the new branch's reflog; see linkgit:git-branch[1] for details."
msgstr "Crie o reflog da nova ramificação; veja linkgit:git-branch[1] para detalhes."

#. type: Labeled list
#: en/git-checkout.txt:206 en/git-daemon.txt:156 en/git-switch.txt:82 en/git-worktree.txt:188
#, ignore-same, no-wrap, priority:240
msgid "--detach"
msgstr "--detach"

#. type: Plain text
#: en/git-checkout.txt:212
#, priority:240
msgid "Rather than checking out a branch to work on it, check out a commit for inspection and discardable experiments.  This is the default behavior of `git checkout <commit>` when `<commit>` is not a branch name.  See the \"DETACHED HEAD\" section below for details."
msgstr "Em vez de averiguar um ramo para trabalhar nele, verifique um commit para a inspeção e para experimentos que sejam descartáveis.  Este é o comportamento predefinido do comando `git checkout` quando `<commit>`não for um nome do ramo.  Para obter mais detalhes, consulte a seção \"HEAD DESANEXADO\" abaixo."

#. type: Labeled list
#: en/git-checkout.txt:213 en/git-switch.txt:173
#, no-wrap, priority:240
msgid "--orphan <new-branch>"
msgstr "--orphan <novo-ramo>"

#. type: Plain text
#: en/git-checkout.txt:219
#, priority:240
msgid "Create a new 'orphan' branch, named `<new-branch>`, started from `<start-point>` and switch to it.  The first commit made on this new branch will have no parents and it will be the root of a new history totally disconnected from all the other branches and commits."
msgstr "Crie um novo ramo 'orphan', chamado `<novo-ramo>`, iniciado a partir do `<ponto-de-partida>` e alterne para ele.  O primeiro commit feito neste novo ramo não terá pais e será a raiz de um novo histórico totalmente desconectado de todos os outros ramos e commits."

#. type: Plain text
#: en/git-checkout.txt:224
#, priority:240
msgid "The index and the working tree are adjusted as if you had previously run `git checkout <start-point>`.  This allows you to start a new history that records a set of paths similar to `<start-point>` by easily running `git commit -a` to make the root commit."
msgstr "O índice e a árvore de trabalho são ajustadas como se você tivesse rodado o comando `git checkout <ponto-de-partida>` antes.  Isto permite que você inicie um novo histórico que registra um conjunto dos caminhos semelhante ao `<ponto-de-partida>` através da execução do comando `git commit -a` para fazer o commit principal."

#. type: Plain text
#: en/git-checkout.txt:230
#, priority:240
msgid "This can be useful when you want to publish the tree from a commit without exposing its full history. You might want to do this to publish an open source branch of a project whose current tree is \"clean\", but whose full history contains proprietary or otherwise encumbered bits of code."
msgstr "Isso pode ser útil quando você quer publicar a árvore a partir de um commit sem expor o seu histórico completo. Você pode fazer isso para publicar um ramo de código aberto de um projeto cuja árvore atual esteja \"limpa\", mas cujo histórico completo contenha pequenos pedaços de código proprietário amontoados."

#. type: Plain text
#: en/git-checkout.txt:237
#, priority:240
msgid "If you want to start a disconnected history that records a set of paths that is totally different from the one of `<start-point>`, then you should clear the index and the working tree right after creating the orphan branch by running `git rm -rf .` from the top level of the working tree.  Afterwards you will be ready to prepare your new files, repopulating the working tree, by copying them from elsewhere, extracting a tarball, etc."
msgstr "Caso queira iniciar um histórico desconectado que registre um conjunto dos caminhos totalmente diferentes de um dos `<ponto-de-partida>`, limpe o índice e a árvore de trabalho logo após criar o ramo órfão executando o comando `git rm -rf.` Do cume da árvore de trabalho.  Depois, você estará pronto para preparar os seus arquivos novos, populando novamente a árvore de trabalho, copiando-os dos outros lugares, extraindo um tarball, etc."

#. type: Plain text
#: en/git-checkout.txt:243
#, priority:240
msgid "In sparse checkout mode, `git checkout -- <paths>` would update only entries matched by `<paths>` and sparse patterns in `$GIT_DIR/info/sparse-checkout`. This option ignores the sparse patterns and adds back any files in `<paths>`."
msgstr "É predefinido que no modo de averiguação esparsa, apenas as entradas que sejam coincidentes com `<pathspec>` e com os padrões esparsos em `$GIT_DIR/info/sparse-checkout`. Esta opção ignora os padrões esparsos e os adiciona de volta nos arquivos em `<pathspec>`."

#. type: Labeled list
#: en/git-checkout.txt:245 en/git-rebase.txt:347 en/git-rebase.txt:633 en/git-reset.txt:75 en/git-restore.txt:87 en/git-submodule.txt:369 en/git-svn.txt:676 en/git-switch.txt:122 en/rev-list-options.txt:328
#, ignore-same, no-wrap, priority:280
msgid "--merge"
msgstr "--merge"

#. type: Plain text
#: en/git-checkout.txt:254
#, priority:240
msgid "When switching branches, if you have local modifications to one or more files that are different between the current branch and the branch to which you are switching, the command refuses to switch branches in order to preserve your modifications in context.  However, with this option, a three-way merge between the current branch, your working tree contents, and the new branch is done, and you will be on the new branch."
msgstr "Ao fazer a alternância das ramificações, caso haja alterações locais num ou mais arquivos diferentes entre o ramo atual e o ramo para aonde você está alternando, o comando se recusará a alternar as ramificações, visando preservar as suas alterações dada a circunstância.  Contudo, com esta opção, é feita uma mesclagem de três vias entre o ramo atual, o conteúdo da árvore de trabalho e o novo ramo, fazendo com que você esteja neste novo ramo."

#. type: Plain text
#: en/git-checkout.txt:259 en/git-switch.txt:135
#, priority:240
msgid "When a merge conflict happens, the index entries for conflicting paths are left unmerged, and you need to resolve the conflicts and mark the resolved paths with `git add` (or `git rm` if the merge should result in deletion of the path)."
msgstr "Quando ocorre um conflito durante a mesclagem, as entradas do índice para os caminhos conflitantes não são mesclados, sendo necessário que você resolva os conflitos e marque os caminhos resolvidos com `git add` (ou `git rm` caso a mesclagem resulte na exclusão do caminho) ."

#. type: Plain text
#: en/git-checkout.txt:262
#, priority:240
msgid "When checking out paths from the index, this option lets you recreate the conflicted merge in the specified paths."
msgstr "Ao efetuar a averiguação dos caminhos do índice, essa opção permite recriar a mesclagem conflitante nos caminhos especificados."

#. type: Plain text
#: en/git-checkout.txt:264
#, priority:240
msgid "When switching branches with `--merge`, staged changes may be lost."
msgstr "Ao alternar as ramificações com `--merge` as alterações que já foram organizadas podem ser perdidas."

#. type: Labeled list
#: en/git-checkout.txt:265 en/git-restore.txt:91 en/git-switch.txt:136
#, no-wrap, priority:280
msgid "--conflict=<style>"
msgstr "--conflict=<estilo>"

#. type: Plain text
#: en/git-checkout.txt:270 en/git-restore.txt:96 en/git-switch.txt:141
#, priority:280
msgid "The same as `--merge` option above, but changes the way the conflicting hunks are presented, overriding the `merge.conflictStyle` configuration variable.  Possible values are \"merge\" (default), \"diff3\", and \"zdiff3\"."
msgstr "O mesmo que a opção `--merge` acima, porém altera a maneira como os blocos conflitantes são apresentados, ao substituir a variável de configuração `merge.conflictStyle`.  Os valores possíveis são `merge` (predefinido), \"diff3\" e \"zdiff3\"."

#. type: Plain text
#: en/git-checkout.txt:277
#, priority:240
msgid "Interactively select hunks in the difference between the `<tree-ish>` (or the index, if unspecified) and the working tree.  The chosen hunks are then applied in reverse to the working tree (and if a `<tree-ish>` was specified, the index)."
msgstr "Selecione blocos de forma interativa com a diferença entre a `<árvore>` (ou o índice, caso não esteja definido) e a árvore de trabalho.  Os blocos escolhidos são então aplicados em ordem reversa na árvore de trabalho (e caso uma `<árvore>` tenha sido informada ao índice)."

#. type: Plain text
#: en/git-checkout.txt:281
#, priority:240
msgid "This means that you can use `git checkout -p` to selectively discard edits from your current working tree. See the ``Interactive Mode'' section of linkgit:git-add[1] to learn how to operate the `--patch` mode."
msgstr "Isso significa que você pode usar o `git checkout -p` para descartar seletivamente as edições da sua árvore de trabalho atual. Veja a seção ``Interactive Mode'' do linkgit:git-add[1] para aprender como operar o modo `--patch`."

#. type: Plain text
#: en/git-checkout.txt:284
#, priority:240
msgid "Note that this option uses the no overlay mode by default (see also `--overlay`), and currently doesn't support overlay mode."
msgstr "Observe que por predefinição esta opção usa o modo sem sobreposição (consulte também `--overlay`), assim como, atualmente também não é compatível com o modo de sobreposição."

#. type: Labeled list
#: en/git-checkout.txt:285 en/git-switch.txt:177
#, ignore-same, no-wrap, priority:240
msgid "--ignore-other-worktrees"
msgstr "--ignore-other-worktrees"

#. type: Plain text
#: en/git-checkout.txt:290
#, priority:240
msgid "`git checkout` refuses when the wanted ref is already checked out by another worktree. This option makes it check the ref out anyway. In other words, the ref can be held by more than one worktree."
msgstr "O comando `git checkout` irá se recusar quando a \"ref\" desejada já tenha sido averiguada através de uma outra árvore de trabalho. Esta opção faz com que ele averigue a \"ref\" mesmo assim. Em outras palavras, a \"ref\" pode ser mantida por mais de uma árvore de trabalho."

#. type: Labeled list
#: en/git-checkout.txt:291 en/git-merge.txt:95
#, ignore-same, no-wrap, priority:240
msgid "--overwrite-ignore"
msgstr "--overwrite-ignore"

#. type: Labeled list
#: en/git-checkout.txt:292 en/git-merge.txt:96
#, ignore-same, no-wrap, priority:240
msgid "--no-overwrite-ignore"
msgstr "--no-overwrite-ignore"

#. type: Plain text
#: en/git-checkout.txt:296
#, priority:240
msgid "Silently overwrite ignored files when switching branches. This is the default behavior. Use `--no-overwrite-ignore` to abort the operation when the new branch contains ignored files."
msgstr "Substitua silenciosamente os arquivos ignorados ao alternar ramificações. Este é o comportamento predefinido. Utilize `--no-overwrite-ignore` para interromper a operação quando o novo ramo contiver os arquivos que foram ignorados."

#. type: Plain text
#: en/git-checkout.txt:306
#, priority:240
msgid "Using `--recurse-submodules` will update the content of all active submodules according to the commit recorded in the superproject. If local modifications in a submodule would be overwritten the checkout will fail unless `-f` is used. If nothing (or `--no-recurse-submodules`)  is used, submodules working trees will not be updated.  Just like linkgit:git-submodule[1], this will detach `HEAD` of the submodule."
msgstr "O uso da opção `--recurse-submodules` atualizará o conteúdo de todos os submódulos ativos de acordo com commit gravado no superprojeto. Caso as alterações locais em um submódulo forem sobrescritos, a averiguação falhará, a menos que a opção `-f` seja utilizado. Caso nada (ou a opção `--no-recurse-submodules`) seja utilizado, os submódulos que trabalham nas árvores não serão atualizados.  Assim como linkgit:git-submodule[1], isso faz com que o `HEAD` seja desanexando do submódulo."

#. type: Labeled list
#: en/git-checkout.txt:307 en/git-restore.txt:121
#, ignore-same, no-wrap, priority:280
msgid "--overlay"
msgstr "--overlay"

#. type: Labeled list
#: en/git-checkout.txt:308 en/git-restore.txt:122
#, ignore-same, no-wrap, priority:280
msgid "--no-overlay"
msgstr "--no-overlay"

#. type: Plain text
#: en/git-checkout.txt:314
#, priority:240
msgid "In the default overlay mode, `git checkout` never removes files from the index or the working tree.  When specifying `--no-overlay`, files that appear in the index and working tree, but not in `<tree-ish>` are removed, to make them match `<tree-ish>` exactly."
msgstr "No modo predefinido de sobreposição, o `git checkout` nunca remove os arquivos do índice ou da árvore de trabalho.  Ao usar `--no-overlay` os arquivos que aparecem no índice e na árvore de trabalho, mas não na `<árvore>` são removidos, para fazê-los coincidir exatamente com a `<árvore>`."

#. type: Labeled list
#: en/git-checkout.txt:328 en/git-rebase.txt:240 en/git-switch.txt:36
#, no-wrap, priority:240
msgid "<branch>"
msgstr "<ramo>"

#. type: Plain text
#: en/git-checkout.txt:334
#, priority:240
msgid "Branch to checkout; if it refers to a branch (i.e., a name that, when prepended with \"refs/heads/\", is a valid ref), then that branch is checked out. Otherwise, if it refers to a valid commit, your `HEAD` becomes \"detached\" and you are no longer on any branch (see below for details)."
msgstr "O ramo que será averiguado; caso se referira a um ramo (ou seja, um nome que, quando anexado com \"refs/heads/\", seja uma \"ref\" válida), então este ramo será retirado. Caso contrário, caso tenha referência para um commit inválido, o seu `HEAD` se torna \"desanexado\" e você não estará mais em qualquer outro ramo (veja mais detalhes abaixo)."

#. type: Plain text
#: en/git-checkout.txt:338
#, priority:240
msgid "You can use the `@{-N}` syntax to refer to the N-th last branch/commit checked out using \"git checkout\" operation. You may also specify `-` which is synonymous to `@{-1}`."
msgstr "Você pode usar a sintaxe `@{- N}` para se referir ao último ramo/commit finalizado utilizando o comando \"git checkout\". Também é possível utilizar `-` que é um sinônimo para `@{-1}`."

#. type: Plain text
#: en/git-checkout.txt:342 en/git-switch.txt:58
#, ignore-ellipsis, priority:240
msgid "As a special case, you may use `A...B` as a shortcut for the merge base of `A` and `B` if there is exactly one merge base. You can leave out at most one of `A` and `B`, in which case it defaults to `HEAD`."
msgstr "Como um caso especial, você pode usar `A...B` como um atalho para a mesclagem na base de `A` e` B` se houver exatamente uma base a ser mesclada. Você pode deixar de fora, no máximo, um de `A` e` B`, no caso, a predefinição retorna para `HEAD`."

#. type: Labeled list
#: en/git-checkout.txt:343 en/git-switch.txt:39
#, no-wrap, priority:240
msgid "<new-branch>"
msgstr "<novo-ramo>"

#. type: Plain text
#: en/git-checkout.txt:345 en/git-switch.txt:41
#, priority:240
msgid "Name for the new branch."
msgstr "Nome para o novo branch."

#. type: Plain text
#: en/git-checkout.txt:349
#, priority:240
msgid "The name of a commit at which to start the new branch; see linkgit:git-branch[1] for details. Defaults to `HEAD`."
msgstr "O nome do commit onde o ramo deve iniciar; para mais detalhes consulte linkgit:git-branch[1]. A predefinição retorna para `HEAD`."

#. type: Plain text
#: en/git-checkout.txt:353 en/git-checkout.txt:361 en/git-restore.txt:47
#, ignore-ellipsis, priority:280
msgid "As a special case, you may use `\"A...B\"` as a shortcut for the merge base of `A` and `B` if there is exactly one merge base. You can leave out at most one of `A` and `B`, in which case it defaults to `HEAD`."
msgstr "Como um caso especial, é possível utilizar `\"A...B\"` como um atalho como uma base para a mesclagem de `A` e `B` caso exista exatamente uma base de merge. Você pode deixar de fora, no máximo, um de `A` e` B`, caso onde a predefinição retorna para `HEAD`."

#. type: Plain text
#: en/git-checkout.txt:357
#, priority:240
msgid "Tree to checkout from (when paths are given). If not specified, the index will be used."
msgstr "Árvore que será averiguada (quando os caminhos são informados). Caso não seja informado, o índice será usado."

#. type: Plain text
#: en/git-checkout.txt:367 en/git-reset.txt:132 en/git-restore.txt:146
#, priority:280
msgid "Limits the paths affected by the operation."
msgstr "Limita os caminhos afetados pela operação."

#. type: Plain text
#: en/git-checkout.txt:369 en/git-commit.txt:408 en/git-reset.txt:134 en/git-restore.txt:148 en/git-rm.txt:47 en/git-stash.txt:256
#, priority:280
msgid "For more details, see the 'pathspec' entry in linkgit:gitglossary[7]."
msgstr "Para mais detalhes sobre a sintaxe <pathspec>, veja a entrada 'pathspec' em linkgit:gitglossary[7]."

#. type: Title -
#: en/git-checkout.txt:371
#, no-wrap, priority:240
msgid "DETACHED HEAD"
msgstr "HEAD DESANEXADO"

#. type: Plain text
#: en/git-checkout.txt:375
#, priority:240
msgid "`HEAD` normally refers to a named branch (e.g. `master`). Meanwhile, each branch refers to a specific commit. Let's look at a repo with three commits, one of them tagged, and with branch `master` checked out:"
msgstr "O `HEAD` normalmente se refere a um determinado ramo (por exemplo, `master`). Enquanto isso, cada ramo se refere a um commit em específico. Vejamos um repositório com três commits, um deles marcado e com o ramo `master` averiguado:"

#. type: delimited block -
#: en/git-checkout.txt:384
#, no-wrap, priority:240
msgid ""
"           HEAD (refers to branch 'master')\n"
"            |\n"
"            v\n"
"a---b---c  branch 'master' (refers to commit 'c')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refers to commit 'b')\n"
msgstr ""
"           HEAD (refere-se ao ramo 'master')\n"
"            |\n"
"            v\n"
"a---b---c  ramo 'master' (refere-se ao commit 'c')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refere-se ao commit 'b')\n"

#. type: Plain text
#: en/git-checkout.txt:391
#, priority:240
msgid "When a commit is created in this state, the branch is updated to refer to the new commit. Specifically, 'git commit' creates a new commit `d`, whose parent is commit `c`, and then updates branch `master` to refer to new commit `d`. `HEAD` still refers to branch `master` and so indirectly now refers to commit `d`:"
msgstr "Quando um commit é criado nest condição, o ramo é atualizado para se referir ao novo commit. Em específico o comando 'git commit' que cria um novo commit `d`, cujo pai é o commit `c`, que atualiza o ramo `master` para ter referência com o novo commit `d`. O `HEAD` ainda se refere ao ramo `master` e agora indiretamente, refere ao commit `d`:"

#. type: delimited block -
#: en/git-checkout.txt:394 en/git-checkout.txt:429 en/git-checkout.txt:446
#, no-wrap, priority:240
msgid "$ edit; git add; git commit\n"
msgstr "$ editar; git adicionar; git commit\n"

#. type: delimited block -
#: en/git-checkout.txt:402
#, no-wrap, priority:240
msgid ""
"               HEAD (refers to branch 'master')\n"
"                |\n"
"                v\n"
"a---b---c---d  branch 'master' (refers to commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refers to commit 'b')\n"
msgstr ""
"               HEAD (refere-se ao ramo 'master')\n"
"                |\n"
"                v\n"
"a---b---c---d  ramo 'master' (refere-se ao commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refere-se ao commit 'b')\n"

#. type: Plain text
#: en/git-checkout.txt:408
#, priority:240
msgid "It is sometimes useful to be able to checkout a commit that is not at the tip of any named branch, or even to create a new commit that is not referenced by a named branch. Let's look at what happens when we checkout commit `b` (here we show two ways this may be done):"
msgstr "Às vezes, é útil poder fazer a averiguação de um commit que não está no topo de qualquer ramo conhecido ou mesmo para criar um novo commit que não seja referenciado por nenhum outro ramo conhecido. Vejamos o que acontece quando fazemos a averiguação do commit `b` (aqui exibimos duas maneiras de faze-lo):"

#. type: delimited block -
#: en/git-checkout.txt:412
#, no-wrap, priority:240
msgid ""
"$ git checkout v2.0  # or\n"
"$ git checkout master^^\n"
msgstr ""
"$ git checkout v2.0  # ou\n"
"$ git checkout master^^\n"

#. type: delimited block -
#: en/git-checkout.txt:420
#, no-wrap, priority:240
msgid ""
"   HEAD (refers to commit 'b')\n"
"    |\n"
"    v\n"
"a---b---c---d  branch 'master' (refers to commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refers to commit 'b')\n"
msgstr ""
"   HEAD (refere-se ao commit 'b')\n"
"    |\n"
"    v\n"
"a---b---c---d  ramo 'master' (refere-se ao commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refere-se ao commit 'b')\n"

#. type: Plain text
#: en/git-checkout.txt:426
#, priority:240
msgid "Notice that regardless of which checkout command we use, `HEAD` now refers directly to commit `b`. This is known as being in detached `HEAD` state.  It means simply that `HEAD` refers to a specific commit, as opposed to referring to a named branch. Let's see what happens when we create a commit:"
msgstr "Observe que, independente do comando \"checkout\" utilizado o `HEAD` agora se refere diretamente ao commit `b`. Isso é conhecido como uma condição em desanexo (detached ) do `HEAD`.  Simplesmente significa que o `HEAD` tem referência a um commit em específico em vez de se referir ao nome de um ramo. Vejamos o que acontece quando criamos um commit:"

#. type: delimited block -
#: en/git-checkout.txt:439
#, no-wrap, priority:240
msgid ""
"     HEAD (refers to commit 'e')\n"
"      |\n"
"      v\n"
"      e\n"
"     /\n"
"a---b---c---d  branch 'master' (refers to commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refers to commit 'b')\n"
msgstr ""
"     HEAD (refere-se ao commit 'e')\n"
"      |\n"
"      v\n"
"      e\n"
"     /\n"
"a---b---c---d  ramo 'master' (refere-se ao commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refere-se ao commit 'b')\n"

#. type: Plain text
#: en/git-checkout.txt:443
#, priority:240
msgid "There is now a new commit `e`, but it is referenced only by `HEAD`. We can of course add yet another commit in this state:"
msgstr "Agora existe um novo commit `e`, porém a sua referência existe apenas no `HEAD`. Nessa condição fica claro que podemos adicionar mais um commit:"

#. type: delimited block -
#: en/git-checkout.txt:456
#, no-wrap, priority:240
msgid ""
"\t HEAD (refers to commit 'f')\n"
"\t  |\n"
"\t  v\n"
"      e---f\n"
"     /\n"
"a---b---c---d  branch 'master' (refers to commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refers to commit 'b')\n"
msgstr ""
"\t HEAD (refere-se ao commit 'f')\n"
"\t  |\n"
"\t  v\n"
"      e---f\n"
"     /\n"
"a---b---c---d  ramo 'master' (refere-se ao commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refere-se ao commit 'b')\n"

#. type: Plain text
#: en/git-checkout.txt:460
#, priority:240
msgid "In fact, we can perform all the normal Git operations. But, let's look at what happens when we then checkout `master`:"
msgstr "De fato, podemos executar todas as operações normais do Git. Porém vejamos o que acontece quando fazemos um checkout do `master`:"

#. type: delimited block -
#: en/git-checkout.txt:463
#, no-wrap, priority:240
msgid "$ git checkout master\n"
msgstr "$ git checkout master\n"

#. type: delimited block -
#: en/git-checkout.txt:471
#, no-wrap, priority:240
msgid ""
"               HEAD (refers to branch 'master')\n"
"      e---f     |\n"
"     /          v\n"
"a---b---c---d  branch 'master' (refers to commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refers to commit 'b')\n"
msgstr ""
"               HEAD (refere-se ao ramo 'master')\n"
"      e---f     |\n"
"     /          v\n"
"a---b---c---d  ramo 'master' (refere-se ao commit 'd')\n"
"    ^\n"
"    |\n"
"  tag 'v2.0' (refere-se ao commit 'b')\n"

#. type: Plain text
#: en/git-checkout.txt:478
#, priority:240
msgid "It is important to realize that at this point nothing refers to commit `f`. Eventually commit `f` (and by extension commit `e`) will be deleted by the routine Git garbage collection process, unless we create a reference before that happens. If we have not yet moved away from commit `f`, any of these will create a reference to it:"
msgstr "É importante perceber que neste momento nada se refere ao commit `f`. Eventualmente o commit `f` (e de tabela o commit `e`) será excluído pelo processo rotineiro da coleta de lixo do Git, antes que isso aconteça é preciso criar uma referência. Se ainda não nos afastamos do commit `f`, qualquer um deles criará uma referência a ele:"

#. type: delimited block -
#: en/git-checkout.txt:483
#, no-wrap, priority:240
msgid ""
"$ git checkout -b foo   <1>\n"
"$ git branch foo        <2>\n"
"$ git tag foo           <3>\n"
msgstr ""
"$ git checkout -b foo   <1>\n"
"$ git branch foo        <2>\n"
"$ git tag foo           <3>\n"

#. type: Plain text
#: en/git-checkout.txt:488
#, priority:240
msgid "creates a new branch `foo`, which refers to commit `f`, and then updates `HEAD` to refer to branch `foo`. In other words, we'll no longer be in detached `HEAD` state after this command."
msgstr "cria uma nova ramificação `foo` com referência ao commit `f`, atualiza HEAD com referência ao ramo `foo`. Isso significa que agora não estamos mais desanexados do `HEAD` após este comando."

#. type: Plain text
#: en/git-checkout.txt:491
#, priority:240
msgid "similarly creates a new branch `foo`, which refers to commit `f`, but leaves `HEAD` detached."
msgstr "similarmente cria um novo ramo `foo` com referência ao commit `f` deixando `HEAD` desanexado."

#. type: Plain text
#: en/git-checkout.txt:494
#, priority:240
msgid "creates a new tag `foo`, which refers to commit `f`, leaving `HEAD` detached."
msgstr "cria uma nova tag `foo`com referência ao commit `f` deixando HEAD desanexado."

#. type: Plain text
#: en/git-checkout.txt:499
#, priority:240
msgid "If we have moved away from commit `f`, then we must first recover its object name (typically by using git reflog), and then we can create a reference to it. For example, to see the last two commits to which `HEAD` referred, we can use either of these commands:"
msgstr "Se nos afastamos do commit `f`, primeiro precisamos recuperar o nome do objeto (normalmente utilizando `git reflog`) e em seguida, podemos criar uma referência para ele. Para ver os dois últimos commits aos quais o `HEAD` se refere, podemos usar um destes comandos, por exemplo:"

#. type: delimited block -
#: en/git-checkout.txt:503
#, no-wrap, priority:240
msgid ""
"$ git reflog -2 HEAD # or\n"
"$ git log -g -2 HEAD\n"
msgstr ""
"$ git reflog -2 HEAD # ou\n"
"$ git log -g -2 HEAD\n"

#. type: Title -
#: en/git-checkout.txt:506
#, no-wrap, priority:240
msgid "ARGUMENT DISAMBIGUATION"
msgstr "DESAMBIGUAÇÃO DOS ARGUMENTOS"

#. type: Plain text
#: en/git-checkout.txt:516
#, priority:240
msgid "When there is only one argument given and it is not `--` (e.g. `git checkout abc`), and when the argument is both a valid `<tree-ish>` (e.g. a branch `abc` exists) and a valid `<pathspec>` (e.g. a file or a directory whose name is \"abc\" exists), Git would usually ask you to disambiguate.  Because checking out a branch is so common an operation, however, `git checkout abc` takes \"abc\" as a `<tree-ish>` in such a situation.  Use `git checkout -- <pathspec>` if you want to checkout these paths out of the index."
msgstr "Quando há apenas um argumento que não seja `--` (como `git checkout abc`) e quando ambos os argumentos `<árvore>` são válidos (como a existência do ramo `abc`) e `<pathspec>` também for válido (caso um arquivo ou diretório exista e cujo nome seja \"abc\" por exemplo), o Git normalmente solicita que você desambigue.  Contudo, como fazer o checkout de uma ramificação é uma operação tão comum, o comando `git checkout abc` considera \"abc\" nessa situação como `<árvore>`.  Utilize `git checkout -- <pathspec>` caso queira eliminar estes caminhos de dentro do índice."

#. type: Plain text
#: en/git-checkout.txt:523
#, priority:240
msgid "The following sequence checks out the `master` branch, reverts the `Makefile` to two revisions back, deletes `hello.c` by mistake, and gets it back from the index."
msgstr "A sequência a seguir exclui o ramo `master`, reverte o` Makefile` para duas revisões anteriores, exclui o arquivo hello.c por engano e faz a recuperação do índice."

#. type: delimited block -
#: en/git-checkout.txt:529
#, no-wrap, priority:240
msgid ""
"$ git checkout master             <1>\n"
"$ git checkout master~2 Makefile  <2>\n"
"$ rm -f hello.c\n"
"$ git checkout hello.c            <3>\n"
msgstr ""
"$ git checkout master             <1>\n"
"$ git checkout master~2 Makefile  <2>\n"
"$ rm -f hello.c\n"
"$ git checkout hello.c            <3>\n"

#. type: Plain text
#: en/git-checkout.txt:532
#, priority:240
msgid "switch branch"
msgstr "alternância do ramo"

#. type: Plain text
#: en/git-checkout.txt:533 en/git-restore.txt:164
#, priority:280
msgid "take a file out of another commit"
msgstr "tirar um arquivo de um outro commit"

#. type: Plain text
#: en/git-checkout.txt:534
#, priority:240
msgid "restore `hello.c` from the index"
msgstr "restaura o arquivo `hello.c` a partir do índice"

#. type: Plain text
#: en/git-checkout.txt:537
#, priority:240
msgid "If you want to check out _all_ C source files out of the index, you can say"
msgstr "Caso queira verificar _todos_ os arquivos \"*.c\" do código-fonte diretamente do índice, você pode utilizar"

#. type: delimited block -
#: en/git-checkout.txt:540
#, no-wrap, priority:240
msgid "$ git checkout -- '*.c'\n"
msgstr "$ git checkout -- '*.c'\n"

#. type: Plain text
#: en/git-checkout.txt:546
#, priority:240
msgid "Note the quotes around `*.c`.  The file `hello.c` will also be checked out, even though it is no longer in the working tree, because the file globbing is used to match entries in the index (not in the working tree by the shell)."
msgstr "Observe as aspas em torno de `* .c`.  O arquivo `hello.c` também será retirado, mesmo que não esteja mais na árvore de trabalho, porque o agrupamento dos arquivos é utilizado para coincidir com as entradas no índice (não na árvore de trabalho pelo shell)."

#. type: Plain text
#: en/git-checkout.txt:550
#, priority:240
msgid "If you have an unfortunate branch that is named `hello.c`, this step would be confused as an instruction to switch to that branch.  You should instead write:"
msgstr "Caso tenha um ramo chamado `hello.c`, esta etapa será confundida como uma instrução para alternar para este ramo.  Você deve então escrever:"

#. type: delimited block -
#: en/git-checkout.txt:553
#, no-wrap, priority:240
msgid "$ git checkout -- hello.c\n"
msgstr "$ git checkout -- hello.c\n"

#. type: Plain text
#: en/git-checkout.txt:557 en/git-switch.txt:203
#, priority:240
msgid "After working in the wrong branch, switching to the correct branch would be done using:"
msgstr "Depois de trabalhar no ramo errado, mudar para o ramo correto seria feito utilizando:"

#. type: delimited block -
#: en/git-checkout.txt:560
#, no-wrap, priority:240
msgid "$ git checkout mytopic\n"
msgstr "$ git checkout mytopic\n"

#. type: Plain text
#: en/git-checkout.txt:565
#, priority:240
msgid "However, your \"wrong\" branch and correct `mytopic` branch may differ in files that you have modified locally, in which case the above checkout would fail like this:"
msgstr "No entanto, o seu ramo \"errado\" e o correto \"mytopic\" podem diferir nos arquivos modificados localmente por você. Que dessa maneira, a verificação acima falhará assim:"

#. type: delimited block -
#: en/git-checkout.txt:569
#, no-wrap, priority:240
msgid ""
"$ git checkout mytopic\n"
"error: You have local changes to 'frotz'; not switching branches.\n"
msgstr ""
"$ git checkout mytopic\n"
"error: You have local changes to 'frotz'; not switching branches.\n"

#. type: Plain text
#: en/git-checkout.txt:573 en/git-switch.txt:219
#, priority:240
msgid "You can give the `-m` flag to the command, which would try a three-way merge:"
msgstr "Você pode repassar a opção`-m` ao comando, que tentaria uma mesclagem de três vias:"

#. type: delimited block -
#: en/git-checkout.txt:577
#, no-wrap, priority:240
msgid ""
"$ git checkout -m mytopic\n"
"Auto-merging frotz\n"
msgstr ""
"$ git checkout -m mytopic\n"
"Auto-merging frotz\n"

#. type: Plain text
#: en/git-checkout.txt:582 en/git-switch.txt:228
#, priority:240
msgid "After this three-way merge, the local modifications are _not_ registered in your index file, so `git diff` would show you what changes you made since the tip of the new branch."
msgstr "Após esta mesclagem de três vias, as alterações locais não serão registradas no seu arquivo do índice, portanto, o `git diff` exibirá quais foram as alterações feitas desde o cume do novo ramo."

#. type: Plain text
#: en/git-checkout.txt:585
#, priority:240
msgid "When a merge conflict happens during switching branches with the `-m` option, you would see something like this:"
msgstr "Quando um conflito de mesclagem acontece durante a troca de branches com a opção `-m`, você veria algo assim:"

#. type: delimited block -
#: en/git-checkout.txt:591
#, no-wrap, priority:240
msgid ""
"$ git checkout -m mytopic\n"
"Auto-merging frotz\n"
"ERROR: Merge conflict in frotz\n"
"fatal: merge program failed\n"
msgstr ""
"$ git checkout -m mytopic\n"
"Auto-merging frotz\n"
"ERROR: Merge conflict in frotz\n"
"fatal: merge program failed\n"

#. type: Plain text
#: en/git-checkout.txt:597
#, priority:240
msgid "At this point, `git diff` shows the changes cleanly merged as in the previous example, as well as the changes in the conflicted files.  Edit and resolve the conflict and mark it resolved with `git add` as usual:"
msgstr "Neste ponto, o comando `git diff` exibe as alterações mescladas de maneira limpa, como no exemplo anterior, bem como as alterações nos arquivos conflitantes.  Edite e resolva o conflito marcando-o como resolvido através do comando `git add` como de costume:"

#. type: delimited block -
#: en/git-checkout.txt:601
#, no-wrap, priority:240
msgid ""
"$ edit frotz\n"
"$ git add frotz\n"
msgstr ""
"$ edit frotz\n"
"$ git add frotz\n"

#. type: Plain text
#: en/git-checkout.txt:614
#, ignore-same, priority:240
msgid "linkgit:git-switch[1], linkgit:git-restore[1]"
msgstr "linkgit:git-switch[1], linkgit:git-restore[1]"

#. type: Title =
#: en/git-check-ref-format.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-check-ref-format(1)"
msgstr "git-check-ref-format(1)"

#. type: Plain text
#: en/git-check-ref-format.txt:7
#, priority:100
msgid "git-check-ref-format - Ensures that a reference name is well formed"
msgstr "git-check-ref-format - Garanta que um nome da referência esteja bem formado"

#. type: Plain text
#: en/git-check-ref-format.txt:15
#, no-wrap, priority:100
msgid ""
"'git check-ref-format' [--normalize]\n"
"       [--[no-]allow-onelevel] [--refspec-pattern]\n"
"       <refname>\n"
"'git check-ref-format' --branch <branchname-shorthand>\n"
msgstr ""
"'git check-ref-format' [--normalize]\n"
"       [--[no-]allow-onelevel] [--refspec-pattern]\n"
"       <refname>\n"
"'git check-ref-format' --branch <branchname-shorthand>\n"

#. type: Plain text
#: en/git-check-ref-format.txt:20
#, priority:100
msgid "Checks if a given 'refname' is acceptable, and exits with a non-zero status if it is not."
msgstr "Verifica se um determinado 'refnome' é aceitável e sai com um status diferente de zero, se não for."

#. type: Plain text
#: en/git-check-ref-format.txt:27
#, priority:100
msgid "A reference is used in Git to specify branches and tags.  A branch head is stored in the `refs/heads` hierarchy, while a tag is stored in the `refs/tags` hierarchy of the ref namespace (typically in `$GIT_DIR/refs/heads` and `$GIT_DIR/refs/tags` directories or, as entries in file `$GIT_DIR/packed-refs` if refs are packed by `git gc`)."
msgstr "Uma referência é usada no Git para definir as ramificações e as tags.  Um cabeçalho de um ramo é armazenado dentro da hierarquia `refs/heads`, enquanto uma tag é armazenada na hierarquia `refs/tags` do espaço de nomes da ref (geralmente nos diretórios `$GIT_DIR/refs/heads` e no `$GIT_DIR/refs/tags` ou nas entradas do arquivo no `$GIT_DIR/packed-refs` caso a \"ref\" tenha sido empacotada através do comando `git gc`)."

#. type: Plain text
#: en/git-check-ref-format.txt:29
#, priority:100
msgid "Git imposes the following rules on how references are named:"
msgstr "O Git impõe as seguintes regras sobre como as referências são nomeadas:"

#. type: Plain text
#: en/git-check-ref-format.txt:33
#, priority:100
msgid "They can include slash `/` for hierarchical (directory)  grouping, but no slash-separated component can begin with a dot `.` or end with the sequence `.lock`."
msgstr "Eles podem incluir slash `/` para agrupamento hierárquico (diretório),  nenhum componente separado por barras pode começar com um ponto `.` ou terminar com a sequência `.lock`."

#. type: Plain text
#: en/git-check-ref-format.txt:38
#, priority:100
msgid "They must contain at least one `/`. This enforces the presence of a category like `heads/`, `tags/` etc. but the actual names are not restricted.  If the `--allow-onelevel` option is used, this rule is waived."
msgstr "Eles devem ter pelo menos um `/`. Isto reforça a presença de uma categoria como `heads/`, `tags/` etc. Porém os nomes reais não são restritos.  Caso a opção `--allow-onelevel` seja utilizada, esta regra será dispensada."

#. type: Plain text
#: en/git-check-ref-format.txt:40
#, priority:100
msgid "They cannot have two consecutive dots `..` anywhere."
msgstr "Eles não podem ter dois pontos consecutivos `..` em qualquer lugar."

#. type: Plain text
#: en/git-check-ref-format.txt:44
#, priority:100
msgid "They cannot have ASCII control characters (i.e. bytes whose values are lower than \\040, or \\177 `DEL`), space, tilde `~`, caret `^`, or colon `:` anywhere."
msgstr "Eles não podem ter caracteres de controle ASCII (ou seja, bytes cujos valores são menores que \\040, ou \\177 `DEL`), espaço, til `~ `, circunflexo `^ `ou dois pontos `: `em qualquer lugar."

#. type: Plain text
#: en/git-check-ref-format.txt:48
#, priority:100
msgid "They cannot have question-mark `?`, asterisk `*`, or open bracket `[` anywhere.  See the `--refspec-pattern` option below for an exception to this rule."
msgstr "Eles não podem ter ponto de interrogação `?`, asterisco `*`, ou colchete aberto `[` em qualquer lugar.  Consulte a opção `--refspec-pattern` abaixo para uma exceção a esta regra."

#. type: Plain text
#: en/git-check-ref-format.txt:52
#, priority:100
msgid "They cannot begin or end with a slash `/` or contain multiple consecutive slashes (see the `--normalize` option below for an exception to this rule)"
msgstr "Eles não podem iniciar ou terminar com uma barra `/` ou conter múltiplas barras consecutivas (veja a opção `--normalize` abaixo para uma exceção a esta regra)"

#. type: Plain text
#: en/git-check-ref-format.txt:54
#, priority:100
msgid "They cannot end with a dot `.`."
msgstr "Eles não podem terminar com um ponto `.`."

#. type: Plain text
#: en/git-check-ref-format.txt:56
#, priority:100
msgid "They cannot contain a sequence `@{`."
msgstr "Eles não podem conter uma sequência `@{`."

#. type: Plain text
#: en/git-check-ref-format.txt:58
#, priority:100
msgid "They cannot be the single character `@`."
msgstr "Eles não podem ser o único caractere `@`."

#. type: Plain text
#: en/git-check-ref-format.txt:60
#, priority:100
msgid "They cannot contain a `\\`."
msgstr "Eles não podem conter um `\\`."

#. type: Plain text
#: en/git-check-ref-format.txt:65
#, priority:100
msgid "These rules make it easy for shell script based tools to parse reference names, pathname expansion by the shell when a reference name is used unquoted (by mistake), and also avoid ambiguities in certain reference name expressions (see linkgit:gitrevisions[7]):"
msgstr "Estas regras facilitam para as ferramentas com base em script shell a analise das referências dos nomes, a expansão de um nome do caminho pelo shell quando um nome de referência é utilizado sem aspas (por engano) e também para evitar as ambiguidades em certas expressões dos nomes das referências (consulte linkgit:gitrevisions[7]) :"

#. type: Plain text
#: en/git-check-ref-format.txt:69
#, priority:100
msgid "A double-dot `..` is often used as in `ref1..ref2`, and in some contexts this notation means `^ref1 ref2` (i.e. not in `ref1` and in `ref2`)."
msgstr "Um ponto duplo `..` é freqüentemente utilizado como em` ref1..ref2` e, em alguns contextos, essa notação significa `^ref1 ref2` (isto é, não em` ref1` e em `ref2`)."

#. type: Plain text
#: en/git-check-ref-format.txt:72
#, priority:100
msgid "A tilde `~` and caret `^` are used to introduce the postfix 'nth parent' and 'peel onion' operation."
msgstr "Um til `~` e um caractere circunflexo `^` são utilizados para introduzir a operação do postfix 'nth parent' e 'peel onion'."

#. type: Plain text
#: en/git-check-ref-format.txt:77
#, priority:100
msgid "A colon `:` is used as in `srcref:dstref` to mean \"use srcref\\'s value and store it in dstref\" in fetch and push operations.  It may also be used to select a specific object such as with 'git cat-file': \"git cat-file blob v1.3.3:refs.c\"."
msgstr "Os dois pontos `:` são usados no `srcref:dstref` no sentido de \"use o valor do srcref\\ e armazene-o no dstref\" nas operações \"fetch\" e \"push\".  Também para ser usado para selecionar um objeto em específico como com o comando `git cat-file`: \"git cat-file blob v1.3.3:refs.c\"."

#. type: Plain text
#: en/git-check-ref-format.txt:79
#, priority:100
msgid "at-open-brace `@{` is used as a notation to access a reflog entry."
msgstr "at-open-brace `@{` é utilizado como uma notação para acessar uma entrada de reflog."

#. type: Plain text
#: en/git-check-ref-format.txt:98
#, priority:100
msgid "With the `--branch` option, the command takes a name and checks if it can be used as a valid branch name (e.g. when creating a new branch). But be cautious when using the previous checkout syntax that may refer to a detached HEAD state.  The rule `git check-ref-format --branch $name` implements may be stricter than what `git check-ref-format refs/heads/$name` says (e.g. a dash may appear at the beginning of a ref component, but it is explicitly forbidden at the beginning of a branch name).  When run with `--branch` option in a repository, the input is first expanded for the ``previous checkout syntax'' `@{-n}`.  For example, `@{-1}` is a way to refer the last thing that was checked out using \"git switch\" or \"git checkout\" operation.  This option should be used by porcelains to accept this syntax anywhere a branch name is expected, so they can act as if you typed the branch name. As an exception note that, the ``previous checkout operation'' might result in a commit object name when the N-th last thing checked out was not a branch."
msgstr "Com a opção `--branch`, o comando pega um nome e verifica se ele pode ser utilizado como o nome de um ramo válido (por exemplo, ao criar uma nova ramificação). Mas tenha cuidado ao usar a sintaxe de checkout anterior que pode se referir a um estado `HEAD` desanexado.  A regra que o `git check-ref-format --branch $name` implementa pode ser mais rigorosa do que `git check-ref-format refs/heads/$name` diz (por exemplo, um traço pode aparecer no início de um componente \"ref\" porém é explicitamente proibido no início do nome de um ramo).  Quando executada com a opção `--branch` em um repositório a entrada é expandida primeiro para ``previous checkout syntax'' `@{-n}`.  Por exemplo, `@{-1}` é uma maneira de consultar a última coisa que foi retirada utilizando a operação \"git switch\" ou \"git checkout\".  Essa opção deve ser utilizada pelas porcelanas para aceitar essa sintaxe em qualquer lugar em que um nome do ramo seja esperado para que eles possam agir como se você digitasse o nome do ramo. Como uma exceção observe que a ``operação de checkout anterior\" pode resultar em um nome do objeto de commit quando a enésima última coisa verificada não for um ramo."

#. type: Labeled list
#: en/git-check-ref-format.txt:101
#, ignore-same, no-wrap, priority:100
msgid "--[no-]allow-onelevel"
msgstr "--[no-]allow-onelevel"

#. type: Plain text
#: en/git-check-ref-format.txt:105
#, priority:100
msgid "Controls whether one-level refnames are accepted (i.e., refnames that do not contain multiple `/`-separated components).  The default is `--no-allow-onelevel`."
msgstr "Controla se os refnames com um nível serão aceitos (isto é, refnames que não tenham vários componentes separados por `/`).  A predefinição é `--no-allow-onelevel`."

#. type: Labeled list
#: en/git-check-ref-format.txt:106
#, ignore-same, no-wrap, priority:100
msgid "--refspec-pattern"
msgstr "--refspec-pattern"

#. type: Plain text
#: en/git-check-ref-format.txt:112
#, priority:100
msgid "Interpret <refname> as a reference name pattern for a refspec (as used with remote repositories).  If this option is enabled, <refname> is allowed to contain a single `*` in the refspec (e.g., `foo/bar*/baz` or `foo/bar*baz/` but not `foo/bar*/baz*`)."
msgstr "Interprete o <refname> como um padrão do nome para um refspec (conforme é utilizado com os repositórios remotos).  Caso esta opção esteja ativada, o <refname> poderá conter um único `*` no refspec (por exemplo, `foo/bar*/baz` ou `foo/bar*baz/` mas não `foo/bar*/baz*`)."

#. type: Labeled list
#: en/git-check-ref-format.txt:113
#, ignore-same, no-wrap, priority:100
msgid "--normalize"
msgstr "--normalize"

#. type: Plain text
#: en/git-check-ref-format.txt:120
#, priority:100
msgid "Normalize 'refname' by removing any leading slash (`/`)  characters and collapsing runs of adjacent slashes between name components into a single slash.  If the normalized refname is valid then print it to standard output and exit with a status of 0, otherwise exit with a non-zero status.  (`--print` is a deprecated way to spell `--normalize`.)"
msgstr "Normalize 'refname' removendo quaisquer caracteres iniciais com barra (`/`) e reduzindo as execuções das barras adjacentes entre os nomes dos componentes numa única barra.  Caso o 'refname' normalizado seja válido, imprima-o na saída padrão e encerre com a condição 0, caso contrário encerre com uma condição diferente de zero.  (a opção `--print` é uma maneira obsoleta de soletrar `--normalize`.)"

#. type: Plain text
#: en/git-check-ref-format.txt:126
#, priority:100
msgid "Print the name of the previous thing checked out:"
msgstr "Imprima o nome da coisa anterior registrada:"

#. type: delimited block -
#: en/git-check-ref-format.txt:129
#, no-wrap, priority:100
msgid "$ git check-ref-format --branch @{-1}\n"
msgstr "$ git verifique-o-formato-ref --branch @{-1}\n"

#. type: Plain text
#: en/git-check-ref-format.txt:132
#, priority:100
msgid "Determine the reference name to use for a new branch:"
msgstr "Determine o nome de referência a ser utilizado para uma nova ramificação:"

#. type: delimited block -
#: en/git-check-ref-format.txt:136
#, no-wrap, priority:100
msgid ""
"$ ref=$(git check-ref-format --normalize \"refs/heads/$newbranch\")||\n"
"{ echo \"we do not like '$newbranch' as a branch name.\" >&2 ; exit 1 ; }\n"
msgstr ""
"$ ref=$(git check-ref-format --normalize \"refs/heads/$newbranch\")||\n"
"{ echo \"nós não gostamos do '$newbranch' como um nome do ramo.\" >&2 ; exit 1 ; }\n"

#. type: Title =
#: en/git-cherry-pick.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-cherry-pick(1)"
msgstr "git-cherry-pick(1)"

#. type: Plain text
#: en/git-cherry-pick.txt:7
#, priority:100
msgid "git-cherry-pick - Apply the changes introduced by some existing commits"
msgstr "git-cherry-pick - Aplique as alterações introduzidas por alguns commits existentes"

#. type: Plain text
#: en/git-cherry-pick.txt:14
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git cherry-pick' [--edit] [-n] [-m <parent-number>] [-s] [-x] [--ff]\n"
"\t\t  [-S[<keyid>]] <commit>...\n"
"'git cherry-pick' (--continue | --skip | --abort | --quit)\n"
msgstr ""
"'git cherry-pick' [--edit] [-n] [-m <parent-number>] [-s] [-x] [--ff]\n"
"\t\t  [-S[<keyid>]] <commit>...\n"
"'git cherry-pick' (--continue | --skip | --abort | --quit)\n"

#. type: Plain text
#: en/git-cherry-pick.txt:21
#, priority:100
msgid "Given one or more existing commits, apply the change each one introduces, recording a new commit for each.  This requires your working tree to be clean (no modifications from the HEAD commit)."
msgstr "Dado um ou mais commits existentes, aplique a alteração que cada um introduz, registrando um novo commit para cada um.  Isso requer que a sua árvore de trabalho esteja limpa (nenhuma alteração a partir do commit `HEAD`)."

#. type: Plain text
#: en/git-cherry-pick.txt:24
#, priority:100
msgid "When it is not obvious how to apply a change, the following happens:"
msgstr "Quando não é óbvio como aplicar uma alteração, acontece o seguinte:"

#. type: Plain text
#: en/git-cherry-pick.txt:27
#, priority:100
msgid "The current branch and `HEAD` pointer stay at the last commit successfully made."
msgstr "O ramo atual e o ponteiro `HEAD` permanecem no último commit realizado com sucesso."

#. type: Plain text
#: en/git-cherry-pick.txt:29
#, priority:100
msgid "The `CHERRY_PICK_HEAD` ref is set to point at the commit that introduced the change that is difficult to apply."
msgstr "A referência `CHERRY_PICK_HEAD` é configurada para apontar para o commit que introduziu a mudança que é difícil de aplicar."

#. type: Plain text
#: en/git-cherry-pick.txt:31
#, priority:100
msgid "Paths in which the change applied cleanly are updated both in the index file and in your working tree."
msgstr "Caminhos nos quais a mudança aplicada corretamente são atualizados no arquivo de índice e na sua árvore de trabalho."

#. type: Plain text
#: en/git-cherry-pick.txt:36
#, priority:100
msgid "For conflicting paths, the index file records up to three versions, as described in the \"TRUE MERGE\" section of linkgit:git-merge[1].  The working tree files will include a description of the conflict bracketed by the usual conflict markers `<<<<<<<` and `>>>>>>>`."
msgstr "Para os caminhos conflitantes, o arquivo do índice registra até três versões, conforme descrito na seção \"MESCLAGEM REAL\" do linkgit:git-merge[1].  Os arquivos da árvore de trabalho incluirão uma descrição do conflito entre os marcadores de conflito habituais `<<<<<<<` e `>>>>>>>`."

#. type: Plain text
#: en/git-cherry-pick.txt:37
#, priority:100
msgid "No other modifications are made."
msgstr "Nenhuma outra modificação é feita."

#. type: Plain text
#: en/git-cherry-pick.txt:40
#, priority:100
msgid "See linkgit:git-merge[1] for some hints on resolving such conflicts."
msgstr "Veja linkgit:git-merge[1] para algumas dicas sobre como resolver tais conflitos."

#. type: Labeled list
#: en/git-cherry-pick.txt:43 en/git-merge.txt:126 en/git-revert.txt:36 en/git-verify-commit.txt:27
#, ignore-ellipsis, no-wrap, priority:240
msgid "<commit>..."
msgstr "<commit>..."

#. type: Plain text
#: en/git-cherry-pick.txt:52
#, ignore-ellipsis, priority:100
msgid "Commits to cherry-pick.  For a more complete list of ways to spell commits, see linkgit:gitrevisions[7].  Sets of commits can be passed but no traversal is done by default, as if the `--no-walk` option was specified, see linkgit:git-rev-list[1]. Note that specifying a range will feed all <commit>... arguments to a single revision walk (see a later example that uses 'maint master..next')."
msgstr "Faz o commit na escolha seletiva.  Para conhecer uma lista completa das diferentes maneiras de soletrar os nomes dos commits, consulte o comando linkgit:gitrevisions[7]  O conjunto dos commits também podem ser encaminhados porém é predefinido que nenhuma passagem seja feita, consulte o comando linkgit:git-rev-list[1] assim como a sua opção `--no-walk`. Observe que ao definir um argumento para o intervalo, este irá alimentar todos os <commit>... percorrendo apenas uma revisão (mais adiante, consulte um exemplo que utiliza 'maint master..next')."

#. type: Plain text
#: en/git-cherry-pick.txt:57
#, priority:100
msgid "With this option, 'git cherry-pick' will let you edit the commit message prior to committing."
msgstr "Com esta opção, o 'git cherry-pick' permitirá que você edite a mensagem de commit antes de confirmar."

#. type: Labeled list
#: en/git-cherry-pick.txt:58 en/git-commit.txt:232 en/git-revert.txt:70 en/git-tag.txt:183 en/merge-options.txt:38
#, no-wrap, priority:280
msgid "--cleanup=<mode>"
msgstr "--cleanup=<modo>"

#. type: Plain text
#: en/git-cherry-pick.txt:64 en/git-revert.txt:76
#, priority:100
msgid "This option determines how the commit message will be cleaned up before being passed on to the commit machinery. See linkgit:git-commit[1] for more details. In particular, if the '<mode>' is given a value of `scissors`, scissors will be appended to `MERGE_MSG` before being passed on in the case of a conflict."
msgstr "Essa opção define como a mensagem de commit sera limpa antes de ser encaminhada para o maquinário de commit. Para mais detalhes consulte linkgit:git-commit[1]. Em particular, caso o valor '<mode>' tenha um valor de tesoura `scissors`, a tesoura será anexada a `MERGE_MSG` antes de ser repassada no caso de um conflito."

#. type: Labeled list
#: en/git-cherry-pick.txt:65 en/git-clean.txt:63
#, ignore-same, no-wrap, priority:100
msgid "-x"
msgstr "-x"

#. type: Plain text
#: en/git-cherry-pick.txt:78
#, ignore-ellipsis, priority:100
msgid "When recording the commit, append a line that says \"(cherry picked from commit ...)\" to the original commit message in order to indicate which commit this change was cherry-picked from.  This is done only for cherry picks without conflicts.  Do not use this option if you are cherry-picking from your private branch because the information is useless to the recipient.  If on the other hand you are cherry-picking between two publicly visible branches (e.g. backporting a fix to a maintenance branch for an older release from a development branch), adding this information can be useful."
msgstr "Ao gravar o commit, acrescente uma linha que diz \"(cherry picked from commit ...)\" na mensagem do commit original, indicando de onde a escolha seletiva da alteração deste commit foi feito.  Isto é feito apenas para as escolhas seletivas sem conflitos.  Não use esta opção caso esteja fazendo uma escolha seletiva do seu ramo privado porque a informação é inútil para o destinatário.  No entanto, caso esteja fazendo uma escolha seletiva entre dois ramos publicamente visíveis (por exemplo, fazendo a atualização retroativa de uma correção para um ramo de manutenção para uma versão de lançamento anterior de um ramo de desenvolvimento), pode ser útil adicionar esta informação."

#. type: Plain text
#: en/git-cherry-pick.txt:83
#, priority:100
msgid "It used to be that the command defaulted to do `-x` described above, and `-r` was to disable it.  Now the default is not to do `-x` so this option is a no-op."
msgstr "Costumava ser que o comando predefinia para fazer com a opção `-x` descrito acima, e a opção `-r` era para desativá-lo.  Agora a predefinição é não utilizar a opção `-x`, então esta opção não é operacional."

#. type: Labeled list
#: en/git-cherry-pick.txt:84
#, no-wrap, priority:100
msgid "-m <parent-number>"
msgstr "-m <parent-number>"

#. type: Labeled list
#: en/git-cherry-pick.txt:85
#, no-wrap, priority:100
msgid "--mainline <parent-number>"
msgstr "--mainline <número-relacionado>"

#. type: Plain text
#: en/git-cherry-pick.txt:91
#, priority:100
msgid "Usually you cannot cherry-pick a merge because you do not know which side of the merge should be considered the mainline.  This option specifies the parent number (starting from 1) of the mainline and allows cherry-pick to replay the change relative to the specified parent."
msgstr "Geralmente você não pode fazer uma escolha seletiva de uma mesclagem porque você não sabe qual o lado da mesclagem principal deve ser considerada.  Esta opção determina o número da origem (a partir de 1) do principal e permite que a escolha seletiva repita a alteração em relação a origem informada."

#. type: Labeled list
#: en/git-cherry-pick.txt:93 en/git-revert.txt:78 en/merge-options.txt:2
#, ignore-same, no-wrap, priority:240
msgid "--no-commit"
msgstr "--no-commit"

#. type: Plain text
#: en/git-cherry-pick.txt:101
#, priority:100
msgid "Usually the command automatically creates a sequence of commits.  This flag applies the changes necessary to cherry-pick each named commit to your working tree and the index, without making any commit.  In addition, when this option is used, your index does not have to match the HEAD commit.  The cherry-pick is done against the beginning state of your index."
msgstr "Normalmente, o comando cria automaticamente uma sequência de commits.  Esta opção aplica as alterações necessárias para selecionar cada commit informada na sua árvore de trabalho e o índice, sem fazer qualquer commit.  Além disso, quando esta opção é utilizada, o seu índice não precisa coincidir ao commit do `HEAD`. A escolha seletiva é feita contra a condição inicial do seu índice."

#. type: Plain text
#: en/git-cherry-pick.txt:104
#, priority:100
msgid "This is useful when cherry-picking more than one commits' effect to your index in a row."
msgstr "Isso é útil quando você seleciona mais de um efeito de commit para seu índice numa linha."

#. type: Plain text
#: en/git-cherry-pick.txt:109 en/git-revert.txt:104
#, priority:100
msgid "Add a `Signed-off-by` trailer at the end of the commit message.  See the signoff option in linkgit:git-commit[1] for more information."
msgstr "Adicione um `Assinado por` a linha de assinatura no final da mensagem do commit.  Para mais informações, consulte a opção 'signoff' em linkgit:git-commit[1]."

#. type: Labeled list
#: en/git-cherry-pick.txt:119 en/merge-options.txt:46 en/merge-options.txt:61
#, ignore-same, no-wrap, priority:240
msgid "--ff"
msgstr "--ff"

#. type: Plain text
#: en/git-cherry-pick.txt:123
#, priority:100
msgid "If the current HEAD is the same as the parent of the cherry-pick'ed commit, then a fast forward to this commit will be performed."
msgstr "Se o atual HEAD é o mesmo que o pai do commit cherry-pick'ed, então um avanço rápido para este commit será executado."

#. type: Plain text
#: en/git-cherry-pick.txt:136
#, priority:100
msgid "By default, cherry-picking an empty commit will fail, indicating that an explicit invocation of `git commit --allow-empty` is required. This option overrides that behavior, allowing empty commits to be preserved automatically in a cherry-pick. Note that when \"--ff\" is in effect, empty commits that meet the \"fast-forward\" requirement will be kept even without this option.  Note also, that use of this option only keeps commits that were initially empty (i.e. the commit recorded the same tree as its parent).  Commits which are made empty due to a previous commit are dropped.  To force the inclusion of those commits use `--keep-redundant-commits`."
msgstr "É predefinido que a escolha seletiva de um commit vazio falhará, indicando que é necessário uma chamada explícita do comando `git commit --allow-empty`. Esta opção substitui este comportamento, permitindo que os commits vazios sejam preservados automaticamente numa escolha seletiva. Observe que quando \"--ff\" estiver em vigor, os commits vazios que atendam ao requisito de \"avanço rápido\" serão mantidos mesmo sem esta opção.  Observe também que o uso desta opção mantém apenas os commits inicialmente estão vazios (ou seja, o commit registrou a mesma árvore que o seu pai).  Os commits que são tornados vazios devido a um commit anterior são descartados.  Para impor a inclusão destes commits, utilize a opção `--keke-redundant-commits`."

#. type: Plain text
#: en/git-cherry-pick.txt:137 en/git-commit.txt:226 en/git-rebase.txt:327 en/git-rebase.txt:636
#, ignore-same, no-wrap, priority:280
msgid "--allow-empty-message"
msgstr "--allow-empty-message"

#. type: Plain text
#: en/git-cherry-pick.txt:141
#, priority:100
msgid "By default, cherry-picking a commit with an empty message will fail.  This option overrides that behavior, allowing commits with empty messages to be cherry picked."
msgstr "É predefinido que a escolha seletiva irá falhar quando houver um commit com uma mensagem sem nenhum conteúdo.  Esta opção substitui este comportamento, permitindo que os commits com mensagens sem nenhum conteúdo possam ser usados."

#. type: Labeled list
#: en/git-cherry-pick.txt:142
#, ignore-same, no-wrap, priority:100
msgid "--keep-redundant-commits"
msgstr "--keep-redundant-commits"

#. type: Plain text
#: en/git-cherry-pick.txt:148
#, priority:100
msgid "If a commit being cherry picked duplicates a commit already in the current history, it will become empty.  By default these redundant commits cause `cherry-pick` to stop so the user can examine the commit. This option overrides that behavior and creates an empty commit object.  Implies `--allow-empty`."
msgstr "Caso um commit que esteja sendo escolhido seletivamente duplique um commit já no histórico atual, ele ficará vazio.  É predefinido que estes commits redundantes façam com que a escolha seletiva `cherry-pick` pare para que o usuário possa examinar o commit. Esta opção substitui esse comportamento e cria um objeto commit vazio.  implica no uso da opção `--allow-empty`."

#. type: Labeled list
#: en/git-cherry-pick.txt:149 en/git-notes.txt:184 en/git-rebase.txt:359 en/git-revert.txt:105 en/git-svn.txt:678 en/merge-options.txt:144
#, no-wrap, priority:280
msgid "--strategy=<strategy>"
msgstr "--strategy=<estratégia>"

#. type: Plain text
#: en/git-cherry-pick.txt:153 en/git-revert.txt:109
#, priority:100
msgid "Use the given merge strategy.  Should only be used once.  See the MERGE STRATEGIES section in linkgit:git-merge[1] for details."
msgstr "Use a estratégia de mesclagem fornecida. Deve ser usado apenas uma vez.  Veja a seção MERGE STRATEGIES em linkgit:git-merge[1] para detalhes."

#. type: Labeled list
#: en/git-cherry-pick.txt:154 en/git-revert.txt:110
#, no-wrap, priority:100
msgid "-X<option>"
msgstr "-X<opção>"

#. type: Labeled list
#: en/git-cherry-pick.txt:155 en/git-revert.txt:111 en/merge-options.txt:152
#, no-wrap, priority:240
msgid "--strategy-option=<option>"
msgstr "--strategy-option=<opção>"

#. type: Plain text
#: en/git-cherry-pick.txt:158 en/git-revert.txt:114
#, priority:100
msgid "Pass the merge strategy-specific option through to the merge strategy.  See linkgit:git-merge[1] for details."
msgstr "Encaminhe a um opção específica até a estratégia de mesclagem.  Para mais detalhes, consulte linkgit:git-merge[1]."

#. type: Title -
#: en/git-cherry-pick.txt:162 en/git-revert.txt:127
#, no-wrap, priority:100
msgid "SEQUENCER SUBCOMMANDS"
msgstr "SEQUENCER SUBCOMANDOS"

#. type: Labeled list
#: en/git-cherry-pick.txt:167
#, no-wrap, priority:100
msgid "`git cherry-pick master`"
msgstr "`git cherry-pick master`"

#. type: Plain text
#: en/git-cherry-pick.txt:171
#, priority:100
msgid "Apply the change introduced by the commit at the tip of the master branch and create a new commit with this change."
msgstr "Aplique a mudança introduzida pelo commit na ponta do branch master e crie um novo commit com esta mudança."

#. type: Labeled list
#: en/git-cherry-pick.txt:172
#, no-wrap, priority:100
msgid "`git cherry-pick ..master`"
msgstr "`git cherry-pick ..master`"

#. type: Labeled list
#: en/git-cherry-pick.txt:173
#, no-wrap, priority:100
msgid "`git cherry-pick ^HEAD master`"
msgstr "`git cherry-pick ^HEAD master`"

#. type: Plain text
#: en/git-cherry-pick.txt:177
#, priority:100
msgid "Apply the changes introduced by all commits that are ancestors of master but not of HEAD to produce new commits."
msgstr "Aplique as alterações introduzidas por todos os commits que são ancestrais do master, mas não do HEAD para produzir novos commits."

#. type: Labeled list
#: en/git-cherry-pick.txt:178
#, no-wrap, priority:100
msgid "`git cherry-pick maint next ^master`"
msgstr "`git cherry-pick maint próximo ^master`"

#. type: Labeled list
#: en/git-cherry-pick.txt:179
#, no-wrap, priority:100
msgid "`git cherry-pick maint master..next`"
msgstr "`git cherry-pick maint master..próximo`"

#. type: Plain text
#: en/git-cherry-pick.txt:186
#, priority:100
msgid "Apply the changes introduced by all commits that are ancestors of maint or next, but not master or any of its ancestors.  Note that the latter does not mean `maint` and everything between `master` and `next`; specifically, `maint` will not be used if it is included in `master`."
msgstr "Aplique as alterações introduzidas por todos os commits que sejam ancestrais do \"maint\" ou \"next\", porém não do \"master\" ou dos seus ancestrais.  Note que o último não significa que `maint` e tudo entre `master` e `next`; especificamente, `maint` não será usado caso esteja incluso no `master`."

#. type: Labeled list
#: en/git-cherry-pick.txt:187
#, no-wrap, priority:100
msgid "`git cherry-pick master~4 master~2`"
msgstr "`git cherry-pick master~4 master~2`"

#. type: Plain text
#: en/git-cherry-pick.txt:192
#, priority:100
msgid "Apply the changes introduced by the fifth and third last commits pointed to by master and create 2 new commits with these changes."
msgstr "Aplique as alterações introduzidas pelo quinto e terceiro últimos commits apontados pelo master e crie 2 novos commits com essas mudanças."

#. type: Labeled list
#: en/git-cherry-pick.txt:193
#, no-wrap, priority:100
msgid "`git cherry-pick -n master~1 next`"
msgstr "`git cherry-pick -n master~1 next`"

#. type: Plain text
#: en/git-cherry-pick.txt:199
#, priority:100
msgid "Apply to the working tree and the index the changes introduced by the second last commit pointed to by master and by the last commit pointed to by next, but do not create any commit with these changes."
msgstr "Aplique as alterações na árvore de trabalho e no índice que foram introduzidos pelo segundo último commit apontada pelo \"master\" e pelo último commit apontada pelo próximo, porém não crie nenhum commit com estas alterações."

#. type: Labeled list
#: en/git-cherry-pick.txt:200
#, no-wrap, priority:100
msgid "`git cherry-pick --ff ..next`"
msgstr "`git cherry-pick --ff ..next`"

#. type: Plain text
#: en/git-cherry-pick.txt:207
#, priority:100
msgid "If history is linear and HEAD is an ancestor of next, update the working tree and advance the HEAD pointer to match next.  Otherwise, apply the changes introduced by those commits that are in next but not HEAD to the current branch, creating a new commit for each new change."
msgstr "Caso o histórico seja linear e `HEAD` seja um ancestral do próximo, atualize a árvore de trabalho e avance o ponteiro `HEAD` para que coincida com o próximo.  Caso contrário, aplique as alterações introduzidas pelos commits que estão na próxima, mas não o `HEAD`para o ramo atual, criando um novo commit para cada nova alteração."

#. type: Labeled list
#: en/git-cherry-pick.txt:208
#, no-wrap, priority:100
msgid "`git rev-list --reverse master -- README | git cherry-pick -n --stdin`"
msgstr "`git rev-list --reverse master -- README | git cherry-pick -n --stdin`"

#. type: Plain text
#: en/git-cherry-pick.txt:214
#, priority:100
msgid "Apply the changes introduced by all commits on the master branch that touched README to the working tree and index, so the result can be inspected and made into a single new commit if suitable."
msgstr "Aplique as alterações introduzidas por todas as confirmações no ramo principal que tocaram no README para a árvore de trabalho e o índice, para que o resultado possa ser inspecionado e transformado numa única nova confirmação, se adequado."

#. type: Plain text
#: en/git-cherry-pick.txt:218
#, priority:100
msgid "The following sequence attempts to backport a patch, bails out because the code the patch applies to has changed too much, and then tries again, this time exercising more care about matching up context lines."
msgstr "A seqüência a seguir tenta retroceder um patch, suspender porque o código ao qual o patch se aplica mudou muito e, em seguida, tenta novamente, desta vez exercendo mais cuidado com as linhas de contexto correspondentes."

#. type: delimited block -
#: en/git-cherry-pick.txt:224
#, no-wrap, priority:100
msgid ""
"$ git cherry-pick topic^             <1>\n"
"$ git diff                           <2>\n"
"$ git reset --merge ORIG_HEAD        <3>\n"
"$ git cherry-pick -Xpatience topic^  <4>\n"
msgstr ""
"$ git cherry-pick topic^             <1>\n"
"$ git diff                           <2>\n"
"$ git reset --merge ORIG_HEAD        <3>\n"
"$ git cherry-pick -Xpatience topic^  <4>\n"

#. type: Plain text
#: en/git-cherry-pick.txt:229
#, priority:100
msgid "apply the change that would be shown by `git show topic^`.  In this example, the patch does not apply cleanly, so information about the conflict is written to the index and working tree and no new commit results."
msgstr "aplique a alteração que seria exibido através do comando `git show topic^`.  Neste exemplo, o patch não se aplica de maneira limpa; portanto, as informações sobre os conflitos são gravadas no índice e na árvore de trabalho, sem nenhum resultado do novo commit."

#. type: Plain text
#: en/git-cherry-pick.txt:230
#, priority:100
msgid "summarize changes to be reconciled"
msgstr "resumir as alterações a serem reconciliadas"

#. type: Plain text
#: en/git-cherry-pick.txt:233
#, priority:100
msgid "cancel the cherry-pick.  In other words, return to the pre-cherry-pick state, preserving any local modifications you had in the working tree."
msgstr "cancela a escolha seletiva.  Em outras palavras, retorne a condição de escolha seletiva anterior, preservando as alterações locais que você teve na árvore de trabalho."

#. type: Plain text
#: en/git-cherry-pick.txt:236
#, priority:100
msgid "try to apply the change introduced by `topic^` again, spending extra time to avoid mistakes based on incorrectly matching context lines."
msgstr "tente aplicar a mudança introduzida por `topic^` novamente, gastando tempo extra para evitar erros baseados em linhas de contexto correspondentes incorretas."

#. type: Title =
#: en/git-cherry.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-cherry(1)"
msgstr "git-cherry(1)"

#. type: Plain text
#: en/git-cherry.txt:7
#, priority:100
msgid "git-cherry - Find commits yet to be applied to upstream"
msgstr "git-cherry - Encontre os commits que ainda serão aplicados na upstream"

#. type: Plain text
#: en/git-cherry.txt:12
#, no-wrap, priority:100
msgid "'git cherry' [-v] [<upstream> [<head> [<limit>]]]\n"
msgstr "'git cherry' [-v] [<upstream> [<head> [<limite>]]]\n"

#. type: Plain text
#: en/git-cherry.txt:17
#, priority:100
msgid "Determine whether there are commits in `<head>..<upstream>` that are equivalent to those in the range `<limit>..<head>`."
msgstr "Determine se há commits em `<head>..<upstream>` que são equivalentes àqueles no intervalo `<limite>..<head>`."

#. type: Plain text
#: en/git-cherry.txt:22
#, priority:100
msgid "The equivalence test is based on the diff, after removing whitespace and line numbers.  git-cherry therefore detects when commits have been \"copied\" by means of linkgit:git-cherry-pick[1], linkgit:git-am[1] or linkgit:git-rebase[1]."
msgstr "O teste de equivalência tem como base no diff, após remover os espaços e os números da linha.  O comando 'git-cherry' portanto, detecta quando os commits foram \"copiados\" por meio do linkgit:git-cherry-pick[1], linkgit:git-am[1] ou linkgit:git-rebase[1]."

#. type: Plain text
#: en/git-cherry.txt:26
#, priority:100
msgid "Outputs the SHA1 of every commit in `<limit>..<head>`, prefixed with `-` for commits that have an equivalent in <upstream>, and `+` for commits that do not."
msgstr "Gera o SHA1 de cada commit em `<limite>..<head>`, prefixado com `-` para os commits que possuam um equivalente no `<upstream>` e `+` para os commits que não tiverem."

#. type: Plain text
#: en/git-cherry.txt:31
#, priority:100
msgid "Show the commit subjects next to the SHA1s."
msgstr "Exiba os assuntos dos commits ao lado dos SHA1."

#. type: Labeled list
#: en/git-cherry.txt:32 en/git-rebase.txt:235
#, no-wrap, priority:100
msgid "<upstream>"
msgstr "<upstream>"

#. type: Plain text
#: en/git-cherry.txt:35
#, priority:100
msgid "Upstream branch to search for equivalent commits.  Defaults to the upstream branch of HEAD."
msgstr "Ramo \"upstream\" para procurar os commits equivalentes.  A predefinição retorna para o ramo \"upstream\" do `HEAD`."

#. type: Labeled list
#: en/git-cherry.txt:36 en/git.txt:435
#, no-wrap, priority:100
msgid "<head>"
msgstr "<head>"

#. type: Plain text
#: en/git-cherry.txt:38
#, priority:100
msgid "Working branch; defaults to HEAD."
msgstr "Ramo de trabalho; A predefinição retorna para `HEAD`."

#. type: Plain text
#: en/git-cherry.txt:41
#, priority:100
msgid "Do not report commits up to (and including) limit."
msgstr "Não denuncie commits até (e incluindo) limite."

#. type: Title ~
#: en/git-cherry.txt:46
#, no-wrap, priority:100
msgid "Patch workflows"
msgstr "Fluxos de trabalho de patch"

#. type: Plain text
#: en/git-cherry.txt:52
#, priority:100
msgid "git-cherry is frequently used in patch-based workflows (see linkgit:gitworkflows[7]) to determine if a series of patches has been applied by the upstream maintainer.  In such a workflow you might create and send a topic branch like this:"
msgstr "A escolha seletiva é frequentemente utilizado nos fluxos de trabalho com base nos patches (consulte linkgit:gitworkflows[7]) para determinar se uma série de patches foi aplicada pelo mantenedor \"upstream\".  Neste fluxo de trabalho, você pode criar e enviar o tópico de um ramo como este:"

#. type: delimited block -
#: en/git-cherry.txt:58
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"$ git checkout -b topic origin/master\n"
"# work and create some commits\n"
"$ git format-patch origin/master\n"
"$ git send-email ... 00*\n"
msgstr ""
"$ git checkout -b topic origem/master\n"
"# trabalhe e crie alguns commits\n"
"$ git formato-patch origem/master\n"
"$ git send-email ... 00*\n"

#. type: Plain text
#: en/git-cherry.txt:62
#, priority:100
msgid "Later, you can see whether your changes have been applied by saying (still on `topic`):"
msgstr "Mais tarde, você pode ver se suas alterações foram aplicadas dizendo (ainda em `topic`):"

#. type: delimited block -
#: en/git-cherry.txt:66
#, no-wrap, priority:100
msgid ""
"$ git fetch  # update your notion of origin/master\n"
"$ git cherry -v\n"
msgstr ""
"$ git fetch  # atualize sua noção de origem/master\n"
"$ git cherry -v\n"

#. type: Title ~
#: en/git-cherry.txt:69
#, no-wrap, priority:100
msgid "Concrete example"
msgstr "Exemplo concreto"

#. type: Plain text
#: en/git-cherry.txt:73
#, priority:100
msgid "In a situation where topic consisted of three commits, and the maintainer applied two of them, the situation might look like:"
msgstr "Em uma situação em que o tópico consistia em três commits e o mantenedor aplicava dois deles, a situação poderia parecer:"

#. type: delimited block -
#: en/git-cherry.txt:86
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"$ git log --graph --oneline --decorate --boundary origin/master...topic\n"
"* 7654321 (origin/master) upstream tip commit\n"
"[... snip some other commits ...]\n"
"* cccc111 cherry-pick of C\n"
"* aaaa111 cherry-pick of A\n"
"[... snip a lot more that has happened ...]\n"
"| * cccc000 (topic) commit C\n"
"| * bbbb000 commit B\n"
"| * aaaa000 commit A\n"
"|/\n"
"o 1234567 branch point\n"
msgstr ""
"$ git log --graph --oneline --decorate --boundary origin/master...topic\n"
"* 7654321 (origin/master) upstream tip commit\n"
"[... ignora alguns outros commits ...]\n"
"* cccc111 cherry-pick of C\n"
"* aaaa111 cherry-pick of A\n"
"[... ignora muito mais do que aconteceu ...]\n"
"| * cccc000 (topic) commit C\n"
"| * bbbb000 commit B\n"
"| * aaaa000 commit A\n"
"|/\n"
"o 1234567 branch point\n"

#. type: Plain text
#: en/git-cherry.txt:90
#, priority:100
msgid "In such cases, git-cherry shows a concise summary of what has yet to be applied:"
msgstr "Nesses casos, o git-cherry exibe um resumo conciso do que ainda precisa ser aplicado:"

#. type: delimited block -
#: en/git-cherry.txt:96
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"$ git cherry origin/master topic\n"
"- cccc000... commit C\n"
"+ bbbb000... commit B\n"
"- aaaa000... commit A\n"
msgstr ""
"$ git cherry origin/master topic\n"
"- cccc000... commit C\n"
"+ bbbb000... commit B\n"
"- aaaa000... commit A\n"

#. type: Plain text
#: en/git-cherry.txt:102
#, priority:100
msgid "Here, we see that the commits A and C (marked with `-`) can be dropped from your `topic` branch when you rebase it on top of `origin/master`, while the commit B (marked with `+`) still needs to be kept so that it will be sent to be applied to `origin/master`."
msgstr "Aqui, vemos que os commits A e C (marcados com `-`) podem ser removidos de sua ramificação` topic` quando você rebase em cima de `origidm/master`, enquanto o commit B (marcado com `+`) ainda precisa ser mantido para que seja enviado para ser aplicado a `origem/ master`."

#. type: Title ~
#: en/git-cherry.txt:105
#, no-wrap, priority:100
msgid "Using a limit"
msgstr "Utilizando um limite"

#. type: Plain text
#: en/git-cherry.txt:110
#, priority:100
msgid "The optional <limit> is useful in cases where your topic is based on other work that is not in upstream.  Expanding on the previous example, this might look like:"
msgstr "O <limite> opcional é útil nos casos onde o seu tópico é tem como base em outro trabalho que não está na \"upstream\".  Expandindo o exemplo anterior, isso pode se parecer com:"

#. type: delimited block -
#: en/git-cherry.txt:126
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"$ git log --graph --oneline --decorate --boundary origin/master...topic\n"
"* 7654321 (origin/master) upstream tip commit\n"
"[... snip some other commits ...]\n"
"* cccc111 cherry-pick of C\n"
"* aaaa111 cherry-pick of A\n"
"[... snip a lot more that has happened ...]\n"
"| * cccc000 (topic) commit C\n"
"| * bbbb000 commit B\n"
"| * aaaa000 commit A\n"
"| * 0000fff (base) unpublished stuff F\n"
"[... snip ...]\n"
"| * 0000aaa unpublished stuff A\n"
"|/\n"
"o 1234567 merge-base between upstream and topic\n"
msgstr ""
"$ git log --graph --oneline --decorate --boundary origin/master...topic\n"
"* 7654321 (origin/master) upstream tip commit\n"
"[... ignora alguns outros commits ...]\n"
"* cccc111 cherry-pick of C\n"
"* aaaa111 cherry-pick of A\n"
"[... ignora muito mais do que aconteceu ...]\n"
"| * cccc000 (topic) commit C\n"
"| * bbbb000 commit B\n"
"| * aaaa000 commit A\n"
"| * 0000fff (base) unpublished stuff F\n"
"[... snip ...]\n"
"| * 0000aaa unpublished stuff A\n"
"|/\n"
"o 1234567 merge-base between upstream and topic\n"

#. type: Plain text
#: en/git-cherry.txt:130
#, priority:100
msgid "By specifying `base` as the limit, you can avoid listing commits between `base` and `topic`:"
msgstr "Especificando `base` como limite, você pode evitar listar commits entre` base` e `topic`:"

#. type: delimited block -
#: en/git-cherry.txt:136
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"$ git cherry origin/master topic base\n"
"- cccc000... commit C\n"
"+ bbbb000... commit B\n"
"- aaaa000... commit A\n"
msgstr ""
"$ git cherry origem/master base de tópicos\n"
"- cccc000... commit C\n"
"+ bbbb000... commit B\n"
"- aaaa000... commit A\n"

#. type: Title =
#: en/git-citool.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-citool(1)"
msgstr "git-citool(1)"

#. type: Plain text
#: en/git-citool.txt:7
#, priority:100
msgid "git-citool - Graphical alternative to git-commit"
msgstr "git-citool - Alternativa gráfica para git-commit"

#. type: Plain text
#: en/git-citool.txt:12
#, no-wrap, priority:100
msgid "'git citool'\n"
msgstr "'git citool'\n"

#. type: Plain text
#: en/git-citool.txt:19
#, priority:100
msgid "A Tcl/Tk based graphical interface to review modified files, stage them into the index, enter a commit message and record the new commit onto the current branch.  This interface is an alternative to the less interactive 'git commit' program."
msgstr "Uma interface gráfica com base em Tcl/Tk para revisar os arquivos que foram modificados, colocá-los no índice, inserir uma mensagem no commit e registrar o novo commit no ramo atual.  Essa interface é uma alternativa ao programa menos interativo 'git commit'."

#. type: Plain text
#: en/git-citool.txt:22
#, priority:100
msgid "'git citool' is actually a standard alias for `git gui citool`.  See linkgit:git-gui[1] for more details."
msgstr "O comando 'git citool' é um apelido predefinido para o comando `git gui citool`.  Para mais detalhes, consulte linkgit:git-gui[1]."

#. type: Title =
#: en/git-clean.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-clean(1)"
msgstr "git-clean(1)"

#. type: Plain text
#: en/git-clean.txt:7
#, priority:100
msgid "git-clean - Remove untracked files from the working tree"
msgstr "git-clean - Remove arquivos não rastreados da árvore de trabalho"

#. type: Plain text
#: en/git-clean.txt:12
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git clean' [-d] [-f] [-i] [-n] [-q] [-e <pattern>] [-x | -X] [--] <path>...\n"
msgstr "'git clean' [-d] [-f] [-i] [-n] [-q] [-e <padrão>] [-x | -X] [--] <caminho>...\n"

#. type: Plain text
#: en/git-clean.txt:18
#, priority:100
msgid "Cleans the working tree by recursively removing files that are not under version control, starting from the current directory."
msgstr "Limpa a árvore de trabalho removendo recursivamente arquivos que não estão sob controle de versão, iniciando no diretório atual."

#. type: Plain text
#: en/git-clean.txt:22
#, priority:100
msgid "Normally, only files unknown to Git are removed, but if the `-x` option is specified, ignored files are also removed. This can, for example, be useful to remove all build products."
msgstr "Normalmente, apenas os arquivos desconhecidos pelo Git são removidos, porém caso a opção `-x` seja utilizada, os arquivos ignorados também serão removidos. Isso pode, por exemplo, ser útil para remover todos os produtos da compilação."

#. type: Plain text
#: en/git-clean.txt:25
#, ignore-ellipsis, priority:100
msgid "If any optional `<path>...` arguments are given, only those paths are affected."
msgstr "Se algum argumento opcional `<caminho>...` for dado, somente esses caminhos serão afetados."

#. type: Plain text
#: en/git-clean.txt:35
#, priority:100
msgid "Normally, when no <path> is specified, git clean will not recurse into untracked directories to avoid removing too much.  Specify -d to have it recurse into such directories as well.  If any paths are specified, -d is irrelevant; all untracked files matching the specified paths (with exceptions for nested git directories mentioned under `--force`) will be removed."
msgstr "Normalmente, quando nenhum <caminho> for definido, o comando 'git clean' não retornará para os diretórios que não são  monitorados para evitar a remoção excessiva.  Utilize `-d` para que ele recorra a estes diretórios também.  Caso algum caminho seja utilizado, o '-d' é irrelevante; todos os arquivos coincidentes não monitorados nos caminhos informados (com exceções para os diretórios git aninhados mencionados sob `--force`) serão removidos."

#. type: Plain text
#: en/git-clean.txt:43
#, priority:100
msgid "If the Git configuration variable clean.requireForce is not set to false, 'git clean' will refuse to delete files or directories unless given -f or -i.  Git will refuse to modify untracked nested git repositories (directories with a .git subdirectory)  unless a second -f is given."
msgstr "Se a variável de configuração do Git `clean.requireForce` não estiver definida como 'false', o `git clean` recusará a exclusão de arquivos ou diretórios a menos que seja utilizado a opção `-f` ou `-i`.  O Git se recusará a modificar repositórios git aninhados e sem lastro (diretórios sem um subdiretório .git) a menos que seja dado um segundo -f."

#. type: Plain text
#: en/git-clean.txt:48
#, priority:100
msgid "Show what would be done and clean files interactively. See ``Interactive mode'' for details."
msgstr "Exibe o que seria feito e exclua os arquivos interativamente. Para mais detalhes consulte ``modo interativo''."

#. type: Plain text
#: en/git-clean.txt:52
#, priority:100
msgid "Don't actually remove anything, just show what would be done."
msgstr "Na verdade, não remova nada, apenas demonstre o que seria feito."

#. type: Plain text
#: en/git-clean.txt:57
#, priority:100
msgid "Be quiet, only report errors, but not the files that are successfully removed."
msgstr "Fique quieto, relate somente erros, mas não os arquivos removidos com sucesso."

#. type: Labeled list
#: en/git-clean.txt:58
#, no-wrap, priority:100
msgid "-e <pattern>"
msgstr "-e <padrão>"

#. type: Labeled list
#: en/git-clean.txt:59 en/git-ls-files.txt:92 en/git-name-rev.txt:33
#, no-wrap, priority:100
msgid "--exclude=<pattern>"
msgstr "--exclude=<padrão>"

#. type: Plain text
#: en/git-clean.txt:62
#, priority:100
msgid "Use the given exclude pattern in addition to the standard ignore rules (see linkgit:gitignore[5])."
msgstr "Utilize o padrão de exclusão informado além das regras de exclusão predefinidas (consulte linkgit:gitignore[5])."

#. type: Plain text
#: en/git-clean.txt:70
#, priority:100
msgid "Don't use the standard ignore rules (see linkgit:gitignore[5]), but still use the ignore rules given with `-e` options from the command line.  This allows removing all untracked files, including build products.  This can be used (possibly in conjunction with 'git restore' or 'git reset') to create a pristine working directory to test a clean build."
msgstr "Não utilize as regras de exclusão predefinidas (see linkgit:gitignore[5]), porém continue a usar as regras de exclusão informadas com a opção `-e` na linha de comando.  Isso permite remover todos os arquivos não rastreados, incluindo produtos de compilação.  Isso pode ser utilizado (possivelmente em conjunto com 'git restore' ou 'git reset') para criar um novo diretório de trabalho para testar uma compilação limpa."

#. type: Labeled list
#: en/git-clean.txt:71
#, no-wrap, priority:100
msgid "-X"
msgstr "-X"

#. type: Plain text
#: en/git-clean.txt:74
#, priority:100
msgid "Remove only files ignored by Git.  This may be useful to rebuild everything from scratch, but keep manually created files."
msgstr "Remove apenas os arquivos ignorados pelo Git.  Isto pode ser útil para reconstruir tudo do zero, porém mantém os arquivos que foram criados manualmente."

#. type: Title -
#: en/git-clean.txt:76
#, no-wrap, priority:100
msgid "Interactive mode"
msgstr "Modo interativo"

#. type: Plain text
#: en/git-clean.txt:80
#, priority:100
msgid "When the command enters the interactive mode, it shows the files and directories to be cleaned, and goes into its interactive command loop."
msgstr "Quando o comando entra no modo interativo, ele exibe os arquivos e os diretórios que serão limpos entrando em seu loop de comando interativo."

#. type: delimited block -
#: en/git-clean.txt:91
#, no-wrap, priority:100
msgid ""
"    *** Commands ***\n"
"\t1: clean                2: filter by pattern    3: select by numbers\n"
"\t4: ask each             5: quit                 6: help\n"
"    What now> 1\n"
msgstr ""
"    *** Comandos ***\n"
"\t1: limpa                2: filtra através de um padrão    3: seleciona através dos números\n"
"\t4: pergunte a cada      5: encerra                        6: ajuda\n"
"    Agora o quê> 1\n"

#. type: Plain text
#: en/git-clean.txt:94
#, priority:100
msgid "You also could say `c` or `clean` above as long as the choice is unique."
msgstr "Você também poderia dizer `c` ou` clean` acima, desde que a escolha seja única."

#. type: Plain text
#: en/git-clean.txt:96
#, priority:100
msgid "The main command loop has 6 subcommands."
msgstr "O laço de comando principal tem 6 subcomandos."

#. type: Labeled list
#: en/git-clean.txt:97
#, no-wrap, priority:100
msgid "clean"
msgstr "limpo"

#. type: Plain text
#: en/git-clean.txt:100
#, priority:100
msgid "Start cleaning files and directories, and then quit."
msgstr "Comece limpando arquivos e diretórios e, em seguida, saia."

#. type: Labeled list
#: en/git-clean.txt:101
#, no-wrap, priority:100
msgid "filter by pattern"
msgstr "filtrar por padrão"

#. type: Plain text
#: en/git-clean.txt:109
#, priority:100
msgid "This shows the files and directories to be deleted and issues an \"Input ignore patterns>>\" prompt. You can input space-separated patterns to exclude files and directories from deletion.  E.g. \"*.c *.h\" will excludes files end with \".c\" and \".h\" from deletion. When you are satisfied with the filtered result, press ENTER (empty) back to the main menu."
msgstr "Exibe os arquivos e os diretórios que serão excluídos e emite uma mensagem \"Entre com os padrões que serão ignorados >>\". Você pode inserir os padrões separados por espaço para tirar os arquivos e os diretórios da exclusão.  Como por exemplo, \"*.c *.h\" removerá os arquivos que terminem com \".c\" e \".h\" do processo de exclusão. Quando estiver satisfeito com o resultado filtrado, pressione ENTER (e mais nada) para voltar ao menu principal."

#. type: Labeled list
#: en/git-clean.txt:110
#, no-wrap, priority:100
msgid "select by numbers"
msgstr "seleciona através dos números"

#. type: Plain text
#: en/git-clean.txt:121
#, priority:100
msgid "This shows the files and directories to be deleted and issues an \"Select items to delete>>\" prompt. When the prompt ends with double '>>' like this, you can make more than one selection, concatenated with whitespace or comma.  Also you can say ranges.  E.g. \"2-5 7,9\" to choose 2,3,4,5,7,9 from the list.  If the second number in a range is omitted, all remaining items are selected.  E.g. \"7-\" to choose 7,8,9 from the list.  You can say '*' to choose everything.  Also when you are satisfied with the filtered result, press ENTER (empty) back to the main menu."
msgstr "Exibe os arquivos e os diretórios que serão excluídos e emite um prompt \"Selecione os itens para serem excluídos>>\". Quando o prompt terminar com '>>' duplo, será possível fazer mais de uma seleção concatenada com espaço ou vírgula.  Além disso, você pode utilizar intervalos.  Por exemplo. \"2-5 7,9\" para escolher o 2,3,4,5,7,9 na lista.  Caso o segundo número de um intervalo seja omitido, todos os itens restantes serão selecionados.  Por exemplo. \"7-\" para escolher o 7,8,9 na lista.  Você pode utilizar '*' para escolher tudo.  Além disso, quando estiver satisfeito com o resultado que foi filtrado, pressione ENTER  para retornar ao menu principal."

#. type: Labeled list
#: en/git-clean.txt:122
#, no-wrap, priority:100
msgid "ask each"
msgstr "pergunte a cada"

#. type: Plain text
#: en/git-clean.txt:127
#, priority:100
msgid "This will start to clean, and you must confirm one by one in order to delete items. Please note that this action is not as efficient as the above two actions."
msgstr "Isso inicia a limpeza e você deve confirmar um por um para que os itens possam ser excluídos. Observe que esta ação não é tão eficiente quanto as duas ações acima."

#. type: Labeled list
#: en/git-clean.txt:128
#, no-wrap, priority:100
msgid "quit"
msgstr "sair"

#. type: Plain text
#: en/git-clean.txt:131
#, priority:100
msgid "This lets you quit without do cleaning."
msgstr "Isso permite que você saia sem fazer limpeza."

#. type: Labeled list
#: en/git-clean.txt:132
#, no-wrap, priority:100
msgid "help"
msgstr "ajuda"

#. type: Plain text
#: en/git-clean.txt:135
#, priority:100
msgid "Show brief usage of interactive git-clean."
msgstr "Exiba uma breve descrição de utilização do `git-clean` interativo."

#. type: Title =
#: en/git-clone.txt:2
#, ignore-same, no-wrap, priority:300
msgid "git-clone(1)"
msgstr "git-clone(1)"

#. type: Plain text
#: en/git-clone.txt:7
#, priority:300
msgid "git-clone - Clone a repository into a new directory"
msgstr "git-clone - Clona um repositório num novo diretório"

#. type: Plain text
#: en/git-clone.txt:21
#, no-wrap, priority:300
msgid ""
"'git clone' [--template=<template-directory>]\n"
"\t  [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]\n"
"\t  [-o <name>] [-b <name>] [-u <upload-pack>] [--reference <repository>]\n"
"\t  [--dissociate] [--separate-git-dir <git-dir>]\n"
"\t  [--depth <depth>] [--[no-]single-branch] [--no-tags]\n"
"\t  [--recurse-submodules[=<pathspec>]] [--[no-]shallow-submodules]\n"
"\t  [--[no-]remote-submodules] [--jobs <n>] [--sparse] [--[no-]reject-shallow]\n"
"\t  [--filter=<filter> [--also-filter-submodules]] [--] <repository>\n"
"\t  [<directory>]\n"
msgstr ""
"'git clone' [--template=<diretório-modelo>]\n"
"\t  [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror]\n"
"\t  [-o <nome>] [-b <nome>] [-u <upload-pack>] [--reference <repositório>]\n"
"\t  [--dissociate] [--separate-git-dir <dir-git>]\n"
"\t  [--depth <profundidade>] [--[no-]single-branch] [--no-tags]\n"
"\t  [--recurse-submodules[=<pathspec>]] [--[no-]shallow-submodules]\n"
"\t  [--[no-]remote-submodules] [--jobs <n>] [--sparse] [--[no-]reject-shallow]\n"
"\t  [--filter=<filtro>] [--also-filter-submodules]] [--] <repositório>\n"
"\t  [<diretório>]\n"

#. type: Plain text
#: en/git-clone.txt:30
#, priority:300
msgid "Clones a repository into a newly created directory, creates remote-tracking branches for each branch in the cloned repository (visible using `git branch --remotes`), and creates and checks out an initial branch that is forked from the cloned repository's currently active branch."
msgstr "Clona um repositório em um diretório recém-criado, cria o monitoramento remoto dos ramos para cada ramo no repositório clonado (visível utilizando `git branch --remotes`), cria e verifica um ramo inicial que é bifurcado do ramo ativo atualmente do repositório clonado ."

#. type: Plain text
#: en/git-clone.txt:36
#, priority:300
msgid "After the clone, a plain `git fetch` without arguments will update all the remote-tracking branches, and a `git pull` without arguments will in addition merge the remote master branch into the current master branch, if any (this is untrue when \"--single-branch\" is given; see below)."
msgstr "Após a clonagem, um simples `git fetch` sem argumentos atualizará todas os ramos remotos e um `git pull` sem argumentos irá além disso, fará a mesclagem do ramo 'master' (mestre) remoto no ramo atual caso haja (isso não se torna verdadeiro quando \"--single-branch\" é utilizado; veja abaixo)."

#. type: Plain text
#: en/git-clone.txt:41
#, priority:300
msgid "This default configuration is achieved by creating references to the remote branch heads under `refs/remotes/origin` and by initializing `remote.origin.url` and `remote.origin.fetch` configuration variables."
msgstr "Esta configuração predefinida é obtida através da criação de referências nos cabeçalhos das ramificações remotas em `refs/remotos/origem` e inicializando as variáveis de configuração `remote.origin.url` e `remote.origin.fetch`."

#. type: Labeled list
#: en/git-clone.txt:46 en/git-config.txt:134 en/git-instaweb.txt:24 en/git-pack-objects.txt:182 en/git-svn.txt:245
#, ignore-same, no-wrap, priority:300
msgid "--local"
msgstr "--local"

#. type: Plain text
#: en/git-clone.txt:53
#, priority:300
msgid "When the repository to clone from is on a local machine, this flag bypasses the normal \"Git aware\" transport mechanism and clones the repository by making a copy of HEAD and everything under objects and refs directories.  The files under `.git/objects/` directory are hardlinked to save space when possible."
msgstr "Quando o repositório que será clonada está numa máquina local, esta opção ignora o mecanismo de transporte \"compatível com Git\" normal e clona o repositório fazendo uma cópia do `HEAD` e tudo sob os diretórios dos objetos e das refs.  Os arquivos sob o diretório `.git / objects /` são vinculados para economizar espaço sempre que possível."

#. type: Plain text
#: en/git-clone.txt:60
#, priority:300
msgid "If the repository is specified as a local path (e.g., `/path/to/repo`), this is the default, and --local is essentially a no-op.  If the repository is specified as a URL, then this flag is ignored (and we never use the local optimizations).  Specifying `--no-local` will override the default when `/path/to/repo` is given, using the regular Git transport instead."
msgstr "É predefinido que caso o repositório seja definido como um caminho local (`/path/to/repo` por exemplo) e a opção `--local` não seja operacional.  Caso o repositório seja definido como uma URL, então a opção será ignorada (e as otimizações locais nunca serão utilizadas).  Utilizando a opção `--no-local` irá sobrescrever o valor predefinido quando `/path/to/repo` for informado em vez de utilizar o transporte regular do Git."

#. type: Plain text
#: en/git-clone.txt:64
#, no-wrap, priority:300
msgid ""
"*NOTE*: this operation can race with concurrent modification to the\n"
"source repository, similar to running `cp -r src dst` while modifying\n"
"`src`.\n"
msgstr ""
"*OBSERVAÇÃO*: esta operação pode competir com as alterações concomitantes ao\n"
"código fonte no repositório, semelhante ao executar `cp -r src dst` enquanto altera\n"
"o \"crc\".\n"

#. type: Labeled list
#: en/git-clone.txt:65
#, ignore-same, no-wrap, priority:300
msgid "--no-hardlinks"
msgstr "--no-hardlinks"

#. type: Plain text
#: en/git-clone.txt:70
#, priority:300
msgid "Force the cloning process from a repository on a local filesystem to copy the files under the `.git/objects` directory instead of using hardlinks. This may be desirable if you are trying to make a back-up of your repository."
msgstr "Impõem o processo de clonagem a partir de um repositório num sistema de arquivos local para copiar os arquivos no diretório `.git/objects` em vez de utilizar links físicos. Pode ser desejável caso esteja tentando fazer um backup do seu repositório."

#. type: Labeled list
#: en/git-clone.txt:72
#, ignore-same, no-wrap, priority:300
msgid "--shared"
msgstr "--shared"

#. type: Plain text
#: en/git-clone.txt:78
#, priority:300
msgid "When the repository to clone is on the local machine, instead of using hard links, automatically setup `.git/objects/info/alternates` to share the objects with the source repository.  The resulting repository starts out without any object of its own."
msgstr "Quando o repositório que será clonado estiver na máquina local, em vez de utilizar links físicos, configure automaticamente o `.git/objetos/info/alternates` para compartilhar os objetos com o repositório da origem.  O repositório resultante é iniciado sem nenhum objeto próprio."

#. type: Plain text
#: en/git-clone.txt:88
#, no-wrap, priority:300
msgid ""
"*NOTE*: this is a possibly dangerous operation; do *not* use\n"
"it unless you understand what it does. If you clone your\n"
"repository using this option and then delete branches (or use any\n"
"other Git command that makes any existing commit unreferenced) in the\n"
"source repository, some objects may become unreferenced (or dangling).\n"
"These objects may be removed by normal Git operations (such as `git commit`)\n"
"which automatically call `git maintenance run --auto`. (See\n"
"linkgit:git-maintenance[1].) If these objects are removed and were referenced\n"
"by the cloned repository, then the cloned repository will become corrupt.\n"
msgstr ""
"*OBSERVAÇÃO*: provavelmente está uma operação muito perigosa; *não*\n"
"utilize a menos que compreenda o que ela faz. Caso clone o seu\n"
"repositório utilizando esta opção e em seguida exclua os ramos (ou use qualquer\n"
"outro comando Git que faz qualquer commit existente perder a referência) no\n"
"repositório da origem, alguns objetos podem perder a referência (ou ficarem soltos).\n"
"Estes objetos podem ser removidos através das operações normais do Git (como\n"
"`git commit`) que chama automaticamente o comando `git maintenance run --auto`.\n"
"(Consulte linkgit:git-maintenance[1].) Caso estes objetos sejam removidos\n"
"e foram referenciados pelo repositório clonado, o repositório clonado se tornará corrompido.\n"

#. type: Plain text
#: en/git-clone.txt:94
#, priority:300
msgid "Note that running `git repack` without the `--local` option in a repository cloned with `--shared` will copy objects from the source repository into a pack in the cloned repository, removing the disk space savings of `clone --shared`.  It is safe, however, to run `git gc`, which uses the `--local` option by default."
msgstr "Observe que executar o comando `git repack` sem a opção `--local` em um repositório clonado com `--shared`, este irá copiar os objetos do repositório da origem em um pacote no repositório que foi clonado, removendo a economia de espaço em disco do `clone --shared`.  É seguro, no entanto, executar o comando `git gc`, que por predefinição utiliza a opção `--local`."

#. type: Plain text
#: en/git-clone.txt:98
#, priority:300
msgid "If you want to break the dependency of a repository cloned with `--shared` on its source repository, you can simply run `git repack -a` to copy all objects from the source repository into a pack in the cloned repository."
msgstr "Caso queira quebrar a dependência de um repositório clonado com `--shared` no seu repositório de origem, você pode simplesmente executar o comando `git repack -a` para copiar todos os objetos do repositório de origem em um pacote dentro do repositório clonado."

#. type: Labeled list
#: en/git-clone.txt:99
#, no-wrap, priority:300
msgid "--reference[-if-able] <repository>"
msgstr "--reference[-if-able] <repositório>"

#. type: Plain text
#: en/git-clone.txt:109
#, priority:300
msgid "If the reference repository is on the local machine, automatically setup `.git/objects/info/alternates` to obtain objects from the reference repository.  Using an already existing repository as an alternate will require fewer objects to be copied from the repository being cloned, reducing network and local storage costs.  When using the `--reference-if-able`, a non existing directory is skipped with a warning instead of aborting the clone."
msgstr "Caso o repositório de referência estiver na máquina local, configure automaticamente o arquivo de configuração `.git/objects/info/alternates` para obter os objetos do repositório de referência.  A utilização de um repositório já existente como alternativa, exigirá que menos objetos sejam copiados do repositório que está sendo clonado, reduzindo as despesas do armazenamento local e da rede.  Ao utilizar o comando `--reference-if-able`, um diretório não existente é ignorado com um aviso em vez de interromper a clonagem."

#. type: Plain text
#: en/git-clone.txt:112
#, no-wrap, priority:300
msgid ""
"*NOTE*: see the NOTE for the `--shared` option, and also the\n"
"`--dissociate` option.\n"
msgstr ""
"*OBSERVAÇÃO*: consulte a OBSERVAÇÃO para a opção `--shared` e também\n"
"para a opção `--dissociate`.\n"

#. type: Labeled list
#: en/git-clone.txt:113 en/git-submodule.txt:407
#, ignore-same, no-wrap, priority:300
msgid "--dissociate"
msgstr "--dissociate"

#. type: Plain text
#: en/git-clone.txt:123
#, priority:300
msgid "Borrow the objects from reference repositories specified with the `--reference` options only to reduce network transfer, and stop borrowing from them after a clone is made by making necessary local copies of borrowed objects.  This option can also be used when cloning locally from a repository that already borrows objects from another repository--the new repository will borrow objects from the same repository, and this option can be used to stop the borrowing."
msgstr "Emprestar os objetos dos repositórios a partir da referência utilizada com as opções `--reference` apenas para reduzir a transferência de rede e parar de tomar emprestado deles após a clonagem, fazendo cópias locais necessárias dos objetos emprestados.  Esta opção também pode ser usada na clonagem local a partir de um repositório que já toma emprestado os objetos de um outro repositório--o novo repositório pegará emprestado os objetos do mesmo repositório, e esta opção pode ser usada para interromper o empréstimo."

#. type: Plain text
#: en/git-clone.txt:128
#, priority:300
msgid "Operate quietly.  Progress is not reported to the standard error stream."
msgstr "Operate quietly.  O progresso não é relatado para o fluxo de erro predefinido."

#. type: Plain text
#: en/git-clone.txt:133
#, priority:300
msgid "Run verbosely. Does not affect the reporting of progress status to the standard error stream."
msgstr "Executa em modo loquaz. Não afera o relatório da condição geral do progresso para o fluxo de erro padrão."

#. type: Plain text
#: en/git-clone.txt:139
#, priority:300
msgid "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless `--quiet` is specified. This flag forces progress status even if the standard error stream is not directed to a terminal."
msgstr "A condição do progresso é relatado no padrão do fluxo de erro por padrão quando ele é anexado em um terminal, a menos que `--quiet` seja utilizado. Esta sinalização impõe a condição geral de progresso mesmo que o fluxo de erro predefinido não seja direcionado para um terminal."

#. type: Plain text
#: en/git-clone.txt:151
#, priority:300
msgid "No checkout of HEAD is performed after the clone is complete."
msgstr "Nenhum checkout de HEAD é executado após o clone estar completo."

#. type: Labeled list
#: en/git-clone.txt:152
#, ignore-same, no-wrap, priority:300
msgid "--[no-]reject-shallow"
msgstr "--[no-]reject-shallow"

#. type: Plain text
#: en/git-clone.txt:156
#, priority:300
msgid "Fail if the source repository is a shallow repository.  The 'clone.rejectShallow' configuration variable can be used to specify the default."
msgstr "Falha caso o repositório de fontes for um repositório superficial.  A variável de configuração 'clone.rejectShallow' pode ser usada para definir o padrão."

#. type: Labeled list
#: en/git-clone.txt:157 en/git-init.txt:48 en/git-p4.txt:305 en/git.txt:177
#, ignore-same, no-wrap, priority:300
msgid "--bare"
msgstr "--bare"

#. type: Plain text
#: en/git-clone.txt:168
#, priority:300
msgid "Make a 'bare' Git repository.  That is, instead of creating `<directory>` and placing the administrative files in `<directory>/.git`, make the `<directory>` itself the `$GIT_DIR`. This obviously implies the `--no-checkout` because there is nowhere to check out the working tree.  Also the branch heads at the remote are copied directly to corresponding local branch heads, without mapping them to `refs/remotes/origin/`.  When this option is used, neither remote-tracking branches nor the related configuration variables are created."
msgstr "Faça um repositório Git 'vazio'.  Ou seja, em vez de criar o `<diretório>` e colocar os arquivos administrativos dentro do `<diretório>/.git`, faça com que o próprio `<diretório>` seja o `$ GIT_DIR`. Por questões óbvias, há a obrigatoriedade da utilização da opção `--no-checkout` porque não há onde averiguar a árvore de trabalho.  Além disso os cabeçalhos do ramo remoto são copiados diretamente para os cabeçalhos locais correspondentes, sem mapeá-los para `refs/remotes/origin/`.  Quando essa opção é utilizada, nem as ramificações monitoradas remotamente tão pouco as variáveis de configuração relacionadas à elas são criadas."

#. type: Plain text
#: en/git-clone.txt:174
#, priority:300
msgid "Employ a sparse-checkout, with only files in the toplevel directory initially being present.  The linkgit:git-sparse-checkout[1] command can be used to grow the working directory as needed."
msgstr "Empregue a averiguação esparsa (sparse-checkout), apenas nos arquivos inicialmente presentes no diretório do primeiro nível.   O comando linkgit:git-sparse-checkout[1] para aumentar o diretório de trabalho sempre que for necessário."

#. type: Labeled list
#: en/git-clone.txt:175 en/git-pack-objects.txt:300 en/rev-list-options.txt:923
#, no-wrap, priority:300
msgid "--filter=<filter-spec>"
msgstr "--filter=<filter-spec>"

#. type: Plain text
#: en/git-clone.txt:184
#, priority:300
msgid "Use the partial clone feature and request that the server sends a subset of reachable objects according to a given object filter.  When using `--filter`, the supplied `<filter-spec>` is used for the partial clone filter. For example, `--filter=blob:none` will filter out all blobs (file contents) until needed by Git. Also, `--filter=blob:limit=<size>` will filter out all blobs of size at least `<size>`. For more details on filter specifications, see the `--filter` option in linkgit:git-rev-list[1]."
msgstr "Utilize o recurso parcial de clonagem e solicite que o servidor envie um subconjunto de objetos acessíveis de acordo com determinados filtros do objeto.  Ao utilizar a opção `--filter`, o `<filter-spec>` fornecido é usado para o filtro de clonagem parcial. Como, por exemplo, a opção `--filter=blob:none` irá filtrar todas as bolhas (conteúdo dos arquivos) até que sejam requisitados pelo Git. A opção `--filter=blob:limit=<tamanho>` também filtrará todas as bolhas com o tamanho de pelo menos `<tamanho>`. Para mais detalhes sobre as especificações dos filtros, consulte a opção `--filter` no linkgit:git-rev-list[1]."

#. type: Labeled list
#: en/git-clone.txt:185
#, ignore-same, no-wrap, priority:300
msgid "--also-filter-submodules"
msgstr "--also-filter-submodules"

#. type: Plain text
#: en/git-clone.txt:189
#, priority:300
msgid "Also apply the partial clone filter to any submodules in the repository.  Requires `--filter` and `--recurse-submodules`. This can be turned on by default by setting the `clone.filterSubmodules` config option."
msgstr "Aplique também o filtro clone parcial a quaisquer submódulos no repositório.  Requer a opção `--filter` e `--recurse-submodules`. Isso pode ser ativado por padrão, ao definir a opção de configuração `clone.filterSubmodules`."

#. type: Labeled list
#: en/git-clone.txt:190 en/git-push.txt:161
#, ignore-same, no-wrap, priority:300
msgid "--mirror"
msgstr "--mirror"

#. type: Plain text
#: en/git-clone.txt:197
#, priority:300
msgid "Set up a mirror of the source repository.  This implies `--bare`.  Compared to `--bare`, `--mirror` not only maps local branches of the source to local branches of the target, it maps all refs (including remote-tracking branches, notes etc.) and sets up a refspec configuration such that all these refs are overwritten by a `git remote update` in the target repository."
msgstr "Configure um espelho do repositório de origem.  Implica no uso da opção `--bare`.  Comparado com a opção `--bare`, `--mirror` não apenas mapeia as ramificações locais da origem para as ramificações locais do destino, ele mapeia todas as refs (incluindo as ramificações monitoradas remotamente, anotações, etc.) e define uma configuração `refspec` onde todas estas `refs` sejam substituídas através um `git remote update` no repositório do destino."

#. type: Labeled list
#: en/git-clone.txt:198
#, no-wrap, priority:300
msgid "-o <name>"
msgstr "-o <nome>"

#. type: Labeled list
#: en/git-clone.txt:199
#, no-wrap, priority:300
msgid "--origin <name>"
msgstr "--origin <nome>"

#. type: Plain text
#: en/git-clone.txt:203
#, priority:300
msgid "Instead of using the remote name `origin` to keep track of the upstream repository, use `<name>`.  Overrides `clone.defaultRemoteName` from the config."
msgstr "Em vez de utilizar o nome remoto `origin` para acompanhar o repositório \"upstream\" utilize o `<nome> `.  Sobrescreve o arquivo `clone.defaultRemoteName` a partir da configuração."

#. type: Labeled list
#: en/git-clone.txt:204
#, no-wrap, priority:300
msgid "-b <name>"
msgstr "-b <nome>"

#. type: Labeled list
#: en/git-clone.txt:205
#, no-wrap, priority:300
msgid "--branch <name>"
msgstr "--branch <nome>"

#. type: Plain text
#: en/git-clone.txt:212
#, priority:300
msgid "Instead of pointing the newly created HEAD to the branch pointed to by the cloned repository's HEAD, point to `<name>` branch instead. In a non-bare repository, this is the branch that will be checked out.  `--branch` can also take tags and detaches the HEAD at that commit in the resulting repository."
msgstr "Em vez de apontar o recém-criado `HEAD` para um ramo apontado pelo `HEAD` do repositório clonado, em vez disso, aponte para o ramo `<nome>`. Em um repositório não vazio, esse é o ramo que será averiguado.  A opção `--branch` também pode pegar as tags e desanexar o `HEAD` daquele commit no repositório resultante."

#. type: Labeled list
#: en/git-clone.txt:213
#, no-wrap, priority:300
msgid "-u <upload-pack>"
msgstr "-u <upload-pack>"

#. type: Plain text
#: en/git-clone.txt:218
#, priority:300
msgid "When given, and the repository to clone from is accessed via ssh, this specifies a non-default path for the command run on the other end."
msgstr "Quando informado e o repositório a ser clonado for acessível através do ssh, determina que seja executado um caminho fora do padrão na outra extremidade."

#. type: Labeled list
#: en/git-clone.txt:219 en/git-init.txt:60 en/git-svn.txt:578
#, no-wrap, priority:300
msgid "--template=<template-directory>"
msgstr "--template=<diretório-modelo>"

#. type: Plain text
#: en/git-clone.txt:222
#, priority:300
msgid "Specify the directory from which templates will be used; (See the \"TEMPLATE DIRECTORY\" section of linkgit:git-init[1].)"
msgstr "Informe o diretório de onde os modelos serão utilizados; (Consulte a seção \"DIRETÓRIO MODELO\" do linkgit:git-init[1].)"

#. type: Labeled list
#: en/git-clone.txt:223
#, no-wrap, priority:300
msgid "-c <key>=<value>"
msgstr "-c <chave>=<valor>"

#. type: Labeled list
#: en/git-clone.txt:224
#, no-wrap, priority:300
msgid "--config <key>=<value>"
msgstr "--config <chave>=<valor>"

#. type: Plain text
#: en/git-clone.txt:233
#, priority:300
msgid "Set a configuration variable in the newly-created repository; this takes effect immediately after the repository is initialized, but before the remote history is fetched or any files checked out.  The key is in the same format as expected by linkgit:git-config[1] (e.g., `core.eol=true`). If multiple values are given for the same key, each value will be written to the config file. This makes it safe, for example, to add additional fetch refspecs to the origin remote."
msgstr "Define uma variável de configuração no repositório recém-criado; isso entra em vigor imediatamente após a inicialização do repositório, antes da captura remota do histórico ou da averiguação de quaisquer arquivos.  Como é esperado, a chave está no mesmo formato de linkgit:git-config[1] (ou seja, `core.eol=true`). Caso vários valores sejam informados para a mesma chave, cada valor será gravado no arquivo de configuração. Isso o torna mais seguro para incluir \"fetch refspecs\" adicionais ao \"origin\" remoto por exemplo."

#. type: Plain text
#: en/git-clone.txt:239
#, priority:300
msgid "Due to limitations of the current implementation, some configuration variables do not take effect until after the initial fetch and checkout.  Configuration variables known to not take effect are: `remote.<name>.mirror` and `remote.<name>.tagOpt`.  Use the corresponding `--mirror` and `--no-tags` options instead."
msgstr "Devido as limitações da implementação atual, algumas variáveis de configuração não entram em vigor até o próximo \"fetch\" e \"checkout\".  As variáveis de configuração que são conhecidas por não terem efeito são: `remote.<nome>.mirror` and `remote.<nome>.tagOpt`.  Em vez disso, utilize as opções correspondentes `--mirror` e `--no-tags`."

#. type: Labeled list
#: en/git-clone.txt:240
#, no-wrap, priority:300
msgid "--depth <depth>"
msgstr "--depth <profundidade>"

#. type: Plain text
#: en/git-clone.txt:246
#, priority:300
msgid "Create a 'shallow' clone with a history truncated to the specified number of commits. Implies `--single-branch` unless `--no-single-branch` is given to fetch the histories near the tips of all branches. If you want to clone submodules shallowly, also pass `--shallow-submodules`."
msgstr "Crie um clone 'raso' com um histórico truncado para uma quantidade determinada de revisões. Implica no uso da opção `--single-branch` a menos que `--no-single-branch` seja utilizado para resgatar os históricos próximos às pontas de todos os ramos. Caso queira clonar os submódulos superficialmente, utilize também `--shallow-submodules`."

#. type: Plain text
#: en/git-clone.txt:249
#, priority:300
msgid "Create a shallow clone with a history after the specified time."
msgstr "Crie um clone superficial com um histórico após o tempo especificado."

#. type: Plain text
#: en/git-clone.txt:254
#, priority:300
msgid "Create a shallow clone with a history, excluding commits reachable from a specified remote branch or tag.  This option can be specified multiple times."
msgstr "Crie um clone superficial com um histórico, excluindo os commits acessíveis a partir de um ramo remoto ou tag específica.  Esta opção pode ser utilizada várias vezes."

#. type: Labeled list
#: en/git-clone.txt:255 en/git-submodule.txt:437
#, ignore-same, no-wrap, priority:300
msgid "--[no-]single-branch"
msgstr "--[no-]single-branch"

#. type: Plain text
#: en/git-clone.txt:264
#, priority:300
msgid "Clone only the history leading to the tip of a single branch, either specified by the `--branch` option or the primary branch remote's `HEAD` points at.  Further fetches into the resulting repository will only update the remote-tracking branch for the branch this option was used for the initial cloning.  If the HEAD at the remote did not point at any branch when `--single-branch` clone was made, no remote-tracking branch is created."
msgstr "Clone apenas o histórico que leva à ponta de uma única ramificação, usada pela opção `--branch` ou pelo ramo primário remoto onde `HEAD` aponta.  As outras capturas feitas no repositório resultante, atualizarão apenas as ramificações monitoradas  remotamente onde esta opção foi utilizada para a clonagem inicial.  Caso o `HEAD` remoto não aponte para nenhuma ramificação quando o clone `--single-branch` foi feito, nenhuma ramificação de rastreamento remoto é criado."

#. type: Plain text
#: en/git-clone.txt:271
#, priority:300
msgid "Don't clone any tags, and set `remote.<remote>.tagOpt=--no-tags` in the config, ensuring that future `git pull` and `git fetch` operations won't follow any tags. Subsequent explicit tag fetches will still work, (see linkgit:git-fetch[1])."
msgstr "Não clone nenhuma tag e defina `remote.<remoto>.tagOpt=--no-tags` na configuração, garantindo que futuras operações do comando `git pull` e do comando `git fetch` não sigam nenhuma tag. As buscas explícitas subsequentes das tags ainda funcionarão (consulte linkgit:git-fetch[1])."

#. type: Plain text
#: en/git-clone.txt:276
#, priority:300
msgid "Can be used in conjunction with `--single-branch` to clone and maintain a branch with no references other than a single cloned branch. This is useful e.g. to maintain minimal clones of the default branch of some repository for search indexing."
msgstr "Pode ser utilizado em conjunto com o `--single-branch` para clonar e manter um ramo sem referências além de um único ramo clonado. É útil para manter uma quantidade mínima dos clones do ramo predefinido de algum repositório para a indexação da pesquisa por exemplo."

#. type: Labeled list
#: en/git-clone.txt:277
#, no-wrap, priority:300
msgid "--recurse-submodules[=<pathspec>]"
msgstr "--recurse-submodules[=<pathspec>]"

#. type: Plain text
#: en/git-clone.txt:285
#, priority:300
msgid "After the clone is created, initialize and clone submodules within based on the provided pathspec.  If no pathspec is provided, all submodules are initialized and cloned.  This option can be given multiple times for pathspecs consisting of multiple entries.  The resulting clone has `submodule.active` set to the provided pathspec, or \".\" (meaning all submodules) if no pathspec is provided."
msgstr "Depois que o clone é criado, inicialize e clone os submódulos com base no `pathspec` informado.  Caso nenhum `pathspec` seja informado, todos serão inicializados e clonados.  Esta opção pode ser utilizada várias vezes para a consulta de diversas entradas `pathspec`.  O clone resultante de `submodule.active` define o pathspec informado ou \".\" (significa todos os submódulos) caso nenhum pathspec seja provido."

#. type: Plain text
#: en/git-clone.txt:292
#, priority:300
msgid "Submodules are initialized and cloned using their default settings. This is equivalent to running `git submodule update --init --recursive <pathspec>` immediately after the clone is finished. This option is ignored if the cloned repository does not have a worktree/checkout (i.e. if any of `--no-checkout`/`-n`, `--bare`, or `--mirror` is given)"
msgstr "Os submódulos são inicializados e clonados utilizando as suas respectivas configurações predefinidas. Este é o equivalente a executar o comando `git submodule update --init --recursive <pathspec>` imediatamente após que a clonagem for finalizada. Esta opção é ignorada caso o repositório clonado não tenha uma árvore de trabalho/verificação (ou seja quaisquer dos comandos `--no-checkout`/`-n`, `--bare`, ou `--mirror` seja utilizado)"

#. type: Labeled list
#: en/git-clone.txt:293
#, ignore-same, no-wrap, priority:300
msgid "--[no-]shallow-submodules"
msgstr "--[no-]shallow-submodules"

#. type: Plain text
#: en/git-clone.txt:295
#, priority:300
msgid "All submodules which are cloned will be shallow with a depth of 1."
msgstr "Todos os submódulos clonados serão rasos e com uma profundidade 1."

#. type: Labeled list
#: en/git-clone.txt:296
#, ignore-same, no-wrap, priority:300
msgid "--[no-]remote-submodules"
msgstr "--[no-]remote-submodules"

#. type: Plain text
#: en/git-clone.txt:301
#, priority:300
msgid "All submodules which are cloned will use the status of the submodule's remote-tracking branch to update the submodule, rather than the superproject's recorded SHA-1. Equivalent to passing `--remote` to `git submodule update`."
msgstr "Todos os submódulos que forem clonados, para realizar a atualização os submódulos usarão a condição remota do ramo do submódulo de rastreamento em vez do SHA-1 registrado no superprojeto. Equivale encaminhar `--remote` para `git submodule update`."

#. type: Labeled list
#: en/git-clone.txt:302 en/git-init.txt:65
#, no-wrap, priority:300
msgid "--separate-git-dir=<git-dir>"
msgstr "--separate-git-dir=<dir-git>"

#. type: Plain text
#: en/git-clone.txt:308
#, priority:300
msgid "Instead of placing the cloned repository where it is supposed to be, place the cloned repository at the specified directory, then make a filesystem-agnostic Git symbolic link to there.  The result is Git repository can be separated from working tree."
msgstr "Em vez de colocar o repositório clonado onde deveria estar, coloque o repositório clonado no diretório especificado e em seguida, faça um link simbólico Git independente do sistema de arquivos para lá.  O resultado é que o repositório Git pode ser separado da árvore de trabalho."

#. type: Labeled list
#: en/git-clone.txt:309 en/git-submodule.txt:431
#, no-wrap, priority:300
msgid "-j <n>"
msgstr "-j <n>"

#. type: Labeled list
#: en/git-clone.txt:310 en/git-submodule.txt:432
#, no-wrap, priority:300
msgid "--jobs <n>"
msgstr "--jobs <n>"

#. type: Plain text
#: en/git-clone.txt:313
#, priority:300
msgid "The number of submodules fetched at the same time.  Defaults to the `submodule.fetchJobs` option."
msgstr "A quantidade de submódulos que foram recuperados ao mesmo tempo.  A predefinição retorna para a opção `submodule.fetchJobs`."

#. type: Labeled list
#: en/git-clone.txt:314 en/git-fetch-pack.txt:118 en/git-ls-remote.txt:83 en/git-push.txt:50 en/pull-fetch-param.txt:1
#, no-wrap, priority:300
msgid "<repository>"
msgstr "<repositório>"

#. type: Plain text
#: en/git-clone.txt:318
#, priority:300
msgid "The (possibly remote) repository to clone from.  See the <<URLS,GIT URLS>> section below for more information on specifying repositories."
msgstr "Os repositórios que serão clonados (possivelmente remotos).  Consulte a seção <<URLS,GIT URLS>> abaixo para mais informações sobre as especificidades dos repositórios."

#. type: Labeled list
#: en/git-clone.txt:319 en/git-cvsserver.txt:65 en/git-daemon.txt:220 en/git-receive-pack.txt:41 en/git-send-pack.txt:95 en/git-upload-archive.txt:57 en/git-upload-pack.txt:47
#, no-wrap, priority:300
msgid "<directory>"
msgstr "<diretório>"

#. type: Plain text
#: en/git-clone.txt:325
#, priority:300
msgid "The name of a new directory to clone into.  The \"humanish\" part of the source repository is used if no directory is explicitly given (`repo` for `/path/to/repo.git` and `foo` for `host.xz:foo/.git`).  Cloning into an existing directory is only allowed if the directory is empty."
msgstr "O nome de um novo diretório que será clonado.  A parte \"humanística\" do repositório de origem é utilizada caso nenhum diretório seja explicitamente informado (`repo` para `/path/to/repo.git` e `foo` para `host.xz:foo/.git`).  A clonagem num diretório existente é permitida apenas caso o diretório esteja vazio."

#. type: Labeled list
#: en/git-clone.txt:326
#, no-wrap, priority:300
msgid "--bundle-uri=<uri>"
msgstr ""

#. type: Plain text
#: en/git-clone.txt:332
#, priority:300
msgid "Before fetching from the remote, fetch a bundle from the given `<uri>` and unbundle the data into the local repository. The refs in the bundle will be stored under the hidden `refs/bundle/*` namespace. This option is incompatible with `--depth`, `--shallow-since`, and `--shallow-exclude`."
msgstr ""

#. type: Plain text
#: en/git-clone.txt:340
#, priority:300
msgid "Clone from upstream:"
msgstr "Clonando a partir de um \"upstream\":"

#. type: delimited block -
#: en/git-clone.txt:345
#, ignore-ellipsis, no-wrap, priority:300
msgid ""
"$ git clone git://git.kernel.org/pub/scm/.../linux.git my-linux\n"
"$ cd my-linux\n"
"$ make\n"
msgstr ""
"$ git clone git://git.kernel.org/pub/scm/.../linux.git my-linux\n"
"$ cd my-linux\n"
"$ make\n"

#. type: Plain text
#: en/git-clone.txt:349
#, priority:300
msgid "Make a local clone that borrows from the current directory, without checking things out:"
msgstr "Faça uma clonagem local que pegue emprestado do diretório atual sem realizar uma averiguação:"

#. type: delimited block -
#: en/git-clone.txt:354
#, no-wrap, priority:300
msgid ""
"$ git clone -l -s -n . ../copy\n"
"$ cd ../copy\n"
"$ git show-branch\n"
msgstr ""
"$ git clone -l -s -n . ../copy\n"
"$ cd ../copy\n"
"$ git show-branch\n"

#. type: Plain text
#: en/git-clone.txt:358
#, priority:300
msgid "Clone from upstream while borrowing from an existing local directory:"
msgstr "Clone a partir de um \"upstream\" enquanto pega emprestado de um diretório local já existente:"

#. type: delimited block -
#: en/git-clone.txt:364
#, ignore-ellipsis, no-wrap, priority:300
msgid ""
"$ git clone --reference /git/linux.git \\\n"
"\tgit://git.kernel.org/pub/scm/.../linux.git \\\n"
"\tmy-linux\n"
"$ cd my-linux\n"
msgstr ""
"$ git clone --reference /git/linux.git \\\n"
"\tgit://git.kernel.org/pub/scm/.../linux.git \\\n"
"\tmy-linux\n"
"$ cd my-linux\n"

#. type: Plain text
#: en/git-clone.txt:368
#, priority:300
msgid "Create a bare repository to publish your changes to the public:"
msgstr "Crie um repositório simples para publicar as suas alterações para o público:"

#. type: delimited block -
#: en/git-clone.txt:371
#, no-wrap, priority:300
msgid "$ git clone --bare -l /home/proj/.git /pub/scm/proj.git\n"
msgstr "$ git clone --bare -l /home/proj/.git /pub/scm/proj.git\n"

#. type: Title =
#: en/git-column.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-column(1)"
msgstr "git-column(1)"

#. type: Plain text
#: en/git-column.txt:7
#, priority:100
msgid "git-column - Display data in columns"
msgstr "git-column - Exibe os dados em colunas"

#. type: Plain text
#: en/git-column.txt:13
#, no-wrap, priority:100
msgid ""
"'git column' [--command=<name>] [--[raw-]mode=<mode>] [--width=<width>]\n"
"\t     [--indent=<string>] [--nl=<string>] [--padding=<n>]\n"
msgstr ""
"'git column' [--command=<nome>] [--[raw-]mode=<modo>] [--width=<largura>]\n"
"\t     [--indent=<texto>] [--nl=<texto>] [--padding=<n>]\n"

#. type: Plain text
#: en/git-column.txt:20
#, priority:100
msgid "This command formats the lines of its standard input into a table with multiple columns. Each input line occupies one cell of the table. It is used internally by other git commands to format output into columns."
msgstr "Este comando formata as linhas de sua entrada padrão numa tabela com várias colunas. Cada linha de entrada ocupa uma célula na tabela. É utilizado internamente por outros comandos git para formatar a saída em colunas."

#. type: Labeled list
#: en/git-column.txt:23
#, no-wrap, priority:100
msgid "--command=<name>"
msgstr "--command=<nome>"

#. type: Plain text
#: en/git-column.txt:26
#, priority:100
msgid "Look up layout mode using configuration variable column.<name> and column.ui."
msgstr "Consulta o modo de layout utilizando a coluna da variável de configuração column.<nome> e column.ui."

#. type: Labeled list
#: en/git-column.txt:27
#, no-wrap, priority:100
msgid "--mode=<mode>"
msgstr "--mode=<modo>"

#. type: Plain text
#: en/git-column.txt:30
#, priority:100
msgid "Specify layout mode. See configuration variable column.ui for option syntax in linkgit:git-config[1]."
msgstr "Especifica o modo de layout. Veja a variável de configuração `column.ui` para a sintaxe da opção em linkgit:git-config[1]."

#. type: Labeled list
#: en/git-column.txt:31
#, no-wrap, priority:100
msgid "--raw-mode=<n>"
msgstr "--raw-mode=<n>"

#. type: Plain text
#: en/git-column.txt:34
#, priority:100
msgid "Same as --mode but take mode encoded as a number. This is mainly used by other commands that have already parsed layout mode."
msgstr "O mesmo que `--mode`, porém usa o modo codificado como um número. Isso é utilizado principalmente por outros comandos que já analisaram o modo de layout."

#. type: Labeled list
#: en/git-column.txt:35
#, no-wrap, priority:100
msgid "--width=<width>"
msgstr "--width=<largura>"

#. type: Plain text
#: en/git-column.txt:38
#, priority:100
msgid "Specify the terminal width. By default 'git column' will detect the terminal width, or fall back to 80 if it is unable to do so."
msgstr "Especifica a largura do terminal. É predefinido que `git column` detectará a largura do terminal ou voltará ao valor 80 predefinido, caso não seja possível."

#. type: Labeled list
#: en/git-column.txt:39
#, no-wrap, priority:100
msgid "--indent=<string>"
msgstr "--indent=<texto>"

#. type: Plain text
#: en/git-column.txt:41
#, priority:100
msgid "String to be printed at the beginning of each line."
msgstr "Uma série de caracteres (strings) que serão impressas no inicio de cada linha."

#. type: Labeled list
#: en/git-column.txt:42
#, no-wrap, priority:100
msgid "--nl=<string>"
msgstr "--nl=<texto>"

#. type: Plain text
#: en/git-column.txt:45
#, priority:100
msgid "String to be printed at the end of each line, including newline character."
msgstr "Uma série de caracteres a ser impressa no final de cada linha, incluindo caracteres de nova linha."

#. type: Labeled list
#: en/git-column.txt:46
#, no-wrap, priority:100
msgid "--padding=<N>"
msgstr "--padding=<N>"

#. type: Plain text
#: en/git-column.txt:48
#, priority:100
msgid "The number of spaces between columns. One space by default."
msgstr "A quantidade de espaços entre as colunas. A predefinição é um espaço."

#. type: Plain text
#: en/git-column.txt:53
#, priority:100
msgid "Format data by columns:"
msgstr "Formata os dados por colunas:"

#. type: delimited block -
#: en/git-column.txt:58
#, no-wrap, priority:100
msgid ""
"$ seq 1 24 | git column --mode=column --padding=5\n"
"1      4      7      10     13     16     19     22\n"
"2      5      8      11     14     17     20     23\n"
"3      6      9      12     15     18     21     24\n"
msgstr ""
"$ seq 1 24 | git column --mode=column --padding=5\n"
"1      4      7      10     13     16     19     22\n"
"2      5      8      11     14     17     20     23\n"
"3      6      9      12     15     18     21     24\n"

#. type: Plain text
#: en/git-column.txt:61
#, priority:100
msgid "Format data by rows:"
msgstr "Formata os dados por linhas:"

#. type: delimited block -
#: en/git-column.txt:66
#, no-wrap, priority:100
msgid ""
"$ seq 1 21 | git column --mode=row --padding=5\n"
"1      2      3      4      5      6      7\n"
"8      9      10     11     12     13     14\n"
"15     16     17     18     19     20     21\n"
msgstr ""
"$ seq 1 21 | git column --mode=row --padding=5\n"
"1      2      3      4      5      6      7\n"
"8      9      10     11     12     13     14\n"
"15     16     17     18     19     20     21\n"

#. type: Plain text
#: en/git-column.txt:69
#, priority:100
msgid "List some tags in a table with unequal column widths:"
msgstr "Liste algumas tags numa tabela com larguras desiguais das colunas:"

#. type: delimited block -
#: en/git-column.txt:75
#, no-wrap, priority:100
msgid ""
"$ git tag --list 'v2.4.*' --column=row,dense\n"
"v2.4.0  v2.4.0-rc0  v2.4.0-rc1  v2.4.0-rc2  v2.4.0-rc3\n"
"v2.4.1  v2.4.10     v2.4.11     v2.4.12     v2.4.2\n"
"v2.4.3  v2.4.4      v2.4.5      v2.4.6      v2.4.7\n"
"v2.4.8  v2.4.9\n"
msgstr ""
"$ git tag --list 'v2.4.*' --column=row,dense\n"
"v2.4.0  v2.4.0-rc0  v2.4.0-rc1  v2.4.0-rc2  v2.4.0-rc3\n"
"v2.4.1  v2.4.10     v2.4.11     v2.4.12     v2.4.2\n"
"v2.4.3  v2.4.4      v2.4.5      v2.4.6      v2.4.7\n"
"v2.4.8  v2.4.9\n"

#. type: Title =
#: en/git-commit-tree.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-commit-tree(1)"
msgstr "git-commit-tree(1)"

#. type: Plain text
#: en/git-commit-tree.txt:7
#, priority:80
msgid "git-commit-tree - Create a new commit object"
msgstr "git-commit-tree - Cria um novo objeto commit"

#. type: Plain text
#: en/git-commit-tree.txt:15
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git commit-tree' <tree> [(-p <parent>)...]\n"
"'git commit-tree' [(-p <parent>)...] [-S[<keyid>]] [(-m <message>)...]\n"
"\t\t  [(-F <file>)...] <tree>\n"
msgstr ""
"'git commit-tree' <tree> [(-p <origem>)...]\n"
"'git commit-tree' [(-p <origem>)...] [-S[<keyid>]] [(-m <mensagem>)...]\n"
"\t\t  [(-F <arquivo>)...] <árvore>\n"

#. type: Plain text
#: en/git-commit-tree.txt:21
#, priority:80
msgid "This is usually not what an end user wants to run directly.  See linkgit:git-commit[1] instead."
msgstr "Normalmente não é o que um usuário final gostaria de usar diretamente.  Em vez disso consulte linkgit:git-commit[1]."

#. type: Plain text
#: en/git-commit-tree.txt:25
#, priority:80
msgid "Creates a new commit object based on the provided tree object and emits the new commit object id on stdout. The log message is read from the standard input, unless `-m` or `-F` options are given."
msgstr "Cria um novo objeto commit com base no objeto da árvore informada e emite a nova ID do objeto commit no stdout. A mensagem do registro log é lido na entrada padrão a não ser que as opções `-m` ou `-F` sejam utilizadas."

#. type: Plain text
#: en/git-commit-tree.txt:29
#, priority:80
msgid "The `-m` and `-F` options can be given any number of times, in any order. The commit log message will be composed in the order in which the options are given."
msgstr "As opções `-m` e `-F` podem ser utilizadas várias vezes e em qualquer ordem. A mensagem do registro log do commit será composta na ordem em que as opções forem utilizadas."

#. type: Plain text
#: en/git-commit-tree.txt:34
#, priority:80
msgid "A commit object may have any number of parents. With exactly one parent, it is an ordinary commit. Having more than one parent makes the commit a merge between several lines of history. Initial (root)  commits have no parents."
msgstr "Um objeto commit pode ter uma quantidade qualquer de pais. Com exatamente um pai, é um commit comum. Ter mais de um pai torna o commit uma mesclagem entre as várias linhas do histórico. As confirmações iniciais (raiz) não têm pais."

#. type: Plain text
#: en/git-commit-tree.txt:38
#, priority:80
msgid "While a tree represents a particular directory state of a working directory, a commit represents that state in \"time\", and explains how to get there."
msgstr "Enquanto uma árvore representa a condição de um diretório de trabalho em específico, um commit representa esta condição em \"hora\" e explica como chegar até lá."

#. type: Plain text
#: en/git-commit-tree.txt:44
#, priority:80
msgid "Normally a commit would identify a new \"HEAD\" state, and while Git doesn't care where you save the note about that state, in practice we tend to just write the result to the file that is pointed at by `.git/HEAD`, so that we can always see what the last committed state was."
msgstr "Normalmente, um commit identifica uma nova condição \"HEAD\" e embora o Git não se importe onde você salva a nota sobre esse estado, na prática, tendemos apenas a escrever o resultado no arquivo apontado por `.git / HEAD` para que possamos sempre ver como estava a última condição do commit."

#. type: Labeled list
#: en/git-commit-tree.txt:47 en/git.txt:397
#, no-wrap, priority:100
msgid "<tree>"
msgstr "<árvore>"

#. type: Plain text
#: en/git-commit-tree.txt:49
#, priority:80
msgid "An existing tree object."
msgstr "Um objeto árvore já existente."

#. type: Labeled list
#: en/git-commit-tree.txt:50
#, no-wrap, priority:80
msgid "-p <parent>"
msgstr "-p <origem>"

#. type: Plain text
#: en/git-commit-tree.txt:52
#, priority:80
msgid "Each `-p` indicates the id of a parent commit object."
msgstr "Cada `-p` indica o id de uma origem do objeto commit."

#. type: Labeled list
#: en/git-commit-tree.txt:53 en/git-fmt-merge-msg.txt:42
#, no-wrap, priority:100
msgid "-m <message>"
msgstr "-m <mensagem>"

#. type: Plain text
#: en/git-commit-tree.txt:56
#, priority:80
msgid "A paragraph in the commit log message. This can be given more than once and each <message> becomes its own paragraph."
msgstr "Um parágrafo no registro log da mensagem de commit. Isto pode ser usado mais de uma vez, e cada <mensagem> se torna o seu próprio parágrafo."

#. type: Labeled list
#: en/git-commit-tree.txt:57 en/git-commit.txt:167 en/git-fmt-merge-msg.txt:51 en/git-merge.txt:85 en/git-notes.txt:140 en/git-tag.txt:170
#, no-wrap, priority:280
msgid "-F <file>"
msgstr "-F <arquivo>"

#. type: Plain text
#: en/git-commit-tree.txt:61
#, priority:80
msgid "Read the commit log message from the given file. Use `-` to read from the standard input. This can be given more than once and the content of each file becomes its own paragraph."
msgstr "Leia a mensagem do registro log do commit de um arquivo informado. Utilize `-` para ler a entrada padrão. Isso pode ser dado mais de uma vez e o conteúdo de cada arquivo se torna seu próprio parágrafo."

#. type: Plain text
#: en/git-commit-tree.txt:69
#, priority:80
msgid "GPG-sign commits. The `keyid` argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space. `--no-gpg-sign` is useful to countermand a `--gpg-sign` option given earlier on the command line."
msgstr "Commits assinados com o GPG O argumento `keyid` é opcional e a predefinição retorna para a identidade de quem fez o commit; se utilizado, deve estar anexado a opção sem espaço. `--no-gpg-sign` is useful to countermand a `--gpg-sign` option given earlier on the command line."

#. type: Title -
#: en/git-commit-tree.txt:71
#, no-wrap, priority:80
msgid "Commit Information"
msgstr "Informação do commit"

#. type: Plain text
#: en/git-commit-tree.txt:74
#, priority:80
msgid "A commit encapsulates:"
msgstr "Os encapsulamentos de um commit:"

#. type: Plain text
#: en/git-commit-tree.txt:76
#, priority:80
msgid "all parent object ids"
msgstr "ids de todos os objetos da origem"

#. type: Plain text
#: en/git-commit-tree.txt:77
#, priority:80
msgid "author name, email and date"
msgstr "nome do autor, email e data"

#. type: Plain text
#: en/git-commit-tree.txt:78
#, priority:80
msgid "committer name and email and the commit time."
msgstr "nome e o endereço de email da pessoa que faz o commit e o momento em que foi feito."

#. type: Plain text
#: en/git-commit-tree.txt:82
#, priority:80
msgid "A commit comment is read from stdin. If a changelog entry is not provided via \"<\" redirection, 'git commit-tree' will just wait for one to be entered and terminated with ^D."
msgstr "Um comentário de um commit é lido no stdin. Se uma entrada no changelog não for informada através do redirecionamento \"<\", o comando `git commit-tree` esperará apenas que um seja inserido e termine com um '^D'."

#. type: Title -
#: en/git-commit-tree.txt:86
#, no-wrap, priority:80
msgid "Discussion"
msgstr "Discussão"

#. type: Title -
#: en/git-commit-tree.txt:91 en/git-commit.txt:571 en/git-config.txt:298 en/git-credential-store.txt:45 en/git-show-ref.txt:174 en/git-submodule.txt:447 en/git-svn.txt:1137
#, no-wrap, priority:280
msgid "FILES"
msgstr "ARQUIVOS"

#. type: Plain text
#: en/git-commit-tree.txt:93
#, priority:80
msgid "/etc/mailname"
msgstr "/etc/mailname"

#. type: Plain text
#: en/git-commit-tree.txt:98
#, ignore-same, priority:80
msgid "linkgit:git-write-tree[1] linkgit:git-commit[1]"
msgstr "linkgit:git-write-tree[1] linkgit:git-commit[1]"

#. type: Title =
#: en/git-commit.txt:2
#, ignore-same, no-wrap, priority:280
msgid "git-commit(1)"
msgstr "git-commit(1)"

#. type: Plain text
#: en/git-commit.txt:7
#, priority:280
msgid "git-commit - Record changes to the repository"
msgstr "git-commit - Grava as alterações feitas no repositório"

#. type: Plain text
#: en/git-commit.txt:19
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"'git commit' [-a | --interactive | --patch] [-s] [-v] [-u<mode>] [--amend]\n"
"\t   [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]\n"
"\t   [-F <file> | -m <msg>] [--reset-author] [--allow-empty]\n"
"\t   [--allow-empty-message] [--no-verify] [-e] [--author=<author>]\n"
"\t   [--date=<date>] [--cleanup=<mode>] [--[no-]status]\n"
"\t   [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]\n"
"\t   [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]\n"
"\t   [--] [<pathspec>...]\n"
msgstr ""
"'git commit' [-a | --interactive | --patch] [-s] [-v] [-u<modo>] [--amend]\n"
"\t   [--dry-run] [(-c | -C | --squash) <commit> | --fixup [(amend|reword):]<commit>)]\n"
"\t   [-F <file> | -m <msg>] [--reset-author] [--allow-empty]\n"
"\t   [--allow-empty-message] [--no-verify] [-e] [--author=<autor>]\n"
"\t   [--date=<data>] [--cleanup=<modo>] [--[no-]status]\n"
"\t   [-i | -o] [--pathspec-from-file=<file> [--pathspec-file-nul]]\n"
"\t   [(--trailer <token>[(=|:)<value>])...] [-S[<keyid>]]\n"
"\t   [--] [<pathspec>...]\n"

#. type: Plain text
#: en/git-commit.txt:28
#, priority:280
msgid "Create a new commit containing the current contents of the index and the given log message describing the changes. The new commit is a direct child of HEAD, usually the tip of the current branch, and the branch is updated to point to it (unless no branch is associated with the working tree, in which case HEAD is \"detached\" as described in linkgit:git-checkout[1])."
msgstr "Cria um novo commit que tenha todos os conteúdos atuais do índice e a mensagem informada no registro log descrevendo as alterações. Um novo commit é um herdeiro direto do `HEAD` que em geral é o topo do ramo atual e o ramo é atualizado para apontar para ele (a menos que nenhum ramo seja associado com a árvore de trabalho onde no caso o `HEAD` esteja desanexado como descrito em linkgit:git-checkout[1])."

#. type: Plain text
#: en/git-commit.txt:30
#, priority:280
msgid "The content to be committed can be specified in several ways:"
msgstr "O conteúdo a ser feito o commit pode ser definido de diferente maneiras:"

#. type: Plain text
#: en/git-commit.txt:34
#, priority:280
msgid "by using linkgit:git-add[1] to incrementally \"add\" changes to the index before using the 'commit' command (Note: even modified files must be \"added\");"
msgstr "ao usar linkgit:git-add[1] para ir incrementando mudanças com \"add\" para o índice antes de usar o comando (Nota: devem ser \"adicionados\" até mesmo os arquivos modificados);"

#. type: Plain text
#: en/git-commit.txt:37
#, priority:280
msgid "by using linkgit:git-rm[1] to remove files from the working tree and the index, again before using the 'commit' command;"
msgstr "ao usar linkgit:git-rm[1] para remover os arquivos da árvore de trabalho e do índice, novamente, antes de usar o comando 'commit';"

#. type: Plain text
#: en/git-commit.txt:43
#, priority:280
msgid "by listing files as arguments to the 'commit' command (without --interactive or --patch switch), in which case the commit will ignore changes staged in the index, and instead record the current content of the listed files (which must already be known to Git);"
msgstr "ao listar os arquivos como argumentos para o comando 'commit' (sem usar as opções --interactive ou --patch), nesse caso, o commit ignorará as alterações organizadas no índice e em vez disso registrará o conteúdo atual dos arquivos listados (que já devem ser informados pelo Git );"

#. type: Plain text
#: en/git-commit.txt:49
#, priority:280
msgid "by using the -a switch with the 'commit' command to automatically \"add\" changes from all known files (i.e. all files that are already listed in the index) and to automatically \"rm\" files in the index that have been removed from the working tree, and then perform the actual commit;"
msgstr "ao usar a opção -a com o comando 'commit' para \"adicionar\" automaticamente as alterações de todos os arquivos informados (ou seja, todos os arquivos que já estão listados no índice) e \"rm\" para remover os arquivos automaticamente da árvore de trabalho e assim executar o commit de fato;"

#. type: Plain text
#: en/git-commit.txt:55
#, priority:280
msgid "by using the --interactive or --patch switches with the 'commit' command to decide one by one which files or hunks should be part of the commit in addition to contents in the index, before finalizing the operation. See the ``Interactive Mode'' section of linkgit:git-add[1] to learn how to operate these modes."
msgstr "usando as opções `--interactive` ou `--patch` com o comando 'commit' para decidir um por um quais os arquivos ou os blocos devem fazer parte do commit além do conteúdo do índice, antes de finalizar a operação. Consulte a seção ``Modo Interativo'' do linkgit:git-add[1] para aprender como operar estes modos."

#. type: Plain text
#: en/git-commit.txt:59
#, priority:280
msgid "The `--dry-run` option can be used to obtain a summary of what is included by any of the above for the next commit by giving the same set of parameters (options and paths)."
msgstr "A opção `--dry-run` pode ser utilizada para obter um resumo do que está incluído em qualquer uma das opções acima para o próximo commit, fornecendo o mesmo conjunto de parâmetros (opções e caminhos)."

#. type: Plain text
#: en/git-commit.txt:62
#, priority:280
msgid "If you make a commit and then find a mistake immediately after that, you can recover from it with 'git reset'."
msgstr "Caso faça um commit e imediatamente encontre um erro logo em seguida, é possível recuperá-lo com o comando 'git reset'."

#. type: Plain text
#: en/git-commit.txt:72
#, priority:280
msgid "Tell the command to automatically stage files that have been modified and deleted, but new files you have not told Git about are not affected."
msgstr "Diz ao comando para preparar automaticamente os arquivos que foram modificados e excluídos, porém os novos arquivos que você não informou ao Git não são afetados."

#. type: Plain text
#: en/git-commit.txt:78
#, priority:280
msgid "Use the interactive patch selection interface to choose which changes to commit. See linkgit:git-add[1] for details."
msgstr "Utilize a interface interativa do patch para selecionar quais as alterações serão aplicadas ao commit. Para mais detalhes, consulte linkgit:git-add[1]."

#. type: Labeled list
#: en/git-commit.txt:79
#, no-wrap, priority:280
msgid "-C <commit>"
msgstr "-C <commit>"

#. type: Labeled list
#: en/git-commit.txt:80
#, no-wrap, priority:280
msgid "--reuse-message=<commit>"
msgstr "--reuse-message=<commit>"

#. type: Plain text
#: en/git-commit.txt:84
#, priority:280
msgid "Take an existing commit object, and reuse the log message and the authorship information (including the timestamp)  when creating the commit."
msgstr "Pega um objeto commit existente e o reutiliza na mensagem do registro log, assim como as informações da autoria (incluindo o registro de data e hora)  durante a criação de um commit."

#. type: Labeled list
#: en/git-commit.txt:85
#, no-wrap, priority:280
msgid "-c <commit>"
msgstr "-c <commit>"

#. type: Labeled list
#: en/git-commit.txt:86
#, no-wrap, priority:280
msgid "--reedit-message=<commit>"
msgstr "--reedit-message=<commit>"

#. type: Plain text
#: en/git-commit.txt:89
#, priority:280
msgid "Like '-C', but with `-c` the editor is invoked, so that the user can further edit the commit message."
msgstr "Como `-C`, porém com `-c` o editor é chamado para que o usuário possa editar ainda mais a mensagem do commit."

#. type: Labeled list
#: en/git-commit.txt:90
#, no-wrap, priority:280
msgid "--fixup=[(amend|reword):]<commit>"
msgstr "--fixup=[(amend|reword):]<commit>"

#. type: Plain text
#: en/git-commit.txt:100
#, priority:280
msgid "Create a new commit which \"fixes up\" `<commit>` when applied with `git rebase --autosquash`. Plain `--fixup=<commit>` creates a \"fixup!\" commit which changes the content of `<commit>` but leaves its log message untouched. `--fixup=amend:<commit>` is similar but creates an \"amend!\" commit which also replaces the log message of `<commit>` with the log message of the \"amend!\" commit.  `--fixup=reword:<commit>` creates an \"amend!\" commit which replaces the log message of `<commit>` with its own log message but makes no changes to the content of `<commit>`."
msgstr "Crie um novo commit que \"corrija\" o `<commit>` quando for aplicado com o comando `git rebase --autosquash`. Somente a opção `-fixup=<commit>` cria um \"fixup!\" (correção) que altera o conteúdo de um `<commit>` contudo deixa a mensagem de registro intacta. `-fixup=amend:<commit>` é semelhante, porém, cria um commit \"amend!\" que também substitui a mensagem do registro do `<commit>` pela mensagem de registro do commit \"amend!\".  A opção `-fixup=reword:<commit>` cria um commit \"amend!\" que substitui a mensagem do registro do `<commit>` por sua própria mensagem de registro, mas não faz quaisquer alterações no conteúdo do `<commit>`."

#. type: Plain text
#: en/git-commit.txt:108
#, priority:280
msgid "The commit created by plain `--fixup=<commit>` has a subject composed of \"fixup!\" followed by the subject line from <commit>, and is recognized specially by `git rebase --autosquash`. The `-m` option may be used to supplement the log message of the created commit, but the additional commentary will be thrown away once the \"fixup!\" commit is squashed into `<commit>` by `git rebase --autosquash`."
msgstr "O commit criado somente com a opção `-fixup=<commit>` tem o assunto da mensagem composto por \"fixup!\" seguido pela linha do assunto do <commit>, também é reconhecido especialmente através do comando `git rebase --autosquash`. A opção `-m` pode ser usada para complementar o registro da mensagem do commit criado, porém o comentário adicional será jogado fora assim que o commit \"fixup!\" for aplicado ao `<commit>` através do comando `git rebase --autosquash`."

#. type: Plain text
#: en/git-commit.txt:118
#, priority:280
msgid "The commit created by `--fixup=amend:<commit>` is similar but its subject is instead prefixed with \"amend!\". The log message of <commit> is copied into the log message of the \"amend!\" commit and opened in an editor so it can be refined. When `git rebase --autosquash` squashes the \"amend!\" commit into `<commit>`, the log message of `<commit>` is replaced by the refined log message from the \"amend!\" commit. It is an error for the \"amend!\" commit's log message to be empty unless `--allow-empty-message` is specified."
msgstr "O commit criado através da opção `--fixup=amend:<commit>` é semelhante porém seu assunto é prefixado com \"amend!\". A mensagem do log do <commit> é copiada para a mensagem de log do commit \"amend!\" e aberto em um editor para que possa ser refinado. Quando o comando `git rebase --autosquash` comprime o commit \"amend!\" no `<commit>`, a mensagem de log do `<commit>` é substituída pela mensagem de log refinada do commit \"amend!\". É considerado um erro quando o registro da mensagem do commit \"amend!\" esteja vazia, a menos que a opção `--allow-empty-message` seja definida."

#. type: Plain text
#: en/git-commit.txt:124
#, priority:280
msgid "`--fixup=reword:<commit>` is shorthand for `--fixup=amend:<commit> --only`. It creates an \"amend!\" commit with only a log message (ignoring any changes staged in the index). When squashed by `git rebase --autosquash`, it replaces the log message of `<commit>` without making any other changes."
msgstr "`--fixup=reword:<commit>` é uma abreviação para `--fixup=amend:<commit> --only`. Isso cria um commit \"amend!\" com apenas uma mensagem log (ignorando quaisquer alterações preparadas no índice). Quando é comprimido através do comando `git rebase --autosquash`, ele substitui a mensagem do log do `<commit>` sem fazer quaisquer outras alterações."

#. type: Plain text
#: en/git-commit.txt:128
#, priority:280
msgid "Neither \"fixup!\" nor \"amend!\" commits change authorship of `<commit>` when applied by `git rebase --autosquash`.  See linkgit:git-rebase[1] for details."
msgstr "Nem os commits \"fixup!\" tampouco os commits \"amend!\" alteram a autoria do `<commit>` quando aplicadas através do comando `git rebase --autosquash`.  Para mais detalhes, consulte linkgit:git-rebase[1]."

#. type: Labeled list
#: en/git-commit.txt:129
#, no-wrap, priority:280
msgid "--squash=<commit>"
msgstr "--squash=<commit>"

#. type: Plain text
#: en/git-commit.txt:135
#, priority:280
msgid "Construct a commit message for use with `rebase --autosquash`.  The commit message subject line is taken from the specified commit with a prefix of \"squash! \".  Can be used with additional commit message options (`-m`/`-c`/`-C`/`-F`). See linkgit:git-rebase[1] for details."
msgstr "Constrói a mensagem de um commit para utilizar com `rebase --autosquash`.  A linha do assunto da mensagem do commit é retirada de um determinado commit com um prefixo \"squash! \".  Pode ser usado com as opções adicionais das mensagens dos commits (`-m`/`-c`/`-C`/`-F`). Para mais detalhes, consulte linkgit:git-rebase[1]."

#. type: Labeled list
#: en/git-commit.txt:136
#, ignore-same, no-wrap, priority:280
msgid "--reset-author"
msgstr "--reset-author"

#. type: Plain text
#: en/git-commit.txt:141
#, priority:280
msgid "When used with -C/-c/--amend options, or when committing after a conflicting cherry-pick, declare that the authorship of the resulting commit now belongs to the committer. This also renews the author timestamp."
msgstr "Quando utilizado com as opções '-C/-c/--amend', ou ao fazer o commit após uma escolha seletiva conflitante, declare que a autoria do commit resultante agora pertence a quem fez o commit. Isso também renova o registro de data e hora do autor."

#. type: Labeled list
#: en/git-commit.txt:142 en/git-status.txt:28 en/git-symbolic-ref.txt:45
#, ignore-same, no-wrap, priority:280
msgid "--short"
msgstr "--short"

#. type: Plain text
#: en/git-commit.txt:145
#, priority:280
msgid "When doing a dry-run, give the output in the short-format. See linkgit:git-status[1] for details. Implies `--dry-run`."
msgstr "Ao executar um ensaio, informe a saída no formato curto. Para mais detalhes, consulte linkgit:git-status[1]. Implica no uso da opção `--dry-run`."

#. type: Labeled list
#: en/git-commit.txt:146 en/git-status.txt:32
#, ignore-same, no-wrap, priority:280
msgid "--branch"
msgstr "--branch"

#. type: Plain text
#: en/git-commit.txt:148 en/git-status.txt:34
#, priority:280
msgid "Show the branch and tracking info even in short-format."
msgstr "Exibe o ramo e a informação de rastreio quando estiver em formato curto."

#. type: Plain text
#: en/git-commit.txt:153
#, priority:280
msgid "When doing a dry-run, give the output in a porcelain-ready format. See linkgit:git-status[1] for details. Implies `--dry-run`."
msgstr "Ao executar um ensaio, informe a saída no formato porcelana. Para mais detalhes, consulte linkgit:git-status[1]. Implica no uso da opção `--dry-run`."

#. type: Labeled list
#: en/git-commit.txt:154 en/git-describe.txt:88 en/git-ls-tree.txt:52 en/git-status.txt:47
#, ignore-same, no-wrap, priority:280
msgid "--long"
msgstr "--long"

#. type: Plain text
#: en/git-commit.txt:157
#, priority:280
msgid "When doing a dry-run, give the output in the long-format.  Implies `--dry-run`."
msgstr "Ao executar um ensaio, informe a saída no formato curto.  Implica no uso da opção `--dry-run`."

#. type: Labeled list
#: en/git-commit.txt:159 en/git-config.txt:230 en/git-grep.txt:177
#, ignore-same, no-wrap, priority:280
msgid "--null"
msgstr "--null"

#. type: Plain text
#: en/git-commit.txt:166
#, priority:280
msgid "When showing `short` or `porcelain` status output, print the filename verbatim and terminate the entries with NUL, instead of LF.  If no format is given, implies the `--porcelain` output format.  Without the `-z` option, filenames with \"unusual\" characters are quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1])."
msgstr "Ao exibir a condição de saída `short` ou `porcelain`, imprima o nome do arquivo literalmente e termine as entradas com um `NUL`, em vez do `LF`.  Caso nenhum formato de saída seja informado, implica no uso da opção `--porcelain`.  Sem a opção `-z`, os nomes dos arquivos com caracteres \"incomuns\" serão citados conforme explicado nas variáveis de configuração `core.quotePath` (consulte linkgit:git-config[1])."

#. type: Labeled list
#: en/git-commit.txt:168 en/git-merge.txt:86 en/git-notes.txt:141 en/git-tag.txt:171
#, no-wrap, priority:280
msgid "--file=<file>"
msgstr "--file=<arquivo>"

#. type: Plain text
#: en/git-commit.txt:171
#, priority:280
msgid "Take the commit message from the given file.  Use '-' to read the message from the standard input."
msgstr "Pega a mensagem de commit vindo de um determinado arquivo.  Utilize '-' para ler a mensagem da entrada padrão."

#. type: Labeled list
#: en/git-commit.txt:172
#, no-wrap, priority:280
msgid "--author=<author>"
msgstr "--author=<autor>"

#. type: Plain text
#: en/git-commit.txt:178
#, priority:280
msgid "Override the commit author. Specify an explicit author using the standard `A U Thor <author@example.com>` format. Otherwise <author> is assumed to be a pattern and is used to search for an existing commit by that author (i.e. rev-list --all -i --author=<author>); the commit author is then copied from the first such commit found."
msgstr "Sobrescreva o commit do autor. Defina o autor de forma explicita usando o formato padrão `Chiquinha <chiquinha@examplo.com>`. Caso contrário, assume-se que a predefinição seja <autor> que é usado para localizar um commit já existente feito através deste autor (ou seja, `rev-list --all -i --author=<autor>`); o autor do commit é copiado a partir do primeiro commit que for encontrado."

#. type: Labeled list
#: en/git-commit.txt:179
#, no-wrap, priority:280
msgid "--date=<date>"
msgstr "--date=<data>"

#. type: Plain text
#: en/git-commit.txt:181
#, priority:280
msgid "Override the author date used in the commit."
msgstr "Substitua a data do autor que foi utilizada no commit."

#. type: Labeled list
#: en/git-commit.txt:182 en/git-merge.txt:69 en/git-notes.txt:132 en/git-svn.txt:468 en/git-tag.txt:162
#, no-wrap, priority:280
msgid "-m <msg>"
msgstr "-m <msg>"

#. type: Labeled list
#: en/git-commit.txt:183 en/git-notes.txt:133 en/git-svn.txt:469 en/git-tag.txt:163
#, no-wrap, priority:280
msgid "--message=<msg>"
msgstr "--message=<msg>"

#. type: Plain text
#: en/git-commit.txt:187
#, priority:280
msgid "Use the given <msg> as the commit message.  If multiple `-m` options are given, their values are concatenated as separate paragraphs."
msgstr "Usa <msg> como uma mensagem de commit.  Caso múltiplas opções `-m` sejam usadas, o seu conteúdo será disposto em parágrafos separados."

#. type: Plain text
#: en/git-commit.txt:189
#, priority:280
msgid "The `-m` option is mutually exclusive with `-c`, `-C`, and `-F`."
msgstr "A opção `-m` é utilizado em conjunto exclusivamente com `-c`, `-C` e `-F`."

#. type: Labeled list
#: en/git-commit.txt:190
#, no-wrap, priority:280
msgid "-t <file>"
msgstr "-t <arquivo>"

#. type: Labeled list
#: en/git-commit.txt:191
#, no-wrap, priority:280
msgid "--template=<file>"
msgstr "--template=<arquivo>"

#. type: Plain text
#: en/git-commit.txt:200
#, priority:280
msgid "When editing the commit message, start the editor with the contents in the given file.  The `commit.template` configuration variable is often used to give this option implicitly to the command.  This mechanism can be used by projects that want to guide participants with some hints on what to write in the message in what order.  If the user exits the editor without editing the message, the commit is aborted.  This has no effect when a message is given by other means, e.g. with the `-m` or `-F` options."
msgstr "Ao editar a mensagem do commit, inicie o editor com o conteúdo do arquivo informado.  A variável de configuração `commit.template` é frequentemente utilizada para fornecer esta opção de forma implícita ao comando.  Esse mecanismo pode ser utilizado por projetos que desejam orientar os participantes com algumas dicas sobre o que escrever na mensagem e em qual ordem.  Aborte o commit caso o usuário saia do editor sem editar a mensagem.  Não qualquer efeito quando uma mensagem é dada por outros meios, por exemplo, com as opções `-m` ou `-F`."

#. type: Labeled list
#: en/git-commit.txt:203 en/git-interpret-trailers.txt:84
#, no-wrap, priority:280
msgid "--trailer <token>[(=|:)<value>]"
msgstr "--trailer <token>[(=|:)<valor>]"

#. type: Plain text
#: en/git-commit.txt:213
#, priority:280
msgid "Specify a (<token>, <value>) pair that should be applied as a trailer. (e.g. `git commit --trailer \"Signed-off-by:C O Mitter \\ <committer@example.com>\" --trailer \"Helped-by:C O Mitter \\ <committer@example.com>\"` will add the \"Signed-off-by\" trailer and the \"Helped-by\" trailer to the commit message.)  The `trailer.*` configuration variables (linkgit:git-interpret-trailers[1]) can be used to define if a duplicated trailer is omitted, where in the run of trailers each trailer would appear, and other details."
msgstr "Determine um par (<token>, <valor>) que deve ser aplicado como um caracteres de resposta. (por exemplo, `git commit --trailer \"Auxiliado por:C O Mitter \\ <committer@example.com>\" --trailer \"Auxiliado por:C O Mitter \\ <committer@example.com>\"` será atrelado o \"Auxiliado por\" e o \"Auxiliado por\" à mensagem do commit.)  A variável de configuração do `trailer.*` (linkgit:git-interpret-trailers[1]) pode ser usado para definir se um atrelado duplicado será omitido, onde na rodada de atrelados cada atrelado apareceria em conjunto com outros detalhes."

#. type: Labeled list
#: en/git-commit.txt:215 en/git-push.txt:417 en/merge-options.txt:135
#, ignore-same, no-wrap, priority:280
msgid "--[no-]verify"
msgstr "--[no-]verify"

#. type: Plain text
#: en/git-commit.txt:219
#, priority:280
msgid "By default, the pre-commit and commit-msg hooks are run.  When any of `--no-verify` or `-n` is given, these are bypassed.  See also linkgit:githooks[5]."
msgstr "É predefinido que os ganchos pre-commit e commit-msg sejam executados.  Quando qualquer uma das opções `--no-verify` ou `-n` são usadas, elas são ignoradas.  Consulte também linkgit:githooks[5]."

#. type: Plain text
#: en/git-commit.txt:225
#, priority:280
msgid "Usually recording a commit that has the exact same tree as its sole parent commit is a mistake, and the command prevents you from making such a commit.  This option bypasses the safety, and is primarily for use by foreign SCM interface scripts."
msgstr "Geralmente, ao gravar um commit que tenha exatamente a mesma árvore como se fosse a sua origem, é um erro, o comando impede que você faça um commit desta natureza.  Esta opção ignora a segurança e deve ser utilizada principalmente por scripts SCM externos."

#. type: Plain text
#: en/git-commit.txt:231
#, priority:280
msgid "Like --allow-empty this command is primarily for use by foreign SCM interface scripts. It allows you to create a commit with an empty commit message without using plumbing commands like linkgit:git-commit-tree[1]."
msgstr "Como a opção `--allow-empty`, este comando é principalmente para uso por scripts de interface SCM externos. Permite criar um commit com uma mensagem vazia sem usar os comandos de \"encanamento\" como linkgit:git-commit-tree[1]."

#. type: Plain text
#: en/git-commit.txt:236
#, priority:280
msgid "This option determines how the supplied commit message should be cleaned up before committing.  The '<mode>' can be `strip`, `whitespace`, `verbatim`, `scissors` or `default`."
msgstr "Esta opção determina como a mensagem que foi informada ao commit deve ser limpa antes do commit ser feito.  O '<modo>' pode ser `strip`, `whitespace`, `verbatim`, `scissors` ou `default`."

#. type: Labeled list
#: en/git-commit.txt:238
#, no-wrap, priority:280
msgid "strip"
msgstr "strip (tirar/remover)"

#. type: Plain text
#: en/git-commit.txt:241
#, priority:280
msgid "Strip leading and trailing empty lines, trailing whitespace, commentary and collapse consecutive empty lines."
msgstr "Retira as linhas vazias no inicio e no final, e os rastros dos espaços finais, os comentários e reduza as linhas vazias consecutivamente."

#. type: Labeled list
#: en/git-commit.txt:241
#, no-wrap, priority:280
msgid "whitespace"
msgstr "whitespace (espaço)"

#. type: Plain text
#: en/git-commit.txt:243
#, priority:280
msgid "Same as `strip` except #commentary is not removed."
msgstr "O mesmo que `strip`, exceto que o `#comentário` não é removido."

#. type: Labeled list
#: en/git-commit.txt:243
#, no-wrap, priority:280
msgid "verbatim"
msgstr "verbatim (íntegra)"

#. type: Plain text
#: en/git-commit.txt:245
#, priority:280
msgid "Do not change the message at all."
msgstr "Não altera a mensagem de forma alguma."

#. type: Labeled list
#: en/git-commit.txt:245
#, no-wrap, priority:280
msgid "scissors"
msgstr "scissors (tesouras)"

#. type: Plain text
#: en/git-commit.txt:249
#, priority:280
msgid "Same as `whitespace` except that everything from (and including)  the line found below is truncated, if the message is to be edited.  \"`#`\" can be customized with core.commentChar."
msgstr "O mesmo que `whitespace` (espaço), exceto que tudo incluindo a linha encontrada abaixo seja truncada caso a mensagem precise ser editada.  \"`#`\" pode ser personalizada com `core.commentChar`."

#. type: Plain text
#: en/git-commit.txt:251
#, no-wrap, priority:280
msgid "# ------------------------ >8 ------------------------\n"
msgstr "# ------------------------ >8 ------------------------\n"

#. type: Plain text
#: en/git-commit.txt:255
#, priority:280
msgid "Same as `strip` if the message is to be edited.  Otherwise `whitespace`."
msgstr "O mesmo que `strip` caso a mensagem esteja para ser editada.  Caso contrário, `whitespace` (espaço)."

#. type: Plain text
#: en/git-commit.txt:259
#, priority:280
msgid "The default can be changed by the `commit.cleanup` configuration variable (see linkgit:git-config[1])."
msgstr "A predefinição pode ser alterada através da variável de configuração `commit.cleanup` (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-commit.txt:266
#, priority:280
msgid "The message taken from file with `-F`, command line with `-m`, and from commit object with `-C` are usually used as the commit log message unmodified. This option lets you further edit the message taken from these sources."
msgstr "A mensagem obtida do arquivo com a opção `-F`, da linha de comando com a opção `-m` e do objeto commit com `C` é normalmente utilizada como a mensagem de registro log do commit não modificado. Esta opção permite editar ainda mais a mensagem retirada destas fontes."

#. type: Labeled list
#: en/git-commit.txt:267 en/git-revert.txt:66 en/merge-options.txt:20
#, ignore-same, no-wrap, priority:280
msgid "--no-edit"
msgstr "--no-edit"

#. type: Plain text
#: en/git-commit.txt:271
#, priority:280
msgid "Use the selected commit message without launching an editor.  For example, `git commit --amend --no-edit` amends a commit without changing its commit message."
msgstr "Utilize a mensagem do commit selecionado sem rodar um editor.  Por exemplo, `git commit --amend --no-edit` altera um commit sem alterar o conteúdo da mensagem do mesmo."

#. type: Labeled list
#: en/git-commit.txt:272
#, ignore-same, no-wrap, priority:280
msgid "--amend"
msgstr "--amend"

#. type: Plain text
#: en/git-commit.txt:282
#, priority:280
msgid "Replace the tip of the current branch by creating a new commit. The recorded tree is prepared as usual (including the effect of the `-i` and `-o` options and explicit pathspec), and the message from the original commit is used as the starting point, instead of an empty message, when no other message is specified from the command line via options such as `-m`, `-F`, `-c`, etc.  The new commit has the same parents and author as the current one (the `--reset-author` option can countermand this)."
msgstr "Substitua o cume do ramo atual criando um novo commit. A árvore gravada é preparada como de costume (incluindo a aplicação das opções `-i` e `-o`; e `pathspec` explicitamente), a mensagem do commit original é utilizada como um ponto de partida, em vez de uma mensagem vazia. Quando nenhuma outra mensagem é utilizada na linha de comando através de opções como `-m`, `-F`, `-c`, etc. O novo commit possuirá as mesmas origens e seu respectivo autor como o atual (a opção `--reset-author` pode ser utilizada para mudar isso)."

#. type: Plain text
#: en/git-commit.txt:285
#, priority:280
msgid "It is a rough equivalent for:"
msgstr "É grosseiramente um equivalente para:"

#. type: delimited block -
#: en/git-commit.txt:289
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"\t$ git reset --soft HEAD^\n"
"\t$ ... do something else to come up with the right tree ...\n"
"\t$ git commit -c ORIG_HEAD\n"
msgstr ""
"\t$ git reset --soft HEAD^\n"
"\t$ ... faça qualquer outra coisa para encontrar a árvore certa ...\n"
"\t$ git commit -c ORIG_HEAD\n"

#. type: Plain text
#: en/git-commit.txt:292
#, priority:280
msgid "but can be used to amend a merge commit."
msgstr "mas pode ser utilizado para corrigir a mesclagem de um commit."

#. type: Plain text
#: en/git-commit.txt:297
#, priority:280
msgid "You should understand the implications of rewriting history if you amend a commit that has already been published.  (See the \"RECOVERING FROM UPSTREAM REBASE\" section in linkgit:git-rebase[1].)"
msgstr "Você deve entender as implicações de sobrescrever o histórico caso corrija um commit que já tenha sido publicado.  (Consulte a seção \"RECUPERANDO DO UPSTREAM REBASE\" no linkgit:git-rebase[1].)"

#. type: Labeled list
#: en/git-commit.txt:298
#, ignore-same, no-wrap, priority:280
msgid "--no-post-rewrite"
msgstr "--no-post-rewrite"

#. type: Plain text
#: en/git-commit.txt:300
#, priority:280
msgid "Bypass the post-rewrite hook."
msgstr "Ignore o gancho de reescrita de postagem."

#. type: Labeled list
#: en/git-commit.txt:302
#, ignore-same, no-wrap, priority:280
msgid "--include"
msgstr "--include"

#. type: Plain text
#: en/git-commit.txt:307
#, priority:280
msgid "Before making a commit out of staged contents so far, stage the contents of paths given on the command line as well.  This is usually not what you want unless you are concluding a conflicted merge."
msgstr "Antes de fazer um commit dos conteúdos preparados até o momento, prepare também o conteúdo dos caminhos utilizados na linha de comando.  Isso geralmente não é o que você quer, a menos que esteja concluindo um mesclagem conflitante."

#. type: Labeled list
#: en/git-commit.txt:309
#, ignore-same, no-wrap, priority:280
msgid "--only"
msgstr "--only"

#. type: Plain text
#: en/git-commit.txt:321
#, priority:280
msgid "Make a commit by taking the updated working tree contents of the paths specified on the command line, disregarding any contents that have been staged for other paths. This is the default mode of operation of 'git commit' if any paths are given on the command line, in which case this option can be omitted.  If this option is specified together with `--amend`, then no paths need to be specified, which can be used to amend the last commit without committing changes that have already been staged. If used together with `--allow-empty` paths are also not required, and an empty commit will be created."
msgstr "Faça um commit utilizando o conteúdo atualizado da árvore de trabalho dos caminhos definidos na linha de comando, desconsiderando qualquer outro conteúdo que tenha sido preparado para os outros caminhos. Essa é a maneira predefinida de operação do comando `git commit` caso algum outro caminho tenha sido informado na linha de comando; nesse caso, essa opção poderá ser omitida.  Caso esta opção seja utilizada junto com `--amend`, nenhum outro caminho precisará ser informado, o que pode ser utilizado para alterar o último commit sem confirmar as alterações que já foram preparadas. Se utilizado junto com a opção`--allow empty` também não são necessários e um commit vazio será criado."

#. type: Labeled list
#: en/git-commit.txt:335 en/git-status.txt:58
#, no-wrap, priority:280
msgid "-u[<mode>]"
msgstr "-u[<modo>]"

#. type: Labeled list
#: en/git-commit.txt:336 en/git-status.txt:59
#, no-wrap, priority:280
msgid "--untracked-files[=<mode>]"
msgstr "--untracked-files[=<modo>]"

#. type: Plain text
#: en/git-commit.txt:338 en/git-status.txt:61
#, priority:280
msgid "Show untracked files."
msgstr "Exibe arquivos sem rastreamento."

#. type: Plain text
#: en/git-commit.txt:343
#, priority:280
msgid "The mode parameter is optional (defaults to 'all'), and is used to specify the handling of untracked files; when -u is not used, the default is 'normal', i.e. show untracked files and directories."
msgstr "O parâmetro `<modo>` é opcional, a predefinição retorna para `all` (todos), sendo utilizado para determinar a manipulação dos arquivos que não foram rastreados; quando a opção `-u` não é utilizada a predefinição retorna para `normal`, ou seja, exibe os arquivos e diretórios que não foram rastreados."

#. type: Plain text
#: en/git-commit.txt:345 en/git-status.txt:68 en/git-status.txt:110
#, priority:280
msgid "The possible options are:"
msgstr "As opções disponíveis são:"

#. type: Plain text
#: en/git-commit.txt:347
#, no-wrap, priority:280
msgid "'no'     - Show no untracked files\n"
msgstr "'no'     - Não exibe qualquer arquivo que não tenham sido rastreados\n"

#. type: Plain text
#: en/git-commit.txt:348
#, no-wrap, priority:280
msgid "'normal' - Shows untracked files and directories\n"
msgstr "'normal' - Exibe todos os arquivo e diretórios que não foram rastreados\n"

#. type: Plain text
#: en/git-commit.txt:349 en/git-status.txt:72
#, no-wrap, priority:280
msgid "'all'    - Also shows individual files in untracked directories.\n"
msgstr "'all'    - Exibe todos os arquivos individualmente nos diretórios não rastreados.\n"

#. type: Plain text
#: en/git-commit.txt:352 en/git-status.txt:85
#, priority:280
msgid "The default can be changed using the status.showUntrackedFiles configuration variable documented in linkgit:git-config[1]."
msgstr "A predefinição pode ser alterada utilizando a variável de configuração `status.showUntrackedFiles` documentada em linkgit:git-config[1]."

#. type: Plain text
#: en/git-commit.txt:364
#, priority:280
msgid "Show unified diff between the HEAD commit and what would be committed at the bottom of the commit message template to help the user describe the commit by reminding what changes the commit has.  Note that this diff output doesn't have its lines prefixed with '#'. This diff will not be a part of the commit message. See the `commit.verbose` configuration variable in linkgit:git-config[1]."
msgstr "Exibe as diferenças unificadas entre o commit no `HEAD` e o que seria feito o commit na parte inferior do modelo da mensagem do commit para ajudar o usuário a descrever o commit lembrando quais as alterações que o commit possui.  Note que esta saída \"diff\" não tem suas linhas prefixadas com '#'. Este \"diff\" não fará parte da mensagem do commit. Consulte a configuração da variável `commit.verbose` em linkgit:git-config[1]."

#. type: Plain text
#: en/git-commit.txt:368
#, priority:280
msgid "If specified twice, show in addition the unified diff between what would be committed and the worktree files, i.e. the unstaged changes to tracked files."
msgstr "Caso seja utilizado duas vezes exibirá além do diferencial unificado entre o que seriam feitos os commits e os arquivos da árvore de trabalho, ou seja, as alterações não-estáticas nos arquivos rastreados."

#. type: Plain text
#: en/git-commit.txt:372
#, priority:280
msgid "Suppress commit summary message."
msgstr "Suprimir a mensagem de resumo do commit."

#. type: Plain text
#: en/git-commit.txt:377
#, priority:280
msgid "Do not create a commit, but show a list of paths that are to be committed, paths with local changes that will be left uncommitted and paths that are untracked."
msgstr "Não crie um commit porém exiba uma lista dos caminhos onde os commits devem ser feitos, os caminhos com as alterações locais onde os commits serão deixados de lado e os caminhos que não serão rastreados."

#. type: Labeled list
#: en/git-commit.txt:378
#, ignore-same, no-wrap, priority:280
msgid "--status"
msgstr "--status"

#. type: Plain text
#: en/git-commit.txt:383
#, priority:280
msgid "Include the output of linkgit:git-status[1] in the commit message template when using an editor to prepare the commit message.  Defaults to on, but can be used to override configuration variable commit.status."
msgstr "Inclua a saída do linkgit:git-status[1] na mensagem do commit ao usar um editor para preparar a mensagem do commit.  A predefinição retorna para ligado, porém pode ser utilizado para substituir a variável de configuração `commit.status`."

#. type: Labeled list
#: en/git-commit.txt:384
#, ignore-same, no-wrap, priority:280
msgid "--no-status"
msgstr "--no-status"

#. type: Plain text
#: en/git-commit.txt:388
#, priority:280
msgid "Do not include the output of linkgit:git-status[1] in the commit message template when using an editor to prepare the default commit message."
msgstr "Não inclua a saída do linkgit:git-status[1] no modelo da mensagem do commit ao utilizar um editor para preparar a mensagem predefinida do commit."

#. type: Plain text
#: en/git-commit.txt:406
#, priority:280
msgid "When pathspec is given on the command line, commit the contents of the files that match the pathspec without recording the changes already added to the index. The contents of these files are also staged for the next commit on top of what have been staged before."
msgstr "Quando o `pathspec` é utilizado na linha de comando, faça o commit do conteúdo dos arquivos que correspondem ao `pathspec` sem registrar as alterações já adicionadas ao índice. O conteúdo desses arquivos também é preparado para o próximo commit, além do que já foi preparado anteriormente."

#. type: Plain text
#: en/git-commit.txt:422
#, priority:280
msgid "When recording your own work, the contents of modified files in your working tree are temporarily stored to a staging area called the \"index\" with 'git add'.  A file can be reverted back, only in the index but not in the working tree, to that of the last commit with `git restore --staged <file>`, which effectively reverts 'git add' and prevents the changes to this file from participating in the next commit.  After building the state to be committed incrementally with these commands, `git commit` (without any pathname parameter) is used to record what has been staged so far.  This is the most basic form of the command.  An example:"
msgstr "Ao gravar o seu próprio trabalho, o conteúdo dos arquivos modificados na sua árvore de trabalho é temporariamente armazenado em uma área intermediária chamada \"índice\" com `git add`.  Um arquivo pode ser revertido para o último commit com `git restore staged` apenas no índice mas não na árvore de trabalho, que reverte efetivamente o `git add` e impede que as alterações nesse arquivo façam parte do próximo commit.  Após criar a condição a ser feito o commit incrementalmente com esses comandos, o `git commit` (sem nenhum parâmetro `pathname`) é utilizado para registrar o que foi preparado até o momento.  Essa é a forma mais básica do comando.  Um exemplo:"

#. type: delimited block -
#: en/git-commit.txt:428
#, no-wrap, priority:280
msgid ""
"$ edit hello.c\n"
"$ git rm goodbye.c\n"
"$ git add hello.c\n"
"$ git commit\n"
msgstr ""
"$ edit hello.c\n"
"$ git rm goodbye.c\n"
"$ git add hello.c\n"
"$ git commit\n"

#. type: Plain text
#: en/git-commit.txt:436
#, priority:280
msgid "Instead of staging files after each individual change, you can tell `git commit` to notice the changes to the files whose contents are tracked in your working tree and do corresponding `git add` and `git rm` for you.  That is, this example does the same as the earlier example if there is no other change in your working tree:"
msgstr "Em vez de disponibilizar arquivos após cada alteração individual, você pode dizer ao `git commit` para observar as alterações nos arquivos cujo conteúdo é rastreado na sua árvore de trabalho e faz os comandos correspondentes `git add` e `git rm` para você.  Ou seja, este exemplo faz o mesmo que o exemplo anterior, se não houver outra alteração na sua árvore de trabalho:"

#. type: delimited block -
#: en/git-commit.txt:441
#, no-wrap, priority:280
msgid ""
"$ edit hello.c\n"
"$ rm goodbye.c\n"
"$ git commit -a\n"
msgstr ""
"$ edit hello.c\n"
"$ rm goodbye.c\n"
"$ git commit -a\n"

#. type: Plain text
#: en/git-commit.txt:446
#, priority:280
msgid "The command `git commit -a` first looks at your working tree, notices that you have modified hello.c and removed goodbye.c, and performs necessary `git add` and `git rm` for you."
msgstr "O comando `git commit -a` primeiro olha para a sua árvore de trabalho, nota que você modificou o hello.c e removeu o goodbye.c e executa os comandos necessários `git add` e `git rm` para você."

#. type: Plain text
#: en/git-commit.txt:451
#, priority:280
msgid "After staging changes to many files, you can alter the order the changes are recorded in, by giving pathnames to `git commit`.  When pathnames are given, the command makes a commit that only records the changes made to the named paths:"
msgstr "Após preparar as mudanças em muitos arquivos, você pode alterar a ordem em que as alterações são registradas ao encaminhar `pathnames` para `git commit`.  Quando `pathnames` são utilizados, o comando faz um commit que registra apenas as alterações feitas nos caminhos informados:"

#. type: delimited block -
#: en/git-commit.txt:457
#, no-wrap, priority:280
msgid ""
"$ edit hello.c hello.h\n"
"$ git add hello.c hello.h\n"
"$ edit Makefile\n"
"$ git commit Makefile\n"
msgstr ""
"$ edit hello.c hello.h\n"
"$ git add hello.c hello.h\n"
"$ edit Makefile\n"
"$ git commit Makefile\n"

#. type: Plain text
#: en/git-commit.txt:464
#, priority:280
msgid "This makes a commit that records the modification to `Makefile`.  The changes staged for `hello.c` and `hello.h` are not included in the resulting commit.  However, their changes are not lost -- they are still staged and merely held back.  After the above sequence, if you do:"
msgstr "Isso faz um commit que registra a modificação no arquivo `Makefile`.  As mudanças preparadas para `hello.c` e `hello.h` não são incluídas no commit resultante.  No entanto as suas mudanças não se perdem, elas ainda são preparadas e meramente retidas.  Após a sequência acima, se fizer:"

#. type: delimited block -
#: en/git-commit.txt:467 en/git-commit.txt:493
#, no-wrap, priority:280
msgid "$ git commit\n"
msgstr "$ git commit\n"

#. type: Plain text
#: en/git-commit.txt:471
#, priority:280
msgid "this second commit would record the changes to `hello.c` and `hello.h` as expected."
msgstr "este segundo commit registraria as alterações em `hello.c` e `hello.h` conforme o esperado."

#. type: Plain text
#: en/git-commit.txt:479
#, priority:280
msgid "After a merge (initiated by 'git merge' or 'git pull') stops because of conflicts, cleanly merged paths are already staged to be committed for you, and paths that conflicted are left in unmerged state.  You would have to first check which paths are conflicting with 'git status' and after fixing them manually in your working tree, you would stage the result as usual with 'git add':"
msgstr "Depois que uma mesclagem (iniciada pelo comando `git merge` ou `git pull`) é interrompida por causa de conflitos, os caminhos mesclados de maneira limpa já são preparados para serem confirmados para você, e os caminhos em conflito são deixados num estado inalterado.  Você precisaria primeiro verificar quais são os caminhos que estão em conflito com o comando `git status` e após corrigi-los manualmente em sua árvore de trabalho, você prepararia o resultado como de costume com o comando `git add`:"

#. type: delimited block -
#: en/git-commit.txt:485
#, no-wrap, priority:280
msgid ""
"$ git status | grep unmerged\n"
"unmerged: hello.c\n"
"$ edit hello.c\n"
"$ git add hello.c\n"
msgstr ""
"$ git status | grep unmerged\n"
"unmerged: hello.c\n"
"$ edit hello.c\n"
"$ git add hello.c\n"

#. type: Plain text
#: en/git-commit.txt:490
#, priority:280
msgid "After resolving conflicts and staging the result, `git ls-files -u` would stop mentioning the conflicted path.  When you are done, run `git commit` to finally record the merge:"
msgstr "Após resolver os conflitos e organizar o resultado, o `git ls-files -u` deixaria de mencionar o caminho conflitado.  Quando terminar, execute `git commit` para finalmente registrar a mesclagem:"

#. type: Plain text
#: en/git-commit.txt:501
#, priority:280
msgid "As with the case to record your own changes, you can use `-a` option to save typing.  One difference is that during a merge resolution, you cannot use `git commit` with pathnames to alter the order the changes are committed, because the merge should be recorded as a single commit.  In fact, the command refuses to run when given pathnames (but see `-i` option)."
msgstr "Como no caso de registrar as suas próprias alterações, você pode usar a opção `-a` para salvar a digitação.  Uma diferença é que durante uma resolução da mesclagem, você não pode utilizar o comando `git commit` com o `pathnames` para alterar a ordem onde as alterações dos commits foram realizados porque a mesclagem deve ser registrada como um commit.  De fato, o comando se recusa a ser executado quando recebem os nomes do caminho (consulte a opção `-i`)."

#. type: Title -
#: en/git-commit.txt:503
#, no-wrap, priority:280
msgid "COMMIT INFORMATION"
msgstr "INFORMAÇÃO DO COMMIT"

#. type: Plain text
#: en/git-commit.txt:507
#, priority:280
msgid "Author and committer information is taken from the following environment variables, if set:"
msgstr "A informação do autor e de quem fez o commit são extraídas das seguintes variáveis do ambiente, se definido:"

#. type: Plain text
#: en/git-commit.txt:514
#, no-wrap, priority:280
msgid ""
"\tGIT_AUTHOR_NAME\n"
"\tGIT_AUTHOR_EMAIL\n"
"\tGIT_AUTHOR_DATE\n"
"\tGIT_COMMITTER_NAME\n"
"\tGIT_COMMITTER_EMAIL\n"
"\tGIT_COMMITTER_DATE\n"
msgstr ""
"\tGIT_AUTHOR_NAME\n"
"\tGIT_AUTHOR_EMAIL\n"
"\tGIT_AUTHOR_DATE\n"
"\tGIT_COMMITTER_NAME\n"
"\tGIT_COMMITTER_EMAIL\n"
"\tGIT_COMMITTER_DATE\n"

#. type: Plain text
#: en/git-commit.txt:516
#, priority:280
msgid "(nb \"<\", \">\" and \"\\n\"s are stripped)"
msgstr "(nb \"<\", \">\" e \"\\n\"s serão removidos)"

#. type: Plain text
#: en/git-commit.txt:522
#, priority:280
msgid "The author and committer names are by convention some form of a personal name (that is, the name by which other humans refer to you), although Git does not enforce or require any particular form. Arbitrary Unicode may be used, subject to the constraints listed above. This name has no effect on authentication; for that, see the `credential.username` variable in linkgit:git-config[1]."
msgstr "É de praxe utilizar um nome pessoal como sendo os nomes dos autores e de quem fez os commits (isto é, um nome pela qual outros humanos usam para se referir a você), no entanto o Git não impõem ou requer qualquer forma em particular. Um unicode arbitrário pode ser utilizado e é sujeito às restrições listadas acima. Este nome não tem nenhum efeito na autenticação; para isso consulte a variável `credential.username` em linkgit:git-config[1]."

#. type: Plain text
#: en/git-commit.txt:529
#, priority:280
msgid "In case (some of) these environment variables are not set, the information is taken from the configuration items `user.name` and `user.email`, or, if not present, the environment variable EMAIL, or, if that is not set, system user name and the hostname used for outgoing mail (taken from `/etc/mailname` and falling back to the fully qualified hostname when that file does not exist)."
msgstr "Caso (algumas dessas) variáveis de ambiente não sejam definidas, as informações são obtidas dos itens da configuração `user.name` e `user.email` ou caso não haja, na variável de ambiente `EMAIL` ou se também não existir ou tenha sido definida, o nome de usuário do sistema e nome do host (hostname) utilizado pelo email enviado (extraído de `/etc/mailname` e retornando ao nome completo do host quando esse arquivo não existir)."

#. type: Plain text
#: en/git-commit.txt:533
#, priority:280
msgid "The `author.name` and `committer.name` and their corresponding email options override `user.name` and `user.email` if set and are overridden themselves by the environment variables."
msgstr "O `author.name` e `committer.name` e suas respectivas opções de email correspondentes substituem o `user.name` e `user.email` caso sejam configurados e são substituídos pelas variáveis do ambiente."

#. type: Plain text
#: en/git-commit.txt:536
#, priority:280
msgid "The typical usage is to set just the `user.name` and `user.email` variables; the other options are provided for more complex use cases."
msgstr "O uso típico é definir apenas as variáveis `user.name` e `user.email`; as outras opções são informadas para casos de uso mais complexos."

#. type: Plain text
#: en/git-commit.txt:550
#, priority:280
msgid "Though not required, it's a good idea to begin the commit message with a single short (less than 50 character) line summarizing the change, followed by a blank line and then a more thorough description.  The text up to the first blank line in a commit message is treated as the commit title, and that title is used throughout Git.  For example, linkgit:git-format-patch[1] turns a commit into email, and it uses the title on the Subject line and the rest of the commit in the body."
msgstr "Embora não seja obrigatório, é uma boa ideia iniciar a mensagem do commit com uma única linha curta (com menos de 50 caracteres) resumindo a alteração, seguida por uma linha em branco e em seguida, uma descrição mais completa.  O texto até a primeira linha em branco numa mensagem do commit é tratado como o título do commit e esse título é utilizado através de todo o Git.  Por exemplo, o linkgit:git-format-patch[1] transforma um commit num email e usa o título na linha de assunto e o restante do commit no corpo da mensagem."

#. type: Title -
#: en/git-commit.txt:554
#, no-wrap, priority:280
msgid "ENVIRONMENT AND CONFIGURATION VARIABLES"
msgstr "VARIÁVEIS DE AMBIENTE E CONFIGURAÇÃO"

#. type: Plain text
#: en/git-commit.txt:559
#, priority:280
msgid "The editor used to edit the commit log message will be chosen from the `GIT_EDITOR` environment variable, the core.editor configuration variable, the `VISUAL` environment variable, or the `EDITOR` environment variable (in that order).  See linkgit:git-var[1] for details."
msgstr "O editor usado para editar a mensagem do registro log do commit que será escolhido entre a variável de ambiente `GIT_EDITOR`, a variável de configuração `core.editor`, a variável de ambiente `VISUAL` ou a variável de ambiente `EDITOR` (nesta ordem).  Para mais detalhes, consulte linkgit:git-var[1]."

#. type: Plain text
#: en/git-commit.txt:569
#, priority:280
msgid "This command can run `commit-msg`, `prepare-commit-msg`, `pre-commit`, `post-commit` and `post-rewrite` hooks.  See linkgit:githooks[5] for more information."
msgstr "Este comando pode executar os ganchos `commit-msg`, `prepare-commit-msg`, `pre-commit`, `post-commit` e `post-rewrite`.  Para mais informações consulte linkgit:githooks[5]."

#. type: Labeled list
#: en/git-commit.txt:573
#, no-wrap, priority:280
msgid "`$GIT_DIR/COMMIT_EDITMSG`"
msgstr "`$GIT_DIR/COMMIT_EDITMSG`"

#. type: Plain text
#: en/git-commit.txt:579
#, priority:280
msgid "This file contains the commit message of a commit in progress.  If `git commit` exits due to an error before creating a commit, any commit message that has been provided by the user (e.g., in an editor session) will be available in this file, but will be overwritten by the next invocation of `git commit`."
msgstr "Este arquivo contém a mensagem do commit de um commit em andamento.  Caso o `git commit` encerre devido a um erro antes da criação do commit, qualquer mensagem do commit que tenha sido utilizada pelo usuário (por exemplo, numa sessão do editor) estará disponível neste arquivo, mas será substituída pela próxima invocação do comando `git commit`."

#. type: Plain text
#: en/git-commit.txt:587
#, ignore-same, priority:280
msgid "linkgit:git-add[1], linkgit:git-rm[1], linkgit:git-mv[1], linkgit:git-merge[1], linkgit:git-commit-tree[1]"
msgstr "linkgit:git-add[1], linkgit:git-rm[1], linkgit:git-mv[1], linkgit:git-merge[1], linkgit:git-commit-tree[1]"

#. type: Title =
#: en/git-config.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-config(1)"
msgstr "git-config(1)"

#. type: Plain text
#: en/git-config.txt:7
#, priority:100
msgid "git-config - Get and set repository or global options"
msgstr "git-config - Obtenha e defina opções globais ou do repositório"

#. type: Plain text
#: en/git-config.txt:27
#, no-wrap, priority:100
msgid ""
"'git config' [<file-option>] [--type=<type>] [--fixed-value] [--show-origin] [--show-scope] [-z|--null] <name> [<value> [<value-pattern>]]\n"
"'git config' [<file-option>] [--type=<type>] --add <name> <value>\n"
"'git config' [<file-option>] [--type=<type>] [--fixed-value] --replace-all <name> <value> [<value-pattern>]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get <name> [<value-pattern>]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get-all <name> [<value-pattern>]\n"
"'git config' [<file-option>] [--type=<type>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] [--name-only] --get-regexp <name-regex> [<value-pattern>]\n"
"'git config' [<file-option>] [--type=<type>] [-z|--null] --get-urlmatch <name> <URL>\n"
"'git config' [<file-option>] [--fixed-value] --unset <name> [<value-pattern>]\n"
"'git config' [<file-option>] [--fixed-value] --unset-all <name> [<value-pattern>]\n"
"'git config' [<file-option>] --rename-section <old-name> <new-name>\n"
"'git config' [<file-option>] --remove-section <name>\n"
"'git config' [<file-option>] [--show-origin] [--show-scope] [-z|--null] [--name-only] -l | --list\n"
"'git config' [<file-option>] --get-color <name> [<default>]\n"
"'git config' [<file-option>] --get-colorbool <name> [<stdout-is-tty>]\n"
"'git config' [<file-option>] -e | --edit\n"
msgstr ""
"'git config' [<opção-do-arquivo>] [--type=<tipo>] [--fixed-value] [--show-origin] [--show-scope] [-z|--null] <nome> [<valor> [<value-pattern>]]\n"
"'git config' [<opção-do-arquivo>] [--type=<tipo>] --add <nome> <valor>\n"
"'git config' [<opção-do-arquivo>] [--type=<tipo>] [--fixed-value] --replace-all <nome> <valor> [<value-pattern>]\n"
"'git config' [<opção-do-arquivo>] [--type=<tipo>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get <nome> [<value-pattern>]\n"
"'git config' [<opção-do-arquivo>] [--type=<tipo>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] --get-all <nome> [<value-pattern>]\n"
"'git config' [<opção-do-arquivo>] [--type=<tipo>] [--show-origin] [--show-scope] [-z|--null] [--fixed-value] [--name-only] --get-regexp <nome_regex> [<value-pattern>]\n"
"'git config' [<opção-do-arquivo>] [--type=<tipo>] [-z|--null] --get-urlmatch <nome> <URL>\n"
"'git config' [<opção-do-arquivo>] [--fixed-value] --unset <nome> [<value-pattern>]\n"
"'git config' [<opção-do-arquivo>] [--fixed-value] --unset-all <nome> [<value-pattern>]\n"
"'git config' [<opção-do-arquivo>] --rename-section <nome_antigo> <novo_nome>\n"
"'git config' [<opção-do-arquivo>] --remove-section <nome>\n"
"'git config' [<opção-do-arquivo>] [--show-origin] [--show-scope] [-z|--null] [--name-only] -l | --list\n"
"'git config' [<opção-do-arquivo>] --get-color nome [<default>]\n"
"'git config' [<opção-do-arquivo>] --get-colorbool <nome> [<stdout-is-tty>]\n"
"'git config' [<opção-do-arquivo>] -e | --edit\n"

#. type: Plain text
#: en/git-config.txt:33
#, priority:100
msgid "You can query/set/replace/unset options with this command. The name is actually the section and the key separated by a dot, and the value will be escaped."
msgstr "Você pode consultar, definir, substituir e remover opções com este comando. Na verdade o nome é a seção e a chave são separadas por um ponto, e seu valor será escapado."

#. type: Plain text
#: en/git-config.txt:43
#, priority:100
msgid "Multiple lines can be added to an option by using the `--add` option.  If you want to update or unset an option which can occur on multiple lines, a `value-pattern` (which is an extended regular expression, unless the `--fixed-value` option is given) needs to be given.  Only the existing values that match the pattern are updated or unset.  If you want to handle the lines that do *not* match the pattern, just prepend a single exclamation mark in front (see also <<EXAMPLES>>), but note that this only works when the `--fixed-value` option is not in use."
msgstr "Várias linhas podem ser adicionadas utilizando a opção `--add`.  Caso queira atualizar ou remover alguma opção que pode ocorrer em várias linhas, um `value-pattern` (que é uma expressão regular extendida a menos que a opção `--fixed-value` seja usada) precisa ser utilizado.  Apenas os valores existentes que correspondam à um pattern são atualizados ou não definidos.  Caso queira manipular as linhas que *não* correspondam com o pattern, basta colocar um único ponto de exclamação na frente (consulte também <<EXEMPLOS>>), observe porém que isso só funciona quando a opção `--fixed-value` não estiver em uso."

#. type: Plain text
#: en/git-config.txt:48
#, priority:100
msgid "The `--type=<type>` option instructs 'git config' to ensure that incoming and outgoing values are canonicalize-able under the given <type>.  If no `--type=<type>` is given, no canonicalization will be performed. Callers may unset an existing `--type` specifier with `--no-type`."
msgstr "A opção `--type=<tipo>` instrui o 'git config' para garantir que os valores que chegam e os que saem sejam canonicamente compatíveis com o <tipo>.  Caso nenhum `--type=<tipo>` seja utilizado, nenhuma canonização será realizada. Os autores dos chamados podem desconfigurar um `--type` existente com a opção `--no-type`."

#. type: Plain text
#: en/git-config.txt:54
#, priority:100
msgid "When reading, the values are read from the system, global and repository local configuration files by default, and options `--system`, `--global`, `--local`, `--worktree` and `--file <filename>` can be used to tell the command to read from only that location (see <<FILES>>)."
msgstr "A leitura destes valores são lidos do sistema nos arquivos de configuração global local e do repositório, é predefinido que as opções `system`, `global`, `local`, `worktree` e `file` possam ser utilizadas para dizer ao comando para ler somente deste local (consulte <<ARQUIVOS>>)."

#. type: Plain text
#: en/git-config.txt:60
#, priority:100
msgid "When writing, the new value is written to the repository local configuration file by default, and options `--system`, `--global`, `--worktree`, `--file <filename>` can be used to tell the command to write to that location (you can say `--local` but that is the default)."
msgstr "Durante a escrita, é predefinido que o novo valor é gravado no arquivo de configuração local do repositório e as opções `system`, `global`, `worktree`, `file` possam ser utilizadas para dizer ao comando para gravar nesse local (você pode dizer `--local`, porém esta é a predefinição)."

#. type: Plain text
#: en/git-config.txt:63
#, priority:100
msgid "This command will fail with non-zero status upon error.  Some exit codes are:"
msgstr "Este comando falhará com uma condição diferente de zero em caso de erro.  Alguns códigos de saída são:"

#. type: Plain text
#: en/git-config.txt:65
#, priority:100
msgid "The section or key is invalid (ret=1),"
msgstr "A seção ou chave é inválida (`ret=1`),"

#. type: Plain text
#: en/git-config.txt:66
#, priority:100
msgid "no section or name was provided (ret=2),"
msgstr "nenhuma seção ou nome foi informado (`ret=2`),"

#. type: Plain text
#: en/git-config.txt:67
#, priority:100
msgid "the config file is invalid (ret=3),"
msgstr "o arquivo de configuração é inválido (`ret=3`),"

#. type: Plain text
#: en/git-config.txt:68
#, priority:100
msgid "the config file cannot be written (ret=4),"
msgstr "o arquivo de configuração não pode ser gravado (`ret=4`),"

#. type: Plain text
#: en/git-config.txt:69
#, priority:100
msgid "you try to unset an option which does not exist (ret=5),"
msgstr "você tenta desmarcar uma opção que não existe (`ret=5`),"

#. type: Plain text
#: en/git-config.txt:70
#, priority:100
msgid "you try to unset/set an option for which multiple lines match (ret=5), or"
msgstr "você tenta desmarcar ou definir uma opção para a qual várias linhas coincidem (`ret=5`) ou"

#. type: Plain text
#: en/git-config.txt:71
#, priority:100
msgid "you try to use an invalid regexp (ret=6)."
msgstr "você tenta usar um regexp inválido (`ret=6`)."

#. type: Plain text
#: en/git-config.txt:73
#, priority:100
msgid "On success, the command returns the exit code 0."
msgstr "Em casos bem sucedidos o comando retorna o código 0."

#. type: Plain text
#: en/git-config.txt:76
#, priority:100
msgid "A list of all available configuration variables can be obtained using the `git help --config` command."
msgstr "A lista todas as variáveis de configuração disponíveis pode ser obtida utilizando o comando `git help --config`."

#. type: Labeled list
#: en/git-config.txt:81
#, ignore-same, no-wrap, priority:100
msgid "--replace-all"
msgstr "--replace-all"

#. type: Plain text
#: en/git-config.txt:84
#, priority:100
msgid "Default behavior is to replace at most one line. This replaces all lines matching the key (and optionally the `value-pattern`)."
msgstr "O comportamento predefinido é substituir pelo menos uma linha. Isso substitui todas as linhas que coincidam com a chave (e opcionalmente ao `value-pattern`)."

#. type: Labeled list
#: en/git-config.txt:85 en/git-update-index.txt:44
#, ignore-same, no-wrap, priority:100
msgid "--add"
msgstr "--add"

#. type: Plain text
#: en/git-config.txt:89
#, priority:100
msgid "Adds a new line to the option without altering any existing values.  This is the same as providing '^$' as the `value-pattern` in `--replace-all`."
msgstr "Adiciona uma nova linha à opção, sem alterar nenhum valor já existente.  É o mesmo que informar '^$' como o `value-pattern` na opção `--replace-all`."

#. type: Labeled list
#: en/git-config.txt:90
#, ignore-same, no-wrap, priority:100
msgid "--get"
msgstr "--get"

#. type: Plain text
#: en/git-config.txt:94
#, priority:100
msgid "Get the value for a given key (optionally filtered by a regex matching the value). Returns error code 1 if the key was not found and the last value if multiple key values were found."
msgstr "Obtenha o valor para uma determinada chave (opcionalmente filtrada por uma expressão regular que coincida com o valor). Retorna o código de erro '1' caso a chave não seja encontrada e o último valor caso vários valores da chave sejam encontrados."

#. type: Labeled list
#: en/git-config.txt:95
#, ignore-same, no-wrap, priority:100
msgid "--get-all"
msgstr "--get-all"

#. type: Plain text
#: en/git-config.txt:97
#, priority:100
msgid "Like get, but returns all values for a multi-valued key."
msgstr "Como get, mas retorna todos os valores para uma chave com vários valores."

#. type: Labeled list
#: en/git-config.txt:98
#, ignore-same, no-wrap, priority:100
msgid "--get-regexp"
msgstr "--get-regexp"

#. type: Plain text
#: en/git-config.txt:104
#, priority:100
msgid "Like --get-all, but interprets the name as a regular expression and writes out the key names.  Regular expression matching is currently case-sensitive and done against a canonicalized version of the key in which section and variable names are lowercased, but subsection names are not."
msgstr "Como a opção `--get-all`, porém interpreta o nome como uma expressão regular e escreve os nomes das chaves.  A coincidência comum da expressão regular é sensível a maiúsculas e minúsculas, é feita contra uma versão canonizado da chave onde a seção e os nomes das variáveis são minúsculas, porém os nomes das subseções não são."

#. type: Labeled list
#: en/git-config.txt:105
#, no-wrap, priority:100
msgid "--get-urlmatch <name> <URL>"
msgstr "--get-urlmatch <nome> <URL>"

#. type: Plain text
#: en/git-config.txt:112
#, priority:100
msgid "When given a two-part name section.key, the value for section.<URL>.key whose <URL> part matches the best to the given URL is returned (if no such key exists, the value for section.key is used as a fallback).  When given just the section as name, do so for all the keys in the section and list them.  Returns error code 1 if no value is found."
msgstr "Quando é utilizado em um nome com duas partes `section.key`, o valor da `section.<URL>.key` cuja parte da <URL> coincida para o retorno da melhor URL informada (caso essa chave não exista, o valor do `section.key` será usado como substituto).  Quando receber apenas a seção como nome, faça-o para todas as chaves da seção e liste-as.  Retorna o código de erro 1 caso nenhum valor seja encontrado."

#. type: Labeled list
#: en/git-config.txt:113
#, ignore-same, no-wrap, priority:100
msgid "--global"
msgstr "--global"

#. type: Plain text
#: en/git-config.txt:118
#, priority:100
msgid "For writing options: write to global `~/.gitconfig` file rather than the repository `.git/config`, write to `$XDG_CONFIG_HOME/git/config` file if this file exists and the `~/.gitconfig` file doesn't."
msgstr "Para escrever opções: escreva para o arquivo global `~/.gitconfig` em vez do repositório `.git/config`, escreva para o arquivo `$XDG_CONFIG_HOME/git/config` se este arquivo existir e o arquivo `~/.gitconfig` não faz."

#. type: Plain text
#: en/git-config.txt:121
#, priority:100
msgid "For reading options: read only from global `~/.gitconfig` and from `$XDG_CONFIG_HOME/git/config` rather than from all available files."
msgstr "Para opções de leitura: leia somente do global `~/.gitconfig` e de` $XDG_CONFIG_HOME/git/config` ao invés de todos os arquivos disponíveis."

#. type: Plain text
#: en/git-config.txt:123 en/git-config.txt:133 en/git-config.txt:142 en/git-config.txt:161 en/git-config.txt:409
#, priority:100
msgid "See also <<FILES>>."
msgstr "Consulte também <<ARQUIVOS>>."

#. type: Labeled list
#: en/git-config.txt:124
#, ignore-same, no-wrap, priority:100
msgid "--system"
msgstr "--system"

#. type: Plain text
#: en/git-config.txt:128
#, priority:100
msgid "For writing options: write to system-wide `$(prefix)/etc/gitconfig` rather than the repository `.git/config`."
msgstr "Para opções de escrita: escreva para o `$(prefixo)/etc/gitconfig` do sistema em vez do repositório `.git/config`."

#. type: Plain text
#: en/git-config.txt:131
#, priority:100
msgid "For reading options: read only from system-wide `$(prefix)/etc/gitconfig` rather than from all available files."
msgstr "Para opções de leitura: leia somente do `$(prefixo)/etc/gitconfig` em todo o sistema, e não de todos os arquivos disponíveis."

#. type: Plain text
#: en/git-config.txt:137
#, priority:100
msgid "For writing options: write to the repository `.git/config` file.  This is the default behavior."
msgstr "Para as opções de escrita: escreva no arquivo do repositório `.git/config`.  Este é  o comportamento predefinido."

#. type: Plain text
#: en/git-config.txt:140
#, priority:100
msgid "For reading options: read only from the repository `.git/config` rather than from all available files."
msgstr "Para as opções da leitura: leia somente no repositório `.git/config` em vez de todos os arquivos disponíveis."

#. type: Labeled list
#: en/git-config.txt:143 en/git-restore.txt:59
#, ignore-same, no-wrap, priority:280
msgid "--worktree"
msgstr "--worktree"

#. type: Plain text
#: en/git-config.txt:151
#, priority:100
msgid "Similar to `--local` except that `$GIT_DIR/config.worktree` is read from or written to if `extensions.worktreeConfig` is enabled. If not it's the same as `--local`. Note that `$GIT_DIR` is equal to `$GIT_COMMON_DIR` for the main working tree, but is of the form `$GIT_DIR/worktrees/<id>/` for other working trees. See linkgit:git-worktree[1] to learn how to enable `extensions.worktreeConfig`."
msgstr "Similar ao comando `--local` exceto quando o `$GIT_DIR/config.worktree` for lido ou escrito e se `extensions.worktreeConfig` estiver ativado. Se não estiver, é o mesmo que a opção `--local`. Observe que `$GIT_DIR` é igual a `$GIT_COMMON_DIR` para a árvore principal de trabalho, mas é da forma `$GIT_DIR/worktrees/<id>/` nas outras árvores de trabalho. Consulte linkgit:git-worktree[1] para aprender como ativar o `extensions.worktreeConfig`."

#. type: Labeled list
#: en/git-config.txt:152
#, no-wrap, priority:100
msgid "-f <config-file>"
msgstr "-f <arquivo-de-config>"

#. type: Labeled list
#: en/git-config.txt:153
#, no-wrap, priority:100
msgid "--file <config-file>"
msgstr "--file <arquivo-de-config>"

#. type: Plain text
#: en/git-config.txt:156
#, priority:100
msgid "For writing options: write to the specified file rather than the repository `.git/config`."
msgstr "Para as opções de escrita: escreva no arquivo definido em vez do repositório `.git/config`."

#. type: Plain text
#: en/git-config.txt:159
#, priority:100
msgid "For reading options: read only from the specified file rather than from all available files."
msgstr "Para as opções da leitura: leia somente no arquivo definido em vez de todos os arquivos disponíveis."

#. type: Labeled list
#: en/git-config.txt:162
#, no-wrap, priority:100
msgid "--blob <blob>"
msgstr "--blob <bolha>"

#. type: Plain text
#: en/git-config.txt:168
#, priority:100
msgid "Similar to `--file` but use the given blob instead of a file. E.g.  you can use 'master:.gitmodules' to read values from the file '.gitmodules' in the master branch. See \"SPECIFYING REVISIONS\" section in linkgit:gitrevisions[7] for a more complete list of ways to spell blob names."
msgstr "É semelhante a opção `--file` porém utilize a bolha informada em vez de um arquivo. Como por exemplo, é possível utilizar 'master:.gitmodules' para ler os valores de um arquivo '.gitmodules' no ramo \"master\". Para conhecer uma lista completa das diferentes maneiras de soletrar os nomes das bolhas, consulte a seção \"DEFININDO AS REVISÕES\" em linkgit:gitrevisions[7]."

#. type: Labeled list
#: en/git-config.txt:169
#, ignore-same, no-wrap, priority:100
msgid "--remove-section"
msgstr "--remove-section"

#. type: Plain text
#: en/git-config.txt:171
#, priority:100
msgid "Remove the given section from the configuration file."
msgstr "Remova a seção dada do arquivo de configuração."

#. type: Labeled list
#: en/git-config.txt:172
#, ignore-same, no-wrap, priority:100
msgid "--rename-section"
msgstr "--rename-section"

#. type: Plain text
#: en/git-config.txt:174
#, priority:100
msgid "Rename the given section to a new name."
msgstr "Renomeie a seção dada para um novo nome."

#. type: Labeled list
#: en/git-config.txt:175
#, ignore-same, no-wrap, priority:100
msgid "--unset"
msgstr "--unset"

#. type: Plain text
#: en/git-config.txt:177
#, priority:100
msgid "Remove the line matching the key from config file."
msgstr "Remove do arquivo de configuração a linha correspondente à chave."

#. type: Labeled list
#: en/git-config.txt:178
#, ignore-same, no-wrap, priority:100
msgid "--unset-all"
msgstr "--unset-all"

#. type: Plain text
#: en/git-config.txt:180
#, priority:100
msgid "Remove all lines matching the key from config file."
msgstr "Remove do arquivo de configuração todas as linhas que correspondam à chave."

#. type: Plain text
#: en/git-config.txt:184
#, priority:100
msgid "List all variables set in config file, along with their values."
msgstr "Lista todas as variáveis definidas no arquivo de configuração, junto com seus valores."

#. type: Labeled list
#: en/git-config.txt:185
#, ignore-same, no-wrap, priority:100
msgid "--fixed-value"
msgstr "--fixed-value"

#. type: Plain text
#: en/git-config.txt:190
#, priority:100
msgid "When used with the `value-pattern` argument, treat `value-pattern` as an exact string instead of a regular expression. This will restrict the name/value pairs that are matched to only those where the value is exactly equal to the `value-pattern`."
msgstr "Quando utilizado com o argumento `value-pattern`, trate o `value-pattern` como uma string exata em vez de uma expressão regular. Isto restringirá os pares nome e o valor que são coincididos apenas com aqueles onde o valor é exatamente igual ao `value-pattern`."

#. type: Labeled list
#: en/git-config.txt:191
#, no-wrap, priority:100
msgid "--type <type>"
msgstr "--type <tipo>"

#. type: Plain text
#: en/git-config.txt:195
#, priority:100
msgid "'git config' will ensure that any input or output is valid under the given type constraint(s), and will canonicalize outgoing values in `<type>`'s canonical form."
msgstr "'git config' irá assegurar que qualquer entrada ou saída é válida sob a(s) restrição(ões) de tipo dada, e irá canonicalizar os valores de saída na forma canônica do `<tipo>`'s."

#. type: Plain text
#: en/git-config.txt:197
#, priority:100
msgid "Valid `<type>`'s include:"
msgstr "Os `<tipo>`'s válidos incluem:"

#. type: Plain text
#: en/git-config.txt:199
#, priority:100
msgid "'bool': canonicalize values as either \"true\" or \"false\"."
msgstr "'bool': canoniza os valores como 'true' ou 'false'."

#. type: Plain text
#: en/git-config.txt:202
#, priority:100
msgid "'int': canonicalize values as simple decimal numbers. An optional suffix of 'k', 'm', or 'g' will cause the value to be multiplied by 1024, 1048576, or 1073741824 upon input."
msgstr "'int': canoniza os valores como números decimais simples. Um sufixo opcional com 'k', 'm' ou 'g' fará com que o valor seja multiplicado por 1024, 1048576 ou 1073741824 na entrada."

#. type: Plain text
#: en/git-config.txt:204
#, priority:100
msgid "'bool-or-int': canonicalize according to either 'bool' or 'int', as described above."
msgstr "'bool-or-int': canoniza de acordo com 'bool' ou 'int', como descrito acima."

#. type: Plain text
#: en/git-config.txt:208
#, priority:100
msgid "'path': canonicalize by adding a leading `~` to the value of `$HOME` and `~user` to the home directory for the specified user. This specifier has no effect when setting the value (but you can use `git config section.variable ~/` from the command line to let your shell do the expansion.)"
msgstr "'path': canonize ao adicionar um sinal `~` no começo para o valor `$HOME` e `~user` no diretório home do usuário especificado. Este especificador não tem efeito durante a definição do valor (porém você pode utilizar o comando `git config section.variable ~ /` na linha de comando para permitir que o seu shell faça a expansão.)"

#. type: Plain text
#: en/git-config.txt:210
#, priority:100
msgid "'expiry-date': canonicalize by converting from a fixed or relative date-string to a timestamp. This specifier has no effect when setting the value."
msgstr "'data validade': canoniza convertendo a partir de uma cadeia com data fixa ou relativa a um registro de data e hora. Este especificador não tem efeito quando for definir o valor."

#. type: Plain text
#: en/git-config.txt:214
#, priority:100
msgid "'color': When getting a value, canonicalize by converting to an ANSI color escape sequence. When setting a value, a sanity-check is performed to ensure that the given value is canonicalize-able as an ANSI color, but it is written as-is."
msgstr "'color': Quando obtiver um valor, canonize através da conversão para uma sequência no padrão ANSI de cor. Ao definir um valor, uma verificação é realizada para garantir que o valor informado seja canonizável como uma cor ANSI, porém será escrito como estiver."

#. type: Labeled list
#: en/git-config.txt:216
#, ignore-same, no-wrap, priority:100
msgid "--bool"
msgstr "--bool"

#. type: Labeled list
#: en/git-config.txt:217
#, ignore-same, no-wrap, priority:100
msgid "--int"
msgstr "--int"

#. type: Labeled list
#: en/git-config.txt:218
#, ignore-same, no-wrap, priority:100
msgid "--bool-or-int"
msgstr "--bool-or-int"

#. type: Labeled list
#: en/git-config.txt:219 en/git-hash-object.txt:39
#, ignore-same, no-wrap, priority:100
msgid "--path"
msgstr "--path"

#. type: Labeled list
#: en/git-config.txt:220
#, ignore-same, no-wrap, priority:100
msgid "--expiry-date"
msgstr "--expiry-date"

#. type: Plain text
#: en/git-config.txt:223
#, priority:100
msgid "Historical options for selecting a type specifier. Prefer instead `--type` (see above)."
msgstr "Opções históricas para selecionar um especificador de tipo. Em vez disso, prefira opção `--type` (veja acima)."

#. type: Labeled list
#: en/git-config.txt:224
#, ignore-same, no-wrap, priority:100
msgid "--no-type"
msgstr "--no-type"

#. type: Plain text
#: en/git-config.txt:228
#, priority:100
msgid "Un-sets the previously set type specifier (if one was previously set). This option requests that 'git config' not canonicalize the retrieved variable.  `--no-type` has no effect without `--type=<type>` or `--<type>`."
msgstr "Indetermine o tipo do especificador definido anteriormente (caso tenha sido definido anteriormente). Esta opção solicita que o comando 'git config' não canonize a variável recuperada.  A opção `--no-type` não tem qualquer efeito sem a opção `--type=<tipo>` ou `--<tipo>`."

#. type: Plain text
#: en/git-config.txt:237
#, priority:100
msgid "For all options that output values and/or keys, always end values with the null character (instead of a newline). Use newline instead as a delimiter between key and value. This allows for secure parsing of the output without getting confused e.g. by values that contain line breaks."
msgstr "Para todas as opções que gerem valores e/ou chaves, sempre finalize os valores com o caractere nulo (em vez de uma nova linha). Utilize a nova linha como um delimitador entre chave e valor. Isso permite uma análise segura do que for gerado sem se confundir, por exemplo, através de valores que tenham quebras de linha."

#. type: Plain text
#: en/git-config.txt:241
#, priority:100
msgid "Output only the names of config variables for `--list` or `--get-regexp`."
msgstr "Gere apenas os nomes das variáveis de configuração para `--list` ou `--get-regexp`."

#. type: Labeled list
#: en/git-config.txt:242
#, ignore-same, no-wrap, priority:100
msgid "--show-origin"
msgstr "--show-origin"

#. type: Plain text
#: en/git-config.txt:247
#, priority:100
msgid "Augment the output of all queried config options with the origin type (file, standard input, blob, command line) and the actual origin (config file path, ref, or blob id if applicable)."
msgstr "Aumente a geração de todas as opções de configuração consultadas com o tipo da origem (arquivo, entrada padrão, blob, linha de comando) e a origem real (o caminho do arquivo de configuração, da \"ref\" ou a ID da bolha, caso seja aplicável)."

#. type: Labeled list
#: en/git-config.txt:248
#, ignore-same, no-wrap, priority:100
msgid "--show-scope"
msgstr "--show-scope"

#. type: Plain text
#: en/git-config.txt:252
#, priority:100
msgid "Similar to `--show-origin` in that it augments the output of all queried config options with the scope of that value (worktree, local, global, system, command)."
msgstr "Semelhante a opção `--show-origin`, na medida em que aumenta a saída de todas as opções de configuração consultadas com o escopo deste valor (`worktree`, `local`, `global`, `system`, `command`)."

#. type: Labeled list
#: en/git-config.txt:253
#, no-wrap, priority:100
msgid "--get-colorbool <name> [<stdout-is-tty>]"
msgstr "--get-colorbool <nome> [<stdout-is-tty>]"

#. type: Plain text
#: en/git-config.txt:263
#, priority:100
msgid "Find the color setting for `<name>` (e.g. `color.diff`) and output \"true\" or \"false\".  `<stdout-is-tty>` should be either \"true\" or \"false\", and is taken into account when configuration says \"auto\".  If `<stdout-is-tty>` is missing, then checks the standard output of the command itself, and exits with status 0 if color is to be used, or exits with status 1 otherwise.  When the color setting for `name` is undefined, the command uses `color.ui` as fallback."
msgstr "Encontre a configuração das cores para `<nome>` (por exemplo, `color.diff`) e gere 'true' ou 'false'.  O `<stdout-is-tty>` deve ser 'true' ou 'false' e é levado em consideração quando a configuração diz \"auto\".  Caso `<stdout-is-tty>` esteja ausente, verifique a saída padrão do próprio comando e encerre com a condição '0' caso a cor deva ser utilizada, ou caso contrário, encerre com a condição '1'.  Quando a configuração das cores para `nome` for indefinida, o comando retroage e em vez disso usa `color.ui`."

#. type: Labeled list
#: en/git-config.txt:264
#, no-wrap, priority:100
msgid "--get-color <name> [<default>]"
msgstr "--get-color <nome> [<padrão>]"

#. type: Plain text
#: en/git-config.txt:270
#, priority:100
msgid "Find the color configured for `name` (e.g. `color.diff.new`) and output it as the ANSI color escape sequence to the standard output.  The optional `default` parameter is used instead, if there is no color configured for `name`."
msgstr "Localize a cor configurada para `nome` (`color.diff.new` por exemplo) e gere a sequência no padrão ANSI de cor.  Em vez disso o parâmetro opcional `default` é utilizado, caso não haja uma cor configurada para `nome`."

#. type: Plain text
#: en/git-config.txt:274
#, priority:100
msgid "`--type=color [--default=<default>]` is preferred over `--get-color` (but note that `--get-color` will omit the trailing newline printed by `--type=color`)."
msgstr "`--type=color [--default=<default>]` é preferível em vez de `--get-color` (porém repare que a opção `--get-color` omitirá a nova linha impressa por `--type=color`)."

#. type: Plain text
#: en/git-config.txt:279
#, priority:100
msgid "Opens an editor to modify the specified config file; either `--system`, `--global`, or repository (default)."
msgstr "Abre um editor para alterar o arquivo de configuração informado; ou `--system`,` --global` ou repositório (predefinido)."

#. type: Labeled list
#: en/git-config.txt:280
#, ignore-same, no-wrap, priority:100
msgid "--[no-]includes"
msgstr "--[no-]includes"

#. type: Plain text
#: en/git-config.txt:285
#, priority:100
msgid "Respect `include.*` directives in config files when looking up values. Defaults to `off` when a specific file is given (e.g., using `--file`, `--global`, etc) and `on` when searching all config files."
msgstr "Respeite as diretivas `include.*` nos arquivos de configuração ao procurar pelos valores. A predefinição retorna para `off` quando determinado arquivo seja informado (por exemplo, usando os comandos `--file`, `--global`, etc) e ao pesquisar por todos os arquivos de configuração."

#. type: Labeled list
#: en/git-config.txt:286
#, no-wrap, priority:100
msgid "--default <value>"
msgstr "--default <valor>"

#. type: Plain text
#: en/git-config.txt:289
#, priority:100
msgid "When using `--get`, and the requested variable is not found, behave as if <value> were the value assigned to the that variable."
msgstr "Ao usar `--get` e a variável solicitada não for encontrada, comportar-se como se o <valor> fosse o valor atribuído à variável."

#. type: Plain text
#: en/git-config.txt:295
#, priority:100
msgid "`pager.config` is only respected when listing configuration, i.e., when using `--list` or any of the `--get-*` which may return multiple results.  The default is to use a pager."
msgstr "O `pager.config` somente é respeitado durante a listagem da configuração, ou seja, ao utilizar a opção `--list` ou qualquer um dos `--get-*` que podem retornar diversos resultados.  A predefinição é utilizar um pager."

#. type: Plain text
#: en/git-config.txt:302
#, priority:100
msgid "By default, 'git config' will read configuration options from multiple files:"
msgstr ""

#. type: Plain text
#: en/git-config.txt:303 en/git-config.txt:353
#, no-wrap, priority:100
msgid "$(prefix)/etc/gitconfig"
msgstr "$(prefixo)/etc/gitconfig"

#. type: Plain text
#: en/git-config.txt:305
#, priority:100
msgid "System-wide configuration file."
msgstr "Arquivo de configuração do sistema."

#. type: Plain text
#: en/git-config.txt:306 en/git-config.txt:356
#, no-wrap, priority:100
msgid "$XDG_CONFIG_HOME/git/config"
msgstr "$XDG_CONFIG_HOME/git/config"

#. type: Plain text
#: en/git-config.txt:307 en/git-config.txt:358
#, no-wrap, priority:100
msgid "~/.gitconfig"
msgstr "~/.gitconfig"

#. type: Plain text
#: en/git-config.txt:311
#, priority:100
msgid "User-specific configuration files. When the XDG_CONFIG_HOME environment variable is not set or empty, $HOME/.config/ is used as $XDG_CONFIG_HOME."
msgstr ""

#. type: Plain text
#: en/git-config.txt:314
#, priority:100
msgid "These are also called \"global\" configuration files. If both files exist, both files are read in the order given above."
msgstr ""

#. type: Plain text
#: en/git-config.txt:315 en/git-config.txt:361
#, no-wrap, priority:100
msgid "$GIT_DIR/config"
msgstr "$GIT_DIR/config"

#. type: Plain text
#: en/git-config.txt:317
#, priority:100
msgid "Repository specific configuration file."
msgstr "Arquivo de configuração específico do repositório."

#. type: Plain text
#: en/git-config.txt:318 en/git-config.txt:364
#, no-wrap, priority:100
msgid "$GIT_DIR/config.worktree"
msgstr "$GIT_DIR/config.worktree"

#. type: Plain text
#: en/git-config.txt:321
#, priority:100
msgid "This is optional and is only searched when `extensions.worktreeConfig` is present in $GIT_DIR/config."
msgstr "Isso é opcional e só é pesquisado quando o arquivo `extensions.worktreeConfig` está presente em $GIT_DIR/config."

#. type: Plain text
#: en/git-config.txt:324
#, fuzzy, priority:100
#| msgid "You may override individual configuration parameters when running any git command by using the `-c` option. See linkgit:git[1] for details."
msgid "You may also provide additional configuration parameters when running any git command by using the `-c` option. See linkgit:git[1] for details."
msgstr "Você pode substituir os parâmetros da configuração dos parâmetros individuais ao executar qualquer comando git utilizando a opção `-c`. Para mais detalhes, consulte linkgit:git[1]."

#. type: Plain text
#: en/git-config.txt:330
#, fuzzy, priority:100
#| msgid "If no further options are given, all reading options will read all of these files that are available. If the global or the system-wide configuration file are not available they will be ignored. If the repository configuration file is not available or readable, 'git config' will exit with a non-zero error code. However, in neither case will an error message be issued."
msgid "Options will be read from all of these files that are available. If the global or the system-wide configuration files are missing or unreadable they will be ignored. If the repository configuration file is missing or unreadable, 'git config' will exit with a non-zero error code. An error message is produced if the file is unreadable, but not if it is missing."
msgstr "Caso nenhuma outra opção seja utilizada, todas as opções de leitura irão ler todos estes arquivos que estiverem disponíveis. Caso o arquivo global ou o arquivo de configuração global inteiro não esteja disponível, eles serão ignorados. Caso o arquivo de configuração do repositório não estiver disponível ou legível, o comando 'git config' encerrará com um código de erro diferente de zero. No entanto, em nenhum dos casos será emitida uma mensagem de erro."

#. type: Plain text
#: en/git-config.txt:334
#, priority:100
msgid "The files are read in the order given above, with last value found taking precedence over values read earlier.  When multiple values are taken then all values of a key from all files will be used."
msgstr "Os arquivos são lidos na ordem dada acima, com o último valor encontrado tendo precedência sobre os valores lidos anteriormente.  Quando vários valores são obtidos, então todos os valores de uma chave de todos os arquivos, serão usados."

#. type: Plain text
#: en/git-config.txt:338
#, fuzzy, priority:100
#| msgid "All writing options will per default write to the repository specific configuration file. Note that this also affects options like `--replace-all` and `--unset`. *'git config' will only ever change one file at a time*."
msgid "By default, options are only written to the repository specific configuration file. Note that this also affects options like `--replace-all` and `--unset`. *'git config' will only ever change one file at a time*."
msgstr "É predefinido que todas as opções de gravação sejam gravadas no arquivo de configuração específico do repositório. Observe que isso também afeta opções como `--replace-all` e `--sunset`. *O comando 'git config' sempre irá alterar um arquivo por vez*."

#. type: Plain text
#: en/git-config.txt:343
#, priority:100
msgid "You can limit which configuration sources are read from or written to by specifying the path of a file with the `--file` option, or by specifying a configuration scope with `--system`, `--global`, `--local`, or `--worktree`.  For more, see <<OPTIONS>> above."
msgstr ""

#. type: Title -
#: en/git-config.txt:346
#, no-wrap, priority:100
msgid "SCOPES"
msgstr ""

#. type: Plain text
#: en/git-config.txt:350
#, priority:100
msgid "Each configuration source falls within a configuration scope. The scopes are:"
msgstr ""

#. type: Labeled list
#: en/git-config.txt:351
#, fuzzy, no-wrap, priority:100
#| msgid "--system"
msgid "system"
msgstr "--system"

#. type: Labeled list
#: en/git-config.txt:354
#, fuzzy, no-wrap, priority:100
#| msgid "--global"
msgid "global"
msgstr "--global"

#. type: Labeled list
#: en/git-config.txt:359
#, fuzzy, no-wrap, priority:100
#| msgid "--local"
msgid "local"
msgstr "--local"

#. type: Labeled list
#: en/git-config.txt:362
#, fuzzy, no-wrap, priority:100
#| msgid "--worktree"
msgid "worktree"
msgstr "--worktree"

#. type: Labeled list
#: en/git-config.txt:365
#, fuzzy, no-wrap, priority:100
#| msgid "Commands"
msgid "command"
msgstr "Comandos"

#. type: Plain text
#: en/git-config.txt:368
#, priority:100
msgid "GIT_CONFIG_{COUNT,KEY,VALUE} environment variables (see <<ENVIRONMENT>> below)"
msgstr ""

#. type: Plain text
#: en/git-config.txt:370
#, fuzzy, priority:100
#| msgid "and the `--date` option"
msgid "the `-c` option"
msgstr "e a opção `--date`"

#. type: Plain text
#: en/git-config.txt:373
#, priority:100
msgid "With the exception of 'command', each scope corresponds to a command line option: `--system`, `--global`, `--local`, `--worktree`."
msgstr ""

#. type: Plain text
#: en/git-config.txt:378
#, priority:100
msgid "When reading options, specifying a scope will only read options from the files within that scope. When writing options, specifying a scope will write to the files within that scope (instead of the repository specific configuration file). See <<OPTIONS>> above for a complete description."
msgstr ""

#. type: Plain text
#: en/git-config.txt:382
#, priority:100
msgid "Most configuration options are respected regardless of the scope it is defined in, but some options are only respected in certain scopes. See the respective option's documentation for the full details."
msgstr ""

#. type: Title ~
#: en/git-config.txt:384
#, fuzzy, no-wrap, priority:100
#| msgid "Approach #2 (configuration)"
msgid "Protected configuration"
msgstr "Abordagem # 2 (configuração)"

#. type: Plain text
#: en/git-config.txt:389
#, priority:100
msgid "Protected configuration refers to the 'system', 'global', and 'command' scopes.  For security reasons, certain options are only respected when they are specified in protected configuration, and ignored otherwise."
msgstr ""

#. type: Plain text
#: en/git-config.txt:394
#, priority:100
msgid "Git treats these scopes as if they are controlled by the user or a trusted administrator. This is because an attacker who controls these scopes can do substantial harm without using Git, so it is assumed that the user's environment protects these scopes against attackers."
msgstr ""

#. type: Title -
#: en/git-config.txt:397 en/git-cvsserver.txt:308 en/git-daemon.txt:333 en/git-http-backend.txt:257 en/git-notes.txt:326 en/git-upload-pack.txt:51
#, no-wrap, priority:280
msgid "ENVIRONMENT"
msgstr "VARIÁVEIS DO AMBIENTE"

#. type: Labeled list
#: en/git-config.txt:399
#, ignore-same, no-wrap, priority:100
msgid "GIT_CONFIG_GLOBAL"
msgstr "GIT_CONFIG_GLOBAL"

#. type: Labeled list
#: en/git-config.txt:400
#, ignore-same, no-wrap, priority:100
msgid "GIT_CONFIG_SYSTEM"
msgstr "GIT_CONFIG_SYSTEM"

#. type: Plain text
#: en/git-config.txt:403
#, priority:100
msgid "Take the configuration from the given files instead from global or system-level configuration. See linkgit:git[1] for details."
msgstr "Obtenha a configuração dos arquivos informados em vez da configuração global ou no nível do sistema. Para mais detalhes, consulte linkgit:git[1]."

#. type: Labeled list
#: en/git-config.txt:404
#, ignore-same, no-wrap, priority:100
msgid "GIT_CONFIG_NOSYSTEM"
msgstr "GIT_CONFIG_NOSYSTEM"

#. type: Plain text
#: en/git-config.txt:407
#, priority:100
msgid "Whether to skip reading settings from the system-wide $(prefix)/etc/gitconfig file. See linkgit:git[1] for details."
msgstr "Independente se você vai ignorar as configurações de leitura do arquivo `$(prefix)/etc/gitconfig` do sistema. Para mais detalhes, consulte linkgit:git[1]."

#. type: Labeled list
#: en/git-config.txt:410
#, ignore-same, no-wrap, priority:100
msgid "GIT_CONFIG_COUNT"
msgstr "GIT_CONFIG_COUNT"

#. type: Labeled list
#: en/git-config.txt:411
#, no-wrap, priority:100
msgid "GIT_CONFIG_KEY_<n>"
msgstr "GIT_CONFIG_KEY_<n>"

#. type: Labeled list
#: en/git-config.txt:412
#, no-wrap, priority:100
msgid "GIT_CONFIG_VALUE_<n>"
msgstr "GIT_CONFIG_VALUE_<n>"

#. type: Plain text
#: en/git-config.txt:421
#, priority:100
msgid "If GIT_CONFIG_COUNT is set to a positive number, all environment pairs GIT_CONFIG_KEY_<n> and GIT_CONFIG_VALUE_<n> up to that number will be added to the process's runtime configuration. The config pairs are zero-indexed. Any missing key or value is treated as an error. An empty GIT_CONFIG_COUNT is treated the same as GIT_CONFIG_COUNT=0, namely no pairs are processed. These environment variables will override values in configuration files, but will be overridden by any explicit options passed via `git -c`."
msgstr "Caso GIT_CONFIG_COUNT seja definido como um número positivo, todos os pares do ambiente GIT_CONFIG_KEY_<n> e GIT_CONFIG_VALUE_<n> até esse número serão adicionados à configuração durante a execução do processo. Os pares de configuração são indexados por zero. Qualquer chave ou valor ausente são tratados como erro. Um GIT_CONFIG_COUNT vazio é tratado da mesma maneira que GIT_CONFIG_COUNT=0, ou seja, nenhum par é processado. Estas variáveis de ambiente substituirão os valores nos arquivos de configuração, mas serão substituídas por quaisquer opções explícitas passadas através do comando `git -c`."

#. type: Plain text
#: en/git-config.txt:425
#, priority:100
msgid "This is useful for cases where you want to spawn multiple git commands with a common configuration but cannot depend on a configuration file, for example when writing scripts."
msgstr "É útil para os casos onde você queira gerar vários comandos git com uma configuração comum, porém não pode depender de um arquivo de configuração, ao escrever scripts por exemplo."

#. type: Labeled list
#: en/git-config.txt:426
#, ignore-same, no-wrap, priority:100
msgid "GIT_CONFIG"
msgstr "GIT_CONFIG"

#. type: Plain text
#: en/git-config.txt:432
#, priority:100
msgid "If no `--file` option is provided to `git config`, use the file given by `GIT_CONFIG` as if it were provided via `--file`. This variable has no effect on other Git commands, and is mostly for historical compatibility; there is generally no reason to use it instead of the `--file` option."
msgstr "Caso nenhuma opção `--file` seja usada com `git config`, utilize o arquivo fornecido por `GIT_CONFIG` como se ele fosse fornecido através da opção `--file`. Esta variável não tem efeito nos outros comandos Git e é principalmente utilizado por questão de compatibilidade histórica; geralmente não há motivo para utilizá-lo no lugar da opção `--file'."

#. type: Plain text
#: en/git-config.txt:438
#, priority:100
msgid "Given a .git/config like this:"
msgstr "Dado um .git/config como este:"

#. type: delimited block -
#: en/git-config.txt:445
#, no-wrap, priority:100
msgid ""
"#\n"
"# This is the config file, and\n"
"# a '#' or ';' character indicates\n"
"# a comment\n"
"#\n"
msgstr ""
"#\n"
"# Este é o arquivo de configuração e\n"
"# um caractere '#' ou ';' serve como\n"
"# um comentário\n"
"#\n"

#. type: delimited block -
#: en/git-config.txt:450 en/git.txt:376
#, no-wrap, priority:100
msgid ""
"; core variables\n"
"[core]\n"
"\t; Don't trust file modes\n"
"\tfilemode = false\n"
msgstr ""
"; variáveis principais\n"
"[core]\n"
"\t; Não confie nos modos dos arquivos\n"
"\tfilemode = false\n"

#. type: delimited block -
#: en/git-config.txt:455
#, no-wrap, priority:100
msgid ""
"; Our diff algorithm\n"
"[diff]\n"
"\texternal = /usr/local/bin/diff-wrapper\n"
"\trenames = true\n"
msgstr ""
"; Nosso próprio algorítimo diff\n"
"[diff]\n"
"\texternal = /usr/local/bin/diff-wrapper\n"
"\trenames = true\n"

#. type: delimited block -
#: en/git-config.txt:460
#, no-wrap, priority:100
msgid ""
"; Proxy settings\n"
"[core]\n"
"\tgitproxy=proxy-command for kernel.org\n"
"\tgitproxy=default-proxy ; for all the rest\n"
msgstr ""
"; Configurações de proxy\n"
"[core]\n"
"\tgitproxy=proxy-command for kernel.org\n"
"\tgitproxy=default-proxy ; for all the rest\n"

#. type: delimited block -
#: en/git-config.txt:467
#, no-wrap, priority:100
msgid ""
"; HTTP\n"
"[http]\n"
"\tsslVerify\n"
"[http \"https://weak.example.com\"]\n"
"\tsslVerify = false\n"
"\tcookieFile = /tmp/cookie.txt\n"
msgstr ""
"; HTTP\n"
"[http]\n"
"\tsslVerify\n"
"[http \"https://weak.example.com\"]\n"
"\tsslVerify = false\n"
"\tcookieFile = /tmp/cookie.txt\n"

#. type: Plain text
#: en/git-config.txt:470
#, priority:100
msgid "you can set the filemode to true with"
msgstr "você pode definir o `filemode` como 'true' com"

#. type: delimited block -
#: en/git-config.txt:473
#, no-wrap, priority:100
msgid "% git config core.filemode true\n"
msgstr "% git config core.filemode true\n"

#. type: Plain text
#: en/git-config.txt:478
#, priority:100
msgid "The hypothetical proxy command entries actually have a postfix to discern what URL they apply to. Here is how to change the entry for kernel.org to \"ssh\"."
msgstr "As hipotéticas entradas de comando do proxy realmente têm um postfix para discernir a qual URL elas se aplicam. Aqui um exemplo de como alterar a entrada do kernel.org para \"ssh\"."

#. type: delimited block -
#: en/git-config.txt:481
#, no-wrap, priority:100
msgid "% git config core.gitproxy '\"ssh\" for kernel.org' 'for kernel.org$'\n"
msgstr "% git config core.gitproxy '\"ssh\" for kernel.org' 'for kernel.org$'\n"

#. type: Plain text
#: en/git-config.txt:484
#, priority:100
msgid "This makes sure that only the key/value pair for kernel.org is replaced."
msgstr "Isso garante que apenas o par de chave/valor do kernel.org seja substituído."

#. type: Plain text
#: en/git-config.txt:486
#, priority:100
msgid "To delete the entry for renames, do"
msgstr "Para excluir a entrada para renomear, faça"

#. type: delimited block -
#: en/git-config.txt:489
#, no-wrap, priority:100
msgid "% git config --unset diff.renames\n"
msgstr "% git config --unset diff.renames\n"

#. type: Plain text
#: en/git-config.txt:493
#, priority:100
msgid "If you want to delete an entry for a multivar (like core.gitproxy above), you have to provide a regex matching the value of exactly one line."
msgstr "Caso queira excluir uma entrada para um \"multivar\" (como `core.gitproxy` acima), é necessário fornecer um `regex` que coincida com o valor exato de uma linha."

#. type: Plain text
#: en/git-config.txt:495
#, priority:100
msgid "To query the value for a given key, do"
msgstr "Para consultar o valor para uma determinada chave, faça"

#. type: delimited block -
#: en/git-config.txt:498
#, no-wrap, priority:100
msgid "% git config --get core.filemode\n"
msgstr "% git config --get core.filemode\n"

#. type: Plain text
#: en/git-config.txt:501 en/git-merge-index.txt:66
#, priority:100
msgid "or"
msgstr "ou"

#. type: delimited block -
#: en/git-config.txt:504
#, no-wrap, priority:100
msgid "% git config core.filemode\n"
msgstr "% git config core.filemode\n"

#. type: Plain text
#: en/git-config.txt:507
#, priority:100
msgid "or, to query a multivar:"
msgstr "ou, para consultar um `multivar`:"

#. type: delimited block -
#: en/git-config.txt:510
#, no-wrap, priority:100
msgid "% git config --get core.gitproxy \"for kernel.org$\"\n"
msgstr "% git config --get core.gitproxy \"for kernel.org$\"\n"

#. type: Plain text
#: en/git-config.txt:513
#, priority:100
msgid "If you want to know all the values for a multivar, do:"
msgstr "Caso queira conhecer todos os valores de um `multivar`, faça:"

#. type: delimited block -
#: en/git-config.txt:516
#, no-wrap, priority:100
msgid "% git config --get-all core.gitproxy\n"
msgstr "% git config --get-all core.gitproxy\n"

#. type: Plain text
#: en/git-config.txt:520
#, priority:100
msgid "If you like to live dangerously, you can replace *all* core.gitproxy by a new one with"
msgstr "Caso queira viver perigosamente, é possível substituir *all* `core.gitproxy` por um novo com"

#. type: delimited block -
#: en/git-config.txt:523
#, no-wrap, priority:100
msgid "% git config --replace-all core.gitproxy ssh\n"
msgstr "% git config --replace-all core.gitproxy ssh\n"

#. type: Plain text
#: en/git-config.txt:527
#, ignore-ellipsis, priority:100
msgid "However, if you really only want to replace the line for the default proxy, i.e. the one without a \"for ...\" postfix, do something like this:"
msgstr "No entanto, caso queira realmente substituir apenas a linha pelo proxy predefinido, ou seja, aquele sem um \"for ...\" `postfix`, faça algo assim:"

#. type: delimited block -
#: en/git-config.txt:530
#, no-wrap, priority:100
msgid "% git config core.gitproxy ssh '! for '\n"
msgstr "% git config core.gitproxy ssh '! for '\n"

#. type: Plain text
#: en/git-config.txt:533
#, priority:100
msgid "To actually match only values with an exclamation mark, you have to"
msgstr "Para que haja a real coincidência apenas com os valores de um ponto de exclamação, é necessário"

#. type: delimited block -
#: en/git-config.txt:536
#, no-wrap, priority:100
msgid "% git config section.key value '[!]'\n"
msgstr "% git config section.key value '[!]'\n"

#. type: Plain text
#: en/git-config.txt:539
#, priority:100
msgid "To add a new proxy, without altering any of the existing ones, use"
msgstr "Para adicionar um novo proxy, sem alterar qualquer outro já existente, utilize"

#. type: delimited block -
#: en/git-config.txt:542
#, no-wrap, priority:100
msgid "% git config --add core.gitproxy '\"proxy-command\" for example.com'\n"
msgstr "% git config --add core.gitproxy '\"proxy-command\" for example.com'\n"

#. type: Plain text
#: en/git-config.txt:546
#, priority:100
msgid "An example to use customized color from the configuration in your script:"
msgstr "Um exemplo para usar cores personalizadas da configuração em seu script:"

#. type: delimited block -
#: en/git-config.txt:552
#, no-wrap, priority:100
msgid ""
"#!/bin/sh\n"
"WS=$(git config --get-color color.diff.whitespace \"blue reverse\")\n"
"RESET=$(git config --get-color \"\" \"reset\")\n"
"echo \"${WS}your whitespace color or blue reverse${RESET}\"\n"
msgstr ""
"#!/bin/sh\n"
"WS=$(git config --get-color color.diff.whitespace \"blue reverse\")\n"
"RESET=$(git config --get-color \"\" \"reset\")\n"
"echo \"${WS}your whitespace color or blue reverse${RESET}\"\n"

#. type: Plain text
#: en/git-config.txt:556
#, priority:100
msgid "For URLs in `https://weak.example.com`, `http.sslVerify` is set to false, while it is set to `true` for all others:"
msgstr "Para URLSs em `https://weak.example.com`, `http.sslVerify` está definido como `false`, enquanto está definido para `true` para todos os outros:"

#. type: delimited block -
#: en/git-config.txt:565
#, no-wrap, priority:100
msgid ""
"% git config --type=bool --get-urlmatch http.sslverify https://good.example.com\n"
"true\n"
"% git config --type=bool --get-urlmatch http.sslverify https://weak.example.com\n"
"false\n"
"% git config --get-urlmatch http https://weak.example.com\n"
"http.cookieFile /tmp/cookie.txt\n"
"http.sslverify false\n"
msgstr ""
"% git config --type=bool --get-urlmatch http.sslverify https://good.example.com\n"
"true\n"
"% git config --type=bool --get-urlmatch http.sslverify https://weak.example.com\n"
"false\n"
"% git config --get-urlmatch http https://weak.example.com\n"
"http.cookieFile /tmp/cookie.txt\n"
"http.sslverify false\n"

#. type: Title -
#: en/git-config.txt:570 en/git-describe.txt:202 en/git-fetch.txt:296 en/git-mv.txt:56 en/git-pack-refs.txt:64 en/git-pull.txt:240 en/git-replace.txt:139 en/git-rm.txt:190 en/git-svn.txt:1150 en/git-worktree.txt:498
#, no-wrap, priority:280
msgid "BUGS"
msgstr "BUGS"

#. type: Plain text
#: en/git-config.txt:575
#, priority:100
msgid "When using the deprecated `[section.subsection]` syntax, changing a value will result in adding a multi-line key instead of a change, if the subsection is given with at least one uppercase character. For example when the config looks like"
msgstr "Ao utilizar a sintaxe já obsoleta `[section.subsection]`, alterando um valor, resultará na adição de uma chave com várias linhas em vez de uma alteração apenas, caso a subseção seja informada com pelo menos um caractere em maiúsculo. Por exemplo, quando a configuração se parece"

#. type: delimited block -
#: en/git-config.txt:579
#, no-wrap, priority:100
msgid ""
"  [section.subsection]\n"
"    key = value1\n"
msgstr ""
"  [section.subsection]\n"
"    key = value1\n"

#. type: Plain text
#: en/git-config.txt:582
#, priority:100
msgid "and running `git config section.Subsection.key value2` will result in"
msgstr "e executando `git config section.Subsection.key value2` resultará em"

#. type: delimited block -
#: en/git-config.txt:587
#, no-wrap, priority:100
msgid ""
"  [section.subsection]\n"
"    key = value1\n"
"    key = value2\n"
msgstr ""
"  [section.subsection]\n"
"    key = valor1\n"
"    key = valor2\n"

#. type: Title =
#: en/git-count-objects.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-count-objects(1)"
msgstr "git-count-objects(1)"

#. type: Plain text
#: en/git-count-objects.txt:7
#, priority:80
msgid "git-count-objects - Count unpacked number of objects and their disk consumption"
msgstr "git-count-objects - Conta a quantidade dos objetos não empacotados e o seu consumo no disco"

#. type: Plain text
#: en/git-count-objects.txt:12
#, no-wrap, priority:80
msgid "'git count-objects' [-v] [-H | --human-readable]\n"
msgstr "'git count-objects' [-v] [-H | --human-readable]\n"

#. type: Plain text
#: en/git-count-objects.txt:17
#, priority:80
msgid "This counts the number of unpacked object files and disk space consumed by them, to help you decide when it is a good time to repack."
msgstr "Conta a quantidade de arquivos dos objetos descompactados e o espaço em disco consumido por eles, para ajudá-lo a decidir quando é um bom momento para re-empacotar."

#. type: Plain text
#: en/git-count-objects.txt:24
#, priority:80
msgid "Report in more detail:"
msgstr "Relatório com mais detalhes:"

#. type: Plain text
#: en/git-count-objects.txt:26
#, priority:80
msgid "count: the number of loose objects"
msgstr "count: a quantidade de objetos soltos"

#. type: Plain text
#: en/git-count-objects.txt:28
#, priority:80
msgid "size: disk space consumed by loose objects, in KiB (unless -H is specified)"
msgstr "size: espaço em disco consumido por pacotes soltos, em KiB (a menos que -H seja utilizado)"

#. type: Plain text
#: en/git-count-objects.txt:30
#, priority:80
msgid "in-pack: the number of in-pack objects"
msgstr "in-pack: a quantidade de objetos no pacote"

#. type: Plain text
#: en/git-count-objects.txt:32
#, priority:80
msgid "size-pack: disk space consumed by the packs, in KiB (unless -H is specified)"
msgstr "size-pack: espaço em disco consumido pelos pacotes, em KiB (a menos que -H seja utilizado)"

#. type: Plain text
#: en/git-count-objects.txt:35
#, priority:80
msgid "prune-packable: the number of loose objects that are also present in the packs. These objects could be pruned using `git prune-packed`."
msgstr "prune-packable: a quantidade de objetos soltos que também estão presentes nos pacotes. Esses objetos podem ser cortados utilizando o `git ameixa-embalada`."

#. type: Plain text
#: en/git-count-objects.txt:38
#, priority:80
msgid "garbage: the number of files in object database that are neither valid loose objects nor valid packs"
msgstr "garbage: a quantidade dos arquivos no banco de dados do objeto que não são nem válidos como objetos perdidos ou tão pouco como pacotes válidos"

#. type: Plain text
#: en/git-count-objects.txt:41
#, priority:80
msgid "size-garbage: disk space consumed by garbage files, in KiB (unless -H is specified)"
msgstr "size-garbage: espaço em disco consumido por arquivos lixo, em KiB (a menos que -H seja utilizado)"

#. type: Plain text
#: en/git-count-objects.txt:46
#, priority:80
msgid "alternate: absolute path of alternate object databases; may appear multiple times, one line per path. Note that if the path contains non-printable characters, it may be surrounded by double-quotes and contain C-style backslashed escape sequences."
msgstr "alternate: caminho absoluto do objeto alternativo no banco de dados; pode aparecer várias vezes, uma linha por caminho. Observe que, caso o caminho tenha caracteres não imprimíveis, ele poderá estar entre aspas duplas e conter sequências de escape com barra invertida no estilo C."

#. type: Labeled list
#: en/git-count-objects.txt:47 en/git-cvsserver.txt:61 en/git-grep.txt:115
#, no-wrap, priority:100
msgid "-H"
msgstr "-H"

#. type: Labeled list
#: en/git-count-objects.txt:48
#, ignore-same, no-wrap, priority:80
msgid "--human-readable"
msgstr "--human-readable"

#. type: Plain text
#: en/git-count-objects.txt:51
#, priority:80
msgid "Print sizes in human readable format"
msgstr "Tamanhos de impressão em formato legível"

#. type: Title =
#: en/git-credential-cache--daemon.txt:2
#, no-wrap, priority:90
msgid "git-credential-cache{litdd}daemon(1)"
msgstr "git-credential-cache{litdd}daemon(1)"

#. type: Plain text
#: en/git-credential-cache--daemon.txt:7
#, priority:90
msgid "git-credential-cache--daemon - Temporarily store user credentials in memory"
msgstr "git-credential-cache--daemon - Armazene temporariamente as credenciais do usuário na memória"

#. type: Plain text
#: en/git-credential-cache--daemon.txt:12
#, no-wrap, priority:90
msgid "'git credential-cache{litdd}daemon' [--debug] <socket>\n"
msgstr "'git credential-cache{litdd}daemon' [--debug] <socket>\n"

#. type: Plain text
#: en/git-credential-cache--daemon.txt:18
#, priority:90
msgid "You probably don't want to invoke this command yourself; it is started automatically when you use linkgit:git-credential-cache[1]."
msgstr "É bem provável que você não queira usar este comando; ele é iniciado automaticamente quando você usa linkgit:git-credential-cache[1]."

#. type: Plain text
#: en/git-credential-cache--daemon.txt:23
#, priority:90
msgid "This command listens on the Unix domain socket specified by `<socket>` for `git-credential-cache` clients. Clients may store and retrieve credentials. Each credential is held for a timeout specified by the client; once no credentials are held, the daemon exits."
msgstr "Este comando escuta no \"socket\" do domínio Unix determinado por `<socket>` para clientes do `git-credential-cache`. Os clientes podem armazenar e recuperar credenciais. Cada credencial é mantida por um tempo específico que é determinado pelo cliente; depois que nenhuma credencial for mais mantida, o daemon encerra."

#. type: Plain text
#: en/git-credential-cache--daemon.txt:27
#, priority:90
msgid "If the `--debug` option is specified, the daemon does not close its stderr stream, and may output extra diagnostics to it even after it has begun listening for clients."
msgstr "Caso a opção `--debug` seja utilizada, o daemon não fechará o fluxo `stderr` e poderá gerar diagnósticos extras, mesmo após começar a ouvir os clientes."

#. type: Title =
#: en/git-credential-cache.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-credential-cache(1)"
msgstr "git-credential-cache(1)"

#. type: Plain text
#: en/git-credential-cache.txt:7
#, priority:90
msgid "git-credential-cache - Helper to temporarily store passwords in memory"
msgstr "git-credential-cache - Assistente para armazenar temporariamente as senhas na memória"

#. type: delimited block -
#: en/git-credential-cache.txt:12
#, no-wrap, priority:90
msgid "git config credential.helper 'cache [<options>]'\n"
msgstr "git config credential.helper 'cache [<opções>]'\n"

#. type: Plain text
#: en/git-credential-cache.txt:21
#, priority:90
msgid "This command caches credentials in memory for use by future Git programs. The stored credentials never touch the disk, and are forgotten after a configurable timeout.  The cache is accessible over a Unix domain socket, restricted to the current user by filesystem permissions."
msgstr "Este comando armazena em cache as credenciais na memória para uso futuro dos programas Git. As credenciais armazenadas jamais são armazenadas em disco e são esquecidas após um tempo determinado por configuração.  O cache está acessível num \"socket\" de domínio Unix, restrito ao usuário atual por permissões do sistema de arquivos."

#. type: Plain text
#: en/git-credential-cache.txt:25
#, priority:90
msgid "You probably don't want to invoke this command directly; it is meant to be used as a credential helper by other parts of Git. See linkgit:gitcredentials[7] or `EXAMPLES` below."
msgstr "Provavelmente você não vai querer invocar este comando diretamente; Ele deve ser utilizado pelas outras partes como um auxiliar da credencial do Git. See linkgit:gitcredentials[7] or `EXAMPLES` below."

#. type: Labeled list
#: en/git-credential-cache.txt:29
#, no-wrap, priority:90
msgid "--timeout <seconds>"
msgstr "--timeout <segundos>"

#. type: Plain text
#: en/git-credential-cache.txt:32
#, priority:90
msgid "Number of seconds to cache credentials (default: 900)."
msgstr "Quantidade de segundos para armazenar as credenciais em cache (Predefinição: 900)."

#. type: Labeled list
#: en/git-credential-cache.txt:33
#, no-wrap, priority:90
msgid "--socket <path>"
msgstr "--socket <caminho>"

#. type: Plain text
#: en/git-credential-cache.txt:43
#, priority:90
msgid "Use `<path>` to contact a running cache daemon (or start a new cache daemon if one is not started).  Defaults to `$XDG_CACHE_HOME/git/credential/socket` unless `~/.git-credential-cache/` exists in which case `~/.git-credential-cache/socket` is used instead.  If your home directory is on a network-mounted filesystem, you may need to change this to a local filesystem. You must specify an absolute path."
msgstr "Utilize o `<caminho>` para entrar em contato com um daemon de cache em execução (ou inicie um novo, cache daemon caso nenhum tenha sido iniciado).  A predefinição retorna para `$XDG_CACHE_HOME/git/credential/socket` a menos que `~/.git-credential-cache/` exista, neste caso `~/.git-credential-cache/socket` é utilizado.  Se o diretório inicial estiver num sistema de arquivos montado via rede, pode ser necessário alterá-lo para um sistema de arquivos local. Você deve usar um caminho absoluto."

#. type: Title -
#: en/git-credential-cache.txt:45
#, no-wrap, priority:90
msgid "CONTROLLING THE DAEMON"
msgstr "CONTROLANDO O DAEMON"

#. type: Plain text
#: en/git-credential-cache.txt:49
#, priority:90
msgid "If you would like the daemon to exit early, forgetting all cached credentials before their timeout, you can issue an `exit` action:"
msgstr "Se você deseja que o daemon encerre antes esquecendo todas as credenciais em cache antes do tempo limite, você pode emitir uma ação `exit`:"

#. type: delimited block -
#: en/git-credential-cache.txt:52
#, no-wrap, priority:90
msgid "git credential-cache exit\n"
msgstr "git credential-cache exit\n"

#. type: Plain text
#: en/git-credential-cache.txt:59 en/git-credential-store.txt:75
#, priority:100
msgid "The point of this helper is to reduce the number of times you must type your username or password. For example:"
msgstr "O objetivo deste auxiliar é reduzir a quantidade de vezes que você deve digitar o seu nome de usuário ou senha. Por exemplo:"

#. type: delimited block -
#: en/git-credential-cache.txt:65
#, no-wrap, priority:90
msgid ""
"$ git config credential.helper cache\n"
"$ git push http://example.com/repo.git\n"
"Username: <type your username>\n"
"Password: <type your password>\n"
msgstr ""
"$ git config credential.helper cache\n"
"$ git push http://exemplo.com/repo.git\n"
"Username: <digite o seu nome de usuário>\n"
"Password: <digite a sua senha>\n"

#. type: delimited block -
#: en/git-credential-cache.txt:69
#, no-wrap, priority:90
msgid ""
"[work for 5 more minutes]\n"
"$ git push http://example.com/repo.git\n"
"[your credentials are used automatically]\n"
msgstr ""
"[funcione por mais 5 minutos]\n"
"$ git push http://example.com/repo.git\n"
"[as suas credenciais serão utilizadas automaticamente]\n"

#. type: Plain text
#: en/git-credential-cache.txt:73
#, priority:90
msgid "You can provide options via the credential.helper configuration variable (this example drops the cache time to 5 minutes):"
msgstr "Você pode utilizar as opções através da variável de configuração `credential.helper` (este exemplo descarta o cache a cada 5 minutos):"

#. type: delimited block -
#: en/git-credential-cache.txt:76
#, no-wrap, priority:90
msgid "$ git config credential.helper 'cache --timeout=300'\n"
msgstr "$ git config credential.helper 'cache --timeout=300'\n"

#. type: Title =
#: en/git-credential-store.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-credential-store(1)"
msgstr "git-credential-store(1)"

#. type: Plain text
#: en/git-credential-store.txt:7
#, priority:100
msgid "git-credential-store - Helper to store credentials on disk"
msgstr "git-credential-store - Auxiliar para o armazenamento de credenciais em disco"

#. type: delimited block -
#: en/git-credential-store.txt:12
#, no-wrap, priority:100
msgid "git config credential.helper 'store [<options>]'\n"
msgstr "git config credential.helper 'store [<opções>]'\n"

#. type: Plain text
#: en/git-credential-store.txt:21
#, priority:100
msgid "Using this helper will store your passwords unencrypted on disk, protected only by filesystem permissions. If this is not an acceptable security tradeoff, try linkgit:git-credential-cache[1], or find a helper that integrates with secure storage provided by your operating system."
msgstr "Ao usar este auxiliar as suas senhas são armazenadas de forma criptografada no disco, protegida apenas pelas permissões do sistema de arquivos. Caso essa não seja uma troca aceitável de segurança, tente o linkgit:git-credential-cache[1] ou encontre um auxiliar que se integre ao armazenamento seguro informado pelo seu sistema operacional."

#. type: Plain text
#: en/git-credential-store.txt:24
#, priority:100
msgid "This command stores credentials indefinitely on disk for use by future Git programs."
msgstr "Este comando armazena as credenciais indefinidamente no disco para uso futuro dos programas Git."

#. type: Plain text
#: en/git-credential-store.txt:28
#, priority:100
msgid "You probably don't want to invoke this command directly; it is meant to be used as a credential helper by other parts of git. See linkgit:gitcredentials[7] or `EXAMPLES` below."
msgstr "Provavelmente você não vai querer invocar este comando diretamente; Ele deve ser utilizado pelas outras partes como um auxiliar da credencial do git. See linkgit:gitcredentials[7] or `EXAMPLES` below."

#. type: Labeled list
#: en/git-credential-store.txt:32
#, no-wrap, priority:100
msgid "--file=<path>"
msgstr "--file=<caminho>"

#. type: Plain text
#: en/git-credential-store.txt:42
#, priority:100
msgid "Use `<path>` to lookup and store credentials. The file will have its filesystem permissions set to prevent other users on the system from reading it, but will not be encrypted or otherwise protected. If not specified, credentials will be searched for from `~/.git-credentials` and `$XDG_CONFIG_HOME/git/credentials`, and credentials will be written to `~/.git-credentials` if it exists, or `$XDG_CONFIG_HOME/git/credentials` if it exists and the former does not. See also <<FILES>>."
msgstr "Utilize `<caminho>` para localizar e armazenar as credenciais. O arquivo terá suas as permissões do sistema de arquivos definidos para impedir que os outros usuários no sistema o leiam, mas não serão criptografados ou protegidos. Caso não seja utilizado, as credenciais serão pesquisadas em `~/.git-credentials` e `$XDG_CONFIG_HOME/git/credentials`, as credenciais serão salvas em `~/.git-credentials` caso exista, ou `$XDG_CONFIG_HOME/git/credentials` caso exista e o primeiro não. Consulte também <<ARQUIVOS>>."

#. type: Plain text
#: en/git-credential-store.txt:49
#, priority:100
msgid "If not set explicitly with `--file`, there are two files where git-credential-store will search for credentials in order of precedence:"
msgstr "Caso não seja definido explicitamente com a opção `--file`, existem dois arquivos nos quais o comando `git-credential-store` procurará por credenciais em ordem de precedência:"

#. type: Labeled list
#: en/git-credential-store.txt:50
#, no-wrap, priority:100
msgid "~/.git-credentials"
msgstr "~/.git-credentials"

#. type: Plain text
#: en/git-credential-store.txt:52
#, priority:100
msgid "User-specific credentials file."
msgstr "Arquivo de credenciais específicas do usuário."

#. type: Labeled list
#: en/git-credential-store.txt:53
#, no-wrap, priority:100
msgid "$XDG_CONFIG_HOME/git/credentials"
msgstr "$XDG_CONFIG_HOME/git/credentials"

#. type: Plain text
#: en/git-credential-store.txt:59
#, priority:100
msgid "Second user-specific credentials file. If '$XDG_CONFIG_HOME' is not set or empty, `$HOME/.config/git/credentials` will be used. Any credentials stored in this file will not be used if `~/.git-credentials` has a matching credential as well. It is a good idea not to create this file if you sometimes use older versions of Git that do not support it."
msgstr "Arquivo de credenciais secundário específicas do usuário. Caso '$XDG_CONFIG_HOME' não seja utilizado ou esteja vazio, o `$HOME/.config/git/credentials` será utilizado. Quaisquer credenciais armazenadas neste arquivo não serão utilizadas caso `~/.git-credentials` também tiver uma credencial coincidente. É uma boa pratica não criar este arquivo caso você às vezes utilize versões mais antigas do Git que não são compatíveis."

#. type: Plain text
#: en/git-credential-store.txt:63
#, priority:100
msgid "For credential lookups, the files are read in the order given above, with the first matching credential found taking precedence over credentials found in files further down the list."
msgstr "Para pesquisas das credenciais, os arquivos são lidos na ordem acima, com a primeira credencial coincidente que for encontrada tendo precedência sobre as credenciais encontradas nos arquivos mais abaixo na lista."

#. type: Plain text
#: en/git-credential-store.txt:67
#, priority:100
msgid "Credential storage will by default write to the first existing file in the list. If none of these files exist, `~/.git-credentials` will be created and written to."
msgstr "Por predefinição o armazenamento das credenciais será gravado no primeiro arquivo existente na lista. Caso nenhum destes arquivos exista, serão criadas e gravadas em `~/.git-credentials`."

#. type: Plain text
#: en/git-credential-store.txt:69
#, priority:100
msgid "When erasing credentials, matching credentials will be erased from all files."
msgstr "Ao apagar as credenciais, aquelas que forem coincidentes serão apagadas de todos os arquivos."

#. type: delimited block -
#: en/git-credential-store.txt:81
#, no-wrap, priority:100
msgid ""
"$ git config credential.helper store\n"
"$ git push http://example.com/repo.git\n"
"Username: <type your username>\n"
"Password: <type your password>\n"
msgstr ""
"$ git config credential.helper store\n"
"$ git push http://example.com/repo.git\n"
"Username: <digite o seu nome de usuário>\n"
"Password: <digite a sua senha>\n"

#. type: delimited block -
#: en/git-credential-store.txt:85
#, no-wrap, priority:100
msgid ""
"[several days later]\n"
"$ git push http://example.com/repo.git\n"
"[your credentials are used automatically]\n"
msgstr ""
"[alguns dias depois]\n"
"$ git push http://example.com/repo.git\n"
"[as suas credenciais são utilizadas de forma automática]\n"

#. type: Title -
#: en/git-credential-store.txt:88
#, no-wrap, priority:100
msgid "STORAGE FORMAT"
msgstr "FORMATO DE ARMAZENAMENTO"

#. type: Plain text
#: en/git-credential-store.txt:92
#, priority:100
msgid "The `.git-credentials` file is stored in plaintext. Each credential is stored on its own line as a URL like:"
msgstr "O arquivo `.git credentials` é armazenado em texto puro sem formatação. Cada credencial é armazenada em sua própria linha como uma URL:"

#. type: delimited block -
#: en/git-credential-store.txt:95
#, no-wrap, priority:100
msgid "https://user:pass@example.com\n"
msgstr "https://usuário:senha@example.com\n"

#. type: Plain text
#: en/git-credential-store.txt:100
#, priority:100
msgid "No other kinds of lines (e.g. empty lines or comment lines) are allowed in the file, even though some may be silently ignored. Do not view or edit the file with editors."
msgstr "Nenhum outro tipo de linha (por exemplo, as linhas vazias ou as linhas dos comentários) é permitido no arquivo, mesmo que algumas possam ser ignoradas silenciosamente. Não exiba ou edite o arquivo com editores."

#. type: Plain text
#: en/git-credential-store.txt:107
#, priority:100
msgid "When Git needs authentication for a particular URL context, credential-store will consider that context a pattern to match against each entry in the credentials file.  If the protocol, hostname, and username (if we already have one) match, then the password is returned to Git. See the discussion of configuration in linkgit:gitcredentials[7] for more information."
msgstr "Quando o Git precisa de autenticação para um contexto URL específico, o armazenamento de credenciais considerará o padrão deste contexto para coincidir com cada entrada no arquivo de credenciais.  Caso o protocolo, o nome do host e o nome do usuário (caso tenhamos um) coincidam, a senha será retornada ao Git. Consulte a discussão da configuração em linkgit:gitcredentials[7] para mais informações."

#. type: Title =
#: en/git-credential.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-credential(1)"
msgstr "git-credential(1)"

#. type: Plain text
#: en/git-credential.txt:7
#, priority:100
msgid "git-credential - Retrieve and store user credentials"
msgstr "git-credential - Recupere e armazene as credenciais do usuário"

#. type: delimited block -
#: en/git-credential.txt:12
#, no-wrap, priority:100
msgid "'git credential' (fill|approve|reject)\n"
msgstr "'git credential' (fill|approve|reject)\n"

#. type: Plain text
#: en/git-credential.txt:24
#, priority:100
msgid "Git has an internal interface for storing and retrieving credentials from system-specific helpers, as well as prompting the user for usernames and passwords. The git-credential command exposes this interface to scripts which may want to retrieve, store, or prompt for credentials in the same manner as Git. The design of this scriptable interface models the internal C API; see credential.h for more background on the concepts."
msgstr "O Git possui uma interface interna para armazenar e recuperar as credenciais dos ajudantes específicos do sistema, além de solicitar ao usuário os nomes dos usuários e as suas respectivas senhas. O comando `git-credential` expõe essa interface a scripts que podem recuperar, armazenar ou solicitar credenciais da mesma maneira que o Git. O design dessa interface programável modela ao API C interno; consulte o `credential.h` para obter mais informações sobre os conceitos."

#. type: Plain text
#: en/git-credential.txt:28
#, priority:100
msgid "git-credential takes an \"action\" option on the command-line (one of `fill`, `approve`, or `reject`) and reads a credential description on stdin (see <<IOFMT,INPUT/OUTPUT FORMAT>>)."
msgstr "O `git-credential` usa uma \"ação\" como opção na linha de comando (uma das opções `fill`, `aprove` ou `reject`) e lê uma descrição da credencial no \"stdin\" (consulte <<IOFMT,INPUT/OUTPUT FORMAT>>)."

#. type: Plain text
#: en/git-credential.txt:35
#, priority:100
msgid "If the action is `fill`, git-credential will attempt to add \"username\" and \"password\" attributes to the description by reading config files, by contacting any configured credential helpers, or by prompting the user. The username and password attributes of the credential description are then printed to stdout together with the attributes already provided."
msgstr "Caso a ação seja `fill`, o comando tentará adicionar os atributos \"username\" e \"password\" à descrição lendo os arquivos de configuração ao contactar qualquer auxiliar de credencial configurado ou solicitando ao usuário. Os atributos de nome de usuário e senha da descrição da credencial são impressos para \"stdout\" junto com os atributos já informados."

#. type: Plain text
#: en/git-credential.txt:39
#, priority:100
msgid "If the action is `approve`, git-credential will send the description to any configured credential helpers, which may store the credential for later use."
msgstr "Caso a ação for `approve` (aprovar), o comando `git-credential` enviará a descrição a todos os auxiliares de credenciais configurados, que poderão armazenar a credencial para uso posterior."

#. type: Plain text
#: en/git-credential.txt:43
#, priority:100
msgid "If the action is `reject`, git-credential will send the description to any configured credential helpers, which may erase any stored credential matching the description."
msgstr "Caso a ação seja `reject`, o comando `git-credential` enviará a descrição para qualquer auxiliar de credencial configurado, o que poderá apagar quaisquer credenciais armazenadas que coincidam com a descrição."

#. type: Plain text
#: en/git-credential.txt:45
#, priority:100
msgid "If the action is `approve` or `reject`, no output should be emitted."
msgstr "Caso a ação seja `approve` ou `reject`, nenhum alerta será emitido."

#. type: Title -
#: en/git-credential.txt:47
#, no-wrap, priority:100
msgid "TYPICAL USE OF GIT CREDENTIAL"
msgstr "UTILIZAÇÃO TÍPICA DO GIT CREDENTIAL"

#. type: Plain text
#: en/git-credential.txt:51
#, priority:100
msgid "An application using git-credential will typically use `git credential` following these steps:"
msgstr "Um aplicativo que utilize o comando `git-credential` normalmente usa `git credential` seguindo estas etapas:"

#. type: Plain text
#: en/git-credential.txt:53
#, priority:100
msgid "Generate a credential description based on the context."
msgstr "Gere um descritivo da credencial com base no contexto."

#. type: Plain text
#: en/git-credential.txt:59
#, priority:100
msgid "For example, if we want a password for `https://example.com/foo.git`, we might generate the following credential description (don't forget the blank line at the end; it tells `git credential` that the application finished feeding all the information it has):"
msgstr "Por exemplo, caso queira uma senha para `https://example.com/foo.git`, poderemos gerar o seguinte descritivo para a credencial (não se esqueça da linha em branco no final; informa `git credential` que o aplicativo terminou de encaminhar todas as informações que ele tinha):"

#. type: Plain text
#: en/git-credential.txt:63
#, no-wrap, priority:100
msgid ""
"\t protocol=https\n"
"\t host=example.com\n"
"\t path=foo.git\n"
msgstr ""
"\t protocol=https\n"
"\t host=exemplo.com.br\n"
"\t path=foo.git\n"

#. type: Plain text
#: en/git-credential.txt:69
#, priority:100
msgid "Ask git-credential to give us a username and password for this description. This is done by running `git credential fill`, feeding the description from step (1) to its standard input. The complete credential description (including the credential per se, i.e. the login and password) will be produced on standard output, like:"
msgstr "Peça à `git-credential` para nos fornecer um nome de usuário e senha para esta descrição. Isso é feito executando o comando `git credential fill`, alimentando a descrição da etapa (1) para a sua entrada predefinido. O descritivo completo da credencial (incluindo a credencial em si, ou seja, o login e a senha) será produzida como:"

#. type: Plain text
#: en/git-credential.txt:74
#, no-wrap, priority:100
msgid ""
"protocol=https\n"
"host=example.com\n"
"username=bob\n"
"password=secr3t\n"
msgstr ""
"protocol=https\n"
"host=exemplo.com.br\n"
"username=bob\n"
"password=secr3t\n"

#. type: Plain text
#: en/git-credential.txt:79
#, priority:100
msgid "In most cases, this means the attributes given in the input will be repeated in the output, but Git may also modify the credential description, for example by removing the `path` attribute when the protocol is HTTP(s) and `credential.useHttpPath` is false."
msgstr "Na maioria dos casos, isso significa que os atributos informados na entrada serão repetidos na saída, mas o Git também poderá modificar a descrição da credencial, por exemplo, removendo o atributo `path` quando o protocolo for HTTP(s) e a variável `credential.useHttpPath` seja falsa."

#. type: Plain text
#: en/git-credential.txt:85
#, priority:100
msgid "If the `git credential` knew about the password, this step may not have involved the user actually typing this password (the user may have typed a password to unlock the keychain instead, or no user interaction was done if the keychain was already unlocked) before it returned `password=secr3t`."
msgstr "Caso o comando `git credential` saiba sobre a senha, esta etapa pode não ter o envolvimento do usuário que esteja digitando esta senha (o usuário pode ter digitado uma senha para desbloquear o chaveiro ou nenhuma interação do usuário foi feita caso o chaveiro já tenha sido desbloqueado) antes de retornar `password=secr3t`."

#. type: Plain text
#: en/git-credential.txt:88
#, priority:100
msgid "Use the credential (e.g., access the URL with the username and password from step (2)), and see if it's accepted."
msgstr "Utilize a credencial (por exemplo, acesse a URL com o nome de usuário e a senha da etapa (2)) e verifique se ela é aceita."

#. type: Plain text
#: en/git-credential.txt:98
#, priority:100
msgid "Report on the success or failure of the password. If the credential allowed the operation to complete successfully, then it can be marked with an \"approve\" action to tell `git credential` to reuse it in its next invocation. If the credential was rejected during the operation, use the \"reject\" action so that `git credential` will ask for a new password in its next invocation. In either case, `git credential` should be fed with the credential description obtained from step (2) (which also contain the ones provided in step (1))."
msgstr "Relate o sucesso ou falha da senha. Caso a credencial permita que a operação seja concluída com sucesso, ela pode ser marcada com uma ação \"approve\" para passar ao `git credential` para ser reutilizada na próxima invocação. Caso a credencial seja rejeitada durante a operação, utilize a ação \"reject\" para que o comando `git credential` solicite uma nova senha na próxima invocação. Em qualquer um dos casos, o comando `git credential` deve ser alimentado com o descritivo da credencial obtida na etapa (2) (que também contém aquelas informada na etapa (1))."

#. type: Title -
#: en/git-credential.txt:101
#, no-wrap, priority:100
msgid "INPUT/OUTPUT FORMAT"
msgstr "FORMATO DE ENTRADA/SAÍDA"

#. type: Plain text
#: en/git-credential.txt:108
#, priority:100
msgid "`git credential` reads and/or writes (depending on the action used)  credential information in its standard input/output. This information can correspond either to keys for which `git credential` will obtain the login information (e.g. host, protocol, path), or to the actual credential data to be obtained (username/password)."
msgstr "O comando `git credential` lê ou grava (dependendo da ação utilizada) as informações da credencial na sua entrada e saída padrão. Esta informação pode corresponder às chaves pelas quais o comando `git credential` obterá as informações de login e senha (por exemplo, host, protocolo, caminho) ou aos dados da credencial real a serem obtidos (login e senha)."

#. type: Plain text
#: en/git-credential.txt:112
#, priority:100
msgid "The credential is split into a set of named attributes, with one attribute per line. Each attribute is specified by a key-value pair, separated by an `=` (equals) sign, followed by a newline."
msgstr "A credencial é dividida em um conjunto de atributos informados, com um atributo por linha. Cada atributo é especificado por um par de valores-chave, separado por um sinal de `=` (igual), seguido por uma nova linha."

#. type: Plain text
#: en/git-credential.txt:115
#, priority:100
msgid "The key may contain any bytes except `=`, newline, or NUL. The value may contain any bytes except newline or NUL."
msgstr "A chave pode conter quaisquer bytes, exceto `=`, nova linha ou NUL. O valor pode conter quaisquer bytes, exceto uma nova linha ou NUL."

#. type: Plain text
#: en/git-credential.txt:119
#, priority:100
msgid "In both cases, all bytes are treated as-is (i.e., there is no quoting, and one cannot transmit a value with newline or NUL in it). The list of attributes is terminated by a blank line or end-of-file."
msgstr "Nos dois casos, todos os bytes são tratados como estão (ou seja, não há aspas e não é possível transmitir um valor com nova linha ou NUL nela). A lista de atributos é finalizada por uma linha em branco ou no final do arquivo."

#. type: Plain text
#: en/git-credential.txt:121
#, priority:100
msgid "Git understands the following attributes:"
msgstr "O Git entende os seguintes atributos:"

#. type: Labeled list
#: en/git-credential.txt:122
#, ignore-same, no-wrap, priority:100
msgid "`protocol`"
msgstr "`protocol`"

#. type: Plain text
#: en/git-credential.txt:126
#, priority:100
msgid "The protocol over which the credential will be used (e.g., `https`)."
msgstr "O protocolo sobre o qual a credencial será utilizada (por exemplo, `https`)."

#. type: Labeled list
#: en/git-credential.txt:127
#, ignore-same, no-wrap, priority:100
msgid "`host`"
msgstr "`host`"

#. type: Plain text
#: en/git-credential.txt:131
#, priority:100
msgid "The remote hostname for a network credential.  This includes the port number if one was specified (e.g., \"example.com:8088\")."
msgstr "O nome do host remoto para uma credencial de rede.  Incluí o número da porta caso nenhuma seja informada(\"example.com:8088\" por exemplo)."

#. type: Labeled list
#: en/git-credential.txt:132
#, ignore-same, no-wrap, priority:100
msgid "`path`"
msgstr "`path`"

#. type: Plain text
#: en/git-credential.txt:137
#, priority:100
msgid "The path with which the credential will be used. E.g., for accessing a remote https repository, this will be the repository's path on the server."
msgstr "O caminho com o qual a credencial será utilizada. Por exemplo, para acessar um repositório https remoto, este será o caminho do repositório no servidor."

#. type: Labeled list
#: en/git-credential.txt:138
#, ignore-same, no-wrap, priority:100
msgid "`username`"
msgstr "`username`"

#. type: Plain text
#: en/git-credential.txt:142
#, priority:100
msgid "The credential's username, if we already have one (e.g., from a URL, the configuration, the user, or from a previously run helper)."
msgstr "O nome de usuário da credencial, caso já tenhamos um (por exemplo, de uma URL, da configuração do usuário ou de um auxiliar executado anteriormente)."

#. type: Labeled list
#: en/git-credential.txt:143
#, ignore-same, no-wrap, priority:100
msgid "`password`"
msgstr "`password`"

#. type: Plain text
#: en/git-credential.txt:146
#, priority:100
msgid "The credential's password, if we are asking it to be stored."
msgstr "A senha da credencial, caso estejamos solicitando o seu armazenamento."

#. type: Labeled list
#: en/git-credential.txt:147
#, ignore-same, no-wrap, priority:100
msgid "`url`"
msgstr "`url`"

#. type: Plain text
#: en/git-credential.txt:154
#, priority:100
msgid "When this special attribute is read by `git credential`, the value is parsed as a URL and treated as if its constituent parts were read (e.g., `url=https://example.com` would behave as if `protocol=https` and `host=example.com` had been provided). This can help callers avoid parsing URLs themselves."
msgstr "Quando esse atributo especial é lido através do `git credential`, o valor é analisado como uma URL e tratado como se as suas partes constituintes fossem lidas (por exemplo, `url=https://example.com` se comportaria como se o `protocol = https` e `host=example.com` tenham sido fornecidos). Isso pode ajudar quem chama a evitar a análise das URLs eles mesmos."

#. type: Plain text
#: en/git-credential.txt:159
#, priority:100
msgid "Note that specifying a protocol is mandatory and if the URL doesn't specify a hostname (e.g., \"cert:///path/to/file\") the credential will contain a hostname attribute whose value is an empty string."
msgstr "Observe que a definição de um protocolo é obrigatório e caso a URL não informe o nome do host (\"cert:///caminho/para/o/arquivo\") o conteúdo da credencial terá o atributo do nome do host cujo valor seja vazio."

#. type: Plain text
#: en/git-credential.txt:162
#, priority:100
msgid "Components which are missing from the URL (e.g., there is no username in the example above) will be left unset."
msgstr "Os componentes ausentes na URL (não há um nome de usuário no exemplo acima por exemplo) serão deixados por sem uma definição."

#. type: Title =
#: en/git-cvsexportcommit.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-cvsexportcommit(1)"
msgstr "git-cvsexportcommit(1)"

#. type: Plain text
#: en/git-cvsexportcommit.txt:7
#, priority:90
msgid "git-cvsexportcommit - Export a single commit to a CVS checkout"
msgstr "git-cvsexportcommit - Exportar um único commit para uma averiguação do CVS"

#. type: Plain text
#: en/git-cvsexportcommit.txt:14
#, no-wrap, priority:90
msgid ""
"'git cvsexportcommit' [-h] [-u] [-v] [-c] [-P] [-p] [-a] [-d <cvsroot>]\n"
"\t[-w <cvs-workdir>] [-W] [-f] [-m <msgprefix>] [<parent-commit>] <commit-id>\n"
msgstr ""
"'git cvsexportcommit' [-h] [-u] [-v] [-c] [-P] [-p] [-a] [-d <cvsroot>]\n"
"\t[-w <cvs-workdir>] [-W] [-f] [-m <msgprefix>] [<commit-relacionado>] <id-do-commit>\n"

#. type: Plain text
#: en/git-cvsexportcommit.txt:20
#, priority:90
msgid "Exports a commit from Git to a CVS checkout, making it easier to merge patches from a Git repository into a CVS repository."
msgstr "Exporta um commit do Git para um checkout do CVS, facilitando a mesclagem de patches de um repositório Git num repositório CVS."

#. type: Plain text
#: en/git-cvsexportcommit.txt:24
#, priority:90
msgid "Specify the name of a CVS checkout using the -w switch or execute it from the root of the CVS working copy. In the latter case GIT_DIR must be defined. See examples below."
msgstr "Especifique o nome de uma verificação geral do CVS utilizando a opção `-w` ou execute uma cópia do trabalho a partir da raiz do CVS. No último caso, o `GIT_DIR` deve ser definido. Veja os exemplos abaixo."

#. type: Plain text
#: en/git-cvsexportcommit.txt:28
#, priority:90
msgid "It does its best to do the safe thing, it will check that the files are unchanged and up to date in the CVS checkout, and it will not autocommit by default."
msgstr "Ele faz o possível para garantir a segurança, verificará se os arquivos estão inalterados e atualizados no \"checkout\" do CVS e por predefinição, os commits não serão feitos automaticamente."

#. type: Plain text
#: en/git-cvsexportcommit.txt:30
#, priority:90
msgid "Supports file additions, removals, and commits that affect binary files."
msgstr "Oferece suporte a adições, remoções e commits que afetem os arquivos binários."

#. type: Plain text
#: en/git-cvsexportcommit.txt:33
#, priority:90
msgid "If the commit is a merge commit, you must tell 'git cvsexportcommit' what parent the changeset should be done against."
msgstr "Caso o commit seja um commit mesclado, informe ao `git cvsexportcommit` de qual origem o \"changeset\" deve ser feito."

#. type: Plain text
#: en/git-cvsexportcommit.txt:40
#, priority:90
msgid "Commit automatically if the patch applied cleanly. It will not commit if any hunks fail to apply or there were other problems."
msgstr "Faça o commit automaticamente caso o patch seja aplicado sem erros. O commit não será feito caso algum bloco falhe durante na aplicação ou caso haja outros problemas."

#. type: Plain text
#: en/git-cvsexportcommit.txt:44
#, priority:90
msgid "Be pedantic (paranoid) when applying patches. Invokes patch with --fuzz=0"
msgstr "Seja paranoico ao aplicar os patches. Invoca o patch com a opção `--fuzz=0`"

#. type: Plain text
#: en/git-cvsexportcommit.txt:48
#, priority:90
msgid "Add authorship information. Adds Author line, and Committer (if different from Author) to the message."
msgstr "Adicionar informações de autoria. Adiciona a linha do autor e de quem fez o commit (caso seja diferente do autor) na mensagem."

#. type: Plain text
#: en/git-cvsexportcommit.txt:53
#, priority:90
msgid "Set an alternative CVSROOT to use.  This corresponds to the CVS -d parameter.  Usually users will not want to set this, except if using CVS in an asymmetric fashion."
msgstr "Defina um CVSROOT alternativo para ser utilizado.  Isso corresponde ao parâmetro CVS `-d`.  Geralmente, os usuários não vão querer definir isso, exceto caso utilize o CVS de maneira assimétrica."

#. type: Plain text
#: en/git-cvsexportcommit.txt:56
#, priority:90
msgid "Force the merge even if the files are not up to date."
msgstr "Imponha a mesclagem mesmo que os arquivos não estejam atualizados."

#. type: Plain text
#: en/git-cvsexportcommit.txt:59
#, priority:90
msgid "Force the parent commit, even if it is not a direct parent."
msgstr "Imponha o commit da origem, ainda que não seja direto dela."

#. type: Plain text
#: en/git-cvsexportcommit.txt:63
#, priority:90
msgid "Prepend the commit message with the provided prefix.  Useful for patch series and the like."
msgstr "Anexe a mensagem do commit com o prefixo informado.  Útil para patches em série e similares."

#. type: Plain text
#: en/git-cvsexportcommit.txt:66
#, priority:90
msgid "Update affected files from CVS repository before attempting export."
msgstr "Atualize os arquivos afetados do repositório CVS antes de tentar exportar."

#. type: Plain text
#: en/git-cvsexportcommit.txt:70
#, priority:90
msgid "Reverse CVS keyword expansion (e.g. $Revision: 1.2.3.4$ becomes $Revision$) in working CVS checkout before applying patch."
msgstr "Reverta a expansão das palavras-chave do CVS (por exemplo, $Revision: 1.2.3.4$ se torna $Revision$) no CVS de trabalho antes de aplicar o patch."

#. type: Plain text
#: en/git-cvsexportcommit.txt:76
#, priority:90
msgid "Specify the location of the CVS checkout to use for the export. This option does not require GIT_DIR to be set before execution if the current directory is within a Git repository.  The default is the value of 'cvsexportcommit.cvsdir'."
msgstr "Especifique o local do checkout do CVS a ser utilizado para a exportação. Esta opção não requer que `GIT_DIR` seja definido antes da execução caso o diretório atual esteja dentro de um repositório Git.  O valor predefinido é o que está na variável `cvsexportcommit.cvsdir`."

#. type: Plain text
#: en/git-cvsexportcommit.txt:81
#, priority:90
msgid "Tell cvsexportcommit that the current working directory is not only a Git checkout, but also the CVS checkout.  Therefore, Git will reset the working directory to the parent commit before proceeding."
msgstr "Diga ao `cvsexportcommit` que o diretório de trabalho atual não é apenas um checkout do Git, mas também o checkout do CVS.  Portanto, o Git redefinirá o diretório de trabalho para o commit da origem antes de continuar."

#. type: Plain text
#: en/git-cvsexportcommit.txt:84
#, priority:90
msgid "Verbose."
msgstr "Loquaz."

#. type: Labeled list
#: en/git-cvsexportcommit.txt:87
#, no-wrap, priority:90
msgid "cvsexportcommit.cvsdir"
msgstr "cvsexportcommit.cvsdir"

#. type: Plain text
#: en/git-cvsexportcommit.txt:89
#, priority:90
msgid "The default location of the CVS checkout to use for the export."
msgstr "O local predefinido utilizado pelo checkout do CVS para a exportação."

#. type: Labeled list
#: en/git-cvsexportcommit.txt:93
#, no-wrap, priority:90
msgid "Merge one patch into CVS"
msgstr "Mesclar um patch no CVS"

#. type: delimited block -
#: en/git-cvsexportcommit.txt:100
#, no-wrap, priority:90
msgid ""
"$ export GIT_DIR=~/project/.git\n"
"$ cd ~/project_cvs_checkout\n"
"$ git cvsexportcommit -v <commit-sha1>\n"
"$ cvs commit -F .msg <files>\n"
msgstr ""
"$ export GIT_DIR=~/project/.git\n"
"$ cd ~/project_cvs_checkout\n"
"$ git cvsexportcommit -v <commit-sha1>\n"
"$ cvs commit -F .msg <arquivos>\n"

#. type: Labeled list
#: en/git-cvsexportcommit.txt:102
#, no-wrap, priority:90
msgid "Merge one patch into CVS (-c and -w options). The working directory is within the Git Repo"
msgstr "Mescle um patch no CVS (as opções `-c` e `-w`). O diretório de trabalho está dentro do Git Repo"

#. type: delimited block -
#: en/git-cvsexportcommit.txt:106
#, no-wrap, priority:90
msgid "\t$ git cvsexportcommit -v -c -w ~/project_cvs_checkout <commit-sha1>\n"
msgstr "\t$ git cvsexportcommit -v -c -w ~/project_cvs_checkout <commit-sha1>\n"

#. type: Labeled list
#: en/git-cvsexportcommit.txt:108
#, no-wrap, priority:90
msgid "Merge pending patches into CVS automatically -- only if you really know what you are doing"
msgstr "Mesclar os patches pendentes no CVS automaticamente -- somente se você realmente souber o que está fazendo"

#. type: delimited block -
#: en/git-cvsexportcommit.txt:114
#, no-wrap, priority:90
msgid ""
"$ export GIT_DIR=~/project/.git\n"
"$ cd ~/project_cvs_checkout\n"
"$ git cherry cvshead myhead | sed -n 's/^+ //p' | xargs -l1 git cvsexportcommit -c -p -v\n"
msgstr ""
"$ export GIT_DIR=~/project/.git\n"
"$ cd ~/project_cvs_checkout\n"
"$ git cherry cvshead myhead | sed -n 's/^+ //p' | xargs -l1 git cvsexportcommit -c -p -v\n"

#. type: Title =
#: en/git-cvsimport.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-cvsimport(1)"
msgstr "git-cvsimport(1)"

#. type: Plain text
#: en/git-cvsimport.txt:7
#, priority:90
msgid "git-cvsimport - Salvage your data out of another SCM people love to hate"
msgstr "git-cvsimport - Recupere seus dados de outro SCM que as pessoas amam odiar"

#. type: Plain text
#: en/git-cvsimport.txt:17
#, no-wrap, priority:90
msgid ""
"'git cvsimport' [-o <branch-for-HEAD>] [-h] [-v] [-d <CVSROOT>]\n"
"\t      [-A <author-conv-file>] [-p <options-for-cvsps>] [-P <file>]\n"
"\t      [-C <git-repository>] [-z <fuzz>] [-i] [-k] [-u] [-s <subst>]\n"
"\t      [-a] [-m] [-M <regex>] [-S <regex>] [-L <commit-limit>]\n"
"\t      [-r <remote>] [-R] [<CVS-module>]\n"
msgstr ""
"'git cvsimport' [-o <ramo-para-o-HEAD>] [-h] [-v] [-d <CVSROOT>]\n"
"\t      [-A <arquivos-conv-do-autor>] [-p <opções-para-o-cvsps>] [-P <arquivo>]\n"
"\t      [-C <repositório-git>] [-z <fuzz>] [-i] [-k] [-u] [-s <subst>]\n"
"\t      [-a] [-m] [-M <expressão-regular>] [-S <expressão-regular>] [-L <limite-do-commit>]\n"
"\t      [-r <remoto>] [-R] [<módulo-CVS>]\n"

#. type: Plain text
#: en/git-cvsimport.txt:26
#, no-wrap, priority:90
msgid ""
"*WARNING:* `git cvsimport` uses cvsps version 2, which is considered\n"
"deprecated; it does not work with cvsps version 3 and later.  If you are\n"
"performing a one-shot import of a CVS repository consider using\n"
"http://cvs2svn.tigris.org/cvs2git.html[cvs2git] or\n"
"http://www.catb.org/esr/cvs-fast-export/[cvs-fast-export].\n"
msgstr ""
"*ADVERTÊNCIA* o comando `git cvsimport` usa o cvsps versão 2 já descontinuada;\n"
"não funciona com o vcsps versão 3 e posteriores.  Caso esteja\n"
"executando uma importação única de um repositório CVS ,considere usar\n"
"http://cvs2svn.tigris.org/cvs2git.html[cvs2git] ou\n"
"http://www.catb.org/esr/cvs-fast-export/[cvs-fast-export].\n"

#. type: Plain text
#: en/git-cvsimport.txt:29
#, priority:90
msgid "Imports a CVS repository into Git. It will either create a new repository, or incrementally import into an existing one."
msgstr "Importa um repositório CVS para o Git. Ele criará um novo repositório ou o importará incrementalmente para um já existente."

#. type: Plain text
#: en/git-cvsimport.txt:32
#, priority:90
msgid "Splitting the CVS log into patch sets is done by 'cvsps'.  At least version 2.1 is required."
msgstr "A divisão do registro log do CVS em conjuntos de patches é feito por `cvsps`.  É necessário usar no mínimo a versão 2.1."

#. type: Plain text
#: en/git-cvsimport.txt:35
#, no-wrap, priority:90
msgid ""
"*WARNING:* for certain situations the import leads to incorrect results.\n"
"Please see the section <<issues,ISSUES>> for further reference.\n"
msgstr ""
"*ADVERTÊNCIA:* em determinadas situações, a importação leva a resultados incorretos.\n"
"Consulte a seção <<issues,ISSUES>> para futuras referências.\n"

#. type: Plain text
#: en/git-cvsimport.txt:42
#, priority:90
msgid "You should *never* do any work of your own on the branches that are created by 'git cvsimport'.  By default initial import will create and populate a \"master\" branch from the CVS repository's main branch which you're free to work with; after that, you need to 'git merge' incremental imports, or any CVS branches, yourself.  It is advisable to specify a named remote via -r to separate and protect the incoming branches."
msgstr "Você nunca *deve* fazer qualquer trabalho seu nos ramos criados pelo `git cvsimport`.  É predefinido que a importação inicial criará e irá preencher uma ramificação \"master\" a partir do ramo principal do repositório CVS, com a qual você poderá trabalhar livremente; depois disso, você precisará fazer uma importação incremental com o comando `git merge` ou quaisquer outras ramificações do CVS você mesmo.  É aconselhável determinar um nome remoto através de `-r` para separar e proteger as ramificações recebidas."

#. type: Plain text
#: en/git-cvsimport.txt:48
#, priority:90
msgid "If you intend to set up a shared public repository that all developers can read/write, or if you want to use linkgit:git-cvsserver[1], then you probably want to make a bare clone of the imported repository, and use the clone as the shared repository.  See linkgit:gitcvs-migration[7]."
msgstr "Caso a sua intenção seja configurar um repositório público compartilhado para que todos os desenvolvedores tenham permissão de leitura e escrita ou caso queiram utilizar o linkgit:git-cvsserver[1], então é preferível que você crie um clone simples do seu repositório importado para que seja utilizado como um repositório compartilhado.  Consulte linkgit:gitcvs-migration[7]."

#. type: Plain text
#: en/git-cvsimport.txt:54
#, priority:90
msgid "Verbosity: let 'cvsimport' report what it is doing."
msgstr "Loquaz: permita que `cvsimport` relate o que está fazendo."

#. type: Labeled list
#: en/git-cvsimport.txt:55
#, no-wrap, priority:90
msgid "-d <CVSROOT>"
msgstr "-d <CVSROOT>"

#. type: Plain text
#: en/git-cvsimport.txt:61
#, priority:90
msgid "The root of the CVS archive. May be local (a simple path) or remote; currently, only the :local:, :ext: and :pserver: access methods are supported. If not given, 'git cvsimport' will try to read it from `CVS/Root`. If no such file exists, it checks for the `CVSROOT` environment variable."
msgstr "A raiz do arquivo CVS. Pode ser local (um caminho simples) ou remoto; atualmente, são compatíveis apenas o :local:, :ext: e :pserver: access. Caso não seja utilizado, o comando `git cvsimport` tentará a ler do `CVS/Root`. No caso de tal arquivo não existir, verifica a existência da variável de ambiente `CVSROOT`."

#. type: Labeled list
#: en/git-cvsimport.txt:62
#, no-wrap, priority:90
msgid "<CVS-module>"
msgstr "<módulo-CVS>"

#. type: Plain text
#: en/git-cvsimport.txt:66
#, priority:90
msgid "The CVS module you want to import. Relative to <CVSROOT>.  If not given, 'git cvsimport' tries to read it from `CVS/Repository`."
msgstr "O módulo CVS que deseja importar. Relativo ao <CVSROOT>.  Caso não seja utilizado, o comando `git cvsimport` tenta ler do `CVS/Repository`."

#. type: Labeled list
#: en/git-cvsimport.txt:67
#, no-wrap, priority:90
msgid "-C <target-dir>"
msgstr "-C <diretório-de-destino>"

#. type: Plain text
#: en/git-cvsimport.txt:70
#, priority:90
msgid "The Git repository to import to.  If the directory doesn't exist, it will be created.  Default is the current directory."
msgstr "O repositório Git para importar. Este será criado caso o diretório não exista.  A predefinição é o diretório atual."

#. type: Labeled list
#: en/git-cvsimport.txt:71
#, no-wrap, priority:90
msgid "-r <remote>"
msgstr "-r <remoto>"

#. type: Plain text
#: en/git-cvsimport.txt:75
#, priority:90
msgid "The Git remote to import this CVS repository into.  Moves all CVS branches into remotes/<remote>/<branch> akin to the way 'git clone' uses 'origin' by default."
msgstr "O Git remoto para importar este repositório CVS.  Move todas as ramificações do CVS nos ramos remotos/<remoto>/<ramo>, semelhante a maneira predefinida como o comando 'git clone' usa 'origin'."

#. type: Labeled list
#: en/git-cvsimport.txt:76
#, no-wrap, priority:90
msgid "-o <branch-for-HEAD>"
msgstr "-o <ramo-para-o-HEAD>"

#. type: Plain text
#: en/git-cvsimport.txt:84
#, priority:90
msgid "When no remote is specified (via -r) the `HEAD` branch from CVS is imported to the 'origin' branch within the Git repository, as `HEAD` already has a special meaning for Git.  When a remote is specified the `HEAD` branch is named remotes/<remote>/master mirroring 'git clone' behaviour.  Use this option if you want to import into a different branch."
msgstr "Quando nenhum ponto remoto definido (via `-r`), o ramo `HEAD` do CVS é importado para o ramo 'origin' dentro do repositório Git, pois o` HEAD` já possui um significado especial para o Git.  Quando um ponto remoto é especificado, o ramo `HEAD` é chamado de remotes/<remoto>/master espelhando-se no comportamento do comando `git clone`.  Utilize esta opção caso queira importar para uma ramificação diferente."

#. type: Plain text
#: en/git-cvsimport.txt:87
#, priority:90
msgid "Use '-o master' for continuing an import that was initially done by the old cvs2git tool."
msgstr "Utilize `-o master` para continuar uma importação que foi inicialmente feita pela antiga ferramenta `cvs2git`."

#. type: Plain text
#: en/git-cvsimport.txt:92
#, priority:90
msgid "Import-only: don't perform a checkout after importing.  This option ensures the working directory and index remain untouched and will not create them if they do not exist."
msgstr "Import-only: não realize o \"checkout\" após a importação.  Esta opção garante que o diretório e o índice de trabalho permaneçam intocados e não os criará caso eles não existam."

#. type: Plain text
#: en/git-cvsimport.txt:97
#, priority:90
msgid "Kill keywords: will extract files with '-kk' from the CVS archive to avoid noisy changesets. Highly recommended, but off by default to preserve compatibility with early imported trees."
msgstr "Kill keywords: extrairá arquivos com `-kk` do arquivo CVS para evitar atritos com o `changesets`. Altamente recomendado, a sua predefinição retorna para desativado visando preservar a compatibilidade com as árvores importadas anteriormente."

#. type: Plain text
#: en/git-cvsimport.txt:100
#, priority:90
msgid "Convert underscores in tag and branch names to dots."
msgstr "Converta sublinhados nos nomes das tags e das ramificações em pontos."

#. type: Labeled list
#: en/git-cvsimport.txt:101
#, no-wrap, priority:90
msgid "-s <subst>"
msgstr "-s <subst>"

#. type: Plain text
#: en/git-cvsimport.txt:103
#, priority:90
msgid "Substitute the character \"/\" in branch names with <subst>"
msgstr "Substitua o caractere \"/\" nos nomes dos ramos com `<subs>`"

#. type: Labeled list
#: en/git-cvsimport.txt:104
#, no-wrap, priority:90
msgid "-p <options-for-cvsps>"
msgstr "-p <opções-para-o-cvsps>"

#. type: Plain text
#: en/git-cvsimport.txt:107
#, priority:90
msgid "Additional options for cvsps.  The options `-u` and '-A' are implicit and should not be used here."
msgstr "Opções adicionais para o cvsps.  As opções `-u` e `-A` estão implícitas e não devem ser utilizadas aqui."

#. type: Plain text
#: en/git-cvsimport.txt:109
#, priority:90
msgid "If you need to pass multiple options, separate them with a comma."
msgstr "Caso precise usar várias opções, separe-as com uma vírgula."

#. type: Labeled list
#: en/git-cvsimport.txt:110
#, no-wrap, priority:90
msgid "-z <fuzz>"
msgstr "-z <fuzz>"

#. type: Plain text
#: en/git-cvsimport.txt:113
#, priority:90
msgid "Pass the timestamp fuzz factor to cvsps, in seconds. If unset, cvsps defaults to 300s."
msgstr "Encaminhe o registro de data e hora do fato \"fuzz\" ao cvsps em segundos. Caso não esteja definido, o cvsps retorna para a predefinição 300s."

#. type: Labeled list
#: en/git-cvsimport.txt:114
#, no-wrap, priority:90
msgid "-P <cvsps-output-file>"
msgstr "-P <arquivo-cvsps-gerado>"

#. type: Plain text
#: en/git-cvsimport.txt:117
#, priority:90
msgid "Instead of calling cvsps, read the provided cvsps output file. Useful for debugging or when cvsps is being handled outside cvsimport."
msgstr "Em vez de chamar o cvsps, leia o arquivo cvsps fornecido. Útil para a depuração ou quando o cvsps está sendo manuseado fora do `cvsimport`."

#. type: Plain text
#: en/git-cvsimport.txt:122
#, priority:90
msgid "Attempt to detect merges based on the commit message. This option will enable default regexes that try to capture the source branch name from the commit message."
msgstr "Tente detectar as mesclagens com base na mensagem do commit. Esta opção ativará as expressões regulares que tentam capturar o nome da origem do ramo na mensagem do commit."

#. type: Labeled list
#: en/git-cvsimport.txt:123
#, no-wrap, priority:90
msgid "-M <regex>"
msgstr "-M <expressão-regular>"

#. type: Plain text
#: en/git-cvsimport.txt:127
#, priority:90
msgid "Attempt to detect merges based on the commit message with a custom regex. It can be used with `-m` to enable the default regexes as well. You must escape forward slashes."
msgstr "Tenta detectar as mesclagens com base na mensagem do commit com um regex personalizado. Ele pode ser utilizado com a opção `-m` para ativar os regexes já predefinidos. Você deve escapar as barras inclinadas."

#. type: Plain text
#: en/git-cvsimport.txt:129
#, priority:90
msgid "The regex must capture the source branch name in $1."
msgstr "O regex deve capturar o nome da origem do ramo em $1."

#. type: Plain text
#: en/git-cvsimport.txt:131
#, priority:90
msgid "This option can be used several times to provide several detection regexes."
msgstr "Esta opção pode ser utilizada várias vezes para fornecer vários regexes de detecção."

#. type: Labeled list
#: en/git-cvsimport.txt:132
#, no-wrap, priority:90
msgid "-S <regex>"
msgstr "-S <expressão-regular>"

#. type: Plain text
#: en/git-cvsimport.txt:134
#, priority:90
msgid "Skip paths matching the regex."
msgstr "Ignore os caminhos que correspondam ao regex."

#. type: Plain text
#: en/git-cvsimport.txt:138
#, priority:90
msgid "Import all commits, including recent ones. cvsimport by default skips commits that have a timestamp less than 10 minutes ago."
msgstr "importe todos os commits, incluindo os mais recentes. Por predefinição o `cvsimport` ignora os commits que têm o registro de data e hora menor que 10 minutos."

#. type: Labeled list
#: en/git-cvsimport.txt:139
#, no-wrap, priority:90
msgid "-L <limit>"
msgstr "-L <limite>"

#. type: Plain text
#: en/git-cvsimport.txt:142
#, priority:90
msgid "Limit the number of commits imported. Workaround for cases where cvsimport leaks memory."
msgstr "Limita a quantidade de commit a serem importados. Solução alternativa para os casos em que o `cvsimport` vaza memória."

#. type: Labeled list
#: en/git-cvsimport.txt:143
#, no-wrap, priority:90
msgid "-A <author-conv-file>"
msgstr "-A <arquivos-conv-do-autor>"

#. type: Plain text
#: en/git-cvsimport.txt:148
#, priority:90
msgid "CVS by default uses the Unix username when writing its commit logs. Using this option and an author-conv-file maps the name recorded in CVS to author name, e-mail and optional time zone:"
msgstr "Por predefinição o CVS utiliza nome de usuário em formato Unix ao escrever os registros log dos commits. O uso desta opção e de um arquivo `conv` do autor mapeia o nome registrado no CVS para o nome do autor, endereço de email e o fuso horário opcional:"

#. type: delimited block -
#: en/git-cvsimport.txt:152
#, no-wrap, priority:90
msgid ""
"\texon=Andreas Ericsson <ae@op5.se>\n"
"\tspawn=Simon Pawn <spawn@frog-pond.org> America/Chicago\n"
msgstr ""
"\texon=José Antônio <ja@enois.br>\n"
"\tspawn=Paulo Roberto <parob@empresa.org> America/Sao_Paulo\n"

#. type: Plain text
#: en/git-cvsimport.txt:159
#, priority:90
msgid "'git cvsimport' will make it appear as those authors had their GIT_AUTHOR_NAME and GIT_AUTHOR_EMAIL set properly all along.  If a time zone is specified, GIT_AUTHOR_DATE will have the corresponding offset applied."
msgstr "O `git cvsimport` fará com que estes autores apareçam como se sempre tivessem as variáveis `GIT_AUTHOR_NAME` e `GIT_AUTHOR_EMAIL` corretamente definidas o tempo todo.  Se um fuso horário for utilizado, a variável `GIT_AUTHOR_DATE` terá a correção do fuso horário correspondente devidamente ajustado."

#. type: Plain text
#: en/git-cvsimport.txt:163
#, priority:90
msgid "For convenience, this data is saved to `$GIT_DIR/cvs-authors` each time the '-A' option is provided and read from that same file each time 'git cvsimport' is run."
msgstr "Por conveniência, esses dados são salvos em `$GIT_DIR/cvs-authors` sempre que a opção `-A` for utilizada e lidos deste mesmo arquivo sempre que o comando `git cvsimport` for executado."

#. type: Plain text
#: en/git-cvsimport.txt:167
#, priority:90
msgid "It is not recommended to use this feature if you intend to export changes back to CVS again later with 'git cvsexportcommit'."
msgstr "Não é recomendável usar esse recurso caso você queira exportar as alterações novamente para o CVS mais tarde com o comando `git cvsexportcommit`."

#. type: Plain text
#: en/git-cvsimport.txt:173
#, priority:90
msgid "Generate a `$GIT_DIR/cvs-revisions` file containing a mapping from CVS revision numbers to newly-created Git commit IDs.  The generated file will contain one line for each (filename, revision) pair imported; each line will look like"
msgstr "Gere um arquivo `$GIT_DIR/cvs-revisions` contendo um mapeamento dos números da revisão do CVS para os IDs dos commits do Git recém-criados.  O arquivo gerado conterá uma linha para cada par (nome do arquivo, revisão) importado; cada linha será semelhante a"

#. type: delimited block -
#: en/git-cvsimport.txt:176
#, no-wrap, priority:90
msgid "src/widget.c 1.1 1d862f173cdc7325b6fa6d2ae1cfd61fd1b512b7\n"
msgstr "src/widget.c 1.1 1d862f173cdc7325b6fa6d2ae1cfd61fd1b512b7\n"

#. type: Plain text
#: en/git-cvsimport.txt:180
#, priority:90
msgid "The revision data is appended to the file if it already exists, for use when doing incremental imports."
msgstr "Os dados da revisão são anexados ao arquivo, para uso ao fazer as importações incrementais, caso já exista."

#. type: Plain text
#: en/git-cvsimport.txt:183
#, priority:90
msgid "This option may be useful if you have CVS revision numbers stored in commit messages, bug-tracking systems, email archives, and the like."
msgstr "Esta opção pode ser útil caso tenha os números da revisão do CVS armazenados nas mensagens do commit, sistemas de rastreamento de erros, arquivos de email e similares."

#. type: Plain text
#: en/git-cvsimport.txt:186
#, priority:90
msgid "Print a short usage message and exit."
msgstr "Imprima uma mensagem curta de uso e encerre."

#. type: Plain text
#: en/git-cvsimport.txt:190
#, priority:90
msgid "If `-v` is specified, the script reports what it is doing."
msgstr "Caso `-v` seja utilizado, o script informa o quê está fazendo."

#. type: Plain text
#: en/git-cvsimport.txt:193
#, priority:90
msgid "Otherwise, success is indicated the Unix way, i.e. by simply exiting with a zero exit status."
msgstr "Caso contrário, o sucesso é indicado da maneira Unix, ou seja, simplesmente saindo com um status de saída zero."

#. type: Title -
#: en/git-cvsimport.txt:196
#, no-wrap, priority:90
msgid "ISSUES"
msgstr "PROBLEMAS"

#. type: Plain text
#: en/git-cvsimport.txt:198
#, priority:90
msgid "Problems related to timestamps:"
msgstr "Problemas relacionados aos registro de data e hora:"

#. type: Plain text
#: en/git-cvsimport.txt:202
#, priority:90
msgid "If timestamps of commits in the CVS repository are not stable enough to be used for ordering commits changes may show up in the wrong order."
msgstr "Caso os registro de data e hora dos commits no repositório CVS não forem estáveis o suficiente para serem utilizados para ordenar os commits, estes poderão aparecer na ordem errada."

#. type: Plain text
#: en/git-cvsimport.txt:204
#, priority:90
msgid "If any files were ever \"cvs import\"ed more than once (e.g., import of more than one vendor release) the HEAD contains the wrong content."
msgstr "Caso algum arquivo seja \"importado por cvs\" mais de uma vez (por exemplo, a importação de mais de uma versão do fornecedor), o conteúdo do `HEAD` estará errado."

#. type: Plain text
#: en/git-cvsimport.txt:207
#, priority:90
msgid "If the timestamp order of different files cross the revision order within the commit matching time window the order of commits may be wrong."
msgstr "Caso a ordem do registro de data e hora dos diferentes arquivos cruze com a ordem da revisão dentro do commit que concida com a janela de tempo do commit, a ordem dos commits poderá estar incorreta."

#. type: Plain text
#: en/git-cvsimport.txt:209
#, priority:90
msgid "Problems related to branches:"
msgstr "Problemas relacionados com os ramos:"

#. type: Plain text
#: en/git-cvsimport.txt:211
#, priority:90
msgid "Branches on which no commits have been made are not imported."
msgstr "As ramificações não são importadas quando nenhum commit tenha sido for feito neles."

#. type: Plain text
#: en/git-cvsimport.txt:213
#, priority:90
msgid "All files from the branching point are added to a branch even if never added in CVS."
msgstr "Todos os arquivos do ponto de ramificação são adicionados a um ramo, mesmo que nunca sejam adicionados ao CVS."

#. type: Plain text
#: en/git-cvsimport.txt:216
#, priority:90
msgid "This applies to files added to the source branch *after* a daughter branch was created: if previously no commit was made on the daughter branch they will erroneously be added to the daughter branch in git."
msgstr "Isso aplica-se aos arquivos adicionados ao ramo de origem *após* a criação de uma ramificação filha tenha sido criada: no caso de nenhum commit anterior ter sido feito nesta ramificação filha, esta será erroneamente adicionada ao git."

#. type: Plain text
#: en/git-cvsimport.txt:218
#, priority:90
msgid "Problems related to tags:"
msgstr "Problemas relacionados com as tags:"

#. type: Plain text
#: en/git-cvsimport.txt:220
#, priority:90
msgid "Multiple tags on the same revision are not imported."
msgstr "Caso a mesma revisão tenha várias tags, elas não serão importadas."

#. type: Plain text
#: en/git-cvsimport.txt:223
#, priority:90
msgid "If you suspect that any of these issues may apply to the repository you want to import, consider using cvs2git:"
msgstr "Se você suspeitar que algum desses problemas possa se aplicar ao repositório que você deseja importar, considere usar o cvs2git:"

#. type: Plain text
#: en/git-cvsimport.txt:225
#, priority:90
msgid "cvs2git (part of cvs2svn), `http://subversion.apache.org/`"
msgstr "cvs2git (part of cvs2svn), `http://subversion.apache.org/`"

#. type: Title =
#: en/git-cvsserver.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-cvsserver(1)"
msgstr "git-cvsserver(1)"

#. type: Plain text
#: en/git-cvsserver.txt:7
#, priority:90
msgid "git-cvsserver - A CVS server emulator for Git"
msgstr "git-cvsserver - Um emulador CVS para o Git"

#. type: Plain text
#: en/git-cvsserver.txt:12
#, priority:90
msgid "SSH:"
msgstr "SSH:"

#. type: Plain text
#: en/git-cvsserver.txt:16
#, no-wrap, priority:90
msgid ""
"export CVS_SERVER=\"git cvsserver\"\n"
"'cvs' -d :ext:user@server/path/repo.git co <HEAD_name>\n"
msgstr ""
"export CVS_SERVER=\"git cvsserver\"\n"
"'cvs' -d :ext:user@server/path/repo.git co <HEAD_name>\n"

#. type: Plain text
#: en/git-cvsserver.txt:18
#, priority:90
msgid "pserver (/etc/inetd.conf):"
msgstr "pserver (/etc/inetd.conf):"

#. type: Plain text
#: en/git-cvsserver.txt:21
#, no-wrap, priority:90
msgid "cvspserver stream tcp nowait nobody /usr/bin/git-cvsserver git-cvsserver pserver\n"
msgstr "cvspserver stream tcp nowait nobody /usr/bin/git-cvsserver git-cvsserver pserver\n"

#. type: Plain text
#: en/git-cvsserver.txt:23
#, priority:90
msgid "Usage:"
msgstr "Uso:"

#. type: Plain text
#: en/git-cvsserver.txt:26
#, ignore-ellipsis, no-wrap, priority:90
msgid "'git-cvsserver' [<options>] [pserver|server] [<directory> ...]\n"
msgstr "'git-cvsserver' [<opções>] [pserver|server] [<diretório> ...]\n"

#. type: Plain text
#: en/git-cvsserver.txt:31
#, priority:90
msgid "This application is a CVS emulation layer for Git."
msgstr "Esta aplicação é uma camada de emulação do CVS para o Git."

#. type: Plain text
#: en/git-cvsserver.txt:35
#, priority:90
msgid "It is highly functional. However, not all methods are implemented, and for those methods that are implemented, not all switches are implemented."
msgstr "É altamente funcional. No entanto, nem todos os métodos são implementados e para os métodos já implementados, nem todos as chaves estão implementadas."

#. type: Plain text
#: en/git-cvsserver.txt:38
#, priority:90
msgid "Testing has been done using both the CLI CVS client, and the Eclipse CVS plugin. Most functionality works fine with both of these clients."
msgstr "O teste foi realizado utilizando o cliente CLI CVS e o plug-in Eclipse CVS. A maioria das funcionalidades funciona bem com esses dois clientes."

#. type: Plain text
#: en/git-cvsserver.txt:45
#, priority:90
msgid "All these options obviously only make sense if enforced by the server side.  They have been implemented to resemble the linkgit:git-daemon[1] options as closely as possible."
msgstr "Obviamente, todas essas opções só fazem sentido se aplicadas pelo lado do servidor.  Eles foram implementados para se parecerem o mais próximo possível com as opções linkgit:git-daemon[1]."

#. type: Labeled list
#: en/git-cvsserver.txt:46
#, no-wrap, priority:90
msgid "--base-path <path>"
msgstr "--base-path <caminho>"

#. type: Plain text
#: en/git-cvsserver.txt:48
#, priority:90
msgid "Prepend 'path' to requested CVSROOT"
msgstr "Acrescente o `caminho` para o CVSROOT solicitado"

#. type: Labeled list
#: en/git-cvsserver.txt:49 en/git-daemon.txt:49
#, ignore-same, no-wrap, priority:100
msgid "--strict-paths"
msgstr "--strict-paths"

#. type: Plain text
#: en/git-cvsserver.txt:51
#, priority:90
msgid "Don't allow recursing into subdirectories"
msgstr "Não permitir a recorrência em subdiretórios"

#. type: Labeled list
#: en/git-cvsserver.txt:52 en/git-daemon.txt:78
#, ignore-same, no-wrap, priority:100
msgid "--export-all"
msgstr "--export-all"

#. type: Plain text
#: en/git-cvsserver.txt:55
#, priority:90
msgid "Don't check for `gitcvs.enabled` in config. You also have to specify a list of allowed directories (see below) if you want to use this option."
msgstr "Não verifique por `gitcvs.enabled` na configuração. Caso queira usar esta opção você também precisa especificar uma lista de diretórios permitidos (veja abaixo)."

#. type: Labeled list
#: en/git-cvsserver.txt:56
#, no-wrap, priority:90
msgid "-V"
msgstr "-V"

#. type: Labeled list
#: en/git-cvsserver.txt:57 en/git.txt:43
#, ignore-same, no-wrap, priority:100
msgid "--version"
msgstr "--version"

#. type: Plain text
#: en/git-cvsserver.txt:59
#, priority:90
msgid "Print version information and exit"
msgstr "Imprima a informação da versão e encerre"

#. type: Labeled list
#: en/git-cvsserver.txt:62 en/git.txt:51
#, ignore-same, no-wrap, priority:100
msgid "--help"
msgstr "--help"

#. type: Plain text
#: en/git-cvsserver.txt:64
#, priority:90
msgid "Print usage information and exit"
msgstr "Imprima a informação de uso e encerre"

#. type: Plain text
#: en/git-cvsserver.txt:70
#, fuzzy, priority:90
#| msgid "You can specify a list of allowed directories. If no directories are given, all are allowed. This is an additional restriction, gitcvs access still needs to be enabled by the `gitcvs.enabled` config option unless `--export-all` was given, too."
msgid "The remaining arguments provide a list of directories. If no directories are given, then all are allowed. Repositories within these directories still require the `gitcvs.enabled` config option, unless `--export-all` is specified."
msgstr "Você pode especificar uma lista de diretórios permitidos. Caso nenhum diretório seja informado, todos serão permitidos. Esta é uma restrição adicional, o acesso ao `gitcvs` ainda precisa ser ativado pela opção da configuração do `gitcvs.enabled`, a menos que o `--export=all` também tenha sido utilizado."

#. type: Title -
#: en/git-cvsserver.txt:72 en/git-fast-export.txt:272
#, no-wrap, priority:90
msgid "LIMITATIONS"
msgstr "LIMITAÇÕES"

#. type: Plain text
#: en/git-cvsserver.txt:75
#, priority:90
msgid "CVS clients cannot tag, branch or perform Git merges."
msgstr "Os clientes CVS não podem marcar, ramificar ou executar mesclagens do Git."

#. type: Plain text
#: en/git-cvsserver.txt:79
#, priority:90
msgid "'git-cvsserver' maps Git branches to CVS modules. This is very different from what most CVS users would expect since in CVS modules usually represent one or more directories."
msgstr "O comando `git-cvsserver` mapeia as ramificações do Git para os módulos CVS. Isso é muito diferente do que a maioria dos usuários do CVS esperariam, uma vez que nos módulos do CVS geralmente representam um ou mais diretórios."

#. type: Title -
#: en/git-cvsserver.txt:81
#, no-wrap, priority:90
msgid "INSTALLATION"
msgstr "INSTALAÇÃO"

#. type: Plain text
#: en/git-cvsserver.txt:85
#, priority:90
msgid "If you are going to offer CVS access via pserver, add a line in /etc/inetd.conf like"
msgstr "Caso queira oferecer acesso ao CVS via `pserver`, adicione uma linha no `/etc/inetd.conf`, exemplo"

#. type: delimited block -
#: en/git-cvsserver.txt:89
#, no-wrap, priority:90
msgid "   cvspserver stream tcp nowait nobody git-cvsserver pserver\n"
msgstr "   cvspserver stream tcp nowait nobody git-cvsserver pserver\n"

#. type: Plain text
#: en/git-cvsserver.txt:95
#, priority:90
msgid "Note: Some inetd servers let you specify the name of the executable independently of the value of argv[0] (i.e. the name the program assumes it was executed with). In this case the correct line in /etc/inetd.conf looks like"
msgstr "Alguns servidores `inetd` permite especificar o nome do executável independentemente do valor de `argv[0]` (ou seja, o nome com o qual o programa assume que foi executado). Nesse caso, a linha correta no `/etc/inetd.conf` se parece com"

#. type: delimited block -
#: en/git-cvsserver.txt:98
#, no-wrap, priority:90
msgid "   cvspserver stream tcp nowait nobody /usr/bin/git-cvsserver git-cvsserver pserver\n"
msgstr "   cvspserver stream tcp nowait nobody /usr/bin/git-cvsserver git-cvsserver pserver\n"

#. type: Plain text
#: en/git-cvsserver.txt:105
#, priority:90
msgid "Only anonymous access is provided by pserver by default. To commit you will have to create pserver accounts, simply add a gitcvs.authdb setting in the config file of the repositories you want the cvsserver to allow writes to, for example:"
msgstr "Por predefinição, o `pserver` oferece apenas o acesso anônimo. Para fazer o commit, você precisará criar contas `pserver`, basta adicionar uma configuração `gitcvs.authdb` no arquivo de configuração dos repositórios nos quais você deseja que o `cvsserver` tenha permissão de gravação, por exemplo:"

#. type: delimited block -
#: en/git-cvsserver.txt:110
#, no-wrap, priority:90
msgid ""
"   [gitcvs]\n"
"\tauthdb = /etc/cvsserver/passwd\n"
msgstr ""
"   [gitcvs]\n"
"\tauthdb = /etc/cvsserver/passwd\n"

#. type: Plain text
#: en/git-cvsserver.txt:114
#, priority:90
msgid "The format of these files is username followed by the encrypted password, for example:"
msgstr "O formato destes arquivos é o nome do usuário seguido pela senha criptografada, por exemplo:"

#. type: delimited block -
#: en/git-cvsserver.txt:119
#, no-wrap, priority:90
msgid ""
"   myuser:sqkNi8zPf01HI\n"
"   myuser:$1$9K7FzU28$VfF6EoPYCJEYcVQwATgOP/\n"
"   myuser:$5$.NqmNH1vwfzGpV8B$znZIcumu1tNLATgV2l6e1/mY8RzhUDHMOaVOeL1cxV3\n"
msgstr ""
"   myuser:sqkNi8zPf01HI\n"
"   myuser:$1$9K7FzU28$VfF6EoPYCJEYcVQwATgOP/\n"
"   myuser:$5$.NqmNH1vwfzGpV8B$znZIcumu1tNLATgV2l6e1/mY8RzhUDHMOaVOeL1cxV3\n"

#. type: Plain text
#: en/git-cvsserver.txt:122
#, priority:90
msgid "You can use the 'htpasswd' facility that comes with Apache to make these files, but only with the -d option (or -B if your system suports it)."
msgstr "Você pode usar o recurso `htpasswd` que acompanha o Apache para criar estes arquivos, porém apenas com a opção -d (ou -B caso haja suporte no seu sistema)."

#. type: Plain text
#: en/git-cvsserver.txt:126
#, priority:90
msgid "Preferably use the system specific utility that manages password hash creation in your platform (e.g. mkpasswd in Linux, encrypt in OpenBSD or pwhash in NetBSD) and paste it in the right location."
msgstr "De preferência use o utilitário específico do sistema responsável pelo gerenciamento da criação do hash da senha da sua plataforma (por exemplo, mkpasswd no Linux, encrypt no OpenBSD ou pwhash no NetBSD) e cole-o no local apropriado."

#. type: Plain text
#: en/git-cvsserver.txt:128
#, priority:90
msgid "Then provide your password via the pserver method, for example:"
msgstr "Em seguida, forneça sua senha pelo método `pserver`, por exemplo:"

#. type: delimited block -
#: en/git-cvsserver.txt:130
#, no-wrap, priority:90
msgid "   cvs -d:pserver:someuser:somepassword@server:/path/repo.git co <HEAD_name>\n"
msgstr "   cvs -d:pserver:someuser:somepassword@server:/path/repo.git co <nome_do_HEAD>\n"

#. type: Plain text
#: en/git-cvsserver.txt:134
#, priority:90
msgid "No special setup is needed for SSH access, other than having Git tools in the PATH. If you have clients that do not accept the CVS_SERVER environment variable, you can rename 'git-cvsserver' to `cvs`."
msgstr "Nenhuma configuração especial é necessária para o acesso SSH, além de ter as ferramentas Git no PATH. Caso tenha clientes que não aceitam a variável de ambiente `CVS_SERVER`, é possível renomear o `git-cvsserver` para `cvs`."

#. type: Plain text
#: en/git-cvsserver.txt:137
#, priority:90
msgid "Note: Newer CVS versions (>= 1.12.11) also support specifying CVS_SERVER directly in CVSROOT like"
msgstr "Observação: As versões mais recentes do CVS (>= 1.12.11) também é compatível a especificação do `CVS_SERVER` diretamente no `CVSROOT`, como"

#. type: delimited block -
#: en/git-cvsserver.txt:140
#, no-wrap, priority:90
msgid "   cvs -d \":ext;CVS_SERVER=git cvsserver:user@server/path/repo.git\" co <HEAD_name>\n"
msgstr "   cvs -d \":ext;CVS_SERVER=git cvsserver:user@server/path/repo.git\" co <HEAD_name>\n"

#. type: Plain text
#: en/git-cvsserver.txt:146
#, priority:90
msgid "This has the advantage that it will be saved in your 'CVS/Root' files and you don't need to worry about always setting the correct environment variable.  SSH users restricted to 'git-shell' don't need to override the default with CVS_SERVER (and shouldn't) as 'git-shell' understands `cvs` to mean 'git-cvsserver' and pretends that the other end runs the real 'cvs' better."
msgstr "Isso tem a vantagem de ser salvo nos arquivos `CVS/Root` e você não precisa se preocupar em sempre definir a variável do ambiente corretamente.  Os usuários SSH restritos ao `git shell` não precisam substituir a predefinição com `CVS_SERVER` (e não deveriam), pois o `git shell` entende o `cvs` como `git-cvsserver` e finge que a outra extremidade executa melhor o `cvs` real."

#. type: Plain text
#: en/git-cvsserver.txt:149
#, priority:90
msgid "For each repo that you want accessible from CVS you need to edit config in the repo and add the following section."
msgstr "Para cada repositório que você queira acessar no CVS, é necessário editar a configuração no repositório e adicionar a seção a seguir."

#. type: delimited block -
#: en/git-cvsserver.txt:156
#, no-wrap, priority:90
msgid ""
"   [gitcvs]\n"
"        enabled=1\n"
"        # optional for debugging\n"
"\tlogFile=/path/to/logfile\n"
msgstr ""
"   [gitcvs]\n"
"        enabled=1\n"
"        # optional for debugging\n"
"\tlogFile=/caminho/para/o/logfile\n"

#. type: Plain text
#: en/git-cvsserver.txt:162
#, priority:90
msgid "Note: you need to ensure each user that is going to invoke 'git-cvsserver' has write access to the log file and to the database (see <<dbbackend,Database Backend>>. If you want to offer write access over SSH, the users of course also need write access to the Git repository itself."
msgstr "Observação: você precisa garantir que cada usuário que invoque o comando `git-cvsserver` tenha acesso de gravação ao arquivo de registro log e ao banco de dados (consulte <<dbbackend,Database Backend>>. Caso queira oferecer acesso de gravação via SSH, é óbvio que os usuários também precisam ter acesso de gravação ao próprio repositório Git."

#. type: Plain text
#: en/git-cvsserver.txt:165
#, priority:90
msgid "You also need to ensure that each repository is \"bare\" (without a Git index file) for `cvs commit` to work. See linkgit:gitcvs-migration[7]."
msgstr "Você também precisa garantir que cada repositório seja \"simples\" (sem um arquivo do índice do Git) para que o comando `cvs commit` funcione. Consulte linkgit:gitcvs-migration[7]."

#. type: Plain text
#: en/git-cvsserver.txt:171
#, priority:90
msgid "All configuration variables can also be overridden for a specific method of access. Valid method names are \"ext\" (for SSH access) and \"pserver\". The following example configuration would disable pserver access while still allowing access over SSH."
msgstr "Todas as variáveis de configuração também podem ser substituídas por um método específico de acesso. Os nomes para os métodos válidos são `ext` (para acesso SSH) e `pserver`. O exemplo da configuração a seguir desabilitaria o acesso ao `pserver` enquanto ainda permita o acesso pelo SSH."

#. type: delimited block -
#: en/git-cvsserver.txt:174
#, no-wrap, priority:90
msgid ""
"   [gitcvs]\n"
"        enabled=0\n"
msgstr ""
"   [gitcvs]\n"
"        enabled=0\n"

#. type: delimited block -
#: en/git-cvsserver.txt:177
#, no-wrap, priority:90
msgid ""
"   [gitcvs \"ext\"]\n"
"        enabled=1\n"
msgstr ""
"   [gitcvs \"ext\"]\n"
"        enabled=1\n"

#. type: Plain text
#: en/git-cvsserver.txt:184
#, priority:90
msgid "If you didn't specify the CVSROOT/CVS_SERVER directly in the checkout command, automatically saving it in your 'CVS/Root' files, then you need to set them explicitly in your environment.  CVSROOT should be set as per normal, but the directory should point at the appropriate Git repo.  As above, for SSH clients _not_ restricted to 'git-shell', CVS_SERVER should be set to 'git-cvsserver'."
msgstr "Caso não tenha especificado o `CVSROOT/CVS_SERVER` diretamente no comando do checkout, salvando-o automaticamente nos arquivos 'CVS/Root', então é necessário defini-los de forma explicita na sua variável de ambiente.  O `CVSROOT` deve ser definido normalmente, mas o diretório deve apontar para o repositório Git apropriado.  Como acima, os clientes SSH _não_ estão restritos ao `git-shell`, o `CVS_SERVER` deve ser definido com o comando `git cvsserver`."

#. type: delimited block -
#: en/git-cvsserver.txt:189
#, no-wrap, priority:90
msgid ""
"   export CVSROOT=:ext:user@server:/var/git/project.git\n"
"   export CVS_SERVER=\"git cvsserver\"\n"
msgstr ""
"   export CVSROOT=:ext:user@server:/var/git/project.git\n"
"   export CVS_SERVER=\"git cvsserver\"\n"

#. type: Plain text
#: en/git-cvsserver.txt:196
#, priority:90
msgid "For SSH clients that will make commits, make sure their server-side .ssh/environment files (or .bashrc, etc., according to their specific shell)  export appropriate values for GIT_AUTHOR_NAME, GIT_AUTHOR_EMAIL, GIT_COMMITTER_NAME, and GIT_COMMITTER_EMAIL.  For SSH clients whose login shell is bash, .bashrc may be a reasonable alternative."
msgstr "Para clientes SSH que efetuam commits, verifique se os arquivos `.ssh/environment` do lado do servidor (ou `.bashrc`, etc., de acordo com o seu ambiente shell da sia distro) exportam os valores apropriados para `GIT_AUTHOR_NAME`, `GIT_AUTHOR_EMAIL`, `GIT_COMMITTER_NAME` e `GIT_COMMITTER_EMAIL`.  Para clientes SSH cujo shell de login seja o bash, o `.bashrc` pode ser uma alternativa razoável."

#. type: Plain text
#: en/git-cvsserver.txt:202
#, priority:90
msgid "Clients should now be able to check out the project. Use the CVS 'module' name to indicate what Git 'head' you want to check out.  This also sets the name of your newly checked-out directory, unless you tell it otherwise with `-d <dir_name>`.  For example, this checks out 'master' branch to the `project-master` directory:"
msgstr "Os clientes agora devem conseguir fazer a averiguação no projeto. Utilize o nome do 'module' do CVS para indicar qual 'head' do Git você deseja fazer a averiguação.  Isso também define o nome do diretório que foi feito a averiguação recentemente, a menos que você diga o contrário com a opção `-d`. Por exemplo, isso faz check-out do ramo 'master' no diretório `master do projeto`:  Por exemplo, é verificado o ramo 'master' no diretório `project-master`:"

#. type: delimited block -
#: en/git-cvsserver.txt:205
#, no-wrap, priority:90
msgid "   cvs co -d project-master master\n"
msgstr "   cvs co -d project-master master\n"

#. type: Title -
#: en/git-cvsserver.txt:209
#, no-wrap, priority:90
msgid "DATABASE BACKEND"
msgstr "ESTRUTURA DO BANCO DE DADOS"

#. type: Plain text
#: en/git-cvsserver.txt:215
#, priority:90
msgid "'git-cvsserver' uses one database per Git head (i.e. CVS module) to store information about the repository to maintain consistent CVS revision numbers. The database needs to be updated (i.e. written to) after every commit."
msgstr "O comando `git-cvsserver` utiliza um banco de dados por cabeçalho Git (ou seja, módulo CVS) para armazenar as informações sobre o repositório, para manter números de revisão do CVS consistentes. O banco de dados precisa ser atualizado após cada commit."

#. type: Plain text
#: en/git-cvsserver.txt:220
#, priority:90
msgid "If the commit is done directly by using `git` (as opposed to using 'git-cvsserver') the update will need to happen on the next repository access by 'git-cvsserver', independent of access method and requested operation."
msgstr "Caso o commit seja feito diretamente utilizando o `git` (em vez de usar o `git-cvsserver`), a atualização precisará ocorrer no próximo acesso ao repositório pelo `git-cvsserver`, independentemente do método de acesso e da operação solicitada."

#. type: Plain text
#: en/git-cvsserver.txt:225
#, priority:90
msgid "That means that even if you offer only read access (e.g. by using the pserver method), 'git-cvsserver' should have write access to the database to work reliably (otherwise you need to make sure that the database is up to date any time 'git-cvsserver' is executed)."
msgstr "Isso significa que, mesmo que você ofereça apenas o acesso de leitura (utilizando o método `pserver` por exemplo), o comando `git-cvsserver` deve ter acesso de gravação ao banco de dados para funcionar de maneira correta (caso contrário, você precisa garantir que o banco de dados esteja atualizado a qualquer momento quando o `git-cvsserver` for executado)."

#. type: Plain text
#: en/git-cvsserver.txt:232
#, priority:90
msgid "By default it uses SQLite databases in the Git directory, named `gitcvs.<module_name>.sqlite`. Note that the SQLite backend creates temporary files in the same directory as the database file on write so it might not be enough to grant the users using 'git-cvsserver' write access to the database file without granting them write access to the directory, too."
msgstr "Por predefinição no diretório Git é utilizado o banco de dados SQLite com nome `gitcvs.<nome_do_módulo>.sqlite`. Observe que a estrutura do SQLite cria arquivos temporários no mesmo diretório que o arquivo de banco de dados durante a gravação, portanto, pode não ser suficiente conceder aos usuários que usam o `vgit-cvsserver` o acesso de gravação ao arquivo do banco de dados sem conceder a eles também o acesso de gravação ao diretório."

#. type: Plain text
#: en/git-cvsserver.txt:244
#, priority:90
msgid "The database cannot be reliably regenerated in a consistent form after the branch it is tracking has changed.  Example: For merged branches, 'git-cvsserver' only tracks one branch of development, and after a 'git merge' an incrementally updated database may track a different branch than a database regenerated from scratch, causing inconsistent CVS revision numbers. `git-cvsserver` has no way of knowing which branch it would have picked if it had been run incrementally pre-merge. So if you have to fully or partially (from old backup) regenerate the database, you should be suspicious of pre-existing CVS sandboxes."
msgstr "O banco de dados não pode ser regenerado de forma consistente após que uma alteração do ramo que está sendo monitorado foi modificado.  Exemplo: Para as ramificações mescladas, o comando 'git cvsserver' monitora apenas um ramo do desenvolvimento e após o 'git merge', um banco de dados atualizado de forma incremental pode monitorar um ramo diferente do que um banco de dados regenerado do zero, causando números inconsistentes da revisão do CVS. O comando `git-cvsserver` não tem como saber qual ramo ele escolheria caso tivesse sido executado de forma incremental antes da mesclagem. Portanto, caso precise de uma regeneração completa ou parcial (do backup antigo) do banco de dados, desconfie das caixas de proteção do CVS pré-existentes."

#. type: Plain text
#: en/git-cvsserver.txt:247
#, priority:90
msgid "You can configure the database backend with the following configuration variables:"
msgstr "Você pode configurar a estrutura do banco de dados com as seguintes variáveis de configuração:"

#. type: Title ~
#: en/git-cvsserver.txt:249
#, no-wrap, priority:90
msgid "Configuring database backend"
msgstr "Configurando a estrutura do banco de dados"

#. type: Plain text
#: en/git-cvsserver.txt:254
#, priority:90
msgid "'git-cvsserver' uses the Perl DBI module. Please also read its documentation if changing these variables, especially about `DBI->connect()`."
msgstr "O 'git-cvsserver' utiliza o módulo Perl DBI. Leia também a sua documentação caso mude essas variáveis, especialmente as relacionadas com `DBI->connect()`."

#. type: Labeled list
#: en/git-cvsserver.txt:255
#, no-wrap, priority:90
msgid "gitcvs.dbName"
msgstr "gitcvs.dbName"

#. type: Plain text
#: en/git-cvsserver.txt:261
#, priority:90
msgid "Database name. The exact meaning depends on the selected database driver, for SQLite this is a filename.  Supports variable substitution (see below). May not contain semicolons (`;`).  Default: '%Ggitcvs.%m.sqlite'"
msgstr "Nome do banco de dados. O significado exato depende do driver do banco de dados selecionado; para o SQLite, esse é um nome do arquivo.  É compatível com a reposição da variável (veja abaixo). Não pode conter ponto e vírgula (`;`).  Predefinição: '%Ggitcvs.%m.sqlite'"

#. type: Labeled list
#: en/git-cvsserver.txt:262
#, no-wrap, priority:90
msgid "gitcvs.dbDriver"
msgstr "gitcvs.dbDriver"

#. type: Plain text
#: en/git-cvsserver.txt:270
#, priority:90
msgid "Used DBI driver. You can specify any available driver for this here, but it might not work. cvsserver is tested with 'DBD::SQLite', reported to work with 'DBD::Pg', and reported *not* to work with 'DBD::mysql'.  Please regard this as an experimental feature. May not contain colons (`:`).  Default: 'SQLite'"
msgstr "Driver DBI utilizado. Você pode especificar qualquer driver disponível, mas pode não funcionar. O `cvsserver` é testado com 'DBD::SQLite', foi informado que funciona com 'DBD::Pg' mas *não* com 'DBD::mysql'.  Considere isso como um recurso experimental. Não pode conter ponto e vírgula (`;`).  Predefinição: 'SQLite'"

#. type: Labeled list
#: en/git-cvsserver.txt:271
#, no-wrap, priority:90
msgid "gitcvs.dbuser"
msgstr "gitcvs.dbuser"

#. type: Plain text
#: en/git-cvsserver.txt:275
#, priority:90
msgid "Database user. Only useful if setting `dbDriver`, since SQLite has no concept of database users. Supports variable substitution (see below)."
msgstr "O banco de dados do usuário. Útil apenas caso o `dbDriver` esteja configurando, pois o banco de dados SQLite não trabalha com usuários. É compatível com a reposição da variável (veja abaixo)."

#. type: Labeled list
#: en/git-cvsserver.txt:276
#, no-wrap, priority:90
msgid "gitcvs.dbPass"
msgstr "gitcvs.dbPass"

#. type: Plain text
#: en/git-cvsserver.txt:279
#, priority:90
msgid "Database password.  Only useful if setting `dbDriver`, since SQLite has no concept of database passwords."
msgstr "Senha do banco de dados.  Útil apenas caso o  `dbDriver` esteja configurando, pois o banco de dados SQLite não trabalha com senhas."

#. type: Labeled list
#: en/git-cvsserver.txt:280
#, no-wrap, priority:90
msgid "gitcvs.dbTableNamePrefix"
msgstr "gitcvs.dbTableNamePrefix"

#. type: Plain text
#: en/git-cvsserver.txt:284
#, priority:90
msgid "Database table name prefix.  Supports variable substitution (see below).  Any non-alphabetic characters will be replaced with underscores."
msgstr "Prefixo do nome da tabela do banco de dados.  É compatível com a reposição da variável (veja abaixo).  Quaisquer caracteres não alfabéticos serão substituídos por sublinhados."

#. type: Plain text
#: en/git-cvsserver.txt:286
#, priority:90
msgid "All variables can also be set per access method, see <<configaccessmethod,above>>."
msgstr "Todas as variáveis também podem ser definidas através do método de acesso, consulte <<configaccessmethod,above>>."

#. type: Title ^
#: en/git-cvsserver.txt:288
#, no-wrap, priority:90
msgid "Variable substitution"
msgstr "Substituição de variável"

#. type: Plain text
#: en/git-cvsserver.txt:290
#, priority:90
msgid "In `dbDriver` and `dbUser` you can use the following variables:"
msgstr "Você pode utilizar as seguintes variáveis em `dbDriver` e `dbUser`:"

#. type: Labeled list
#: en/git-cvsserver.txt:291
#, ignore-same, no-wrap, priority:90
msgid "%G"
msgstr "%G"

#. type: Plain text
#: en/git-cvsserver.txt:293
#, priority:90
msgid "Git directory name"
msgstr "Nome do diretório Git"

#. type: Labeled list
#: en/git-cvsserver.txt:293
#, ignore-same, no-wrap, priority:90
msgid "%g"
msgstr "%g"

#. type: Plain text
#: en/git-cvsserver.txt:298
#, priority:90
msgid "Git directory name, where all characters except for alphanumeric ones, `.`, and `-` are replaced with `_` (this should make it easier to use the directory name in a filename if wanted)"
msgstr "O nome do diretório Git onde todos os caracteres exceto os alfanuméricos, `.` e `-`, são substituídos por `_` (isso deve facilitar o uso do nome do diretório em um nome de arquivo, se assim for desejado)"

#. type: Labeled list
#: en/git-cvsserver.txt:298
#, ignore-same, no-wrap, priority:90
msgid "%m"
msgstr "%m"

#. type: Plain text
#: en/git-cvsserver.txt:300
#, priority:90
msgid "CVS module/Git head name"
msgstr "CVS module/Git head name"

#. type: Labeled list
#: en/git-cvsserver.txt:300
#, ignore-same, no-wrap, priority:90
msgid "%a"
msgstr "%a"

#. type: Plain text
#: en/git-cvsserver.txt:302
#, priority:90
msgid "access method (one of \"ext\" or \"pserver\")"
msgstr "método de acesso (um \"ext\" ou \"pserver\")"

#. type: Labeled list
#: en/git-cvsserver.txt:302
#, ignore-same, no-wrap, priority:90
msgid "%u"
msgstr "%u"

#. type: Plain text
#: en/git-cvsserver.txt:306
#, priority:90
msgid "Name of the user running 'git-cvsserver'.  If no name can be determined, the numeric uid is used."
msgstr "Nome do usuário que está executando o 'git-cvsserver'.  O uid numérico é utilizado caso nenhum nome possa ser determinado."

#. type: Plain text
#: en/git-cvsserver.txt:312
#, priority:90
msgid "These variables obviate the need for command-line options in some circumstances, allowing easier restricted usage through git-shell."
msgstr "Essas variáveis evitam a necessidade do uso de opções na linha de comando em algumas circunstâncias, permitindo um uso restrito e mais fácil através do `git-shell`."

#. type: Labeled list
#: en/git-cvsserver.txt:313
#, ignore-same, no-wrap, priority:90
msgid "GIT_CVSSERVER_BASE_PATH"
msgstr "GIT_CVSSERVER_BASE_PATH"

#. type: Plain text
#: en/git-cvsserver.txt:315
#, fuzzy, priority:90
#| msgid "GIT_CVSSERVER_BASE_PATH takes the place of the argument to --base-path."
msgid "This variable replaces the argument to --base-path."
msgstr "`GIT_CVSSERVER_BASE_PATH` substitui o argumento para `--base-path`."

#. type: Labeled list
#: en/git-cvsserver.txt:316
#, ignore-same, no-wrap, priority:90
msgid "GIT_CVSSERVER_ROOT"
msgstr "GIT_CVSSERVER_ROOT"

#. type: Plain text
#: en/git-cvsserver.txt:320
#, ignore-ellipsis, priority:90
msgid "This variable specifies a single directory, replacing the `<directory>...` argument list. The repository still requires the `gitcvs.enabled` config option, unless `--export-all` is specified."
msgstr ""

#. type: Plain text
#: en/git-cvsserver.txt:323
#, priority:90
msgid "When these environment variables are set, the corresponding command-line arguments may not be used."
msgstr "Quando essas variáveis do ambiente são definidas, os argumentos correspondentes da linha de comando não podem ser utilizados."

#. type: Title -
#: en/git-cvsserver.txt:325
#, no-wrap, priority:90
msgid "ECLIPSE CVS CLIENT NOTES"
msgstr "OBSERVAÇÕES SOBRE O CLIENTE ECLIPSE CVS"

#. type: Plain text
#: en/git-cvsserver.txt:328
#, priority:90
msgid "To get a checkout with the Eclipse CVS client:"
msgstr "Para conseguir uma averiguação com o cliente Eclipse CVS:"

#. type: Plain text
#: en/git-cvsserver.txt:330
#, priority:90
msgid "Select \"Create a new project -> From CVS checkout\""
msgstr "Escolha \"Criar um novo projeto -> Do check-ou CVS\""

#. type: Plain text
#: en/git-cvsserver.txt:332
#, priority:90
msgid "Create a new location. See the notes below for details on how to choose the right protocol."
msgstr "Crie um novo local. Veja as anotações abaixo para obter mais detalhes sobre como escolher o protocolo correto."

#. type: Plain text
#: en/git-cvsserver.txt:335
#, priority:90
msgid "Browse the 'modules' available. It will give you a list of the heads in the repository. You will not be able to browse the tree from there. Only the heads."
msgstr "Navegue pelos 'módulos' disponíveis. Ele fornecerá uma lista dos `heads` no repositório. Você não poderá navegar na árvore a partir daí. Apenas os `heads`."

#. type: Plain text
#: en/git-cvsserver.txt:337
#, priority:90
msgid "Pick `HEAD` when it asks what branch/tag to check out. Untick the \"launch commit wizard\" to avoid committing the .project file."
msgstr "Escolha `HEAD` quando perguntar qual o ramo/tag deve ser verificado. Desmarque o \"assistente de inicialização do commit\" para evitar fazer o commit no arquivo .project."

#. type: Plain text
#: en/git-cvsserver.txt:343
#, priority:90
msgid "Protocol notes: If you are using anonymous access via pserver, just select that.  Those using SSH access should choose the 'ext' protocol, and configure 'ext' access on the Preferences->Team->CVS->ExtConnection pane. Set CVS_SERVER to \"`git cvsserver`\". Note that password support is not good when using 'ext', you will definitely want to have SSH keys setup."
msgstr "Notas sobre o protocolo: Selecione isso caso esteja utilizando o acesso anônimo via pserver.  Aqueles que usam o acesso SSH devem escolher o protocolo 'ext' e configurar o acesso 'ext' no painel \"Preferências> Equipe> CVS> ExtConnection\". Defina o `CVS_SERVER` para \"`git cvsserver`\". Observe que o suporte à senha não é bom quando usar o 'ext'; você definitivamente vai preferir usar e ter as chaves SSH configuradas."

#. type: Plain text
#: en/git-cvsserver.txt:348
#, priority:90
msgid "Alternatively, you can just use the non-standard extssh protocol that Eclipse offer. In that case CVS_SERVER is ignored, and you will have to replace the cvs utility on the server with 'git-cvsserver' or manipulate your `.bashrc` so that calling 'cvs' effectively calls 'git-cvsserver'."
msgstr "Como alternativa, você pode apenas usar o protocolo não padrão `extssh` que o Eclipse oferece. Neste caso o `CVS_SERVER` é ignorado e você terá que substituir o utilitário cvs no servidor por `git-cvsserver` ou manipular o seu `.bashrc` para que a chamada 'cvs' efetivamente chame o `git-cvsserver`."

#. type: Title -
#: en/git-cvsserver.txt:350
#, no-wrap, priority:90
msgid "CLIENTS KNOWN TO WORK"
msgstr "CLIENTES CONHECIDOS QUE FUNCIONAM"

#. type: Plain text
#: en/git-cvsserver.txt:353
#, priority:90
msgid "CVS 1.12.9 on Debian"
msgstr "CVS 1.12.9 no Debian"

#. type: Plain text
#: en/git-cvsserver.txt:354
#, priority:90
msgid "CVS 1.11.17 on MacOSX (from Fink package)"
msgstr "CVS 1.11.17 no MacOSX (do pacote Fink)"

#. type: Plain text
#: en/git-cvsserver.txt:355
#, priority:90
msgid "Eclipse 3.0, 3.1.2 on MacOSX (see Eclipse CVS Client Notes)"
msgstr "Eclipse 3.0, 3.1.2 no MacOSX (veja notas do Cliente Eclipse CVS)"

#. type: Plain text
#: en/git-cvsserver.txt:356
#, priority:90
msgid "TortoiseCVS"
msgstr "TortoiseCVS"

#. type: Title -
#: en/git-cvsserver.txt:358
#, no-wrap, priority:90
msgid "OPERATIONS SUPPORTED"
msgstr "OPERAÇÕES COMPATÍVEIS"

#. type: Plain text
#: en/git-cvsserver.txt:362
#, priority:90
msgid "All the operations required for normal use are supported, including checkout, diff, status, update, log, add, remove, commit."
msgstr "Todas as operações necessárias para o uso normal são compatíveis, incluindo \"checkout\", \"diff\", \"status\", \"update\", \"log\", \"add\", \"remove\" e \"commit\"."

#. type: Plain text
#: en/git-cvsserver.txt:371
#, priority:90
msgid "Most CVS command arguments that read CVS tags or revision numbers (typically -r) work, and also support any git refspec (tag, branch, commit ID, etc).  However, CVS revision numbers for non-default branches are not well emulated, and cvs log does not show tags or branches at all.  (Non-main-branch CVS revision numbers superficially resemble CVS revision numbers, but they actually encode a git commit ID directly, rather than represent the number of revisions since the branch point.)"
msgstr "A maioria dos argumentos dos comandos do CVS que leem as tags CVS ou os números da revisão (normalmente `-r`) funcionam, e também são compatíveis com qualquer git \"refspec\" (\"tag\", \"branch\", ID do commit, etc).  No entanto, os números de revisão do CVS para as ramificações fora do padrão não são bem emuladas e o registro log do cvs não exibe as tags ou quaisquer ramificações.  (Os números de revisão do CVS que não são do ramo principal se assemelham superficialmente aos números da revisão do CVS, mas na verdade codificam um ID do commit diretamente, em vez de representar a quantidade de revisões desde o ponto do ramo inicial.)"

#. type: Plain text
#: en/git-cvsserver.txt:385
#, priority:90
msgid "Note that there are two ways to checkout a particular branch.  As described elsewhere on this page, the \"module\" parameter of cvs checkout is interpreted as a branch name, and it becomes the main branch.  It remains the main branch for a given sandbox even if you temporarily make another branch sticky with cvs update -r.  Alternatively, the -r argument can indicate some other branch to actually checkout, even though the module is still the \"main\" branch.  Tradeoffs (as currently implemented): Each new \"module\" creates a new database on disk with a history for the given module, and after the database is created, operations against that main branch are fast.  Or alternatively, -r doesn't take any extra disk space, but may be significantly slower for many operations, like cvs update."
msgstr "Observe que existem duas maneiras de fazer check-out de um determinado ramo.  Conforme descrito em outra parte desta página, o parâmetro \"module\" do \"cvs checkout\" é interpretado como um nome do ramo e se torna o ramo principal.  Ele permanece o ramo principal de uma determinada caixa de areia, mesmo que você temporariamente torne outro ramo persistente com o comando \"cvs update -r\".  Como alternativa, o argumento `-r` pode indicar alguma outra ramificação para realmente efetuar o checkout, mesmo que o módulo ainda seja a ramificação \"main\" (principal).  Dilemas (conforme implementadas atualmente): Cada novo \"module\" cria um novo banco de dados em disco com um histórico para determinado módulo, após a criação do banco de dados, as operações nesse ramo principal são rápidas.  Ou, como alternativa, o argumento `-r` não ocupa espaço extra em disco, mas pode ser significativamente mais lento em muitas operações, como o comando `cvs update`."

#. type: Plain text
#: en/git-cvsserver.txt:398
#, priority:90
msgid "If you want to refer to a git refspec that has characters that are not allowed by CVS, you have two options.  First, it may just work to supply the git refspec directly to the appropriate CVS -r argument; some CVS clients don't seem to do much sanity checking of the argument.  Second, if that fails, you can use a special character escape mechanism that only uses characters that are valid in CVS tags.  A sequence of 4 or 5 characters of the form (underscore (`\"_\"`), dash (`\"-\"`), one or two characters, and dash (`\"-\"`)) can encode various characters based on the one or two letters: `\"s\"` for slash (`\"/\"`), `\"p\"` for period (`\".\"`), `\"u\"` for underscore (`\"_\"`), or two hexadecimal digits for any byte value at all (typically an ASCII number, or perhaps a part of a UTF-8 encoded character)."
msgstr "Caso queira se referir a um \"git refspec\" que possua caracteres não permitidos pelo CVS, você tem duas opções.  Primeiro, pode funcionar apenas para informar ao git \"refspec\" diretamente o argumento CVS `-r` apropriado; alguns clientes do CVS parecem não verificar a sanidade do argumento.  Segundo, caso falhe, você pode usar um mecanismo especial de escape de caracteres que utiliza apenas os caracteres válidos nas tags do CVS.  Uma sequência de 4 ou 5 caracteres do formulário (sublinhado (`\"_\"`), traço (`\"-\"`), um ou dois caracteres e traço (`\"-\"`)) pode codificar vários caracteres com base numa ou duas letras: `\"s\"` para a barra (`\"/\"`), `\"p\"` para o ponto (`\".\"`), `\"u\"` para o sublinhado (`\"_\"`) ou dois dígitos hexadecimais para qualquer valor de byte (normalmente um número ASCII ou talvez parte de um caractere codificado em UTF-8)."

#. type: Plain text
#: en/git-cvsserver.txt:401
#, priority:90
msgid "Legacy monitoring operations are not supported (edit, watch and related).  Exports and tagging (tags and branches) are not supported at this stage."
msgstr "As operações de monitoramento herdadas não são compatíveis (edit, watch e related).  As exportações e as tags (tags e ramos) não são compatíveis neste estágio."

#. type: Title ~
#: en/git-cvsserver.txt:403
#, no-wrap, priority:90
msgid "CRLF Line Ending Conversions"
msgstr "Conversões de termino de linha CRLF"

#. type: Plain text
#: en/git-cvsserver.txt:408
#, priority:90
msgid "By default the server leaves the `-k` mode blank for all files, which causes the CVS client to treat them as a text files, subject to end-of-line conversion on some platforms."
msgstr "Por predefinição o servidor deixa o modo `-k` em branco para todos os arquivos, o que faz com que o cliente CVS os trate como arquivos de texto, sujeitos à conversão da quebra de linha em algumas plataformas."

#. type: Plain text
#: en/git-cvsserver.txt:413
#, priority:90
msgid "You can make the server use the end-of-line conversion attributes to set the `-k` modes for files by setting the `gitcvs.usecrlfattr` config variable.  See linkgit:gitattributes[5] for more information about end-of-line conversion."
msgstr "É possível  fazer com que o servidor utilize os atributos de quebra de linha nos arquivos utilizando o modos `-k` ou definindo a variável de configuração `gitcvs.usecrlfattr`.  Para mais informações sobre a conversão da quebra de linha de um arquivo, consulte linkgit:gitattributes[5]."

#. type: Plain text
#: en/git-cvsserver.txt:422
#, priority:90
msgid "Alternatively, if `gitcvs.usecrlfattr` config is not enabled or the attributes do not allow automatic detection for a filename, then the server uses the `gitcvs.allBinary` config for the default setting.  If `gitcvs.allBinary` is set, then file not otherwise specified will default to '-kb' mode. Otherwise the `-k` mode is left blank. But if `gitcvs.allBinary` is set to \"guess\", then the correct `-k` mode will be guessed based on the contents of the file."
msgstr "Como alternativa, caso a configuração `gitcvs.usecrlfattr` não esteja ativa ou os atributos não permitam a detecção automática de um nome de arquivo, o servidor utilizará a configuração `gitcvs.allBinary` como a sua configuração predefinida.  Caso `gitcvs.allBinary` esteja definido, o arquivo não especificado de outra forma será padronizado para o modo `-kb`. Caso contrário, o modo `-k` é deixado em branco. No entanto, caso `gitcvs.allBinary` seja definido como \"guess\", o modo `-k` correto será adivinhado com base no conteúdo do arquivo.."

#. type: Plain text
#: en/git-cvsserver.txt:426
#, priority:90
msgid "For best consistency with 'cvs', it is probably best to override the defaults by setting `gitcvs.usecrlfattr` to true, and `gitcvs.allBinary` to \"guess\"."
msgstr "Para uma melhor compatibilidade com o 'cvs', provavelmente é melhor substituir os valores predefinidos configurando `gitcvs.usecrlfattr` como 'true' e `gitcvs.allBinary` para \"guess\"."

#. type: Title -
#: en/git-cvsserver.txt:428
#, no-wrap, priority:90
msgid "DEPENDENCIES"
msgstr "DEPENDÊNCIAS"

#. type: Plain text
#: en/git-cvsserver.txt:430
#, priority:90
msgid "'git-cvsserver' depends on DBD::SQLite."
msgstr "'git-cvsserver' é dependente do DBD::SQLite."

#. type: Title =
#: en/git-daemon.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-daemon(1)"
msgstr "git-daemon(1)"

#. type: Plain text
#: en/git-daemon.txt:7
#, priority:100
msgid "git-daemon - A really simple server for Git repositories"
msgstr "git-daemon - Um servidor realmente simples para os repositórios Git"

#. type: Plain text
#: en/git-daemon.txt:25
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git daemon' [--verbose] [--syslog] [--export-all]\n"
"\t     [--timeout=<n>] [--init-timeout=<n>] [--max-connections=<n>]\n"
"\t     [--strict-paths] [--base-path=<path>] [--base-path-relaxed]\n"
"\t     [--user-path | --user-path=<path>]\n"
"\t     [--interpolated-path=<pathtemplate>]\n"
"\t     [--reuseaddr] [--detach] [--pid-file=<file>]\n"
"\t     [--enable=<service>] [--disable=<service>]\n"
"\t     [--allow-override=<service>] [--forbid-override=<service>]\n"
"\t     [--access-hook=<path>] [--[no-]informative-errors]\n"
"\t     [--inetd |\n"
"\t      [--listen=<host_or_ipaddr>] [--port=<n>]\n"
"\t      [--user=<user> [--group=<group>]]]\n"
"\t     [--log-destination=(stderr|syslog|none)]\n"
"\t     [<directory>...]\n"
msgstr ""
"'git daemon' [--verbose] [--syslog] [--export-all]\n"
"\t     [--timeout=<n>] [--init-timeout=<n>] [--max-connections=<n>]\n"
"\t     [--strict-paths] [--base-path=<caminho>] [--base-path-relaxed]\n"
"\t     [--user-path | --user-path=<caminho>]\n"
"\t     [--interpolated-path=<modelo-de-caminho>]\n"
"\t     [--reuseaddr] [--detach] [--pid-file=<arquivo>]\n"
"\t     [--enable=<serviço>] [--disable=<serviço>]\n"
"\t     [--allow-override=<serviço>] [--forbid-override=<serviço>]\n"
"\t     [--access-hook=<caminho>] [--[no-]informative-errors]\n"
"\t     [--inetd |\n"
"\t      [--listen=<host-ou-endereço-IP>] [--port=<n>]\n"
"\t      [--user=<usuário> [--group=<grupo>]]]\n"
"\t     [--log-destination=(stderr|syslog|none)]\n"
"\t     [<diretório>...]\n"

#. type: Plain text
#: en/git-daemon.txt:31
#, priority:100
msgid "A really simple TCP Git daemon that normally listens on port \"DEFAULT_GIT_PORT\" aka 9418.  It waits for a connection asking for a service, and will serve that service if it is enabled."
msgstr "Um daemon TCP Git realmente simples e que normalmente escuta na porta \"DEFAULT_GIT_PORT\", também conhecida como 9418.  Aguarda uma conexão solicitando um serviço e o servirá caso esteja ativo."

#. type: Plain text
#: en/git-daemon.txt:37
#, fuzzy, priority:100
#| msgid "It verifies that the directory has the magic file \"git-daemon-export-ok\", and it will refuse to export any Git directory that hasn't explicitly been marked for export this way (unless the `--export-all` parameter is specified). If you pass some directory paths as 'git daemon' arguments, you can further restrict the offers to a whitelist comprising of those."
msgid "It verifies that the directory has the magic file \"git-daemon-export-ok\", and it will refuse to export any Git directory that hasn't explicitly been marked for export this way (unless the `--export-all` parameter is specified). If you pass some directory paths as 'git daemon' arguments, the offers are limited to repositories within those directories."
msgstr "Ele verifica se o diretório possui o arquivo mágico \"git-daemon-export-ok\" e se recusará a exportar qualquer diretório Git que não tenha sido explicitamente marcado para exportação dessa maneira (a menos que o parâmetro `--export-all` seja utilizado). Caso passe alguns caminhos de diretórios como argumentos par ao 'git daemon', é possível restringir ainda mais as ofertas a uma lista de permissões composta por eles."

#. type: Plain text
#: en/git-daemon.txt:41
#, priority:100
msgid "By default, only `upload-pack` service is enabled, which serves 'git fetch-pack' and 'git ls-remote' clients, which are invoked from 'git fetch', 'git pull', and 'git clone'."
msgstr "É predefinido que apenas o serviço `upload-pack` esteja ativo, o que atende aos clientes são o 'git fetch-pack' e 'git ls-remote', que são chamados de 'git fetch', 'git pull' e 'git clone'."

#. type: Plain text
#: en/git-daemon.txt:44
#, priority:100
msgid "This is ideally suited for read-only updates, i.e., pulling from Git repositories."
msgstr "Isso é o ideal para as atualizações de somente leitura, ou seja, extrair dos repositórios Git."

#. type: Plain text
#: en/git-daemon.txt:46
#, priority:100
msgid "An `upload-archive` also exists to serve 'git archive'."
msgstr "Também existe um `upload-archive` para servir o `git archive` ."

#. type: Plain text
#: en/git-daemon.txt:54
#, fuzzy, priority:100
#| msgid "Match paths exactly (i.e. don't allow \"/foo/repo\" when the real path is \"/foo/repo.git\" or \"/foo/repo/.git\") and don't do user-relative paths.  'git daemon' will refuse to start when this option is enabled and no whitelist is specified."
msgid "Match paths exactly (i.e. don't allow \"/foo/repo\" when the real path is \"/foo/repo.git\" or \"/foo/repo/.git\") and don't do user-relative paths.  'git daemon' will refuse to start when this option is enabled and no directory arguments are provided."
msgstr "A coincidência exata dos caminhos (ou seja, não permita \"/foo/repo\" quando o caminho real for \"/foo/repo.git\" ou \"/foo/repo/.git\"), assim como, não faça caminhos relativos ao usuário.  O 'git daemon' se recusará a iniciar quando esta opção estiver ativa e nenhuma lista de permissões tenha sido usada."

#. type: Labeled list
#: en/git-daemon.txt:55
#, no-wrap, priority:100
msgid "--base-path=<path>"
msgstr "--base-path=<caminho>"

#. type: Plain text
#: en/git-daemon.txt:61
#, priority:100
msgid "Remap all the path requests as relative to the given path.  This is sort of \"Git root\" - if you run 'git daemon' with '--base-path=/srv/git' on example.com, then if you later try to pull 'git://example.com/hello.git', 'git daemon' will interpret the path as `/srv/git/hello.git`."
msgstr "Faça o remapeamento de todas as solicitações de caminho em relação ao caminho informado.  Isso é meio que um \"Git root\" - caso você execute o comando 'git daemon' com '--base-path=/srv/git' em 'example.com', caso tente obter mais tarde 'git://example.com/hello.git', 'git daemon' interpretará o caminho como `/srv/git/hello.git`."

#. type: Labeled list
#: en/git-daemon.txt:62
#, ignore-same, no-wrap, priority:100
msgid "--base-path-relaxed"
msgstr "--base-path-relaxed"

#. type: Plain text
#: en/git-daemon.txt:67
#, priority:100
msgid "If --base-path is enabled and repo lookup fails, with this option 'git daemon' will attempt to lookup without prefixing the base path.  This is useful for switching to --base-path usage, while still allowing the old paths."
msgstr "Caso `--base-path` esteja ativo e a pesquisa do repositório falhar, com esta opção o 'git daemon' tentará procurar sem prefixar o caminho da base.  É útil para alternar para o uso de `--base-path`, enquanto ainda for permitido os caminhos antigos."

#. type: Labeled list
#: en/git-daemon.txt:68
#, no-wrap, priority:100
msgid "--interpolated-path=<pathtemplate>"
msgstr "--interpolated-path=<modelo-de-caminho>"

#. type: Plain text
#: en/git-daemon.txt:77
#, fuzzy, priority:100
#| msgid "To support virtual hosting, an interpolated path template can be used to dynamically construct alternate paths.  The template supports %H for the target hostname as supplied by the client but converted to all lowercase, %CH for the canonical hostname, %IP for the server's IP address, %P for the port number, and %D for the absolute path of the named repository.  After interpolation, the path is validated against the directory whitelist."
msgid "To support virtual hosting, an interpolated path template can be used to dynamically construct alternate paths.  The template supports %H for the target hostname as supplied by the client but converted to all lowercase, %CH for the canonical hostname, %IP for the server's IP address, %P for the port number, and %D for the absolute path of the named repository.  After interpolation, the path is validated against the directory list."
msgstr "Para dar suporte à hospedagem virtual, um modelo de caminho interpolado pode ser utilizado para construir dinamicamente os caminhos alternativos.  O modelo é compatível com `%H` para o nome de host do destino, informado pelo cliente, porém é convertido minúsculas, `%CH` para o nome do host canônico, `%IP` para o endereço IP do servidor, `%P` para o número da porta e `%D` para o caminho absoluto do nome do repositório.  Após a interpolação, o caminho é validado na lista branca de permissões do diretório."

#. type: Plain text
#: en/git-daemon.txt:82
#, priority:100
msgid "Allow pulling from all directories that look like Git repositories (have the 'objects' and 'refs' subdirectories), even if they do not have the 'git-daemon-export-ok' file."
msgstr "Permite puxar de todos os diretórios que se pareçam com os repositórios Git (possuem os subdiretórios 'objects' e 'refs'), mesmo que eles não tenham o arquivo 'git-daemon-export-ok'."

#. type: Labeled list
#: en/git-daemon.txt:83
#, ignore-same, no-wrap, priority:100
msgid "--inetd"
msgstr "--inetd"

#. type: Plain text
#: en/git-daemon.txt:88
#, priority:100
msgid "Have the server run as an inetd service. Implies --syslog (may be overridden with `--log-destination=`).  Incompatible with --detach, --port, --listen, --user and --group options."
msgstr "Faça o servidor funcionar como um serviço inetd. Implica no uso da opção `--syslog` (pode ser substituído com `--log-destination=`).  É incompatível com as opções `--detach`, `--port`, `--listen`, `--user` e `--group`."

#. type: Labeled list
#: en/git-daemon.txt:89
#, no-wrap, priority:100
msgid "--listen=<host_or_ipaddr>"
msgstr "--listen=<host-ou-endereço-IP>"

#. type: Plain text
#: en/git-daemon.txt:96
#, priority:100
msgid "Listen on a specific IP address or hostname.  IP addresses can be either an IPv4 address or an IPv6 address if supported.  If IPv6 is not supported, then --listen=hostname is also not supported and --listen must be given an IPv4 address.  Can be given more than once.  Incompatible with `--inetd` option."
msgstr "Ouça num endereço IP ou nome de host específico.  Os endereços IP podem ser um endereço IPv4 ou IPv6, se for compatível.  Caso o IPv6 não seja compatível, a opção `--listen=hostname` também não será compatível assim como a opção `--listen` deverá receber um endereço IPv4.  Pode ser utilizado mais de um vez.  É incompatível com a opção `--inetd`."

#. type: Labeled list
#: en/git-daemon.txt:97
#, no-wrap, priority:100
msgid "--port=<n>"
msgstr "--port=<n>"

#. type: Plain text
#: en/git-daemon.txt:99
#, priority:100
msgid "Listen on an alternative port.  Incompatible with `--inetd` option."
msgstr "Ouça numa porta alternativa.  É incompatível com a opção `--inetd`."

#. type: Labeled list
#: en/git-daemon.txt:100
#, no-wrap, priority:100
msgid "--init-timeout=<n>"
msgstr "--init-timeout=<n>"

#. type: Plain text
#: en/git-daemon.txt:104
#, priority:100
msgid "Timeout (in seconds) between the moment the connection is established and the client request is received (typically a rather low value, since that should be basically immediate)."
msgstr "O Tempo limite (em segundos) entre o momento em que a conexão é estabelecida e a solicitação do cliente é recebida (geralmente um valor bastante baixo, pois esse deve ser imediato)."

#. type: Labeled list
#: en/git-daemon.txt:105 en/git-upload-pack.txt:31
#, no-wrap, priority:100
msgid "--timeout=<n>"
msgstr "--timeout=<n>"

#. type: Plain text
#: en/git-daemon.txt:109
#, priority:100
msgid "Timeout (in seconds) for specific client sub-requests. This includes the time it takes for the server to process the sub-request and the time spent waiting for the next client's request."
msgstr "Tempo limite (em segundos) para sub-solicitações específicas do cliente. Isso inclui o tempo que leva para o servidor processar a sub-solicitação e o tempo gasto aguardando a próxima solicitação do cliente."

#. type: Labeled list
#: en/git-daemon.txt:110
#, no-wrap, priority:100
msgid "--max-connections=<n>"
msgstr "--max-connections=<n>"

#. type: Plain text
#: en/git-daemon.txt:113
#, priority:100
msgid "Maximum number of concurrent clients, defaults to 32.  Set it to zero for no limit."
msgstr "A quantidade máxima de clientes simultâneos, a predefinição retorna para o valor 32.  Defina como zero para não ter limites."

#. type: Labeled list
#: en/git-daemon.txt:114
#, ignore-same, no-wrap, priority:100
msgid "--syslog"
msgstr "--syslog"

#. type: Plain text
#: en/git-daemon.txt:116
#, priority:100
msgid "Short for `--log-destination=syslog`."
msgstr "É um atalho para `--log-destination=syslog`."

#. type: Labeled list
#: en/git-daemon.txt:117
#, no-wrap, priority:100
msgid "--log-destination=<destination>"
msgstr "--log-destination=<destino>"

#. type: Plain text
#: en/git-daemon.txt:122
#, priority:100
msgid "Send log messages to the specified destination.  Note that this option does not imply --verbose, thus by default only error conditions will be logged.  The <destination> must be one of:"
msgstr "Envie mensagens do registro log para o destino especificado.  Observe que esta opção não implica no uso da opção `--verbose`, portanto é predefinido que apenas as condições de erro sejam registradas.  O <destino> deve ser um dos seguintes:"

#. type: Labeled list
#: en/git-daemon.txt:124
#, no-wrap, priority:100
msgid "stderr"
msgstr "stderr"

#. type: Plain text
#: en/git-daemon.txt:129
#, priority:100
msgid "Write to standard error.  Note that if `--detach` is specified, the process disconnects from the real standard error, making this destination effectively equivalent to `none`."
msgstr "Escreva para erro predefinido.  Observe que caso `--detach` seja utilizado, o processo será desconectado do erro real predefinido, tornando esse destino efetivamente equivalente a `none` (nenhum)."

#. type: Labeled list
#: en/git-daemon.txt:129
#, no-wrap, priority:100
msgid "syslog"
msgstr "syslog"

#. type: Plain text
#: en/git-daemon.txt:131
#, priority:100
msgid "Write to syslog, using the `git-daemon` identifier."
msgstr "Escreva para o syslog utilizando o identificador `git-daemon`."

#. type: Plain text
#: en/git-daemon.txt:133
#, priority:100
msgid "Disable all logging."
msgstr "Desativa todos os registros logs."

#. type: Plain text
#: en/git-daemon.txt:137
#, priority:100
msgid "The default destination is `syslog` if `--inetd` or `--detach` is specified, otherwise `stderr`."
msgstr "A predefinição para o destino é `syslog` caso `--inetd` ou `--detach` seja utilizado, caso contrário será o `stderr`."

#. type: Labeled list
#: en/git-daemon.txt:138
#, ignore-same, no-wrap, priority:100
msgid "--user-path"
msgstr "--user-path"

#. type: Labeled list
#: en/git-daemon.txt:139
#, no-wrap, priority:100
msgid "--user-path=<path>"
msgstr "--user-path=<caminho>"

#. type: Plain text
#: en/git-daemon.txt:147
#, priority:100
msgid "Allow {tilde}user notation to be used in requests.  When specified with no parameter, requests to git://host/{tilde}alice/foo is taken as a request to access 'foo' repository in the home directory of user `alice`.  If `--user-path=path` is specified, the same request is taken as a request to access `path/foo` repository in the home directory of user `alice`."
msgstr "Permita que a notação do usuário{tilde) seja utilizada nas solicitações.  Quando especificado sem qualquer parâmetro, os pedidos para `git://host/{tilde}alice/foo` são tomados como pedidos para acessar o repositório `foo` no diretório inicial do usuário `alice`.  Caso `--user-path=path` seja utilizado, a mesma solicitação será aceita como a de uma solicitação para acessar o repositório `path/foo` no diretório inicial do usuário `alice`."

#. type: Plain text
#: en/git-daemon.txt:150
#, priority:100
msgid "Log details about the incoming connections and requested files."
msgstr "Registre os detalhes sobre as conexões recebidas e os arquivos solicitados."

#. type: Labeled list
#: en/git-daemon.txt:151
#, ignore-same, no-wrap, priority:100
msgid "--reuseaddr"
msgstr "--reuseaddr"

#. type: Plain text
#: en/git-daemon.txt:155
#, priority:100
msgid "Use SO_REUSEADDR when binding the listening socket.  This allows the server to restart without waiting for old connections to time out."
msgstr "Utilize `SO_REUSEADDR` ao ligar o soquete de escuta.  Isso permite que o servidor reinicie sem aguardar o tempo limite das conexões antigas."

#. type: Plain text
#: en/git-daemon.txt:158
#, priority:100
msgid "Detach from the shell. Implies --syslog."
msgstr "Desanexe do shell; Implica no uso da opção `--syslog`."

#. type: Labeled list
#: en/git-daemon.txt:159
#, no-wrap, priority:100
msgid "--pid-file=<file>"
msgstr "--pid-file=<arquivo>"

#. type: Plain text
#: en/git-daemon.txt:162
#, priority:100
msgid "Save the process id in 'file'.  Ignored when the daemon is run under `--inetd`."
msgstr "Salva a identificação do processo em 'arquivo'.  Ignorado quando o daemon é executado como `--inetd`."

#. type: Labeled list
#: en/git-daemon.txt:163
#, no-wrap, priority:100
msgid "--user=<user>"
msgstr "--user=<usuário>"

#. type: Labeled list
#: en/git-daemon.txt:164
#, no-wrap, priority:100
msgid "--group=<group>"
msgstr "--group=<grupo>"

#. type: Plain text
#: en/git-daemon.txt:170
#, priority:100
msgid "Change daemon's uid and gid before entering the service loop.  When only `--user` is given without `--group`, the primary group ID for the user is used.  The values of the option are given to `getpwnam(3)` and `getgrnam(3)` and numeric IDs are not supported."
msgstr "Altere o uid e o gid do daemon antes de entrar no loop de serviço.  Quando apenas o `--user` é informado sem o `--group`, o ID do grupo primário para o usuário é utilizado.  Os valores da opção são informados para `getpwnam(3)` e `getgrnam(3)` e os IDs numéricos não são compatíveis."

#. type: Plain text
#: en/git-daemon.txt:174
#, priority:100
msgid "Giving these options is an error when used with `--inetd`; use the facility of inet daemon to achieve the same before spawning 'git daemon' if needed."
msgstr "Usar estas opções é um erro quando utilizado em conjunto com `--inetd`; utilize o recurso do inet daemon para obter o mesmo efeito antes de gerar o 'git daemon', caso seja necessário."

#. type: Plain text
#: en/git-daemon.txt:181
#, priority:100
msgid "Like many programs that switch user id, the daemon does not reset environment variables such as `$HOME` when it runs git programs, e.g. `upload-pack` and `receive-pack`. When using this option, you may also want to set and export `HOME` to point at the home directory of `<user>` before starting the daemon, and make sure any Git configuration files in that directory are readable by `<user>`."
msgstr "Como muitos programas que alternam o ID do usuário, o daemon não redefine as variáveis de ambiente como `$ HOME` quando executa programas como o git, por exemplo, o `upload-pack` e `receive-pack`. Ao usar esta opção, você também pode definir e exportar `HOME` para apontar para o diretório inicial do `<usuário>` antes de iniciar o daemon e verifique se todos os arquivos da configuração do Git nesse diretório são legíveis pelo `<usuário>`."

#. type: Labeled list
#: en/git-daemon.txt:182
#, no-wrap, priority:100
msgid "--enable=<service>"
msgstr "--enable=<serviço>"

#. type: Labeled list
#: en/git-daemon.txt:183
#, no-wrap, priority:100
msgid "--disable=<service>"
msgstr "--disable=<serviço>"

#. type: Plain text
#: en/git-daemon.txt:189
#, priority:100
msgid "Enable/disable the service site-wide per default.  Note that a service disabled site-wide can still be enabled per repository if it is marked overridable and the repository enables the service with a configuration item."
msgstr "Ativa ou desativa o serviço em todo o site por predefinição.  Observe que um serviço desativado em todo o site ainda pode ser ativado por repositório caso esteja marcado como substituível e o repositório ativar o serviço com um item de configuração."

#. type: Labeled list
#: en/git-daemon.txt:190
#, no-wrap, priority:100
msgid "--allow-override=<service>"
msgstr "--allow-override=<serviço>"

#. type: Labeled list
#: en/git-daemon.txt:191
#, no-wrap, priority:100
msgid "--forbid-override=<service>"
msgstr "--forbid-override=<serviço>"

#. type: Plain text
#: en/git-daemon.txt:195
#, priority:100
msgid "Allow/forbid overriding the site-wide default with per repository configuration.  By default, all the services may be overridden."
msgstr "Permitir ou proibir a reposição da predefinição em todo o site através da configuração do repositório.  É predefinido que todos os serviços possam ser substituídos."

#. type: Labeled list
#: en/git-daemon.txt:196
#, ignore-same, no-wrap, priority:100
msgid "--[no-]informative-errors"
msgstr "--[no-]informative-errors"

#. type: Plain text
#: en/git-daemon.txt:204
#, priority:100
msgid "When informative errors are turned on, git-daemon will report more verbose errors to the client, differentiating conditions like \"no such repository\" from \"repository not exported\". This is more convenient for clients, but may leak information about the existence of unexported repositories.  When informative errors are not enabled, all errors report \"access denied\" to the client. The default is --no-informative-errors."
msgstr "Quando os erros informativos são ativados, o git-daemon reportará os erros de forma mais detalhada ao cliente, diferenciando as condições como \"nenhum repositório desse tipo\" de \"repositório não exportado\". Isso é mais conveniente para os clientes, mas pode vazar as informações sobre a existência de repositórios não exportados.  Quando os erros informativos não estão ativados, todos os erros relatam \"acesso negado\" ao cliente. A predefinição é --no-informative-errors."

#. type: Labeled list
#: en/git-daemon.txt:205
#, no-wrap, priority:100
msgid "--access-hook=<path>"
msgstr "--access-hook=<caminho>"

#. type: Plain text
#: en/git-daemon.txt:215
#, priority:100
msgid "Every time a client connects, first run an external command specified by the <path> with service name (e.g. \"upload-pack\"), path to the repository, hostname (%H), canonical hostname (%CH), IP address (%IP), and TCP port (%P) as its command-line arguments. The external command can decide to decline the service by exiting with a non-zero status (or to allow it by exiting with a zero status).  It can also look at the $REMOTE_ADDR and `$REMOTE_PORT` environment variables to learn about the requestor when making this decision."
msgstr "Sempre que um cliente se conectar, primeiro execute um comando externo especificado pelo <caminho> com o nome do serviço (por exemplo, \"upload-pack\"), o caminho para o repositório, nome do host (%H), nome do host canônico (%CH), o endereço IP (%IP) e a porta TCP (%P) como os seus argumentos na linha de comando. O comando externo pode decidir recusar o serviço saindo com uma condição diferente de zero (ou permitir com uma condição igual a zero).  Ele também pode examinar as variáveis do ambiente `$REMOTE_ADDR` e `$REMOTE_PORT` para aprender sobre o solicitante ao tomar essa decisão."

#. type: Plain text
#: en/git-daemon.txt:219
#, priority:100
msgid "The external command can optionally write a single line to its standard output to be sent to the requestor as an error message when it declines the service."
msgstr "O comando externo pode, opcionalmente, gravar uma única linha em sua saída padrão para ser enviada ao solicitante como uma mensagem de erro quando ele recusar o serviço."

#. type: Plain text
#: en/git-daemon.txt:226
#, priority:100
msgid "The remaining arguments provide a list of directories. If any directories are specified, then the `git-daemon` process will serve a requested directory only if it is contained in one of these directories. If `--strict-paths` is specified, then the requested directory must match one of these directories exactly."
msgstr ""

#. type: Title -
#: en/git-daemon.txt:228 en/git-http-backend.txt:35
#, no-wrap, priority:100
msgid "SERVICES"
msgstr "SERVIÇOS"

#. type: Plain text
#: en/git-daemon.txt:236
#, priority:100
msgid "These services can be globally enabled/disabled using the command-line options of this command.  If finer-grained control is desired (e.g. to allow 'git archive' to be run against only in a few selected repositories the daemon serves), the per-repository configuration file can be used to enable or disable them."
msgstr "Estes serviços podem ser ativados ou não globalmente utilizando as opções da linha de comando deste comando.  Caso um controle mais refinado seja necessário (para permitir que o 'git archive' seja executado apenas em alguns repositórios selecionados que o daemon serve por exemplo), o arquivo da configuração por repositório pode ser utilizado para ativá-los ou não."

#. type: Labeled list
#: en/git-daemon.txt:237
#, no-wrap, priority:100
msgid "upload-pack"
msgstr "upload-pack"

#. type: Plain text
#: en/git-daemon.txt:242
#, priority:100
msgid "This serves 'git fetch-pack' and 'git ls-remote' clients.  It is enabled by default, but a repository can disable it by setting `daemon.uploadpack` configuration item to `false`."
msgstr "Isso serve aos clientes 'git fetch-pack' e 'git ls-remote'.  A predefinição é estar sempre ativo, porém um repositório pode desativá-lo definindo o item da configuração `daemon.uploadpack` como `false`."

#. type: Labeled list
#: en/git-daemon.txt:243
#, no-wrap, priority:100
msgid "upload-archive"
msgstr "upload-archive"

#. type: Plain text
#: en/git-daemon.txt:247
#, priority:100
msgid "This serves 'git archive --remote'.  It is disabled by default, but a repository can enable it by setting `daemon.uploadarch` configuration item to `true`."
msgstr "Isso serve ao 'git archive --remote'.  A predefinição é estar desativado, porém um repositório pode ativá-lo definindo o item da configuração `daemon.uploadarch` como `true`."

#. type: Labeled list
#: en/git-daemon.txt:248
#, no-wrap, priority:100
msgid "receive-pack"
msgstr "receive-pack"

#. type: Plain text
#: en/git-daemon.txt:257
#, priority:100
msgid "This serves 'git send-pack' clients, allowing anonymous push.  It is disabled by default, as there is _no_ authentication in the protocol (in other words, anybody can push anything into the repository, including removal of refs).  This is solely meant for a closed LAN setting where everybody is friendly.  This service can be enabled by setting `daemon.receivepack` configuration item to `true`."
msgstr "Serve aos clientes 'git send-pack, permitindo um impulsionamento (push) anônimo.  A predefinição é estar desativado, pois não há autenticação no protocolo (em outras palavras, qualquer pessoa pode enviar algo para o repositório, incluindo fazer a remoção de referências).  Isso serve apenas para uma configuração LAN fechada, onde todos são amigáveis.  Este serviço pode ser ativado definindo o item da configuração `daemon.receivepack` como `true`."

#. type: Labeled list
#: en/git-daemon.txt:260
#, no-wrap, priority:100
msgid "We assume the following in /etc/services"
msgstr "Assumimos o seguinte em `/etc/services`"

#. type: delimited block -
#: en/git-daemon.txt:265
#, no-wrap, priority:100
msgid ""
"$ grep 9418 /etc/services\n"
"git\t\t9418/tcp\t\t# Git Version Control System\n"
msgstr ""
"$ grep 9418 /etc/services\n"
"git\t\t9418/tcp\t\t# Controle de Versão do Sistema Git\n"

#. type: Labeled list
#: en/git-daemon.txt:267
#, no-wrap, priority:100
msgid "'git daemon' as inetd server"
msgstr "'git daemon' como um servidor inetd"

#. type: Plain text
#: en/git-daemon.txt:271
#, fuzzy, priority:100
#| msgid "To set up 'git daemon' as an inetd service that handles any repository under the whitelisted set of directories, /pub/foo and /pub/bar, place an entry like the following into /etc/inetd all on one line:"
msgid "To set up 'git daemon' as an inetd service that handles any repository within `/pub/foo` or `/pub/bar`, place an entry like the following into `/etc/inetd` all on one line:"
msgstr "Para configurar o 'git daemon' como um serviço inetd que lida com qualquer repositório no conjunto de diretórios da lista branca do /pub/foo e /pub/bar, coloque uma entrada em /etc/inetd, tudo numa linha:"

#. type: delimited block -
#: en/git-daemon.txt:276
#, no-wrap, priority:100
msgid ""
"\tgit stream tcp nowait nobody  /usr/bin/git\n"
"\t\tgit daemon --inetd --verbose --export-all\n"
"\t\t/pub/foo /pub/bar\n"
msgstr ""
"\tgit stream tcp nowait nobody  /usr/bin/git\n"
"\t\tgit daemon --inetd --verbose --export-all\n"
"\t\t/pub/foo /pub/bar\n"

#. type: Labeled list
#: en/git-daemon.txt:279
#, no-wrap, priority:100
msgid "'git daemon' as inetd server for virtual hosts"
msgstr "'git daemon' como servidor inetd para hosts virtuais"

#. type: Plain text
#: en/git-daemon.txt:284
#, priority:100
msgid "To set up 'git daemon' as an inetd service that handles repositories for different virtual hosts, `www.example.com` and `www.example.org`, place an entry like the following into `/etc/inetd` all on one line:"
msgstr "Para configurar o 'git daemon' como um serviço inetd que lida com repositórios com diferentes hosts virtuais, `www.example.com` e `www.example.org`, coloque uma entrada como a seguinte em `/etc/inetd` tudo numa linha:"

#. type: delimited block -
#: en/git-daemon.txt:292
#, no-wrap, priority:100
msgid ""
"\tgit stream tcp nowait nobody /usr/bin/git\n"
"\t\tgit daemon --inetd --verbose --export-all\n"
"\t\t--interpolated-path=/pub/%H%D\n"
"\t\t/pub/www.example.org/software\n"
"\t\t/pub/www.example.com/software\n"
"\t\t/software\n"
msgstr ""
"\tgit stream tcp nowait nobody /usr/bin/git\n"
"\t\tgit daemon --inetd --verbose --export-all\n"
"\t\t--interpolated-path=/pub/%H%D\n"
"\t\t/pub/www.example.org/software\n"
"\t\t/pub/www.example.com/software\n"
"\t\t/software\n"

#. type: Plain text
#: en/git-daemon.txt:300
#, priority:100
msgid "In this example, the root-level directory `/pub` will contain a subdirectory for each virtual host name supported.  Further, both hosts advertise repositories simply as `git://www.example.com/software/repo.git`.  For pre-1.4.0 clients, a symlink from `/software` into the appropriate default repository could be made as well."
msgstr "Neste exemplo, o diretório na raiz `/pub` conterá um subdiretório para cada nome de host virtual compatível.  Além disso, os dois hosts anunciam os repositórios simplesmente como `git://www.example.com/software/repo.git`.  Para clientes anteriores à 1.4.0, um link simbólico de `/ software` para o repositório predefinido também pode ser feito."

#. type: Labeled list
#: en/git-daemon.txt:302
#, no-wrap, priority:100
msgid "'git daemon' as regular daemon for virtual hosts"
msgstr "O 'git daemon' como daemon regular para hosts virtuais"

#. type: Plain text
#: en/git-daemon.txt:306
#, priority:100
msgid "To set up 'git daemon' as a regular, non-inetd service that handles repositories for multiple virtual hosts based on their IP addresses, start the daemon like this:"
msgstr "Para configurar o 'git daemon' como um serviço regular e não como inetd que lida com repositórios para vários hosts virtuais com base em seus endereços IP, inicie o daemon desta maneira:"

#. type: delimited block -
#: en/git-daemon.txt:312
#, no-wrap, priority:100
msgid ""
"\tgit daemon --verbose --export-all\n"
"\t\t--interpolated-path=/pub/%IP/%D\n"
"\t\t/pub/192.168.1.200/software\n"
"\t\t/pub/10.10.220.23/software\n"
msgstr ""
"\tgit daemon --verbose --export-all\n"
"\t\t--interpolated-path=/pub/%IP/%D\n"
"\t\t/pub/192.168.1.200/software\n"
"\t\t/pub/10.10.220.23/software\n"

#. type: Plain text
#: en/git-daemon.txt:318
#, priority:100
msgid "In this example, the root-level directory `/pub` will contain a subdirectory for each virtual host IP address supported.  Repositories can still be accessed by hostname though, assuming they correspond to these IP addresses."
msgstr "Neste exemplo, o diretório no nível raiz `/pub` conterá um subdiretório para cada endereço IP do host virtual compatível.  Porém, os repositórios ainda podem ser acessados pelo nome do host, supondo que coincidam com estes endereços IP."

#. type: Labeled list
#: en/git-daemon.txt:319
#, no-wrap, priority:100
msgid "selectively enable/disable services per repository"
msgstr "ativar ou desativar seletivamente os serviços por repositório"

#. type: Plain text
#: en/git-daemon.txt:324
#, priority:100
msgid "To enable 'git archive --remote' and disable 'git fetch' against a repository, have the following in the configuration file in the repository (that is the file 'config' next to `HEAD`, 'refs' and 'objects')."
msgstr "Para ativar faça `git archive --remote` e desative o `git fetch` num repositório, faça o seguinte no arquivo de configuração no repositório (que é o arquivo 'config' próximo ao `HEAD`, 'refs' e 'objects ')."

#. type: delimited block -
#: en/git-daemon.txt:329
#, no-wrap, priority:100
msgid ""
"\t[daemon]\n"
"\t\tuploadpack = false\n"
"\t\tuploadarch = true\n"
msgstr ""
"\t[daemon]\n"
"\t\tuploadpack = false\n"
"\t\tuploadarch = true\n"

#. type: Plain text
#: en/git-daemon.txt:338
#, priority:100
msgid "'git daemon' will set REMOTE_ADDR to the IP address of the client that connected to it, if the IP address is available. REMOTE_ADDR will be available in the environment of hooks called when services are performed."
msgstr "O `git daemon` configurará o `REMOTE_ADDR` para o endereço IP do cliente conectado a ele caso o endereço IP esteja disponível. O `REMOTE_ADDR` estará disponível no ambiente dos chamados ganchos quando os serviços forem executados."

#. type: Title =
#: en/git-describe.txt:2
#, ignore-same, no-wrap, priority:260
msgid "git-describe(1)"
msgstr "git-describe(1)"

#. type: Plain text
#: en/git-describe.txt:7
#, priority:260
msgid "git-describe - Give an object a human readable name based on an available ref"
msgstr "git-describe - Atribua a um objeto um nome legível para humanos com base num \"ref\" disponível"

#. type: Plain text
#: en/git-describe.txt:14
#, ignore-ellipsis, no-wrap, priority:260
msgid ""
"'git describe' [--all] [--tags] [--contains] [--abbrev=<n>] [<commit-ish>...]\n"
"'git describe' [--all] [--tags] [--contains] [--abbrev=<n>] --dirty[=<mark>]\n"
"'git describe' <blob>\n"
msgstr ""
"'git describe' [--all] [--tags] [--contains] [--abbrev=<n>] [<commit-ish>...]\n"
"'git describe' [--all] [--tags] [--contains] [--abbrev=<n>] --dirty[=<mark>]\n"
"'git describe' <blob>\n"

#. type: Plain text
#: en/git-describe.txt:24
#, priority:260
msgid "The command finds the most recent tag that is reachable from a commit.  If the tag points to the commit, then only the tag is shown.  Otherwise, it suffixes the tag name with the number of additional commits on top of the tagged object and the abbreviated object name of the most recent commit. The result is a \"human-readable\" object name which can also be used to identify the commit to other git commands."
msgstr "O comando localiza a tag mais recente que seja acessível a partir de um commit.  Caso a tag aponte para o commit, somente a tag será exibida.  Caso contrário, é adicionado um sufixo ao nome da tag com a quantidade adicionais de commits na parte superior do objeto marcado e o nome abreviado do objeto commit mais recente. O resultado é um nome do objeto que é \"legível para humanos\" que também pode ser utilizado para identificar o commit para outros comandos do git."

#. type: Plain text
#: en/git-describe.txt:28
#, priority:260
msgid "By default (without --all or --tags) `git describe` only shows annotated tags.  For more information about creating annotated tags see the -a and -s options to linkgit:git-tag[1]."
msgstr "É predefinido que o comando `git description` exiba apenas as tags com anotações (sem --all ou --tags).  Para mais informações sobre a criação das anotações das tags, consulte as opções `-a` e `-s` em linkgit:git-tag[1]."

#. type: Plain text
#: en/git-describe.txt:34
#, priority:260
msgid "If the given object refers to a blob, it will be described as `<commit-ish>:<path>`, such that the blob can be found at `<path>` in the `<commit-ish>`, which itself describes the first commit in which this blob occurs in a reverse revision walk from HEAD."
msgstr "Caso o objeto especificado se refera a uma bolha, este será descrito como `<commit-ish>:<caminho>`, de modo que a bolha possa ser encontrada em `<caminho>` que em si descreve o primeiro commit no qual essa bolha ocorre numa revisão reversa do `HEAD`."

#. type: Labeled list
#: en/git-describe.txt:37
#, ignore-ellipsis, no-wrap, priority:260
msgid "<commit-ish>..."
msgstr "<commit-ish>..."

#. type: Plain text
#: en/git-describe.txt:39
#, priority:260
msgid "Commit-ish object names to describe.  Defaults to HEAD if omitted."
msgstr "Descrevendo os nomes dos objetos commit.  Caso seja omitido, a predefinição retorna para que `HEAD` seja utilizado."

#. type: Labeled list
#: en/git-describe.txt:40
#, no-wrap, priority:260
msgid "--dirty[=<mark>]"
msgstr "--dirty[=<mark>]"

#. type: Labeled list
#: en/git-describe.txt:41
#, no-wrap, priority:260
msgid "--broken[=<mark>]"
msgstr "--broken[=<mark>]"

#. type: Plain text
#: en/git-describe.txt:49
#, priority:260
msgid "Describe the state of the working tree.  When the working tree matches HEAD, the output is the same as \"git describe HEAD\".  If the working tree has local modification \"-dirty\" is appended to it.  If a repository is corrupt and Git cannot determine if there is local modification, Git will error out, unless `--broken' is given, which appends the suffix \"-broken\" instead."
msgstr "Descreve a condição da árvore de trabalho.  Quando a árvore de trabalho corresponder a um `HEAD`, a saída é a mesma que `git describe HEAD`.  Caso a árvore de trabalho tenha sido modificada localmente, um \"-dirty\" será anexado a ela.  Caso um repositório tenha sido corrompido e o Git não puder determinar se há uma modificação local, o Git exibirá uma mensagem de erro, a menos que a opção `--broken` seja utilizada."

#. type: Plain text
#: en/git-describe.txt:54
#, priority:260
msgid "Instead of using only the annotated tags, use any ref found in `refs/` namespace.  This option enables matching any known branch, remote-tracking branch, or lightweight tag."
msgstr "Em vez de usar apenas as tags anotadas, utilize qualquer \"ref\" encontrada no espaço de nomes `refs/`.  Essa opção permite fazer com que coincida com qualquer ramificação conhecida, do ramo monitorado remotamente ou de uma tag leve (lightweight)."

#. type: Plain text
#: en/git-describe.txt:59
#, priority:260
msgid "Instead of using only the annotated tags, use any tag found in `refs/tags` namespace.  This option enables matching a lightweight (non-annotated) tag."
msgstr "Em vez de usar apenas as anotações das tags, utilize qualquer tag que for encontrada no `namespace` `refs/tags`.  Essa opção permite fazer a coincidência com uma tag \"leve\" (não anotada)."

#. type: Labeled list
#: en/git-describe.txt:60
#, ignore-same, no-wrap, priority:260
msgid "--contains"
msgstr "--contains"

#. type: Plain text
#: en/git-describe.txt:64
#, priority:260
msgid "Instead of finding the tag that predates the commit, find the tag that comes after the commit, and thus contains it.  Automatically implies --tags."
msgstr "Em vez de encontrar a tag que anteceda um commit, localize a tag que vem após o commit e a contenha.  Implica automaticamente no uso da opção `--tags`."

#. type: Plain text
#: en/git-describe.txt:71
#, priority:260
msgid "Instead of using the default number of hexadecimal digits (which will vary according to the number of objects in the repository with a default of 7) of the abbreviated object name, use <n> digits, or as many digits as needed to form a unique object name. An <n> of 0 will suppress long format, only showing the closest tag."
msgstr "Em vez de usar o número padrão de dígitos hexadecimais (que variam de acordo com a quantidade de objetos no repositório com um padrão de 7) do nome abreviado do objeto, utilize `<n>` dígitos ou quantos dígitos forem necessários para formar um nome do objeto que seja único. Um `<n>` que seja 0, suprime o formato longo exibindo apenas a tag mais próxima."

#. type: Labeled list
#: en/git-describe.txt:72
#, no-wrap, priority:260
msgid "--candidates=<n>"
msgstr "--candidates=<n>"

#. type: Plain text
#: en/git-describe.txt:78
#, priority:260
msgid "Instead of considering only the 10 most recent tags as candidates to describe the input commit-ish consider up to <n> candidates.  Increasing <n> above 10 will take slightly longer but may produce a more accurate result.  An <n> of 0 will cause only exact matches to be output."
msgstr "Em vez de considerar apenas as 10 tags mais recentes como candidatas para descrever o commit de entrada, considere até `<n>` candidatos.  Aumentando `<n>` para acima de 10 haverá um consumo um pouco maior de tempo, no entanto, poderá produzir um resultado mais preciso.  Um `<n>` que seja 0 fará com que apenas as coincidências exatas sejam exibidas."

#. type: Labeled list
#: en/git-describe.txt:79
#, ignore-same, no-wrap, priority:260
msgid "--exact-match"
msgstr "--exact-match"

#. type: Plain text
#: en/git-describe.txt:82
#, priority:260
msgid "Only output exact matches (a tag directly references the supplied commit).  This is a synonym for --candidates=0."
msgstr "Apenas os resultados exatos de saída (uma tag faz referência direta ao commit informado).  Este é um sinônimo para `--candidates=0`."

#. type: Labeled list
#: en/git-describe.txt:83 en/git-ls-files.txt:167
#, ignore-same, no-wrap, priority:260
msgid "--debug"
msgstr "--debug"

#. type: Plain text
#: en/git-describe.txt:87
#, priority:260
msgid "Verbosely display information about the searching strategy being employed to standard error.  The tag name will still be printed to standard out."
msgstr "Exibe de forma detalhada as informações sobre a estratégia de pesquisa que está sendo empregada para o erro predefinido. predefinida.  O nome da tag ainda será impresso para a saída."

#. type: Plain text
#: en/git-describe.txt:96
#, ignore-ellipsis, priority:260
msgid "Always output the long format (the tag, the number of commits and the abbreviated commit name) even when it matches a tag.  This is useful when you want to see parts of the commit object name in \"describe\" output, even when the commit in question happens to be a tagged version.  Instead of just emitting the tag name, it will describe such a commit as v1.2-0-gdeadbee (0th commit since tag v1.2 that points at object deadbee....)."
msgstr "Sempre imprima o formato longo (a tag, o a quantidade de commits e o nome abreviado do commit), mesmo quando coincidir com uma tag.  Isso é útil quando você deseja ver as partes do nome do objeto commit na saída \"describe\", mesmo quando a confirmação em questão seja uma versão marcada.  Em vez de apenas emitir o nome da tag, ele descreverá um commit como `v1.2-0-gdeadbee` (0º commit desde a tag `v1.2` que aponta para o objeto `deadbee`....)."

#. type: Labeled list
#: en/git-describe.txt:97
#, no-wrap, priority:260
msgid "--match <pattern>"
msgstr "--match <padrão>"

#. type: Plain text
#: en/git-describe.txt:106
#, priority:260
msgid "Only consider tags matching the given `glob(7)` pattern, excluding the \"refs/tags/\" prefix. If used with `--all`, it also considers local branches and remote-tracking references matching the pattern, excluding respectively \"refs/heads/\" and \"refs/remotes/\" prefix; references of other types are never considered. If given multiple times, a list of patterns will be accumulated, and tags matching any of the patterns will be considered.  Use `--no-match` to clear and reset the list of patterns."
msgstr "Considere apenas as tags que coincidam ao padrão `glob (7)`, excluindo o prefixo \"refs/tags/\". Se utilizado com `--all`, também considera as ramificações locais e as referências do monitoramento remoto que coincidam com o padrão, excluindo respectivamente o prefixo \"refs/heads/\" e \"refs/remotes/\"; as referências dos outros tipos nunca são consideradas. Caso seja utilizado várias vezes, uma lista de padrões será acumulada e as tags que coincidam com qualquer um dos padrões serão consideradas.  Utilize `--no-match` para limpar e redefinir a lista dos padrões."

#. type: Labeled list
#: en/git-describe.txt:107
#, no-wrap, priority:260
msgid "--exclude <pattern>"
msgstr "--exclude <padrão>"

#. type: Plain text
#: en/git-describe.txt:118
#, priority:260
msgid "Do not consider tags matching the given `glob(7)` pattern, excluding the \"refs/tags/\" prefix. If used with `--all`, it also does not consider local branches and remote-tracking references matching the pattern, excluding respectively \"refs/heads/\" and \"refs/remotes/\" prefix; references of other types are never considered. If given multiple times, a list of patterns will be accumulated and tags matching any of the patterns will be excluded. When combined with --match a tag will be considered when it matches at least one --match pattern and does not match any of the --exclude patterns. Use `--no-exclude` to clear and reset the list of patterns."
msgstr "Não considere as tags que coincidam com padrão `glob (7)`, excluindo o prefixo \"refs/tags/\". Se utilizado com `--all`, também não considera as ramificações locais e as referências do rastreamento remoto coincidentes ao padrão, excluindo respectivamente o prefixo \"refs/heads/\" e \"refs/remotes/\"; as referências de outros tipos nunca são consideradas. Caso seja utilizado várias vezes, uma lista de padrões será acumulada e as tags que coincidam a qualquer um dos padrões serão excluídas. Quando combinada com `--match`, uma tag será considerada quando coincidir a pelo menos um padrão `--match` e não corresponder a nenhum dos padrões `--exclude`. Utilize `--no-exclude` para limpar e redefinir a lista dos padrões."

#. type: Labeled list
#: en/git-describe.txt:119 en/git-diff-tree.txt:120 en/git-format-patch.txt:195 en/git-name-rev.txt:87
#, ignore-same, no-wrap, priority:260
msgid "--always"
msgstr "--always"

#. type: Plain text
#: en/git-describe.txt:121 en/git-name-rev.txt:89
#, priority:260
msgid "Show uniquely abbreviated commit object as fallback."
msgstr "Exiba o objeto commit abreviado exclusivamente como \"fallback\" (retirada)."

#. type: Plain text
#: en/git-describe.txt:126
#, priority:260
msgid "Follow only the first parent commit upon seeing a merge commit.  This is useful when you wish to not match tags on branches merged in the history of the target commit."
msgstr "Siga apenas o primeiro commit da origem ao ver um commit de mesclagem.  Isso é útil quando você quer que as tags não coincidam nos ramos mesclados do histórico do commit de destino."

#. type: Plain text
#: en/git-describe.txt:131
#, priority:260
msgid "With something like git.git current tree, I get:"
msgstr "Algo como a árvore atual do `git.git`, recebo:"

#. type: Plain text
#: en/git-describe.txt:134
#, no-wrap, priority:260
msgid ""
"\t[torvalds@g5 git]$ git describe parent\n"
"\tv1.0.4-14-g2414721\n"
msgstr ""
"\t[torvalds@g5 git]$ git describe parent\n"
"\tv1.0.4-14-g2414721\n"

#. type: Plain text
#: en/git-describe.txt:140
#, priority:260
msgid "i.e. the current head of my \"parent\" branch is based on v1.0.4, but since it has a few commits on top of that, describe has added the number of additional commits (\"14\") and an abbreviated object name for the commit itself (\"2414721\")  at the end."
msgstr "ou seja, o cabeçalho atual do meu ramo \"original\" tem base na versão `v1.0.4`, mas como ele tem alguns commits a mais, o description adicionou a quantidade de commits adicionais (\"14\") e um nome do objeto abreviado para o próprio commit (\"2414721\") no final."

#. type: Plain text
#: en/git-describe.txt:151
#, priority:260
msgid "The number of additional commits is the number of commits which would be displayed by \"git log v1.0.4..parent\".  The hash suffix is \"-g\" + an unambigous abbreviation for the tip commit of parent (which was `2414721b194453f058079d897d13c4e377f92dc6`). The length of the abbreviation scales as the repository grows, using the approximate number of objects in the repository and a bit of math around the birthday paradox, and defaults to a minimum of 7.  The \"g\" prefix stands for \"git\" and is used to allow describing the version of a software depending on the SCM the software is managed with. This is useful in an environment where people may use different SCMs."
msgstr "A quantidade de commits adicionais é a quantidade de commits que seriam exibidas com \"git log v1.0.4..parent\".  O sufixo hash é \"-g\" + uma abreviação inequívoca para o commit como uma dica da origem (que era `2414721b194453f058079d897d13c4e377f92dc6`). O comprimento da abreviatura é escalonado conforme o repositório cresce, utilizando a quantidade aproximada de objetos no repositório e um pouco de matemática em torno do paradoxo da criação, a predefinição é o mínimo de 7.  O prefixo \"g\" significa \"git\" e é utilizado para permitir a descrição da versão de um software, dependendo do SCM com o qual o software é gerenciado. Isso é útil em um ambiente onde as pessoas podem usar diferentes SCMs."

#. type: Plain text
#: en/git-describe.txt:153
#, priority:260
msgid "Doing a 'git describe' on a tag-name will just show the tag name:"
msgstr "Ao executar o comando 'git description' no nome de uma tag exibirá apenas o seu nome:"

#. type: Plain text
#: en/git-describe.txt:156
#, no-wrap, priority:260
msgid ""
"\t[torvalds@g5 git]$ git describe v1.0.4\n"
"\tv1.0.4\n"
msgstr ""
"\t[torvalds@g5 git]$ git describe v1.0.4\n"
"\tv1.0.4\n"

#. type: Plain text
#: en/git-describe.txt:159
#, priority:260
msgid "With --all, the command can use branch heads as references, so the output shows the reference path as well:"
msgstr "Com a opção `--all`, o comando pode utilizar os `heads` (cabeçalhos) do ramo como referência, portanto a saída exibe também o caminho de referência:"

#. type: Plain text
#: en/git-describe.txt:162
#, no-wrap, priority:260
msgid ""
"\t[torvalds@g5 git]$ git describe --all --abbrev=4 v1.0.5^2\n"
"\ttags/v1.0.0-21-g975b\n"
msgstr ""
"\t[torvalds@g5 git]$ git describe --all --abbrev=4 v1.0.5^2\n"
"\ttags/v1.0.0-21-g975b\n"

#. type: Plain text
#: en/git-describe.txt:165
#, no-wrap, priority:260
msgid ""
"\t[torvalds@g5 git]$ git describe --all --abbrev=4 HEAD^\n"
"\theads/lt/describe-7-g975b\n"
msgstr ""
"\t[torvalds@g5 git]$ git describe --all --abbrev=4 HEAD^\n"
"\theads/lt/describe-7-g975b\n"

#. type: Plain text
#: en/git-describe.txt:168
#, priority:260
msgid "With --abbrev set to 0, the command can be used to find the closest tagname without any suffix:"
msgstr "Com a opção `--abbrev` definido como 0, o comando pode ser utilizado para encontrar o nome da tag mais próximo sem nenhum sufixo:"

#. type: Plain text
#: en/git-describe.txt:171
#, no-wrap, priority:260
msgid ""
"\t[torvalds@g5 git]$ git describe --abbrev=0 v1.0.5^2\n"
"\ttags/v1.0.0\n"
msgstr ""
"\t[torvalds@g5 git]$ git describe --abbrev=0 v1.0.5^2\n"
"\ttags/v1.0.0\n"

#. type: Plain text
#: en/git-describe.txt:177
#, priority:260
msgid "Note that the suffix you get if you type these commands today may be longer than what Linus saw above when he ran these commands, as your Git repository may have new commits whose object names begin with 975b that did not exist back then, and \"-g975b\" suffix alone may not be sufficient to disambiguate these commits."
msgstr "Observe que o sufixo que você recebe caso digite estes comandos hoje, pode ser que ele pareça ser mais longo do que foi antes quando Linus executou estes mesmos comandos, pois o seu repositório Git pode ter novos commits cujos nomes do objeto saem com 975b que não existiam naquela época, e o sufixo \"-g975b\" sozinho pode não ser suficiente para desambiguar estes commits."

#. type: Title -
#: en/git-describe.txt:180
#, no-wrap, priority:260
msgid "SEARCH STRATEGY"
msgstr "ESTRATÉGIA DE PESQUISA"

#. type: Plain text
#: en/git-describe.txt:187
#, priority:260
msgid "For each commit-ish supplied, 'git describe' will first look for a tag which tags exactly that commit.  Annotated tags will always be preferred over lightweight tags, and tags with newer dates will always be preferred over tags with older dates.  If an exact match is found, its name will be output and searching will stop."
msgstr "Para cada 'commit-ish' informado, o comando 'git description' procurará primeiro numa tag que identifique exatamente este commit.  As tags anotadas sempre serão preferidas às tags leves, as tags com datas mais recentes sempre serão preferidas às tags com datas mais antigas.  Em caso de uma coincidência exata ser encontrada, o seu nome será exibido e a pesquisa será interrompida."

#. type: Plain text
#: en/git-describe.txt:194
#, priority:260
msgid "If an exact match was not found, 'git describe' will walk back through the commit history to locate an ancestor commit which has been tagged.  The ancestor's tag will be output along with an abbreviation of the input commit-ish's SHA-1. If `--first-parent` was specified then the walk will only consider the first parent of each commit."
msgstr "Caso uma coincidência exata não seja encontrada, o comando 'git description' retornará ao histórico do commit para encontrar um commit ancestral que tenha sido marcado.  A tag do ancestral será gerada juntamente com uma abreviação do SHA-1 do 'commit-ish' da entrada. Caso `--first-parent` teha sido utilizado, será considerada apenas o primeiro pai de cada commit."

#. type: Plain text
#: en/git-describe.txt:200
#, priority:260
msgid "If multiple tags were found during the walk then the tag which has the fewest commits different from the input commit-ish will be selected and output.  Here fewest commits different is defined as the number of commits which would be shown by `git log tag..input` will be the smallest number of commits possible."
msgstr "No caso várias tags serem localizadas durante o procedimento, será selecionada e gerada a tag que possuir a menor quantidade de \"commit-ish\" diferentes na entrada.  Aqui, a menor quantidade de commits diferentes é definido pela quantidade de commits que seriam exibidos através do comando `git log tag..input`, o seu resultado será a menor quantidade de commits possíveis."

#. type: Plain text
#: en/git-describe.txt:208
#, priority:260
msgid "Tree objects as well as tag objects not pointing at commits, cannot be described.  When describing blobs, the lightweight tags pointing at blobs are ignored, but the blob is still described as <committ-ish>:<path> despite the lightweight tag being favorable."
msgstr "Os objetos árvore assim como os objetos tag que não apontem para um commit não podem ser descritos.  Ao descrever as bolhas, as tags mais leves que apontam para as bolhas são ignoradas, porém a bolha ainda é descrita como <committ-ish>:<caminho> apesar da tag mais leve ser favorável."

#. type: Title =
#: en/git-diff-files.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-diff-files(1)"
msgstr "git-diff-files(1)"

#. type: Plain text
#: en/git-diff-files.txt:7
#, priority:100
msgid "git-diff-files - Compares files in the working tree and the index"
msgstr "git-diff-files - Compara os arquivos na árvore de trabalho e no índice"

#. type: Plain text
#: en/git-diff-files.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git diff-files' [-q] [-0|-1|-2|-3|-c|--cc] [<common-diff-options>] [<path>...]\n"
msgstr "'git diff-files' [-q] [-0|-1|-2|-3|-c|--cc] [<opções-comuns-ao-diff>] [<caminho>...]\n"

#. type: Plain text
#: en/git-diff-files.txt:20
#, priority:100
msgid "Compares the files in the working tree and the index.  When paths are specified, compares only those named paths.  Otherwise all entries in the index are compared.  The output format is the same as for 'git diff-index' and 'git diff-tree'."
msgstr "Compara os arquivos na árvore de trabalho e no índice.  Quando os caminhos são utilizados, compara apenas os caminhos informados.  Caso contrário, todas as entradas no índice serão comparadas.  O formato de saída é o mesmo que para `git diff-index` e `git diff-tree`."

#. type: Labeled list
#: en/git-diff-files.txt:25 en/git-diff.txt:124
#, no-wrap, priority:280
msgid "-1 --base"
msgstr "-1 --base"

#. type: Labeled list
#: en/git-diff-files.txt:26 en/git-diff.txt:125
#, no-wrap, priority:280
msgid "-2 --ours"
msgstr "-2 --ours"

#. type: Labeled list
#: en/git-diff-files.txt:27 en/git-diff.txt:126
#, no-wrap, priority:280
msgid "-3 --theirs"
msgstr "-3 --theirs"

#. type: Labeled list
#: en/git-diff-files.txt:28 en/git-diff.txt:133
#, ignore-same, no-wrap, priority:280
msgid "-0"
msgstr "-0"

#. type: Plain text
#: en/git-diff-files.txt:32
#, priority:100
msgid "Diff against the \"base\" version, \"our branch\" or \"their branch\" respectively.  With these options, diffs for merged entries are not shown."
msgstr "O \"diff\" contra a versão na \"base\", a \"nossa ramificação\" ou \"a ramificação deles\", respectivamente.  Com essas opções, as diferenças para entradas mescladas não são exibidas."

#. type: Plain text
#: en/git-diff-files.txt:36
#, priority:100
msgid "The default is to diff against our branch (-2) and the cleanly resolved paths.  The option -0 can be given to omit diff output for unmerged entries and just show \"Unmerged\"."
msgstr "É predefinido fazer o \"diff\" contra a nossa ramificação (-2) e os caminhos resolvidos de maneira limpa.  A opção `-0` pode ser utilizada para omitir a saída do \"diff\" para as entradas que não tenham sido mescladas e exibir apenas os \"Não mesclados\"."

#. type: Plain text
#: en/git-diff-files.txt:43
#, priority:100
msgid "This compares stage 2 (our branch), stage 3 (their branch) and the working tree file and outputs a combined diff, similar to the way 'diff-tree' shows a merge commit with these flags."
msgstr "Isso compara o estágio 2 (nosso ramo), o estágio 3 (o ramo deles) e o arquivo da árvore de trabalho que gera um diff combinado, semelhante à maneira como o comando `'diff-tree'` exibe um commit de mesclagem com essas flags."

#. type: Plain text
#: en/git-diff-files.txt:46
#, priority:100
msgid "Remain silent even on nonexistent files"
msgstr "Permaneça em silêncio mesmo em arquivos inexistentes"

#. type: Title =
#: en/git-diff-index.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-diff-index(1)"
msgstr "git-diff-index(1)"

#. type: Plain text
#: en/git-diff-index.txt:7
#, priority:80
msgid "git-diff-index - Compare a tree to the working tree or index"
msgstr "git-diff-index - Compara uma árvore com a árvore ou índice de trabalho"

#. type: Plain text
#: en/git-diff-index.txt:13
#, ignore-ellipsis, no-wrap, priority:80
msgid "'git diff-index' [-m] [--cached] [--merge-base] [<common-diff-options>] <tree-ish> [<path>...]\n"
msgstr "'git diff-index' [-m] [--cached] [--merge-base] [<opções-comuns-ao-diff>] <árvore> [<caminho>...]\n"

#. type: Plain text
#: en/git-diff-index.txt:21
#, priority:80
msgid "Compares the content and mode of the blobs found in a tree object with the corresponding tracked files in the working tree, or with the corresponding paths in the index.  When <path> arguments are present, compares only paths matching those patterns.  Otherwise all tracked files are compared."
msgstr "Compara o conteúdo e o modo das \"bolhas\" encontrados num objeto de árvore com os arquivos rastreados coincidentes na árvore de trabalho ou com os caminhos correspondentes no índice.  Quando os argumentos <caminho> estão presentes, compara apenas os caminhos que coincidam com estes padrões.  Caso contrário, todos os arquivos rastreados serão comparados."

#. type: Plain text
#: en/git-diff-index.txt:28
#, priority:80
msgid "The id of a tree object to diff against."
msgstr "A identificação de um objeto de árvore com a qual fazer o \"diff\"."

#. type: Plain text
#: en/git-diff-index.txt:31
#, priority:80
msgid "Do not consider the on-disk file at all."
msgstr "Não considere de forma alguma o arquivo no disco."

#. type: Labeled list
#: en/git-diff-index.txt:32 en/git-diff-tree.txt:46 en/git-show-branch.txt:83
#, ignore-same, no-wrap, priority:100
msgid "--merge-base"
msgstr "--merge-base"

#. type: Plain text
#: en/git-diff-index.txt:36
#, priority:80
msgid "Instead of comparing <tree-ish> directly, use the merge base between <tree-ish> and HEAD instead.  <tree-ish> must be a commit."
msgstr "Em vez de comparar directamente o <árvore>, em vez disso utilize a base mesclada entre o <árvore> e o HEAD.  O <árvore> deve ser um commit."

#. type: Plain text
#: en/git-diff-index.txt:42
#, priority:80
msgid "By default, files recorded in the index but not checked out are reported as deleted.  This flag makes 'git diff-index' say that all non-checked-out files are up to date."
msgstr "É predefinido que os arquivos registrados no índice sem verificação sejam relatados como excluídos.  Esta opção faz com que o comando `git diff-index` diga que todos os arquivos sem verificação estejam atualizados."

#. type: Title -
#: en/git-diff-index.txt:46
#, no-wrap, priority:80
msgid "OPERATING MODES"
msgstr "MODOS DE OPERAÇÃO"

#. type: Plain text
#: en/git-diff-index.txt:51
#, priority:80
msgid "You can choose whether you want to trust the index file entirely (using the `--cached` flag) or ask the diff logic to show any files that don't match the stat state as being \"tentatively changed\".  Both of these operations are very useful indeed."
msgstr "Você pode escolher se quer confiar inteiramente no arquivo do índice (utilizando a opção `--cached`) ou pedir à lógica \"diff\" para exibir todos os arquivos que não coincidam com a condição de \"provisoriamente alterado\".  Ambas as operações são realmente muito úteis."

#. type: Title -
#: en/git-diff-index.txt:53
#, no-wrap, priority:80
msgid "CACHED MODE"
msgstr "MODO EM CACHE"

#. type: Plain text
#: en/git-diff-index.txt:55
#, priority:80
msgid "If `--cached` is specified, it allows you to ask:"
msgstr "Caso `--cached` seja utilizado, será permitido que você pergunte:"

#. type: Plain text
#: en/git-diff-index.txt:58
#, no-wrap, priority:80
msgid ""
"\tshow me the differences between HEAD and the current index\n"
"\tcontents (the ones I'd write using 'git write-tree')\n"
msgstr ""
"\tmostre-me as diferenças atuais entre o HEAD e o índice\n"
"\tteor (os que eu escreveria utilizando 'git write-tree')\n"

#. type: Plain text
#: en/git-diff-index.txt:63
#, priority:80
msgid "For example, let's say that you have worked on your working directory, updated some files in the index and are ready to commit. You want to see exactly *what* you are going to commit, without having to write a new tree object and compare it that way, and to do that, you just do"
msgstr "Digamos que você trabalhou no seu diretório de trabalho por exemplo e atualizou alguns arquivos no índice e está pronto para fazer o commit. Caso queira ver exatamente *o quê* será feito no commit, sem precisar escrever um novo objeto árvore e compará-lo dessa maneira, faça"

#. type: Plain text
#: en/git-diff-index.txt:65
#, no-wrap, priority:80
msgid "\tgit diff-index --cached HEAD\n"
msgstr "\tgit diff-index --cached HEAD\n"

#. type: Plain text
#: en/git-diff-index.txt:70
#, priority:80
msgid "Example: let's say I had renamed `commit.c` to `git-commit.c`, and I had done an `update-index` to make that effective in the index file.  `git diff-files` wouldn't show anything at all, since the index file matches my working directory. But doing a 'git diff-index' does:"
msgstr "Digamos que eu renomeei o arquivo `commit.c` para `git-commit.c` por exemplo e fiz um `update-index` para torná-lo efetivo no arquivo do índice.  O `git diff-files` não exibiria nada, pois o arquivo do índice coincide com o meu diretório de trabalho. Porém ao fazer um 'git diff-index':"

#. type: Plain text
#: en/git-diff-index.txt:74
#, fuzzy, no-wrap, priority:80
#| msgid ""
#| "  torvalds@ppc970:~/git> git diff-index --cached HEAD\n"
#| "  -100644 blob    4161aecc6700a2eb579e842af0b7f22b98443f74        commit.c\n"
#| "  +100644 blob    4161aecc6700a2eb579e842af0b7f22b98443f74        git-commit.c\n"
msgid ""
"  torvalds@ppc970:~/git> git diff-index --cached HEAD\n"
"  :100644 000000 4161aecc6700a2eb579e842af0b7f22b98443f74 0000000000000000000000000000000000000000 D\tcommit.c\n"
"  :000000 100644 0000000000000000000000000000000000000000 4161aecc6700a2eb579e842af0b7f22b98443f74 A\tgit-commit.c\n"
msgstr ""
"  torvalds@ppc970:~/git> git diff-index --cached HEAD\n"
"  -100644 blob    4161aecc6700a2eb579e842af0b7f22b98443f74        commit.c\n"
"  +100644 blob    4161aecc6700a2eb579e842af0b7f22b98443f74        git-commit.c\n"

#. type: Plain text
#: en/git-diff-index.txt:76
#, priority:80
msgid "You can see easily that the above is a rename."
msgstr "É possível ver facilmente que o item acima foi renomeado."

#. type: Plain text
#: en/git-diff-index.txt:80
#, priority:80
msgid "In fact, `git diff-index --cached` *should* always be entirely equivalent to actually doing a 'git write-tree' and comparing that. Except this one is much nicer for the case where you just want to check where you are."
msgstr "De fato, o comando `git diff-index --cached` *deve* sempre ser totalmente equivalente a fazer um `git write-tree` e comparar. Exceto que este é muito melhor para o caso onde você queira apenas averiguar onde você está."

#. type: Plain text
#: en/git-diff-index.txt:84
#, priority:80
msgid "So doing a `git diff-index --cached` is basically very useful when you are asking yourself \"what have I already marked for being committed, and what's the difference to a previous tree\"."
msgstr "Portanto, fazer um `git diff-index --cached` é basicamente muito mais útil quando você está se perguntando \"o quê eu já marquei para ser feito o commit e qual a diferença com uma árvore anterior\"."

#. type: Title -
#: en/git-diff-index.txt:86
#, no-wrap, priority:80
msgid "NON-CACHED MODE"
msgstr "MODO SEM CACHE"

#. type: Plain text
#: en/git-diff-index.txt:91
#, priority:80
msgid "The \"non-cached\" mode takes a different approach, and is potentially the more useful of the two in that what it does can't be emulated with a 'git write-tree' + 'git diff-tree'. Thus that's the default mode.  The non-cached version asks the question:"
msgstr "O modo \"sem cache\" adota uma abordagem diferente e é potencialmente o mais útil dos dois, pois o que ele faz não pode ser emulado com um 'git write-tree' + 'git diff-tree'. Portanto, este é o modo predefinido.  A versão \"sem cache\" pergunta:"

#. type: Plain text
#: en/git-diff-index.txt:94
#, no-wrap, priority:80
msgid ""
"  show me the differences between HEAD and the currently checked out\n"
"  tree - index contents _and_ files that aren't up to date\n"
msgstr ""
"  mostre-me as diferenças entre o `HEAD` e o que foi verificado\n"
"  tree - índice do conteúdo _e_ os arquivos que não estão atualizados\n"

#. type: Plain text
#: en/git-diff-index.txt:98
#, priority:80
msgid "which is obviously a very useful question too, since that tells you what you *could* commit. Again, the output matches the 'git diff-tree -r' output to a tee, but with a twist."
msgstr "o que obviamente também é uma pergunta muito útil, pois isso indica qual commit você *poderia* fazer. Novamente, a saída coincidente à saída 'git diff-tree -r' para um \"tee\", mas com uma desvantagem."

#. type: Plain text
#: en/git-diff-index.txt:104
#, priority:80
msgid "The twist is that if some file doesn't match the index, we don't have a backing store thing for it, and we use the magic \"all-zero\" sha1 to show that. So let's say that you have edited `kernel/sched.c`, but have not actually done a 'git update-index' on it yet - there is no \"object\" associated with the new state, and you get:"
msgstr "A desvantagem é que, caso algum arquivo não coincida com o índice, nós não temos uma uma estrutura de armazenamento para tanto e utilizamos a mágica do sha1 \"zerado\" para exibi-los. Então, digamos que você editou o arquivo `kernel/sched.c`, mas ainda não fez um `git update-index` nele - ainda não há um \"objeto\" associado a nova condição obtendo:"

#. type: Plain text
#: en/git-diff-index.txt:107
#, fuzzy, no-wrap, priority:80
#| msgid ""
#| "  torvalds@ppc970:~/v2.6/linux> git diff-index --abbrev HEAD\n"
#| "  :100644 100664 7476bb... 000000...      kernel/sched.c\n"
msgid ""
"  torvalds@ppc970:~/v2.6/linux> git diff-index --abbrev HEAD\n"
"  :100644 100644 7476bb5ba 000000000 M\tkernel/sched.c\n"
msgstr ""
"  torvalds@ppc970:~/v2.6/linux> git diff-index --abbrev HEAD\n"
"  :100644 100664 7476bb... 000000...      kernel/sched.c\n"

#. type: Plain text
#: en/git-diff-index.txt:112
#, priority:80
msgid "i.e., it shows that the tree has changed, and that `kernel/sched.c` is not up to date and may contain new stuff. The all-zero sha1 means that to get the real diff, you need to look at the object in the working directory directly rather than do an object-to-object diff."
msgstr "isto é, exiba que a árvore mudou, que o `kernel/sched.c` não está atualizado e pode haver novas coisas. O sha1 zerado significa que, para obter um \"diff\" real, é necessário olhar diretamente para o objeto no diretório de trabalho, em vez de um \"diff\" de objeto para objeto."

#. type: Plain text
#: en/git-diff-index.txt:118
#, priority:80
msgid "As with other commands of this type, 'git diff-index' does not actually look at the contents of the file at all. So maybe `kernel/sched.c` hasn't actually changed, and it's just that you touched it. In either case, it's a note that you need to 'git update-index' it to make the index be in sync."
msgstr "Como em outros comandos desse tipo, o 'git diff-index' não analisa de forma alguma o conteúdo do arquivo. Então talvez o `kernel/sched.c` não tenha realmente mudado, e é só que você mexeu. Em ambos os casos, é importante observar que você precisa fazer um 'git update-index' para sincronizar o índice."

#. type: Plain text
#: en/git-diff-index.txt:124
#, priority:80
msgid "You can have a mixture of files show up as \"has been updated\" and \"is still dirty in the working directory\" together. You can always tell which file is in which state, since the \"has been updated\" ones show a valid sha1, and the \"not in sync with the index\" ones will always have the special all-zero sha1."
msgstr "Você pode exibir junto uma mistura de arquivos como \"foi atualizado\" e \"ainda está sujo no diretório de trabalho\". Você sempre pode dizer qual arquivo está em qual condição, uma vez que os que \"foram atualizados\" exibam um sha1 válido e os \"que não estão sincronizados com o índice\" sempre terão o sha1 especial, zerados."

#. type: Title =
#: en/git-difftool.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-difftool(1)"
msgstr "git-difftool(1)"

#. type: Plain text
#: en/git-difftool.txt:7
#, priority:100
msgid "git-difftool - Show changes using common diff tools"
msgstr "git-difftool - Exiba as alterações utilizando as ferramentas comuns do diff"

#. type: Plain text
#: en/git-difftool.txt:12
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git difftool' [<options>] [<commit> [<commit>]] [--] [<path>...]\n"
msgstr "'git difftool' [<opções>] [<commit> [<commit>]] [--] [<caminho>...]\n"

#. type: Plain text
#: en/git-difftool.txt:19
#, priority:100
msgid "'git difftool' is a Git command that allows you to compare and edit files between revisions using common diff tools.  'git difftool' is a frontend to 'git diff' and accepts the same options and arguments. See linkgit:git-diff[1]."
msgstr "O 'git difftool' é um comando Git que permite comparar e editar os arquivos entre revisões utilizando ferramentas \"diff\" comuns.  O 'git difftool' é um frontend para o comando 'git diff' e aceita as mesmas opções e argumentos. Consulte linkgit:git-diff[1]."

#. type: Labeled list
#: en/git-difftool.txt:23
#, ignore-same, no-wrap, priority:100
msgid "--dir-diff"
msgstr "--dir-diff"

#. type: Plain text
#: en/git-difftool.txt:27
#, priority:100
msgid "Copy the modified files to a temporary location and perform a directory diff on them. This mode never prompts before launching the diff tool."
msgstr "Copie os arquivos modificados para um local temporário e execute um \"diff\" neles. Este modo nunca avisa nada antes de executar a ferramenta diff."

#. type: Labeled list
#: en/git-difftool.txt:28 en/git-mergetool.txt:70
#, ignore-same, no-wrap, priority:240
msgid "-y"
msgstr "-y"

#. type: Labeled list
#: en/git-difftool.txt:29 en/git-mergetool.txt:71
#, ignore-same, no-wrap, priority:240
msgid "--no-prompt"
msgstr "--no-prompt"

#. type: Plain text
#: en/git-difftool.txt:31
#, priority:100
msgid "Do not prompt before launching a diff tool."
msgstr "Não avise antes de iniciar uma ferramenta diff."

#. type: Labeled list
#: en/git-difftool.txt:32 en/git-mergetool.txt:78
#, ignore-same, no-wrap, priority:240
msgid "--prompt"
msgstr "--prompt"

#. type: Plain text
#: en/git-difftool.txt:36
#, priority:100
msgid "Prompt before each invocation of the diff tool.  This is the default behaviour; the option is provided to override any configuration settings."
msgstr "Dê um alerta antes de cada invocação da ferramenta diff.  Este é o comportamento predefinido; a opção está disponível para sobrescrever quaisquer configurações."

#. type: Plain text
#: en/git-difftool.txt:40
#, priority:100
msgid "Start showing the diff for the given path, the paths before it will move to end and output."
msgstr "Comece mostrando a diferença para o caminho informado, os caminhos antes dele serão movidos para o final e para a saída."

#. type: Plain text
#: en/git-difftool.txt:44
#, priority:100
msgid "Start showing the diff for the given path, skipping all the paths before it."
msgstr "Comece mostrando a diferença para o caminho informado, pulando todos os caminhos antes dele."

#. type: Labeled list
#: en/git-difftool.txt:45 en/git-mergetool.txt:27
#, no-wrap, priority:240
msgid "-t <tool>"
msgstr "-t <ferramenta>"

#. type: Labeled list
#: en/git-difftool.txt:46 en/git-mergetool.txt:28
#, no-wrap, priority:240
msgid "--tool=<tool>"
msgstr "--tool=<ferramenta>"

#. type: Plain text
#: en/git-difftool.txt:50
#, priority:100
msgid "Use the diff tool specified by <tool>.  Valid values include emerge, kompare, meld, and vimdiff. Run `git difftool --tool-help` for the list of valid <tool> settings."
msgstr "Utilize a ferramenta diff usada por <ferramenta>.  Os valores válidos incluem `emerge`, `kompare`, `meld` e `vimdiff`. Execute o `git difftool --tool-help` para ver uma lista de configurações válidas para <ferramenta>."

#. type: Plain text
#: en/git-difftool.txt:55
#, priority:100
msgid "If a diff tool is not specified, 'git difftool' will use the configuration variable `diff.tool`.  If the configuration variable `diff.tool` is not set, 'git difftool' will pick a suitable default."
msgstr "Caso uma ferramenta diff não seja usada, `git difftool` utilizará a variável de configuração `diff.tool`.  Caso a variável de configuração `diff.tool` não esteja definida, o 'git difftool' escolherá um padrão adequado."

#. type: Plain text
#: en/git-difftool.txt:61
#, priority:100
msgid "You can explicitly provide a full path to the tool by setting the configuration variable `difftool.<tool>.path`. For example, you can configure the absolute path to kdiff3 by setting `difftool.kdiff3.path`. Otherwise, 'git difftool' assumes the tool is available in PATH."
msgstr "Você pode fornecer explicitamente um caminho completo para a ferramenta definindo a variável de configuração `difftool.<ferramenta>.path`. Por exemplo, você pode configurar o caminho absoluto para o kdiff3 configurando `difftool.kdiff3.path`. Caso contrário, o 'git difftool' assume que a ferramenta está disponível no `PATH`."

#. type: Plain text
#: en/git-difftool.txt:66
#, priority:100
msgid "Instead of running one of the known diff tools, 'git difftool' can be customized to run an alternative program by specifying the command line to invoke in a configuration variable `difftool.<tool>.cmd`."
msgstr "Em vez de executar uma das ferramentas \"diff\" conhecidas, o 'git difftool' pode ser customizado para executar um programa alternativo, utilizando a linha de comando para chamar uma variável de configuração `difftool.<ferramenta>.cmd`."

#. type: Plain text
#: en/git-difftool.txt:76
#, priority:100
msgid "When 'git difftool' is invoked with this tool (either through the `-t` or `--tool` option or the `diff.tool` configuration variable)  the configured command line will be invoked with the following variables available: `$LOCAL` is set to the name of the temporary file containing the contents of the diff pre-image and `$REMOTE` is set to the name of the temporary file containing the contents of the diff post-image.  `$MERGED` is the name of the file which is being compared. `$BASE` is provided for compatibility with custom merge tool commands and has the same value as `$MERGED`."
msgstr "Quando o 'git difftool' é chamado com esta ferramenta (através da opção `-t`, `--tool` ou da variável de configuração `diff.tool`), a linha de comando configurada será chamada com as seguintes variáveis disponíveis: `$LOCAL` é definido como o nome do arquivo temporário que contenha o conteúdo da pré-imagem \"diff\" e `$REMOTE` é definido como o nome do arquivo temporário que contenha o conteúdo \"diff\" da pós-imagem diff.  `$MERGED` é o nome do arquivo que está sendo comparado. `$BASE` é disponibilizado para compatibilidade com comandos personalizados da ferramenta de mesclagem e tem o mesmo valor que `$MERGED`."

#. type: Labeled list
#: en/git-difftool.txt:77 en/git-mergetool.txt:67
#, ignore-same, no-wrap, priority:240
msgid "--tool-help"
msgstr "--tool-help"

#. type: Plain text
#: en/git-difftool.txt:79
#, priority:100
msgid "Print a list of diff tools that may be used with `--tool`."
msgstr "Imprima uma lista de ferramentas \"diff\" que podem ser utilizadas com `--tool`."

#. type: Labeled list
#: en/git-difftool.txt:80
#, ignore-same, no-wrap, priority:100
msgid "--[no-]symlinks"
msgstr "--[no-]symlinks"

#. type: Plain text
#: en/git-difftool.txt:85
#, priority:100
msgid "'git difftool''s default behavior is create symlinks to the working tree when run in `--dir-diff` mode and the right-hand side of the comparison yields the same content as the file in the working tree."
msgstr "O comportamento padrão do `git difftool` é criar links simbólicos para a árvore de trabalho quando executado no modo `--dir-diff` e o lado direito da comparação produz o mesmo conteúdo que o arquivo na árvore de trabalho."

#. type: Plain text
#: en/git-difftool.txt:88
#, priority:100
msgid "Specifying `--no-symlinks` instructs 'git difftool' to create copies instead.  `--no-symlinks` is the default on Windows."
msgstr "Especificar `--no-symlinks` instrui o 'git difftool' para criar cópias.  `--no-symlinks` é a predefinição no Windows."

#. type: Labeled list
#: en/git-difftool.txt:89
#, no-wrap, priority:100
msgid "-x <command>"
msgstr "-x <comando>"

#. type: Labeled list
#: en/git-difftool.txt:90
#, no-wrap, priority:100
msgid "--extcmd=<command>"
msgstr "--extcmd = <comando>"

#. type: Plain text
#: en/git-difftool.txt:95
#, priority:100
msgid "Specify a custom command for viewing diffs.  'git-difftool' ignores the configured defaults and runs `$command $LOCAL $REMOTE` when this option is specified.  Additionally, `$BASE` is set in the environment."
msgstr "Especifique um comando personalizado para exibir os \"diffs\".  'git-difftool' executa `$command $LOCAL $REMOTE` e ignora as predefinições configuradas quando esta opção é utilizada.  A variável `$BASE` é definido no ambiente."

#. type: Labeled list
#: en/git-difftool.txt:96 en/git-help.txt:70 en/git-mergetool.txt:82 en/git-show-branch.txt:111 en/git-update-index.txt:127 en/rev-list-options.txt:293
#, ignore-same, no-wrap, priority:260
msgid "-g"
msgstr "-g"

#. type: Labeled list
#: en/git-difftool.txt:97
#, ignore-same, no-wrap, priority:100
msgid "--[no-]gui"
msgstr "--[no-]gui"

#. type: Plain text
#: en/git-difftool.txt:104
#, priority:100
msgid "When 'git-difftool' is invoked with the `-g` or `--gui` option the default diff tool will be read from the configured `diff.guitool` variable instead of `diff.tool`. The `--no-gui` option can be used to override this setting. If `diff.guitool` is not set, we will fallback in the order of `merge.guitool`, `diff.tool`, `merge.tool` until a tool is found."
msgstr "Quando o comando 'git-difftool' é chamado com a opção `-g` ou `--gui`, a ferramenta diff predefinida será lida na variável `diff.guitool` configurada em vez do `diff.tool`. A opção `--no-gui` pode ser usada para substituir essa configuração. Caso o `diff.guitool` não esteja definido, retroagiremos na seguinte ordem, `merge.guitool`, `diff.tool`, `merge.tool` até que uma ferramenta seja encontrada."

#. type: Labeled list
#: en/git-difftool.txt:105
#, ignore-same, no-wrap, priority:100
msgid "--[no-]trust-exit-code"
msgstr "--[no-]trust-exit-code"

#. type: Plain text
#: en/git-difftool.txt:110
#, priority:100
msgid "'git-difftool' invokes a diff tool individually on each file.  Errors reported by the diff tool are ignored by default.  Use `--trust-exit-code` to make 'git-difftool' exit when an invoked diff tool returns a non-zero exit code."
msgstr "'git-difftool' invoca uma ferramenta \"diff\" individualmente em cada arquivo.  Os erros relatados pela ferramenta \"diff\" são ignorados.  Utilize `--trust-exit-code` para fazer 'git-difftool' encerrar quando uma ferramenta \"diff\" retornar um código de saída diferente de zero."

#. type: Plain text
#: en/git-difftool.txt:113
#, priority:100
msgid "'git-difftool' will forward the exit code of the invoked tool when `--trust-exit-code` is used."
msgstr "'git-difftool' encaminhará o código de encerramento da ferramenta chamada quando `--trust-exit-code` for utilizado."

#. type: Plain text
#: en/git-difftool.txt:115
#, priority:100
msgid "See linkgit:git-diff[1] for the full list of supported options."
msgstr "Para ver a lista completa das opções compatíveis consulte linkgit:git-diff[1]."

#. type: Plain text
#: en/git-difftool.txt:120
#, priority:100
msgid "'git difftool' falls back to 'git mergetool' config variables when the difftool equivalents have not been defined."
msgstr "O 'git difftool' retorna às variáveis da configuração do 'git mergetool' quando os equivalentes \"difftool\" não estiverem definidos."

#. type: Plain text
#: en/git-difftool.txt:129
#, priority:100
msgid "Show changes between commits, commit and working tree, etc"
msgstr "Exibir as alterações entre os commits, os commits, árvore de trabalho, etc"

#. type: Plain text
#: en/git-difftool.txt:132
#, priority:100
msgid "Run merge conflict resolution tools to resolve merge conflicts"
msgstr "Execute as ferramentas de resolução de conflitos de mesclagem para resolver os conflitos"

#. type: Plain text
#: en/git-difftool.txt:135
#, priority:100
msgid "Get and set repository or global options"
msgstr "Obter e definir as opções globais ou as de repositório"

#. type: Title =
#: en/git-diff-tree.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-diff-tree(1)"
msgstr "git-diff-tree(1)"

#. type: Plain text
#: en/git-diff-tree.txt:7
#, priority:80
msgid "git-diff-tree - Compares the content and mode of blobs found via two tree objects"
msgstr "git-diff-tree - Compara o conteúdo e o modo das bolhas encontradas através de dois objetos árvore"

#. type: Plain text
#: en/git-diff-tree.txt:15
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git diff-tree' [--stdin] [-m] [-s] [-v] [--no-commit-id] [--pretty]\n"
"\t      [-t] [-r] [-c | --cc] [--combined-all-paths] [--root] [--merge-base]\n"
"\t      [<common-diff-options>] <tree-ish> [<tree-ish>] [<path>...]\n"
msgstr ""
"'git diff-tree' [--stdin] [-m] [-s] [-v] [--no-commit-id] [--pretty]\n"
"\t      [-t] [-r] [-c | --cc] [--combined-all-paths] [--root] [--merge-base]\n"
"\t      [<opções-comuns-ao-diff>] <árvore> [<árvore>] [<caminho>...]\n"

#. type: Plain text
#: en/git-diff-tree.txt:19
#, priority:80
msgid "Compares the content and mode of the blobs found via two tree objects."
msgstr "Compara o conteúdo e o modo das bolhas encontrados por meio de dois objetos árvore."

#. type: Plain text
#: en/git-diff-tree.txt:22
#, priority:80
msgid "If there is only one <tree-ish> given, the commit is compared with its parents (see --stdin below)."
msgstr "Caso haja apenas uma <árvore> informada, o commit será comparado com as suas raízes (consulte `--stdin` abaixo)."

#. type: Plain text
#: en/git-diff-tree.txt:24
#, priority:80
msgid "Note that 'git diff-tree' can use the tree encapsulated in a commit object."
msgstr "Observe que 'git diff-tree' pode usar a árvore encapsulada num objeto commit."

#. type: Plain text
#: en/git-diff-tree.txt:31
#, priority:80
msgid "The id of a tree object."
msgstr "A identificação de um objeto árvore."

#. type: Labeled list
#: en/git-diff-tree.txt:32 en/git-diff.txt:138 en/git-submodule.txt:441
#, ignore-ellipsis, no-wrap, priority:280
msgid "<path>..."
msgstr "<caminho>..."

#. type: Plain text
#: en/git-diff-tree.txt:35
#, priority:80
msgid "If provided, the results are limited to a subset of files matching one of the provided pathspecs."
msgstr "Caso seja utilizado, os resultados serão limitados a um subconjunto de arquivos que coincidam a um dos `pathspecs` utilizados."

#. type: Plain text
#: en/git-diff-tree.txt:38
#, priority:80
msgid "recurse into sub-trees"
msgstr "recursão em sub-árvores"

#. type: Plain text
#: en/git-diff-tree.txt:41
#, priority:80
msgid "show tree entry itself as well as subtrees.  Implies -r."
msgstr "exiba a própria entrada da árvore e suas subárvores.  Implica no uso da opção `-r`."

#. type: Plain text
#: en/git-diff-tree.txt:45
#, priority:80
msgid "When `--root` is specified the initial commit will be shown as a big creation event. This is equivalent to a diff against the NULL tree."
msgstr "Quando `--root` é utilizado o commit inicial será exibido como um grande evento de criação. Isso é o equivalente a um `diff` na árvore `NULL`."

#. type: Plain text
#: en/git-diff-tree.txt:50
#, priority:80
msgid "Instead of comparing the <tree-ish>s directly, use the merge base between the two <tree-ish>s as the \"before\" side.  There must be two <tree-ish>s given and they must both be commits."
msgstr "Em vez de comparar as <árvore>s diretamente, use a mesclagem base entre as duas <árvores>s como o lado \"antes\".  Devem haver duas <árvore>s informadas e o commit deve ser feito em ambas."

#. type: Plain text
#: en/git-diff-tree.txt:57
#, priority:80
msgid "When `--stdin` is specified, the command does not take <tree-ish> arguments from the command line.  Instead, it reads lines containing either two <tree>, one <commit>, or a list of <commit> from its standard input.  (Use a single space as separator.)"
msgstr "Quando a opção `--stdin` é utilizada, o comando não obtém os argumentos da `<árvore>` através da linha de comando.  Em vez disso ele lê as linhas contendo duas `<árvores>`, um `<commit>` ou uma lista de `<commit>` da sua entrada padrão.  (Utilize um único espaço como separador.)"

#. type: Plain text
#: en/git-diff-tree.txt:62
#, priority:80
msgid "When two trees are given, it compares the first tree with the second.  When a single commit is given, it compares the commit with its parents.  The remaining commits, when given, are used as if they are parents of the first commit."
msgstr "Quando duas árvores são informadas, é feita uma comparação entre a primeira e a segunda.  Quando um único commit é dado, ele compara o commit com as suas origens.  Os commits restantes, quando informados, são utilizados como se fossem as origens do primeiro commit."

#. type: Plain text
#: en/git-diff-tree.txt:67
#, priority:80
msgid "When comparing two trees, the ID of both trees (separated by a space and terminated by a newline) is printed before the difference.  When comparing commits, the ID of the first (or only) commit, followed by a newline, is printed."
msgstr "Ao comparar duas árvores, o ID de ambas (separado por um espaço e finalizado por uma nova linha) é impressa antes da diferença.  Ao comparar os commits, o ID do primeiro (ou do único) commit será impresso seguido por uma nova linha."

#. type: Plain text
#: en/git-diff-tree.txt:70
#, priority:80
msgid "The following flags further affect the behavior when comparing commits (but not trees)."
msgstr "As seguintes opções afetam ainda mais o comportamento durante a comparação dos commits (mas não as árvores)."

#. type: Plain text
#: en/git-diff-tree.txt:76
#, priority:80
msgid "By default, 'git diff-tree --stdin' does not show differences for merge commits.  With this flag, it shows differences to that commit from all of its parents. See also `-c`."
msgstr "É predefinido que `git diff-tree --stdin` não exiba as diferenças para os commits que forem mesclados.  Com esta opção as diferenças são exibidas no commit de todas as suas origens. Consulte também `-c`."

#. type: Plain text
#: en/git-diff-tree.txt:82
#, priority:80
msgid "By default, 'git diff-tree --stdin' shows differences, either in machine-readable form (without `-p`) or in patch form (with `-p`).  This output can be suppressed.  It is only useful with `-v` flag."
msgstr "É predefinido que `git diff-tree --stdin` exiba as diferenças, seja na forma legível por máquina (sem `-p`) ou em formato patch (com `-p`).  Esta saída pode ser suprimida.  Só é útil se for sinalizado com a opção`-v`."

#. type: Plain text
#: en/git-diff-tree.txt:86
#, priority:80
msgid "This flag causes 'git diff-tree --stdin' to also show the commit message before the differences."
msgstr "Essa sinalização faz com que o `git diff-tree --stdin` também exiba a mensagem do commit antes das diferenças."

#. type: Labeled list
#: en/git-diff-tree.txt:89
#, ignore-same, no-wrap, priority:80
msgid "--no-commit-id"
msgstr "--no-commit-id"

#. type: Plain text
#: en/git-diff-tree.txt:92
#, priority:80
msgid "'git diff-tree' outputs a line with the commit ID when applicable.  This flag suppressed the commit ID output."
msgstr "o `git diff-tree` gera uma linha com o ID do commit, quando for aplicável.  Essa sinalização suprimiu o ID de saída do commit."

#. type: Plain text
#: en/git-diff-tree.txt:102
#, priority:80
msgid "This flag changes the way a merge commit is displayed (which means it is useful only when the command is given one <tree-ish>, or `--stdin`).  It shows the differences from each of the parents to the merge result simultaneously instead of showing pairwise diff between a parent and the result one at a time (which is what the `-m` option does).  Furthermore, it lists only files which were modified from all parents."
msgstr "Esta opção altera a maneira como um commit mesclado é exibido (o que significa que é útil apenas quando o comando recebe uma <árvore>, ou `--stdin`).  Exibe as diferenças de cada um das origens simultaneamente para o resultado da mesclagem em vez de exibir a diferença dos pares entre as origens e o resultado, um de cada vez (que é o que a opção `-m` faz).  Além disso, lista apenas os arquivos que foram modificados vindo de todas as origens."

#. type: Plain text
#: en/git-diff-tree.txt:112
#, priority:80
msgid "This flag changes the way a merge commit patch is displayed, in a similar way to the `-c` option. It implies the `-c` and `-p` options and further compresses the patch output by omitting uninteresting hunks whose the contents in the parents have only two variants and the merge result picks one of them without modification.  When all hunks are uninteresting, the commit itself and the commit log message is not shown, just like in any other \"empty diff\" case."
msgstr "Esta opção altera a maneira como um patch para a mesclagem de um commit é exibido, de uma maneira semelhante à opção `-c`. Implica na utilização das opções `-c` e `-p`, comprime ainda mais o patch gerado ao omitir os pedaços que não interessam, cujo conteúdo nas origens tenham apenas duas variantes e o resultado da mesclagem escolha uma delas sem qualquer modificação.  Quando não há interesse em todos os blocos, o próprio commit e a mensagem do registro log não são exibidas, como em qualquer outro caso de um \"diff vazio\"."

#. type: Plain text
#: en/git-diff-tree.txt:119
#, priority:80
msgid "This flag causes combined diffs (used for merge commits) to list the name of the file from all parents.  It thus only has effect when -c or --cc are specified, and is likely only useful if filename changes are detected (i.e. when either rename or copy detection have been requested)."
msgstr "Esta opção faz com que os diffs combinados (usados para a mesclagem dos commits) listem o nome do arquivo de todos os pais.  Dessa forma, só tem efeito quando `-c` ou `-cc` são utilizados e provavelmente é útil apenas caso as alterações no nome do arquivo sejam detectados (ou seja, quando a renomeação ou a detecção da cópia forem solicitadas)."

#. type: Plain text
#: en/git-diff-tree.txt:123
#, priority:80
msgid "Show the commit itself and the commit log message even if the diff itself is empty."
msgstr "Exibe o próprio commit com a mensagem do registro log do commit, mesmo que o `diff` esteja vazio."

#. type: Title =
#: en/git-diff.txt:2
#, ignore-same, no-wrap, priority:280
msgid "git-diff(1)"
msgstr "git-diff(1)"

#. type: Plain text
#: en/git-diff.txt:7
#, priority:280
msgid "git-diff - Show changes between commits, commit and working tree, etc"
msgstr "git-diff - Exibe as mudanças entre os commits, o commit, a árvore de trabalho, etc"

#. type: Plain text
#: en/git-diff.txt:18
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"'git diff' [<options>] [<commit>] [--] [<path>...]\n"
"'git diff' [<options>] --cached [--merge-base] [<commit>] [--] [<path>...]\n"
"'git diff' [<options>] [--merge-base] <commit> [<commit>...] <commit> [--] [<path>...]\n"
"'git diff' [<options>] <commit>...<commit> [--] [<path>...]\n"
"'git diff' [<options>] <blob> <blob>\n"
"'git diff' [<options>] --no-index [--] <path> <path>\n"
msgstr ""
"'git diff' [<options>] [<commit>] [--] [<caminho>...]\n"
"'git diff' [<options>] --cached [--merge-base] [<commit>] [--] [<caminho>...]\n"
"'git diff' [<options>] [--merge-base] <commit> [<commit>...] <commit> [--] [<caminho>...]\n"
"'git diff' [<options>] <commit>...<commit> [--] [<caminho>...]\n"
"'git diff' [<options>] <blob> <blob>\n"
"'git diff' [<options>] --no-index [--] <caminho> <caminho>\n"

#. type: Plain text
#: en/git-diff.txt:25
#, priority:280
msgid "Show changes between the working tree and the index or a tree, changes between the index and a tree, changes between two trees, changes resulting from a merge, changes between two blob objects, or changes between two files on disk."
msgstr "Exibe as alterações entre a árvore de trabalho, o índice ou uma árvore, as alterações entre o índice e uma árvore, as alterações entre as duas árvores, nas alterações resultantes de uma mesclagem, nas alterações entre dois objetos bolha ou nas alterações entre dois arquivos no disco."

#. type: Labeled list
#: en/git-diff.txt:26
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git diff' [<options>] [--] [<path>...]"
msgstr "'git diff' [<opções>] [--] [<caminho>...]"

#. type: Plain text
#: en/git-diff.txt:33
#, priority:280
msgid "This form is to view the changes you made relative to the index (staging area for the next commit).  In other words, the differences are what you _could_ tell Git to further add to the index but you still haven't.  You can stage these changes by using linkgit:git-add[1]."
msgstr "Este formulário serve para exibir as alterações feitas em relação ao índice (área de preparação para o próximo commit).  Em outras palavras, as diferenças são as que você _pode_ informar ao Git para adicionar ao índice, mas ainda não o fez.   Você pode preparar essas alterações utilizando linkgit:git-add[1]."

#. type: Labeled list
#: en/git-diff.txt:34
#, no-wrap, priority:280
msgid "'git diff' [<options>] --no-index [--] <path> <path>"
msgstr "'git diff' [<opções>] --no-index [--] <caminho> <caminho>"

#. type: Plain text
#: en/git-diff.txt:42
#, priority:280
msgid "This form is to compare the given two paths on the filesystem.  You can omit the `--no-index` option when running the command in a working tree controlled by Git and at least one of the paths points outside the working tree, or when running the command outside a working tree controlled by Git. This form implies `--exit-code`."
msgstr "Este formulário serve para comparar os dois caminhos utilizados no sistema de arquivos.  Você pode omitir a opção `--no-index` durante a execução do comando em uma árvore de trabalho controlado pelo Git e pelo menos um dos pontos dos caminhos fora da árvore de trabalho ou ao executar o comando fora de uma árvore de trabalho que é controlado pelo Git. Este formulário implica no uso da opção `--exit-code`."

#. type: Labeled list
#: en/git-diff.txt:43
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git diff' [<options>] --cached [--merge-base] [<commit>] [--] [<path>...]"
msgstr "'git diff' [<opções>] --cached [--merge-base] [<commit>] [--] [<caminho>...]"

#. type: Plain text
#: en/git-diff.txt:52
#, priority:280
msgid "This form is to view the changes you staged for the next commit relative to the named <commit>.  Typically you would want comparison with the latest commit, so if you do not give <commit>, it defaults to HEAD.  If HEAD does not exist (e.g. unborn branches) and <commit> is not given, it shows all staged changes.  --staged is a synonym of --cached."
msgstr "Este formulário serve para exibir as alterações feitas em relação ao próximo commit relativo ao `<commit>` informado.  Geralmente você vai querer uma comparação com o commit mais recente, portanto, se não fizer o `<commit>` a predefinição retorna para `HEAD`.  Caso `HEAD` não exista (por exemplo, os galhos que ainda vão aparecer) e um `<commit>` não tenha sido feito, exibe todas as alterações em etapas.  `--staged` é um sinônimo da opção `--cached`."

#. type: Plain text
#: en/git-diff.txt:56
#, priority:280
msgid "If --merge-base is given, instead of using <commit>, use the merge base of <commit> and HEAD.  `git diff --cached --merge-base A` is equivalent to `git diff --cached $(git merge-base A HEAD)`."
msgstr "Caso a opção --merge-base seja usada, em vez de usar <commit>, use a base mesclada do <commit> e HEAD.  `git diff --cached --merge-base A` é o mesmo que `git diff --cached $(git merge-base A HEAD)`."

#. type: Labeled list
#: en/git-diff.txt:57
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git diff' [<options>] [--merge-base] <commit> [--] [<path>...]"
msgstr "'git diff' [<opções>] [--merge-base] <commit> [--] [<caminho>...]"

#. type: Plain text
#: en/git-diff.txt:64
#, priority:280
msgid "This form is to view the changes you have in your working tree relative to the named <commit>.  You can use HEAD to compare it with the latest commit, or a branch name to compare with the tip of a different branch."
msgstr "Este formulário exibe as modificações feitas por você na sua árvore de trabalho relativo ao nome do `<commit>`.  É possível utilizar o `HEAD` para compará-lo com o commit mais recente ou para comparar com o cume de um ramo diferente."

#. type: Plain text
#: en/git-diff.txt:68
#, priority:280
msgid "If --merge-base is given, instead of using <commit>, use the merge base of <commit> and HEAD.  `git diff --merge-base A` is equivalent to `git diff $(git merge-base A HEAD)`."
msgstr "Caso a opção --merge-base seja usada, em vez de usar <commit>, use a base mesclada do <commit> e HEAD.  `git diff --merge-base A` é o mesmo que `git diff $(git merge-base A HEAD)`."

#. type: Labeled list
#: en/git-diff.txt:69
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git diff' [<options>] [--merge-base] <commit> <commit> [--] [<path>...]"
msgstr "'git diff' [<opções>] [--merge-base] <commit> <commit> [--] [<caminho>...]"

#. type: Plain text
#: en/git-diff.txt:73
#, priority:280
msgid "This is to view the changes between two arbitrary <commit>."
msgstr "Isso é para exibir as alterações entre os dois `<commits>` arbitrários."

#. type: Plain text
#: en/git-diff.txt:77
#, priority:280
msgid "If --merge-base is given, use the merge base of the two commits for the \"before\" side.  `git diff --merge-base A B` is equivalent to `git diff $(git merge-base A B) B`."
msgstr "Caso a opção --merge-base seja usada, use a base mesclada dos dois commits do lado \"anterior\". O comando `git diff --merge-base A B` é o mesmo que `git diff $(git merge-base A B) B`."

#. type: Labeled list
#: en/git-diff.txt:78
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git diff' [<options>] <commit> <commit>... <commit> [--] [<path>...]"
msgstr "'git diff' [<opções>] <commit> <commit>... <commit> [--] [<caminho>...]"

#. type: Plain text
#: en/git-diff.txt:86
#, priority:280
msgid "This form is to view the results of a merge commit.  The first listed <commit> must be the merge itself; the remaining two or more commits should be its parents.  A convenient way to produce the desired set of revisions is to use the `^@` suffix.  For instance, if `master` names a merge commit, `git diff master master^@` gives the same combined diff as `git show master`."
msgstr "Este formulário serve para visualizar os resultados da mesclagem de um commit.  Os primeiros <commit> que forem listados devem ser a mesclagem em si; os dois ou mais commits restantes devem ser seus pais.  Uma maneira conveniente de produzir o conjunto desejado das revisões é usar o sufixo `^@`.  Como por exemplo, caso o  'master' nomeie a mesclagem de um commit, o comando `git diff master^@` retorna o mesmo diff combinado como no comando `git show master`."

#. type: Labeled list
#: en/git-diff.txt:87
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git diff' [<options>] <commit>..<commit> [--] [<path>...]"
msgstr "'git diff' [<opções>] <commit>..<commit> [--] [<caminho>...]"

#. type: Plain text
#: en/git-diff.txt:93
#, priority:280
msgid "This is synonymous to the earlier form (without the `..`) for viewing the changes between two arbitrary <commit>.  If <commit> on one side is omitted, it will have the same effect as using HEAD instead."
msgstr "Isso é um sinônimo do formulário anterior (sem o `..`) para visualizar as alterações entre dois <commit> arbitrários.  Caso o <commitir> de um lado seja omitido, ele terá o mesmo efeito que usar `HEAD`."

#. type: Labeled list
#: en/git-diff.txt:94
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git diff' [<options>] <commit>\\...<commit> [--] [<path>...]"
msgstr "'git diff' [<opções>] <commit>\\...<commit> [--] [<caminho>...]"

#. type: Plain text
#: en/git-diff.txt:101
#, ignore-ellipsis, priority:280
msgid "This form is to view the changes on the branch containing and up to the second <commit>, starting at a common ancestor of both <commit>.  `git diff A...B` is equivalent to `git diff $(git merge-base A B) B`.  You can omit any one of <commit>, which has the same effect as using HEAD instead."
msgstr "Este formulário é para exibir as alterações no ramo que contenha até o segundo `<commit>`, iniciando com um ancestral comum de ambos os `<commit>`.  `git diff A...B` é o equivalente a um `git diff $(git merge-base A B) B`.  Você pode omitir qualquer um dos `<commit>` que tem o mesmo efeito que usar `HEAD`."

#. type: Plain text
#: en/git-diff.txt:106
#, priority:280
msgid "Just in case you are doing something exotic, it should be noted that all of the <commit> in the above description, except in the `--merge-base` case and in the last two forms that use `..` notations, can be any <tree>."
msgstr "No caso de você estar fazendo algo exótico, deve-se notar que todos os `<commit>` na descrição acima, exceto no caso da opção `--merge-base` nas duas últimas formas que usam as notações `..`, podem ser qualquer `<árvore>`."

#. type: Plain text
#: en/git-diff.txt:113
#, ignore-ellipsis, priority:280
msgid "For a more complete list of ways to spell <commit>, see \"SPECIFYING REVISIONS\" section in linkgit:gitrevisions[7].  However, \"diff\" is about comparing two _endpoints_, not ranges, and the range notations (`<commit>..<commit>` and `<commit>...<commit>`) do not mean a range as defined in the \"SPECIFYING RANGES\" section in linkgit:gitrevisions[7]."
msgstr "Para obter uma lista mais completa de maneiras de soletrar um `<commit>`, consulte a seção \"DEFININDO AS REVISÕES\" em linkgit:gitrevisions[7].  No entanto, `diff` é sobre comparar dois _endpoints_, e não os intervalos, as notações de intervalo (`<commit>.. <commit>` e `<commit>... <commit>`) não significam um intervalo definido na seção \"DEFININDO AS REVISÕES\" em linkgit:gitrevisions[7]."

#. type: Labeled list
#: en/git-diff.txt:114
#, no-wrap, priority:280
msgid "'git diff' [<options>] <blob> <blob>"
msgstr "'git diff' [<opções>] <blob> <blob>"

#. type: Plain text
#: en/git-diff.txt:118
#, priority:280
msgid "This form is to view the differences between the raw contents of two blob objects."
msgstr "Este formulário serve para exibir as alterações feitas entre o conteúdo bruto de dois objetos bolha."

#. type: Plain text
#: en/git-diff.txt:132
#, priority:280
msgid "Compare the working tree with the \"base\" version (stage #1), \"our branch\" (stage #2) or \"their branch\" (stage #3).  The index contains these stages only for unmerged entries i.e.  while resolving conflicts.  See linkgit:git-read-tree[1] section \"3-Way Merge\" for detailed information."
msgstr "Compare a árvore de trabalho com a versão \"base\" (stage #1), \"o nosso ramo\" (stage #2) \"o ramo deles\" (stage #3).  O índice contém estas etapas apenas para as entradas que não foram não mescladas enquanto estiver resolvendo os conflitos.  Para obter informações mais detalhadas, consulte a seção \"3-Way Merge\" linkgit:git-read-tree[1]."

#. type: Plain text
#: en/git-diff.txt:137
#, priority:280
msgid "Omit diff output for unmerged entries and just show \"Unmerged\".  Can be used only when comparing the working tree with the index."
msgstr "Omita a saída diff para as entradas que não tenham sido mescladas e exiba \"Unmergedd\".  Só pode ser utilizado quando comparamos a árvore de trabalho com o índice."

#. type: Plain text
#: en/git-diff.txt:142
#, priority:280
msgid "The <paths> parameters, when given, are used to limit the diff to the named paths (you can give directory names and get diff for all files under them)."
msgstr "Os parâmetros `<paths>`, quando utilizados, são para limitar o `diff` quanto aos nomes dos caminhos (você pode dar nomes de diretórios e obter um `diff` para todos os arquivos sob eles)."

#. type: Labeled list
#: en/git-diff.txt:149
#, no-wrap, priority:280
msgid "Various ways to check your working tree"
msgstr "Várias maneiras para verificar a sua árvore de trabalho"

#. type: delimited block -
#: en/git-diff.txt:155
#, no-wrap, priority:280
msgid ""
"$ git diff            <1>\n"
"$ git diff --cached   <2>\n"
"$ git diff HEAD       <3>\n"
msgstr ""
"$ git diff            <1>\n"
"$ git diff --cached   <2>\n"
"$ git diff HEAD       <3>\n"

#. type: Plain text
#: en/git-diff.txt:158
#, priority:280
msgid "Changes in the working tree not yet staged for the next commit."
msgstr "As mudanças na árvore de trabalho ainda não preparadas para o próximo commit."

#. type: Plain text
#: en/git-diff.txt:160
#, priority:280
msgid "Changes between the index and your last commit; what you would be committing if you run `git commit` without `-a` option."
msgstr "As alterações entre o índice e o seu último commit; o que você estaria fazendo no commit caso você executasse o comando `git commit` sem a opção `-a`."

#. type: Plain text
#: en/git-diff.txt:162
#, priority:280
msgid "Changes in the working tree since your last commit; what you would be committing if you run `git commit -a`"
msgstr "As alterações na árvore de trabalho desde o seu último commit; o que você estaria fazendo no commit caso executasse o comando `git commit -a`"

#. type: Labeled list
#: en/git-diff.txt:163
#, no-wrap, priority:280
msgid "Comparing with arbitrary commits"
msgstr "Comparando com commits arbitrários"

#. type: delimited block -
#: en/git-diff.txt:169
#, no-wrap, priority:280
msgid ""
"$ git diff test            <1>\n"
"$ git diff HEAD -- ./test  <2>\n"
"$ git diff HEAD^ HEAD      <3>\n"
msgstr ""
"$ git diff test            <1>\n"
"$ git diff HEAD -- ./test  <2>\n"
"$ git diff HEAD^ HEAD      <3>\n"

#. type: Plain text
#: en/git-diff.txt:173
#, priority:280
msgid "Instead of using the tip of the current branch, compare with the tip of \"test\" branch."
msgstr "Em vez de utilizar o cume do ramo atual, compare com o cume do ramo \"teste\"."

#. type: Plain text
#: en/git-diff.txt:176
#, priority:280
msgid "Instead of comparing with the tip of \"test\" branch, compare with the tip of the current branch, but limit the comparison to the file \"test\"."
msgstr "Em vez de comparar com o cume do ramo \"teste\", compare com o cume do ramo atual, limitando-se a comparação com o arquivo \"teste\"."

#. type: Plain text
#: en/git-diff.txt:177
#, priority:280
msgid "Compare the version before the last commit and the last commit."
msgstr "Compare a versão antes do último commit e o último commit."

#. type: Labeled list
#: en/git-diff.txt:178
#, no-wrap, priority:280
msgid "Comparing branches"
msgstr "Comparando os ramos"

#. type: delimited block -
#: en/git-diff.txt:184
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"$ git diff topic master    <1>\n"
"$ git diff topic..master   <2>\n"
"$ git diff topic...master  <3>\n"
msgstr ""
"$ git diff topic master    <1>\n"
"$ git diff topic..master   <2>\n"
"$ git diff topic...master  <3>\n"

#. type: Plain text
#: en/git-diff.txt:187
#, priority:280
msgid "Changes between the tips of the topic and the master branches."
msgstr "As alterações entre as dicas do tópico e as ramificações principais."

#. type: Plain text
#: en/git-diff.txt:188 en/git-remote-fd.txt:44 en/git-remote-fd.txt:52 en/git-web--browse.txt:52
#, priority:280
msgid "Same as above."
msgstr "O mesmo que acima."

#. type: Plain text
#: en/git-diff.txt:190
#, priority:280
msgid "Changes that occurred on the master branch since when the topic branch was started off it."
msgstr "As alterações que ocorreram na ramificação master (mestre) desde quando a ramificação do tópico foi iniciada."

#. type: Labeled list
#: en/git-diff.txt:191
#, no-wrap, priority:280
msgid "Limiting the diff output"
msgstr "Limitando a saída diff"

#. type: delimited block -
#: en/git-diff.txt:197
#, no-wrap, priority:280
msgid ""
"$ git diff --diff-filter=MRC            <1>\n"
"$ git diff --name-status                <2>\n"
"$ git diff arch/i386 include/asm-i386   <3>\n"
msgstr ""
"$ git diff --diff-filter=MRC            <1>\n"
"$ git diff --name-status                <2>\n"
"$ git diff arch/i386 include/asm-i386   <3>\n"

#. type: Plain text
#: en/git-diff.txt:201
#, priority:280
msgid "Show only modification, rename, and copy, but not addition or deletion."
msgstr "Exibe apenas as modificações, renomeações e cópias, mas não a adição ou exclusão."

#. type: Plain text
#: en/git-diff.txt:203
#, priority:280
msgid "Show only names and the nature of change, but not actual diff output."
msgstr "Exibe apenas os nomes e a natureza da alteração, mas não a saída diff real."

#. type: Plain text
#: en/git-diff.txt:204
#, priority:280
msgid "Limit diff output to named subtrees."
msgstr "Limite a saída diff aos nomes das subárvores."

#. type: Labeled list
#: en/git-diff.txt:205
#, no-wrap, priority:280
msgid "Munging the diff output"
msgstr "Arruinando a saída diff"

#. type: delimited block -
#: en/git-diff.txt:210
#, no-wrap, priority:280
msgid ""
"$ git diff --find-copies-harder -B -C  <1>\n"
"$ git diff -R                          <2>\n"
msgstr ""
"$ git diff --find-copies-harder -B -C  <1>\n"
"$ git diff -R                          <2>\n"

#. type: Plain text
#: en/git-diff.txt:214
#, priority:280
msgid "Spend extra cycles to find renames, copies and complete rewrites (very expensive)."
msgstr "Gaste alguns ciclos extras para encontrar renomeações, cópias e reescritas completas (muito custoso ao sistema)."

#. type: Plain text
#: en/git-diff.txt:215
#, priority:280
msgid "Output diff in reverse."
msgstr "Saída do diff em reverso."

#. type: Plain text
#: en/git-diff.txt:232
#, priority:280
msgid "diff(1), linkgit:git-difftool[1], linkgit:git-log[1], linkgit:gitdiffcore[7], linkgit:git-format-patch[1], linkgit:git-apply[1], linkgit:git-show[1]"
msgstr "diff(1), linkgit:git-difftool[1], linkgit:git-log[1], linkgit:gitdiffcore[7], linkgit:git-format-patch[1], linkgit:git-apply[1], linkgit:git-show[1]"

#. type: Title =
#: en/git-fast-export.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-fast-export(1)"
msgstr "git-fast-export(1)"

#. type: Plain text
#: en/git-fast-export.txt:7
#, priority:90
msgid "git-fast-export - Git data exporter"
msgstr "git-fast-export - Exportador de dados do Git"

#. type: Plain text
#: en/git-fast-export.txt:13
#, no-wrap, priority:90
msgid "'git fast-export [<options>]' | 'git fast-import'\n"
msgstr "'git fast-export [<opções>]' | 'git fast-import'\n"

#. type: Plain text
#: en/git-fast-export.txt:18
#, priority:90
msgid "This program dumps the given revisions in a form suitable to be piped into 'git fast-import'."
msgstr "Este programa despeja as revisões informadas num formato adequado para ser canalizado para o 'git fast-import'."

#. type: Plain text
#: en/git-fast-export.txt:23
#, priority:90
msgid "You can use it as a human-readable bundle replacement (see linkgit:git-bundle[1]), or as a format that can be edited before being fed to 'git fast-import' in order to do history rewrites (an ability relied on by tools like 'git filter-repo')."
msgstr "Você pode usá-lo como uma reposição legível do pacote (consulte linkgit:git-bundle[1]) ou como um formato que pode ser editado antes que possa ser enviado ao 'git fast import' para fazer a reescrita no histórico (uma habilidade dependente das ferramentas como 'git filter-repo')."

#. type: Labeled list
#: en/git-fast-export.txt:26
#, no-wrap, priority:90
msgid "--progress=<n>"
msgstr "--progress = <n>"

#. type: Plain text
#: en/git-fast-export.txt:29
#, priority:90
msgid "Insert 'progress' statements every <n> objects, to be shown by 'git fast-import' during import."
msgstr "Insira instruções de 'progresso' em todos os objetos `<n>` a serem exibidos por 'git fast-import' durante a importação."

#. type: Labeled list
#: en/git-fast-export.txt:30
#, no-wrap, priority:90
msgid "--signed-tags=(verbatim|warn|warn-strip|strip|abort)"
msgstr "--signed-tags=(verbatim|warn|warn-strip|strip|abort)"

#. type: Plain text
#: en/git-fast-export.txt:34
#, priority:90
msgid "Specify how to handle signed tags.  Since any transformation after the export can change the tag names (which can also happen when excluding revisions) the signatures will not match."
msgstr "Determine como lidar com tags assinadas.  Como qualquer transformação após a exportação pode alterar os nomes das tags (o que também pode acontecer ao excluir as revisões) e as assinaturas não coincidentes."

#. type: Plain text
#: en/git-fast-export.txt:41
#, priority:90
msgid "When asking to 'abort' (which is the default), this program will die when encountering a signed tag.  With 'strip', the tags will silently be made unsigned, with 'warn-strip' they will be made unsigned but a warning will be displayed, with 'verbatim', they will be silently exported and with 'warn', they will be exported, but you will see a warning."
msgstr "Ao pedir para abortar 'abort' (que é o padrão), este programa será terminado ao encontrar uma tag assinada.  Com `strip`, as tags serão silenciosamente perderão a assinatura, com `warn strip` elas também perderão a assinatura, porém um aviso será exibido, com `verbatim`, elas serão exportadas silenciosamente e com `warn`, elas serão exportadas , porém você será avisado."

#. type: Labeled list
#: en/git-fast-export.txt:42
#, no-wrap, priority:90
msgid "--tag-of-filtered-object=(abort|drop|rewrite)"
msgstr "--tag-of-filtered-object=(abort|drop|rewrite)"

#. type: Plain text
#: en/git-fast-export.txt:46
#, priority:90
msgid "Specify how to handle tags whose tagged object is filtered out.  Since revisions and files to export can be limited by path, tagged objects may be filtered completely."
msgstr "Determina como manipular as tags cujo objeto marcado seja filtrado.  Como as revisões e os arquivos a serem exportados podem ser limitados pelo caminho, os objetos marcados podem ser filtrados por completo."

#. type: Plain text
#: en/git-fast-export.txt:52
#, priority:90
msgid "When asking to 'abort' (which is the default), this program will die when encountering such a tag.  With 'drop' it will omit such tags from the output.  With 'rewrite', if the tagged object is a commit, it will rewrite the tag to tag an ancestor commit (via parent rewriting; see linkgit:git-rev-list[1])"
msgstr "Ao pedir para abortar 'abort' (que é o predefinido), este programa será terminado ao encontrar tal tag.  Com 'drop' estas opções serão omitidas da saída.  Com 'rewrite', caso o objeto marcado seja um commit, a tag será reescrita para marcar a tag de um commit anterior (através da reescrita da origem; consulte linkgit:git-rev-list[1])"

#. type: Plain text
#: en/git-fast-export.txt:58
#, priority:90
msgid "Perform move and/or copy detection, as described in the linkgit:git-diff[1] manual page, and use it to generate rename and copy commands in the output dump."
msgstr "Detecta a ação de copiar e mover como descrito na página do manual linkgit:git-diff[1], utilize-o para gerar comandos de copiar e renomear na saída."

#. type: Plain text
#: en/git-fast-export.txt:61
#, priority:90
msgid "Note that earlier versions of this command did not complain and produced incorrect results if you gave these options."
msgstr "Observe que as versões anteriores deste comando não reclamavam e produziam resultados incorretos caso essas opções fossem utilizadas."

#. type: Labeled list
#: en/git-fast-export.txt:62 en/git-fast-import.txt:93
#, no-wrap, priority:90
msgid "--export-marks=<file>"
msgstr "--export-marks=<arquivo>"

#. type: Plain text
#: en/git-fast-export.txt:73
#, priority:90
msgid "Dumps the internal marks table to <file> when complete.  Marks are written one per line as `:markid SHA-1`. Only marks for revisions are dumped; marks for blobs are ignored.  Backends can use this file to validate imports after they have been completed, or to save the marks table across incremental runs.  As <file> is only opened and truncated at completion, the same path can also be safely given to --import-marks.  The file will not be written if no new object has been marked/exported."
msgstr "Despeja a tabela de marcações internas no <arquivo> quando for concluída.  Linha a linha as marcações são escritas, como `:markid SHA-1`. Somente as marcações para as revisões são despejadas; as marcações das bolhas são ignoradas.  Os processos internos podem usar esse arquivo para validar as importações depois que forem concluídas ou para salvar a tabela das marcações nas execuções incrementais.  Como o <arquivo> só é aberto e truncado na conclusão, o mesmo caminho também pode ser passado com segurança para a opção `--import-marks`.  O arquivo não será gravado caso nenhum novo objeto tenha sido marcado/exportado."

#. type: Labeled list
#: en/git-fast-export.txt:74 en/git-fast-import.txt:102
#, no-wrap, priority:90
msgid "--import-marks=<file>"
msgstr "--import-marks=<arquivo>"

#. type: Plain text
#: en/git-fast-export.txt:78
#, priority:90
msgid "Before processing any input, load the marks specified in <file>.  The input file must exist, must be readable, and must use the same format as produced by --export-marks."
msgstr "Antes de processar qualquer entrada, carregue as marcações usadas no <arquivo>.  O arquivo de entrada deve existir, ser legível e usar o mesmo formato produzido por `--export-marks`."

#. type: Labeled list
#: en/git-fast-export.txt:79
#, ignore-same, no-wrap, priority:90
msgid "--mark-tags"
msgstr "--mark-tags"

#. type: Plain text
#: en/git-fast-export.txt:87
#, priority:90
msgid "In addition to labelling blobs and commits with mark ids, also label tags.  This is useful in conjunction with `--export-marks` and `--import-marks`, and is also useful (and necessary) for exporting of nested tags.  It does not hurt other cases and would be the default, but many fast-import frontends are not prepared to accept tags with mark identifiers."
msgstr "Além de rotular as bolhas e fazer os commits com os IDs das marcações, e também rotulando as tags.  É útil em conjunto com a opção `--export-marks` e `--import-marks`, também é útil (e necessário) para a exportação das tags aninhadas.  Não prejudica os outros casos e seria a predefinição, porém muitos frontends de importação rápida (fast-import) não estão preparados para aceitar as tags com identificadores de marcação."

#. type: Plain text
#: en/git-fast-export.txt:92
#, priority:90
msgid "Any commits (or tags) that have already been marked will not be exported again.  If the backend uses a similar --import-marks file, this allows for incremental bidirectional exporting of the repository by keeping the marks the same across runs."
msgstr "Quaisquer commits (ou tags) que já foram marcadas não serão exportadas novamente.  Caso a estrutura utilize um arquivo '--import-marks' semelhante, isto permitirá a exportação bidirecional e incremental do repositório, mantendo as marcas iguais durante as execuções."

#. type: Labeled list
#: en/git-fast-export.txt:93
#, ignore-same, no-wrap, priority:90
msgid "--fake-missing-tagger"
msgstr "--fake-missing-tagger"

#. type: Plain text
#: en/git-fast-export.txt:98
#, priority:90
msgid "Some old repositories have tags without a tagger.  The fast-import protocol was pretty strict about that, and did not allow that.  So fake a tagger to be able to fast-import the output."
msgstr "Alguns repositórios antigos têm tags sem um etiquetador.  O protocolo de importação rápida era bastante rigoroso quanto isso.  Então, falsifique um etiquetador para poder importar rapidamente a saída."

#. type: Labeled list
#: en/git-fast-export.txt:99
#, ignore-same, no-wrap, priority:90
msgid "--use-done-feature"
msgstr "--use-done-feature"

#. type: Plain text
#: en/git-fast-export.txt:102
#, priority:90
msgid "Start the stream with a 'feature done' stanza, and terminate it with a 'done' command."
msgstr "Inicie o fluxo com uma sub-rotina 'feature done' e finalize-o com um comando 'done'."

#. type: Labeled list
#: en/git-fast-export.txt:103
#, ignore-same, no-wrap, priority:90
msgid "--no-data"
msgstr "--no-data"

#. type: Plain text
#: en/git-fast-export.txt:110
#, priority:90
msgid "Skip output of blob objects and instead refer to blobs via their original SHA-1 hash.  This is useful when rewriting the directory structure or history of a repository without touching the contents of individual files.  Note that the resulting stream can only be used by a repository which already contains the necessary objects."
msgstr "Ignore a saída dos objetos bolha e, em vez disso, consulte as bolhas por meio do hash SHA-1 original.  Isso é útil durante a reescrita da estrutura dos diretórios ou do histórico de um repositório sem tocar no conteúdo individual dos arquivos.  Observe que o fluxo resultante pode ser utilizado apenas por um repositório que já contenha os objetos necessários."

#. type: Labeled list
#: en/git-fast-export.txt:111 en/git-ls-tree.txt:82
#, ignore-same, no-wrap, priority:90
msgid "--full-tree"
msgstr "--full-tree"

#. type: Plain text
#: en/git-fast-export.txt:116
#, priority:90
msgid "This option will cause fast-export to issue a \"deleteall\" directive for each commit followed by a full list of all files in the commit (as opposed to just listing the files which are different from the commit's first parent)."
msgstr "Essa opção fará com que a exportação rápida emita uma diretiva \"deleteall\" (apague todos) para cada commit seguida por uma lista completa de todos os arquivos no commit (em vez de apenas listar os arquivos diferentes do primeiro commit)."

#. type: Labeled list
#: en/git-fast-export.txt:117
#, ignore-same, no-wrap, priority:90
msgid "--anonymize"
msgstr "--anonymize"

#. type: Plain text
#: en/git-fast-export.txt:121
#, priority:90
msgid "Anonymize the contents of the repository while still retaining the shape of the history and stored tree.  See the section on `ANONYMIZING` below."
msgstr "Torne os conteúdos do repositório, anônimo, mantendo a forma do histórico e da árvore armazenada.  Veja a seção `ANONIMIZANDO` abaixo."

#. type: Labeled list
#: en/git-fast-export.txt:122
#, no-wrap, priority:90
msgid "--anonymize-map=<from>[:<to>]"
msgstr "--anonymize-map=<a-partir-de>[:<para>]"

#. type: Plain text
#: en/git-fast-export.txt:126
#, priority:90
msgid "Convert token `<from>` to `<to>` in the anonymized output. If `<to>` is omitted, map `<from>` to itself (i.e., do not anonymize it). See the section on `ANONYMIZING` below."
msgstr "Converta o token `<a-partir-de>` para `<para>` na saída anônima. Caso `<para>` seja omitido, mapeie `<a-partir-de>` para si mesmo (ou seja, não anonimamente). Consulte a seção 'ANONIMIZANDO` abaixo."

#. type: Labeled list
#: en/git-fast-export.txt:127
#, ignore-same, no-wrap, priority:90
msgid "--reference-excluded-parents"
msgstr "--reference-excluded-parents"

#. type: Plain text
#: en/git-fast-export.txt:138
#, priority:90
msgid "By default, running a command such as `git fast-export master~5..master` will not include the commit master{tilde}5 and will make master{tilde}4 no longer have master{tilde}5 as a parent (though both the old master{tilde}4 and new master{tilde}4 will have all the same files).  Use --reference-excluded-parents to instead have the stream refer to commits in the excluded range of history by their sha1sum.  Note that the resulting stream can only be used by a repository which already contains the necessary parent commits."
msgstr "É predefinido que ao executar um comando como `git fast-export master~5..master` não incluirá o commit 'master{tilde}5' e fará com que o 'master{tilde}4' não tenha mais o 'master{tilde}5' como parente (embora ambos o antigo 'master{tilde}4' e o novo 'master{tilde}4' tenham todos os mesmos arquivos).  Utilize a opção `--reference-exclusive-parents` para que o fluxo se refira aos commits no intervalo excluído do histórico pelo sha1sum.  Observe que o fluxo resultante pode ser utilizado apenas por um repositório que já contenha os parentes dos commits necessários."

#. type: Labeled list
#: en/git-fast-export.txt:139
#, ignore-same, no-wrap, priority:90
msgid "--show-original-ids"
msgstr "--show-original-ids"

#. type: Plain text
#: en/git-fast-export.txt:145
#, priority:90
msgid "Add an extra directive to the output for commits and blobs, `original-oid <SHA1SUM>`.  While such directives will likely be ignored by importers such as git-fast-import, it may be useful for intermediary filters (e.g. for rewriting commit messages which refer to older commits, or for stripping blobs by id)."
msgstr "Inclua uma diretiva extra para os commits que forem gerados e as bolhas, `original-oid <SHA1SUM>`.  Embora estas diretivas provavelmente sejam ignoradas pelos importadores, como o comando `git-fast-import`, pode ser útil para os filtros intermediários (para reescrever mensagens do commit que se referem aos commits mais antigos ou para remover as bolhas através de uma ID por exemplo)."

#. type: Labeled list
#: en/git-fast-export.txt:146
#, no-wrap, priority:90
msgid "--reencode=(yes|no|abort)"
msgstr "--reencode=(yes|no|abort)"

#. type: Plain text
#: en/git-fast-export.txt:152
#, priority:90
msgid "Specify how to handle `encoding` header in commit objects.  When asking to 'abort' (which is the default), this program will die when encountering such a commit object.  With 'yes', the commit message will be re-encoded into UTF-8.  With 'no', the original encoding will be preserved."
msgstr "Especifique como manipular o cabeçalho `encoding` nos objetos commit.  Ao pedir para abortar 'abort' (que é a predefinição), este programa será terminado ao encontrar tal objeto que foi feito o commit.  Com 'yes', a mensagem do commit será re-codificada para UTF-8.  Com 'no', a codificação original será preservada."

#. type: Labeled list
#: en/git-fast-export.txt:153
#, ignore-same, no-wrap, priority:90
msgid "--refspec"
msgstr "--refspec"

#. type: Plain text
#: en/git-fast-export.txt:156
#, priority:90
msgid "Apply the specified refspec to each ref exported. Multiple of them can be specified."
msgstr "Aplique o `refspec` especificado a cada \"ref\" exportado. Vários deles podem ser especificados."

#. type: Labeled list
#: en/git-fast-export.txt:157
#, ignore-ellipsis, no-wrap, priority:90
msgid "[<git-rev-list-args>...]"
msgstr "[<git-rev-list-args>...]"

#. type: Plain text
#: en/git-fast-export.txt:165
#, priority:90
msgid "A list of arguments, acceptable to 'git rev-parse' and 'git rev-list', that specifies the specific objects and references to export.  For example, `master~10..master` causes the current master reference to be exported along with all objects added since its 10th ancestor commit and (unless the --reference-excluded-parents option is specified) all files common to master{tilde}9 and master{tilde}10."
msgstr "Uma lista de argumentos aceitáveis para o 'git rev-parse' e 'git rev-list', que especifica os objetos e referências para serem exportadas.  Por exemplo, `master~10..master` faz com que a referência principal atual seja exportada junto com todos os objetos adicionados desde o seu décimo commit ancestral e (a menos que a opção `--reference-exclusive-parents` esteja usada) todos os arquivos comuns a master{tilde}9 e master{tilde}10."

#. type: delimited block -
#: en/git-fast-export.txt:171
#, no-wrap, priority:90
msgid "$ git fast-export --all | (cd /empty/repository && git fast-import)\n"
msgstr "$ git fast-export --all | (cd /empty/repository && git fast-import)\n"

#. type: Plain text
#: en/git-fast-export.txt:176
#, priority:90
msgid "This will export the whole repository and import it into the existing empty repository.  Except for reencoding commits that are not in UTF-8, it would be a one-to-one mirror."
msgstr "Isso exportará o repositório inteiro e importará para o repositório vazio existente.  Exceto para re-codificar os commits que não estejam como UTF-8, seria um cópia um para um."

#. type: delimited block -
#: en/git-fast-export.txt:181
#, no-wrap, priority:90
msgid ""
"$ git fast-export master~5..master |\n"
"\tsed \"s|refs/heads/master|refs/heads/other|\" |\n"
"\tgit fast-import\n"
msgstr ""
"$ git fast-export master~5..master |\n"
"\tsed \"s|refs/heads/master|refs/heads/other|\" |\n"
"\tgit fast-import\n"

#. type: Plain text
#: en/git-fast-export.txt:185
#, priority:90
msgid "This makes a new branch called 'other' from 'master~5..master' (i.e. if 'master' has linear history, it will take the last 5 commits)."
msgstr "Isso cria um novo ramo chamado 'other' de 'master~5..master' (ou seja, caso 'master' tenha um histórico linear, serão necessários então os últimos 5 commits)."

#. type: Plain text
#: en/git-fast-export.txt:189
#, priority:90
msgid "Note that this assumes that none of the blobs and commit messages referenced by that revision range contains the string 'refs/heads/master'."
msgstr "Observe que isso pressupõe que nenhuma das bolhas e as mensagens dos commits referenciadas por esse intervalo de revisão, contenha a sequência `refs/heads/master`."

#. type: Title -
#: en/git-fast-export.txt:192
#, no-wrap, priority:90
msgid "ANONYMIZING"
msgstr "ANONIMIZANDO"

#. type: Plain text
#: en/git-fast-export.txt:200
#, priority:90
msgid "If the `--anonymize` option is given, git will attempt to remove all identifying information from the repository while still retaining enough of the original tree and history patterns to reproduce some bugs. The goal is that a git bug which is found on a private repository will persist in the anonymized repository, and the latter can be shared with git developers to help solve the bug."
msgstr "Caso a opção `--anonymize` seja utilizada, o git tentará remover todas as informações de identificação do repositório, mantendo ainda o suficiente da árvore original e dos padrões do histórico para reproduzir alguns bugs. O objetivo é que um bug do git encontrado num repositório privado persista no repositório anonimizado e este último pode ser compartilhado com os desenvolvedores do git para ajudar na resolução do problema."

#. type: Plain text
#: en/git-fast-export.txt:212
#, priority:90
msgid "With this option, git will replace all refnames, paths, blob contents, commit and tag messages, names, and email addresses in the output with anonymized data.  Two instances of the same string will be replaced equivalently (e.g., two commits with the same author will have the same anonymized author in the output, but bear no resemblance to the original author string). The relationship between commits, branches, and tags is retained, as well as the commit timestamps (but the commit messages and refnames bear no resemblance to the originals). The relative makeup of the tree is retained (e.g., if you have a root tree with 10 files and 3 trees, so will the output), but their names and the contents of the files will be replaced."
msgstr "Com esta opção, o git substituirá todos os `refnames`, os caminhos, o conteúdo da bolha, o commit, a tag das mensagens, os nomes e os endereços de e-mail que forem gerados através de dados anônimos.  As duas instâncias da mesma sequência serão substituídas de forma equivalente (dois commits com o mesmo autor irão gerar o mesmo autor anônimo, porém não terão nenhuma semelhança com a sequência do autor original por exemplo). O relacionamento entre os commits, as ramificações e as tags será mantido, bem como o registro de data e hora dos commits (menos as mensagens dos commits e os `refnames` que não tenham nenhuma semelhança com os originais). A composição relativa da árvore é mantida (caso tenha uma árvore raiz com 10 arquivos e 3 árvores, assim também será gerado por exemplo), porém os seus nomes e o conteúdo dos arquivos serão substituídos."

#. type: Plain text
#: en/git-fast-export.txt:215
#, priority:90
msgid "If you think you have found a git bug, you can start by exporting an anonymized stream of the whole repository:"
msgstr "Caso acredite que tenha encontrado um bug no git, pode começar exportando um fluxo anonimizado de todo o repositório:"

#. type: delimited block -
#: en/git-fast-export.txt:218
#, no-wrap, priority:90
msgid "$ git fast-export --anonymize --all >anon-stream\n"
msgstr "$ git fast-export --anonymize --all >anon-stream\n"

#. type: Plain text
#: en/git-fast-export.txt:223
#, priority:90
msgid "Then confirm that the bug persists in a repository created from that stream (many bugs will not, as they really do depend on the exact repository contents):"
msgstr "Em seguida, confirme se o bug persiste num repositório criado a partir desse fluxo (muitos erros não, pois eles realmente dependem do conteúdo exato do repositório):"

#. type: delimited block -
#: en/git-fast-export.txt:229
#, ignore-ellipsis, no-wrap, priority:90
msgid ""
"$ git init anon-repo\n"
"$ cd anon-repo\n"
"$ git fast-import <../anon-stream\n"
"$ ... test your bug ...\n"
msgstr ""
"$ git init anon-repo\n"
"$ cd anon-repo\n"
"$ git fast-import <../anon-stream\n"
"$ ... teste o seu bug ...\n"

#. type: Plain text
#: en/git-fast-export.txt:236
#, priority:90
msgid "If the anonymized repository shows the bug, it may be worth sharing `anon-stream` along with a regular bug report. Note that the anonymized stream compresses very well, so gzipping it is encouraged. If you want to examine the stream to see that it does not contain any private data, you can peruse it directly before sending. You may also want to try:"
msgstr "Caso o repositório anonimizado exiba o erro, pode valer a pena compartilhar o `anon-stream` junto com um relatório de erro tradicional. Observe que o fluxo anonimizado é muito bem compactado, portanto a sua compactação gzip é altamente recomendável. Caso deseje examinar o fluxo para ver se não contém dados particulares, é possível examiná-lo diretamente antes de enviar. Também é possível tentar:"

#. type: delimited block -
#: en/git-fast-export.txt:239
#, no-wrap, priority:90
msgid "$ perl -pe 's/\\d+/X/g' <anon-stream | sort -u | less\n"
msgstr "$ perl -pe 's/\\d+/X/g' <anon-stream | sort -u | less\n"

#. type: Plain text
#: en/git-fast-export.txt:245
#, priority:90
msgid "which shows all of the unique lines (with numbers converted to \"X\", to collapse \"User 0\", \"User 1\", etc into \"User X\"). This produces a much smaller output, and it is usually easy to quickly confirm that there is no private data in the stream."
msgstr "que exiba todas as linhas exclusivas (com números convertidos em \"X\", para recolher o \"Usuário 0\", \"Usuário 1\" etc. em \"Usuário X\"). Isso produz uma saída muito menor e geralmente é de rápida confirmação já que não há dados privados no fluxo."

#. type: Plain text
#: en/git-fast-export.txt:251
#, priority:90
msgid "Reproducing some bugs may require referencing particular commits or paths, which becomes challenging after refnames and paths have been anonymized. You can ask for a particular token to be left as-is or mapped to a new value. For example, if you have a bug which reproduces with `git rev-list sensitive -- secret.c`, you can run:"
msgstr "A reprodução de alguns bugs pode exigir a referência para alguns commits em particular ou caminhos específicos, o que se torna desafiador depois que os refnames e os caminhos sejam anonimizados. É possível solicitar que um token em específico seja deixado como está ou seja mapeado para um novo valor. Como por exemplo, caso tenha um bug que seja reproduzido com o comando `git rev-list sensitive -- secret.c`, é possível executar:"

#. type: delimited block -
#: en/git-fast-export.txt:257
#, no-wrap, priority:90
msgid ""
"$ git fast-export --anonymize --all \\\n"
"      --anonymize-map=sensitive:foo \\\n"
"      --anonymize-map=secret.c:bar.c \\\n"
"      >stream\n"
msgstr ""
"$ git fast-export --anonymize --all \\\n"
"      --anonymize-map=sensitive:foo \\\n"
"      --anonymize-map=secret.c:bar.c \\\n"
"      >stream\n"

#. type: Plain text
#: en/git-fast-export.txt:261
#, priority:90
msgid "After importing the stream, you can then run `git rev-list foo -- bar.c` in the anonymized repository."
msgstr "Depois de importar o fluxo, é possível então executar o commando `git rev-list foo -- bar.c` no repositório anonimizado."

#. type: Plain text
#: en/git-fast-export.txt:266
#, priority:90
msgid "Note that paths and refnames are split into tokens at slash boundaries.  The command above would anonymize `subdir/secret.c` as something like `path123/bar.c`; you could then search for `bar.c` in the anonymized repository to determine the final pathname."
msgstr "Observe que os caminhos e os nomes são divididos em tokens nos limites do corte.  O comando acima iria anonimizar `subdir/secret.c` para algo como `path123/bar.c`; seria possível então procurar por `bar.c` no repositório anonimizado para determinar o caminho final."

#. type: Plain text
#: en/git-fast-export.txt:270
#, priority:90
msgid "To make referencing the final pathname simpler, you can map each path component; so if you also anonymize `subdir` to `publicdir`, then the final pathname would be `publicdir/bar.c`."
msgstr "Para tornar mais simples a referência ao pathname (nome do caminho), é possível mapear cada componente do caminho; então, caso também anonimize o `subdir` para `publicdir`, então o nome final do caminho seria `publicdir/bar.c`."

#. type: Plain text
#: en/git-fast-export.txt:277
#, priority:90
msgid "Since 'git fast-import' cannot tag trees, you will not be able to export the linux.git repository completely, as it contains a tag referencing a tree instead of a commit."
msgstr "Como 'git fast-import' não pode marcar as árvores, você não poderá exportar o repositório linux.git completamente pois ele contém uma marca que faz referência a uma árvore em vez de um commit."

#. type: Title =
#: en/git-fast-import.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-fast-import(1)"
msgstr "git-fast-import(1)"

#. type: Plain text
#: en/git-fast-import.txt:7
#, priority:90
msgid "git-fast-import - Backend for fast Git data importers"
msgstr "git-fast-import - Estrutura para os importadores de dados rápidos do Git"

#. type: Plain text
#: en/git-fast-import.txt:13
#, no-wrap, priority:90
msgid "frontend | 'git fast-import' [<options>]\n"
msgstr "frontend | 'git fast-import' [<opções>]\n"

#. type: Plain text
#: en/git-fast-import.txt:20
#, priority:90
msgid "This program is usually not what the end user wants to run directly.  Most end users want to use one of the existing frontend programs, which parses a specific type of foreign source and feeds the contents stored there to 'git fast-import'."
msgstr "Este programa geralmente não é o que o usuário final deseja executar diretamente.  A maioria dos usuários finais deseja usar um dos programas front-end já existentes, que analisa um tipo específico de fonte estrangeira e alimenta o conteúdo armazenado lá para 'git fast-import'."

#. type: Plain text
#: en/git-fast-import.txt:26
#, priority:90
msgid "fast-import reads a mixed command/data stream from standard input and writes one or more packfiles directly into the current repository.  When EOF is received on standard input, fast import writes out updated branch and tag refs, fully updating the current repository with the newly imported data."
msgstr "O `fast-import` lê um fluxo misto de comandos e dados na entrada padrão e grava um ou mais pacote de arquivos diretamente no repositório atual.  Quando um \"EOF\" é recebido na entrada padrão, a importação rápida grava as referências atualizadas das ramificações e tags, atualizando completamente o repositório atual com os dados importados recentemente."

#. type: Plain text
#: en/git-fast-import.txt:32
#, priority:90
msgid "The fast-import backend itself can import into an empty repository (one that has already been initialized by 'git init') or incrementally update an existing populated repository.  Whether or not incremental imports are supported from a particular foreign source depends on the frontend program in use."
msgstr "A estrutura `fast-import` em si pode importar para um repositório vazio (um que já foi inicializado por 'git init') ou atualizar de forma incremental num repositório preenchido já existente.  Caso as importações incrementais sejam ou não compatíveis com determinada fonte estrangeira específica, isso vai depender do programa de front-end utilizado."

#. type: Plain text
#: en/git-fast-import.txt:41
#, priority:90
msgid "Force updating modified existing branches, even if doing so would cause commits to be lost (as the new commit does not contain the old commit)."
msgstr "Impor a atualização das ramificações existentes que foram alteradas , ainda que os commits sejam perdidos (como um novo commit que não contenha o commit antigo)."

#. type: Plain text
#: en/git-fast-import.txt:47
#, priority:90
msgid "Disable the output shown by --stats, making fast-import usually be silent when it is successful.  However, if the import stream has directives intended to show user output (e.g. `progress` directives), the corresponding messages will still be shown."
msgstr "Desative a saída exibida por `--stats`, fazendo com que o `fast-import` seja silenciado quando for bem-sucedido.  No entanto, caso o fluxo de importação tenha diretivas destinadas a exibir a saída do usuário (diretivas `progress` por exemplo), as mensagens coincidentes ainda serão exibidas."

#. type: Labeled list
#: en/git-fast-import.txt:48
#, ignore-same, no-wrap, priority:90
msgid "--stats"
msgstr "--stats"

#. type: Plain text
#: en/git-fast-import.txt:53
#, priority:90
msgid "Display some basic statistics about the objects fast-import has created, the packfiles they were stored into, and the memory used by fast-import during this run.  Showing this output is currently the default, but can be disabled with --quiet."
msgstr "Exiba algumas estatísticas básicas sobre os objetos que a importação rápida criou, os arquivos do pacote em que foram armazenados e a memória utilizado por `fast-import` durante essa execução.  É predefinido que esta saída seja exibida, mas pode ser desativado com `--quiet`."

#. type: Labeled list
#: en/git-fast-import.txt:54
#, ignore-same, no-wrap, priority:90
msgid "--allow-unsafe-features"
msgstr "--allow-unsafe-features"

#. type: Plain text
#: en/git-fast-import.txt:63
#, priority:90
msgid "Many command-line options can be provided as part of the fast-import stream itself by using the `feature` or `option` commands. However, some of these options are unsafe (e.g., allowing fast-import to access the filesystem outside of the repository). These options are disabled by default, but can be allowed by providing this option on the command line.  This currently impacts only the `export-marks`, `import-marks`, and `import-marks-if-exists` feature commands."
msgstr "Muitas opções na linha de comando podem ser informadas como parte do próprio fluxo de importação rápida, utilizando os comandos `feature` ou `option`. No entanto, algumas destas opções não são seguras (por exemplo, permitindo que a importação rápida acesse o sistema de arquivos fora do repositório). É predefinido que estas opções estão desabilitadas, porém podem ser permitidas ao utilizar essa opção na linha de comandos.  Atualmente, isso afeta apenas os comandos de recurso `export-marks`,` import-marks` e `import-marks-if-exist`."

#. type: Plain text
#: en/git-fast-import.txt:68
#, priority:90
msgid "Only enable this option if you trust the program generating the fast-import stream! This option is enabled automatically for remote-helpers that use the `import` capability, as they are already trusted to run their own code."
msgstr "Ative esta opção apenas caso confie no programa que gera o fluxo de importação rápida! Esta opção é ativada automaticamente para os auxiliares remotos que usem o recurso `import`, pois eles já são confiáveis para executar o seu próprio código."

#. type: Title ~
#: en/git-fast-import.txt:70
#, no-wrap, priority:90
msgid "Options for Frontends"
msgstr "Opções para Front-ends"

#. type: Labeled list
#: en/git-fast-import.txt:72
#, no-wrap, priority:90
msgid "--cat-blob-fd=<fd>"
msgstr "--cat-blob-fd=<fd>"

#. type: Plain text
#: en/git-fast-import.txt:77
#, priority:90
msgid "Write responses to `get-mark`, `cat-blob`, and `ls` queries to the file descriptor <fd> instead of `stdout`.  Allows `progress` output intended for the end-user to be separated from other output."
msgstr "Escreva as respostas para `get-mark`, `cat-blob` e do `ls` das consultas no descritor do arquivo <fd> em vez do `stdout`.  Permite que a saída `progress` destinada ao usuário final seja separada de uma outra saída."

#. type: Labeled list
#: en/git-fast-import.txt:78
#, no-wrap, priority:90
msgid "--date-format=<fmt>"
msgstr "--date-format=<fmt>"

#. type: Plain text
#: en/git-fast-import.txt:83
#, priority:90
msgid "Specify the type of dates the frontend will supply to fast-import within `author`, `committer` and `tagger` commands.  See ``Date Formats'' below for details about which formats are supported, and their syntax."
msgstr "Especifique o tipo das datas que o frontend fornecerá para o `fast-import` nos comandos `author`, `committer` e `tagger`.  Consulte ``Formatos de data'' abaixo para obter mais detalhes sobre quais os formatos são compatíveis e sua respectiva sintaxe."

#. type: Labeled list
#: en/git-fast-import.txt:84
#, ignore-same, no-wrap, priority:90
msgid "--done"
msgstr "--done"

#. type: Plain text
#: en/git-fast-import.txt:89
#, priority:90
msgid "Terminate with error if there is no `done` command at the end of the stream.  This option might be useful for detecting errors that cause the frontend to terminate before it has started to write a stream."
msgstr "Termine com erro caso não haja um comando `done` no final do fluxo.  Essa opção pode ser útil para detectar os erros que fazem com que o front-end seja encerrado antes de começar a gravar um fluxo."

#. type: Title ~
#: en/git-fast-import.txt:91
#, no-wrap, priority:90
msgid "Locations of Marks Files"
msgstr "Localizações dos arquivos de marcação"

#. type: Plain text
#: en/git-fast-import.txt:101
#, priority:90
msgid "Dumps the internal marks table to <file> when complete.  Marks are written one per line as `:markid SHA-1`.  Frontends can use this file to validate imports after they have been completed, or to save the marks table across incremental runs.  As <file> is only opened and truncated at checkpoint (or completion) the same path can also be safely given to --import-marks."
msgstr "Despeja a tabela de marcações internas em <arquivo> quando concluída.  As marcações são escritas uma por linha como `:markid SHA-1`.  Os front-ends podem usar este arquivo para validar as importações depois que forem concluídas ou para salvar a tabela de marcações nas execuções incrementais.  Como o <arquivo> é aberto e truncado apenas no ponto de verificação (ou conclusão), o mesmo caminho também pode ser passado com segurança para `--import-marks`."

#. type: Plain text
#: en/git-fast-import.txt:109
#, priority:90
msgid "Before processing any input, load the marks specified in <file>.  The input file must exist, must be readable, and must use the same format as produced by --export-marks.  Multiple options may be supplied to import more than one set of marks.  If a mark is defined to different values, the last file wins."
msgstr "Antes de processar qualquer entrada, carregue as marcações usadas no <arquivo>.  O arquivo de entrada deve existir, ser legível e usar o mesmo formato produzido por `--export-marks`.  As múltiplas opções podem ser informadas para importar mais de um conjunto de marcas.  Caso uma marcação seja definida com valores diferentes, o último arquivo vence."

#. type: Labeled list
#: en/git-fast-import.txt:110
#, no-wrap, priority:90
msgid "--import-marks-if-exists=<file>"
msgstr "--import-marks-if-exists=<arquivo>"

#. type: Plain text
#: en/git-fast-import.txt:113
#, priority:90
msgid "Like --import-marks but instead of erroring out, silently skips the file if it does not exist."
msgstr "Como `--import-marks` porém caso não exista, em vez de exibir um erro, ignora silenciosamente o arquivo."

#. type: Labeled list
#: en/git-fast-import.txt:114
#, ignore-same, no-wrap, priority:90
msgid "--[no-]relative-marks"
msgstr "--[no-]relative-marks"

#. type: Plain text
#: en/git-fast-import.txt:121
#, priority:90
msgid "After specifying --relative-marks the paths specified with --import-marks= and --export-marks= are relative to an internal directory in the current repository.  In git-fast-import this means that the paths are relative to the .git/info/fast-import directory. However, other importers may use a different location."
msgstr "Após especificar `--relative-marks`, os caminhos especificados com `--import-marks=` e `--export-marks=` são relativos a um diretório interno no repositório atual.  No `git-fast-import`, isso significa que os caminhos são relativos ao diretório `.git/info/fast-import`. No entanto, outros importadores podem usar um local diferente."

#. type: Plain text
#: en/git-fast-import.txt:124
#, priority:90
msgid "Relative and non-relative marks may be combined by interweaving --(no-)-relative-marks with the --(import|export)-marks= options."
msgstr "Marcações relativas ou não podem ser combinadas entrelaçando `--(no-)-relative-marks` com a opção `--(import|export)-marks=`."

#. type: Title ~
#: en/git-fast-import.txt:126
#, no-wrap, priority:90
msgid "Submodule Rewriting"
msgstr "Reescrita do submódulo"

#. type: Labeled list
#: en/git-fast-import.txt:128
#, no-wrap, priority:90
msgid "--rewrite-submodules-from=<name>:<file>"
msgstr "--rewrite-submodules-from=<nome>:<arquivo>"

#. type: Labeled list
#: en/git-fast-import.txt:129
#, no-wrap, priority:90
msgid "--rewrite-submodules-to=<name>:<file>"
msgstr "--rewrite-submodules-to=<nome>:<arquivo>"

#. type: Plain text
#: en/git-fast-import.txt:134
#, priority:90
msgid "Rewrite the object IDs for the submodule specified by <name> from the values used in the from <file> to those used in the to <file>. The from marks should have been created by `git fast-export`, and the to marks should have been created by `git fast-import` when importing that same submodule."
msgstr "Reescreve a ID dos objetos no submódulo especificado através do <nome> dos valores usados a partir de um <arquivo> para aqueles usados para o <arquivo>. As marcações de origem deveriam ter sido criadas por pelo comando `git fast-export` e as marcações to deveriam ter sido criadas pelo `git fast-import` durante a importação do mesmo submódulo."

#. type: Plain text
#: en/git-fast-import.txt:139
#, priority:90
msgid "<name> may be any arbitrary string not containing a colon character, but the same value must be used with both options when specifying corresponding marks.  Multiple submodules may be specified with different values for <name>. It is an error not to use these options in corresponding pairs."
msgstr "O <nome> pode ser qualquer sequência arbitrária que não contenha um caractere com dois pontos, porém o mesmo valor deve ser utilizado com as duas opções ao definir as marcações correspondentes.  Os vários submódulos podem ser definidos com valores diferentes para <nome>. É um erro não utilizar estas opções nos pares correspondentes."

#. type: Plain text
#: en/git-fast-import.txt:144
#, priority:90
msgid "These options are primarily useful when converting a repository from one hash algorithm to another; without them, fast-import will fail if it encounters a submodule because it has no way of writing the object ID into the new hash algorithm."
msgstr "Estas opções são úteis principalmente durante a conversão de um repositório através de um algoritmo hash para o outro; sem eles, a importação rápida irá falhar caso encontre um submódulo porque não há como gravar a ID do objeto no novo algoritmo hash."

#. type: Title ~
#: en/git-fast-import.txt:146
#, no-wrap, priority:90
msgid "Performance and Compression Tuning"
msgstr "Ajuste de desempenho e compactação"

#. type: Labeled list
#: en/git-fast-import.txt:148
#, no-wrap, priority:90
msgid "--active-branches=<n>"
msgstr "--active-branches=<n>"

#. type: Plain text
#: en/git-fast-import.txt:151
#, priority:90
msgid "Maximum number of branches to maintain active at once.  See ``Memory Utilization'' below for details.  Default is 5."
msgstr "Número máximo de ramificações para manter ativo de uma só vez.  Consulte `` Utilização da memória '' abaixo para mais informações.  A predefinição é 5."

#. type: Labeled list
#: en/git-fast-import.txt:152
#, no-wrap, priority:90
msgid "--big-file-threshold=<n>"
msgstr "--big-file-threshold=<n>"

#. type: Plain text
#: en/git-fast-import.txt:157
#, priority:90
msgid "Maximum size of a blob that fast-import will attempt to create a delta for, expressed in bytes.  The default is 512m (512 MiB).  Some importers may wish to lower this on systems with constrained memory."
msgstr "O tamanho máximo de uma bolha para o qual o `fast-import` tentará criar um delta expressado em bytes.  A predefinição é 512m (512 MiB).  Alguns importadores podem diminuir isso em sistemas com menos memória."

#. type: Labeled list
#: en/git-fast-import.txt:158 en/git-fetch-pack.txt:85 en/git-pack-objects.txt:129 en/git-repack.txt:102
#, no-wrap, priority:100
msgid "--depth=<n>"
msgstr "--depth=<n>"

#. type: Plain text
#: en/git-fast-import.txt:161
#, priority:90
msgid "Maximum delta depth, for blob and tree deltification.  Default is 50."
msgstr "Profundidade delta máxima, para a \"deltificação\" da bolha e da árvore.  A predefinição é 50."

#. type: Labeled list
#: en/git-fast-import.txt:162
#, no-wrap, priority:90
msgid "--export-pack-edges=<file>"
msgstr "--export-pack-edges=<arquivo>"

#. type: Plain text
#: en/git-fast-import.txt:170
#, priority:90
msgid "After creating a packfile, print a line of data to <file> listing the filename of the packfile and the last commit on each branch that was written to that packfile.  This information may be useful after importing projects whose total object set exceeds the 4 GiB packfile limit, as these commits can be used as edge points during calls to 'git pack-objects'."
msgstr "Depois de criar um pacote de arquivo, imprima uma linha de dados em `<arquivo>`, listando o nome do arquivo e o último commit em cada ramo que foi gravado neste pacote.  Estas informações podem ser úteis após a importação de projetos cujo conjunto total de objetos exceda o limite de 4 GiB, pois estes commits podem ser utilizados como pontos de extremidade durante as chamadas para o 'git pack-objects'."

#. type: Labeled list
#: en/git-fast-import.txt:171 en/git-pack-objects.txt:154 en/git-repack.txt:130
#, no-wrap, priority:100
msgid "--max-pack-size=<n>"
msgstr "--max-pack-size=<n>"

#. type: Plain text
#: en/git-fast-import.txt:174
#, priority:90
msgid "Maximum size of each output packfile.  The default is unlimited."
msgstr "Tamanho máximo de cada pacote de arquivo.  A predefinição é sem limites."

#. type: Labeled list
#: en/git-fast-import.txt:175
#, ignore-same, no-wrap, priority:90
msgid "fastimport.unpackLimit"
msgstr "fastimport.unpackLimit"

#. type: Plain text
#: en/git-fast-import.txt:177
#, priority:90
msgid "See linkgit:git-config[1]"
msgstr "Consulte linkgit:git-config[1]"

#. type: Title -
#: en/git-fast-import.txt:179 en/git-filter-branch.txt:463 en/git-p4.txt:548
#, no-wrap, priority:90
msgid "PERFORMANCE"
msgstr "DESEMPENHO"

#. type: Plain text
#: en/git-fast-import.txt:186
#, priority:90
msgid "The design of fast-import allows it to import large projects in a minimum amount of memory usage and processing time.  Assuming the frontend is able to keep up with fast-import and feed it a constant stream of data, import times for projects holding 10+ years of history and containing 100,000+ individual commits are generally completed in just 1-2 hours on quite modest (~$2,000 USD) hardware."
msgstr "O design do `fast-import` permite a importação de grandes projetos com uma quantidade mínima do consumo da memória e do tempo de processamento.  Supondo que o front-end seja capaz de acompanhar e alimentar o `fast-import` com um fluxo constante de dados, os tempos de importação para os projetos com mais de 10+ anos de história e com mais de 100.000+ commits individuais geralmente são concluídos entre uma a duas horas com um hardware modesto (~$2.000 USD)."

#. type: Plain text
#: en/git-fast-import.txt:192
#, priority:90
msgid "Most bottlenecks appear to be in foreign source data access (the source just cannot extract revisions fast enough) or disk IO (fast-import writes as fast as the disk will take the data).  Imports will run faster if the source data is stored on a different drive than the destination Git repository (due to less IO contention)."
msgstr "A maioria dos gargalos parece estar no acesso a dados de origem estrangeira (a fonte simplesmente não pode extrair as revisões com a rapidez suficiente) ou no E/S do disco (o `fast-import` grava tão rápido quanto o disco aceitar).  As importações serão executadas o mais rapidamente caso os dados de origem sejam armazenados numa unidade diferente do repositório de destino Git (devido a menor contenção de E/S)."

#. type: Title -
#: en/git-fast-import.txt:195
#, no-wrap, priority:90
msgid "DEVELOPMENT COST"
msgstr "CUSTO DE DESENVOLVIMENTO"

#. type: Plain text
#: en/git-fast-import.txt:202
#, priority:90
msgid "A typical frontend for fast-import tends to weigh in at approximately 200 lines of Perl/Python/Ruby code.  Most developers have been able to create working importers in just a couple of hours, even though it is their first exposure to fast-import, and sometimes even to Git.  This is an ideal situation, given that most conversion tools are throw-away (use once, and never look back)."
msgstr "Um front-end típico para `fast-import` tende a pesar aproximadamente 200 linhas de código Perl/Python/Ruby.  A maioria dos desenvolvedores conseguiu criar importadores ativos em apenas algumas horas, mesmo que seja a sua primeira exposição ao `fast-import` e às vezes, até ao Git.  Esta é uma situação ideal, já que a maioria das ferramentas de conversão é descartável (utilize uma vez e nunca mais se preocupe)."

#. type: Title -
#: en/git-fast-import.txt:205
#, no-wrap, priority:90
msgid "PARALLEL OPERATION"
msgstr "OPERAÇÃO EM PARALELO"

#. type: Plain text
#: en/git-fast-import.txt:210
#, priority:90
msgid "Like 'git push' or 'git fetch', imports handled by fast-import are safe to run alongside parallel `git repack -a -d` or `git gc` invocations, or any other Git operation (including 'git prune', as loose objects are never used by fast-import)."
msgstr "Como `git push` ou `git fetch`, as importações manipuladas pelo `fast-import` são seguras para serem executadas juntamente com as invocações paralelas `git repack -a -d` ou `git gc` ou qualquer outra operação Git (incluindo `git prune`, objetos soltos nunca são utilizados por `fast-import`)."

#. type: Plain text
#: en/git-fast-import.txt:219
#, priority:90
msgid "fast-import does not lock the branch or tag refs it is actively importing.  After the import, during its ref update phase, fast-import tests each existing branch ref to verify the update will be a fast-forward update (the commit stored in the ref is contained in the new history of the commit to be written).  If the update is not a fast-forward update, fast-import will skip updating that ref and instead prints a warning message.  fast-import will always attempt to update all branch refs, and does not stop on the first failure."
msgstr "O `fast-import` não bloqueia a ramificação ou \"tag refs\" que está sendo importando ativamente.  Após a importação, durante a sua fase de atualização do \"ref\", o `fast-import` testa cada \"ref\" em cada ramo existente para verificar se a atualização será uma atualização de avanço rápido (o commit armazenado no \"ref\" está contida no novo histórico do commit a ser gravado).  Se a atualização não for uma atualização rápida, a importação rápida pulará a atualização \"ref\" e em vez disso, imprimirá uma mensagem de aviso.  A importação rápida sempre tentará atualizar todas as ramificações refs e não para na primeira falha."

#. type: Plain text
#: en/git-fast-import.txt:223
#, priority:90
msgid "Branch updates can be forced with --force, but it's recommended that this only be used on an otherwise quiet repository.  Using --force is not necessary for an initial import into an empty repository."
msgstr "As atualizações das ramificações podem ser impostas com a opção `--force`, mas é recomendável que isso seja utilizado apenas num repositório silencioso.  O uso da opção `--force` não é necessário para uma importação inicial para um repositório vazio."

#. type: Title -
#: en/git-fast-import.txt:226
#, no-wrap, priority:90
msgid "TECHNICAL DISCUSSION"
msgstr "DISCUSSÃO TÉCNICA"

#. type: Plain text
#: en/git-fast-import.txt:233
#, priority:90
msgid "fast-import tracks a set of branches in memory.  Any branch can be created or modified at any point during the import process by sending a `commit` command on the input stream.  This design allows a frontend program to process an unlimited number of branches simultaneously, generating commits in the order they are available from the source data.  It also simplifies the frontend programs considerably."
msgstr "O `fast-import` monitora um conjunto de ramificações na memória.  Durante o processo de importação, qualquer ramo pode ser criado ou modificado a qualquer momento, enviando um comando `commit` no fluxo de entrada.  Este design permite que um programa front-end processe uma quantidade ilimitada de ramificações simultâneas, gerando commits na ordem em que estão disponíveis a partir dos dados da origem.  Isso também simplifica consideravelmente os programas de interface."

#. type: Plain text
#: en/git-fast-import.txt:242
#, priority:90
msgid "fast-import does not use or alter the current working directory, or any file within it.  (It does however update the current Git repository, as referenced by `GIT_DIR`.)  Therefore an import frontend may use the working directory for its own purposes, such as extracting file revisions from the foreign source.  This ignorance of the working directory also allows fast-import to run very quickly, as it does not need to perform any costly file update operations when switching between branches."
msgstr "O `fast-import` não usa ou altera o diretório de trabalho atual ou qualquer outro arquivo dentro dele.  (No entanto, atualiza o repositório Git atual, conforme referenciado por `GIT_DIR`.) Portanto, um front-end de importação pode usar o diretório de trabalho para os seus próprios propósitos, como extrair as revisões dos arquivos das fontes estrangeiras.  Essa ignorância do diretório de trabalho também permite que o `fast-import` seja executado muito rapidamente, pois não é necessário executar nenhuma operação dispendiosa de atualização de arquivo ao alternar entre as ramificações."

#. type: Title -
#: en/git-fast-import.txt:244
#, no-wrap, priority:90
msgid "INPUT FORMAT"
msgstr "FORMATO DE ENTRADA"

#. type: Plain text
#: en/git-fast-import.txt:250
#, priority:90
msgid "With the exception of raw file data (which Git does not interpret)  the fast-import input format is text (ASCII) based.  This text based format simplifies development and debugging of frontend programs, especially when a higher level language such as Perl, Python or Ruby is being used."
msgstr "Com exceção dos dados brutos do arquivo (que o Git não interpreta), o formato de entrada do `fast-import` é baseado em texto (ASCII).  Esse formato baseado em texto simplifica o desenvolvimento e a depuração dos programas front-end, especialmente quando uma linguagem de nível superior, como o Perl, Python ou Ruby, está sendo utilizado."

#. type: Plain text
#: en/git-fast-import.txt:258
#, priority:90
msgid "fast-import is very strict about its input.  Where we say SP below we mean *exactly* one space.  Likewise LF means one (and only one) linefeed and HT one (and only one) horizontal tab.  Supplying additional whitespace characters will cause unexpected results, such as branch names or file names with leading or trailing spaces in their name, or early termination of fast-import when it encounters unexpected input."
msgstr "O `fast-import` é muito rigoroso quanto à sua entrada.  Quando dissermos SP, queremos dizer *exatamente* um espaço.  Da mesma forma, `LF` significa uma alimentação de linha (apenas uma) e `HT` uma guia horizontal (apenas uma).  O fornecimento de caracteres de espaço adicionais causará resultados inesperados, como os nomes dos ramos ou nomes dos arquivos com espaços à esquerda ou à direita em seu nome, ou o encerramento antecipado do `fast-import` quando encontrar uma entrada inesperada."

#. type: Title ~
#: en/git-fast-import.txt:260
#, no-wrap, priority:90
msgid "Stream Comments"
msgstr "Comentários do fluxo"

#. type: Plain text
#: en/git-fast-import.txt:267
#, priority:90
msgid "To aid in debugging frontends fast-import ignores any line that begins with `#` (ASCII pound/hash) up to and including the line ending `LF`.  A comment line may contain any sequence of bytes that does not contain an LF and therefore may be used to include any detailed debugging information that might be specific to the frontend and useful when inspecting a fast-import data stream."
msgstr "Para ajudar na depuração de front-ends, o `fast-import` ignora qualquer linha que comece com `#` (ASCII libra/hash) até, e incluindo, a linha que termina com `LF`.  Uma linha de comentário pode conter qualquer sequência de bytes que não contenha um `LF` e, portanto, pode ser utilizado para incluir qualquer informação detalhada de depuração que possa ser específica do front-end e útil ao inspecionar um fluxo de dados do `fast-import`."

#. type: Title ~
#: en/git-fast-import.txt:269
#, no-wrap, priority:90
msgid "Date Formats"
msgstr "Formatos de data"

#. type: Plain text
#: en/git-fast-import.txt:273
#, priority:90
msgid "The following date formats are supported.  A frontend should select the format it will use for this import by passing the format name in the --date-format=<fmt> command-line option."
msgstr "Os seguintes formatos são compatíveis.  Um front-end deve selecionar o formato que será utilizado para essa importação, passando o nome do formato na opção da linha de comando `--date-format=<fmt>`."

#. type: Labeled list
#: en/git-fast-import.txt:274
#, ignore-same, no-wrap, priority:90
msgid "`raw`"
msgstr "`raw`"

#. type: Plain text
#: en/git-fast-import.txt:278
#, priority:90
msgid "This is the Git native format and is `<time> SP <offutc>`.  It is also fast-import's default format, if --date-format was not specified."
msgstr "Este é o formato nativo do Git que é `<tempo> SP <offutc>`.  Também é o formato predefinido do `fast-import`, caso `--date-format` não seja utilizado."

#. type: Plain text
#: en/git-fast-import.txt:282
#, priority:90
msgid "The time of the event is specified by `<time>` as the number of seconds since the UNIX epoch (midnight, Jan 1, 1970, UTC) and is written as an ASCII decimal integer."
msgstr "A hora do evento é especificado através de `<tempo>` como o número de segundos desde a época UNIX (meia-noite de 1º de janeiro de 1970, UTC) e é gravado como um número inteiro decimal ASCII."

#. type: Plain text
#: en/git-fast-import.txt:288
#, priority:90
msgid "The local offset is specified by `<offutc>` as a positive or negative offset from UTC.  For example EST (which is 5 hours behind UTC)  would be expressed in `<tz>` by ``-0500'' while UTC is ``+0000''.  The local offset does not affect `<time>`; it is used only as an advisement to help formatting routines display the timestamp."
msgstr "A compensação local é determinado através de `<offutc>` como uma compensação positiva ou negativa do UTC.  Por exemplo, EST (que fica há 5 horas atrás do UTC) seria expresso em `<tz>` por ``-0500'' enquanto o UTC é ``+0000''.  A compensação local não afeta o `<tempo>`; é utilizado apenas como um aviso para ajudar as rotinas de formatação a exibir o registro de data e hora."

#. type: Plain text
#: en/git-fast-import.txt:294
#, priority:90
msgid "If the local offset is not available in the source material, use ``+0000'', or the most common local offset.  For example many organizations have a CVS repository which has only ever been accessed by users who are located in the same location and time zone.  In this case a reasonable offset from UTC could be assumed."
msgstr "Caso uma compensação local não esteja disponível no material de origem, utilize ``+0000'' ou a compensação local mais comum.  Por exemplo, muitas organizações têm um repositório CVS que só foi acessado por usuários localizados no mesmo local e fuso horário.  Nesse caso, uma compensação razoável do UTC pode ser assumida."

#. type: Plain text
#: en/git-fast-import.txt:298
#, priority:90
msgid "Unlike the `rfc2822` format, this format is very strict.  Any variation in formatting will cause fast-import to reject the value, and some sanity checks on the numeric values may also be performed."
msgstr "Diferente do formato `rfc2822`, que é muito rigoroso.  Qualquer variação na formatação fará com que o fast-import rejeite o valor e algumas verificações de sanidade com valores numéricos também possam ser executadas."

#. type: Labeled list
#: en/git-fast-import.txt:299
#, ignore-same, no-wrap, priority:90
msgid "`raw-permissive`"
msgstr "`raw-permissive`"

#. type: Plain text
#: en/git-fast-import.txt:304
#, priority:90
msgid "This is the same as `raw` except that no sanity checks on the numeric epoch and local offset are performed.  This can be useful when trying to filter or import an existing history with e.g. bogus timezone values."
msgstr "Isto é o mesmo que `raw`, exceto que as verificações de sanidade não são realizadas na época numérica e no desvio do fuso horário local.  Isto pode ser útil ao tentar filtrar ou importar um histórico já existente com por exemplo, valores falsos do fuso horário."

#. type: Labeled list
#: en/git-fast-import.txt:305
#, no-wrap, priority:90
msgid "`rfc2822`"
msgstr "`rfc2822`"

#. type: Plain text
#: en/git-fast-import.txt:307
#, priority:90
msgid "This is the standard email format as described by RFC 2822."
msgstr "Este é o formato de email padrão, conforme está descrito pela RFC 2822."

#. type: Plain text
#: en/git-fast-import.txt:312
#, priority:90
msgid "An example value is ``Tue Feb 6 11:22:18 2007 -0500''.  The Git parser is accurate, but a little on the lenient side.  It is the same parser used by 'git am' when applying patches received from email."
msgstr "Um valor de exemplo é ``Ter 6 de fevereiro 11:22:18 2007 -0500''.  O analisador do Git é preciso, porém um pouco tolerante.  É o mesmo analisador utilizado pelo 'git am' ao aplicar os patches recebidos de email."

#. type: Plain text
#: en/git-fast-import.txt:318
#, priority:90
msgid "Some malformed strings may be accepted as valid dates.  In some of these cases Git will still be able to obtain the correct date from the malformed string.  There are also some types of malformed strings which Git will parse wrong, and yet consider valid.  Seriously malformed strings will be rejected."
msgstr "Algumas cadeias de caracteres (strings) malformadas podem ser aceitas como datas válidas.  Em alguns desses casos, o Git ainda poderá obter a data correta da cadeia de caracteres.  Também existem alguns tipos de cadeia de caracteres malformados que o Git analisará incorretamente e, no entanto, ainda assim o considerará válido.  As sequências que estiverem seriamente malformadas serão rejeitadas."

#. type: Plain text
#: en/git-fast-import.txt:323
#, priority:90
msgid "Unlike the `raw` format above, the time zone/UTC offset information contained in an RFC 2822 date string is used to adjust the date value to UTC prior to storage.  Therefore it is important that this information be as accurate as possible."
msgstr "Diferentemente do formato `bruto` acima, as informações de compensação do fuso horário/UTC contidas numa sequência de datas RFC 2822, são utilizadas para ajustar o valor da data para UTC antes do armazenamento.  Portanto, é importante que essas informações sejam as mais precisas possíveis."

#. type: Plain text
#: en/git-fast-import.txt:328
#, priority:90
msgid "If the source material uses RFC 2822 style dates, the frontend should let fast-import handle the parsing and conversion (rather than attempting to do it itself) as the Git parser has been well tested in the wild."
msgstr "Caso o material de origem utilize datas no formato RFC 2822, o front-end deve permitir que o `fast-import` manipule a análise a conversão (em vez de tentar fazer isso sozinho), pois o analisador do Git foi bem testado num ambiente natural."

#. type: Plain text
#: en/git-fast-import.txt:333
#, priority:90
msgid "Frontends should prefer the `raw` format if the source material already uses UNIX-epoch format, can be coaxed to give dates in that format, or its format is easily convertible to it, as there is no ambiguity in parsing."
msgstr "Os front-end devem preferir o formato `raw` (bruto) caso o material de origem já utilize o formato UNIX, pode ser atrativo fornecer datas nesse formato, ou o seu formato é facilmente convertível, pois não há ambiguidade na análise."

#. type: Labeled list
#: en/git-fast-import.txt:334
#, ignore-same, no-wrap, priority:90
msgid "`now`"
msgstr "`now`"

#. type: Plain text
#: en/git-fast-import.txt:337
#, priority:90
msgid "Always use the current time and time zone.  The literal `now` must always be supplied for `<when>`."
msgstr "Sempre utilize a hora e o fuso horário atual.  O literal `now` sempre deve ser informado em `<quando>`."

#. type: Plain text
#: en/git-fast-import.txt:342
#, priority:90
msgid "This is a toy format.  The current time and time zone of this system is always copied into the identity string at the time it is being created by fast-import.  There is no way to specify a different time or time zone."
msgstr "Este é um formato de brinquedo.  A hora e o fuso horário atual deste sistema são sempre copiados para a cadeia de identidade no momento em que são criados pelo `fast-import`.  Não há como especificar um horário ou fuso horário diferente."

#. type: Plain text
#: en/git-fast-import.txt:347
#, priority:90
msgid "This particular format is supplied as it's short to implement and may be useful to a process that wants to create a new commit right now, without needing to use a working directory or 'git update-index'."
msgstr "Esse formato em particular é informado para implementação curta e pode ser útil para um processo onde se deseja criar um novo commit imediatamente, sem a necessidade de usar um diretório ativo ou `git update-index`."

#. type: Plain text
#: en/git-fast-import.txt:354
#, priority:90
msgid "If separate `author` and `committer` commands are used in a `commit` the timestamps may not match, as the system clock will be polled twice (once for each command).  The only way to ensure that both author and committer identity information has the same timestamp is to omit `author` (thus copying from `committer`) or to use a date format other than `now`."
msgstr "Caso o `autor` e o `committer` sejam utilizados de forma separadas num `commit`, os registro de data e hora podem não coincidir, pois o relógio do sistema será pesquisado duas vezes (uma vez para cada comando).  A única maneira de garantir que as informações de identidade do autor e de quem fez o commit tenham o mesmo registro de data e hora é omitir o `autor` (copiando assim do `committer`) ou usar um formato de data diferente de `now`."

#. type: Title ~
#: en/git-fast-import.txt:356
#, no-wrap, priority:90
msgid "Commands"
msgstr "Comandos"

#. type: Plain text
#: en/git-fast-import.txt:360
#, priority:90
msgid "fast-import accepts several commands to update the current repository and control the current import process.  More detailed discussion (with examples) of each command follows later."
msgstr "O fast-import aceita vários comandos para atualizar o repositório atual e controlar o processo de importação.  Discussões mais detalhadas (com exemplos) de cada comando virão depois."

#. type: Title ~
#: en/git-fast-import.txt:361 en/git-fast-import.txt:430
#, ignore-same, no-wrap, priority:90
msgid "`commit`"
msgstr "`commit`"

#. type: Plain text
#: en/git-fast-import.txt:365
#, priority:90
msgid "Creates a new branch or updates an existing branch by creating a new commit and updating the branch to point at the newly created commit."
msgstr "Cria uma nova ramificação ou atualiza uma ramificação existente, criando um novo commit e atualizando a ramificação para apontar para o commit recém criado."

#. type: Title ~
#: en/git-fast-import.txt:366 en/git-fast-import.txt:820
#, ignore-same, no-wrap, priority:90
msgid "`tag`"
msgstr "`tag`"

#. type: Plain text
#: en/git-fast-import.txt:371
#, priority:90
msgid "Creates an annotated tag object from an existing commit or branch.  Lightweight tags are not supported by this command, as they are not recommended for recording meaningful points in time."
msgstr "Cria um objeto \"tag\" anotado a partir de um commit ou ramificação existente.  As tags `lightweight` (ou leves) não são compatíveis com este comando, pois não são recomendadas para registrar os pontos importantes de tempo."

#. type: Title ~
#: en/git-fast-import.txt:372 en/git-fast-import.txt:865
#, ignore-same, no-wrap, priority:90
msgid "`reset`"
msgstr "`reset`"

#. type: Plain text
#: en/git-fast-import.txt:376
#, priority:90
msgid "Reset an existing branch (or a new branch) to a specific revision.  This command must be used to change a branch to a specific revision without making a commit on it."
msgstr "Redefina uma ramificação existente (ou uma nova ramificação) para determinada revisão.  Este comando deve ser utilizado para alterar uma ramificação para uma revisão específica sem fazer um commit nela."

#. type: Title ~
#: en/git-fast-import.txt:377 en/git-fast-import.txt:894
#, ignore-same, no-wrap, priority:90
msgid "`blob`"
msgstr "`blob`"

#. type: Plain text
#: en/git-fast-import.txt:381
#, priority:90
msgid "Convert raw file data into a blob, for future use in a `commit` command.  This command is optional and is not needed to perform an import."
msgstr "Converta os dados brutos do arquivo numa bolha, para uso futuro num comando `commit`.  Este comando é opcional, não sendo necessário para executar uma importação."

#. type: Title ~
#: en/git-fast-import.txt:382 en/git-fast-import.txt:967
#, ignore-same, no-wrap, priority:90
msgid "`alias`"
msgstr "`alias`"

#. type: Plain text
#: en/git-fast-import.txt:388
#, priority:90
msgid "Record that a mark refers to a given object without first creating any new object.  Using --import-marks and referring to missing marks will cause fast-import to fail, so aliases can provide a way to set otherwise pruned commits to a valid value (e.g. the nearest non-pruned ancestor)."
msgstr "Registre que uma marca se refere a um determinado objeto sem antes criar qualquer objeto novo.  O uso de --import-marks e referindo-se a marcas ausentes fará com que a importação rápida falhe de modo que os pseudônimos possam fornecer uma maneira de definir os compromissos podados de outra forma a um valor válido (por exemplo, o ancestral não podado mais próximo)."

#. type: Title ~
#: en/git-fast-import.txt:389 en/git-fast-import.txt:982
#, ignore-same, no-wrap, priority:90
msgid "`checkpoint`"
msgstr "`checkpoint`"

#. type: Plain text
#: en/git-fast-import.txt:394
#, priority:90
msgid "Forces fast-import to close the current packfile, generate its unique SHA-1 checksum and index, and start a new packfile.  This command is optional and is not needed to perform an import."
msgstr "Impõem o uso de `fast-import` para fechar o arquivo de pacotes atual, gerar seu \"checksum\", seu índice SHA-1 e iniciar um novo pacote de arquivo.  Este comando é opcional, não sendo necessário para executar uma importação."

#. type: Title ~
#: en/git-fast-import.txt:395 en/git-fast-import.txt:1010
#, ignore-same, no-wrap, priority:90
msgid "`progress`"
msgstr "`progress`"

#. type: Plain text
#: en/git-fast-import.txt:399
#, priority:90
msgid "Causes fast-import to echo the entire line to its own standard output.  This command is optional and is not needed to perform an import."
msgstr "Faz com que o `fast-import` faça um eco da linha inteira para sua própria saída padrão.  Este comando é opcional, não sendo necessário para executar uma importação."

#. type: Title ~
#: en/git-fast-import.txt:400 en/git-fast-import.txt:1217
#, ignore-same, no-wrap, priority:90
msgid "`done`"
msgstr "`done`"

#. type: Plain text
#: en/git-fast-import.txt:404
#, priority:90
msgid "Marks the end of the stream. This command is optional unless the `done` feature was requested using the `--done` command-line option or `feature done` command."
msgstr "Faz a marcação do fim do fluxo. Este comando é opcional, a menos que o recurso `done` tenha sido solicitado utilizando a opção de linha de comando` --done` ou o comando `feature done`."

#. type: Title ~
#: en/git-fast-import.txt:405 en/git-fast-import.txt:1035
#, ignore-same, no-wrap, priority:90
msgid "`get-mark`"
msgstr "`get-mark`"

#. type: Plain text
#: en/git-fast-import.txt:409
#, priority:90
msgid "Causes fast-import to print the SHA-1 corresponding to a mark to the file descriptor set with `--cat-blob-fd`, or `stdout` if unspecified."
msgstr "Faz com que o `fast-import` imprima o SHA-1 correspondente a uma marcação no descritor do arquivo definido com `--cat-blob-fd` ou `stdout` caso não tenha sido especificado."

#. type: Title ~
#: en/git-fast-import.txt:410 en/git-fast-import.txt:1050
#, ignore-same, no-wrap, priority:90
msgid "`cat-blob`"
msgstr "`cat-blob`"

#. type: Plain text
#: en/git-fast-import.txt:414
#, priority:90
msgid "Causes fast-import to print a blob in 'cat-file --batch' format to the file descriptor set with `--cat-blob-fd` or `stdout` if unspecified."
msgstr "Faz com que o `fast-import` imprima uma bolha no formato 'cat-file --batch' no descritor do arquivo definido com `--cat-blob-fd` ou `stdout` caso não tenha sido especificado."

#. type: Title ~
#: en/git-fast-import.txt:415 en/git-fast-import.txt:1081
#, ignore-same, no-wrap, priority:90
msgid "`ls`"
msgstr "`ls`"

#. type: Plain text
#: en/git-fast-import.txt:419
#, priority:90
msgid "Causes fast-import to print a line describing a directory entry in 'ls-tree' format to the file descriptor set with `--cat-blob-fd` or `stdout` if unspecified."
msgstr "Faz com que o `fast-import` imprima uma linha que descreve uma entrada do diretório no formato `ls-tree` para o descritor do arquivo definido com `--cat-blob-fd` ou `stdout` caso não tenha sido especificado."

#. type: Title ~
#: en/git-fast-import.txt:420 en/git-fast-import.txt:1134
#, ignore-same, no-wrap, priority:90
msgid "`feature`"
msgstr "`feature`"

#. type: Plain text
#: en/git-fast-import.txt:423
#, priority:90
msgid "Enable the specified feature. This requires that fast-import supports the specified feature, and aborts if it does not."
msgstr "Ativa o recurso especificado. Isso requer que o `fast-import` ofereça compatibilidade ao recurso especificado, caso contrário, que seja abortado."

#. type: Title ~
#: en/git-fast-import.txt:424 en/git-fast-import.txt:1189
#, ignore-same, no-wrap, priority:90
msgid "`option`"
msgstr "`option`"

#. type: Plain text
#: en/git-fast-import.txt:428
#, priority:90
msgid "Specify any of the options listed under OPTIONS that do not change stream semantic to suit the frontend's needs. This command is optional and is not needed to perform an import."
msgstr "Especifique qualquer uma das opções listadas em `OPTIONS` que não alterem a semântica do fluxo para atender às necessidades do front-end. Este comando é opcional, não sendo necessário para executar uma importação."

#. type: Plain text
#: en/git-fast-import.txt:433
#, priority:90
msgid "Create or update a branch with a new commit, recording one logical change to the project."
msgstr "Crie ou atualize uma ramificação com um novo commit, registrando uma alteração lógica no projeto."

#. type: delimited block .
#: en/git-fast-import.txt:446
#, no-wrap, priority:90
msgid ""
"\t'commit' SP <ref> LF\n"
"\tmark?\n"
"\toriginal-oid?\n"
"\t('author' (SP <name>)? SP LT <email> GT SP <when> LF)?\n"
"\t'committer' (SP <name>)? SP LT <email> GT SP <when> LF\n"
"\t('encoding' SP <encoding>)?\n"
"\tdata\n"
"\t('from' SP <commit-ish> LF)?\n"
"\t('merge' SP <commit-ish> LF)*\n"
"\t(filemodify | filedelete | filecopy | filerename | filedeleteall | notemodify)*\n"
"\tLF?\n"
msgstr ""
"\t'commit' SP <ref> LF\n"
"\tmark?\n"
"\toriginal-oid?\n"
"\t('author' (SP <nome>)? SP LT <e-mail> GT SP <quando> LF)?\n"
"\t'committer' (SP <nome>)? SP LT <e-mail> GT SP <quando> LF\n"
"\t('encoding' SP <codificação>)?\n"
"\tdata\n"
"\t('from' SP <commit-ish> LF)?\n"
"\t('merge' SP <commit-ish> LF)*\n"
"\t(filemodify | filedelete | filecopy | filerename | filedeleteall | notemodify)*\n"
"\tLF?\n"

#. type: Plain text
#: en/git-fast-import.txt:454
#, priority:90
msgid "where `<ref>` is the name of the branch to make the commit on.  Typically branch names are prefixed with `refs/heads/` in Git, so importing the CVS branch symbol `RELENG-1_0` would use `refs/heads/RELENG-1_0` for the value of `<ref>`.  The value of `<ref>` must be a valid refname in Git.  As `LF` is not valid in a Git refname, no quoting or escaping syntax is supported here."
msgstr "onde `<ref>` é o nome do ramo no qual o commit deve ser feito.  Normalmente, os nomes dos ramos são prefixados com `refs/heads/` no Git, portanto, a importação do símbolo do ramo CVS `RELENG-1_0` utilizaria `refs/heads/RELENG-1_0` como o valor de `<ref>`.  O valor de `<ref>` deve ser um \"refname\" válido no Git.  Como `LF` não é válido num \"refname\" do Git, nenhuma sintaxe de aspas ou de escape é compatível aqui."

#. type: Plain text
#: en/git-fast-import.txt:460
#, priority:90
msgid "A `mark` command may optionally appear, requesting fast-import to save a reference to the newly created commit for future use by the frontend (see below for format).  It is very common for frontends to mark every commit they create, thereby allowing future branch creation from any imported commit."
msgstr "Um comando de marcação `mark` pode aparecer opcionalmente, solicitando ao `fast-import` para salvar uma referência ao commit recém-criado para uso futuro através do front-end (veja abaixo).  É muito comum que os front-ends marquem cada commit criado, permitindo assim a criação futura de ramificações a partir de qualquer commit importado."

#. type: Plain text
#: en/git-fast-import.txt:466
#, priority:90
msgid "The `data` command following `committer` must supply the commit message (see below for `data` command syntax).  To import an empty commit message use a 0 length data.  Commit messages are free-form and are not interpreted by Git.  Currently they must be encoded in UTF-8, as fast-import does not permit other encodings to be specified."
msgstr "O comando `data` após o `committer` deve suprir a mensagem do commit (veja abaixo a sintaxe do comando `data`).  Para importar uma mensagem vazia de commit, utilize os dados com 0 de comprimento.  As mensagens do commit são de livre formato e não são interpretadas pelo Git.  Atualmente, elas devem ser codificadas em UTF-8, pois o `fast-import` não permite que outras codificações sejam utilizadas."

#. type: Plain text
#: en/git-fast-import.txt:474
#, priority:90
msgid "Zero or more `filemodify`, `filedelete`, `filecopy`, `filerename`, `filedeleteall` and `notemodify` commands may be included to update the contents of the branch prior to creating the commit.  These commands may be supplied in any order.  However it is recommended that a `filedeleteall` command precede all `filemodify`, `filecopy`, `filerename` and `notemodify` commands in the same commit, as `filedeleteall` wipes the branch clean (see below)."
msgstr "Zero ou mais comandos como `filemodify`, `filedelete`, `filecopy`, `filerename`, `filedeleteall` e `notemodify` podem ser incluídos para atualizar o conteúdo do ramo antes de criar o commit.  Estes comandos podem ser utilizados em qualquer ordem.  No entanto, é recomendado que um comando `filedeleteall` preceda todos os comandos `filemodify`, `filecopy`, `filerename` e `notemodify` no mesmo commit, já que `filedeleteall` limpa a ramificação (veja abaixo)."

#. type: Plain text
#: en/git-fast-import.txt:481
#, priority:90
msgid "The `LF` after the command is optional (it used to be required).  Note that for reasons of backward compatibility, if the commit ends with a `data` command (i.e. it has no `from`, `merge`, `filemodify`, `filedelete`, `filecopy`, `filerename`, `filedeleteall` or `notemodify` commands) then two `LF` commands may appear at the end of the command instead of just one."
msgstr "O 'LF' após o comando é opcional (costumava ser obrigatório).  Observe que por razões de retrocompatibilidade, caso o commit termine com um comando `data` (ou seja, não tiver nenhum comando `from`, `merge`, `filemodify`, `filedelete`, `filecopy`, `filerename`, `filedeleteall` ou `notemodify`) então dois comandos 'LF' podem aparecer no final do comando em vez de apenas um."

#. type: Title ^
#: en/git-fast-import.txt:483
#, ignore-same, no-wrap, priority:90
msgid "`author`"
msgstr "`author`"

#. type: Plain text
#: en/git-fast-import.txt:489
#, priority:90
msgid "An `author` command may optionally appear, if the author information might differ from the committer information.  If `author` is omitted then fast-import will automatically use the committer's information for the author portion of the commit.  See below for a description of the fields in `author`, as they are identical to `committer`."
msgstr "Um comando `autor` pode opcionalmente aparecer, caso as informações do autor puderem diferir das informações de quem fez o commit.  Caso o `autor` seja omitido, então o `fast-import` usará automaticamente as informações de quem fez o commit para a parte relaiva ao autor do commit.  Veja abaixo uma descrição dos campos em `autor`, pois são idênticos aos do `committer`."

#. type: Title ^
#: en/git-fast-import.txt:491
#, ignore-same, no-wrap, priority:90
msgid "`committer`"
msgstr "`committer`"

#. type: Plain text
#: en/git-fast-import.txt:494
#, priority:90
msgid "The `committer` command indicates who made this commit, and when they made it."
msgstr "O comando `committer` indica quem foi que fez o commit e quando foi feito."

#. type: Plain text
#: en/git-fast-import.txt:502
#, priority:90
msgid "Here `<name>` is the person's display name (for example ``Com M Itter'') and `<email>` is the person's email address (``\\cm@example.com'').  `LT` and `GT` are the literal less-than (\\x3c)  and greater-than (\\x3e) symbols.  These are required to delimit the email address from the other fields in the line.  Note that `<name>` and `<email>` are free-form and may contain any sequence of bytes, except `LT`, `GT` and `LF`.  `<name>` is typically UTF-8 encoded."
msgstr "Aqui `<nome>` é o nome de exibição da pessoa (``Com M Itter'' por exemplo) and `<e-mail>` é o endereço de e-mail da pessoa(``\\cm@example.com'').  `LT` e `GT` são os símbolos literais menores que (`\\x3c`) e maiores que (`\\x3e`).  Isso é necessário para delimitar o endereço de e-mail dos outros campos na linha.  Observe que `<nome>` e `<e-mail>` são de forma livre e podem conter qualquer sequência de bytes, exceto `LT`,` GT` e `LF`.  `<nome>` é codificada em UTF-8."

#. type: Plain text
#: en/git-fast-import.txt:507
#, priority:90
msgid "The time of the change is specified by `<when>` using the date format that was selected by the --date-format=<fmt> command-line option.  See ``Date Formats'' above for the set of supported formats, and their syntax."
msgstr "A hora da alteração é usada por `<quando>` utilizando o formato de data selecionado pela opção da linha de comando `--date-format=<fmt>`.  Consulte ``Formatos de data'' acima para obter o conjunto de formatos compatíveis e a sua sintaxe."

#. type: Title ^
#: en/git-fast-import.txt:509
#, ignore-same, no-wrap, priority:90
msgid "`encoding`"
msgstr "`encoding`"

#. type: Plain text
#: en/git-fast-import.txt:513
#, priority:90
msgid "The optional `encoding` command indicates the encoding of the commit message.  Most commits are UTF-8 and the encoding is omitted, but this allows importing commit messages into git without first reencoding them."
msgstr "O comando opcional `encoding` indica a codificação da mensagem do commit.  A maioria dos  commits são UTF-8 e a codificação é omitida, porém isso permite importar as mensagens dos commits para o git sem que primeiro seja necessário recodificá-las."

#. type: Title ^
#: en/git-fast-import.txt:515
#, ignore-same, no-wrap, priority:90
msgid "`from`"
msgstr "`from`"

#. type: Plain text
#: en/git-fast-import.txt:521
#, priority:90
msgid "The `from` command is used to specify the commit to initialize this branch from.  This revision will be the first ancestor of the new commit.  The state of the tree built at this commit will begin with the state at the `from` commit, and be altered by the content modifications in this commit."
msgstr "O comando `from` é utilizado para especificar o commit para inicializar esta ramificação.  Esta revisão será o primeiro ancestral do novo commit.  O estado da árvore construída neste commit começará com a condição no commit `from` e será alterado pelas alterações do conteúdo deste commit."

#. type: Plain text
#: en/git-fast-import.txt:531
#, priority:90
msgid "Omitting the `from` command in the first commit of a new branch will cause fast-import to create that commit with no ancestor. This tends to be desired only for the initial commit of a project.  If the frontend creates all files from scratch when making a new branch, a `merge` command may be used instead of `from` to start the commit with an empty tree.  Omitting the `from` command on existing branches is usually desired, as the current commit on that branch is automatically assumed to be the first ancestor of the new commit."
msgstr "Omitir o comando `from` no primeiro commit de uma nova ramificação fará com que o `fast-import` crie este commit sem antecessor. Isso tende a ser desejado apenas para o commit inicial de um projeto.  Caso o front-end crie todos os arquivos do zero ao criar uma nova ramificação, um comando `merge` poderá ser utilizado em vez de `from` para iniciar o commit com uma árvore vazia.  Omitir o comando `from` em ramificações existentes é geralmente desejado, pois o commit atual neste ramo é automaticamente assumido como o primeiro antecessor do novo commit."

#. type: Plain text
#: en/git-fast-import.txt:534
#, priority:90
msgid "As `LF` is not valid in a Git refname or SHA-1 expression, no quoting or escaping syntax is supported within `<commit-ish>`."
msgstr "Como `LF` não é válido numa referência de nome do Git ou numa expressão SHA-1, nenhuma sintaxe de citação ou escape é compatível com `<commit-ish>`."

#. type: Plain text
#: en/git-fast-import.txt:536
#, priority:90
msgid "Here `<commit-ish>` is any of the following:"
msgstr "Aqui `<commit-ish>` é qualquer um dos seguintes:"

#. type: Plain text
#: en/git-fast-import.txt:540
#, priority:90
msgid "The name of an existing branch already in fast-import's internal branch table.  If fast-import doesn't know the name, it's treated as a SHA-1 expression."
msgstr "O nome de uma ramificação existente já na tabela de ramificações internas do `fast-import`.  Caso o `fast-import` não saiba o nome, ele será tratado como uma expressão SHA-1."

#. type: Plain text
#: en/git-fast-import.txt:542
#, priority:90
msgid "A mark reference, `:<idnum>`, where `<idnum>` is the mark number."
msgstr "A marcação de referência, `:<idnum>`, onde `<idnum>` seja o número da marcação."

#. type: Plain text
#: en/git-fast-import.txt:548
#, priority:90
msgid "The reason fast-import uses `:` to denote a mark reference is this character is not legal in a Git branch name.  The leading `:` makes it easy to distinguish between the mark 42 (`:42`) and the branch 42 (`42` or `refs/heads/42`), or an abbreviated SHA-1 which happened to consist only of base-10 digits."
msgstr "O motivo do `fast-import` utilizar `:` para indicar uma marcação de referência, este caractere não é legal com um nome do ramo do Git.  O `:` principal facilita a distinção entre a marcação 42 (`:42`) e a ramificação 42 (`42` ou `refs/heads/42`), ou um SHA-1 abreviado que passou a consistir apenas em dígitos com base 10."

#. type: Plain text
#: en/git-fast-import.txt:550
#, priority:90
msgid "Marks must be declared (via `mark`) before they can be used."
msgstr "As marcações devem ser declaradas (através de `mark`) antes de poderem ser utilizadas."

#. type: Plain text
#: en/git-fast-import.txt:552
#, priority:90
msgid "A complete 40 byte or abbreviated commit SHA-1 in hex."
msgstr "Um commit completo com 40 bytes ou um SHA-1 abreviado em hexadecimal."

#. type: Plain text
#: en/git-fast-import.txt:555
#, priority:90
msgid "Any valid Git SHA-1 expression that resolves to a commit.  See ``SPECIFYING REVISIONS'' in linkgit:gitrevisions[7] for details."
msgstr "Qualquer expressão Git SHA-1 válido que resolva para um commit.  Consulte ``DEFININDO AS REVISÕES'' em linkgit:gitrevisions[7] para mais detalhes."

#. type: Plain text
#: en/git-fast-import.txt:558
#, priority:90
msgid "The special null SHA-1 (40 zeros) specifies that the branch is to be removed."
msgstr "O SHA-1 nulo especial (40 zeros) especifica que a ramificação deve ser removida."

#. type: Plain text
#: en/git-fast-import.txt:561
#, priority:90
msgid "The special case of restarting an incremental import from the current branch value should be written as:"
msgstr "O caso especial de reiniciar uma importação incremental do valor atual do ramo deve ser escrito como:"

#. type: delimited block -
#: en/git-fast-import.txt:563
#, no-wrap, priority:90
msgid "\tfrom refs/heads/branch^0\n"
msgstr "\tfrom refs/heads/branch^0\n"

#. type: Plain text
#: en/git-fast-import.txt:570
#, priority:90
msgid "The `^0` suffix is necessary as fast-import does not permit a branch to start from itself, and the branch is created in memory before the `from` command is even read from the input.  Adding `^0` will force fast-import to resolve the commit through Git's revision parsing library, rather than its internal branch table, thereby loading in the existing value of the branch."
msgstr "O sufixo `^0` é necessário, pois a importação rápida não permite que uma ramificação inicie por si mesma e a ramificação é criada na memória antes que o comando `from` seja lido pela entrada.  Adicionar o `^0` irá impor que o `fast-import` resolva o commit através da biblioteca de análise de revisão do Git, em vez de sua tabela de ramificação interna, carregando assim o valor existente do ramo."

#. type: Title ^
#: en/git-fast-import.txt:572
#, ignore-same, no-wrap, priority:90
msgid "`merge`"
msgstr "`merge`"

#. type: Plain text
#: en/git-fast-import.txt:580
#, priority:90
msgid "Includes one additional ancestor commit.  The additional ancestry link does not change the way the tree state is built at this commit.  If the `from` command is omitted when creating a new branch, the first `merge` commit will be the first ancestor of the current commit, and the branch will start out with no files.  An unlimited number of `merge` commands per commit are permitted by fast-import, thereby establishing an n-way merge."
msgstr "Inclui um commit ancestral adicional.  O link de ancestralidade adicional não altera a maneira como o estado da árvore é construído nesse commit.  Caso o comando `from` seja omitido durante a criação de uma nova ramificação, o primeiro commit` merge` será o primeiro ancestral do commit atual, e o ramo começará sem arquivos.  Um número ilimitado de comandos `merge` por commit é permitido pelo `fast-import`, estabelecendo assim uma mesclagem n-way."

#. type: Plain text
#: en/git-fast-import.txt:583
#, priority:90
msgid "Here `<commit-ish>` is any of the commit specification expressions also accepted by `from` (see above)."
msgstr "Aqui `<commit-ish>` é qualquer uma das expressões de especificação de um commit também aceitas por `from` (veja acima)."

#. type: Title ^
#: en/git-fast-import.txt:585
#, ignore-same, no-wrap, priority:90
msgid "`filemodify`"
msgstr "`filemodify`"

#. type: Plain text
#: en/git-fast-import.txt:589
#, priority:90
msgid "Included in a `commit` command to add a new file or change the content of an existing file.  This command has two different means of specifying the content of the file."
msgstr "Incluído no comando `commit` para adicionar um novo arquivo ou alterar o conteúdo de um arquivo existente.  Este comando possui dois meios diferentes de especificar o conteúdo do arquivo."

#. type: Labeled list
#: en/git-fast-import.txt:590 en/git-fast-import.txt:757
#, no-wrap, priority:90
msgid "External data format"
msgstr "Formato de dados externos"

#. type: Plain text
#: en/git-fast-import.txt:593
#, priority:90
msgid "The data content for the file was already supplied by a prior `blob` command.  The frontend just needs to connect it."
msgstr "O conteúdo dos dados para o arquivo já foi informado por um comando `blob` (bolha) anterior.  O front-end só precisa conectá-lo."

#. type: delimited block .
#: en/git-fast-import.txt:596
#, no-wrap, priority:90
msgid "\t'M' SP <mode> SP <dataref> SP <path> LF\n"
msgstr "\t'M' SP <modo> SP <dataref> SP <caminho> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:603
#, priority:90
msgid "Here usually `<dataref>` must be either a mark reference (`:<idnum>`)  set by a prior `blob` command, or a full 40-byte SHA-1 of an existing Git blob object.  If `<mode>` is `040000`` then `<dataref>` must be the full 40-byte SHA-1 of an existing Git tree object or a mark reference set with `--import-marks`."
msgstr "Aqui geralmente `<dataref>` deve ser uma marcação de referência (`:<idnum>`) definida por um comando `blob` ou um SHA-1 completo com 40 bytes de um objeto bolha já existente no Git.  Caso o `<modo>` seja `040000`` então `<dataref>` deve ser o SHA-1 completo com 40 bytes de um objeto existente na árvore Git ou uma marcação de referência definida com `--import-marks`."

#. type: Labeled list
#: en/git-fast-import.txt:604 en/git-fast-import.txt:770
#, no-wrap, priority:90
msgid "Inline data format"
msgstr "Formato de dados em linha"

#. type: Plain text
#: en/git-fast-import.txt:608
#, priority:90
msgid "The data content for the file has not been supplied yet.  The frontend wants to supply it as part of this modify command."
msgstr "O conteúdo dos dados para o arquivo ainda não foi informado.  O front-end deseja fornecê-lo como parte deste comando de modificação."

#. type: delimited block .
#: en/git-fast-import.txt:612
#, no-wrap, priority:90
msgid ""
"\t'M' SP <mode> SP 'inline' SP <path> LF\n"
"\tdata\n"
msgstr ""
"\t'M' SP <modo> SP 'inline' SP <caminho> LF\n"
"\tdado\n"

#. type: Plain text
#: en/git-fast-import.txt:615 en/git-fast-import.txt:781
#, priority:90
msgid "See below for a detailed description of the `data` command."
msgstr "Veja abaixo uma descrição detalhada do comando `data`."

#. type: Plain text
#: en/git-fast-import.txt:618
#, priority:90
msgid "In both formats `<mode>` is the type of file entry, specified in octal.  Git only supports the following modes:"
msgstr "Nos dois formatos o `<modo>` é o tipo de entrada do arquivo em formato octal.  O Git é compatível apenas com os seguintes modos:"

#. type: Plain text
#: en/git-fast-import.txt:622
#, priority:90
msgid "`100644` or `644`: A normal (not-executable) file.  The majority of files in most projects use this mode.  If in doubt, this is what you want."
msgstr "`100644` ou `644`: um arquivo normal (não executável).  A maioria dos arquivos na maioria dos projetos utiliza este modo.  Em caso de dúvida, é isso mesmo que deve ser utilizado."

#. type: Plain text
#: en/git-fast-import.txt:623
#, priority:90
msgid "`100755` or `755`: A normal, but executable, file."
msgstr "`100755` ou `755`: Um arquivo normal, porém executável."

#. type: Plain text
#: en/git-fast-import.txt:624
#, priority:90
msgid "`120000`: A symlink, the content of the file will be the link target."
msgstr "`120000`: um link simbólico, o conteúdo do arquivo será o destino do link."

#. type: Plain text
#: en/git-fast-import.txt:627
#, priority:90
msgid "`160000`: A gitlink, SHA-1 of the object refers to a commit in another repository. Git links can only be specified by SHA or through a commit mark. They are used to implement submodules."
msgstr "`160000`: Um gitlink SHA-1 do objeto referindo-se a um commit em outro repositório. Os links Git podem ser especificados apenas pelo SHA ou por meio de uma marcação do commit. Eles são utilizados para implementar os submódulos."

#. type: Plain text
#: en/git-fast-import.txt:629
#, priority:90
msgid "`040000`: A subdirectory.  Subdirectories can only be specified by SHA or through a tree mark set with `--import-marks`."
msgstr "`040000`: um subdiretório.  Os subdiretórios podem ser especificados apenas pelo SHA ou através de uma marcação de árvore definida com `--import-marks`."

#. type: Plain text
#: en/git-fast-import.txt:632
#, priority:90
msgid "In both formats `<path>` is the complete path of the file to be added (if not already existing) or modified (if already existing)."
msgstr "Nos dois formatos o `<caminho>` é o caminho completo do arquivo a ser adicionado (caso ainda não exista) ou modificado (caso já exista)."

#. type: Plain text
#: en/git-fast-import.txt:636
#, priority:90
msgid "A `<path>` string must use UNIX-style directory separators (forward slash `/`), may contain any byte other than `LF`, and must not start with double quote (`\"`)."
msgstr "Uma cadeia de caracteres `<caminho>` deve usar separadores de diretório no estilo UNIX (barra `/`), pode conter qualquer byte que não seja `LF` e não deve começar com aspas duplas (`\"`)."

#. type: Plain text
#: en/git-fast-import.txt:643
#, priority:90
msgid "A path can use C-style string quoting; this is accepted in all cases and mandatory if the filename starts with double quote or contains `LF`. In C-style quoting, the complete name should be surrounded with double quotes, and any `LF`, backslash, or double quote characters must be escaped by preceding them with a backslash (e.g., `\"path/with\\n, \\\\ and \\\" in it\"`)."
msgstr "Um caminho pode usar aspas no estilo C; é aceito em todos os casos e obrigatório caso o nome do arquivo comece com duas aspas ou tenha um `LF`. Na citação no estilo C, o nome completo deve estar entre duas aspas e qualquer caractere `LF`, barra invertida ou duas aspas deve ser escapado precedendo-os com uma barra invertida (`\"caminho/com\\n, \\\\ e \\\"nele\"` por exemplo)."

#. type: Plain text
#: en/git-fast-import.txt:645
#, priority:90
msgid "The value of `<path>` must be in canonical form. That is it must not:"
msgstr "O valor de `<caminho>` deve estar em forma canônica. Ou seja, não deve:"

#. type: Plain text
#: en/git-fast-import.txt:647
#, priority:90
msgid "contain an empty directory component (e.g. `foo//bar` is invalid),"
msgstr "contém um componente de diretório vazio (`foo//bar` é inválido por exemplo),"

#. type: Plain text
#: en/git-fast-import.txt:648
#, priority:90
msgid "end with a directory separator (e.g. `foo/` is invalid),"
msgstr "termina com um separador de diretório (`foo/` é inválido por exemplo),"

#. type: Plain text
#: en/git-fast-import.txt:649
#, priority:90
msgid "start with a directory separator (e.g. `/foo` is invalid),"
msgstr "comece com um separador de diretório (`/foo` é inválido por exemplo),"

#. type: Plain text
#: en/git-fast-import.txt:651
#, priority:90
msgid "contain the special component `.` or `..` (e.g. `foo/./bar` and `foo/../bar` are invalid)."
msgstr "tem o componente especial `.` ou `..` (`foo/./bar` e `foo/../bar` são inválidos por exemplo)."

#. type: Plain text
#: en/git-fast-import.txt:653
#, priority:90
msgid "The root of the tree can be represented by an empty string as `<path>`."
msgstr "A raiz da árvore pode ser representada por uma cadeia de caracteres vazios como `<caminho>`."

#. type: Plain text
#: en/git-fast-import.txt:655
#, priority:90
msgid "It is recommended that `<path>` always be encoded using UTF-8."
msgstr "É recomendável que o `<caminho>` seja sempre codificado utilizando UTF-8."

#. type: Title ^
#: en/git-fast-import.txt:657
#, ignore-same, no-wrap, priority:90
msgid "`filedelete`"
msgstr "`filedelete`"

#. type: Plain text
#: en/git-fast-import.txt:663
#, priority:90
msgid "Included in a `commit` command to remove a file or recursively delete an entire directory from the branch.  If the file or directory removal makes its parent directory empty, the parent directory will be automatically removed too.  This cascades up the tree until the first non-empty directory or the root is reached."
msgstr "Incluído no comando `commit` para remover um arquivo ou excluir recursivamente um diretório inteiro do ramo.  Caso a remoção do arquivo ou diretório deixar o seu diretório de origem vazio, o diretório de origem também será automaticamente removido.  Isso faz segue na árvore até que o primeiro diretório não vazio ou até que chegue até a raiz."

#. type: delimited block .
#: en/git-fast-import.txt:666
#, no-wrap, priority:90
msgid "\t'D' SP <path> LF\n"
msgstr "\t'D' SP <caminho> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:671
#, priority:90
msgid "here `<path>` is the complete path of the file or subdirectory to be removed from the branch.  See `filemodify` above for a detailed description of `<path>`."
msgstr "aqui o '<caminho>' é o caminho completo do arquivo ou subdiretório que será removido do ramo.  Consulte `filemodify` acima para obter uma descrição mais detalhada sobre `<caminho>`."

#. type: Title ^
#: en/git-fast-import.txt:673
#, ignore-same, no-wrap, priority:90
msgid "`filecopy`"
msgstr "`filecopy`"

#. type: Plain text
#: en/git-fast-import.txt:678
#, priority:90
msgid "Recursively copies an existing file or subdirectory to a different location within the branch.  The existing file or directory must exist.  If the destination exists it will be completely replaced by the content copied from the source."
msgstr "Recursivamente copie um arquivo ou subdiretório existente para um local diferente dentro do ramo.  O arquivo ou diretório existente deve existir.  Caso o destino exista, ele será completamente substituído pelo conteúdo copiado da fonte."

#. type: delimited block .
#: en/git-fast-import.txt:681
#, no-wrap, priority:90
msgid "\t'C' SP <path> SP <path> LF\n"
msgstr "\t'C' SP <caminho> SP <caminho> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:687 en/git-fast-import.txt:707
#, priority:90
msgid "here the first `<path>` is the source location and the second `<path>` is the destination.  See `filemodify` above for a detailed description of what `<path>` may look like.  To use a source path that contains SP the path must be quoted."
msgstr "aqui o primeiro `<caminho>` é o local de origem e o segundo `<caminho>` é o destino.  Consulte `filemodify` acima para uma descrição detalhada de como pode ser o `<caminho>`.  O caminho deve ser citado para usar um caminho de origem que contenha `SP`."

#. type: Plain text
#: en/git-fast-import.txt:692
#, priority:90
msgid "A `filecopy` command takes effect immediately.  Once the source location has been copied to the destination any future commands applied to the source location will not impact the destination of the copy."
msgstr "Um comando `filecopy` entra em vigor imediatamente.  Depois que o local de origem tenha sido copiado para o destino, quaisquer comandos futuros aplicados ao local de origem não afetarão o destino da cópia."

#. type: Title ^
#: en/git-fast-import.txt:694
#, ignore-same, no-wrap, priority:90
msgid "`filerename`"
msgstr "`filerename`"

#. type: Plain text
#: en/git-fast-import.txt:698
#, priority:90
msgid "Renames an existing file or subdirectory to a different location within the branch.  The existing file or directory must exist. If the destination exists it will be replaced by the source directory."
msgstr "Renomeia um arquivo ou subdiretório existente para um local diferente dentro do ramo.  O arquivo ou diretório existente deve existir. Caso o destino exista, ele será substituído pelo diretório de origem."

#. type: delimited block .
#: en/git-fast-import.txt:701
#, no-wrap, priority:90
msgid "\t'R' SP <path> SP <path> LF\n"
msgstr "\t'R' SP <caminho> SP <caminho> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:712
#, priority:90
msgid "A `filerename` command takes effect immediately.  Once the source location has been renamed to the destination any future commands applied to the source location will create new files there and not impact the destination of the rename."
msgstr "Um comando `filerename` entra em vigor imediatamente.  Depois que o local de origem for renomeado para o destino, quaisquer comandos futuros aplicados ao local de origem criarão novos arquivos e não afetarão o destino da renomeação."

#. type: Plain text
#: en/git-fast-import.txt:721
#, priority:90
msgid "Note that a `filerename` is the same as a `filecopy` followed by a `filedelete` of the source location.  There is a slight performance advantage to using `filerename`, but the advantage is so small that it is never worth trying to convert a delete/add pair in source material into a rename for fast-import.  This `filerename` command is provided just to simplify frontends that already have rename information and don't want bother with decomposing it into a `filecopy` followed by a `filedelete`."
msgstr "Observe que um `filename` é o mesmo que um` filecopy` seguido de um `filedelete` do local de origem.  Há uma pequena vantagem de desempenho em usar o `filename`, mas a vantagem é tão pequena que nunca vale a pena tentar converter um par de exclusão/adição no material de origem numa renomeação para o `fast-import`.  Este comando `filerename` é informado apenas para simplificar os front-ends que já possuam informações de renomeação e não querem se decompor num `filecopy` seguido de um `filedelete`."

#. type: Title ^
#: en/git-fast-import.txt:723
#, ignore-same, no-wrap, priority:90
msgid "`filedeleteall`"
msgstr "`filedeleteall`"

#. type: Plain text
#: en/git-fast-import.txt:728
#, priority:90
msgid "Included in a `commit` command to remove all files (and also all directories) from the branch.  This command resets the internal branch structure to have no files in it, allowing the frontend to subsequently add all interesting files from scratch."
msgstr "Incluído no comando `commit` para remover todos os arquivos (e também todos os diretórios) do ramo.  Este comando redefine a estrutura interna do ramo para que exista nenhum arquivo nele, permitindo que o \"front-end\" adicione posteriormente todos os arquivos interessantes do zero."

#. type: delimited block .
#: en/git-fast-import.txt:731
#, no-wrap, priority:90
msgid "\t'deleteall' LF\n"
msgstr "\t'deleteall' LF\n"

#. type: Plain text
#: en/git-fast-import.txt:737
#, priority:90
msgid "This command is extremely useful if the frontend does not know (or does not care to know) what files are currently on the branch, and therefore cannot generate the proper `filedelete` commands to update the content."
msgstr "Este comando é extremamente útil caso o front-end não soiba (ou não quer saber) quais são os arquivos estão atualmente no ramo e, portanto, não conseguir gerar os comandos `filedelete` adequados para atualizar o conteúdo."

#. type: Plain text
#: en/git-fast-import.txt:745
#, priority:90
msgid "Issuing a `filedeleteall` followed by the needed `filemodify` commands to set the correct content will produce the same results as sending only the needed `filemodify` and `filedelete` commands.  The `filedeleteall` approach may however require fast-import to use slightly more memory per active branch (less than 1 MiB for even most large projects); so frontends that can easily obtain only the affected paths for a commit are encouraged to do so."
msgstr "A emissão de um arquivo ʻfiledeleteall` seguido dos comandos necessários `filemodify` para definir o conteúdo correto e produzirá os mesmos resultados que o envio apenas dos comandos necessários `filemodify` e `filedelete`.  A abordagem `filedeleteall` pode, no entanto, exigir que o `fast-import` para usar um pouco mais de memória por ramificação ativa (menos de 1 MiB para projetos ainda maiores); portanto, os front-ends que podem obter facilmente apenas aos caminhos afetados para um commit são incentivados a fazê-lo."

#. type: Title ^
#: en/git-fast-import.txt:747
#, ignore-same, no-wrap, priority:90
msgid "`notemodify`"
msgstr "`notemodify`"

#. type: Plain text
#: en/git-fast-import.txt:756
#, priority:90
msgid "Included in a `commit` `<notes_ref>` command to add a new note annotating a `<commit-ish>` or change this annotation contents.  Internally it is similar to filemodify 100644 on `<commit-ish>` path (maybe split into subdirectories). It's not advised to use any other commands to write to the `<notes_ref>` tree except `filedeleteall` to delete all existing notes in this tree.  This command has two different means of specifying the content of the note."
msgstr "Incluído num comando `commit` `<notes_ref>` para adicionar uma nova nota anotando um `<commit-ish>` ou alterar este conteúdo da anotação.  Internamente, é semelhante ao arquivo modificado 100644 no caminho `<commit-ish>` (talvez dividido em subdiretórios). Não é aconselhável usar outros comandos para escrever na árvore `<notes_ref>`, exceto `filedeleteall` para excluir todas as anotações existentes nessa árvore.  Este comando possui dois meios diferentes de especificar o conteúdo da anotação."

#. type: Plain text
#: en/git-fast-import.txt:761
#, priority:90
msgid "The data content for the note was already supplied by a prior `blob` command.  The frontend just needs to connect it to the commit that is to be annotated."
msgstr "O conteúdo dos dados para a anotação já foi informado por um comando `blob` anterior.  O front-end só precisa conectá-lo ao commit que deve ser anotado."

#. type: delimited block .
#: en/git-fast-import.txt:764
#, no-wrap, priority:90
msgid "\t'N' SP <dataref> SP <commit-ish> LF\n"
msgstr "\t'N' SP <dataref> SP <commit-ish> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:769
#, priority:90
msgid "Here `<dataref>` can be either a mark reference (`:<idnum>`)  set by a prior `blob` command, or a full 40-byte SHA-1 of an existing Git blob object."
msgstr "Aqui `<dataref>` pode ser uma marcação de referência (`:<idnum>`) definida por um comando `blob` anterior ou um SHA-1 completo com 40 bytes de um objeto bolha existente."

#. type: Plain text
#: en/git-fast-import.txt:774
#, priority:90
msgid "The data content for the note has not been supplied yet.  The frontend wants to supply it as part of this modify command."
msgstr "O conteúdo dos dados da anotação ainda não foi informado.  O front-end deseja fornecê-lo como parte deste comando de modificação."

#. type: delimited block .
#: en/git-fast-import.txt:778
#, no-wrap, priority:90
msgid ""
"\t'N' SP 'inline' SP <commit-ish> LF\n"
"\tdata\n"
msgstr ""
"\t'N' SP 'inline' SP <commit-ish> LF\n"
"\tdado\n"

#. type: Plain text
#: en/git-fast-import.txt:784
#, priority:90
msgid "In both formats `<commit-ish>` is any of the commit specification expressions also accepted by `from` (see above)."
msgstr "Nos dois formatos, `<commit-ish>` é qualquer uma das expressões de especificação do commit também aceitos por `from` (veja acima)."

#. type: Title ~
#: en/git-fast-import.txt:786
#, ignore-same, no-wrap, priority:90
msgid "`mark`"
msgstr "`mark`"

#. type: Plain text
#: en/git-fast-import.txt:792
#, priority:90
msgid "Arranges for fast-import to save a reference to the current object, allowing the frontend to recall this object at a future point in time, without knowing its SHA-1.  Here the current object is the object creation command the `mark` command appears within.  This can be `commit`, `tag`, and `blob`, but `commit` is the most common usage."
msgstr "Organiza `fast-import` para salvar uma referência ao objeto atual, permitindo que o front-end recupere este objeto num momento futuro, sem conhecer o seu SHA-1.  Aqui, o objeto atual é o comando de criação do objeto no qual o comando `mark` aparece.  Pode ser `commit`, `tag` e `blob`, mas `commit` é o uso mais comum."

#. type: delimited block .
#: en/git-fast-import.txt:795
#, no-wrap, priority:90
msgid "\t'mark' SP ':' <idnum> LF\n"
msgstr "\t'mark' SP ':' <idnum> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:801
#, priority:90
msgid "where `<idnum>` is the number assigned by the frontend to this mark.  The value of `<idnum>` is expressed as an ASCII decimal integer.  The value 0 is reserved and cannot be used as a mark.  Only values greater than or equal to 1 may be used as marks."
msgstr "onde `<idnum>` é o número atribuído pelo front-end a esta marcação.  O valor de `<idnum>` é expresso como um número ASCII decimal inteiro.  O valor 0 é reservado e não pode ser utilizado como uma marcação.  Somente os valores maiores ou iguais a 1 podem ser utilizados como marcação."

#. type: Plain text
#: en/git-fast-import.txt:805
#, priority:90
msgid "New marks are created automatically.  Existing marks can be moved to another object simply by reusing the same `<idnum>` in another `mark` command."
msgstr "As novas marcações são criadas automaticamente.  As marcações existentes podem ser movidas para um outro objeto simplesmente reutilizando o mesmo `<idnum>` em outro comando `mark`."

#. type: Title ~
#: en/git-fast-import.txt:807
#, ignore-same, no-wrap, priority:90
msgid "`original-oid`"
msgstr "`original-oid`"

#. type: Plain text
#: en/git-fast-import.txt:812
#, priority:90
msgid "Provides the name of the object in the original source control system.  fast-import will simply ignore this directive, but filter processes which operate on and modify the stream before feeding to fast-import may have uses for this information"
msgstr "Fornece o nome do objeto no sistema de controle de origem original.  o `fast-import` simplesmente ignorará esta diretiva, porém os processos de filtro que operam e modificam o fluxo antes de alimentar o `fast-import` podem ter usos para essas informações"

#. type: delimited block .
#: en/git-fast-import.txt:815
#, no-wrap, priority:90
msgid "\t'original-oid' SP <object-identifier> LF\n"
msgstr "\t'original-oid' SP <identificador-do-objeto> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:818
#, priority:90
msgid "where `<object-identifier>` is any string not containing LF."
msgstr "onde `<identificador-do-objeto>` é qualquer cadeia de caracteres que não contenha LF."

#. type: Plain text
#: en/git-fast-import.txt:823
#, priority:90
msgid "Creates an annotated tag referring to a specific commit.  To create lightweight (non-annotated) tags see the `reset` command below."
msgstr "Cria uma tag anotada referente a um commit específico.  Para criar tags `leve` (não anotadas), consulte o comando `reset` abaixo."

#. type: delimited block .
#: en/git-fast-import.txt:831
#, no-wrap, priority:90
msgid ""
"\t'tag' SP <name> LF\n"
"\tmark?\n"
"\t'from' SP <commit-ish> LF\n"
"\toriginal-oid?\n"
"\t'tagger' (SP <name>)? SP LT <email> GT SP <when> LF\n"
"\tdata\n"
msgstr ""
"\t'tag' SP <nome> LF\n"
"\tmark?\n"
"\t'from' SP <commit-ish> LF\n"
"\toriginal-oid?\n"
"\t'tagger' (SP <nome>)? SP LT <e-mail> GT SP <quando> LF\n"
"\tdata\n"

#. type: Plain text
#: en/git-fast-import.txt:834
#, priority:90
msgid "where `<name>` is the name of the tag to create."
msgstr "onde `<nome>` é o nome da tag a ser criada."

#. type: Plain text
#: en/git-fast-import.txt:839
#, priority:90
msgid "Tag names are automatically prefixed with `refs/tags/` when stored in Git, so importing the CVS branch symbol `RELENG-1_0-FINAL` would use just `RELENG-1_0-FINAL` for `<name>`, and fast-import will write the corresponding ref as `refs/tags/RELENG-1_0-FINAL`."
msgstr "Os nomes das tags são prefixados automaticamente com `refs/tags/` quando armazenados no Git, portanto, a importação do símbolo do ramo CVS `RELENG-1_0-FINAL` usaria apenas `RELENG-1_0-FINAL` para `<nome>` e o `fast-import` irá escrever um `ref` correspondente como `refs/tags/RELENG-1_0-FINAL`."

#. type: Plain text
#: en/git-fast-import.txt:843
#, priority:90
msgid "The value of `<name>` must be a valid refname in Git and therefore may contain forward slashes.  As `LF` is not valid in a Git refname, no quoting or escaping syntax is supported here."
msgstr "O valor de `<nome>` deve ser um `refname` válido no Git e portanto, pode conter barras.  Como `LF` não é válido num \"refname\" do Git, nenhuma sintaxe de aspas ou de escape é compatível aqui."

#. type: Plain text
#: en/git-fast-import.txt:846
#, priority:90
msgid "The `from` command is the same as in the `commit` command; see above for details."
msgstr "O comando `from` é o mesmo que no comando `commit`; veja acima para detalhes."

#. type: Plain text
#: en/git-fast-import.txt:849
#, priority:90
msgid "The `tagger` command uses the same format as `committer` within `commit`; again see above for details."
msgstr "O comando `tagger` usa o mesmo formato que `committer` dentro de `commit`; veja novamente acima para obter detalhes."

#. type: Plain text
#: en/git-fast-import.txt:855
#, priority:90
msgid "The `data` command following `tagger` must supply the annotated tag message (see below for `data` command syntax).  To import an empty tag message use a 0 length data.  Tag messages are free-form and are not interpreted by Git.  Currently they must be encoded in UTF-8, as fast-import does not permit other encodings to be specified."
msgstr "O comando `data` após o `tagger` deve fornecer a mensagem anotada do tag (veja abaixo a sintaxe do comando `data`).  Para importar uma mensagem de tag vazia, utilize dados com  0 de comprimento.  As mensagens de tag são de forma livre e não são interpretados pelo Git.  Atualmente, elas devem ser codificadas em UTF-8, pois o `fast-import` não permite que outras codificações sejam utilizadas."

#. type: Plain text
#: en/git-fast-import.txt:863
#, priority:90
msgid "Signing annotated tags during import from within fast-import is not supported.  Trying to include your own PGP/GPG signature is not recommended, as the frontend does not (easily) have access to the complete set of bytes which normally goes into such a signature.  If signing is required, create lightweight tags from within fast-import with `reset`, then create the annotated versions of those tags offline with the standard 'git tag' process."
msgstr "A assinatura de tags anotadas durante a importação com `fast-import` não é compatível.  Não é recomendável tentar incluir na sua própria assinatura PGP/GPG, pois o front-end não tem (facilmente) acesso ao conjunto completo de bytes que normalmente entra nessa assinatura.  Caso a assinatura seja necessária, crie tags `leve` a partir do `fast-import` com `reset` e crie as versões anotadas dessas tags desconectadas com o processo predefinido 'git tag'."

#. type: Plain text
#: en/git-fast-import.txt:870
#, priority:90
msgid "Creates (or recreates) the named branch, optionally starting from a specific revision.  The reset command allows a frontend to issue a new `from` command for an existing branch, or to create a new branch from an existing commit without creating a new commit."
msgstr "Cria (ou recria) a ramificação nomeada, iniciando opcionalmente a partir de uma revisão específica.  O comando `reset permite que um front-end emita um novo comando `from` para uma ramificação existente ou crie uma nova ramificação a partir de um commit existente sem criar um novo commit."

#. type: delimited block .
#: en/git-fast-import.txt:875
#, no-wrap, priority:90
msgid ""
"\t'reset' SP <ref> LF\n"
"\t('from' SP <commit-ish> LF)?\n"
"\tLF?\n"
msgstr ""
"\t'reset' SP <ref> LF\n"
"\t('from' SP <commit-ish> LF)?\n"
"\tLF?\n"

#. type: Plain text
#: en/git-fast-import.txt:879
#, priority:90
msgid "For a detailed description of `<ref>` and `<commit-ish>` see above under `commit` and `from`."
msgstr "Para uma descrição detalhada sobre `<ref>` e `<commit-ish>` veja acima em `commit` e` from`."

#. type: Plain text
#: en/git-fast-import.txt:881 en/git-fast-import.txt:1008
#, priority:90
msgid "The `LF` after the command is optional (it used to be required)."
msgstr "O `LF` após o comando é opcional (costumava ser necessário)."

#. type: Plain text
#: en/git-fast-import.txt:884
#, priority:90
msgid "The `reset` command can also be used to create lightweight (non-annotated) tags.  For example:"
msgstr "O comando `reset` também pode ser utilizado para criar tags leves (não anotadas).  Por exemplo:"

#. type: delimited block =
#: en/git-fast-import.txt:888
#, no-wrap, priority:90
msgid ""
"\treset refs/tags/938\n"
"\tfrom :938\n"
msgstr ""
"\treset refs/tags/938\n"
"\tfrom :938\n"

#. type: Plain text
#: en/git-fast-import.txt:892
#, priority:90
msgid "would create the lightweight tag `refs/tags/938` referring to whatever commit mark `:938` references."
msgstr "criaria a tag `leve` `refs/tags/938` se referindo a qualquer marcação do commit `:938`."

#. type: Plain text
#: en/git-fast-import.txt:899
#, priority:90
msgid "Requests writing one file revision to the packfile.  The revision is not connected to any commit; this connection must be formed in a subsequent `commit` command by referencing the blob through an assigned mark."
msgstr "Solicita a gravação de uma revisão do arquivo no pacote do arquivo.  A revisão não está conectada a nenhum commit; essa conexão deve ser formada com um comando `commit` subsequente referenciando a bolha através de uma marcação atribuída."

#. type: delimited block .
#: en/git-fast-import.txt:905
#, no-wrap, priority:90
msgid ""
"\t'blob' LF\n"
"\tmark?\n"
"\toriginal-oid?\n"
"\tdata\n"
msgstr ""
"\t'blob' LF\n"
"\tmark?\n"
"\toriginal-oid?\n"
"\tdado\n"

#. type: Plain text
#: en/git-fast-import.txt:911
#, priority:90
msgid "The mark command is optional here as some frontends have chosen to generate the Git SHA-1 for the blob on their own, and feed that directly to `commit`.  This is typically more work than it's worth however, as marks are inexpensive to store and easy to use."
msgstr "O comando `mark` é opcional aqui, pois alguns front-ends optaram por gerar o SHA-1 do Git para a bolha por conta própria e alimentá-la diretamente para o `commit`.  No entanto, normalmente é mais trabalhoso do que vale a pena, pois as marcas são baratas de armazenar e fáceis de usar."

#. type: Title ~
#: en/git-fast-import.txt:913
#, ignore-same, no-wrap, priority:90
msgid "`data`"
msgstr "`data`"

#. type: Plain text
#: en/git-fast-import.txt:920
#, priority:90
msgid "Supplies raw data (for use as blob/file content, commit messages, or annotated tag messages) to fast-import.  Data can be supplied using an exact byte count or delimited with a terminating line.  Real frontends intended for production-quality conversions should always use the exact byte count format, as it is more robust and performs better.  The delimited format is intended primarily for testing fast-import."
msgstr "Fornece os dados brutos (para uso como o conteúdo bolha/arquivo, as mensagens do commit ou as mensagens de anotação das tags) para o `fast-import`.  Os dados podem ser informados utilizando uma contagem exata de bytes ou delimitados por uma linha final.  Os front-ends reais destinados para conversões de qualidade de produção devem sempre usar o formato exato de contagem de bytes, pois são mais robustos e têm um melhor desempenho.  O formato delimitado destina-se principalmente ao teste de importação rápida."

#. type: Plain text
#: en/git-fast-import.txt:925
#, priority:90
msgid "Comment lines appearing within the `<raw>` part of `data` commands are always taken to be part of the body of the data and are therefore never ignored by fast-import.  This makes it safe to import any file/message content whose lines might start with `#`."
msgstr "As linhas de comentário que aparecem na parte `<raw>` dos comandos `data` sempre são consideradas parte do corpo dos dados e portanto, nunca são ignoradas pelo `fast-import`.  Isso torna seguro importar qualquer conteúdo do arquivo/mensagem cujas linhas possam começar com `#`."

#. type: Labeled list
#: en/git-fast-import.txt:926
#, no-wrap, priority:90
msgid "Exact byte count format"
msgstr "Formato exato de contagem de bytes"

#. type: Plain text
#: en/git-fast-import.txt:928
#, priority:90
msgid "The frontend must specify the number of bytes of data."
msgstr "O front-end deve especificar a quantidade de bytes dos dados."

#. type: delimited block .
#: en/git-fast-import.txt:932
#, no-wrap, priority:90
msgid ""
"\t'data' SP <count> LF\n"
"\t<raw> LF?\n"
msgstr ""
"\t'data' SP <count> LF\n"
"\t<raw> LF?\n"

#. type: Plain text
#: en/git-fast-import.txt:938
#, priority:90
msgid "where `<count>` is the exact number of bytes appearing within `<raw>`.  The value of `<count>` is expressed as an ASCII decimal integer.  The `LF` on either side of `<raw>` is not included in `<count>` and will not be included in the imported data."
msgstr "onde `<count>` é a quantidade exato de bytes que aparece em `<raw>`.  O valor `<count>` é expressado como um número ASCII decimal inteiro.  O `LF` em ambos os lados de `<raw>` não está incluído em `<count>` e não será incluído nos dados importados."

#. type: Plain text
#: en/git-fast-import.txt:943
#, priority:90
msgid "The `LF` after `<raw>` is optional (it used to be required) but recommended.  Always including it makes debugging a fast-import stream easier as the next command always starts in column 0 of the next line, even if `<raw>` did not end with an `LF`."
msgstr "O `LF` após `<raw>` é opcional (costumava ser necessário), mas recomendado.  A inclusão sempre facilita a depuração de um fluxo do `fast-import`, pois o próximo comando sempre inicia na coluna 0 da próxima linha, ainda que `<raw>` não termine com um `LF`."

#. type: Labeled list
#: en/git-fast-import.txt:944
#, no-wrap, priority:90
msgid "Delimited format"
msgstr "Formato delimitado"

#. type: Plain text
#: en/git-fast-import.txt:949
#, priority:90
msgid "A delimiter string is used to mark the end of the data.  fast-import will compute the length by searching for the delimiter.  This format is primarily useful for testing and is not recommended for real data."
msgstr "Uma cadeia de caracteres delimitadora é utilizada para marcar o final dos dados.  O `fast-import` calculará o comprimento pesquisando pelo delimitador.  Esse formato é útil principalmente para testes e não é recomendado para dados reais."

#. type: delimited block .
#: en/git-fast-import.txt:955
#, no-wrap, priority:90
msgid ""
"\t'data' SP '<<' <delim> LF\n"
"\t<raw> LF\n"
"\t<delim> LF\n"
"\tLF?\n"
msgstr ""
"\t'data' SP '<<' <delim> LF\n"
"\t<raw> LF\n"
"\t<delim> LF\n"
"\tLF?\n"

#. type: Plain text
#: en/git-fast-import.txt:963
#, priority:90
msgid "where `<delim>` is the chosen delimiter string.  The string `<delim>` must not appear on a line by itself within `<raw>`, as otherwise fast-import will think the data ends earlier than it really does.  The `LF` immediately trailing `<raw>` is part of `<raw>`.  This is one of the limitations of the delimited format, it is impossible to supply a data chunk which does not have an LF as its last byte."
msgstr "onde `<delim>` é a cadeia de caracteres escolhida para a delimitação.  A cadeia de caracteres `<delim>` não deve aparecer numa linha sozinha dentro de `<raw>`, pois o `fast-import` pensará que os dados terminam mais cedo do que realmente terminam.  O `LF` imediatamente após `<raw>` faz parte de `<raw>`.  Essa é uma das limitações do formato delimitado, é impossível fornecer um bloco de dados que não tenha um `LF` como o seu último byte."

#. type: Plain text
#: en/git-fast-import.txt:965
#, priority:90
msgid "The `LF` after `<delim> LF` is optional (it used to be required)."
msgstr "O `LF` após `<delim> LF` é opcional (costumava ser necessário)."

#. type: Plain text
#: en/git-fast-import.txt:970
#, priority:90
msgid "Record that a mark refers to a given object without first creating any new object."
msgstr "Registre que uma marcação se refere a um determinado objeto sem criar primeiro nenhum novo objeto."

#. type: delimited block .
#: en/git-fast-import.txt:976
#, no-wrap, priority:90
msgid ""
"\t'alias' LF\n"
"\tmark\n"
"\t'to' SP <commit-ish> LF\n"
"\tLF?\n"
msgstr ""
"\t'alias' LF\n"
"\tmark\n"
"\t'to' SP <commit-ish> LF\n"
"\tLF?\n"

#. type: Plain text
#: en/git-fast-import.txt:979
#, priority:90
msgid "For a detailed description of `<commit-ish>` see above under `from`."
msgstr "Para uma descrição detalhada do `<commit-ish>` veja acima em `from`."

#. type: Plain text
#: en/git-fast-import.txt:985
#, priority:90
msgid "Forces fast-import to close the current packfile, start a new one, and to save out all current branch refs, tags and marks."
msgstr "Impõem o `fast-import` a fechar o arquivo de pacote atual, iniciar um novo e salvar todas os `refs`, tags e marcas das ramificações atuais."

#. type: delimited block .
#: en/git-fast-import.txt:989
#, no-wrap, priority:90
msgid ""
"\t'checkpoint' LF\n"
"\tLF?\n"
msgstr ""
"\t'checkpoint' LF\n"
"\tLF?\n"

#. type: Plain text
#: en/git-fast-import.txt:995
#, priority:90
msgid "Note that fast-import automatically switches packfiles when the current packfile reaches --max-pack-size, or 4 GiB, whichever limit is smaller.  During an automatic packfile switch fast-import does not update the branch refs, tags or marks."
msgstr "Observe que o `fast-import` alterna automaticamente os arquivos do pacote quando o arquivo do pacote atual alcance `--max-pack-size` ou 4 GiB, o que for menor.  Durante uma troca automática do pacote de arquivos `fast-import não atualiza os `refs`, tags ou marcações do ramo."

#. type: Plain text
#: en/git-fast-import.txt:1000
#, priority:90
msgid "As a `checkpoint` can require a significant amount of CPU time and disk IO (to compute the overall pack SHA-1 checksum, generate the corresponding index file, and update the refs) it can easily take several minutes for a single `checkpoint` command to complete."
msgstr "Como um `checkpoint` pode exigir uma quantidade significativa de tempo de CPU e E/S de disco (para calcular a soma de verificação SHA-1 do pacote geral, gerar o arquivo do índice correspondente e atualizar as `refs`), pode levar vários minutos para um único comando `checkpoint` para concluir."

#. type: Plain text
#: en/git-fast-import.txt:1006
#, priority:90
msgid "Frontends may choose to issue checkpoints during extremely large and long running imports, or when they need to allow another Git process access to a branch.  However given that a 30 GiB Subversion repository can be loaded into Git through fast-import in about 3 hours, explicit checkpointing may not be necessary."
msgstr "Os front-end podem optar por emitir `checkpoints` durante as importações extremamente grandes e de execução demorada, ou quando precisam permitir que outro processo do Git acesse uma ramificação.  No entanto, dado que um repositório do Subversion com 30 GiB pode ser carregado no Git através do `fast-import` em cerca de 3 horas, talvez não seja necessário um `checkpoint` explícito."

#. type: Plain text
#: en/git-fast-import.txt:1015
#, priority:90
msgid "Causes fast-import to print the entire `progress` line unmodified to its standard output channel (file descriptor 1) when the command is processed from the input stream.  The command otherwise has no impact on the current import, or on any of fast-import's internal state."
msgstr "Faz com que o `fast-import` imprima toda a linha `progress` sem modificação em seu canal de saída predefinido (descritor do arquivo 1) quando o comando é processado a partir do fluxo de entrada.  Caso contrário, o comando não tem impacto na importação atual ou em qualquer outro estado interno do `fast-import`."

#. type: delimited block .
#: en/git-fast-import.txt:1019
#, no-wrap, priority:90
msgid ""
"\t'progress' SP <any> LF\n"
"\tLF?\n"
msgstr ""
"\t'progress' SP <any> LF\n"
"\tLF?\n"

#. type: Plain text
#: en/git-fast-import.txt:1025
#, priority:90
msgid "The `<any>` part of the command may contain any sequence of bytes that does not contain `LF`.  The `LF` after the command is optional.  Callers may wish to process the output through a tool such as sed to remove the leading part of the line, for example:"
msgstr "A parte `<any>` do comando pode conter qualquer sequência de bytes que não contenha um `LF`.  O `LF` após o comando é opcional.  Os chamadores podem desejar processar a saída por meio de uma ferramenta como sed para remover a parte principal da linha, por exemplo:"

#. type: delimited block =
#: en/git-fast-import.txt:1028
#, no-wrap, priority:90
msgid "\tfrontend | git fast-import | sed 's/^progress //'\n"
msgstr "\tfrontend | git fast-import | sed 's/^progress //'\n"

#. type: Plain text
#: en/git-fast-import.txt:1033
#, priority:90
msgid "Placing a `progress` command immediately after a `checkpoint` will inform the reader when the `checkpoint` has been completed and it can safely access the refs that fast-import updated."
msgstr "A colocação de um comando `progress` imediatamente após um `checkpoint` informará ao leitor quando o `checkpoint` seja concluído e ele poderá acessar com segurança os `refs` que o `fast-import` atualizaram."

#. type: Plain text
#: en/git-fast-import.txt:1041
#, priority:90
msgid "Causes fast-import to print the SHA-1 corresponding to a mark to stdout or to the file descriptor previously arranged with the `--cat-blob-fd` argument. The command otherwise has no impact on the current import; its purpose is to retrieve SHA-1s that later commits might want to refer to in their commit messages."
msgstr "Faz com que o `fast-import` imprima o SHA-1 correspondente a uma marcação em `stdout` ou ao descritor de arquivo previamente organizado com o argumento `--cat-blob-fd`. Caso contrário, o comando não tem impacto na importação atual; seu objetivo é recuperar o SHA-1s que commits posteriores podem querer se referir em suas mensagens de commit."

#. type: delimited block .
#: en/git-fast-import.txt:1044
#, no-wrap, priority:90
msgid "\t'get-mark' SP ':' <idnum> LF\n"
msgstr "\t'get-mark' SP ':' <idnum> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:1048 en/git-fast-import.txt:1079 en/git-fast-import.txt:1132
#, priority:90
msgid "See ``Responses To Commands'' below for details about how to read this output safely."
msgstr "Consulte ``RESPOSTAS AOS COMANDOS'' abaixo para obter detalhes sobre como ler esta saída com segurança."

#. type: Plain text
#: en/git-fast-import.txt:1056
#, priority:90
msgid "Causes fast-import to print a blob to a file descriptor previously arranged with the `--cat-blob-fd` argument.  The command otherwise has no impact on the current import; its main purpose is to retrieve blobs that may be in fast-import's memory but not accessible from the target repository."
msgstr "Faz com que o `fast-import` imprima uma bolha num descritor do arquivo previamente organizado com o argumento `--cat-blob-fd`.  Caso contrário, o comando não tem impacto na importação atual; o seu principal objetivo é recuperar as bolhas que podem estar na memória do `fast-import`, mas não acessíveis no repositório de destino."

#. type: delimited block .
#: en/git-fast-import.txt:1059
#, no-wrap, priority:90
msgid "\t'cat-blob' SP <dataref> LF\n"
msgstr "\t'cat-blob' SP <dataref> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:1064
#, priority:90
msgid "The `<dataref>` can be either a mark reference (`:<idnum>`)  set previously or a full 40-byte SHA-1 of a Git blob, preexisting or ready to be written."
msgstr "O `<dataref>` pode ser uma marcação de referência (`:<idnum>`) definida anteriormente ou um SHA-1 completo com 40 bytes de uma bolha Git pré-existente ou pronto para ser gravado."

#. type: Plain text
#: en/git-fast-import.txt:1066
#, priority:90
msgid "Output uses the same format as `git cat-file --batch`:"
msgstr "A saída usa o mesmo formato que `git cat-file --batch`:"

#. type: delimited block =
#: en/git-fast-import.txt:1070
#, no-wrap, priority:90
msgid ""
"\t<sha1> SP 'blob' SP <size> LF\n"
"\t<contents> LF\n"
msgstr ""
"\t<sha1> SP 'blob' SP <tamanho> LF\n"
"\t<contents> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:1076
#, priority:90
msgid "This command can be used where a `filemodify` directive can appear, allowing it to be used in the middle of a commit.  For a `filemodify` using an inline directive, it can also appear right before the `data` directive."
msgstr "Este comando pode ser usado onde uma diretiva `filemodify` possa aparecer, permitindo que ela seja usada no meio de um commit.  Para um `filemodify` usando uma diretiva 'inline', ele também pode aparecer logo antes da diretiva `data`."

#. type: Plain text
#: en/git-fast-import.txt:1087
#, priority:90
msgid "Prints information about the object at a path to a file descriptor previously arranged with the `--cat-blob-fd` argument.  This allows printing a blob from the active commit (with `cat-blob`) or copying a blob or tree from a previous commit for use in the current one (with `filemodify`)."
msgstr "Imprime as informações sobre o objeto num caminho para um descritor do arquivo organizado anteriormente com a opção `--cat-blob-fd`.  Permite a impressão de uma bolha a partir do commit ativo (com `cat-blob`) ou copiando uma bolha ou árvore de um commit anterior para uso no atual (com `filemodify`)."

#. type: Plain text
#: en/git-fast-import.txt:1090
#, priority:90
msgid "The `ls` command can also be used where a `filemodify` directive can appear, allowing it to be used in the middle of a commit."
msgstr "O comando `ls` também pode ser usado onde uma diretiva `filemodify` possa aparecer, permitindo que ela seja usada no meio de um commit."

#. type: Labeled list
#: en/git-fast-import.txt:1091
#, no-wrap, priority:90
msgid "Reading from the active commit"
msgstr "Lendo a partir do commit ativo"

#. type: Plain text
#: en/git-fast-import.txt:1095
#, priority:90
msgid "This form can only be used in the middle of a `commit`.  The path names a directory entry within fast-import's active commit.  The path must be quoted in this case."
msgstr "Este formulário pode ser utilizado apenas no meio de um `commit`.  O caminho informa uma entrada do diretório no commit ativo do `fast-import`.  O caminho deve ser citado neste caso."

#. type: delimited block .
#: en/git-fast-import.txt:1098
#, no-wrap, priority:90
msgid "\t'ls' SP <path> LF\n"
msgstr "\t'ls' SP <caminho> LF\n"

#. type: Labeled list
#: en/git-fast-import.txt:1100
#, no-wrap, priority:90
msgid "Reading from a named tree"
msgstr "Lendo de uma árvore nomeada"

#. type: Plain text
#: en/git-fast-import.txt:1106
#, priority:90
msgid "The `<dataref>` can be a mark reference (`:<idnum>`) or the full 40-byte SHA-1 of a Git tag, commit, or tree object, preexisting or waiting to be written.  The path is relative to the top level of the tree named by `<dataref>`."
msgstr "O `<dataref>` pode ser uma marcação de referência (`:<idnum>`) ou o SHA-1 completo com 40 bytes de uma tag, commit ou objeto da árvore Git pré-existente ou aguardando para ser gravado.  O caminho é relativo ao cume da árvore informada através do `<dataref>`."

#. type: delimited block .
#: en/git-fast-import.txt:1109
#, no-wrap, priority:90
msgid "\t'ls' SP <dataref> SP <path> LF\n"
msgstr "\t'ls' SP <dataref> SP <caminho> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:1112
#, priority:90
msgid "See `filemodify` above for a detailed description of `<path>`."
msgstr "Consulte `filemodify` acima para uma descrição detalhada de `<caminho>`."

#. type: Plain text
#: en/git-fast-import.txt:1114
#, priority:90
msgid "Output uses the same format as `git ls-tree <tree> -- <path>`:"
msgstr "A saída usa o mesmo formato que `git ls-tree <árvore> -- <caminho>`:"

#. type: delimited block =
#: en/git-fast-import.txt:1117
#, no-wrap, priority:90
msgid "\t<mode> SP ('blob' | 'tree' | 'commit') SP <dataref> HT <path> LF\n"
msgstr "\t<mode> SP ('blob' | 'tree' | 'commit') SP <dataref> HT <caminho> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:1122
#, priority:90
msgid "The <dataref> represents the blob, tree, or commit object at <path> and can be used in later 'get-mark', 'cat-blob', 'filemodify', or 'ls' commands."
msgstr "O <dataref> representa o objeto bolha, árvore ou commit no <caminho> e pode ser utilizado posteriormente nos comandos `get-mark`, `cat-blob`, `filemodify` ou `ls`."

#. type: Plain text
#: en/git-fast-import.txt:1125
#, priority:90
msgid "If there is no file or subtree at that path, 'git fast-import' will instead report"
msgstr "Caso não haja um arquivo ou subárvore nesse caminho, o `git fast-import` o reportará"

#. type: delimited block =
#: en/git-fast-import.txt:1128
#, no-wrap, priority:90
msgid "\tmissing SP <path> LF\n"
msgstr "\tmissing SP <caminho> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:1137
#, priority:90
msgid "Require that fast-import supports the specified feature, or abort if it does not."
msgstr "Exija que a importação rápida ofereça suporte ao recurso especificado ou o anule."

#. type: delimited block .
#: en/git-fast-import.txt:1140
#, no-wrap, priority:90
msgid "\t'feature' SP <feature> ('=' <argument>)? LF\n"
msgstr "\t'feature' SP <característica> ('=' <argumento>)? LF\n"

#. type: Plain text
#: en/git-fast-import.txt:1143
#, priority:90
msgid "The <feature> part of the command may be any one of the following:"
msgstr "A parte <característica> do comando pode ser qualquer um dos seguintes:"

#. type: Plain text
#: en/git-fast-import.txt:1144 en/git-fast-import.txt:1211
#, no-wrap, priority:90
msgid "date-format"
msgstr "date-format"

#. type: Plain text
#: en/git-fast-import.txt:1145 en/git-fast-import.txt:1213
#, no-wrap, priority:90
msgid "export-marks"
msgstr "export-marks"

#. type: Labeled list
#: en/git-fast-import.txt:1146
#, no-wrap, priority:90
msgid "relative-marks"
msgstr "relative-marks"

#. type: Labeled list
#: en/git-fast-import.txt:1147
#, no-wrap, priority:90
msgid "no-relative-marks"
msgstr "no-relative-marks"

#. type: Plain text
#: en/git-fast-import.txt:1148 en/git-fast-import.txt:1215
#, no-wrap, priority:90
msgid "force"
msgstr "force"

#. type: Plain text
#: en/git-fast-import.txt:1152
#, priority:90
msgid "Act as though the corresponding command-line option with a leading `--` was passed on the command line (see OPTIONS, above)."
msgstr "Aja como se a opção da linha de comando coincida com um `--` inicial fosse passada na linha de comando (consulte OPÇÕES, acima)."

#. type: Plain text
#: en/git-fast-import.txt:1153 en/git-fast-import.txt:1212
#, no-wrap, priority:90
msgid "import-marks"
msgstr "import-marks"

#. type: Labeled list
#: en/git-fast-import.txt:1154
#, no-wrap, priority:90
msgid "import-marks-if-exists"
msgstr "import-marks-if-exists"

#. type: Plain text
#: en/git-fast-import.txt:1162
#, priority:90
msgid "Like --import-marks except in two respects: first, only one \"feature import-marks\" or \"feature import-marks-if-exists\" command is allowed per stream; second, an --import-marks= or --import-marks-if-exists command-line option overrides any of these \"feature\" commands in the stream; third, \"feature import-marks-if-exists\" like a corresponding command-line option silently skips a nonexistent file."
msgstr "Como `--import-marks`, exceto em dois aspectos: primeiro, apenas um comando ´feature import-marks` ou `feature import-marks-if-exist` é permitido por fluxo; segundo, uma opção da linha de comando `--import-marks=` ou `--import-marks-if-existents` substitui qualquer um desses comandos \"feature\" no fluxo; terceiro, o `feature import-marks-if-exists` como uma opção da linha de comando coincidente ignora silenciosamente um arquivo inexistente."

#. type: Labeled list
#: en/git-fast-import.txt:1163
#, no-wrap, priority:90
msgid "get-mark"
msgstr "get-mark"

#. type: Labeled list
#: en/git-fast-import.txt:1164
#, no-wrap, priority:90
msgid "cat-blob"
msgstr "cat-blob"

#. type: Labeled list
#: en/git-fast-import.txt:1165
#, no-wrap, priority:90
msgid "ls"
msgstr "ls"

#. type: Plain text
#: en/git-fast-import.txt:1173
#, priority:90
msgid "Require that the backend support the 'get-mark', 'cat-blob', or 'ls' command respectively.  Versions of fast-import not supporting the specified command will exit with a message indicating so.  This lets the import error out early with a clear message, rather than wasting time on the early part of an import before the unsupported command is detected."
msgstr "Exija que o o processo interno seja compatível com os comandos 'get-mark', 'cat-blob' ou 'ls' respectivamente.  As versões do `fast-import` que não sejam compatíveis com o comando utilizado serão encerradas com uma mensagem.  Isso permite que o erro de importação encerre com uma mensagem clara, em vez de perder tempo na parte inicial de uma importação, antes que um comando não compatível seja detectado."

#. type: Labeled list
#: en/git-fast-import.txt:1174
#, no-wrap, priority:90
msgid "notes"
msgstr "notes"

#. type: Plain text
#: en/git-fast-import.txt:1179
#, priority:90
msgid "Require that the backend support the 'notemodify' (N)  subcommand to the 'commit' command.  Versions of fast-import not supporting notes will exit with a message indicating so."
msgstr "Exija que a estrutura seja compatível com o subcomando `notemodify` (N) com o comando `commit`.  As versões do `fast-import` que não sejam compatíveis com as anotações serão encerradas com uma mensagem."

#. type: Labeled list
#: en/git-fast-import.txt:1180
#, no-wrap, priority:90
msgid "done"
msgstr "done"

#. type: Plain text
#: en/git-fast-import.txt:1187
#, priority:90
msgid "Error out if the stream ends without a 'done' command.  Without this feature, errors causing the frontend to end abruptly at a convenient point in the stream can go undetected.  This may occur, for example, if an import front end dies in mid-operation without emitting SIGTERM or SIGKILL at its subordinate git fast-import instance."
msgstr "Indique um erro caso o fluxo termine snum comando 'done'.  Sem este recurso, os erros que fazem com que o front-end termine abruptamente num ponto conveniente no fluxo podem não ser detectados.  Isso pode ocorrer, por exemplo, caso um front end de importação morra no meio da operação sem emitir um `SIGTERM` ou um `SIGKILL` em sua instância subordinada do `git fast-import`."

#. type: Plain text
#: en/git-fast-import.txt:1194
#, priority:90
msgid "Processes the specified option so that git fast-import behaves in a way that suits the frontend's needs.  Note that options specified by the frontend are overridden by any options the user may specify to git fast-import itself."
msgstr "Processa a opção utilizada para que o `fast-import` do git se comporte de maneira que atenda às necessidades do front-end.  Observe que as opções utilizadas pelo front-end são substituídas por quaisquer opções que o usuário possa especificar para obter o próprio `fast-import`."

#. type: delimited block .
#: en/git-fast-import.txt:1197
#, no-wrap, priority:90
msgid "    'option' SP <option> LF\n"
msgstr "    'option' SP <opção> LF\n"

#. type: Plain text
#: en/git-fast-import.txt:1202
#, priority:90
msgid "The `<option>` part of the command may contain any of the options listed in the OPTIONS section that do not change import semantics, without the leading `--` and is treated in the same way."
msgstr "A parte `<opção>` do comando pode conter qualquer uma das opções listadas na seção OPTIONS que não alteram a semântica de importação, sem o `--` principal e são tratadas da mesma maneira."

#. type: Plain text
#: en/git-fast-import.txt:1206
#, priority:90
msgid "Option commands must be the first commands on the input (not counting feature commands), to give an option command after any non-option command is an error."
msgstr "Os comandos de opção devem ser os primeiros comandos na entrada (sem contar os comandos de recurso), para fornecer um comando de opção após um erro que não seja de opção."

#. type: Plain text
#: en/git-fast-import.txt:1209
#, priority:90
msgid "The following command-line options change import semantics and may therefore not be passed as option:"
msgstr "As seguintes opções de linha de comando alteram a semântica de importação e, portanto, não podem ser passadas como opção:"

#. type: Plain text
#: en/git-fast-import.txt:1214
#, priority:90
msgid "cat-blob-fd"
msgstr "cat-blob-fd"

#. type: Plain text
#: en/git-fast-import.txt:1220
#, priority:90
msgid "If the `done` feature is not in use, treated as if EOF was read.  This can be used to tell fast-import to finish early."
msgstr "Se o recurso `done` não estiver em uso, será tratado como se o `EOF` fosse lido.  Isso pode ser utilizado para dizer à importação rápida para terminar mais cedo."

#. type: Plain text
#: en/git-fast-import.txt:1224
#, priority:90
msgid "If the `--done` command-line option or `feature done` command is in use, the `done` command is mandatory and marks the end of the stream."
msgstr "Caso a opção de linha de comando `--done` ou o comando `feature done` estiver em uso, o comando `done` é obrigatório e marca o final do fluxo."

#. type: Title -
#: en/git-fast-import.txt:1226
#, no-wrap, priority:90
msgid "RESPONSES TO COMMANDS"
msgstr "RESPOSTAS AOS COMANDOS"

#. type: Plain text
#: en/git-fast-import.txt:1233
#, priority:90
msgid "New objects written by fast-import are not available immediately.  Most fast-import commands have no visible effect until the next checkpoint (or completion).  The frontend can send commands to fill fast-import's input pipe without worrying about how quickly they will take effect, which improves performance by simplifying scheduling."
msgstr "Os novos objetos gravados pelo `fast-import` que não estão disponíveis de forma imediata.  A maioria dos comandos `fast-import` não tem efeito visível até o próximo `checkpoint` (ou conclusão).  O frontend pode enviar os comandos para preencher o canal de entrada do `fast-import` sem se preocupar com a agilidade com que eles entrarão em vigor, o que melhora o desempenho ao simplificar o agendamento."

#. type: Plain text
#: en/git-fast-import.txt:1240
#, priority:90
msgid "For some frontends, though, it is useful to be able to read back data from the current repository as it is being updated (for example when the source material describes objects in terms of patches to be applied to previously imported objects).  This can be accomplished by connecting the frontend and fast-import via bidirectional pipes:"
msgstr "No entanto, para alguns front-end, é útil poder ler os dados do repositório atual à medida que estão sendo atualizados (quando o material de origem descreve objetos em termos de patches a serem aplicados a objetos importados anteriormente por exemplo).  Isso pode ser feito conectando o front-end e o `fast-import` por meio de tubos bidirecionais:"

#. type: delimited block =
#: en/git-fast-import.txt:1245
#, no-wrap, priority:90
msgid ""
"\tmkfifo fast-import-output\n"
"\tfrontend <fast-import-output |\n"
"\tgit fast-import >fast-import-output\n"
msgstr ""
"\tmkfifo fast-import-output\n"
"\tfrontend <fast-import-output |\n"
"\tgit fast-import >fast-import-output\n"

#. type: Plain text
#: en/git-fast-import.txt:1249
#, priority:90
msgid "A frontend set up this way can use `progress`, `get-mark`, `ls`, and `cat-blob` commands to read information from the import in progress."
msgstr "Um front-end configurado desta maneira pode usar os comandos `progress`, `get-mark`, `ls` e `cat-blob` para ler as informações das importações em andamento."

#. type: Plain text
#: en/git-fast-import.txt:1253
#, priority:90
msgid "To avoid deadlock, such frontends must completely consume any pending output from `progress`, `ls`, `get-mark`, and `cat-blob` before performing writes to fast-import that might block."
msgstr "Para evitar um impasse, tais front-ends devem consumir completamente quaisquer saída pendente que for gerada com `progress`, `ls`, `get-mark` e `cat-blob` antes de realizar as escritas que o `fast-import` possa bloquear."

#. type: Title -
#: en/git-fast-import.txt:1255
#, no-wrap, priority:90
msgid "CRASH REPORTS"
msgstr "RELATÓRIOS DE CRASH"

#. type: Plain text
#: en/git-fast-import.txt:1261
#, priority:90
msgid "If fast-import is supplied invalid input it will terminate with a non-zero exit status and create a crash report in the top level of the Git repository it was importing into.  Crash reports contain a snapshot of the internal fast-import state as well as the most recent commands that lead up to the crash."
msgstr "Caso uma entrada inválida seja utilizada na entrada do `fast-import`, ele terminará com um status de saída diferente de zero e criará um relatório de falha no topo do repositório Git de onde estava sendo importado.  Os relatórios de falha contêm um instantâneo da condição interna do `fast-import`, bem como os comandos mais recentes que levaram à falha."

#. type: Plain text
#: en/git-fast-import.txt:1268
#, priority:90
msgid "All recent commands (including stream comments, file changes and progress commands) are shown in the command history within the crash report, but raw file data and commit messages are excluded from the crash report.  This exclusion saves space within the report file and reduces the amount of buffering that fast-import must perform during execution."
msgstr "Todos os comandos recentes (incluindo os comentários do fluxo, alterações do arquivo e comandos de progresso) são exibidos no histórico de comandos no relatório, mas os dados brutos do arquivo e as mensagens dos commits são excluídos.  Essa exclusão economiza espaço no arquivo de relatório e reduz a quantidade de memória intermédia que a importação rápida deve realizar durante a execução."

#. type: Plain text
#: en/git-fast-import.txt:1276
#, priority:90
msgid "After writing a crash report fast-import will close the current packfile and export the marks table.  This allows the frontend developer to inspect the repository state and resume the import from the point where it crashed.  The modified branches and tags are not updated during a crash, as the import did not complete successfully.  Branch and tag information can be found in the crash report and must be applied manually if the update is needed."
msgstr "Depois de escrever um relatório, o `fast-import` fechará o pacote atual e exportará a tabela de marcação.  Isso permite que o desenvolvedor front-end inspecione a condição do repositório e retome a importação a partir do ponto em que ele travou.  As ramificações e tags modificadas não são atualizados durante uma falha, pois a importação não foi concluída com êxito.  As informações do ramo e marcação podem ser encontrados no relatório da falha e devem ser aplicadas manualmente caso a atualização seja necessária."

#. type: Plain text
#: en/git-fast-import.txt:1278
#, priority:90
msgid "An example crash:"
msgstr "Um exemplo de falha:"

#. type: delimited block =
#: en/git-fast-import.txt:1294
#, no-wrap, priority:90
msgid ""
"\t$ cat >in <<END_OF_INPUT\n"
"\t# my very first test commit\n"
"\tcommit refs/heads/master\n"
"\tcommitter Shawn O. Pearce <spearce> 19283 -0400\n"
"\t# who is that guy anyway?\n"
"\tdata <<EOF\n"
"\tthis is my commit\n"
"\tEOF\n"
"\tM 644 inline .gitignore\n"
"\tdata <<EOF\n"
"\t.gitignore\n"
"\tEOF\n"
"\tM 777 inline bob\n"
"\tEND_OF_INPUT\n"
msgstr ""
"\t$ cat >in <<END_OF_INPUT\n"
"\t# my very first test commit\n"
"\tcommit refs/heads/master\n"
"\tcommitter Shawn O. Pearce <spearce> 19283 -0400\n"
"\t# who is that guy anyway?\n"
"\tdata <<EOF\n"
"\tthis is my commit\n"
"\tEOF\n"
"\tM 644 inline .gitignore\n"
"\tdata <<EOF\n"
"\t.gitignore\n"
"\tEOF\n"
"\tM 777 inline bob\n"
"\tEND_OF_INPUT\n"

#. type: delimited block =
#: en/git-fast-import.txt:1298
#, no-wrap, priority:90
msgid ""
"\t$ git fast-import <in\n"
"\tfatal: Corrupt mode: M 777 inline bob\n"
"\tfast-import: dumping crash report to .git/fast_import_crash_8434\n"
msgstr ""
"\t$ git fast-import <in\n"
"\tfatal: Corrupt mode: M 777 inline bob\n"
"\tfast-import: dumping crash report to .git/fast_import_crash_8434\n"

#. type: delimited block =
#: en/git-fast-import.txt:1304
#, no-wrap, priority:90
msgid ""
"\t$ cat .git/fast_import_crash_8434\n"
"\tfast-import crash report:\n"
"\t    fast-import process: 8434\n"
"\t    parent process     : 1391\n"
"\t    at Sat Sep 1 00:58:12 2007\n"
msgstr ""
"\t$ cat .git/fast_import_crash_8434\n"
"\tfast-import crash report:\n"
"\t    fast-import process: 8434\n"
"\t    parent process     : 1391\n"
"\t    at Sat Sep 1 00:58:12 2007\n"

#. type: delimited block =
#: en/git-fast-import.txt:1306
#, no-wrap, priority:90
msgid "\tfatal: Corrupt mode: M 777 inline bob\n"
msgstr "\tfatal: Corrupt mode: M 777 inline bob\n"

#. type: delimited block =
#: en/git-fast-import.txt:1316
#, no-wrap, priority:90
msgid ""
"\tMost Recent Commands Before Crash\n"
"\t---------------------------------\n"
"\t  # my very first test commit\n"
"\t  commit refs/heads/master\n"
"\t  committer Shawn O. Pearce <spearce> 19283 -0400\n"
"\t  # who is that guy anyway?\n"
"\t  data <<EOF\n"
"\t  M 644 inline .gitignore\n"
"\t  data <<EOF\n"
msgstr ""
"\tMost Recent Commands Before Crash\n"
"\t---------------------------------\n"
"\t  # my very first test commit\n"
"\t  commit refs/heads/master\n"
"\t  committer Shawn O. Pearce <spearce> 19283 -0400\n"
"\t  # who is that guy anyway?\n"
"\t  data <<EOF\n"
"\t  M 644 inline .gitignore\n"
"\t  data <<EOF\n"

#. type: delimited block =
#: en/git-fast-import.txt:1317
#, no-wrap, priority:90
msgid "M 777 inline bob\n"
msgstr "M 777 inline bob\n"

#. type: delimited block =
#: en/git-fast-import.txt:1321
#, no-wrap, priority:90
msgid ""
"Active Branch LRU\n"
"-----------------\n"
"active_branches = 1 cur, 5 max\n"
msgstr ""
"Ramo Ativo LRU\n"
"-----------------\n"
"active_branches = 1 cur, 5 max\n"

#. type: delimited block =
#: en/git-fast-import.txt:1324
#, priority:90
msgid "pos clock name ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
msgstr "pos clock name ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

#. type: delimited block =
#: en/git-fast-import.txt:1325
#, priority:90
msgid "0 refs/heads/master"
msgstr "0 refs/heads/master"

#. type: delimited block =
#: en/git-fast-import.txt:1335
#, no-wrap, priority:90
msgid ""
"Inactive Branches\n"
"-----------------\n"
"refs/heads/master:\n"
"status      : active loaded dirty\n"
"tip commit  : 0000000000000000000000000000000000000000\n"
"old tree    : 0000000000000000000000000000000000000000\n"
"cur tree    : 0000000000000000000000000000000000000000\n"
"commit clock: 0\n"
"last pack   :\n"
msgstr ""
"Inactive Branches\n"
"-----------------\n"
"refs/heads/master:\n"
"status      : active loaded dirty\n"
"tip commit  : 0000000000000000000000000000000000000000\n"
"old tree    : 0000000000000000000000000000000000000000\n"
"cur tree    : 0000000000000000000000000000000000000000\n"
"commit clock: 0\n"
"last pack   :\n"

#. type: delimited block =
#: en/git-fast-import.txt:1339
#, priority:90
msgid "------------------- END OF CRASH REPORT"
msgstr "------------------- END OF CRASH REPORT"

#. type: Title -
#: en/git-fast-import.txt:1342
#, no-wrap, priority:90
msgid "TIPS AND TRICKS"
msgstr "DICAS E TRUQUES"

#. type: Plain text
#: en/git-fast-import.txt:1345
#, priority:90
msgid "The following tips and tricks have been collected from various users of fast-import, and are offered here as suggestions."
msgstr "As dicas e truques a seguir foram coletadas de vários usuários do `fast-import` e são oferecidas aqui apenas como sugestões."

#. type: Title ~
#: en/git-fast-import.txt:1347
#, no-wrap, priority:90
msgid "Use One Mark Per Commit"
msgstr "Utilize uma Marcação por Commit"

#. type: Plain text
#: en/git-fast-import.txt:1355
#, priority:90
msgid "When doing a repository conversion, use a unique mark per commit (`mark :<n>`) and supply the --export-marks option on the command line.  fast-import will dump a file which lists every mark and the Git object SHA-1 that corresponds to it.  If the frontend can tie the marks back to the source repository, it is easy to verify the accuracy and completeness of the import by comparing each Git commit to the corresponding source revision."
msgstr "Ao fazer uma conversão de repositório, utilize uma marcação única por commit (`mark :<n>`) e forneça a opção `--export-marks` na linha de comando.  O `fast-import` despeja um arquivo que lista todas as marcações e o objeto Git SHA-1 que coincida com ela.  Se o front-end puder vincular as marcações ao repositório de origem, é fácil verificar a precisão e a integridade da importação comparando cada commit do Git com a revisão de origem coincidente."

#. type: Plain text
#: en/git-fast-import.txt:1359
#, priority:90
msgid "Coming from a system such as Perforce or Subversion this should be quite simple, as the fast-import mark can also be the Perforce changeset number or the Subversion revision number."
msgstr "Vindo de um sistema como o \"Perforce\" ou o \"Subversion\", isso deve ser bastante simples, pois a marcação do `fast-import` também pode ser o número do conjunto de alterações do \"Perforce\" ou o número da revisão do \"Subversion\"."

#. type: Title ~
#: en/git-fast-import.txt:1361
#, no-wrap, priority:90
msgid "Freely Skip Around Branches"
msgstr "Ir Livremente em Torno dos Ramos"

#. type: Plain text
#: en/git-fast-import.txt:1366
#, priority:90
msgid "Don't bother trying to optimize the frontend to stick to one branch at a time during an import.  Although doing so might be slightly faster for fast-import, it tends to increase the complexity of the frontend code considerably."
msgstr "Não tente otimizar o front-end para manter uma ramificação por vez durante uma importação.  Embora isso possa ser um pouco mais rápido para o `fast-import`, ele tende a aumentar consideravelmente a complexidade do código do front-end."

#. type: Plain text
#: en/git-fast-import.txt:1370
#, priority:90
msgid "The branch LRU builtin to fast-import tends to behave very well, and the cost of activating an inactive branch is so low that bouncing around between branches has virtually no impact on import performance."
msgstr "O LRU do ramo incorporado ao `fast-import` tende a se comportar muito bem e o custo de ativar uma ramo inativo é tão baixo que o movimento entre os ramos praticamente não tem impacto no desempenho da importação."

#. type: Title ~
#: en/git-fast-import.txt:1372
#, no-wrap, priority:90
msgid "Handling Renames"
msgstr "Manipulando Renomeações"

#. type: Plain text
#: en/git-fast-import.txt:1377
#, priority:90
msgid "When importing a renamed file or directory, simply delete the old name(s) and modify the new name(s) during the corresponding commit.  Git performs rename detection after-the-fact, rather than explicitly during a commit."
msgstr "Ao importar um arquivo ou diretório renomeado, simplesmente exclua os nomes antigos e modifique os novos nomes durante o commit correspondente.  O Git executa a detecção de renomeação após o fato, em vez de explicitamente detectá-lo durante um commit."

#. type: Title ~
#: en/git-fast-import.txt:1379
#, no-wrap, priority:90
msgid "Use Tag Fixup Branches"
msgstr "Utilizando Ramificações para a Correção das Tags"

#. type: Plain text
#: en/git-fast-import.txt:1383
#, priority:90
msgid "Some other SCM systems let the user create a tag from multiple files which are not from the same commit/changeset.  Or to create tags which are a subset of the files available in the repository."
msgstr "Alguns outros sistemas SCM permitem ao usuário criar uma tag a partir de vários arquivos que não pertencem ao mesmo commit/changeset.  Ou para criar as tags que são um subconjunto dos arquivos disponíveis no repositório."

#. type: Plain text
#: en/git-fast-import.txt:1390
#, priority:90
msgid "Importing these tags as-is in Git is impossible without making at least one commit which ``fixes up'' the files to match the content of the tag.  Use fast-import's `reset` command to reset a dummy branch outside of your normal branch space to the base commit for the tag, then commit one or more file fixup commits, and finally tag the dummy branch."
msgstr "A importação dessas tags como está no Git é impossível sem qe seja feito pelo menos um commit que ``corrija'' os arquivos para coincidir com o conteúdo da tag.  Utilize o comando `reset` do `fast-import` para redefinir uma ramificação fantasia fora do seu ramo normal para um commit base para a tag, depois confirme um ou mais correções dos arquivos de commits e por fim, identifique a ramificação fantasia."

#. type: Plain text
#: en/git-fast-import.txt:1396
#, priority:90
msgid "For example since all normal branches are stored under `refs/heads/` name the tag fixup branch `TAG_FIXUP`.  This way it is impossible for the fixup branch used by the importer to have namespace conflicts with real branches imported from the source (the name `TAG_FIXUP` is not `refs/heads/TAG_FIXUP`)."
msgstr "Uma vez que todas as ramificações normais são armazenadas em `refs/heads/`, nomeie a tag de manutenção como `TAG_FIXUP` por exemplo.  Dessa forma, é impossível que a ramificação de correção utilizada pelo importador tenha os conflitos do espaço de nomes com as ramificações reais importadas da origem (o nome `TAG_FIXUP` não é `refs/heads/TAG_FIXUP`)."

#. type: Plain text
#: en/git-fast-import.txt:1402
#, priority:90
msgid "When committing fixups, consider using `merge` to connect the commit(s) which are supplying file revisions to the fixup branch.  Doing so will allow tools such as 'git blame' to track through the real commit history and properly annotate the source files."
msgstr "Ao fazer os commits das correções, considere o uso de `merge` para conectar os commits para fornecer as revisões dos arquivos ao ramo de correção.  Isso permitirá que ferramentas como o 'git blame' rastreiem o histórico real do commit e anotem adequadamente os arquivos de origem."

#. type: Plain text
#: en/git-fast-import.txt:1405
#, priority:90
msgid "After fast-import terminates the frontend will need to do `rm .git/TAG_FIXUP` to remove the dummy branch."
msgstr "Quando o `fast-import` encerrar, o front-end precisará executar o comando `rm .git/TAG_FIXUP` para remover a ramificação fantasia."

#. type: Title ~
#: en/git-fast-import.txt:1407
#, no-wrap, priority:90
msgid "Import Now, Repack Later"
msgstr "Importe Agora, Reembale Depois"

#. type: Plain text
#: en/git-fast-import.txt:1411
#, priority:90
msgid "As soon as fast-import completes the Git repository is completely valid and ready for use.  Typically this takes only a very short time, even for considerably large projects (100,000+ commits)."
msgstr "Logo que o `fast-import` conclua, o repositório Git estará completamente válido e pronto para uso.  Normalmente, o processo consome muito pouco tempo, mesmo para projetos consideravelmente grandes (com mais de 100.000 commits)."

#. type: Plain text
#: en/git-fast-import.txt:1418
#, priority:90
msgid "However repacking the repository is necessary to improve data locality and access performance.  It can also take hours on extremely large projects (especially if -f and a large --window parameter is used).  Since repacking is safe to run alongside readers and writers, run the repack in the background and let it finish when it finishes.  There is no reason to wait to explore your new Git project!"
msgstr "No entanto, é necessário reembalar o repositório para melhorar a localidade dos dados e melhorar o desempenho.  Projetos extremamente grandes pode levar horas (especialmente se `-f` e um parâmetro `--window` grande for utilizado).  Como a reembalagem é segura para ser executada ao lado de leitores e escritores, execute a re-embalagem em segundo plano e deixe acabar quando finalizar.  Não há motivo para esperar a exploração do seu novo projeto Git!"

#. type: Plain text
#: en/git-fast-import.txt:1423
#, priority:90
msgid "If you choose to wait for the repack, don't try to run benchmarks or performance tests until repacking is completed.  fast-import outputs suboptimal packfiles that are simply never seen in real use situations."
msgstr "Caso opte por aguardar o reembalo, não tente executar benchmarks ou testes de desempenho até que o processo termine.  o `fast-import` gera arquivos de pacotes otimizados que simplesmente nunca são vistos em situações de uso real."

#. type: Title ~
#: en/git-fast-import.txt:1425
#, no-wrap, priority:90
msgid "Repacking Historical Data"
msgstr "Reempacotando Dados Históricos"

#. type: Plain text
#: en/git-fast-import.txt:1432
#, priority:90
msgid "If you are repacking very old imported data (e.g. older than the last year), consider expending some extra CPU time and supplying --window=50 (or higher) when you run 'git repack'.  This will take longer, but will also produce a smaller packfile.  You only need to expend the effort once, and everyone using your project will benefit from the smaller repository."
msgstr "Se você estiver reembalando dados importados muito antigos (por exemplo, mais antigos que no ano passado), considere gastar algum tempo extra da CPU e fornecer --window = 50 (ou superior) ao executar o 'git repack'.  Isso levará mais tempo, mas também produzirá um pacote menor.  Você só precisa perder tempo uma vez e todos os usuários do seu projeto se beneficiarão do repositório menor."

#. type: Title ~
#: en/git-fast-import.txt:1434
#, no-wrap, priority:90
msgid "Include Some Progress Messages"
msgstr "Incluir Algumas Mensagens de Progresso"

#. type: Plain text
#: en/git-fast-import.txt:1441
#, priority:90
msgid "Every once in a while have your frontend emit a `progress` message to fast-import.  The contents of the messages are entirely free-form, so one suggestion would be to output the current month and year each time the current commit date moves into the next month.  Your users will feel better knowing how much of the data stream has been processed."
msgstr "Para importar rapidamente, de vez em quando o seu front-end emite uma mensagem de `progresso`.  O conteúdo das mensagens é totalmente livre, portanto, uma sugestão seria gerar a informação do mês e o ano atual cada vez que a data do commit atual passar para o próximo mês.  Os seus usuários se sentirão melhor ao saber quanto do fluxo de dados foi processado."

#. type: Title -
#: en/git-fast-import.txt:1444
#, no-wrap, priority:90
msgid "PACKFILE OPTIMIZATION"
msgstr "OTIMIZAÇÃO DOS PACOTES"

#. type: Plain text
#: en/git-fast-import.txt:1450
#, priority:90
msgid "When packing a blob fast-import always attempts to deltify against the last blob written.  Unless specifically arranged for by the frontend, this will probably not be a prior version of the same file, so the generated delta will not be the smallest possible.  The resulting packfile will be compressed, but will not be optimal."
msgstr "Ao compactar uma bolha, o `fast-import` sempre tenta \"deltificar\" a última bolha gravada.  A menos que seja especificamente organizado pelo front-end, essa provavelmente não será uma versão anterior do mesmo arquivo, portanto o delta gerado não será o menor possível.  O pacote do arquivo resultante será compactado, mas não será otimizado."

#. type: Plain text
#: en/git-fast-import.txt:1458
#, priority:90
msgid "Frontends which have efficient access to all revisions of a single file (for example reading an RCS/CVS ,v file) can choose to supply all revisions of that file as a sequence of consecutive `blob` commands.  This allows fast-import to deltify the different file revisions against each other, saving space in the final packfile.  Marks can be used to later identify individual file revisions during a sequence of `commit` commands."
msgstr "Os front-ends que têm acesso eficiente a todas as revisões de um único arquivo (lendo um arquivo RCS/CVS, v por exemplo) podem optar por fornecer todas as revisões desse arquivo como uma sequência de comandos consecutivos do `blob` (bolha).  Isso permite que o `fast-import` \"deltifique\" as diferentes revisões dos arquivos, economizando espaço no arquivo do pacote final.  As Marcações podem ser utilizadas para posterior identificação das revisões individuais dos arquivos durante uma sequência de comandos `commit`."

#. type: Plain text
#: en/git-fast-import.txt:1465
#, priority:90
msgid "The packfile(s) created by fast-import do not encourage good disk access patterns.  This is caused by fast-import writing the data in the order it is received on standard input, while Git typically organizes data within packfiles to make the most recent (current tip) data appear before historical data.  Git also clusters commits together, speeding up revision traversal through better cache locality."
msgstr "Os arquivos de pacotes criados pelo `fast-import` não incentivam bons padrões de acesso ao disco.  Isso é cautilizado pela gravação dos dados do `fast-import` na ordem em que são recebidos na entrada padrão, enquanto o Git normalmente organiza os dados nos pacotes dos arquivos para fazer com que os dados mais recentes (dica atual) apareçam antes dos dados históricos.  O Git também agrupa os commits acelerando o percurso de revisão através de uma melhor localidade do cache."

#. type: Plain text
#: en/git-fast-import.txt:1472
#, priority:90
msgid "For this reason it is strongly recommended that users repack the repository with `git repack -a -d` after fast-import completes, allowing Git to reorganize the packfiles for faster data access.  If blob deltas are suboptimal (see above) then also adding the `-f` option to force recomputation of all deltas can significantly reduce the final packfile size (30-50% smaller can be quite typical)."
msgstr "Por esse motivo é altamente recomendável que os usuários reembalem o repositório com o comando `git repack -a -d` após a conclusão do `fast-import`, permitindo que o Git reorganize os pacotes dos arquivos para um acesso mais rápido aos dados.  Caso os deltas da bolha estejam abaixo do ideal (veja acima), a adição da opção `-f` para impor que todos os deltas sejam recalculados podendo reduzir significativamente o tamanho final do pacote do arquivo (30-50% menor pode ser bastante comum)."

#. type: Plain text
#: en/git-fast-import.txt:1480
#, priority:90
msgid "Instead of running `git repack` you can also run `git gc --aggressive`, which will also optimize other things after an import (e.g. pack loose refs). As noted in the \"AGGRESSIVE\" section in linkgit:git-gc[1] the `--aggressive` option will find new deltas with the `-f` option to linkgit:git-repack[1]. For the reasons elaborated on above using `--aggressive` after a fast-import is one of the few cases where it's known to be worthwhile."
msgstr "Em vez de executar o `git repack`, é possível também executar o `git gc --aggressive`, que também otimizará outras coisas após uma importação (refazer os pacotes refs soltos por exemplo). Como observado na seção \"AGGRESSIVE\" no linkgit:git-gc[1] a opção `--aggressive` encontrará os novos deltas com a opção `-f` para linkgit:git-repack[1]. Pelas razões descritas acima, a utilização da opção `--aggressive` após uma importação rápida, este é um dos poucos casos em que se sabe que vale a pena ser feito."

#. type: Title -
#: en/git-fast-import.txt:1482
#, no-wrap, priority:90
msgid "MEMORY UTILIZATION"
msgstr "UTILIZAÇÃO DE MEMÓRIA"

#. type: Plain text
#: en/git-fast-import.txt:1488
#, priority:90
msgid "There are a number of factors which affect how much memory fast-import requires to perform an import.  Like critical sections of core Git, fast-import uses its own memory allocators to amortize any overheads associated with malloc.  In practice fast-import tends to amortize any malloc overheads to 0, due to its use of large block allocations."
msgstr "Há uma quantidade de fatores que afetam a quantidade de memória consumida pelo `fast-import`  durante a execução de uma importação.  Como as seções críticas do Git principal, o `fast-import` usa os seus próprios alocadores de memória para amortizar o consumo geral associadas ao \"malloc\".  Na prática, o `fast-import` tende a amortizar o consumo geral do malloc para 0, devido ao uso de grandes alocações dos blocos."

#. type: Title ~
#: en/git-fast-import.txt:1490
#, no-wrap, priority:90
msgid "per object"
msgstr "por objeto"

#. type: Plain text
#: en/git-fast-import.txt:1497
#, priority:90
msgid "fast-import maintains an in-memory structure for every object written in this execution.  On a 32 bit system the structure is 32 bytes, on a 64 bit system the structure is 40 bytes (due to the larger pointer sizes).  Objects in the table are not deallocated until fast-import terminates.  Importing 2 million objects on a 32 bit system will require approximately 64 MiB of memory."
msgstr "O `fast-import` mantém uma estrutura na memória para todos os objetos gravados nesta execução.  Em um sistema de 32 bits a estrutura é de 32 bytes; num sistema de 64 bits a estrutura é de 40 bytes (devido aos tamanhos maiores do ponteiro).  Os objetos na tabela não são desalocados até que o `fast-import` termine.  A importação de 2 milhões de objetos num sistema de 32 bits exigirá aproximadamente 64 MiB de memória."

#. type: Plain text
#: en/git-fast-import.txt:1503
#, priority:90
msgid "The object table is actually a hashtable keyed on the object name (the unique SHA-1).  This storage configuration allows fast-import to reuse an existing or already written object and avoid writing duplicates to the output packfile.  Duplicate blobs are surprisingly common in an import, typically due to branch merges in the source."
msgstr "A tabela de objetos é na verdade uma \"hashtable\" (tabela hash) codificada no nome do objeto com o SHA-1.  Essa configuração de armazenamento permite que o `fast-import` reutilize um objeto existente ou já gravado e evite gravar duplicatas no saída do arquivo de pacote.  Em uma importação, as bolhas duplicadas são muito comuns, geralmente devido a mesclagem do ramo na origem."

#. type: Title ~
#: en/git-fast-import.txt:1505
#, no-wrap, priority:90
msgid "per mark"
msgstr "por marcação"

#. type: Plain text
#: en/git-fast-import.txt:1511
#, priority:90
msgid "Marks are stored in a sparse array, using 1 pointer (4 bytes or 8 bytes, depending on pointer size) per mark.  Although the array is sparse, frontends are still strongly encouraged to use marks between 1 and n, where n is the total number of marks required for this import."
msgstr "As marcações são armazenadas numa origem esparsa, utilizando 1 ponteiro (4 bytes ou 8 bytes, dependendo do tamanho do ponteiro) por marcação.  Embora a origem seja escassa, os front-end ainda são fortemente incentivados a usar marcas entre 1 e n, onde n é a quantidade total de marcações necessárias para essa importação."

#. type: Title ~
#: en/git-fast-import.txt:1513
#, no-wrap, priority:90
msgid "per branch"
msgstr "por ramo"

#. type: Plain text
#: en/git-fast-import.txt:1516
#, priority:90
msgid "Branches are classified as active and inactive.  The memory usage of the two classes is significantly different."
msgstr "Os ramos são classificados como ativos e inativos.  O uso de memória das duas classes é significativamente diferente."

#. type: Plain text
#: en/git-fast-import.txt:1522
#, priority:90
msgid "Inactive branches are stored in a structure which uses 96 or 120 bytes (32 bit or 64 bit systems, respectively), plus the length of the branch name (typically under 200 bytes), per branch.  fast-import will easily handle as many as 10,000 inactive branches in under 2 MiB of memory."
msgstr "As ramificações inativas são armazenadas numa estrutura que usa entre 96 ou 120 bytes (sistemas de 32 ou 64 bits, respectivamente), mais o comprimento do nome do ramo (normalmente com menos de 200 bytes), por ramificação.  O `fast-import` processa facilmente até 10.000 ramificações inativas com menos de 2 MiB de memória."

#. type: Plain text
#: en/git-fast-import.txt:1529
#, priority:90
msgid "Active branches have the same overhead as inactive branches, but also contain copies of every tree that has been recently modified on that branch.  If subtree `include` has not been modified since the branch became active, its contents will not be loaded into memory, but if subtree `src` has been modified by a commit since the branch became active, then its contents will be loaded in memory."
msgstr "As ramificações ativas têm a mesma sobrecarga das ramificações inativas, mas também contêm as cópias de todas as árvores que foram modificadas recentemente nesta ramificação.  Se a subárvore `include` não tenha sido modificada, desde o momento que a ramificação se tornou ativa, o seu conteúdo não será carregado na memória, mas o seu conteúdo será carregado na memória caso a subárvore `src` tenha sido modificada por um commit."

#. type: Plain text
#: en/git-fast-import.txt:1533
#, priority:90
msgid "As active branches store metadata about the files contained on that branch, their in-memory storage size can grow to a considerable size (see below)."
msgstr "À medida que as ramificações ativas armazenam metadados sobre os arquivos existentes nessa ramificação, o tamanho do armazenamento na memória pode aumentar consideravelmente (veja abaixo)."

#. type: Plain text
#: en/git-fast-import.txt:1538
#, priority:90
msgid "fast-import automatically moves active branches to inactive status based on a simple least-recently-used algorithm.  The LRU chain is updated on each `commit` command.  The maximum number of active branches can be increased or decreased on the command line with --active-branches=."
msgstr "Com base num algoritmo simples, o `fast-import` move automaticamente as ramificações ativas para a condição inativa utilizando um algorítimo simples.  A cadeia LRU é atualizada a cada comando `commit`.  A quantidade máxima de ramificações ativas pode se aumentado ou diminuído na linha de comando com a opção `--active-branches=`."

#. type: Title ~
#: en/git-fast-import.txt:1540
#, no-wrap, priority:90
msgid "per active tree"
msgstr "por árvore ativa"

#. type: Plain text
#: en/git-fast-import.txt:1545
#, priority:90
msgid "Trees (aka directories) use just 12 bytes of memory on top of the memory required for their entries (see ``per active file'' below).  The cost of a tree is virtually 0, as its overhead amortizes out over the individual file entries."
msgstr "As árvores (também conhecidas como diretórios) usam apenas 12 bytes de memória no topo da memória necessária para as suas entradas (consulte ``por arquivo ativo'' abaixo).  O custo de uma árvore é praticamente 0, pois sua sobrecarga é amortizada pelas entradas de arquivo individuais."

#. type: Title ~
#: en/git-fast-import.txt:1547
#, no-wrap, priority:90
msgid "per active file entry"
msgstr "por entrada de arquivo ativa"

#. type: Plain text
#: en/git-fast-import.txt:1553
#, priority:90
msgid "Files (and pointers to subtrees) within active trees require 52 or 64 bytes (32/64 bit platforms) per entry.  To conserve space, file and tree names are pooled in a common string table, allowing the filename ``Makefile'' to use just 16 bytes (after including the string header overhead) no matter how many times it occurs within the project."
msgstr "Os arquivos (e os ponteiros para as subárvores) nas árvores ativas requerem 52 ou 64 bytes (plataformas de 32/64 bits) por entrada.  Para economizar espaço, os nomes dos arquivos e as árvores são agrupados numa tabela de cadeias comuns, permitindo que o nome do arquivo ``Makefile'' utilize apenas 16 bytes (após incluir a sobrecarga do cabeçalho da cadeia), não importa quantas vezes isso ocorra no projeto."

#. type: Plain text
#: en/git-fast-import.txt:1558
#, priority:90
msgid "The active branch LRU, when coupled with the filename string pool and lazy loading of subtrees, allows fast-import to efficiently import projects with 2,000+ branches and 45,114+ files in a very limited memory footprint (less than 2.7 MiB per active branch)."
msgstr "O LRU do ramo ativo, quando associado ao conjunto da cadeia de caracteres do nome do arquivo e ao carregamento lento das subárvores, permite que a eficiência da importação rápida dos projetos com mais de 2.000 ramificações e mais de 45.114 arquivos num espaço de memória muito limitado (menos de 2,7 MiB por ramo ativo)."

#. type: Title -
#: en/git-fast-import.txt:1560
#, no-wrap, priority:90
msgid "SIGNALS"
msgstr "SINAIS"

#. type: Plain text
#: en/git-fast-import.txt:1566
#, priority:90
msgid "Sending *SIGUSR1* to the 'git fast-import' process ends the current packfile early, simulating a `checkpoint` command.  The impatient operator can use this facility to peek at the objects and refs from an import in progress, at the cost of some added running time and worse compression."
msgstr "Enviar um *SIGUSR1* para o processo 'git fast-import' encerra antes o arquivo do pacote atual, simulando um comando `checkpoint`.  O operador mais impaciente pode usar esse recurso para espiar os objetos e as referências de uma importação em andamento, ao custo de um tempo de execução adicional e de uma pior compactação."

#. type: Title =
#: en/git-fetch-pack.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-fetch-pack(1)"
msgstr "git-fetch-pack(1)"

#. type: Plain text
#: en/git-fetch-pack.txt:7
#, priority:90
msgid "git-fetch-pack - Receive missing objects from another repository"
msgstr "git-fetch-pack - Recebe os objetos ausentes vindos de um outro repositório"

#. type: Plain text
#: en/git-fetch-pack.txt:16
#, ignore-ellipsis, no-wrap, priority:90
msgid ""
"'git fetch-pack' [--all] [--quiet|-q] [--keep|-k] [--thin] [--include-tag]\n"
"\t[--upload-pack=<git-upload-pack>]\n"
"\t[--depth=<n>] [--no-progress]\n"
"\t[-v] <repository> [<refs>...]\n"
msgstr ""
"'git fetch-pack' [--all] [--quiet|-q] [--keep|-k] [--thin] [--include-tag]\n"
"\t[--upload-pack=<pacote-de-upload-do-git>]\n"
"\t[--depth=<n>] [--no-progress]\n"
"\t[-v] <repositório> [<refs>...]\n"

#. type: Plain text
#: en/git-fetch-pack.txt:21
#, priority:90
msgid "Usually you would want to use 'git fetch', which is a higher level wrapper of this command, instead."
msgstr "No lugar utilize 'git fetch' que é um wrapper de maior hierarquia deste comando."

#. type: Plain text
#: en/git-fetch-pack.txt:27
#, priority:90
msgid "Invokes 'git-upload-pack' on a possibly remote repository and asks it to send objects missing from this repository, to update the named heads.  The list of commits available locally is found out by scanning the local refs/ hierarchy and sent to 'git-upload-pack' running on the other end."
msgstr "Invoca o 'git-upload-pack' num repositório possivelmente remoto e solicita que ele envie os objetos autilizentes deste repositório, para atualizar determinados `heads`.  A lista dos commits disponíveis localmente é descoberta examinando os 'refs/' da hierarquia local e enviada para o 'git-upload-pack' durante a execução na outra extremidade."

#. type: Plain text
#: en/git-fetch-pack.txt:31
#, priority:90
msgid "This command degenerates to download everything to complete the asked refs from the remote side when the local side does not have a common ancestor commit."
msgstr "Este comando deteriora durante o download de tudo para concluir os `refs` solicitados do lado remoto quando o lado local não possui um commit com um ancestral comum."

#. type: Plain text
#: en/git-fetch-pack.txt:37
#, priority:90
msgid "Fetch all remote refs."
msgstr "Busque todas os `refs` remotos."

#. type: Plain text
#: en/git-fetch-pack.txt:43 en/git-send-pack.txt:46
#, priority:90
msgid "Take the list of refs from stdin, one per line. If there are refs specified on the command line in addition to this option, then the refs from stdin are processed after those on the command line."
msgstr "Pegue a lista dos `refs` do stdin, um por linha. Caso haja `refs` utilizados na linha de comando, além desta opção, os `refs` do stdin serão processados após as da linha de comando."

#. type: Plain text
#: en/git-fetch-pack.txt:47 en/git-send-pack.txt:50
#, priority:90
msgid "If `--stateless-rpc` is specified together with this option then the list of refs must be in packet format (pkt-line). Each ref must be in a separate packet, and the list must end with a flush packet."
msgstr "Caso `--stateless-rpc` seja utilizado junto com esta opção, a lista de referências deverá estar no formato do pacote (linha-pkt). Cada `ref` deve estar num pacote separado e a lista deve terminar com um pacote liberado."

#. type: Plain text
#: en/git-fetch-pack.txt:52
#, priority:90
msgid "Pass `-q` flag to 'git unpack-objects'; this makes the cloning process less verbose."
msgstr "Passe o flag `-q` para o 'git unpack-objects'; isso torna o processo de clonagem menos detalhado."

#. type: Plain text
#: en/git-fetch-pack.txt:59
#, priority:90
msgid "Do not invoke 'git unpack-objects' on received data, but create a single packfile out of it instead, and store it in the object database. If provided twice then the pack is locked against repacking."
msgstr "Não invoque o 'git unpack-objects' nos dados recebidos, porém crie um único arquivo do pacote a partir dele e armazene-o no banco de dados do objeto. Caso seja utilizado duas vezes, o pacote será bloqueado contra a reembalagem."

#. type: Labeled list
#: en/git-fetch-pack.txt:60 en/git-pack-objects.txt:250 en/git-send-pack.txt:64
#, ignore-same, no-wrap, priority:100
msgid "--thin"
msgstr "--thin"

#. type: Plain text
#: en/git-fetch-pack.txt:63
#, priority:90
msgid "Fetch a \"thin\" pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic."
msgstr "Busque um pacote \"thin\", que registra os objetos num formato \"deltificado\" com base nos objetos não inclusos no pacote para reduzir o tráfego de rede."

#. type: Labeled list
#: en/git-fetch-pack.txt:64 en/git-pack-objects.txt:84
#, ignore-same, no-wrap, priority:100
msgid "--include-tag"
msgstr "--include-tag"

#. type: Plain text
#: en/git-fetch-pack.txt:69
#, priority:90
msgid "If the remote side supports it, annotated tags objects will be downloaded on the same connection as the other objects if the object the tag references is downloaded.  The caller must otherwise determine the tags this option made available."
msgstr "Caso haja compatibilidade com o lado remoto, os objetos das tags anotadas serão baixados na mesma conexão que os outros objetos, caso o objeto ao qual a tag faça referência seja baixado.  Caso contrário, aquele que chama deve determinar as tags que esta opção deixou disponível."

#. type: Labeled list
#: en/git-fetch-pack.txt:70
#, no-wrap, priority:90
msgid "--upload-pack=<git-upload-pack>"
msgstr "--upload-pack=<pacote-de-upload-do-git>"

#. type: Plain text
#: en/git-fetch-pack.txt:81
#, priority:90
msgid "Use this to specify the path to 'git-upload-pack' on the remote side, if is not found on your $PATH.  Installations of sshd ignores the user's environment setup scripts for login shells (e.g. .bash_profile) and your privately installed git may not be found on the system default $PATH.  Another workaround suggested is to set up your $PATH in \".bashrc\", but this flag is for people who do not want to pay the overhead for non-interactive shells by having a lean .bashrc file (they set most of the things up in .bash_profile)."
msgstr "Utilize para informar o caminho para 'git-upload-pack' no lado remoto, caso não seja encontrado no seu $PATH.  As instalações do sshd ignoram os scripts de configuração do ambiente do usuário para logins nas shells (.bash_profile por exemplo) e o a instalação do seu git pode não ser encontrado no $PATH predefinido do sistema.  A outra solução sugerida é configurar o seu $PATH em \".bashrc\", mas este flag são para pessoas que não desejam pagar o preço da sobrecarga em shells não interativos com um arquivo \".bashrc\" enxuto (eles definem a maioria das coisas em .bash_profile)."

#. type: Labeled list
#: en/git-fetch-pack.txt:82
#, no-wrap, priority:90
msgid "--exec=<git-upload-pack>"
msgstr "--exec=<pacote-de-upload-do-git>"

#. type: Plain text
#: en/git-fetch-pack.txt:84
#, priority:90
msgid "Same as --upload-pack=<git-upload-pack>."
msgstr "O mesmo que --upload-pack=<pacote-de-upload-do-git>."

#. type: Plain text
#: en/git-fetch-pack.txt:89
#, priority:90
msgid "Limit fetching to ancestor-chains not longer than n.  'git-upload-pack' treats the special depth 2147483647 as infinite even if there is an ancestor-chain that long."
msgstr "Limite a captura para as cadeias de ancestrais não maiores que n.  O 'git-upload-pack' trata a profundidade especial \"2147483647\" como infinita, mesmo que exista uma cadeia de ancestrais tão antiga."

#. type: Labeled list
#: en/git-fetch-pack.txt:99
#, ignore-same, no-wrap, priority:90
msgid "--deepen-relative"
msgstr "--deepen-relative"

#. type: Plain text
#: en/git-fetch-pack.txt:103
#, priority:90
msgid "Argument --depth specifies the number of commits from the current shallow boundary instead of from the tip of each remote branch history."
msgstr "O argumento `--depth` determina a quantidade limite dos commits atual da superfície em vez do cume de cada histórico do ramo remoto."

#. type: Plain text
#: en/git-fetch-pack.txt:107
#, priority:90
msgid "Skips negotiating commits with the server in order to fetch all matching objects. Use to reapply a new partial clone blob/tree filter."
msgstr "Ignora a negociação dos commits com o servidor, a fim de obter (fetch) todos os objetos correspondentes. Use para reaplicar uma nova clonagem parcial do filtro da bolha/árvore."

#. type: Plain text
#: en/git-fetch-pack.txt:110
#, priority:90
msgid "Do not show the progress."
msgstr "Não exiba o progresso."

#. type: Labeled list
#: en/git-fetch-pack.txt:111 en/git-index-pack.txt:91
#, ignore-same, no-wrap, priority:100
msgid "--check-self-contained-and-connected"
msgstr "--check-self-contained-and-connected"

#. type: Plain text
#: en/git-fetch-pack.txt:114
#, priority:90
msgid "Output \"connectivity-ok\" if the received pack is self-contained and connected."
msgstr "Exiba \"connectivity-ok\" caso o pacote recebido seja independente e conectado."

#. type: Plain text
#: en/git-fetch-pack.txt:117 en/git-push.txt:394 en/git-send-pack.txt:63
#, priority:220
msgid "Run verbosely."
msgstr "Rode de forma loquaz."

#. type: Plain text
#: en/git-fetch-pack.txt:120
#, priority:90
msgid "The URL to the remote repository."
msgstr "A URL para o repositório remoto."

#. type: Labeled list
#: en/git-fetch-pack.txt:121 en/git-ls-remote.txt:88
#, ignore-ellipsis, no-wrap, priority:100
msgid "<refs>..."
msgstr "<refs>..."

#. type: Plain text
#: en/git-fetch-pack.txt:125
#, priority:90
msgid "The remote heads to update from. This is relative to $GIT_DIR (e.g. \"HEAD\", \"refs/heads/master\").  When unspecified, update from all heads the remote side has."
msgstr "Os cabeçalhos remotos que serão atualizados. Isso é relativo ao $GIT_DIR (\"HEAD\", \"refs/heads/master\" por exemplo).  Quando não especificado, receba a atualização de todos os cabeçalhos que o lado tiver."

#. type: Plain text
#: en/git-fetch-pack.txt:129
#, priority:90
msgid "If the remote has enabled the options `uploadpack.allowTipSHA1InWant`, `uploadpack.allowReachableSHA1InWant`, or `uploadpack.allowAnySHA1InWant`, they may alternatively be 40-hex sha1s present on the remote."
msgstr "Caso o lado remoto tenha as opções `uploadpack.allowTipSHA1InWant`, `uploadpack.allowReachableSHA1InWant`, ou `uploadpack.allowAnySHA1InWant` ativadas, eles poderão alternativamente ser sha1 com 40-hex."

#. type: Title =
#: en/git-fetch.txt:2
#, ignore-same, no-wrap, priority:220
msgid "git-fetch(1)"
msgstr "git-fetch(1)"

#. type: Plain text
#: en/git-fetch.txt:7
#, priority:220
msgid "git-fetch - Download objects and refs from another repository"
msgstr "git-fetch - Faz o download dos objetos e `refs` do outro repositório"

#. type: Plain text
#: en/git-fetch.txt:16
#, ignore-ellipsis, no-wrap, priority:220
msgid ""
"'git fetch' [<options>] [<repository> [<refspec>...]]\n"
"'git fetch' [<options>] <group>\n"
"'git fetch' --multiple [<options>] [(<repository> | <group>)...]\n"
"'git fetch' --all [<options>]\n"
msgstr ""
"'git fetch' [<opções>] [<repositório> [<refspec>...]]\n"
"'git fetch' [<opções>] <grupo>\n"
"'git fetch' --multiple [<opções>] [(<repositório> | <grupo>)...]\n"
"'git fetch' --all [<opções>]\n"

#. type: Plain text
#: en/git-fetch.txt:24
#, priority:220
msgid "Fetch branches and/or tags (collectively, \"refs\") from one or more other repositories, along with the objects necessary to complete their histories.  Remote-tracking branches are updated (see the description of <refspec> below for ways to control this behavior)."
msgstr "Busque as ramificações ou as tags (coletivamente, refs) de um ou mais repositórios, juntamente com os objetos necessários para completar seus históricos.  As ramificações de rastreamento remoto são atualizadas (consulte a descrição de `<refspec>` abaixo para conhecer maneiras de controlar esse comportamento)."

#. type: Plain text
#: en/git-fetch.txt:32
#, priority:220
msgid "By default, any tag that points into the histories being fetched is also fetched; the effect is to fetch tags that point at branches that you are interested in.  This default behavior can be changed by using the --tags or --no-tags options or by configuring remote.<name>.tagOpt.  By using a refspec that fetches tags explicitly, you can fetch tags that do not point into branches you are interested in as well."
msgstr "É predefinido que qualquer tag que aponte para os históricos que estão sendo capturados também sejam capturados; o efeito é capturar as tags que apontem para os ramos nos quais você está interessado.  Este comportamento predefinido pode ser alterado utilizando as opções `--tags`, `--no-tags` ou configurando `remote.<nome>.tagOpt`.  Utilizando um `refspec` de forma explicita, é possível que você busque as tags que não apontam para as ramificações nas quais você também está interessado."

#. type: Plain text
#: en/git-fetch.txt:37
#, priority:220
msgid "'git fetch' can fetch from either a single named repository or URL, or from several repositories at once if <group> is given and there is a remotes.<group> entry in the configuration file.  (See linkgit:git-config[1])."
msgstr "O 'git fetch' pode capturar num único repositório ou numa determinada URL assim como em vários repositórios de uma vez caso `<grupo>` seja utilizado e exista um entrada `remotes.<grupo>` no arquivo de configuração.  (Consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-fetch.txt:40
#, priority:220
msgid "When no remote is specified, by default the `origin` remote will be used, unless there's an upstream branch configured for the current branch."
msgstr "Por predefinição quando nenhum ponto remoto é utilizado, o `origin` será utilizado, a menos que haja um ramo `upstream` configurado para o ramo atual."

#. type: Plain text
#: en/git-fetch.txt:44
#, priority:220
msgid "The names of refs that are fetched, together with the object names they point at, are written to `.git/FETCH_HEAD`.  This information may be used by scripts or other git commands, such as linkgit:git-pull[1]."
msgstr "Os nomes dos `refs` que são capturados, juntamente com os nomes dos objetos para os quais eles apontam, são gravados em `.git/FETCH_HEAD`.  Essa informação pode ser utilizada por scripts ou outros comandos git, como linkgit:git-pull[1]."

#. type: Plain text
#: en/git-fetch.txt:54
#, priority:220
msgid "Read refspecs, one per line, from stdin in addition to those provided as arguments. The \"tag <name>\" format is not supported."
msgstr "Faz a leitura linha a linha dos refspecs a partir do stdin adicionalmente aqueles fornecidos pelos argumentos. O formato \"tag <nome>\" não é compatível."

#. type: Title -
#: en/git-fetch.txt:59
#, no-wrap, priority:220
msgid "CONFIGURED REMOTE-TRACKING BRANCHES[[CRTB]]"
msgstr "CONFIGURAÇÕES DOS RAMOS MONITORADOS REMOTAMENTE[[CRTB]]"

#. type: Plain text
#: en/git-fetch.txt:65
#, priority:220
msgid "You often interact with the same remote repository by regularly and repeatedly fetching from it.  In order to keep track of the progress of such a remote repository, `git fetch` allows you to configure `remote.<repository>.fetch` configuration variables."
msgstr "Você costuma interagir com o mesmo repositório remoto, capturando-o regularmente e de forma  repetida.  Para acompanhar o progresso de um repositório remoto, o `git fetch` permite que você configure variáveis da configuração `remote.<repositório>.fetch`."

#. type: Plain text
#: en/git-fetch.txt:67
#, priority:220
msgid "Typically such a variable may look like this:"
msgstr "Normalmente, essa variável pode ser assim:"

#. type: delimited block -
#: en/git-fetch.txt:71
#, no-wrap, priority:220
msgid ""
"[remote \"origin\"]\n"
"\tfetch = +refs/heads/*:refs/remotes/origin/*\n"
msgstr ""
"[remote \"origin\"]\n"
"\tfetch = +refs/heads/*:refs/remotes/origin/*\n"

#. type: Plain text
#: en/git-fetch.txt:74
#, priority:220
msgid "This configuration is used in two ways:"
msgstr "Essa configuração é utilizada de duas maneiras:"

#. type: Plain text
#: en/git-fetch.txt:84
#, priority:220
msgid "When `git fetch` is run without specifying what branches and/or tags to fetch on the command line, e.g. `git fetch origin` or `git fetch`, `remote.<repository>.fetch` values are used as the refspecs--they specify which refs to fetch and which local refs to update.  The example above will fetch all branches that exist in the `origin` (i.e. any ref that matches the left-hand side of the value, `refs/heads/*`) and update the corresponding remote-tracking branches in the `refs/remotes/origin/*` hierarchy."
msgstr "Quando o `git fetch` é executado sem informar quais as ramificações ou tags capturar na linha de comando, por exemplo. Os valores `git fetch origin` ou `git fetch`, `remote.<repositório>.fetch` são utilizados como `refspecs` eles especificam quais os `refs` capturar e quais as `refs` locais atualizar.  O exemplo acima capturará todas as ramificações que existem em `origin` (ou seja, qualquer `ref` que coincida ao lado esquerdo do valor, `refs/heads/*`) e atualizará as ramificações de rastreamento remoto correspondentes na hierarquia `refs/remotes/origem/*`."

#. type: Plain text
#: en/git-fetch.txt:101
#, priority:220
msgid "When `git fetch` is run with explicit branches and/or tags to fetch on the command line, e.g. `git fetch origin master`, the <refspec>s given on the command line determine what are to be fetched (e.g. `master` in the example, which is a short-hand for `master:`, which in turn means \"fetch the 'master' branch but I do not explicitly say what remote-tracking branch to update with it from the command line\"), and the example command will fetch _only_ the 'master' branch.  The `remote.<repository>.fetch` values determine which remote-tracking branch, if any, is updated.  When used in this way, the `remote.<repository>.fetch` values do not have any effect in deciding _what_ gets fetched (i.e. the values are not used as refspecs when the command-line lists refspecs); they are only used to decide _where_ the refs that are fetched are stored by acting as a mapping."
msgstr "Quando o `git fetch` é executado especificamente com as ramificações ou tags utilizando a linha de comando como `git fetch origin master` por exemplo, os `<refspec>` utilizados determinam uma ordem de capturar, o quê deve ser capturado (o `master` no exemplo é uma abreviação de `master:`, que por sua vez significa \"capture a ramificação 'master', por exemplo), assim o comando no exemplo capturará _apenas_ a ramificação 'master'.  Os valores `remote.<repositório>.fetch` determinam qual a ramificação remota rastreada, caso exista, será atualizada.  Quando utilizados desta maneira, os valores `remote.<repository>.fetch` não têm nenhum efeito na decisão do _quê_ é capturado (ou seja, os valores não são utilizados como `refspecs` quando a linha de comando lista `refspecs`); eles são utilizados apenas para decidir _onde_ os `refs` que estão sendo capturados estão sendo armazenados e agem como um mapeamento."

#. type: Plain text
#: en/git-fetch.txt:105
#, priority:220
msgid "The latter use of the `remote.<repository>.fetch` values can be overridden by giving the `--refmap=<refspec>` parameter(s) on the command line."
msgstr "O último valores do `remote.<repositório>.fetch` podem ser substituídos, ao usar os parâmetros `--refmap=<refspec>` na linha de comando."

#. type: Title -
#: en/git-fetch.txt:107
#, no-wrap, priority:220
msgid "PRUNING"
msgstr "PODA"

#. type: Plain text
#: en/git-fetch.txt:112
#, priority:220
msgid "Git has a default disposition of keeping data unless it's explicitly thrown away; this extends to holding onto local references to branches on remotes that have themselves deleted those branches."
msgstr "A disposição predefinida do Git se organiza de forma a manter os dados a menos que sejam descartados de forma explicita; isso se estende a manter referências locais nas ramificações remotas que elas mesmas excluíram."

#. type: Plain text
#: en/git-fetch.txt:118
#, priority:220
msgid "If left to accumulate, these stale references might make performance worse on big and busy repos that have a lot of branch churn, and e.g. make the output of commands like `git branch -a --contains <commit>` needlessly verbose, as well as impacting anything else that'll work with the complete set of known references."
msgstr "Se desassistidas, essas referências obsoletas podem piorar o desempenho em repositórios grandes e ocupados aonde apresentam muita rotatividade e por exemplo, façam uso de comandos como `git branch -a --contains <commit>` cuja saída é desnecessariamente detalhada, cautilizando impacto de desempenho em qualquer outra referência de trabalho conhecida."

#. type: Plain text
#: en/git-fetch.txt:121
#, priority:220
msgid "These remote-tracking references can be deleted as a one-off with either of:"
msgstr "Estas referências de rastreamento remoto podem ser excluídas com um único:"

#. type: delimited block -
#: en/git-fetch.txt:125
#, no-wrap, priority:220
msgid ""
"# While fetching\n"
"$ git fetch --prune <name>\n"
msgstr ""
"# Enquanto estiver fazendo a captura\n"
"$ git fetch --prune <nome>\n"

#. type: delimited block -
#: en/git-fetch.txt:128
#, no-wrap, priority:220
msgid ""
"# Only prune, don't fetch\n"
"$ git remote prune <name>\n"
msgstr ""
"# Exclua apenas, não busque nada\n"
"$ git remote prune <nome>\n"

#. type: Plain text
#: en/git-fetch.txt:134
#, priority:220
msgid "To prune references as part of your normal workflow without needing to remember to run that, set `fetch.prune` globally, or `remote.<name>.prune` per-remote in the config. See linkgit:git-config[1]."
msgstr "Para remover as referências como parte do seu fluxo de trabalho normal sem precisar se lembrar de executá-lo, defina `fetch.prune` globalmente ou com a configuração ` remote.<nome>.prune` por ramo remoto. Consulte linkgit:git-config[1]."

#. type: Plain text
#: en/git-fetch.txt:139
#, priority:220
msgid "Here's where things get tricky and more specific. The pruning feature doesn't actually care about branches, instead it'll prune local <--> remote-references as a function of the refspec of the remote (see `<refspec>` and <<CRTB,CONFIGURED REMOTE-TRACKING BRANCHES>> above)."
msgstr "Aqui é onde as coisas ficam complicadas e bem específicas. O recurso de remoção não se importa muito com as ramificações; em vez disso, remove as referências locais <--> remotas como uma função do `refspec` remoto (consulte `<refspec>` e <<CONFIGURAÇÕES DOS RAMOS MONITORADOS REMOTAMENTE, CRTB>> acima)."

#. type: Plain text
#: en/git-fetch.txt:145
#, priority:220
msgid "Therefore if the refspec for the remote includes e.g. `refs/tags/*:refs/tags/*`, or you manually run e.g. `git fetch --prune <name> \"refs/tags/*:refs/tags/*\"` it won't be stale remote tracking branches that are deleted, but any local tag that doesn't exist on the remote."
msgstr "Portanto, caso o `refspec` remoto inclua `refs/tags/*:refs/tags/*` por exemplo ou caso execute manualmente `git fetch --prune <nome> \"refs/tags/*:refs/tags/*\"` por exemplo. As ramificações remotas rastreadas que forem excluídas não expirarão, a não ser qualquer outra tag local que não exista remotamente."

#. type: Plain text
#: en/git-fetch.txt:150
#, priority:220
msgid "This might not be what you expect, i.e. you want to prune remote `<name>`, but also explicitly fetch tags from it, so when you fetch from it you delete all your local tags, most of which may not have come from the `<name>` remote in the first place."
msgstr "Senão for o que você deseja, caso queira remover remotamente o `<nome>` por exemplo e também capturar explicitamente as tags a partir dele; primeiramente, ao recolher dele você exclui todas as tags locais, a maioria das quais podem não terem vindo do `<nome>` remoto."

#. type: Plain text
#: en/git-fetch.txt:154
#, priority:220
msgid "So be careful when using this with a refspec like `refs/tags/*:refs/tags/*`, or any other refspec which might map references from multiple remotes to the same local namespace."
msgstr "Assim, tenha cuidado ao utilizar isso com um `refspec` como `refs/tags/*:refs/tags/*` ou qualquer outro `refspec` que possa mapear as referências de diferentes pontos remotos para o mesmo `namespace` local."

#. type: Plain text
#: en/git-fetch.txt:161
#, priority:220
msgid "Since keeping up-to-date with both branches and tags on the remote is a common use-case the `--prune-tags` option can be supplied along with `--prune` to prune local tags that don't exist on the remote, and force-update those tags that differ. Tag pruning can also be enabled with `fetch.pruneTags` or `remote.<name>.pruneTags` in the config. See linkgit:git-config[1]."
msgstr "Como manter-se atualizado com as ramificações e as tags remotamente é um caso de uso comum, a opção `--prune-tags` pode ser utilizada junto com o `--prune` para remover as tags locais que não existam no ponto remoto e impor a atualização dessas tags que estiverem diferentes. A remoção de tags também podem ser ativadas com `fetch.pruneTags` ou `remote.<nome>.pruneTags` nas configurações. Consulte linkgit:git-config[1]."

#. type: Plain text
#: en/git-fetch.txt:165
#, priority:220
msgid "The `--prune-tags` option is equivalent to having `refs/tags/*:refs/tags/*` declared in the refspecs of the remote. This can lead to some seemingly strange interactions:"
msgstr "A opção `--prune-tags` é equivalente a ter o `refs/tags/*:refs/tags/*` declarado nos `refspecs` remotos. Isso pode ocasionar algumas interações estranhas:"

#. type: delimited block -
#: en/git-fetch.txt:170
#, no-wrap, priority:220
msgid ""
"# These both fetch tags\n"
"$ git fetch --no-tags origin 'refs/tags/*:refs/tags/*'\n"
"$ git fetch --no-tags --prune-tags origin\n"
msgstr ""
"# Ambas capturam as tags\n"
"$ git fetch --no-tags origin 'refs/tags/*:refs/tags/*'\n"
"$ git fetch --no-tags --prune-tags origin\n"

#. type: Plain text
#: en/git-fetch.txt:176
#, priority:220
msgid "The reason it doesn't error out when provided without `--prune` or its config versions is for flexibility of the configured versions, and to maintain a 1=1 mapping between what the command line flags do, and what the configuration versions do."
msgstr "O motivo pelo qual não ocorre um erro durante o uso sem a opção `--prune` ou as suas versões de configuração, é a flexibilidade das versões configuradas, para manter um mapeamento 1=1 entre as opções da linha de comando e o que as versões das configuração fazem."

#. type: Plain text
#: en/git-fetch.txt:181
#, priority:220
msgid "It's reasonable to e.g. configure `fetch.pruneTags=true` in `~/.gitconfig` to have tags pruned whenever `git fetch --prune` is run, without making every invocation of `git fetch` without `--prune` an error."
msgstr "É razoável que a configuração `fetch.pruneTags=true` em `~/.gitconfig` que as tags sejam removidas sempre que o comando `git fetch --prune` seja executado, sem fazer com que todas as invocações do comando `git fetch` sem a opção `--prune` cause um erro."

#. type: Plain text
#: en/git-fetch.txt:185
#, priority:220
msgid "Pruning tags with `--prune-tags` also works when fetching a URL instead of a named remote. These will all prune tags not found on origin:"
msgstr "A remoção de tags com `--prune-tags` também funciona durante o resgate de uma URL em vez de um determinado nome remoto. Todas essas tags de remoção serão encontradas em `origin`:"

#. type: delimited block -
#: en/git-fetch.txt:191
#, no-wrap, priority:220
msgid ""
"$ git fetch origin --prune --prune-tags\n"
"$ git fetch origin --prune 'refs/tags/*:refs/tags/*'\n"
"$ git fetch <url of origin> --prune --prune-tags\n"
"$ git fetch <url of origin> --prune 'refs/tags/*:refs/tags/*'\n"
msgstr ""
"$ git fetch origin --prune --prune-tags\n"
"$ git fetch origin --prune 'refs/tags/*:refs/tags/*'\n"
"$ git fetch <url of origin> --prune --prune-tags\n"
"$ git fetch <url of origin> --prune 'refs/tags/*:refs/tags/*'\n"

#. type: Plain text
#: en/git-fetch.txt:199
#, priority:220
msgid "The output of \"git fetch\" depends on the transport method used; this section describes the output when fetching over the Git protocol (either locally or via ssh) and Smart HTTP protocol."
msgstr "A saída do comando \"git fetch\" depende do método de transporte utilizado; Esta seção descreve a saída durante a utilização da captura ao utilizar o protocolo Git (localmente ou via ssh) e o protocolo inteligente \"Smart HTTP\"."

#. type: Plain text
#: en/git-fetch.txt:202
#, priority:220
msgid "The status of the fetch is output in tabular form, with each line representing the status of a single ref. Each line is of the form:"
msgstr "A condição da saída durante a captura é produzida em forma de tabela, com cada linha representando a condição de uma única referência. Cada linha é uma forma de:"

#. type: delimited block -
#: en/git-fetch.txt:205
#, no-wrap, priority:220
msgid " <flag> <summary> <from> -> <to> [<reason>]\n"
msgstr " <flag> <resumo> <de> -> <para> [<motivo>]\n"

#. type: Plain text
#: en/git-fetch.txt:209
#, priority:220
msgid "The status of up-to-date refs is shown only if the --verbose option is used."
msgstr "A condição das referências atualizadas é exibido caso a opção --verbose seja utilizada."

#. type: Plain text
#: en/git-fetch.txt:214
#, priority:220
msgid "In compact output mode, specified with configuration variable fetch.output, if either entire `<from>` or `<to>` is found in the other string, it will be substituted with `*` in the other string. For example, `master -> origin/master` becomes `master -> origin/*`."
msgstr "O modo de saída compacta é definida com a variável de configuração `fetch.output`, caso `<de>` ou `<para>` seja inteiramente encontrada em outra cadeia de caracteres, esta será substituída por `*` na outra cadeia de caracteres. `master -> origin/master` se torna `master -> origin/*` por exemplo."

#. type: Labeled list
#: en/git-fetch.txt:215 en/git-push.txt:455
#, no-wrap, priority:220
msgid "flag"
msgstr "flag"

#. type: Plain text
#: en/git-fetch.txt:217 en/git-push.txt:457
#, priority:220
msgid "A single character indicating the status of the ref:"
msgstr "Um único caractere indicando a condição da referência:"

#. type: Labeled list
#: en/git-fetch.txt:217 en/git-push.txt:457
#, no-wrap, priority:220
msgid "(space)"
msgstr "(space)"

#. type: Plain text
#: en/git-fetch.txt:218
#, priority:220
msgid "for a successfully fetched fast-forward;"
msgstr "para um avanço rápido bem sucedido;"

#. type: Labeled list
#: en/git-fetch.txt:218 en/git-push.txt:458
#, no-wrap, priority:220
msgid "`+`"
msgstr "`+`"

#. type: Plain text
#: en/git-fetch.txt:219 en/git-push.txt:459
#, priority:220
msgid "for a successful forced update;"
msgstr "para uma imposição de atualização bem sucedida;"

#. type: Labeled list
#: en/git-fetch.txt:219 en/git-push.txt:459
#, ignore-same, no-wrap, priority:220
msgid "`-`"
msgstr "`-`"

#. type: Plain text
#: en/git-fetch.txt:220
#, priority:220
msgid "for a successfully pruned ref;"
msgstr "para uma eliminação da referência bem sucedida;"

#. type: Labeled list
#: en/git-fetch.txt:220
#, ignore-same, no-wrap, priority:220
msgid "`t`"
msgstr "`t`"

#. type: Plain text
#: en/git-fetch.txt:221
#, priority:220
msgid "for a successful tag update;"
msgstr "para uma atualização da tag bem sucedida;"

#. type: Labeled list
#: en/git-fetch.txt:221 en/git-push.txt:460
#, no-wrap, priority:220
msgid "`*`"
msgstr "`*`"

#. type: Plain text
#: en/git-fetch.txt:222
#, priority:220
msgid "for a successfully fetched new ref;"
msgstr "para a captura de uma nova referência bem sucedida;"

#. type: Labeled list
#: en/git-fetch.txt:222 en/git-push.txt:461
#, no-wrap, priority:220
msgid "`!`"
msgstr "`!`"

#. type: Plain text
#: en/git-fetch.txt:223
#, priority:220
msgid "for a ref that was rejected or failed to update; and"
msgstr "para uma referência que foi rejeitada ou a sua atualização tenha falhado; e"

#. type: Labeled list
#: en/git-fetch.txt:223 en/git-push.txt:462
#, no-wrap, priority:220
msgid "`=`"
msgstr "`=`"

#. type: Plain text
#: en/git-fetch.txt:224
#, priority:220
msgid "for a ref that was up to date and did not need fetching."
msgstr "para uma referência que estava atualizada e não precisou de nenhuma captura."

#. type: Labeled list
#: en/git-fetch.txt:225 en/git-push.txt:464
#, no-wrap, priority:220
msgid "summary"
msgstr "resumo"

#. type: Plain text
#: en/git-fetch.txt:230
#, ignore-ellipsis, priority:220
msgid "For a successfully fetched ref, the summary shows the old and new values of the ref in a form suitable for using as an argument to `git log` (this is `<old>..<new>` in most cases, and `<old>...<new>` for forced non-fast-forward updates)."
msgstr "Para a a captura de uma referência bem sucedida, o resumo exibe os valores antigos e novos num formato adequado para a utilização como argumento para o comando `git log` (`<antigo>..<novo>` na maioria dos casos, e `<antigo>...<novo>` para atualizações de avanço rápido que forem impostas)."

#. type: Labeled list
#: en/git-fetch.txt:231 en/git-push.txt:492
#, no-wrap, priority:220
msgid "from"
msgstr "de"

#. type: Plain text
#: en/git-fetch.txt:235
#, priority:220
msgid "The name of the remote ref being fetched from, minus its `refs/<type>/` prefix. In the case of deletion, the name of the remote ref is \"(none)\"."
msgstr "The name of the remote ref being fetched from, minus its `refs/<tipo>/` prefix. In the case of deletion, the name of the remote ref is \"(none)\"."

#. type: Labeled list
#: en/git-fetch.txt:236 en/git-push.txt:497
#, no-wrap, priority:220
msgid "to"
msgstr "para"

#. type: Plain text
#: en/git-fetch.txt:239
#, priority:220
msgid "The name of the local ref being updated, minus its `refs/<type>/` prefix."
msgstr "The name of the local ref being updated, minus its `refs/<tipo>/` prefix."

#. type: Labeled list
#: en/git-fetch.txt:240 en/git-push.txt:501
#, no-wrap, priority:220
msgid "reason"
msgstr "motivo"

#. type: Plain text
#: en/git-fetch.txt:244
#, priority:220
msgid "A human-readable explanation. In the case of successfully fetched refs, no explanation is needed. For a failed ref, the reason for failure is described."
msgstr "Uma explicação legível para humanos. No caso de referências capturadas com sucesso, nenhuma explicação é necessária. Para uma referência com falha, o motivo será explanado."

#. type: Plain text
#: en/git-fetch.txt:249
#, priority:220
msgid "Update the remote-tracking branches:"
msgstr "Atualize as ramificações de rastreamento remoto:"

#. type: delimited block -
#: en/git-fetch.txt:252
#, no-wrap, priority:220
msgid "$ git fetch origin\n"
msgstr "$ git fetch origin\n"

#. type: Plain text
#: en/git-fetch.txt:258
#, priority:220
msgid "The above command copies all branches from the remote refs/heads/ namespace and stores them to the local refs/remotes/origin/ namespace, unless the branch.<name>.fetch option is used to specify a non-default refspec."
msgstr "O comando acima copia todas as ramificações do `refs/heads/` do espaço de nomes remoto e as armazena em `refs/remotes/origin/` com um espaço de nomes local, a menos que a opção `branch.<nome>.fetch` seja utilizada para definir um `refspec` fora do que já vem predefinido."

#. type: Plain text
#: en/git-fetch.txt:260
#, priority:220
msgid "Using refspecs explicitly:"
msgstr "Utilizando `refspecs` de forma explicita:"

#. type: delimited block -
#: en/git-fetch.txt:263
#, no-wrap, priority:220
msgid "$ git fetch origin +seen:seen maint:tmp\n"
msgstr "$ git fetch origin +seen:seen maint:tmp\n"

#. type: Plain text
#: en/git-fetch.txt:268
#, priority:220
msgid "This updates (or creates, as necessary) branches `seen` and `tmp` in the local repository by fetching from the branches (respectively)  `seen` and `maint` from the remote repository."
msgstr "Faz a atualização (ou cria, conforme seja necessário) as ramificações `seen` e `tmp` no repositório local, capturando as ramificações (respectivamente) `seen` e `maint` no repositório remoto."

#. type: Plain text
#: en/git-fetch.txt:271
#, priority:220
msgid "The `seen` branch will be updated even if it does not fast-forward, because it is prefixed with a plus sign; `tmp` will not be."
msgstr "O ramo `seen` será atualizado ainda que não faça um avanço rápido, porque é prefixado com um sinal de mais; já o `tmp` não será."

#. type: Plain text
#: en/git-fetch.txt:274
#, priority:220
msgid "Peek at a remote's branch, without configuring the remote in your local repository:"
msgstr "Dê uma olhada no ramo remoto sem a configuração remota do seu repositório local:"

#. type: delimited block -
#: en/git-fetch.txt:278
#, no-wrap, priority:220
msgid ""
"$ git fetch git://git.kernel.org/pub/scm/git/git.git maint\n"
"$ git log FETCH_HEAD\n"
msgstr ""
"$ git fetch git://git.kernel.org/pub/scm/git/git.git maint\n"
"$ git log FETCH_HEAD\n"

#. type: Plain text
#: en/git-fetch.txt:285
#, priority:220
msgid "The first command fetches the `maint` branch from the repository at `git://git.kernel.org/pub/scm/git/git.git` and the second command uses `FETCH_HEAD` to examine the branch with linkgit:git-log[1].  The fetched objects will eventually be removed by git's built-in housekeeping (see linkgit:git-gc[1])."
msgstr "O primeiro comando captura a ramificação `maint` do repositório em `git://git.kernel.org/pub/scm/git/git.git` e o segundo comando usa `FETCH_HEAD` para examinar a ramificação com linkgit:git-log[1].  Os objetos capturados serão eventualmente removidos pelo serviço de limpeza interno do git (consulte  linkgit:git-gc[1])."

#. type: Plain text
#: en/git-fetch.txt:301
#, priority:220
msgid "Using --recurse-submodules can only fetch new commits in submodules that are present locally e.g. in `$GIT_DIR/modules/`. If the upstream adds a new submodule, that submodule cannot be fetched until it is cloned e.g. by `git submodule update`. This is expected to be fixed in a future Git version."
msgstr "Com a opção `--recurse-submodules` só se pode buscar por novos commits nos submódulos que estejam presentes localmente, por exemplo, em `$GIT_DIR/modules/`. Se o upstream adicionar um novo submódulo, este submódulo não pode ser buscado até que seja clonado, por exemplo, através do `git submodule update`. Isso deve ser corrigido numa versão futura do Git."

#. type: Title =
#: en/git-filter-branch.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-filter-branch(1)"
msgstr "git-filter-branch(1)"

#. type: Plain text
#: en/git-filter-branch.txt:7
#, priority:90
msgid "git-filter-branch - Rewrite branches"
msgstr "git-filter-branch - Reescreve os ramos"

#. type: Plain text
#: en/git-filter-branch.txt:18
#, ignore-ellipsis, no-wrap, priority:90
msgid ""
"'git filter-branch' [--setup <command>] [--subdirectory-filter <directory>]\n"
"\t[--env-filter <command>] [--tree-filter <command>]\n"
"\t[--index-filter <command>] [--parent-filter <command>]\n"
"\t[--msg-filter <command>] [--commit-filter <command>]\n"
"\t[--tag-name-filter <command>] [--prune-empty]\n"
"\t[--original <namespace>] [-d <directory>] [-f | --force]\n"
"\t[--state-branch <branch>] [--] [<rev-list options>...]\n"
msgstr ""
"'git filter-branch' [--setup <comando>] [--subdirectory-filter <diretório>]\n"
"\t[--env-filter <comando>] [--tree-filter <comando>]\n"
"\t[--index-filter <comando>] [--parent-filter <comando>]\n"
"\t[--msg-filter <comando>] [--commit-filter <comando>]\n"
"\t[--tag-name-filter <comando>] [--prune-empty]\n"
"\t[--original <espaço-de-nomes>] [-d <diretório>] [-f | --force]\n"
"\t[--state-branch <ramo>] [--] [<opções da rev-list>...]\n"

#. type: Title -
#: en/git-filter-branch.txt:20
#, no-wrap, priority:90
msgid "WARNING"
msgstr "ATENÇÃO"

#. type: Plain text
#: en/git-filter-branch.txt:31
#, priority:90
msgid "'git filter-branch' has a plethora of pitfalls that can produce non-obvious manglings of the intended history rewrite (and can leave you with little time to investigate such problems since it has such abysmal performance).  These safety and performance issues cannot be backward compatibly fixed and as such, its use is not recommended.  Please use an alternative history filtering tool such as https://github.com/newren/git-filter-repo/[git filter-repo].  If you still need to use 'git filter-branch', please carefully read <<SAFETY>> (and <<PERFORMANCE>>) to learn about the land mines of filter-branch, and then vigilantly avoid as many of the hazards listed there as reasonably possible."
msgstr "O 'git filter-branch' possui uma infinidade de armadilhas que podem produzir não tão óbvios da reescrita pretendida no histórico (e podem deixar pouco tempo para investigar esses problemas já que o desemprenho é terrível).  Esses problemas de segurança e desempenho não podem ser corrigidos de forma compatível com as versões anteriores e como tal o seu uso não é recomendado.  Utilize uma ferramenta alternativa de filtragem de histórico como https://github.com/newren/git-filter-repo/[git filter-repo].  Caso ainda precise usar o  'git filter-branch' leia com cuidado <<SEGURANÇA>> (e <<DESEMPENHO>>) para aprender os perigos do \"filter-branch\" e em seguida, com muita atenção evite o maior número possível de perigos listados lá."

#. type: Plain text
#: en/git-filter-branch.txt:40
#, priority:90
msgid "Lets you rewrite Git revision history by rewriting the branches mentioned in the <rev-list options>, applying custom filters on each revision.  Those filters can modify each tree (e.g. removing a file or running a perl rewrite on all files) or information about each commit.  Otherwise, all information (including original commit times or merge information) will be preserved."
msgstr "Permite reescrever o histórico de revisões do Git, reescrevendo as ramificações mencionadas em `<opções da rev-list>` aplicando os filtros personalizados em cada revisão.  Esses filtros podem modificar cada árvore (por exemplo, remover um arquivo ou executar uma reescrita perl em todos os arquivos) ou informações sobre cada commit.  Caso contrário, todas as informações (incluindo a quantidade de commits originais ou as informações de mesclagem) serão preservadas."

#. type: Plain text
#: en/git-filter-branch.txt:47
#, priority:90
msgid "The command will only rewrite the _positive_ refs mentioned in the command line (e.g. if you pass 'a..b', only 'b' will be rewritten).  If you specify no filters, the commits will be recommitted without any changes, which would normally have no effect.  Nevertheless, this may be useful in the future for compensating for some Git bugs or such, therefore such a usage is permitted."
msgstr "O comando reescreverá apenas as \"refs _positivas_ mencionados na linha de comando (caso passer 'a..b', apenas 'b' será reescrito por exemplo).  Caso você não defina nenhum filtro, os commits serão refeitos sem qualquer alteração, o que normalmente não teria nenhum efeito.  No entanto, isso pode ser útil no futuro para compensar alguns bugs do Git ou algo assim, portanto, este uso é permitido."

#. type: Plain text
#: en/git-filter-branch.txt:52
#, no-wrap, priority:90
msgid ""
"*NOTE*: This command honors `.git/info/grafts` file and refs in\n"
"the `refs/replace/` namespace.\n"
"If you have any grafts or replacement refs defined, running this command\n"
"will make them permanent.\n"
msgstr ""
"*OBSERVAÇÃO*: Este comando honra o arquivo `.git/info/grafts` e as\n"
"refs no `refs/replace/` namespace.\n"
"Caso você tenha quaisquer enxertos ou referências de reposição definidos,\n"
"executando este comando os fará permanente.\n"

#. type: Plain text
#: en/git-filter-branch.txt:61
#, no-wrap, priority:90
msgid ""
"*WARNING*! The rewritten history will have different object names for all\n"
"the objects and will not converge with the original branch.  You will not\n"
"be able to easily push and distribute the rewritten branch on top of the\n"
"original branch.  Please do not use this command if you do not know the\n"
"full implications, and avoid using it anyway, if a simple single commit\n"
"would suffice to fix your problem.  (See the \"RECOVERING FROM UPSTREAM\n"
"REBASE\" section in linkgit:git-rebase[1] for further information about\n"
"rewriting published history.)\n"
msgstr ""
"*ATENÇÃO*! O histórico de reescrita terá nomes de objetos diferentes para todos\n"
"os objetos e não convergirá com a ramificação original.  Você não conseguirá\n"
"fazer um impulsionamento (push) de forma fácil e redistribuir o ramo alterado no cume do\n"
"ramo original.  Não utilize este comando se você não souber todas as implicações do seu uso e\n"
"ainda assim evite usá-lo, caso um único commit simples seja suficiente para resolver o seu problema.\n"
"(Consulte a seção \"RECUPERANDO DO UPSTREAM REBASE\"\n"
"na seção em linkgit:git-rebase[1] para obter mais informações\n"
"sobre reescrever no histórico de publicado.)\n"

#. type: Plain text
#: en/git-filter-branch.txt:65
#, priority:90
msgid "Always verify that the rewritten version is correct: The original refs, if different from the rewritten ones, will be stored in the namespace 'refs/original/'."
msgstr "Sempre verifique se a versão reescrita está correta: As refs originais, caso sejam diferentes das que foram reescritas, serão armazenadas no espaço de nomes `refs/original/`."

#. type: Plain text
#: en/git-filter-branch.txt:69
#, priority:90
msgid "Note that since this operation is very I/O expensive, it might be a good idea to redirect the temporary directory off-disk with the `-d` option, e.g. on tmpfs.  Reportedly the speedup is very noticeable."
msgstr "Observe que como essa operação é muito intenso logicamente, pode ser uma boa idéia redirecionar o diretório temporário para fora do disco com a opção `-d` no tmpfs por exemplo.  Alegadamente, a melhora de desempenho é muito perceptível."

#. type: Title ~
#: en/git-filter-branch.txt:72
#, no-wrap, priority:90
msgid "Filters"
msgstr "Filtros"

#. type: Plain text
#: en/git-filter-branch.txt:84
#, priority:90
msgid "The filters are applied in the order as listed below.  The <command> argument is always evaluated in the shell context using the 'eval' command (with the notable exception of the commit filter, for technical reasons).  Prior to that, the `$GIT_COMMIT` environment variable will be set to contain the id of the commit being rewritten.  Also, GIT_AUTHOR_NAME, GIT_AUTHOR_EMAIL, GIT_AUTHOR_DATE, GIT_COMMITTER_NAME, GIT_COMMITTER_EMAIL, and GIT_COMMITTER_DATE are taken from the current commit and exported to the environment, in order to affect the author and committer identities of the replacement commit created by linkgit:git-commit-tree[1] after the filters have run."
msgstr "Os filtros são aplicados na ordem listada abaixo.  O argumento <comando> é sempre avaliado no shell utilizando o comando 'eval' como contexto (exceto o filtro do commit, devido a uma mera tecnicalidade).  Antes disso, a variável do ambiente `$GIT_COMMIT` será configurada para conter o ID do commit que está sendo reescrito.  Além disso as variáveis `GIT_AUTHOR_NAME`, `GIT_AUTHOR_EMAIL`, `GIT_AUTHOR_DATE`, `GIT_COMMITTER_NAME`, `GIT_COMMITTER_EMAIL` e `GIT_COMMITTER_DATE` são retirados do commit atual e exportados para o ambiente, a fim de afetar as identidades autor e de quem fez o commit do commit que está sendo criado por linkgit:git-commit-tree[1] após a execução dos filtros."

#. type: Plain text
#: en/git-filter-branch.txt:87
#, priority:90
msgid "If any evaluation of <command> returns a non-zero exit status, the whole operation will be aborted."
msgstr "Caso qualquer avaliação do <comando> retorne uma condição diferente de zero na saída, toda a operação será abortada."

#. type: Plain text
#: en/git-filter-branch.txt:93
#, priority:90
msgid "A 'map' function is available that takes an \"original sha1 id\" argument and outputs a \"rewritten sha1 id\" if the commit has been already rewritten, and \"original sha1 id\" otherwise; the 'map' function can return several ids on separate lines if your commit filter emitted multiple commits."
msgstr "Está disponível uma função chamada 'map' que pega um argumento \"id do sha1 original\" e gera um \"id do sha1 reescrito\" caso o commit seja reescrito e caso contrário \"sha1 id original\"; a função 'map' pode retornar vários IDs em linhas separadas caso o filtro do commit emita vários commits."

#. type: Labeled list
#: en/git-filter-branch.txt:98
#, no-wrap, priority:90
msgid "--setup <command>"
msgstr "--setup <comando>"

#. type: Plain text
#: en/git-filter-branch.txt:104
#, priority:90
msgid "This is not a real filter executed for each commit but a one time setup just before the loop. Therefore no commit-specific variables are defined yet.  Functions or variables defined here can be used or modified in the following filter steps except the commit filter, for technical reasons."
msgstr "Este não é um filtro real executado para cada commit, porém uma configuração única antes do loop. Portanto, nenhuma variável específica do commit será definida ainda.  As funções ou variáveis definidas aqui, podem ser utilizadas ou modificadas nas seguintes etapas do filtro, exceto o filtro do commit por uma mera tecnicalidade."

#. type: Labeled list
#: en/git-filter-branch.txt:105
#, no-wrap, priority:90
msgid "--subdirectory-filter <directory>"
msgstr "--subdirectory-filter <diretório>"

#. type: Plain text
#: en/git-filter-branch.txt:109
#, priority:90
msgid "Only look at the history which touches the given subdirectory.  The result will contain that directory (and only that) as its project root. Implies <<Remap_to_ancestor>>."
msgstr "Veja apenas a história que toca o subdiretório especificado.  O resultado contemplar este diretório (e somente isso) como a raiz do projeto. Implica no uso de <<Remap_to_ancestor>>."

#. type: Labeled list
#: en/git-filter-branch.txt:110
#, no-wrap, priority:90
msgid "--env-filter <command>"
msgstr "--env-filter <comando>"

#. type: Plain text
#: en/git-filter-branch.txt:115
#, priority:90
msgid "This filter may be used if you only need to modify the environment in which the commit will be performed.  Specifically, you might want to rewrite the author/committer name/email/time environment variables (see linkgit:git-commit-tree[1] for details)."
msgstr "Este filtro pode ser utilizado apenas quando precisar alterar o ambiente onde o commit foi realizado.  Especificamente, você pode reescrever as variáveis de ambiente do autor/nome responsável pelo commit/email/data na variável do ambiente (para mais detalhes consulte linkgit:git-commit-tree[1]."

#. type: Labeled list
#: en/git-filter-branch.txt:116
#, no-wrap, priority:90
msgid "--tree-filter <command>"
msgstr "--tree-filter <comando>"

#. type: Plain text
#: en/git-filter-branch.txt:123
#, priority:90
msgid "This is the filter for rewriting the tree and its contents.  The argument is evaluated in shell with the working directory set to the root of the checked out tree.  The new tree is then used as-is (new files are auto-added, disappeared files are auto-removed - neither .gitignore files nor any other ignore rules *HAVE ANY EFFECT*!)."
msgstr "Este filtro serve para reescrever a árvore e o seu conteúdo.  O argumento é avaliado no shell com o diretório de trabalho definido como a raiz da árvore verificada.  A nova árvore é então utilizada como está (os novos arquivos serão adicionados automaticamente, os arquivos desaparecidos serão removidos automaticamente - nem os arquivos `.gitignore` nem nenhuma outra regra de ignorar *TEM QUALQUER EFEITO*!)."

#. type: Labeled list
#: en/git-filter-branch.txt:124
#, no-wrap, priority:90
msgid "--index-filter <command>"
msgstr "--index-filter <comando>"

#. type: Plain text
#: en/git-filter-branch.txt:130
#, ignore-ellipsis, priority:90
msgid "This is the filter for rewriting the index.  It is similar to the tree filter but does not check out the tree, which makes it much faster.  Frequently used with `git rm --cached --ignore-unmatch ...`, see EXAMPLES below.  For hairy cases, see linkgit:git-update-index[1]."
msgstr "Este é o filtro utilizado para reescrever o índice.  É semelhante ao filtro da árvore, no entanto não realiza o check out da árvore, o que a torna muito mais rápida.  É Frequentemente utilizado com `git rm --cached --ignore-unmatch ...`, consulte os EXEMPLOS abaixo.  Para os casos mais cabeludos consulte linkgit:git-update-index[1]."

#. type: Labeled list
#: en/git-filter-branch.txt:131
#, no-wrap, priority:90
msgid "--parent-filter <command>"
msgstr "--parent-filter <comando>"

#. type: Plain text
#: en/git-filter-branch.txt:138
#, ignore-ellipsis, priority:90
msgid "This is the filter for rewriting the commit's parent list.  It will receive the parent string on stdin and shall output the new parent string on stdout.  The parent string is in the format described in linkgit:git-commit-tree[1]: empty for the initial commit, \"-p parent\" for a normal commit and \"-p parent1 -p parent2 -p parent3 ...\" for a merge commit."
msgstr "Este filtro serve para reescrever a lista das origens de quem fez o commit.  Ele receberá um texto da origem no stdin e produzirá a um novo texto de origem no stdout.  O texto de origem está no formato descrito em linkgit:git-commit-tree[1]: o commit inicial é vazio, \"-p parent\" para um commit normal e \"-p parent1 -p parent2 -p parent3 ...\" para os commits consolidados."

#. type: Labeled list
#: en/git-filter-branch.txt:139
#, no-wrap, priority:90
msgid "--msg-filter <command>"
msgstr "--msg-filter <comando>"

#. type: Plain text
#: en/git-filter-branch.txt:144
#, priority:90
msgid "This is the filter for rewriting the commit messages.  The argument is evaluated in the shell with the original commit message on standard input; its standard output is used as the new commit message."
msgstr "Este filtro serve para reescrever as mensagens dos commits.  O argumento é avaliado no shell com a mensagem original do commit em sua entrada padrão; já a sua saída padrão é utilizada como uma nova mensagem do commit."

#. type: Labeled list
#: en/git-filter-branch.txt:145
#, no-wrap, priority:90
msgid "--commit-filter <command>"
msgstr "--commit-filter <comando>"

#. type: Plain text
#: en/git-filter-branch.txt:151
#, ignore-ellipsis, priority:90
msgid "This is the filter for performing the commit.  If this filter is specified, it will be called instead of the 'git commit-tree' command, with arguments of the form \"<TREE_ID> [(-p <PARENT_COMMIT_ID>)...]\" and the log message on stdin.  The commit id is expected on stdout."
msgstr "Este filtro serve para apresentar o commit.  Caso este filtro seja utilizado, ele será chamado em vez do comando 'git commit-tree', com os argumentos no formato \"<TREE_ID> [(-p <PARENT_COMMIT_ID>)...]\" e a mensagem do registro log no stdin.  O ID do commit é esperado no stdout."

#. type: Plain text
#: en/git-filter-branch.txt:155
#, priority:90
msgid "As a special extension, the commit filter may emit multiple commit ids; in that case, the rewritten children of the original commit will have all of them as parents."
msgstr "Como uma extensão especial, o filtro do commit pode emitir vários IDs para estes commits; nesse caso, os herdeiros do commit original que foram reescritos, todos terão eles como origem."

#. type: Plain text
#: en/git-filter-branch.txt:160
#, priority:90
msgid "You can use the 'map' convenience function in this filter, and other convenience functions, too.  For example, calling 'skip_commit \"$@\"' will leave out the current commit (but not its changes! If you want that, use 'git rebase' instead)."
msgstr "Você pode utilizar a função 'map' como uma conveniência neste filtro assim como nas outras funções também.  Ao chamar 'skip_commit \"$@\"' por exemplo, deixará de fora o commit atual (mas as alterações não! Caso queira usar dessa maneira, utilize então o comando 'git rebase')."

#. type: Plain text
#: en/git-filter-branch.txt:164
#, priority:90
msgid "You can also use the `git_commit_non_empty_tree \"$@\"` instead of `git commit-tree \"$@\"` if you don't wish to keep commits with a single parent and that makes no change to the tree."
msgstr "É possível também utilizar `git_commit_non_empty_tree \"$@\"` em vez de `git commit-tree \"$@\"` caso não queira mais manter os commit com uma única origem, isso não faz qualquer alteração na árvore."

#. type: Labeled list
#: en/git-filter-branch.txt:165
#, no-wrap, priority:90
msgid "--tag-name-filter <command>"
msgstr "--tag-name-filter <comando>"

#. type: Plain text
#: en/git-filter-branch.txt:171
#, priority:90
msgid "This is the filter for rewriting tag names. When passed, it will be called for every tag ref that points to a rewritten object (or to a tag object which points to a rewritten object).  The original tag name is passed via standard input, and the new tag name is expected on standard output."
msgstr "Este filtro serve para reescrever os nomes das tags. Quando aprovada, será chamada para cada tag de referência que aponte para um objeto reescrito (ou para um objeto tag que aponte para um objeto reescrito).  O nome da tag original é passado através da entrada padrão e seu novo nome é esperado na saída padrão."

#. type: Plain text
#: en/git-filter-branch.txt:176
#, priority:90
msgid "The original tags are not deleted, but can be overwritten; use \"--tag-name-filter cat\" to simply update the tags.  In this case, be very careful and make sure you have the old tags backed up in case the conversion has run afoul."
msgstr "As tags originais não são excluídas, mas podem ser substituídas; utilize a opção \"--tag-name-filter cat\" para atualizar as tags.  Nesse caso, tenha muito cuidado e certifique-se de fazer o backup das tags antigas, caso ocorra algum problema durante a conversão."

#. type: Plain text
#: en/git-filter-branch.txt:187
#, priority:90
msgid "Nearly proper rewriting of tag objects is supported. If the tag has a message attached, a new tag object will be created with the same message, author, and timestamp. If the tag has a signature attached, the signature will be stripped. It is by definition impossible to preserve signatures. The reason this is \"nearly\" proper, is because ideally if the tag did not change (points to the same object, has the same name, etc.)  it should retain any signature. That is not the case, signatures will always be removed, buyer beware. There is also no support for changing the author or timestamp (or the tag message for that matter). Tags which point to other tags will be rewritten to point to the underlying commit."
msgstr "A reescrita quase apropriada dos objetos tag são suportados. Caso a tag tenha uma mensagem anexada, um novo objeto tag será criado com a mesma mensagem, autor e registro de data e hora. Caso a tag tenha uma assinatura anexada, a assinatura será removida. Devido a predefinição retorna para impossível preservar as assinaturas. O motivo do \"quase\" apropriado, significa que idealmente caso uma tag não mude (aponta para o mesmo objeto, tem o mesmo nome etc.), ela deve manter qualquer assinatura. Não é este o caso, as assinaturas sempre serão removidas, portanto cuidado. Também não há compatibilidade para alterar o autor ou o registro de data e hora (ou a mensagem da tag). As tags que apontem para as outras tags, serão reescritas para apontar para o commit subjacente."

#. type: Labeled list
#: en/git-filter-branch.txt:188
#, ignore-same, no-wrap, priority:90
msgid "--prune-empty"
msgstr "--prune-empty"

#. type: Plain text
#: en/git-filter-branch.txt:195
#, priority:90
msgid "Some filters will generate empty commits that leave the tree untouched.  This option instructs git-filter-branch to remove such commits if they have exactly one or zero non-pruned parents; merge commits will therefore remain intact.  This option cannot be used together with `--commit-filter`, though the same effect can be achieved by using the provided `git_commit_non_empty_tree` function in a commit filter."
msgstr "Alguns filtros geram commits vazios que deixam a árvore intocada.  Essa opção instrui o comando `git-filter-branch` para remover tais commits caso elas tenham exatamente um ou zero origens sem poda; os commits mesclados permanecerão intactos.  Esta opção não pode ser utilizada em conjunto com `--commit-filter`, embora o mesmo efeito possa ser alcançado utilizando a função `git_commit_non_empty_tree` num filtro do commit."

#. type: Labeled list
#: en/git-filter-branch.txt:196
#, no-wrap, priority:90
msgid "--original <namespace>"
msgstr "--original <espaço-de-nomes>"

#. type: Plain text
#: en/git-filter-branch.txt:199
#, priority:90
msgid "Use this option to set the namespace where the original commits will be stored. The default value is 'refs/original'."
msgstr "Utilize esta opção para definir o espaço de nomes onde os commits originais serão armazenados. O valor predefinido é 'refs/original'."

#. type: Labeled list
#: en/git-filter-branch.txt:200
#, no-wrap, priority:90
msgid "-d <directory>"
msgstr "-d <diretório>"

#. type: Plain text
#: en/git-filter-branch.txt:207
#, priority:90
msgid "Use this option to set the path to the temporary directory used for rewriting.  When applying a tree filter, the command needs to temporarily check out the tree to some directory, which may consume considerable space in case of large projects.  By default it does this in the `.git-rewrite/` directory but you can override that choice by this parameter."
msgstr "Use esta opção para definir o caminho para o diretório temporário usado para a reescrita.  Ao aplicar um filtro na árvore, o comando precisa fazer a averiguação da árvore em algum diretório, o que pode consumir um espaço considerável no caso dos grandes projetos.  É predefinido que ele faça isso no diretório `.git-rewrite/`, porém é possível substituir esta opção por este parâmetro."

#. type: Plain text
#: en/git-filter-branch.txt:213
#, priority:90
msgid "'git filter-branch' refuses to start with an existing temporary directory or when there are already refs starting with 'refs/original/', unless forced."
msgstr "O comando 'git filter-branch' não será iniciado caso um diretório temporário existenta ou quando já existem referências começando com 'refs/original/' ou a menos que seja imposto."

#. type: Labeled list
#: en/git-filter-branch.txt:214
#, no-wrap, priority:90
msgid "--state-branch <branch>"
msgstr "--state-branch <ramo>"

#. type: Plain text
#: en/git-filter-branch.txt:219
#, priority:90
msgid "This option will cause the mapping from old to new objects to be loaded from named branch upon startup and saved as a new commit to that branch upon exit, enabling incremental of large trees. If '<branch>' does not exist it will be created."
msgstr "Esta opção fará com que o mapeamento dos objetos antigos para os novos sejam carregados do ramo chamado na inicialização e salvo como um novo commit até a sua conclusão, permitindo o incremento das grandes árvores. Se o '<ramo>' não existir, ele será criado."

#. type: Labeled list
#: en/git-filter-branch.txt:220
#, ignore-ellipsis, no-wrap, priority:90
msgid "<rev-list options>..."
msgstr "<opções da rev-list>..."

#. type: Plain text
#: en/git-filter-branch.txt:225
#, priority:90
msgid "Arguments for 'git rev-list'.  All positive refs included by these options are rewritten.  You may also specify options such as `--all`, but you must use `--` to separate them from the 'git filter-branch' options. Implies <<Remap_to_ancestor>>."
msgstr "Argumentos para o 'git rev-list'.  Todas as referências positivas incluídas por estas opções serão reescritas.  Você também pode usar as opções como `--all`, porém deve utilizar `--` para separá-las das opções 'git filter-branch'. Implica no uso de <<Remap_to_ancestor>>."

#. type: Title ~
#: en/git-filter-branch.txt:229
#, no-wrap, priority:90
msgid "Remap to ancestor"
msgstr "Remapear para o ancestral"

#. type: Plain text
#: en/git-filter-branch.txt:236
#, priority:90
msgid "By using linkgit:git-rev-list[1] arguments, e.g., path limiters, you can limit the set of revisions which get rewritten. However, positive refs on the command line are distinguished: we don't let them be excluded by such limiters. For this purpose, they are instead rewritten to point at the nearest ancestor that was not excluded."
msgstr "Ao usar argumentos linkgit:git-rev-list[1] como limitadores de caminho por exemplo, você pode limitar o conjunto das revisões que serão reescritas. No entanto, referências positivas na linha de comando são diferenciadas: nós não permitimos que sejam excluídas através destes limitadores. Para esse fim, eles são reescritos para apontar para o ancestral mais próximo que não tenha sido excluído."

#. type: Plain text
#: en/git-filter-branch.txt:244
#, priority:90
msgid "On success, the exit status is `0`.  If the filter can't find any commits to rewrite, the exit status is `2`.  On any other error, the exit status may be any other non-zero value."
msgstr "Se bem sucedido, a condição da saída se encerra com `0`.  Caso o o filtro não encontre nenhum commit para reescrever, a condição da saída se encerra com `2`.  Em qualquer outro erro, a condição da saída saída pode ser qualquer outro valor diferente de zero."

#. type: Plain text
#: en/git-filter-branch.txt:251
#, priority:90
msgid "Suppose you want to remove a file (containing confidential information or copyright violation) from all commits:"
msgstr "Suponha que você queira remover um arquivo (contendo informações confidenciais ou de violação de direitos autorais) de todos os commit:"

#. type: delimited block -
#: en/git-filter-branch.txt:254
#, no-wrap, priority:90
msgid "git filter-branch --tree-filter 'rm filename' HEAD\n"
msgstr "git filter-branch --tree-filter 'rm filename' HEAD\n"

#. type: Plain text
#: en/git-filter-branch.txt:259
#, priority:90
msgid "However, if the file is absent from the tree of some commit, a simple `rm filename` will fail for that tree and commit.  Thus you may instead want to use `rm -f filename` as the script."
msgstr "No entanto, caso o arquivo do commit esteja ausente da árvore, um simples `rm filename` falhará para aquela árvore e o commit.  Portanto, pode ser interessante usar `rm -f filename` como script."

#. type: Plain text
#: en/git-filter-branch.txt:265
#, priority:90
msgid "Using `--index-filter` with 'git rm' yields a significantly faster version.  Like with using `rm filename`, `git rm --cached filename` will fail if the file is absent from the tree of a commit.  If you want to \"completely forget\" a file, it does not matter when it entered history, so we also add `--ignore-unmatch`:"
msgstr "Usar a opção `--index-filter` com 'git rm' gera uma versão significativamente mais rápida.  Assim como o `rm filename` o `git rm --cached filename` falhará caso o arquivo do commit esteja ausente da árvore.  Caso queira \"esquecer completamente\" um arquivo, não se importando quando ele entrou no histórico, então também adicionamos a opção `--ignore-unmatch`:"

#. type: delimited block -
#: en/git-filter-branch.txt:268
#, no-wrap, priority:90
msgid "git filter-branch --index-filter 'git rm --cached --ignore-unmatch filename' HEAD\n"
msgstr "git filter-branch --index-filter 'git rm --cached --ignore-unmatch filename' HEAD\n"

#. type: Plain text
#: en/git-filter-branch.txt:271
#, priority:90
msgid "Now, you will get the rewritten history saved in HEAD."
msgstr "Agora, você salvará o histórico reescrito no `HEAD`."

#. type: Plain text
#: en/git-filter-branch.txt:274
#, priority:90
msgid "To rewrite the repository to look as if `foodir/` had been its project root, and discard all other history:"
msgstr "Para reescrever o repositório para fazer de conta que `foodir/` tenha sido a raiz do projeto e descarte todos os outros históricos:"

#. type: delimited block -
#: en/git-filter-branch.txt:277
#, no-wrap, priority:90
msgid "git filter-branch --subdirectory-filter foodir -- --all\n"
msgstr "git filter-branch --subdirectory-filter foodir -- --all\n"

#. type: Plain text
#: en/git-filter-branch.txt:282
#, priority:90
msgid "Thus you can, e.g., turn a library subdirectory into a repository of its own.  Note the `--` that separates 'filter-branch' options from revision options, and the `--all` to rewrite all branches and tags."
msgstr "Assim, você pode, transformar um subdiretório da biblioteca num repositório próprio por exemplo.  Observe o `--` que separa as opções 'filter-branch' das opções de revisão e o` --all` para reescrever todos os ramos e as tags."

#. type: Plain text
#: en/git-filter-branch.txt:286
#, priority:90
msgid "To set a commit (which typically is at the tip of another history) to be the parent of the current initial commit, in order to paste the other history behind the current history:"
msgstr "Para definir um commit (que normalmente esteja na ponta de outro histórico) para ser a atual origem inicial do commit e para colar o outro histórico atrás do histórico atual:"

#. type: delimited block -
#: en/git-filter-branch.txt:289
#, no-wrap, priority:90
msgid "git filter-branch --parent-filter 'sed \"s/^\\$/-p <graft-id>/\"' HEAD\n"
msgstr "git filter-branch --parent-filter 'sed \"s/^\\$/-p <graft-id>/\"' HEAD\n"

#. type: Plain text
#: en/git-filter-branch.txt:295
#, priority:90
msgid "(if the parent string is empty - which happens when we are dealing with the initial commit - add graftcommit as a parent).  Note that this assumes history with a single root (that is, no merge without common ancestors happened).  If this is not the case, use:"
msgstr "(caso o texto da origem esteja vazio - o mesmo que acontece quando estamos lidando com o commit inicial - `add graftcommit` como origem).  Observe que isso assume o histórico com uma única raiz (ou seja, sem nenhuma mesclagem com ancestrais comuns).  Se não for esse o caso, utilize:"

#. type: delimited block -
#: en/git-filter-branch.txt:299
#, no-wrap, priority:90
msgid ""
"git filter-branch --parent-filter \\\n"
"\t'test $GIT_COMMIT = <commit-id> && echo \"-p <graft-id>\" || cat' HEAD\n"
msgstr ""
"git filter-branch --parent-filter \\\n"
"\t'test $GIT_COMMIT = <commit-id> && echo \"-p <graft-id>\" || cat' HEAD\n"

#. type: Plain text
#: en/git-filter-branch.txt:302
#, priority:90
msgid "or even simpler:"
msgstr "ou mais simples ainda:"

#. type: delimited block -
#: en/git-filter-branch.txt:306
#, no-wrap, priority:90
msgid ""
"git replace --graft $commit-id $graft-id\n"
"git filter-branch $graft-id..HEAD\n"
msgstr ""
"git replace --graft $commit-id $graft-id\n"
"git filter-branch $graft-id..HEAD\n"

#. type: Plain text
#: en/git-filter-branch.txt:309
#, priority:90
msgid "To remove commits authored by \"Darl McBribe\" from the history:"
msgstr "Para remover os commits criados por \"Darl McBribe\" do histórico:"

#. type: delimited block -
#: en/git-filter-branch.txt:318
#, no-wrap, priority:90
msgid ""
"git filter-branch --commit-filter '\n"
"\tif [ \"$GIT_AUTHOR_NAME\" = \"Darl McBribe\" ];\n"
"\tthen\n"
"\t\tskip_commit \"$@\";\n"
"\telse\n"
"\t\tgit commit-tree \"$@\";\n"
"\tfi' HEAD\n"
msgstr ""
"git filter-branch --commit-filter '\n"
"\tif [ \"$GIT_AUTHOR_NAME\" = \"Darl McBribe\" ];\n"
"\tthen\n"
"\t\tskip_commit \"$@\";\n"
"\telse\n"
"\t\tgit commit-tree \"$@\";\n"
"\tfi' HEAD\n"

#. type: Plain text
#: en/git-filter-branch.txt:321
#, priority:90
msgid "The function 'skip_commit' is defined as follows:"
msgstr "A função 'skip_commit' é definida da seguinte maneira:"

#. type: delimited block -
#: en/git-filter-branch.txt:333
#, no-wrap, priority:90
msgid ""
"skip_commit()\n"
"{\n"
"\tshift;\n"
"\twhile [ -n \"$1\" ];\n"
"\tdo\n"
"\t\tshift;\n"
"\t\tmap \"$1\";\n"
"\t\tshift;\n"
"\tdone;\n"
"}\n"
msgstr ""
"skip_commit()\n"
"{\n"
"\tshift;\n"
"\twhile [ -n \"$1\" ];\n"
"\tdo\n"
"\t\tshift;\n"
"\t\tmap \"$1\";\n"
"\t\tshift;\n"
"\tdone;\n"
"}\n"

#. type: Plain text
#: en/git-filter-branch.txt:340
#, priority:90
msgid "The shift magic first throws away the tree id and then the -p parameters.  Note that this handles merges properly! In case Darl committed a merge between P1 and P2, it will be propagated properly and all children of the merge will become merge commits with P1,P2 as their parents instead of the merge commit."
msgstr "A mágica do deslocamento primeiro joga fora o ID da árvore e depois os parâmetros `-p`.  Observe que isso manipula a mesclagem de forma adequada! No caso de Darl ter feito um commit mesclando entre P1 e P2, ela será propagada corretamente e todos os herdeiros desta mesclagem se tornarão commits P1,P2 como as suas origens em vez do commit de mesclagem."

#. type: Plain text
#: en/git-filter-branch.txt:345
#, no-wrap, priority:90
msgid ""
"*NOTE* the changes introduced by the commits, and which are not reverted\n"
"by subsequent commits, will still be in the rewritten branch. If you want\n"
"to throw out _changes_ together with the commits, you should use the\n"
"interactive mode of 'git rebase'.\n"
msgstr ""
"*NOTA* as alterações introduzidas pelos commits que não sejam revertidos\n"
"por commits subsequentes, ainda estarão na ramificação que foi reescrita. Caso queira\n"
"descartar as _alterações_ junto com os commits, você deve usar o\n"
"modo interativo do comando 'git rebase'.\n"

#. type: Plain text
#: en/git-filter-branch.txt:349
#, priority:90
msgid "You can rewrite the commit log messages using `--msg-filter`.  For example, 'git svn-id' strings in a repository created by 'git svn' can be removed this way:"
msgstr "Você pode re-escrever as mensagens do registro log dos commits com `--msg-filter`.  A cadeia de caracteres 'git svn-id' num repositório criado por 'git svn' por exemplo, podem ser removidos desta maneira:"

#. type: delimited block -
#: en/git-filter-branch.txt:354
#, no-wrap, priority:90
msgid ""
"git filter-branch --msg-filter '\n"
"\tsed -e \"/^git-svn-id:/d\"\n"
"'\n"
msgstr ""
"git filter-branch --msg-filter '\n"
"\tsed -e \"/^git-svn-id:/d\"\n"
"'\n"

#. type: Plain text
#: en/git-filter-branch.txt:358
#, priority:90
msgid "If you need to add 'Acked-by' lines to, say, the last 10 commits (none of which is a merge), use this command:"
msgstr "Caso precise adicionar as linhas 'Acked-by' (Reinformado por) aos últimos 10 commits por exemplo (nenhum dos quais seja uma mesclagem), utilize este comando:"

#. type: delimited block -
#: en/git-filter-branch.txt:364
#, no-wrap, priority:90
msgid ""
"git filter-branch --msg-filter '\n"
"\tcat &&\n"
"\techo \"Acked-by: Bugs Bunny <bunny@bugzilla.org>\"\n"
"' HEAD~10..HEAD\n"
msgstr ""
"git filter-branch --msg-filter '\n"
"\tcat &&\n"
"\techo \"Reconhecido por: Pernalonga <coelho@bugzilla.org>\"\n"
"' HEAD~10..HEAD\n"

#. type: Plain text
#: en/git-filter-branch.txt:370
#, priority:90
msgid "The `--env-filter` option can be used to modify committer and/or author identity.  For example, if you found out that your commits have the wrong identity due to a misconfigured user.email, you can make a correction, before publishing the project, like this:"
msgstr "A opção `--env-filter` pode ser utilizada para modificar a identidade do autor de quem fez o commit.  Caso descubra que os seus commits têm a identidade errada devido a um `user.email` configurado de forma errada por exemplo, é possível fazer uma correção antes de publicar o projeto, assim:"

#. type: delimited block -
#: en/git-filter-branch.txt:382
#, no-wrap, priority:90
msgid ""
"git filter-branch --env-filter '\n"
"\tif test \"$GIT_AUTHOR_EMAIL\" = \"root@localhost\"\n"
"\tthen\n"
"\t\tGIT_AUTHOR_EMAIL=john@example.com\n"
"\tfi\n"
"\tif test \"$GIT_COMMITTER_EMAIL\" = \"root@localhost\"\n"
"\tthen\n"
"\t\tGIT_COMMITTER_EMAIL=john@example.com\n"
"\tfi\n"
"' -- --all\n"
msgstr ""
"git filter-branch --env-filter '\n"
"\tif test \"$GIT_AUTHOR_EMAIL\" = \"root@localhost\"\n"
"\tthen\n"
"\t\tGIT_AUTHOR_EMAIL=john@example.com\n"
"\tfi\n"
"\tif test \"$GIT_COMMITTER_EMAIL\" = \"root@localhost\"\n"
"\tthen\n"
"\t\tGIT_COMMITTER_EMAIL=john@example.com\n"
"\tfi\n"
"' -- --all\n"

#. type: Plain text
#: en/git-filter-branch.txt:388
#, priority:90
msgid "To restrict rewriting to only part of the history, specify a revision range in addition to the new branch name.  The new branch name will point to the top-most revision that a 'git rev-list' of this range will print."
msgstr "Para restringir a reescrita a apenas na parte do histórico, determine um intervalo da revisão além do novo nome do ramo.  O novo nome do ramo apontará para o topo da revisão mais recente deste intervalo que um 'git rev-list' dessa faixa imprimirá."

#. type: Plain text
#: en/git-filter-branch.txt:390
#, priority:90
msgid "Consider this history:"
msgstr "Considere este histórico:"

#. type: delimited block -
#: en/git-filter-branch.txt:395
#, no-wrap, priority:90
msgid ""
"     D--E--F--G--H\n"
"    /     /\n"
"A--B-----C\n"
msgstr ""
"     D--E--F--G--H\n"
"    /     /\n"
"A--B-----C\n"

#. type: Plain text
#: en/git-filter-branch.txt:398
#, priority:90
msgid "To rewrite only commits D,E,F,G,H, but leave A, B and C alone, use:"
msgstr "Para reescrever apenas os commits D, E, F, G, H, mas deixe A, B e C intactos, utilize:"

#. type: delimited block -
#: en/git-filter-branch.txt:401
#, ignore-ellipsis, no-wrap, priority:90
msgid "git filter-branch ... C..H\n"
msgstr "git filter-branch ... C..H\n"

#. type: Plain text
#: en/git-filter-branch.txt:404
#, priority:90
msgid "To rewrite commits E,F,G,H, use one of these:"
msgstr "Para reescrever os commits E, F, G, H, utilize um destes:"

#. type: delimited block -
#: en/git-filter-branch.txt:408
#, ignore-ellipsis, no-wrap, priority:90
msgid ""
"git filter-branch ... C..H --not D\n"
"git filter-branch ... D..H --not C\n"
msgstr ""
"git filter-branch ... C..H --not D\n"
"git filter-branch ... D..H --not C\n"

#. type: Plain text
#: en/git-filter-branch.txt:411
#, priority:90
msgid "To move the whole tree into a subdirectory, or remove it from there:"
msgstr "Para mover toda a árvore para um subdiretório ou removê-la de lá:"

#. type: delimited block -
#: en/git-filter-branch.txt:418
#, no-wrap, priority:90
msgid ""
"git filter-branch --index-filter \\\n"
"\t'git ls-files -s | sed \"s-\\t\\\"*-&newsubdir/-\" |\n"
"\t\tGIT_INDEX_FILE=$GIT_INDEX_FILE.new \\\n"
"\t\t\tgit update-index --index-info &&\n"
"\t mv \"$GIT_INDEX_FILE.new\" \"$GIT_INDEX_FILE\"' HEAD\n"
msgstr ""
"git filter-branch --index-filter \\\n"
"\t'git ls-files -s | sed \"s-\\t\\\"*-&novosubdir/-\" |\n"
"\t\tGIT_INDEX_FILE=$GIT_INDEX_FILE.new \\\n"
"\t\t\tgit update-index --index-info &&\n"
"\t mv \"$GIT_INDEX_FILE.new\" \"$GIT_INDEX_FILE\"' HEAD\n"

#. type: Title -
#: en/git-filter-branch.txt:423
#, no-wrap, priority:90
msgid "CHECKLIST FOR SHRINKING A REPOSITORY"
msgstr "LISTA DE VERIFICAÇÃO PARA REDUZIR DE UM REPOSITÓRIO"

#. type: Plain text
#: en/git-filter-branch.txt:431
#, priority:90
msgid "git-filter-branch can be used to get rid of a subset of files, usually with some combination of `--index-filter` and `--subdirectory-filter`.  People expect the resulting repository to be smaller than the original, but you need a few more steps to actually make it smaller, because Git tries hard not to lose your objects until you tell it to.  First make sure that:"
msgstr "O comando `git-filter-branch` pode ser utilizado para se livrar de um subconjunto de arquivos, geralmente com alguma combinação das opções `--index-filter` e `--subdirectory-filter`.  As pessoas esperam que o repositório resultante seja menor que o original, porém são necessários mais algumas etapas para torná-lo menor porque o Git se esforça para não perder os seus objetos até que você assim o solicite.  Primeiro, verifique se:"

#. type: Plain text
#: en/git-filter-branch.txt:435
#, priority:90
msgid "You really removed all variants of a filename, if a blob was moved over its lifetime.  `git log --name-only --follow --all -- filename` can help you find renames."
msgstr "Você realmente removeu todas as variantes de um nome do arquivo, se um bolha foi movida durante a sua vida útil.  O comando `git log --name-only --follow --all - nome_do_arquivo` pode ajudá-lo a encontrar os arquivos renomeados."

#. type: Plain text
#: en/git-filter-branch.txt:438
#, priority:90
msgid "You really filtered all refs: use `--tag-name-filter cat -- --all` when calling git-filter-branch."
msgstr "Você realmente filtrou todas as referências: utilize as opções `--tag-name-filter cat -- --all` ao invocar o comando 'git-filter-branch'."

#. type: Plain text
#: en/git-filter-branch.txt:441
#, priority:90
msgid "Then there are two ways to get a smaller repository.  A safer way is to clone, that keeps your original intact."
msgstr "Depois, existem duas outras maneiras de se obter um repositório ainda menor.  A maneira mais segura seria clonar, mantendo o original intacto."

#. type: Plain text
#: en/git-filter-branch.txt:445
#, priority:90
msgid "Clone it with `git clone file:///path/to/repo`.  The clone will not have the removed objects.  See linkgit:git-clone[1].  (Note that cloning with a plain path just hardlinks everything!)"
msgstr "Clone-o com o comando `git clone file:///path/to/repo`.  O clone não terá os objetos que foram removidos.  Consulte linkgit:git-clone[1].   (Observe que ao realizar a clonagem com um caminho simples, isso faz com que tudo seja vinculado!)"

#. type: Plain text
#: en/git-filter-branch.txt:450
#, priority:90
msgid "If you really don't want to clone it, for whatever reasons, check the following points instead (in this order).  This is a very destructive approach, so *make a backup* or go back to cloning it.  You have been warned."
msgstr "Caso realmente não queira cloná-lo, independente do motivo, verifique os seguintes pontos (nesta ordem).  Essa é uma abordagem muito destrutiva, logo, *faça um backup* ou volte para a clonagem.  Você foi avisado."

#. type: Plain text
#: en/git-filter-branch.txt:454
#, priority:90
msgid "Remove the original refs backed up by git-filter-branch: say `git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d`."
msgstr "Remova os refs originais com o backup do git-filter-branch utilizando: `git for-each-ref --format=\"%(refname)\" refs/original/ | xargs -n 1 git update-ref -d`."

#. type: Plain text
#: en/git-filter-branch.txt:456
#, priority:90
msgid "Expire all reflogs with `git reflog expire --expire=now --all`."
msgstr "Expire todos os `reflogs` utilizando o comando `git reflog expire --expire=now --all`."

#. type: Plain text
#: en/git-filter-branch.txt:460
#, priority:90
msgid "Garbage collect all unreferenced objects with `git gc --prune=now` (or if your git-gc is not new enough to support arguments to `--prune`, use `git repack -ad; git prune` instead)."
msgstr "O lixo é coletado de todos os objetos sem referências utilizando o comando `git gc --prune=now` (ou caso o seu `git-gc` não seja novo o suficiente para suportar os argumentos para a opção `--prune`, utilize `git repack -ad; git prune`)."

#. type: Plain text
#: en/git-filter-branch.txt:467
#, priority:90
msgid "The performance of git-filter-branch is glacially slow; its design makes it impossible for a backward-compatible implementation to ever be fast:"
msgstr "O desempenho do ramo do 'git-filter-branch' é bem lento; o seu design torna impossível a implementação de retrocompatibilidade rápida com versões anteriores:"

#. type: Plain text
#: en/git-filter-branch.txt:473
#, priority:90
msgid "In editing files, git-filter-branch by design checks out each and every commit as it existed in the original repo.  If your repo has `10^5` files and `10^5` commits, but each commit only modifies five files, then git-filter-branch will make you do `10^10` modifications, despite only having (at most) `5*10^5` unique blobs."
msgstr "Na edição dos arquivos, o `git-filter-branch` por design faz a averiguação de todos os commits conforme existiam no repositório original.  Caso o seu repositório tenha `10^5` arquivos e `10^5` commits, porém cada commit altere apenas cinco arquivos, o `git-filter-branch` fará com que você faça `10^10` alterações, apesar de ter apenas (no máximo) `5*10^5` bolhas únicas."

#. type: Plain text
#: en/git-filter-branch.txt:476
#, priority:90
msgid "If you try and cheat and try to make git-filter-branch only work on files modified in a commit, then two things happen"
msgstr "Caso tente trapacear e tente fazer com que o 'git-filter-branch' funcione apenas nos arquivos modificados de um commit, ocorrerão duas coisas"

#. type: Plain text
#: en/git-filter-branch.txt:482
#, priority:90
msgid "you run into problems with deletions whenever the user is simply trying to rename files (because attempting to delete files that don't exist looks like a no-op; it takes some chicanery to remap deletes across file renames when the renames happen via arbitrary user-provided shell)"
msgstr "você enfrenta problemas com exclusões sempre que o usuário está simplesmente tentando renomear os arquivos (porque tentar excluir os que não existem parece um no-op; é preciso alguma trapaça para remapear as exclusões entre as renomeações dos arquivos quando as renomeações acontecem por meio de usuários com o seu próprio shell)"

#. type: Plain text
#: en/git-filter-branch.txt:488
#, priority:90
msgid "even if you succeed at the map-deletes-for-renames chicanery, you still technically violate backward compatibility because users are allowed to filter files in ways that depend upon topology of commits instead of filtering solely based on file contents or names (though this has not been observed in the wild)."
msgstr "mesmo caso consiga excluir a zombaria do 'map-deletes-for-renames' (renomeações para mapas excluídos), ainda assim violará tecnicamente a compatibilidade com as versões anteriores, porque os usuários podem filtrar os arquivos de maneiras que dependem da topologia dos commits, em vez de filtrar apenas com base no conteúdo ou nos nomes dos arquivos (embora isso não tenha sido observado ainda)."

#. type: Plain text
#: en/git-filter-branch.txt:495
#, priority:90
msgid "Even if you don't need to edit files but only want to e.g. rename or remove some and thus can avoid checking out each file (i.e. you can use --index-filter), you still are passing shell snippets for your filters.  This means that for every commit, you have to have a prepared git repo where those filters can be run.  That's a significant setup."
msgstr "Mesmo que você não precise editar os arquivos, porém apenas queira, por exemplo, renomear ou remover alguns e assim, evitar a averiguação de cada arquivo (por exemplo, você pode utilizar a opção `--index-filter`), você ainda está passando trechos do shell para os seus filtros.  Isso significa que, para cada commit, é necessário ter um repositório git preparado onde estes filtros possam ser executados.  Esta é uma configuração significativa."

#. type: Plain text
#: en/git-filter-branch.txt:507
#, priority:90
msgid "Further, several additional files are created or updated per commit by git-filter-branch.  Some of these are for supporting the convenience functions provided by git-filter-branch (such as map()), while others are for keeping track of internal state (but could have also been accessed by user filters; one of git-filter-branch's regression tests does so).  This essentially amounts to using the filesystem as an IPC mechanism between git-filter-branch and the user-provided filters.  Disks tend to be a slow IPC mechanism, and writing these files also effectively represents a forced synchronization point between separate processes that we hit with every commit."
msgstr "Além disso, os vários arquivos adicionais são criados ou são atualizados por commits através do comando git-filter-branch.  Alguns deles são para apoiar as funções de conveniência fornecidas pelo 'git-filter-branch' (como map()), enquanto outros são para acompanhar a condição interna (mas também podem ter sido acessados através dos filtros do usuário; com um dos testes de regressão 'git-filter-branch' do ramo fazem).  Basicamente significa utilizar o sistema dos arquivos como um mecanismo IPC entre o 'git-filter-branch' e os filtros fornecidos pelo usuário.  Os discos tendem a ser um mecanismo IPC lento e a gravação destes arquivos também representa efetivamente um ponto de sincronização imposto entre os processos separados que atingimos com cada commit."

#. type: Plain text
#: en/git-filter-branch.txt:513
#, priority:90
msgid "The user-provided shell commands will likely involve a pipeline of commands, resulting in the creation of many processes per commit.  Creating and running another process takes a widely varying amount of time between operating systems, but on any platform it is very slow relative to invoking a function."
msgstr "Os comandos do usuário informados pelo shell provavelmente envolverão um pipeline de comandos, resultando na criação de muitos processos por commit.  Criar e executar um outro processo leva uma certa quantidade bastante de tempo entre os sistemas operacionais, porém em qualquer outra plataforma é muito lento em relação à chamada de uma função."

#. type: Plain text
#: en/git-filter-branch.txt:519
#, priority:90
msgid "git-filter-branch itself is written in shell, which is kind of slow.  This is the one performance issue that could be backward-compatibly fixed, but compared to the above problems that are intrinsic to the design of git-filter-branch, the language of the tool itself is a relatively minor issue."
msgstr "O próprio 'git-filter-branch' é escrito em shell, o que o torna um pouco lento.  Esse é o único problema de desempenho que pode ser corrigido de forma compatível com as versões anteriores, porém se  comparado aos problemas acima, intrínsecos ao design do 'git-filter-branch', o idioma usado pela própria ferramenta é um problema relativamente menor."

#. type: Plain text
#: en/git-filter-branch.txt:530
#, priority:90
msgid "Side note: Unfortunately, people tend to fixate on the written-in-shell aspect and periodically ask if git-filter-branch could be rewritten in another language to fix the performance issues.  Not only does that ignore the bigger intrinsic problems with the design, it'd help less than you'd expect: if git-filter-branch itself were not shell, then the convenience functions (map(), skip_commit(), etc) and the `--setup` argument could no longer be executed once at the beginning of the program but would instead need to be prepended to every user filter (and thus re-executed with every commit)."
msgstr "Nota: Infelizmente, as pessoas tendem a se fixar no aspecto \"escrito em shell\" e periodicamente perguntam se o 'git-filter-branch' pode ser reescrito em outra linguagem para corrigir os problemas com o desempenho.  Isso não apenas ignora os maiores problemas intrínsecos na questão do design, como também ajuda menos do que você espera: se o ramo do 'git-filter-branch' em si não fosse em shell, as funções de conveniência (map(), skip_commit(), etc) e a opção `--setup` não poderiam mais ser executadas uma vez durante o início do programa, porém precisariam ser anexadas em todo o filtro do usuário (e portanto, ser executado com cada commit)."

#. type: Plain text
#: en/git-filter-branch.txt:541
#, priority:90
msgid "The https://github.com/newren/git-filter-repo/[git filter-repo] tool is an alternative to git-filter-branch which does not suffer from these performance problems or the safety problems (mentioned below). For those with existing tooling which relies upon git-filter-branch, 'git filter-repo' also provides https://github.com/newren/git-filter-repo/blob/master/contrib/filter-repo-demos/filter-lamely[filter-lamely], a drop-in git-filter-branch replacement (with a few caveats).  While filter-lamely suffers from all the same safety issues as git-filter-branch, it at least ameliorates the performance issues a little."
msgstr "A ferramenta https://github.com/newren/git-filter-repo/[git filter-repo] é uma alternativa ao 'git-filter-branch' que não sofre com estes problemas de desempenho ou problemas com segurança (mencionados abaixo). Para aqueles com ferramentas já existentes que dependam do 'git-filter-branch', o comando 'git filter-repo' também oferece https://github.com/newren/git-filter-repo/blob/master/contrib/filter-repo-demos/filter-lamely[filter-lamely], um substituto do 'git-filter-branch' (com algumas ressalvas).  Embora o filtro sofra dos mesmos problemas de segurança que o 'git-filter-branch', ele pelo menos melhora um pouco as questões de desempenho."

#. type: Title -
#: en/git-filter-branch.txt:544
#, no-wrap, priority:90
msgid "SAFETY"
msgstr "SEGURANÇA"

#. type: Plain text
#: en/git-filter-branch.txt:549
#, priority:90
msgid "git-filter-branch is riddled with gotchas resulting in various ways to easily corrupt repos or end up with a mess worse than what you started with:"
msgstr "O 'git-filter-branch' está cheio de pegadinhas, em várias maneiras o resultando pode corromper facilmente os repositórios ou acabar com uma bagunça pior do que a que você começou:"

#. type: Plain text
#: en/git-filter-branch.txt:563
#, priority:90
msgid "Someone can have a set of \"working and tested filters\" which they document or provide to a coworker, who then runs them on a different OS where the same commands are not working/tested (some examples in the git-filter-branch manpage are also affected by this).  BSD vs. GNU userland differences can really bite.  If lucky, error messages are spewed.  But just as likely, the commands either don't do the filtering requested, or silently corrupt by making some unwanted change.  The unwanted change may only affect a few commits, so it's not necessarily obvious either.  (The fact that problems won't necessarily be obvious means they are likely to go unnoticed until the rewritten history is in use for quite a while, at which point it's really hard to justify another flag-day for another rewrite.)"
msgstr "Alguém pode ter um conjunto de \"filtros testados e que funcionam\" que eles documentam ou provê a um colega de trabalho, que os executa em um SO diferente onde os mesmos comandos não estão funcionando ou foram testados (alguns exemplos na página do manual do 'git-filter-branch' também são afetados por este).  Os usuários do BSD vs. GNU podem sentir grandes diferenças.  Se tiver sorte, algumas mensagens de erros serão exibidas.  Mas, com a mesma probabilidade, os comandos não fazem a filtragem solicitada ou silenciosamente, corrompem ao fazer algumas alterações indesejadas.  A alteração indesejada pode afetar apenas alguns commits, portanto também não é necessariamente óbvia.  (O fato onde os problemas não serão necessariamente óbvios significa que eles provavelmente passarão despercebidos até que o histórico reescrito esteja em uso por um bom tempo, quando for realmente difícil justificar outro alerta para outra reescrita.)"

#. type: Plain text
#: en/git-filter-branch.txt:573
#, priority:90
msgid "Filenames with spaces are often mishandled by shell snippets since they cause problems for shell pipelines.  Not everyone is familiar with find -print0, xargs -0, git-ls-files -z, etc.  Even people who are familiar with these may assume such flags are not relevant because someone else renamed any such files in their repo back before the person doing the filtering joined the project.  And often, even those familiar with handling arguments with spaces may not do so just because they aren't in the mindset of thinking about everything that could possibly go wrong."
msgstr "Os nomes dos arquivos com espaços geralmente não são tratados de forma correta pelos trechos em shell scripts, pois causam problemas nas pipelines.  Nem todo mundo está familiarizado com 'find -print0', 'xargs -0', 'git-ls-files -z', etc. Mesmo as pessoas familiarizadas com isso podem assumir que tais opções não sejam relevantes porque alguém renomeou esses arquivos no seu repositório antes da pessoa que fez a filtragem entrar no projeto.  E muitas vezes, mesmo aqueles familiarizados com o tratamento dos argumentos com espaços podem não fazê-lo apenas porque não estão com a mentalidade de pensar em tudo o que poderia dar errado."

#. type: Plain text
#: en/git-filter-branch.txt:584
#, priority:90
msgid "Non-ascii filenames can be silently removed despite being in a desired directory.  Keeping only wanted paths is often done using pipelines like `git ls-files | grep -v ^WANTED_DIR/ | xargs git rm`.  ls-files will only quote filenames if needed, so folks may not notice that one of the files didn't match the regex (at least not until it's much too late).  Yes, someone who knows about core.quotePath can avoid this (unless they have other special characters like \\t, \\n, or \"), and people who use ls-files -z with something other than grep can avoid this, but that doesn't mean they will."
msgstr "Os nomes de arquivos não ascii podem ser removidos silenciosamente, apesar de estarem no diretório desejado.  Manter apenas os caminhos desejados geralmente é feito utilizando pipelines como `git ls-files | grep -v ^WANTED_DIR/ | xargs git rm`.  O ls-files só citará os nomes dos arquivos caso seja necessário, portanto, as pessoas podem não perceber que um dos arquivos não coincide com o regex (pelo menos não até que seja tarde demais).  Sim, alguém que conhece a opção de configuração `core.quotePath` pode evitar isso (a menos que tenha outros caracteres especiais como '\\t', '\\n' ou '\"'), e as pessoas que utilizam `ls-files -z` com algo diferente de 'grep' podem evitar isso, porém não significa que eles irão."

#. type: Plain text
#: en/git-filter-branch.txt:591
#, priority:90
msgid "Similarly, when moving files around, one can find that filenames with non-ascii or special characters end up in a different directory, one that includes a double quote character.  (This is technically the same issue as above with quoting, but perhaps an interesting different way that it can and has manifested as a problem.)"
msgstr "Da mesma forma, ao mover os arquivos, pode-se descobrir que os nomes dos arquivos com caracteres não ASCII ou especiais, acabam em um diretório diferente, um que inclua um caractere com aspas duplas.  (Tecnicamente, este é o mesmo problema acima, com citações, porém talvez seja uma maneira interessante e diferente de se manifestar como um problema.)"

#. type: Plain text
#: en/git-filter-branch.txt:600
#, priority:90
msgid "It's far too easy to accidentally mix up old and new history.  It's still possible with any tool, but git-filter-branch almost invites it.  If lucky, the only downside is users getting frustrated that they don't know how to shrink their repo and remove the old stuff.  If unlucky, they merge old and new history and end up with multiple \"copies\" of each commit, some of which have unwanted or sensitive files and others which don't.  This comes about in multiple different ways:"
msgstr "É muito fácil misturar acidentalmente o histórico antigo e com o novo.  Com qualquer ferramenta ainda é possível, mas o comando git-filter-branch é quase um convite pra isso.  Caso tenha sorte, a única desvantagem é que os usuários fiquem frustrados por não saberem como encolher o seu repositório e remover as coisas antigas.  Caso tenha azar, eles mesclam o histórico antigo e o novo e acabam com várias \"cópias\" de cada commit, algumas das quais com arquivos confidenciais ou indesejados e outras que não.  Isso ocorre de várias maneiras diferentes:"

#. type: Plain text
#: en/git-filter-branch.txt:603
#, priority:90
msgid "the default to only doing a partial history rewrite ('--all' is not the default and few examples show it)"
msgstr "a predefinição para reescrever apenas um histórico parcial ('--all' não é a predefinição e poucos exemplos o mostram)"

#. type: Plain text
#: en/git-filter-branch.txt:605
#, priority:90
msgid "the fact that there's no automatic post-run cleanup"
msgstr "o fato de não haver limpeza automática após a execução"

#. type: Plain text
#: en/git-filter-branch.txt:608
#, priority:90
msgid "the fact that --tag-name-filter (when used to rename tags) doesn't remove the old tags but just adds new ones with the new name"
msgstr "o fato da opção `--tag-name-filter` (quando usado para renomear as tags) não remover as tags antigas, mas apenas adicionar novas com um novo nome"

#. type: Plain text
#: en/git-filter-branch.txt:617
#, priority:90
msgid "the fact that little educational information is provided to inform users of the ramifications of a rewrite and how to avoid mixing old and new history.  For example, this man page discusses how users need to understand that they need to rebase their changes for all their branches on top of new history (or delete and reclone), but that's only one of multiple concerns to consider.  See the \"DISCUSSION\" section of the git filter-repo manual page for more details."
msgstr "o fato de poucas informações educacionais serem fornecidas aos usuários das ramificações de uma reescrita e como evitar misturar o histórico antigo e o novo.  Por exemplo, esta página do manual discute como os usuários precisam entender que precisam refazer as suas alterações para todas as suas ramificações no topo do novo histórico (ou excluir ou refazer a clonagem), porém essa é apenas uma das várias preocupações a serem consideradas.  Para mais detalhes, consulte a seção \"DISCUSSÃO\" da página do manual do 'filter-repo'."

#. type: Plain text
#: en/git-filter-branch.txt:620
#, priority:90
msgid "Annotated tags can be accidentally converted to lightweight tags, due to either of two issues:"
msgstr "As tags anotadas podem ser convertidas acidentalmente em tags leves, devido a um de dois problemas:"

#. type: Plain text
#: en/git-filter-branch.txt:625
#, priority:90
msgid "Someone can do a history rewrite, realize they messed up, restore from the backups in refs/original/, and then redo their git-filter-branch command.  (The backup in refs/original/ is not a real backup; it dereferences tags first.)"
msgstr "Alguém pode reescrever o histórico, perceber que errou, restaurar a partir de um dos backups no 'refs/original/' e depois refazer o comando 'git-filter-branch'.  (O backup no 'refs/original/' não é um backup real; ele primeiro remove a referência das tags.)"

#. type: Plain text
#: en/git-filter-branch.txt:630
#, priority:90
msgid "Running git-filter-branch with either --tags or --all in your <rev-list options>.  In order to retain annotated tags as annotated, you must use --tag-name-filter (and must not have restored from refs/original/ in a previously botched rewrite)."
msgstr "Execute o comando 'git-filter-branch' com '--tags' ou '--all' mas suas `<opções da rev-list>`.  Para manter as tags que já estejam anotadas como anotadas, utilize '--tag-name-filter' (não deve ter sido restaurado a partir de um 'refs/original/' vindo anteriormente de uma reescrita danificada)."

#. type: Plain text
#: en/git-filter-branch.txt:636
#, priority:90
msgid "Any commit messages that specify an encoding will become corrupted by the rewrite; git-filter-branch ignores the encoding, takes the original bytes, and feeds it to commit-tree without telling it the proper encoding.  (This happens whether or not --msg-filter is used.)"
msgstr "Qualquer mensagem dos commits que defina uma codificação, se tornará corrompida pela reescrita; O 'git-filter-branch' ignora a codificação, pega os bytes originais e o alimenta para a árvore do commit sem informar a codificação adequada.  (Isso ocorre caso o filtro `--msg-filter` seja utilizado ou não.)"

#. type: Plain text
#: en/git-filter-branch.txt:641
#, priority:90
msgid "Commit messages (even if they are all UTF-8) by default become corrupted due to not being updated -- any references to other commit hashes in commit messages will now refer to no-longer-extant commits."
msgstr "É predefinido que as mensagens dos commits (mesmo que todas sejam UTF-8) fiquem corrompidas por não serem atualizadas -- quaisquer referências a outros hashes dos commits, nas mensagens dos commits, agora se referem a commits que não existem mais."

#. type: Plain text
#: en/git-filter-branch.txt:652
#, priority:90
msgid "There are no facilities for helping users find what unwanted crud they should delete, which means they are much more likely to have incomplete or partial cleanups that sometimes result in confusion and people wasting time trying to understand.  (For example, folks tend to just look for big files to delete instead of big directories or extensions, and once they do so, then sometime later folks using the new repository who are going through history will notice a build artifact directory that has some files but not others, or a cache of dependencies (node_modules or similar) which couldn't have ever been functional since it's missing some files.)"
msgstr "Não há facilidades para ajudar os usuários a encontrarem os itens indesejados que devem ser excluídos, o que significa que são muito mais propensos a fazer limpezas incompletas ou parciais que às vezes resultam em confusão e pessoas perdendo tempo tentando compreender.  (Como, por exemplo, as pessoas tendem a procurar excluir apenas os arquivos grandes, em vez dos grandes diretórios ou extensões, e uma vez que o fazem algum tempo depois, as pessoas que usam o novo repositório que estão passando pelo histórico notarão alguns artefatos de construção onde alguns arquivos existem e outros não, ou um cache com dependências (node_modules ou similar) que nunca poderiam estar funcionais, pois alguns arquivos estão faltando.)"

#. type: Plain text
#: en/git-filter-branch.txt:655
#, priority:90
msgid "If --prune-empty isn't specified, then the filtering process can create hoards of confusing empty commits"
msgstr "Caso a opção `--prune-empty` não seja utilizado, o processo de filtragem poderá criar hordas confusas com commits vazios"

#. type: Plain text
#: en/git-filter-branch.txt:659
#, priority:90
msgid "If --prune-empty is specified, then intentionally placed empty commits from before the filtering operation are also pruned instead of just pruning commits that became empty due to filtering rules."
msgstr "Caso a opção `--prune-empty` seja utilizado, os commits vazios que foram intencionalmente colocados antes da operação de filtragem também serão removidos, em vez de apenas os commits removidos que ficaram vazios devido às regras de filtragem."

#. type: Plain text
#: en/git-filter-branch.txt:662
#, ignore-ellipsis, priority:90
msgid "If --prune-empty is specified, sometimes empty commits are missed and left around anyway (a somewhat rare bug, but it happens...)"
msgstr "Caso a opção `--prune-empty` seja utilizado, algumas vezes os commits vazios são perdidos e deixados de qualquer maneira (um bug um tanto raro, mas acontece...)"

#. type: Plain text
#: en/git-filter-branch.txt:666
#, priority:90
msgid "A minor issue, but users who have a goal to update all names and emails in a repository may be led to --env-filter which will only update authors and committers, missing taggers."
msgstr "Um problema menor, porém os usuários que têm o objetivo de atualizar todos os nomes e os e-mails em um repositório podem ser levados ao '--env-filter', que atualizará apenas os autores e que fez os commits, sem as tags."

#. type: Plain text
#: en/git-filter-branch.txt:672
#, priority:90
msgid "If the user provides a --tag-name-filter that maps multiple tags to the same name, no warning or error is provided; git-filter-branch simply overwrites each tag in some undocumented pre-defined order resulting in only one tag at the end.  (A git-filter-branch regression test requires this surprising behavior.)"
msgstr "Caso o usuário utilize um comando `--tag-name-filter` que mapeie várias tags para o mesmo nome, nenhum aviso ou erro será exibido; O comando `git-filter-branch` simplesmente sobrescreve cada tag em uma ordem predefinida não documentada, resultando em apenas uma tag no final.  (Um teste de regressão `git-filter-branch` requer este comportamento.)"

#. type: Plain text
#: en/git-filter-branch.txt:675
#, priority:90
msgid "Also, the poor performance of git-filter-branch often leads to safety issues:"
msgstr "Além disso, o baixo desempenho do comando 'git-filter-branch' geralmente leva a problemas de segurança:"

#. type: Plain text
#: en/git-filter-branch.txt:692
#, priority:90
msgid "Coming up with the correct shell snippet to do the filtering you want is sometimes difficult unless you're just doing a trivial modification such as deleting a couple files.  Unfortunately, people often learn if the snippet is right or wrong by trying it out, but the rightness or wrongness can vary depending on special circumstances (spaces in filenames, non-ascii filenames, funny author names or emails, invalid timezones, presence of grafts or replace objects, etc.), meaning they may have to wait a long time, hit an error, then restart.  The performance of git-filter-branch is so bad that this cycle is painful, reducing the time available to carefully re-check (to say nothing about what it does to the patience of the person doing the rewrite even if they do technically have more time available).  This problem is extra compounded because errors from broken filters may not be shown for a long time and/or get lost in a sea of output.  Even worse, broken filters often just result in silent incorrect rewrites."
msgstr "Chegar com o trecho shell correto para fazer a filtragem desejada algumas vezes é difícil, a menos que você não esteja fazendo uma alteração trivial como a exclusão de alguns arquivos.  Infelizmente, as pessoas geralmente aprendem se o trecho está certo ou errado ao testá-lo, porém o certo ou errado pode variar dependendo de circunstâncias especiais (espaços nos nomes dos arquivos, dos nomes dos arquivos não-ascii, nomes ou e-mails engraçados dos autores, fusos horários inválidos, a presença de enxertos ou a reposição dos objetos, etc.), o que significa que eles podem ter que esperar muito tempo, encontrar um erro e reiniciar.  O desempenho do comando 'git-filter-branch' é tão ruim que este ciclo é doloroso, reduzindo o tempo disponível para uma nova verificação mais cuidadosa (isso sem falar sobre o que isso faz com a paciência da pessoa que está reescrevendo, ainda que tecnicamente tenham mais recursos e tempo disponível).  Este problema é mais complexo porque os erros vindos dos filtros quebrados podem não ser exibidos por um longo período de tempo e/ou estarem perdidos uma imensidão do que for gerado.  Pior ainda, os filtros quebrados geralmente resultam em reescritas incorretas e silenciosas."

#. type: Plain text
#: en/git-filter-branch.txt:700
#, priority:90
msgid "To top it all off, even when users finally find working commands, they naturally want to share them.  But they may be unaware that their repo didn't have some special cases that someone else's does.  So, when someone else with a different repository runs the same commands, they get hit by the problems above.  Or, the user just runs commands that really were vetted for special cases, but they run it on a different OS where it doesn't work, as noted above."
msgstr "E acima de tudo, mesmo quando os usuários finalmente encontram os comandos que funcionam, eles naturalmente querem compartilhá-los.  Porém eles podem não estar cientes que o repositório deles não teve algumas questões especiais que outros tiveram.  Portanto, quando alguém com um repositório diferente executa os mesmos comandos, é atingido pelos problemas acima.  Ou então, o usuário apenas executa os comandos que foram realmente examinados para questões especiais, mas eles o executam em um sistema operacional diferente, onde não funciona, conforme observado acima."

#. type: Title =
#: en/git-fmt-merge-msg.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-fmt-merge-msg(1)"
msgstr "git-fmt-merge-msg(1)"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:7
#, priority:100
msgid "git-fmt-merge-msg - Produce a merge commit message"
msgstr "git-fmt-merge-msg - Gera uma mensagem de commit da mesclagem"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:14
#, no-wrap, priority:100
msgid ""
"'git fmt-merge-msg' [-m <message>] [--into-name <branch>] [--log[=<n>] | --no-log]\n"
"'git fmt-merge-msg' [-m <message>] [--log[=<n>] | --no-log] -F <file>\n"
msgstr ""
"'git fmt-merge-msg' [-m <mensagem>] [--into-name <ramo>] [--log[=<n>] | --no-log]\n"
"'git fmt-merge-msg' [-m <mensagem>] [--log[=<n>] | --no-log] -F <arquivo>\n"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:20
#, priority:100
msgid "Takes the list of merged objects on stdin and produces a suitable commit message to be used for the merge commit, usually to be passed as the '<merge-message>' argument of 'git merge'."
msgstr "Pega a lista de objetos mesclados no stdin e gera uma mensagem adequada para o commit, que foi mesclado, geralmente ser utilizada como '<mensagem-da-mesclagem>' que é um argumento do comando 'git merge'."

#. type: Plain text
#: en/git-fmt-merge-msg.txt:23
#, priority:100
msgid "This command is intended mostly for internal use by scripts automatically invoking 'git merge'."
msgstr "Primeiramente, este comando é destinado para uso interno com scripts que invocam automaticamente o 'git merge'."

#. type: Labeled list
#: en/git-fmt-merge-msg.txt:27 en/merge-options.txt:93
#, no-wrap, priority:240
msgid "--log[=<n>]"
msgstr "--log[=<n>]"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:33
#, priority:100
msgid "In addition to branch names, populate the log message with one-line descriptions from the actual commits that are being merged.  At most <n> commits from each merge parent will be used (20 if <n> is omitted).  This overrides the `merge.log` configuration variable."
msgstr "Além dos nomes das ramificações, preencha a mensagem do registro log com descrições de uma linha dos commits que estão sendo mesclados atualmente.  Serão utilizadas no máximo <n> mesclagens dos commits de cada origem (20 caso <n> seja omitido).  Isso substitui a variável de configuração `merge.log`."

#. type: Labeled list
#: en/git-fmt-merge-msg.txt:34 en/merge-options.txt:94
#, ignore-same, no-wrap, priority:240
msgid "--no-log"
msgstr "--no-log"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:37
#, priority:100
msgid "Do not list one-line descriptions from the actual commits being merged."
msgstr "Não liste os descritivos de uma linha dos commits atuais que estão sendo mescladas."

#. type: Labeled list
#: en/git-fmt-merge-msg.txt:38
#, ignore-same, no-wrap, priority:100
msgid "--[no-]summary"
msgstr "--[no-]summary"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:41
#, priority:100
msgid "Synonyms to --log and --no-log; these are deprecated and will be removed in the future."
msgstr "É um sinônimos para `--log` e `--no-log`; estas opções foram descontinuadas e serão removidas no futuro."

#. type: Labeled list
#: en/git-fmt-merge-msg.txt:43
#, no-wrap, priority:100
msgid "--message <message>"
msgstr "--message <mensagem>"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:46
#, priority:100
msgid "Use <message> instead of the branch names for the first line of the log message.  For use with `--log`."
msgstr "Para a primeira linha da mensagem do registro log utilize `<mensagem>` em vez dos nomes das ramificações.  Para usar com `--log`."

#. type: Labeled list
#: en/git-fmt-merge-msg.txt:47 en/git-merge.txt:80
#, no-wrap, priority:240
msgid "--into-name <branch>"
msgstr "--into-name <ramo>"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:50
#, priority:100
msgid "Prepare the merge message as if merging to the branch `<branch>`, instead of the name of the real branch to which the merge is made."
msgstr "Prepare a mensagem da mesclagem como se estivesse mesclando com a ramificação `<ramificação>` em vez do nome real da ramificação para onde a mesclagem será feita."

#. type: Labeled list
#: en/git-fmt-merge-msg.txt:52
#, no-wrap, priority:100
msgid "--file <file>"
msgstr "--file <arquivo>"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:55
#, priority:100
msgid "Take the list of merged objects from <file> instead of stdin."
msgstr "Pegue a lista dos objetos mesclados de <arquivo> em vez do stdin."

#. type: Labeled list
#: en/git-fmt-merge-msg.txt:60
#, ignore-same, no-wrap, priority:100
msgid "merge.summary"
msgstr "merge.summary"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:63
#, priority:100
msgid "Synonym to `merge.log`; this is deprecated and will be removed in the future."
msgstr "É um sinônimo para `merge.log`; estas opções foram descontinuadas e serão removidas no futuro."

#. type: delimited block -
#: en/git-fmt-merge-msg.txt:70
#, no-wrap, priority:100
msgid ""
"$ git fetch origin master\n"
"$ git fmt-merge-msg --log <$GIT_DIR/FETCH_HEAD\n"
msgstr ""
"$ git fetch origin master\n"
"$ git fmt-merge-msg --log <$GIT_DIR/FETCH_HEAD\n"

#. type: Plain text
#: en/git-fmt-merge-msg.txt:74
#, priority:100
msgid "Print a log message describing a merge of the \"master\" branch from the \"origin\" remote."
msgstr "Imprima uma mensagem do registro log descrevendo uma mesclagem do ramo \"master\" no ramo remoto \"origin\"."

#. type: Title =
#: en/git-for-each-ref.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-for-each-ref(1)"
msgstr "git-for-each-ref(1)"

#. type: Plain text
#: en/git-for-each-ref.txt:7
#, priority:80
msgid "git-for-each-ref - Output information on each ref"
msgstr "git-for-each-ref - Informações de saída de cada referência"

#. type: Plain text
#: en/git-for-each-ref.txt:16
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git for-each-ref' [--count=<count>] [--shell|--perl|--python|--tcl]\n"
"\t\t   [(--sort=<key>)...] [--format=<format>] [<pattern>...]\n"
"\t\t   [--points-at=<object>]\n"
"\t\t   [--merged[=<object>]] [--no-merged[=<object>]]\n"
"\t\t   [--contains[=<object>]] [--no-contains[=<object>]]\n"
msgstr ""
"'git for-each-ref' [--count=<count>] [--shell|--perl|--python|--tcl]\n"
"\t\t   [(--sort=<chave>)...] [--format=<formato>] [<padrão>...]\n"
"\t\t   [--points-at=<objeto>]\n"
"\t\t   [--merged[=<objeto>]] [--no-merged[=<objeto>]]\n"
"\t\t   [--contains[=<objeto>]] [--no-contains[=<objeto>]]\n"

#. type: Plain text
#: en/git-for-each-ref.txt:26
#, priority:80
msgid "Iterate over all refs that match `<pattern>` and show them according to the given `<format>`, after sorting them according to the given set of `<key>`.  If `<count>` is given, stop after showing that many refs.  The interpolated values in `<format>` can optionally be quoted as string literals in the specified host language allowing their direct evaluation in that language."
msgstr "Reitere todos as referências que coincidam com `<padrão>` e mostre-os de acordo com o `<formato>` utilizado após classificá-los de acordo com o conjunto informado por `<chave>`.  Caso `<count>` seja utilizado, pare após exibir referências demais.  Os valores interpolados no `<formato>` podem opcionalmente ser citados como literais de uma cadeia de caracteres no idioma do host utilizado, permitindo a sua avaliação direta neste idioma."

#. type: Labeled list
#: en/git-for-each-ref.txt:29 en/git-show-ref.txt:88
#, ignore-ellipsis, no-wrap, priority:80
msgid "<pattern>..."
msgstr "<padrão>..."

#. type: Plain text
#: en/git-for-each-ref.txt:34
#, priority:80
msgid "If one or more patterns are given, only refs are shown that match against at least one pattern, either using fnmatch(3) or literally, in the latter case matching completely or from the beginning up to a slash."
msgstr "Caso uma ou mais padrões sejam utilizados, serão exibidos apenas as referências que coincidam com um dos padrões apresentados utilizando fnmatch(3) ou literal, neste último caso, apenas caso coincida completamente seja desde o início ou até uma barra."

#. type: Labeled list
#: en/git-for-each-ref.txt:35
#, no-wrap, priority:80
msgid "--count=<count>"
msgstr "--count=<count>"

#. type: Plain text
#: en/git-for-each-ref.txt:39
#, priority:80
msgid "By default the command shows all refs that match `<pattern>`.  This option makes it stop after showing that many refs."
msgstr "É predefinido que o comando exiba todos as referências que coincidam com `<padrão>`.  Esta opção define um limite de quantidade para parar após a exibição de `<count>` referências."

#. type: Plain text
#: en/git-for-each-ref.txt:46
#, priority:80
msgid "A field name to sort on.  Prefix `-` to sort in descending order of the value.  When unspecified, `refname` is used.  You may use the --sort=<key> option multiple times, in which case the last key becomes the primary key."
msgstr "A field name to sort on.  O prefixo `-` é utilizado para classificar em ordem decrescente.  When unspecified, `refname` is used.  Você pode utilizar a opção `--sort=<chave>` mais de uma vez; nesse caso, a última chave se torna a chave primária."

#. type: Labeled list
#: en/git-for-each-ref.txt:47 en/git-ls-files.txt:195 en/git-ls-tree.txt:86 en/git-replace.txt:106 en/git-tag.txt:197 en/pretty-options.txt:2
#, no-wrap, priority:260
msgid "--format=<format>"
msgstr "--format=<formato>"

#. type: Plain text
#: en/git-for-each-ref.txt:59
#, priority:80
msgid "A string that interpolates `%(fieldname)` from a ref being shown and the object it points at.  If `fieldname` is prefixed with an asterisk (`*`) and the ref points at a tag object, use the value for the field in the object which the tag object refers to (instead of the field in the tag object).  When unspecified, `<format>` defaults to `%(objectname) SPC %(objecttype) TAB %(refname)`.  It also interpolates `%%` to `%`, and `%xx` where `xx` are hex digits interpolates to character with hex code `xx`; for example `%00` interpolates to `\\0` (NUL), `%09` to `\\t` (TAB) and `%0a` to `\\n` (LF)."
msgstr "Uma cadeia de caracteres que interpola `%(fieldname)` vindo de uma referência sendo exibida e o objeto para o qual aponta.  Caso `fieldname` seja prefixada com um asterisco (`*`) e a referência aponte para um objeto tag, utilize o valor do campo no objeto ao qual o objeto tag se refere (em vez do campo no objeto tag).  Quando não especificado, o `<formato>` retorna para a predefinição `%(objectname) SPC %(objecttype) TAB %(refname)`.  Também interpola `%%` para `%` e `% xx` onde `xx` são dígitos hexadecimais interpolados com caracteres que tenha um código hexadecimal `xx`; `% 00` interpola para `\\0` (NUL) por exemplo, `%09` para `\\t` (TAB) e `%0a` para `\\n` (LF)."

#. type: Plain text
#: en/git-for-each-ref.txt:64 en/git-tag.txt:129
#, priority:240
msgid "Respect any colors specified in the `--format` option. The `<when>` field must be one of `always`, `never`, or `auto` (if `<when>` is absent, behave as if `always` was given)."
msgstr "Respeite todas as cores usadas com a opção `--format`. O campo `<quando>` deve ser `always`, `never` ou `auto` (comporte-se como `always` caso `<quando>` esteja ausente)."

#. type: Labeled list
#: en/git-for-each-ref.txt:65
#, ignore-same, no-wrap, priority:80
msgid "--shell"
msgstr "--shell"

#. type: Labeled list
#: en/git-for-each-ref.txt:66
#, ignore-same, no-wrap, priority:80
msgid "--perl"
msgstr "--perl"

#. type: Labeled list
#: en/git-for-each-ref.txt:67
#, ignore-same, no-wrap, priority:80
msgid "--python"
msgstr "--python"

#. type: Labeled list
#: en/git-for-each-ref.txt:68
#, ignore-same, no-wrap, priority:80
msgid "--tcl"
msgstr "--tcl"

#. type: Plain text
#: en/git-for-each-ref.txt:73
#, priority:80
msgid "If given, strings that substitute `%(fieldname)` placeholders are quoted as string literals suitable for the specified host language.  This is meant to produce a scriptlet that can directly be `eval`ed."
msgstr "Se informado, as strings que substituem os espaços reservados `% (fieldname)` são citadas como literais de strings adequadas para o idioma do host especificado.  Isso tem a intenção de produzir um \"scriptlet\" que possa ser diretamente \"avaliado\"."

#. type: Labeled list
#: en/git-for-each-ref.txt:74
#, no-wrap, priority:80
msgid "--points-at=<object>"
msgstr "--points-at=<objeto>"

#. type: Plain text
#: en/git-for-each-ref.txt:76
#, priority:80
msgid "Only list refs which points at the given object."
msgstr "Listar apenas as referências que apontem para o objeto especificado."

#. type: Labeled list
#: en/git-for-each-ref.txt:77
#, no-wrap, priority:80
msgid "--merged[=<object>]"
msgstr "--merged[=<objeto>]"

#. type: Plain text
#: en/git-for-each-ref.txt:80
#, priority:80
msgid "Only list refs whose tips are reachable from the specified commit (HEAD if not specified)."
msgstr "Liste apenas as referências cujas dicas são acessíveis a partir do commit especificado (ou HEAD caso nenhum seja especificado)."

#. type: Labeled list
#: en/git-for-each-ref.txt:81
#, no-wrap, priority:80
msgid "--no-merged[=<object>]"
msgstr "--no-merged[=<objeto>]"

#. type: Plain text
#: en/git-for-each-ref.txt:84
#, priority:80
msgid "Only list refs whose tips are not reachable from the specified commit (HEAD if not specified)."
msgstr "Liste apenas as referências cujas dicas não podem ser acessadas a partir do commit especificado (ou HEAD caso nenhum seja especificado)."

#. type: Labeled list
#: en/git-for-each-ref.txt:85
#, no-wrap, priority:80
msgid "--contains[=<object>]"
msgstr "--contains[=<objeto>]"

#. type: Plain text
#: en/git-for-each-ref.txt:88
#, priority:80
msgid "Only list refs which contain the specified commit (HEAD if not specified)."
msgstr "Liste apenas as referências que contenham os commits especificados (ou HEAD caso nenhum seja especificado)."

#. type: Labeled list
#: en/git-for-each-ref.txt:89
#, no-wrap, priority:80
msgid "--no-contains[=<object>]"
msgstr "--no-contains[=<objeto>]"

#. type: Plain text
#: en/git-for-each-ref.txt:92
#, priority:80
msgid "Only list refs which don't contain the specified commit (HEAD if not specified)."
msgstr "Listar apenas as referências que não contenham os commits especificados (ou HEAD caso nenhum seja especificado)."

#. type: Plain text
#: en/git-for-each-ref.txt:95
#, priority:80
msgid "Sorting and filtering refs are case insensitive."
msgstr "As referências de classificação e filtragem não diferenciam as maiúsculas de minúsculas."

#. type: Title -
#: en/git-for-each-ref.txt:97 en/git-ls-files.txt:242 en/git-ls-tree.txt:145
#, no-wrap, priority:80
msgid "FIELD NAMES"
msgstr "NOME DOS CAMPOS"

#. type: Plain text
#: en/git-for-each-ref.txt:102
#, priority:80
msgid "Various values from structured fields in referenced objects can be used to interpolate into the resulting output, or as sort keys."
msgstr "Há vários valores dos campos estruturados nas referências dos objetos que podem ser utilizados para interpolação da saída resultante ou como chaves de classificação."

#. type: Plain text
#: en/git-for-each-ref.txt:104
#, priority:80
msgid "For all objects, the following names can be used:"
msgstr "Os seguintes nomes podem ser utilizados para todos os objetos, :"

#. type: Labeled list
#: en/git-for-each-ref.txt:105
#, no-wrap, priority:80
msgid "refname"
msgstr "refname"

#. type: Plain text
#: en/git-for-each-ref.txt:121
#, priority:80
msgid "The name of the ref (the part after $GIT_DIR/).  For a non-ambiguous short name of the ref append `:short`.  The option core.warnAmbiguousRefs is used to select the strict abbreviation mode. If `lstrip=<N>` (`rstrip=<N>`) is appended, strips `<N>` slash-separated path components from the front (back) of the refname (e.g. `%(refname:lstrip=2)` turns `refs/tags/foo` into `foo` and `%(refname:rstrip=2)` turns `refs/tags/foo` into `refs`).  If `<N>` is a negative number, strip as many path components as necessary from the specified end to leave `-<N>` path components (e.g. `%(refname:lstrip=-2)` turns `refs/tags/foo` into `tags/foo` and `%(refname:rstrip=-1)` turns `refs/tags/foo` into `refs`). When the ref does not have enough components, the result becomes an empty string if stripping with positive <N>, or it becomes the full refname if stripping with negative <N>.  Neither is an error."
msgstr "O nome da referência \"ref\" (a parte após $GIT_DIR/).  Para um nome abreviado não ambíguo do ref, acrescente `: short`.  A opção `core.warnAmbiguousRefs` é utilizada para selecionar o modo estrito de abreviação. Caso `lstrip=<N>` (`rstrip=<N>`) for anexado, retira `<N>` dos componentes de caminho separados por barra da frente (traseira) do refname (`%(refname:lstrip=2)` por exemplo, transforma `refs/tags/foo` em `foo` e`%(refname:rstrip=2)` transforma `refs/tags/foo` em `refs`).  Caso `<N>` seja um número negativo, retire quantos componentes do caminho forem necessários do final especificado, deixando os componentes do caminho `-<N>`, por exemplo (`%(refname:lstrip=-2)` transforma `refs/tags/foo` em `tags/foo` e `%(refname:rstrip=-1)` transforma `refs/tags/foo` em `refs`). Quando uma ref não possui componentes suficientes, o resultado se torna uma cadeia de caracteres vazia caso seja removida com <N> positivo, ou se torna o refname completo caso seja removida com um <N> negativo.  Nenhum dos dois é um erro."

#. type: Plain text
#: en/git-for-each-ref.txt:123
#, priority:80
msgid "`strip` can be used as a synonym to `lstrip`."
msgstr "O `strip` pode ser utilizado como sinônimo de `lstrip`."

#. type: Labeled list
#: en/git-for-each-ref.txt:124 en/git-ls-tree.txt:153
#, no-wrap, priority:80
msgid "objecttype"
msgstr "objecttype"

#. type: Plain text
#: en/git-for-each-ref.txt:126
#, priority:80
msgid "The type of the object (`blob`, `tree`, `commit`, `tag`)."
msgstr "O tipo do objeto (`blob`, `tree`, `commit`, `tag`)."

#. type: Labeled list
#: en/git-for-each-ref.txt:127
#, no-wrap, priority:80
msgid "objectsize"
msgstr "objectsize"

#. type: Plain text
#: en/git-for-each-ref.txt:131
#, priority:80
msgid "The size of the object (the same as 'git cat-file -s' reports).  Append `:disk` to get the size, in bytes, that the object takes up on disk. See the note about on-disk sizes in the `CAVEATS` section below."
msgstr "É o tamanho do objeto (o mesmo que relatórios 'git cat-file -s')  Acrescente `: disk` para saber o quanto o objeto ocupa no disco, em bytes. Consulte a nota sobre os tamanhos do disco na seção `RESSALVAS` abaixo."

#. type: Labeled list
#: en/git-for-each-ref.txt:131 en/git-ls-files.txt:250 en/git-ls-tree.txt:155
#, no-wrap, priority:80
msgid "objectname"
msgstr "objectname"

#. type: Plain text
#: en/git-for-each-ref.txt:137
#, priority:80
msgid "The object name (aka SHA-1).  For a non-ambiguous abbreviation of the object name append `:short`.  For an abbreviation of the object name with desired length append `:short=<length>`, where the minimum length is MINIMUM_ABBREV. The length may be exceeded to ensure unique object names."
msgstr "O nome do objeto (também informado como SHA-1)  Para uma abreviação não ambígua do nome do objeto, adicione `: short`.  Para uma abreviação do nome do objeto com o comprimento desejado, inclua `:short=<comprimento>`, onde o comprimento mínimo é `MINIMUM_ABBREV`. O comprimento pode ser excedido para garantir que os nomes dos objetos sejam únicos."

#. type: Labeled list
#: en/git-for-each-ref.txt:137
#, no-wrap, priority:80
msgid "deltabase"
msgstr "deltabase"

#. type: Plain text
#: en/git-for-each-ref.txt:141
#, priority:80
msgid "This expands to the object name of the delta base for the given object, if it is stored as a delta.  Otherwise it expands to the null object name (all zeroes)."
msgstr "Isso se expande para o nome do objeto da base delta para o objeto especificado, caso ele esteja armazenado como um delta.  Caso contrário, o objeto se expandirá para um nome nulo (todo zerado)."

#. type: Labeled list
#: en/git-for-each-ref.txt:142
#, no-wrap, priority:80
msgid "upstream"
msgstr "upstream"

#. type: Plain text
#: en/git-for-each-ref.txt:152
#, priority:80
msgid "The name of a local ref which can be considered ``upstream'' from the displayed ref. Respects `:short`, `:lstrip` and `:rstrip` in the same way as `refname` above.  Additionally respects `:track` to show \"[ahead N, behind M]\" and `:trackshort` to show the terse version: \">\" (ahead), \"<\" (behind), \"<>\" (ahead and behind), or \"=\" (in sync). `:track` also prints \"[gone]\" whenever unknown upstream ref is encountered. Append `:track,nobracket` to show tracking information without brackets (i.e \"ahead N, behind M\")."
msgstr "É o nome de uma \"ref\" local que pode ser considerada ``upstream'' da \"ref\" que está sendo exibida. Respeita `:short`, `:lstrip` e `:rstrip` da mesma maneira que o `refname` acima.  Além disso, respeita também `:track` para exibir \"[à frente N, atrás M]\"e `:trackshort` para exibir a versão concisa: \">\" (à frente), \"<\" (atrás), \"<>\" (à frente e atrás) ou \"=\" (em sincronia). `:track` também imprime \"[gone]\" sempre que uma \"ref\" \"upstream\" desconhecida seja encontrada. Acrescente `:track,nobracket` para exibir as informações de rastreamento sem colchetes (ou seja, \"à frente de N, atrás de M\")."

#. type: Plain text
#: en/git-for-each-ref.txt:159
#, priority:80
msgid "For any remote-tracking branch `%(upstream)`, `%(upstream:remotename)` and `%(upstream:remoteref)` refer to the name of the remote and the name of the tracked remote ref, respectively. In other words, the remote-tracking branch can be updated explicitly and individually by using the refspec `%(upstream:remoteref):%(upstream)` to fetch from `%(upstream:remotename)`."
msgstr "Para qualquer ramificação monitorada remotamente como `%(upstream)`, `%(upstream:nomeremoto)` e `%(upstream:remoteref)` consulte o nome remoto e o nome \"ref\" monitorado remotamente e assim sucessivamente. Em outras palavras, o ramo monitorado remotamente pode ser atualizado de forma explicita ou individualmente utilizando o \"refspec\" `%(upstream:remoteref):%(upstream)` para que seja capturado em `%(upstream:remotename)`."

#. type: Plain text
#: en/git-for-each-ref.txt:163
#, priority:80
msgid "Has no effect if the ref does not have tracking information associated with it.  All the options apart from `nobracket` are mutually exclusive, but if used together the last option is selected."
msgstr "Não tem nenhum efeito caso o ref não tenha informações de rastreamento associadas a ele.  Todas as opções além de `nobracket` são mutuamente exclusivas, porém se utilizadas em conjunto, a última opção será selecionada."

#. type: Labeled list
#: en/git-for-each-ref.txt:164
#, no-wrap, priority:80
msgid "push"
msgstr "push"

#. type: Plain text
#: en/git-for-each-ref.txt:170
#, priority:80
msgid "The name of a local ref which represents the `@{push}` location for the displayed ref. Respects `:short`, `:lstrip`, `:rstrip`, `:track`, `:trackshort`, `:remotename`, and `:remoteref` options as `upstream` does. Produces an empty string if no `@{push}` ref is configured."
msgstr "O nome de uma \"ref\" local que representa a localização `@{push}` para uma ref que está sendo exibido. Respeita as opções `:short`, `:lstrip`, `:rstrip`, `:track`, `:trackshort`, `:remotename`, e `:remoteref`; assim como a opção `upstream`. Produz uma cadeia de caracteres vazia caso nenhum `@{push}` \"ref\" esteja configurada."

#. type: Labeled list
#: en/git-for-each-ref.txt:171 en/git.txt:428
#, no-wrap, priority:100
msgid "HEAD"
msgstr "HEAD"

#. type: Plain text
#: en/git-for-each-ref.txt:174
#, priority:80
msgid "'*' if HEAD matches current ref (the checked out branch), ' ' otherwise."
msgstr "'*' caso HEAD corresponda à ref atual (a ramificação que foi verificada), caso contrário ' '."

#. type: Plain text
#: en/git-for-each-ref.txt:180
#, priority:80
msgid "Change output color. Followed by `:<colorname>`, where color names are described under Values in the \"CONFIGURATION FILE\" section of linkgit:git-config[1].  For example, `%(color:bold red)`."
msgstr "Muda a cor de saída. Seguido por `:<colorname>` onde os nomes das cores são descritos em Valores na seção \"ARQUIVO DE CONFIGURAÇÃO\" do linkgit:git-config[1].  Por exemplo, `%(color:bold red)`."

#. type: Labeled list
#: en/git-for-each-ref.txt:181
#, no-wrap, priority:80
msgid "align"
msgstr "align"

#. type: Plain text
#: en/git-for-each-ref.txt:195
#, ignore-ellipsis, priority:80
msgid "Left-, middle-, or right-align the content between %(align:...) and %(end). The \"align:\" is followed by `width=<width>` and `position=<position>` in any order separated by a comma, where the `<position>` is either left, right or middle, default being left and `<width>` is the total length of the content with alignment. For brevity, the \"width=\" and/or \"position=\" prefixes may be omitted, and bare <width> and <position> used instead.  For instance, `%(align:<width>,<position>)`. If the contents length is more than the width then no alignment is performed. If used with `--quote` everything in between %(align:...) and %(end) is quoted, but if nested then only the topmost level performs quoting."
msgstr "Alinhe o conteúdo à esquerda (Left-), ao meio (Middle-) ou à direita entre %(align:...) e %(end). O \"align:\" é seguido por `width=<largura>` e `position=<posição>` em qualquer ordem separado por vírgula, onde a `<posição>` é esquerda, direita ou meio, a predefinição retorna para esquerda e `<largura>` é o comprimento total do conteúdo com alinhamento. Por questões de brevidade, os prefixos \"width=\" ou \"position=\" podem ser omitidos, podendo ser utilizados <largura> e <posição> apenas.  Por exemplo, `%(align:<largura>,<posição>)`. Caso o comprimento do conteúdo seja maior que a largura, nenhum alinhamento será realizado. Se utilizado com `--quote`, tudo entre %(align:...) e %(end) será citado, porém se aninhado, a citação ocorrerá apenas no nível mais alto."

#. type: Labeled list
#: en/git-for-each-ref.txt:196
#, no-wrap, priority:80
msgid "if"
msgstr "if"

#. type: Plain text
#: en/git-for-each-ref.txt:208
#, ignore-ellipsis, priority:80
msgid "Used as %(if)...%(then)...%(end) or %(if)...%(then)...%(else)...%(end).  If there is an atom with value or string literal after the %(if) then everything after the %(then) is printed, else if the %(else) atom is used, then everything after %(else) is printed. We ignore space when evaluating the string before %(then), this is useful when we use the %(HEAD) atom which prints either \"*\" or \" \" and we want to apply the 'if' condition only on the 'HEAD' ref.  Append \":equals=<string>\" or \":notequals=<string>\" to compare the value between the %(if:...) and %(then) atoms with the given string."
msgstr "Utilizado como %(if)...%(then)...%(end) ou %(if)...%(then)...%(else)...%(end).  Caso haja um átomo com um valor ou uma cadeia de caracteres literal após o %(if), tudo após o %(then) será impresso; caso contrário, caso o átomo em %(else) seja utilizado, tudo será impresso após o %(else). Ignoramos o espaço ao avaliar uma cadeia de caracteres antes de %(then), isso é útil quando usamos o átomo %(HEAD) que imprime \"*\" ou \" \" e queremos aplicar a condição 'if' apenas no ref 'HEAD'.  Anexar \":equals=<texto>\" ou \":notequals=<texto>\" para comparar o valor entre os átomos de %(if:...) e %(then) com a sequência usada."

#. type: Labeled list
#: en/git-for-each-ref.txt:209
#, no-wrap, priority:80
msgid "symref"
msgstr "symref"

#. type: Plain text
#: en/git-for-each-ref.txt:214
#, priority:80
msgid "The ref which the given symbolic ref refers to. If not a symbolic ref, nothing is printed. Respects the `:short`, `:lstrip` and `:rstrip` options in the same way as `refname` above."
msgstr "O ref ao qual determinado ref simbólico se refere. Caso não seja um ref simbólico, nada será impresso. Respeita as opções `:short`, `:lstrip` e `:rstrip` da mesma maneira que o `refname` acima."

#. type: Labeled list
#: en/git-for-each-ref.txt:215
#, no-wrap, priority:80
msgid "worktreepath"
msgstr "worktreepath"

#. type: Plain text
#: en/git-for-each-ref.txt:219
#, priority:80
msgid "The absolute path to the worktree in which the ref is checked out, if it is checked out in any linked worktree. Empty string otherwise."
msgstr "O caminho absoluto para a árvore de trabalho onde a \"ref\" foi averiguada, caso estiveja em qualquer árvore de trabalho vinculada. Caso contrário, uma sequência vazia."

#. type: Plain text
#: en/git-for-each-ref.txt:225
#, priority:80
msgid "In addition to the above, for commit and tag objects, the header field names (`tree`, `parent`, `object`, `type`, and `tag`) can be used to specify the value in the header field.  Fields `tree` and `parent` can also be used with modifier `:short` and `:short=<length>` just like `objectname`."
msgstr "Além do que foi dito acima para os objetos commit e tag, os nomes dos campos do cabeçalho (`tree`, `parent`, `object`, `type`, e `tag`) podem ser utilizados para especificar o valor no campo do cabeçalho.  Os campos `tree` e `parent` também podem ser utilizado com um modificador `:short` e `:short=<comprimento>` assim como `objectname`."

#. type: Plain text
#: en/git-for-each-ref.txt:230
#, priority:80
msgid "For commit and tag objects, the special `creatordate` and `creator` fields will correspond to the appropriate date or name-email-date tuple from the `committer` or `tagger` fields depending on the object type.  These are intended for working on a mix of annotated and lightweight tags."
msgstr "Para os objetos commit e tag, os campos especiais `creatordate` e `creator` coincidirão com a data apropriada ou ao termo ordenado nome-email-data dos campos `committer` ou `tagger`, dependendo do tipo do objeto.  Estes são destinados para trabalhar com uma mistura de tags anotadas e leves."

#. type: Plain text
#: en/git-for-each-ref.txt:237
#, priority:80
msgid "Fields that have name-email-date tuple as its value (`author`, `committer`, and `tagger`) can be suffixed with `name`, `email`, and `date` to extract the named component.  For email fields (`authoremail`, `committeremail` and `taggeremail`), `:trim` can be appended to get the email without angle brackets, and `:localpart` to get the part before the `@` symbol out of the trimmed email."
msgstr "Os campos que possuam um termo ordenado nome-email-data como o valor (`autor`, `committer` e `tagger`) podem ser sufixados com `nome`, `email` e `data` para extrair o componente informado.  Para campos do email (`authoremail`, `committeremail` e `taggeremail`), o `:trim` pode ser anexado para obter o e-mail sem os colchetes e`:localpart` para obter a parte antes do símbolo `@` do endereço do e-mail."

#. type: Plain text
#: en/git-for-each-ref.txt:239
#, priority:80
msgid "The raw data in an object is `raw`."
msgstr "Os dados brutos num objeto são `raw`."

#. type: Labeled list
#: en/git-for-each-ref.txt:240
#, no-wrap, priority:80
msgid "raw:size"
msgstr "raw:size"

#. type: Plain text
#: en/git-for-each-ref.txt:242
#, priority:80
msgid "The raw data size of the object."
msgstr "O tamanho dos dados brutos do objeto."

#. type: Plain text
#: en/git-for-each-ref.txt:246
#, priority:80
msgid "Note that `--format=%(raw)` can not be used with `--python`, `--shell`, `--tcl`, because such language may not support arbitrary binary data in their string variable type."
msgstr "Observe que `--format=%(raw)` não pode ser usado com as opções `--python`, `--shell`, `--tcl`, pois tais linguagens podem não ser compatíveis com dados binários arbitrários na string do tipo da variável deles."

#. type: Plain text
#: en/git-for-each-ref.txt:249
#, priority:80
msgid "The message in a commit or a tag object is `contents`, from which `contents:<part>` can be used to extract various parts out of:"
msgstr "A mensagem num commit ou na etiqueta do objeto é `contents`, onde o `contents:<parte>` pode ser utilizado para extrair várias partes de:"

#. type: Labeled list
#: en/git-for-each-ref.txt:250
#, no-wrap, priority:80
msgid "contents:size"
msgstr "contents:size"

#. type: Plain text
#: en/git-for-each-ref.txt:252
#, priority:80
msgid "The size in bytes of the commit or tag message."
msgstr "O tamanho em bytes da mensagem do commit ou da tag."

#. type: Labeled list
#: en/git-for-each-ref.txt:253
#, no-wrap, priority:80
msgid "contents:subject"
msgstr "contents:subject"

#. type: Plain text
#: en/git-for-each-ref.txt:260
#, priority:80
msgid "The first paragraph of the message, which typically is a single line, is taken as the \"subject\" of the commit or the tag message.  Instead of `contents:subject`, field `subject` can also be used to obtain same results. `:sanitize` can be appended to `subject` for subject line suitable for filename."
msgstr "O primeiro parágrafo da mensagem, que geralmente é uma única linha, é tomado como o \"assunto\" do commit ou da mensagem da tag.  Em vez de `contents:subject`, o campo `subject` também pode ser utilizado para obter os mesmos resultados. O campo `:sanitize` pode ser anexado ao `subject` para a linha apropriada do assunto para ser utilizada como o nome do arquivo."

#. type: Labeled list
#: en/git-for-each-ref.txt:261
#, no-wrap, priority:80
msgid "contents:body"
msgstr "contents:body"

#. type: Plain text
#: en/git-for-each-ref.txt:264
#, priority:80
msgid "The remainder of the commit or the tag message that follows the \"subject\"."
msgstr "O restante do commit ou a etiqueta da mensagem que segue o \"assunto\"."

#. type: Labeled list
#: en/git-for-each-ref.txt:265
#, no-wrap, priority:80
msgid "contents:signature"
msgstr "contents:signature"

#. type: Plain text
#: en/git-for-each-ref.txt:267
#, priority:80
msgid "The optional GPG signature of the tag."
msgstr "A assinatura GPG opcional da tag."

#. type: Labeled list
#: en/git-for-each-ref.txt:268
#, no-wrap, priority:80
msgid "contents:lines=N"
msgstr "contents:lines=N"

#. type: Plain text
#: en/git-for-each-ref.txt:270
#, priority:80
msgid "The first `N` lines of the message."
msgstr "As primeiras `N` linhas da mensagem."

#. type: Plain text
#: en/git-for-each-ref.txt:275
#, priority:80
msgid "Additionally, the trailers as interpreted by linkgit:git-interpret-trailers[1] are obtained as `trailers[:options]` (or by using the historical alias `contents:trailers[:options]`). For valid [:option] values see `trailers` section of linkgit:git-log[1]."
msgstr "Além disso, os trailers interpretados por linkgit:git-interpret-trailers[1] são obtidos como `trailers[:opções]` (ou usando o pseudônimo histórico `contents:trailers[:opções]`). Para conhecer os valores válidos para as [:opções], consulte a seção `trailers` do linkgit:git-log[1]."

#. type: Plain text
#: en/git-for-each-ref.txt:279
#, priority:80
msgid "For sorting purposes, fields with numeric values sort in numeric order (`objectsize`, `authordate`, `committerdate`, `creatordate`, `taggerdate`).  All other fields are used to sort in their byte-value order."
msgstr "Para fins de classificação, os campos com os valores numéricos são classificados em ordem numérica (`objectsize`, `authordate`, `committerdate`, `creatordate`, `taggerdate`).  Todos os outros campos são utilizados para classificar a sua ordem em valor de bytes."

#. type: Plain text
#: en/git-for-each-ref.txt:282
#, priority:80
msgid "There is also an option to sort by versions, this can be done by using the fieldname `version:refname` or its alias `v:refname`."
msgstr "Também existe uma opção de classificação por versões utilizando o nome do campo `version:refnamee` ou o seu apelido `v:refname`."

#. type: Plain text
#: en/git-for-each-ref.txt:286
#, priority:80
msgid "In any case, a field name that refers to a field inapplicable to the object referred by the ref does not cause an error.  It returns an empty string instead."
msgstr "De qualquer forma, nenhum erro é gerado caso um nome do campo seja referido a um campo inaplicável ao objeto \"ref\".  Ele retorna uma cadeia de caracteres vazia."

#. type: Plain text
#: en/git-for-each-ref.txt:290
#, priority:80
msgid "As a special case for the date-type fields, you may specify a format for the date by adding `:` followed by date format name (see the values the `--date` option to linkgit:git-rev-list[1] takes)."
msgstr "Como um caso especial para os campos do tipo data, você pode especificar um formato para a data adicionando `:` seguido pelo nome do formato da data (veja quais os valores a opção `--date` assume em linkgit:git-rev-list[1])."

#. type: Plain text
#: en/git-for-each-ref.txt:293
#, priority:80
msgid "Some atoms like %(align) and %(if) always require a matching %(end).  We call them \"opening atoms\" and sometimes denote them as %($open)."
msgstr "Alguns átomos como %(align) e %(if) sempre exige que um %(end) coincida.  Nós os chamamos de \"átomos de abertura\" e às vezes os denotamos como %($open)."

#. type: Plain text
#: en/git-for-each-ref.txt:298
#, priority:80
msgid "When a scripting language specific quoting is in effect, everything between a top-level opening atom and its matching %(end) is evaluated according to the semantics of the opening atom and only its result from the top-level is quoted."
msgstr "Quando uma citação específica da linguagem de script está em vigor, tudo entre um átomo de abertura no topo do nível e o seu %(end) correspondente é avaliado de acordo com a semântica do átomo de abertura e apenas o resultado do topo seja citado."

#. type: Plain text
#: en/git-for-each-ref.txt:305
#, priority:80
msgid "An example directly producing formatted text.  Show the most recent 3 tagged commits:"
msgstr "Um exemplo que produz diretamente um texto formatado.  Exibe as tags dos 3 commits mais recentes:"

#. type: delimited block -
#: en/git-for-each-ref.txt:308 en/git-for-each-ref.txt:324 en/git-for-each-ref.txt:338 en/git-bisect-lk2009.txt:933
#, no-wrap, priority:100
msgid "#!/bin/sh\n"
msgstr "#!/bin/sh\n"

#. type: delimited block -
#: en/git-for-each-ref.txt:314
#, no-wrap, priority:80
msgid ""
"git for-each-ref --count=3 --sort='-*authordate' \\\n"
"--format='From: %(*authorname) %(*authoremail)\n"
"Subject: %(*subject)\n"
"Date: %(*authordate)\n"
"Ref: %(*refname)\n"
msgstr ""
"git for-each-ref --count=3 --sort='-*authordate' \\\n"
"--format='From: %(*authorname) %(*authoremail)\n"
"Subject: %(*subject)\n"
"Date: %(*authordate)\n"
"Ref: %(*refname)\n"

#. type: delimited block -
#: en/git-for-each-ref.txt:317
#, no-wrap, priority:80
msgid ""
"%(*body)\n"
"' 'refs/tags'\n"
msgstr ""
"%(*body)\n"
"' 'refs/tags'\n"

#. type: Plain text
#: en/git-for-each-ref.txt:322
#, priority:80
msgid "A simple example showing the use of shell eval on the output, demonstrating the use of --shell.  List the prefixes of all heads:"
msgstr "Um exemplo simples exibindo a utilização da saída do \"eval\" no shell, demonstrando a utilização da opção `--shell`.  Liste os prefixos de todos os \"heads\":"

#. type: delimited block -
#: en/git-for-each-ref.txt:331
#, no-wrap, priority:80
msgid ""
"git for-each-ref --shell --format=\"ref=%(refname)\" refs/heads | \\\n"
"while read entry\n"
"do\n"
"\teval \"$entry\"\n"
"\techo `dirname $ref`\n"
"done\n"
msgstr ""
"git for-each-ref --shell --format=\"ref=%(refname)\" refs/heads | \\\n"
"while read entry\n"
"do\n"
"\teval \"$entry\"\n"
"\techo `dirname $ref`\n"
"done\n"

#. type: Plain text
#: en/git-for-each-ref.txt:336
#, priority:80
msgid "A bit more elaborate report on tags, demonstrating that the format may be an entire script:"
msgstr "Um relatório um pouco mais elaborado sobre as tags, demonstrando que o formato pode ser um script inteiro:"

#. type: delimited block -
#: en/git-for-each-ref.txt:343
#, no-wrap, priority:80
msgid ""
"fmt='\n"
"\tr=%(refname)\n"
"\tt=%(*objecttype)\n"
"\tT=${r#refs/tags/}\n"
msgstr ""
"fmt='\n"
"\tr=%(refname)\n"
"\tt=%(*objecttype)\n"
"\tT=${r#refs/tags/}\n"

#. type: delimited block -
#: en/git-for-each-ref.txt:350
#, no-wrap, priority:80
msgid ""
"\to=%(*objectname)\n"
"\tn=%(*authorname)\n"
"\te=%(*authoremail)\n"
"\ts=%(*subject)\n"
"\td=%(*authordate)\n"
"\tb=%(*body)\n"
msgstr ""
"\to=%(*objectname)\n"
"\tn=%(*authorname)\n"
"\te=%(*authoremail)\n"
"\ts=%(*subject)\n"
"\td=%(*authordate)\n"
"\tb=%(*body)\n"

#. type: delimited block -
#: en/git-for-each-ref.txt:369
#, no-wrap, priority:80
msgid ""
"\tkind=Tag\n"
"\tif test \"z$t\" = z\n"
"\tthen\n"
"\t\t# could be a lightweight tag\n"
"\t\tt=%(objecttype)\n"
"\t\tkind=\"Lightweight tag\"\n"
"\t\to=%(objectname)\n"
"\t\tn=%(authorname)\n"
"\t\te=%(authoremail)\n"
"\t\ts=%(subject)\n"
"\t\td=%(authordate)\n"
"\t\tb=%(body)\n"
"\tfi\n"
"\techo \"$kind $T points at a $t object $o\"\n"
"\tif test \"z$t\" = zcommit\n"
"\tthen\n"
"\t\techo \"The commit was authored by $n $e\n"
"at $d, and titled\n"
msgstr ""
"\tkind=Tag\n"
"\tif test \"z$t\" = z\n"
"\tthen\n"
"\t\t# could be a lightweight tag\n"
"\t\tt=%(objecttype)\n"
"\t\tkind=\"Lightweight tag\"\n"
"\t\to=%(objectname)\n"
"\t\tn=%(authorname)\n"
"\t\te=%(authoremail)\n"
"\t\ts=%(subject)\n"
"\t\td=%(authordate)\n"
"\t\tb=%(body)\n"
"\tfi\n"
"\techo \"$kind $T points at a $t object $o\"\n"
"\tif test \"z$t\" = zcommit\n"
"\tthen\n"
"\t\techo \"O commit foi criado por $n $e\n"
"at $d, and titled\n"

#. type: delimited block -
#: en/git-for-each-ref.txt:371
#, no-wrap, priority:80
msgid "    $s\n"
msgstr "    $s\n"

#. type: delimited block -
#: en/git-for-each-ref.txt:378
#, no-wrap, priority:80
msgid ""
"Its message reads as:\n"
"\"\n"
"\t\techo \"$b\" | sed -e \"s/^/    /\"\n"
"\t\techo\n"
"\tfi\n"
"'\n"
msgstr ""
"A sua mensagem diz:\n"
"\"\n"
"\t\techo \"$b\" | sed -e \"s/^/    /\"\n"
"\t\techo\n"
"\tfi\n"
"'\n"

#. type: delimited block -
#: en/git-for-each-ref.txt:384
#, no-wrap, priority:80
msgid ""
"eval=`git for-each-ref --shell --format=\"$fmt\" \\\n"
"\t--sort='*objecttype' \\\n"
"\t--sort=-taggerdate \\\n"
"\trefs/tags`\n"
"eval \"$eval\"\n"
msgstr ""
"eval=`git for-each-ref --shell --format=\"$fmt\" \\\n"
"\t--sort='*objecttype' \\\n"
"\t--sort=-taggerdate \\\n"
"\trefs/tags`\n"
"eval \"$eval\"\n"

#. type: Plain text
#: en/git-for-each-ref.txt:389
#, ignore-ellipsis, priority:80
msgid "An example to show the usage of %(if)...%(then)...%(else)...%(end).  This prefixes the current branch with a star."
msgstr "Um exemplo para exibir a utilização de %(if)...%(then)...%(else)...%(end).  Isso prefixa o ramo atual com uma estrela."

#. type: delimited block -
#: en/git-for-each-ref.txt:392
#, no-wrap, priority:80
msgid "git for-each-ref --format=\"%(if)%(HEAD)%(then)* %(else)  %(end)%(refname:short)\" refs/heads/\n"
msgstr "git for-each-ref --format=\"%(if)%(HEAD)%(then)* %(else)  %(end)%(refname:short)\" refs/heads/\n"

#. type: Plain text
#: en/git-for-each-ref.txt:397
#, ignore-ellipsis, priority:80
msgid "An example to show the usage of %(if)...%(then)...%(end).  This prints the authorname, if present."
msgstr "Um exemplo para exibir a utilização de %(if)...%(then)...%(end).  Isso imprime o authorname (nome do autor), caso esteja presente."

#. type: delimited block -
#: en/git-for-each-ref.txt:400
#, no-wrap, priority:80
msgid "git for-each-ref --format=\"%(refname)%(if)%(authorname)%(then) Authored by: %(authorname)%(end)\"\n"
msgstr "git for-each-ref --format=\"%(refname)%(if)%(authorname)%(then) Criado por: %(authorname)%(end)\"\n"

#. type: Title =
#: en/git-format-patch.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-format-patch(1)"
msgstr "git-format-patch(1)"

#. type: Plain text
#: en/git-format-patch.txt:7
#, priority:100
msgid "git-format-patch - Prepare patches for e-mail submission"
msgstr "git-format-patch - Preparar os patches para o envio de e-mails"

#. type: Plain text
#: en/git-format-patch.txt:35
#, no-wrap, priority:100
msgid ""
"'git format-patch' [-k] [(-o|--output-directory) <dir> | --stdout]\n"
"\t\t   [--no-thread | --thread[=<style>]]\n"
"\t\t   [(--attach|--inline)[=<boundary>] | --no-attach]\n"
"\t\t   [-s | --signoff]\n"
"\t\t   [--signature=<signature> | --no-signature]\n"
"\t\t   [--signature-file=<file>]\n"
"\t\t   [-n | --numbered | -N | --no-numbered]\n"
"\t\t   [--start-number <n>] [--numbered-files]\n"
"\t\t   [--in-reply-to=<message id>] [--suffix=.<sfx>]\n"
"\t\t   [--ignore-if-in-upstream] [--always]\n"
"\t\t   [--cover-from-description=<mode>]\n"
"\t\t   [--rfc] [--subject-prefix=<subject prefix>]\n"
"\t\t   [(--reroll-count|-v) <n>]\n"
"\t\t   [--to=<email>] [--cc=<email>]\n"
"\t\t   [--[no-]cover-letter] [--quiet]\n"
"\t\t   [--[no-]encode-email-headers]\n"
"\t\t   [--no-notes | --notes[=<ref>]]\n"
"\t\t   [--interdiff=<previous>]\n"
"\t\t   [--range-diff=<previous> [--creation-factor=<percent>]]\n"
"\t\t   [--filename-max-length=<n>]\n"
"\t\t   [--progress]\n"
"\t\t   [<common diff options>]\n"
"\t\t   [ <since> | <revision range> ]\n"
msgstr ""
"'git format-patch' [-k] [(-o|--output-directory) <dir> | --stdout]\n"
"\t\t   [--no-thread | --thread[=<estilo>]]\n"
"\t\t   [(--attach|--inline)[=<limite>] | --no-attach]\n"
"\t\t   [-s | --signoff]\n"
"\t\t   [--signature=<assinatura> | --no-signature]\n"
"\t\t   [--signature-file=<arquivo>]\n"
"\t\t   [-n | --numbered | -N | --no-numbered]\n"
"\t\t   [--start-number <n>] [--numbered-files]\n"
"\t\t   [--in-reply-to=<id-da-mensagem>] [--suffix=.<sfx>]\n"
"\t\t   [--ignore-if-in-upstream] [--always]\n"
"\t\t   [--cover-from-description=<modo>]\n"
"\t\t   [--rfc] [--subject-prefix=<subject prefix>]\n"
"\t\t   [(--reroll-count|-v) <n>]\n"
"\t\t   [--to=<e-mail>] [--cc=<e-mail>]\n"
"\t\t   [--[no-]cover-letter] [--quiet]\n"
"\t\t   [--[no-]encode-email-headers]\n"
"\t\t   [--no-notes | --notes[=<ref>]]\n"
"\t\t   [--interdiff=<anterior>]\n"
"\t\t   [--range-diff=<anterior> [--creation-factor=<percentual>]]\n"
"\t\t   [--filename-max-length=<n>]\n"
"\t\t   [--progress]\n"
"\t\t   [<opções-comuns-ao-diff>]\n"
"\t\t   [ <desde> | <faixa-da-revisão> ]\n"

#. type: Plain text
#: en/git-format-patch.txt:43
#, priority:100
msgid "Prepare each non-merge commit with its \"patch\" in one \"message\" per commit, formatted to resemble a UNIX mailbox.  The output of this command is convenient for e-mail submission or for use with 'git am'."
msgstr "Prepare cada commit não mesclado com o seu respectivo \"patch\" em uma mensagem por commit, formatado para que se assemelhe com uma caixa de correio UNIX.  A saída deste comando é conveniente para o envio de um e-mail ou para a utilização com 'git am'."

#. type: Plain text
#: en/git-format-patch.txt:45
#, priority:100
msgid "A \"message\" generated by the command consists of three parts:"
msgstr "Uma \"mensagem\" gerada pelo comando consiste em três partes:"

#. type: Plain text
#: en/git-format-patch.txt:52
#, priority:100
msgid "A brief metadata header that begins with `From <commit>` with a fixed `Mon Sep 17 00:00:00 2001` datestamp to help programs like \"file(1)\" to recognize that the file is an output from this command, fields that record the author identity, the author date, and the title of the change (taken from the first paragraph of the commit log message)."
msgstr "Um breve cabeçalho de metadados que começa com `From <commit>` com um registro de data e hora fixo, como `Seg Set 17 00:00:00 2001` para auxiliar programas como \"arquivo(1)\" a reconhecer que o arquivo foi gerado deste comando, campos que registrem a identidade do autor, a data da autoria e o título da alteração (retirado do primeiro parágrafo da mensagem do log do commit)."

#. type: Plain text
#: en/git-format-patch.txt:54
#, priority:100
msgid "The second and subsequent paragraphs of the commit log message."
msgstr "O segundo ou o parágrafo subsequente da mensagem do registro do commit."

#. type: Plain text
#: en/git-format-patch.txt:57
#, priority:100
msgid "The \"patch\", which is the \"diff -p --stat\" output (see linkgit:git-diff[1]) between the commit and its parent."
msgstr "O \"patch\", que é gerado com o comando \"diff -p --stat\" (consulte linkgit:git-diff[1]) entre o commit e a fonte principal."

#. type: Plain text
#: en/git-format-patch.txt:60
#, priority:100
msgid "The log message and the patch is separated by a line with a three-dash line."
msgstr "A mensagem de registro e o patch são separados por uma linha com três traços."

#. type: Plain text
#: en/git-format-patch.txt:62
#, priority:100
msgid "There are two ways to specify which commits to operate on."
msgstr "Existem duas maneiras de especificar em quais commits operar."

#. type: Plain text
#: en/git-format-patch.txt:66
#, priority:100
msgid "A single commit, <since>, specifies that the commits leading to the tip of the current branch that are not in the history that leads to the <since> to be output."
msgstr "Um único commit, `<since>`, determina que os commits que levem ao cume do ramo atual que não estão no histórico que levem ao `<since>` para ser gerado."

#. type: Plain text
#: en/git-format-patch.txt:70
#, priority:100
msgid "Generic <revision range> expression (see \"SPECIFYING REVISIONS\" section in linkgit:gitrevisions[7]) means the commits in the specified range."
msgstr "Expressão genérica do <intervalo da revisão> (consulte a seção \"DEFININDO AS REVISÕES\" no linkgit:gitrevisions[7]) define os commits no intervalo especificado."

#. type: Plain text
#: en/git-format-patch.txt:76
#, priority:100
msgid "The first rule takes precedence in the case of a single <commit>.  To apply the second rule, i.e., format everything since the beginning of history up until <commit>, use the `--root` option: `git format-patch --root <commit>`.  If you want to format only <commit> itself, you can do this with `git format-patch -1 <commit>`."
msgstr "A primeira regra tem precedência no caso de um único `<commit>`.  Para aplicar a segunda regra, formate tudo desde o início do histórico até `<commit>`, utilize a opção `--root`, por exemplo: `git format-patch --root <commit>`.  Caso queira formatar apenas o `<commit>` em si, faça com `git format-patch -1 <commit>`."

#. type: Plain text
#: en/git-format-patch.txt:83
#, priority:100
msgid "By default, each output file is numbered sequentially from 1, and uses the first line of the commit message (massaged for pathname safety) as the filename. With the `--numbered-files` option, the output file names will only be numbers, without the first line of the commit appended.  The names of the output files are printed to standard output, unless the `--stdout` option is specified."
msgstr "É predefinido que cada arquivo de saída seja numerado sequencialmente a partir de 1 e usa a primeira linha da mensagem do commit (trabalhada para a segurança do pathname) como o pathname. Com a opção `--numbered-files`, os nomes dos arquivos na saída serão apenas números, sem a primeira linha anexada do commit.  Os nomes dos arquivos na saída são impressos na saída padrão a menos que a opção `--stdout` seja utilizada."

#. type: Plain text
#: en/git-format-patch.txt:91
#, priority:100
msgid "If `-o` is specified, output files are created in <dir>.  Otherwise they are created in the current working directory. The default path can be set with the `format.outputDirectory` configuration option.  The `-o` option takes precedence over `format.outputDirectory`.  To store patches in the current working directory even when `format.outputDirectory` points elsewhere, use `-o .`. All directory components will be created."
msgstr "Caso a opção `-o` seja utilizada, os arquivos gerados serão criados no <dir>.  Caso contrário, eles serão criados no diretório de trabalho atual. O caminho predefinido pode ser definido com a opção de configuração `format.outputDirectory`.  A opção `-o` tem precedência sobre a opção de configuração `format.outputDirectory`.  Para armazenar as correções no diretório de trabalho atual, mesmo quando a opção de configuração `format.outputDirectory` apontar para um outro lugar, utilize `-o .`. Todos os componentes do diretório serão criados."

#. type: Plain text
#: en/git-format-patch.txt:95
#, priority:100
msgid "By default, the subject of a single patch is \"[PATCH] \" followed by the concatenation of lines from the commit message up to the first blank line (see the DISCUSSION section of linkgit:git-commit[1])."
msgstr "É predefinido que o assunto de um único patch seja \"[PATCH]\" seguido da concatenação das linhas da mensagem do commit até a primeira linha em branco (consulte a seção DISCUSSÃO em linkgit:git-commit[1])."

#. type: Plain text
#: en/git-format-patch.txt:99
#, priority:100
msgid "When multiple patches are output, the subject prefix will instead be \"[PATCH n/m] \".  To force 1/1 to be added for a single patch, use `-n`.  To omit patch numbers from the subject, use `-N`."
msgstr "Quando vários patches são produzidos, o prefixo do assunto será \"[PATCH n/m] \".  Para forçar a adição 1/1 para um único patch, utilize `-n`.  Para omitir os números do assunto, utilize `-N`."

#. type: Plain text
#: en/git-format-patch.txt:104
#, priority:100
msgid "If given `--thread`, `git-format-patch` will generate `In-Reply-To` and `References` headers to make the second and subsequent patch mails appear as replies to the first mail; this also generates a `Message-Id` header to reference."
msgstr "Caso a opção `--thread` seja utilizada, o `git-format-patch` irá gerar cabeçalhos `In-Reply-To` (Em-Resposta-Para) e `References` para fazer com que o e-mail do segundo e subsequentes patches apareçam como resposta ao primeiro e-mail; isso também gera um cabeçalho `Message-Id` para a referência."

#. type: Labeled list
#: en/git-format-patch.txt:110
#, no-wrap, priority:100
msgid "-<n>"
msgstr "-<n>"

#. type: Plain text
#: en/git-format-patch.txt:112
#, priority:100
msgid "Prepare patches from the topmost <n> commits."
msgstr "Prepare os patches a partir do `<n>` do nível mais alto dos commits."

#. type: Labeled list
#: en/git-format-patch.txt:113
#, no-wrap, priority:100
msgid "-o <dir>"
msgstr "-o <dir>"

#. type: Labeled list
#: en/git-format-patch.txt:114
#, no-wrap, priority:100
msgid "--output-directory <dir>"
msgstr "--output-directory <dir>"

#. type: Plain text
#: en/git-format-patch.txt:117
#, priority:100
msgid "Use <dir> to store the resulting files, instead of the current working directory."
msgstr "Utilize `<dir>` para armazenar os arquivos resultantes em vez do diretório de trabalho atual."

#. type: Labeled list
#: en/git-format-patch.txt:119 en/git-shortlog.txt:30
#, ignore-same, no-wrap, priority:260
msgid "--numbered"
msgstr "--numbered"

#. type: Plain text
#: en/git-format-patch.txt:121
#, priority:100
msgid "Name output in '[PATCH n/m]' format, even with a single patch."
msgstr "Nomeie a saída no formato '[PATCH n/m]', mesmo que seja com um único patch."

#. type: Labeled list
#: en/git-format-patch.txt:123
#, ignore-same, no-wrap, priority:100
msgid "--no-numbered"
msgstr "--no-numbered"

#. type: Plain text
#: en/git-format-patch.txt:125
#, priority:100
msgid "Name output in '[PATCH]' format."
msgstr "Nomeie a saída no formato '[PATCH]'."

#. type: Labeled list
#: en/git-format-patch.txt:126
#, no-wrap, priority:100
msgid "--start-number <n>"
msgstr "--start-number <n>"

#. type: Plain text
#: en/git-format-patch.txt:128
#, priority:100
msgid "Start numbering the patches at <n> instead of 1."
msgstr "Comece a enumerar os patches a partir do <n> em vez de 1."

#. type: Labeled list
#: en/git-format-patch.txt:129
#, ignore-same, no-wrap, priority:100
msgid "--numbered-files"
msgstr "--numbered-files"

#. type: Plain text
#: en/git-format-patch.txt:132
#, priority:100
msgid "Output file names will be a simple number sequence without the default first line of the commit appended."
msgstr "Os nomes dos arquivos na saída serão uma sequência numérica simples sem a primeira linha predefinida do commit anexado."

#. type: Labeled list
#: en/git-format-patch.txt:134
#, ignore-same, no-wrap, priority:100
msgid "--keep-subject"
msgstr "--keep-subject"

#. type: Plain text
#: en/git-format-patch.txt:137
#, priority:100
msgid "Do not strip/add '[PATCH]' from the first line of the commit log message."
msgstr "Não retire/adicione '[PATCH]' da primeira linha da mensagem do registro log do commit."

#. type: Labeled list
#: en/git-format-patch.txt:144 en/git-pack-objects.txt:60
#, ignore-same, no-wrap, priority:100
msgid "--stdout"
msgstr "--stdout"

#. type: Plain text
#: en/git-format-patch.txt:147
#, priority:100
msgid "Print all commits to the standard output in mbox format, instead of creating a file for each one."
msgstr "Imprima todos os commits na saída padrão no formato mbox em vez de criar um arquivo individual para cada um."

#. type: Labeled list
#: en/git-format-patch.txt:148
#, no-wrap, priority:100
msgid "--attach[=<boundary>]"
msgstr "--attach[=<divisa>]"

#. type: Plain text
#: en/git-format-patch.txt:152
#, priority:100
msgid "Create multipart/mixed attachment, the first part of which is the commit message and the patch itself in the second part, with `Content-Disposition: attachment`."
msgstr "Crie anexos com diversas partes/misto onde a primeira parte é a mensagem do commit e o próprio patch na segunda parte utilizando `Content-Disposition: attachment`."

#. type: Labeled list
#: en/git-format-patch.txt:153
#, ignore-same, no-wrap, priority:100
msgid "--no-attach"
msgstr "--no-attach"

#. type: Plain text
#: en/git-format-patch.txt:156
#, priority:100
msgid "Disable the creation of an attachment, overriding the configuration setting."
msgstr "Desative a criação de um anexo, substituindo a configuração predefinida."

#. type: Labeled list
#: en/git-format-patch.txt:157
#, no-wrap, priority:100
msgid "--inline[=<boundary>]"
msgstr "--inline[=<divisa>]"

#. type: Plain text
#: en/git-format-patch.txt:161
#, priority:100
msgid "Create multipart/mixed attachment, the first part of which is the commit message and the patch itself in the second part, with `Content-Disposition: inline`."
msgstr "Crie um anexo com diversas partes/misto onde a primeira parte é a mensagem do commit e o próprio patch na segunda parte utilizando `Content-Disposition: inline`."

#. type: Labeled list
#: en/git-format-patch.txt:162
#, no-wrap, priority:100
msgid "--thread[=<style>]"
msgstr "--thread[=<estilo>]"

#. type: Labeled list
#: en/git-format-patch.txt:163
#, ignore-same, no-wrap, priority:100
msgid "--no-thread"
msgstr "--no-thread"

#. type: Plain text
#: en/git-format-patch.txt:168
#, priority:100
msgid "Controls addition of `In-Reply-To` and `References` headers to make the second and subsequent mails appear as replies to the first.  Also controls generation of the `Message-Id` header to reference."
msgstr "Controla a adição dos cabeçalhos `In-Reply-To` (Em resposta a) e `References` para fazer com que o segundo e os emails subsequentes apareçam como respostas ao primeiro.  Também controla a geração do cabeçalho para a referência `Message-Id`."

#. type: Plain text
#: en/git-format-patch.txt:174
#, priority:100
msgid "The optional <style> argument can be either `shallow` or `deep`.  'shallow' threading makes every mail a reply to the head of the series, where the head is chosen from the cover letter, the `--in-reply-to`, and the first patch mail, in this order.  'deep' threading makes every mail a reply to the previous one."
msgstr "O argumento opcional <estilo> pode ser `shallow` (superficial) ou `deep` (profundo).  O argumento 'shallow' (superficial) faz com que todo o e-mail respondido para o cabeçalho da série onde o cabeçalho é selecionado nessa ordem, pela carta de apresentação, pelo `--in-reply-to` e pelo primeiro patch.  O argumento 'deep' (profundo) faz com que cada e-mail seja uma resposta ao anterior."

#. type: Plain text
#: en/git-format-patch.txt:178
#, priority:100
msgid "The default is `--no-thread`, unless the `format.thread` configuration is set.  If `--thread` is specified without a style, it defaults to the style specified by `format.thread` if any, or else `shallow`."
msgstr "A predefinição é `--no-thread`, a menos que a configuração `format.thread` esteja definida.  Caso `--thread` seja utilizado sem um estilo, a predefinição retorna para o estilo determinado na opção de configuração `format.thread` caso exista ou então, `shallow` (superficial)."

#. type: Plain text
#: en/git-format-patch.txt:182
#, priority:100
msgid "Beware that the default for 'git send-email' is to thread emails itself.  If you want `git format-patch` to take care of threading, you will want to ensure that threading is disabled for `git send-email`."
msgstr "Lembre-se de que a predefinição para o comando 'git send-email' é encadear os próprios emails.  Caso queira que o comando `git format-patch` cuide do encadeamento, tenha certeza que o encadeamento esteja desativado para o comando `git send-email`."

#. type: Labeled list
#: en/git-format-patch.txt:183
#, no-wrap, priority:100
msgid "--in-reply-to=<message id>"
msgstr "--in-reply-to=<id-da-mensagem>"

#. type: Plain text
#: en/git-format-patch.txt:187
#, priority:100
msgid "Make the first mail (or all the mails with `--no-thread`) appear as a reply to the given <message id>, which avoids breaking threads to provide a new patch series."
msgstr "Faça com que o primeiro e-mail (ou todos os emails com `--no-thread`) apareça como uma resposta ao <id da mensagem> informado, o que evita quebras dos encadeamentos provendo uma nova série dos patches."

#. type: Labeled list
#: en/git-format-patch.txt:188
#, ignore-same, no-wrap, priority:100
msgid "--ignore-if-in-upstream"
msgstr "--ignore-if-in-upstream"

#. type: Plain text
#: en/git-format-patch.txt:194
#, priority:100
msgid "Do not include a patch that matches a commit in <until>..<since>.  This will examine all patches reachable from <since> but not from <until> and compare them with the patches being generated, and any patch that matches is ignored."
msgstr "Não inclua um patch que coincida a um commit em <until>..<since> (até..desde).  Examina todos os patches acessíveis a partir de <since> (desde), mas não a partir de <until> (até), os comparará com os patches que estão sendo gerados e qualquer patch coincidente será ignorado."

#. type: Plain text
#: en/git-format-patch.txt:198
#, priority:100
msgid "Include patches for commits that do not introduce any change, which are omitted by default."
msgstr "Inclua as correções para os commits que não apresentam nenhuma alteração, que por predefinição, são omitidos."

#. type: Labeled list
#: en/git-format-patch.txt:199
#, no-wrap, priority:100
msgid "--cover-from-description=<mode>"
msgstr "--cover-from-description=<mode>"

#. type: Plain text
#: en/git-format-patch.txt:202
#, priority:100
msgid "Controls which parts of the cover letter will be automatically populated using the branch's description."
msgstr "Controla quais as partes da carta de apresentação serão preenchidas automaticamente utilizando ao descritivo do ramo."

#. type: Plain text
#: en/git-format-patch.txt:207
#, priority:100
msgid "If `<mode>` is `message` or `default`, the cover letter subject will be populated with placeholder text. The body of the cover letter will be populated with the branch's description. This is the default mode when no configuration nor command line option is specified."
msgstr "Caso `<modo>` seja `message` ou `default`, o assunto da carta de apresentação será preenchido com um texto em um espaço reservado. O corpo da carta de apresentação será preenchido com a descrição do ramo. Este é o modo predefinido quando nenhuma configuração ou opção na linha de comando for utilizada."

#. type: Plain text
#: en/git-format-patch.txt:211
#, priority:100
msgid "If `<mode>` is `subject`, the first paragraph of the branch description will populate the cover letter subject. The remainder of the description will populate the body of the cover letter."
msgstr "Caso o `<modo>` seja `subject`, o primeiro parágrafo do descritivo do ramo preencherá o assunto da carta de apresentação. O restante do descritivo preencherá o corpo da carta de apresentação."

#. type: Plain text
#: en/git-format-patch.txt:215
#, priority:100
msgid "If `<mode>` is `auto`, if the first paragraph of the branch description is greater than 100 bytes, then the mode will be `message`, otherwise `subject` will be used."
msgstr "Caso `<modo>` seja `auto` e se o primeiro parágrafo do descritivo do ramo for maior que 100 bytes, o modo será `message`, caso contrário, o `subject` será utilizado."

#. type: Plain text
#: en/git-format-patch.txt:218
#, priority:100
msgid "If `<mode>` is `none`, both the cover letter subject and body will be populated with placeholder text."
msgstr "Caso `<modo>` seja `none`, tanto o assunto e o corpo da carta serão preenchidos com o texto do espaço reservado."

#. type: Labeled list
#: en/git-format-patch.txt:219
#, no-wrap, priority:100
msgid "--subject-prefix=<subject prefix>"
msgstr "--subject-prefix=<subject prefix>"

#. type: Plain text
#: en/git-format-patch.txt:224
#, priority:100
msgid "Instead of the standard '[PATCH]' prefix in the subject line, instead use '[<subject prefix>]'. This allows for useful naming of a patch series, and can be combined with the `--numbered` option."
msgstr "Em vez do prefixo '[PATCH]' predefinido na linha assunto, utilize '[<prefixo do assunto>]'. Permite a nomeação útil de uma série de patches e pode ser combinado com a opção `--numbered`."

#. type: Labeled list
#: en/git-format-patch.txt:225
#, no-wrap, priority:100
msgid "--filename-max-length=<n>"
msgstr "--filename-max-length=<n>"

#. type: Plain text
#: en/git-format-patch.txt:231
#, priority:100
msgid "Instead of the standard 64 bytes, chomp the generated output filenames at around '<n>' bytes (too short a value will be silently raised to a reasonable length).  Defaults to the value of the `format.filenameMaxLength` configuration variable, or 64 if unconfigured."
msgstr "Em vez dos 64 bytes padrão, comprima os nomes dos arquivos gerados na saída em torno de '<n>' bytes (um valor muito curto será aumentado silenciosamente para um tamanho razoável).  Retorna para o valor predefinido na configuração da variável `format.filenameMaxLength` ou 64 casa não seja configurado."

#. type: Labeled list
#: en/git-format-patch.txt:232
#, ignore-same, no-wrap, priority:100
msgid "--rfc"
msgstr "--rfc"

#. type: Plain text
#: en/git-format-patch.txt:236
#, priority:100
msgid "Alias for `--subject-prefix=\"RFC PATCH\"`. RFC means \"Request For Comments\"; use this when sending an experimental patch for discussion rather than application."
msgstr "É um atalho `--subject-prefix=\"RFC PATCH\"`. O RFC significa \"Solicitação de Comentários\"; utilize isso ao enviar um patch experimental para que ele seja discutido em vez de um patch definitivo."

#. type: Labeled list
#: en/git-format-patch.txt:237
#, no-wrap, priority:100
msgid "-v <n>"
msgstr "-v <n>"

#. type: Labeled list
#: en/git-format-patch.txt:238
#, no-wrap, priority:100
msgid "--reroll-count=<n>"
msgstr "--reroll-count=<n>"

#. type: Plain text
#: en/git-format-patch.txt:250
#, priority:100
msgid "Mark the series as the <n>-th iteration of the topic. The output filenames have `v<n>` prepended to them, and the subject prefix (\"PATCH\" by default, but configurable via the `--subject-prefix` option) has ` v<n>` appended to it.  E.g.  `--reroll-count=4` may produce `v4-0001-add-makefile.patch` file that has \"Subject: [PATCH v4 1/20] Add makefile\" in it.  `<n>` does not have to be an integer (e.g. \"--reroll-count=4.4\", or \"--reroll-count=4rev2\" are allowed), but the downside of using such a reroll-count is that the range-diff/interdiff with the previous version does not state exactly which version the new interation is compared against."
msgstr "Marque a série como a e<n>ésima iteração do tópico. Os nomes de arquivo que são gerados têm `v<n>` prefixado neles, o prefixo do assunto (é predefinido como \"PATCH\", mas pode ser configurável através da opção `--subject-prefix`) tem `v<n>` anexado nele.  Por exemplo,  `--reroll-count=4` poderá gerar o arquivo `v4-0001-add-makefile.patch` que contém \"Assunto: [PATCH v4 1/20] Adicione um makefile\" nele.  Um `<n>` não precisa ser um inteiro (por exemplo, \"--reroll-count=4.4\", ou \"--reroll-count=4rev2\" são permitidos), porém a desvantagem de usar tal contagem de reroll é que o range-diff/interdiff com a versão anterior não indica exatamente com qual versão a nova interação acabou sendo comparada."

#. type: Labeled list
#: en/git-format-patch.txt:251
#, no-wrap, priority:100
msgid "--to=<email>"
msgstr "--to=<e-mail>"

#. type: Plain text
#: en/git-format-patch.txt:256
#, priority:100
msgid "Add a `To:` header to the email headers. This is in addition to any configured headers, and may be used multiple times.  The negated form `--no-to` discards all `To:` headers added so far (from config or command line)."
msgstr "Adicione um cabeçalho `Para:` nos cabeçalhos do email. É um acréscimo a qualquer cabeçalho configurado e pode ser utilizado várias vezes.  A forma negada da opção `--no-to` descarta todos os cabeçalhos `Para:` que foram adicionados até agora (seja da configuração ou da linha de comando)."

#. type: Labeled list
#: en/git-format-patch.txt:257
#, no-wrap, priority:100
msgid "--cc=<email>"
msgstr "--cc=<e-mail>"

#. type: Plain text
#: en/git-format-patch.txt:262
#, priority:100
msgid "Add a `Cc:` header to the email headers. This is in addition to any configured headers, and may be used multiple times.  The negated form `--no-cc` discards all `Cc:` headers added so far (from config or command line)."
msgstr "Adicione um cabeçalho `Cc:` (Com Cópia Para) aos cabeçalhos do email. É um acréscimo a qualquer cabeçalho configurado e pode ser utilizado várias vezes.  A forma negada da opção `--no-cc` descarta todos os cabeçalhos `Cc:` que foram adicionados até agora (seja da configuração ou da linha de comando)."

#. type: Labeled list
#: en/git-format-patch.txt:263
#, ignore-same, no-wrap, priority:100
msgid "--from"
msgstr "--from"

#. type: Labeled list
#: en/git-format-patch.txt:264
#, no-wrap, priority:100
msgid "--from=<ident>"
msgstr "--from=<ident>"

#. type: Plain text
#: en/git-format-patch.txt:270
#, priority:100
msgid "Use `ident` in the `From:` header of each commit email. If the author ident of the commit is not textually identical to the provided `ident`, place a `From:` header in the body of the message with the original author. If no `ident` is given, use the committer ident."
msgstr "Utilize `ident` (identidade) no cabeçalho `De:` de cada email do commit. Caso o `ident` do autor do commit não seja textualmente idêntica ao `ident` informado, coloque um cabeçalho `De:` no corpo da mensagem com o autor original. Caso nenhum `ident` seja informado, utilize o `ident` de quem fez o commit."

#. type: Plain text
#: en/git-format-patch.txt:277
#, priority:100
msgid "Note that this option is only useful if you are actually sending the emails and want to identify yourself as the sender, but retain the original author (and `git am` will correctly pick up the in-body header). Note also that `git send-email` already handles this transformation for you, and this option should not be used if you are feeding the result to `git send-email`."
msgstr "Observe que esta opção só é útil caso esteja realmente enviando os e-mails e quiser se identificar como remetente mantendo o autor original (o `git am` pegará corretamente o cabeçalho interno). Observe também que o comando `git send-email` já lida com essa transformação para você, essa opção não deve ser utilizada caso esteja alimentando o resultado com o comando `git send-email`."

#. type: Labeled list
#: en/git-format-patch.txt:278
#, ignore-same, no-wrap, priority:100
msgid "--[no-]force-in-body-from"
msgstr "--[no-]force-in-body-from"

#. type: Plain text
#: en/git-format-patch.txt:288
#, priority:100
msgid "With the e-mail sender specified via the `--from` option, by default, an in-body \"From:\" to identify the real author of the commit is added at the top of the commit log message if the sender is different from the author.  With this option, the in-body \"From:\" is added even when the sender and the author have the same name and address, which may help if the mailing list software mangles the sender's identity.  Defaults to the value of the `format.forceInBodyFrom` configuration variable."
msgstr ""

#. type: Labeled list
#: en/git-format-patch.txt:289
#, no-wrap, priority:100
msgid "--add-header=<header>"
msgstr "--add-header=<cabeçalho>"

#. type: Plain text
#: en/git-format-patch.txt:296
#, priority:100
msgid "Add an arbitrary header to the email headers.  This is in addition to any configured headers, and may be used multiple times.  For example, `--add-header=\"Organization: git-foo\"`.  The negated form `--no-add-header` discards *all* (`To:`, `Cc:`, and custom) headers added so far from config or command line."
msgstr "Adicione um cabeçalho arbitrário aos cabeçalhos do e-mail.  É um acréscimo a qualquer cabeçalho configurado e pode ser utilizado várias vezes.  Por exemplo, `--add-header=\"Organization: git-foo\"`.  O formulário negado `--no-add-header` descarta *todos* os cabeçalhos (`Para:`, `Cc:` e customizado) adicionados até agora na configuração ou na linha de comando."

#. type: Labeled list
#: en/git-format-patch.txt:297
#, ignore-same, no-wrap, priority:100
msgid "--[no-]cover-letter"
msgstr "--[no-]cover-letter"

#. type: Plain text
#: en/git-format-patch.txt:301
#, priority:100
msgid "In addition to the patches, generate a cover letter file containing the branch description, shortlog and the overall diffstat.  You can fill in a description in the file before sending it out."
msgstr "Além dos patches, gere uma carta de apresentação contendo no arquivo a descrição da ramificação, o \"shortlog\" e o \"diffstat\" geral.  Você pode preencher uma descrição no arquivo antes de enviá-lo."

#. type: Labeled list
#: en/git-format-patch.txt:302
#, ignore-same, no-wrap, priority:100
msgid "--encode-email-headers"
msgstr "--encode-email-headers"

#. type: Labeled list
#: en/git-format-patch.txt:303
#, ignore-same, no-wrap, priority:100
msgid "--no-encode-email-headers"
msgstr "--no-encode-email-headers"

#. type: Plain text
#: en/git-format-patch.txt:308
#, priority:100
msgid "Encode email headers that have non-ASCII characters with \"Q-encoding\" (described in RFC 2047), instead of outputting the headers verbatim. Defaults to the value of the `format.encodeEmailHeaders` configuration variable."
msgstr "Codifique os cabeçalhos do e-mail que possuam caracteres não ASCII com \"Q-encoding\" (descrito na RFC 2047), em vez de emitir os cabeçalhos de forma literal. A predefinição retorna para o valor da variável de configuração `format.encodeEmailHeaders`."

#. type: Labeled list
#: en/git-format-patch.txt:309
#, no-wrap, priority:100
msgid "--interdiff=<previous>"
msgstr "--interdiff=<anterior>"

#. type: Plain text
#: en/git-format-patch.txt:317
#, priority:100
msgid "As a reviewer aid, insert an interdiff into the cover letter, or as commentary of the lone patch of a 1-patch series, showing the differences between the previous version of the patch series and the series currently being formatted. `previous` is a single revision naming the tip of the previous series which shares a common base with the series being formatted (for example `git format-patch --cover-letter --interdiff=feature/v1 -3 feature/v2`)."
msgstr "Como um auxílio ao revisor, insira um \"interdiff\" na carta de apresentação ou como um comentário único do patch de uma série de 1, exibindo as diferenças entre a versão anterior da série do patch e a série atualmente sendo formatada. `previous` (anterior) é uma única revisão que informa a ponta da série anterior que compartilha uma base comum com a série que está sendo formatada (`git format-patch --cover-letter --interdiff=feature/v1 -3 feature/v2` por exemplo)."

#. type: Labeled list
#: en/git-format-patch.txt:318
#, no-wrap, priority:100
msgid "--range-diff=<previous>"
msgstr "--range-diff=<anterior>"

#. type: Plain text
#: en/git-format-patch.txt:329
#, priority:100
msgid "As a reviewer aid, insert a range-diff (see linkgit:git-range-diff[1])  into the cover letter, or as commentary of the lone patch of a 1-patch series, showing the differences between the previous version of the patch series and the series currently being formatted.  `previous` can be a single revision naming the tip of the previous series if it shares a common base with the series being formatted (for example `git format-patch --cover-letter --range-diff=feature/v1 -3 feature/v2`), or a revision range if the two versions of the series are disjoint (for example `git format-patch --cover-letter --range-diff=feature/v1~3..feature/v1 -3 feature/v2`)."
msgstr "Como um assistente revisor, insira um \"range-diff\" (consulte linkgit:git-range-diff[1]) na carta de apresentação ou como um comentário do patch solitário da série de 1-patch, exibindo as diferenças entre a versão anterior da série de patches e a série atualmente sendo formatada.  O `previous` pode ser uma única revisão informando a ponta da série anterior, caso ela compartilhe uma base comum com a série que está sendo formatada (por exemplo,o comando `git format-patch --cover-letter --range-diff=feature/v1 -3 feature/v2`), ou um intervalo das revisões caso as duas versões da série sejam separadas (por exemplo, `git format-patch --cover-letter --range-diff=feature/v1~3..feature/v1 -3 feature/v2`)."

#. type: Plain text
#: en/git-format-patch.txt:334
#, priority:100
msgid "Note that diff options passed to the command affect how the primary product of `format-patch` is generated, and they are not passed to the underlying `range-diff` machinery used to generate the cover-letter material (this may change in the future)."
msgstr "Observe que as opções diff passadas ao comando afetam como o produto primário do `format-patch` será gerado, não são passadas para o mecanismo subjacente do `range-diff` usado para gerar o material da carta de apresentação (isso pode mudar no futuro)."

#. type: Labeled list
#: en/git-format-patch.txt:335 en/git-range-diff.txt:68
#, no-wrap, priority:100
msgid "--creation-factor=<percent>"
msgstr "--creation-factor=<percentual>"

#. type: Plain text
#: en/git-format-patch.txt:340
#, priority:100
msgid "Used with `--range-diff`, tweak the heuristic which matches up commits between the previous and current series of patches by adjusting the creation/deletion cost fudge factor. See linkgit:git-range-diff[1])  for details."
msgstr "Ao ser utilizado com a opção `--range-diff`, ajuste a heurística que coincida com os commits entre as séries de patches anteriores e atuais, ajustando o custo do fator de correção entre criação/exclusão. (Para mais detalhes, consulte linkgit:git-range-diff[1])."

#. type: Labeled list
#: en/git-format-patch.txt:341 en/pretty-options.txt:62
#, no-wrap, priority:260
msgid "--notes[=<ref>]"
msgstr "--notes[=<ref>]"

#. type: Labeled list
#: en/git-format-patch.txt:342 en/pretty-options.txt:83
#, ignore-same, no-wrap, priority:260
msgid "--no-notes"
msgstr "--no-notes"

#. type: Plain text
#: en/git-format-patch.txt:345
#, priority:100
msgid "Append the notes (see linkgit:git-notes[1]) for the commit after the three-dash line."
msgstr "Adiciona as anotações (consulte linkgit:git-notes[1]) para o commit depois da linha com três traços."

#. type: Plain text
#: en/git-format-patch.txt:353
#, priority:100
msgid "The expected use case of this is to write supporting explanation for the commit that does not belong to the commit log message proper, and include it with the patch submission. While one can simply write these explanations after `format-patch` has run but before sending, keeping them as Git notes allows them to be maintained between versions of the patch series (but see the discussion of the `notes.rewrite` configuration options in linkgit:git-notes[1] to use this workflow)."
msgstr "É esperado que seja utilizado para escrever uma explicação de suporte para o commit que não pertença à mensagem do registro log do commit e seja incluída no envio do patch. Embora seja possível simplesmente escrever essas explicações após a execução do `format-patch`, antes do envio, mantê-las como notas do Git permite que elas sejam mantidas entre as versões da série de patches (ainda assim consulte a discussão das opções de configuração do `notes.rewrite` em linkgit:git-notes[1] para compreender este fluxo de trabalho)."

#. type: Plain text
#: en/git-format-patch.txt:356
#, priority:100
msgid "The default is `--no-notes`, unless the `format.notes` configuration is set."
msgstr "A predefinição é `--no-notes`, a menos que a configuração `format.notes` esteja definida."

#. type: Labeled list
#: en/git-format-patch.txt:357
#, no-wrap, priority:100
msgid "--[no-]signature=<signature>"
msgstr "--[no-]signature=<assinatura>"

#. type: Plain text
#: en/git-format-patch.txt:362
#, priority:100
msgid "Add a signature to each message produced. Per RFC 3676 the signature is separated from the body by a line with '-- ' on it. If the signature option is omitted the signature defaults to the Git version number."
msgstr "Adicione uma assinatura em cada mensagem produzida. De acordo com a RFC 3676, a assinatura é separada do corpo por uma linha com '-- '. Caso a opção da assinatura seja omitida, a predefinição da assinatura retorna para o número da versão do Git."

#. type: Labeled list
#: en/git-format-patch.txt:363
#, no-wrap, priority:100
msgid "--signature-file=<file>"
msgstr "--signature-file=<arquivo>"

#. type: Plain text
#: en/git-format-patch.txt:365
#, priority:100
msgid "Works just like --signature except the signature is read from a file."
msgstr "Funciona exatamente como `--signature`, exceto que a assinatura é lida num arquivo."

#. type: Labeled list
#: en/git-format-patch.txt:366
#, no-wrap, priority:100
msgid "--suffix=.<sfx>"
msgstr "--suffix=.<sfx>"

#. type: Plain text
#: en/git-format-patch.txt:371
#, priority:100
msgid "Instead of using `.patch` as the suffix for generated filenames, use specified suffix.  A common alternative is `--suffix=.txt`.  Leaving this empty will remove the `.patch` suffix."
msgstr "Em vez de usar `.patch` como o sufixo dos nomes dos arquivos gerados, utilize o sufixo especificado.  Uma alternativa comum é `--suffix=.txt`.  Deixando este campo vazio remove o sufixo `.patch`."

#. type: Plain text
#: en/git-format-patch.txt:374
#, priority:100
msgid "Note that the leading character does not have to be a dot; for example, you can use `--suffix=-patch` to get `0001-description-of-my-change-patch`."
msgstr "Observe que o caractere principal não precisa ser um ponto; você pode usar `suffix=patch` para obter `0001-description-of-my-change-patch` por exemplo."

#. type: Plain text
#: en/git-format-patch.txt:378
#, priority:100
msgid "Do not print the names of the generated files to standard output."
msgstr "Não imprima os nomes dos arquivos gerados na saída padrão."

#. type: Labeled list
#: en/git-format-patch.txt:379
#, ignore-same, no-wrap, priority:100
msgid "--no-binary"
msgstr "--no-binary"

#. type: Plain text
#: en/git-format-patch.txt:384
#, priority:100
msgid "Do not output contents of changes in binary files, instead display a notice that those files changed.  Patches generated using this option cannot be applied properly, but they are still useful for code review."
msgstr "Não reproduza o conteúdo das alterações em arquivos binários; em vez disso, exiba um aviso que estes arquivos foram alterados.  Os patches gerados utilizando esta opção não podem ser aplicados de forma adequada, porém ainda são úteis para a revisão do código."

#. type: Labeled list
#: en/git-format-patch.txt:385
#, ignore-same, no-wrap, priority:100
msgid "--zero-commit"
msgstr "--zero-commit"

#. type: Plain text
#: en/git-format-patch.txt:388
#, priority:100
msgid "Output an all-zero hash in each patch's From header instead of the hash of the commit."
msgstr "Gere um hash zerado no cabeçalho \"From\" de cada patch em vez do hash do commit."

#. type: Labeled list
#: en/git-format-patch.txt:389
#, no-wrap, priority:100
msgid "--[no-]base[=<commit>]"
msgstr "--[no-]base[=<commit>]"

#. type: Plain text
#: en/git-format-patch.txt:395
#, priority:100
msgid "Record the base tree information to identify the state the patch series applies to.  See the BASE TREE INFORMATION section below for details. If <commit> is \"auto\", a base commit is automatically chosen. The `--no-base` option overrides a `format.useAutoBase` configuration."
msgstr "Registre as informações da base da árvore que identifique a condição na qual a série de patches se aplica.  Consulte a seção INFORMAÇÃO BASE DA ÁRVORE abaixo para obter detalhes. If <commit> is \"auto\", a base commit is automatically chosen. The `--no-base` option overrides a `format.useAutoBase` configuration."

#. type: Plain text
#: en/git-format-patch.txt:402
#, priority:100
msgid "Treat the revision argument as a <revision range>, even if it is just a single commit (that would normally be treated as a <since>).  Note that root commits included in the specified range are always formatted as creation patches, independently of this flag."
msgstr "Trate o argumento revisão como um <intervalo de revisões>, mesmo que seja apenas um único commit (que normalmente seria tratado como um <since> (desde)).  Observe que os commits raiz incluídos no intervalo especificado são sempre formatadas como patches de criação, independentemente dessa flag."

#. type: Plain text
#: en/git-format-patch.txt:405
#, priority:100
msgid "Show progress reports on stderr as patches are generated."
msgstr "Exiba o progresso dos relatórios no stderr à medida que os patches são gerados."

#. type: Plain text
#: en/git-format-patch.txt:413
#, priority:100
msgid "You can specify extra mail header lines to be added to each message, defaults for the subject prefix and file suffix, number patches when outputting more than one patch, add \"To:\" or \"Cc:\" headers, configure attachments, change the patch output directory, and sign off patches with configuration variables."
msgstr "Você pode definir linhas extras no cabeçalho do e-mail que serão adicionadas em cada mensagem, predefinições para o prefixo do assunto e sufixo do arquivo, a quantidade das correções ao emitir mais de um patch, adicionar os cabeçalhos \"Para:\" ou \"Cc:\", configurar os anexos, alterar diretório de saída par ao patch e assinar os patches com variáveis de configuração."

#. type: delimited block -
#: en/git-format-patch.txt:427
#, no-wrap, priority:100
msgid ""
"[format]\n"
"\theaders = \"Organization: git-foo\\n\"\n"
"\tsubjectPrefix = CHANGE\n"
"\tsuffix = .txt\n"
"\tnumbered = auto\n"
"\tto = <email>\n"
"\tcc = <email>\n"
"\tattach [ = mime-boundary-string ]\n"
"\tsignOff = true\n"
"\toutputDirectory = <directory>\n"
"\tcoverLetter = auto\n"
"\tcoverFromDescription = auto\n"
msgstr ""
"[format]\n"
"\theaders = \"Organização: git-foo\\n\"\n"
"\tsubjectPrefix = CHANGE\n"
"\tsuffix = .txt\n"
"\tnumbered = auto\n"
"\tto = <e-mail>\n"
"\tcc = <e-mail>\n"
"\tattach [ = mime-boundary-string ]\n"
"\tsignOff = true\n"
"\toutputDirectory = <diretório>\n"
"\tcoverLetter = auto\n"
"\tcoverFromDescription = auto\n"

#. type: Plain text
#: en/git-format-patch.txt:436
#, priority:100
msgid "The patch produced by 'git format-patch' is in UNIX mailbox format, with a fixed \"magic\" time stamp to indicate that the file is output from format-patch rather than a real mailbox, like so:"
msgstr "O patch produzido pelo 'git format-patch' está em formato mailbox (caixa de correio) UNIX, fixado com uma estampa \"mágica\" indicando que o arquivo foi gerado pelo patch em vez de um mailbox real, exemplo:"

#. type: delimited block -
#: en/git-format-patch.txt:446
#, no-wrap, priority:100
msgid ""
"From 8f72bad1baf19a53459661343e21d6491c3908d3 Mon Sep 17 00:00:00 2001\n"
"From: Tony Luck <tony.luck@intel.com>\n"
"Date: Tue, 13 Jul 2010 11:42:54 -0700\n"
"Subject: [PATCH] =?UTF-8?q?[IA64]=20Put=20ia64=20config=20files=20on=20the=20?=\n"
" =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig=20diet?=\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
msgstr ""
"From 8f72bad1baf19a53459661343e21d6491c3908d3 Mon Sep 17 00:00:00 2001\n"
"From: Tony Luck <tony.luck@intel.com>\n"
"Date: Tue, 13 Jul 2010 11:42:54 -0700\n"
"Subject: [PATCH] =?UTF-8?q?[IA64]=20Put=20ia64=20config=20files=20on=20the=20?=\n"
" =?UTF-8?q?Uwe=20Kleine-K=C3=B6nig=20diet?=\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: delimited block -
#: en/git-format-patch.txt:449
#, no-wrap, priority:100
msgid ""
"arch/arm config files were slimmed down using a python script\n"
"(See commit c2330e286f68f1c408b4aa6515ba49d57f05beae comment)\n"
msgstr ""
"Os arquivos da configuração arch/arm foram reduzidos utilizando um script python\n"
"(Veja o comentário c2330e286f68f1c408b4aa6515ba49d57f05beae do commit)\n"

#. type: delimited block -
#: en/git-format-patch.txt:452
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"Do the same for ia64 so we can have sleek & trim looking\n"
"...\n"
msgstr ""
"Faça o mesmo com o ia64, para que possamos ter uma aparência elegante e ornamentada\n"
"...\n"

#. type: Plain text
#: en/git-format-patch.txt:460
#, ignore-ellipsis, priority:100
msgid "Typically it will be placed in a MUA's drafts folder, edited to add timely commentary that should not go in the changelog after the three dashes, and then sent as a message whose body, in our example, starts with \"arch/arm config files were...\".  On the receiving end, readers can save interesting patches in a UNIX mailbox and apply them with linkgit:git-am[1]."
msgstr "Normalmente, ele é colocado na pasta de rascunhos do MUA, editado para adicionar os comentários oportunos que não devem entrar no changelog após os três hífens e enviado como uma mensagem onde o corpo, no nosso exemplo, começa com \"arquivos da configuração arch/arm onde...\".  No lado do recebimento, os leitores podem salvar os patches interessantes num mailbox UNIX e aplicá-los com linkgit:git-am[1]."

#. type: Plain text
#: en/git-format-patch.txt:466
#, priority:100
msgid "When a patch is part of an ongoing discussion, the patch generated by 'git format-patch' can be tweaked to take advantage of the 'git am --scissors' feature.  After your response to the discussion comes a line that consists solely of \"`-- >8 --`\" (scissors and perforation), followed by the patch with unnecessary header fields removed:"
msgstr "Quando um patch faz parte de uma discussão em andamento, o patch gerado pelo 'git format-patch' pode ser ajustado para aproveitar o recurso 'git am --scissors'.  Após a sua resposta na discussão, surge uma linha que consiste apenas em \"`-- >8 --`\"(tesoura e perfuração), seguida pelo patch com campos desnecessários do cabeçalho que foram removidos:"

#. type: delimited block -
#: en/git-format-patch.txt:470
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"...\n"
"> So we should do such-and-such.\n"
msgstr ""
"...\n"
"> Então faremos assim e assado.\n"

#. type: delimited block -
#: en/git-format-patch.txt:472
#, no-wrap, priority:100
msgid "Makes sense to me.  How about this patch?\n"
msgstr "Faz sentido para mim.  Que tal este patch?\n"

#. type: delimited block -
#: en/git-format-patch.txt:475
#, no-wrap, priority:100
msgid ""
"-- >8 --\n"
"Subject: [IA64] Put ia64 config files on the Uwe Kleine-KÃ¶nig diet\n"
msgstr ""
"-> 8 -\n"
"Assunto: [IA64] Coloque os arquivos da configuração do ia64 na dieta Uwe Kleine-König\n"

#. type: delimited block -
#: en/git-format-patch.txt:478
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"arch/arm config files were slimmed down using a python script\n"
"...\n"
msgstr ""
"Os arquivos da configuração arch/arm foram reduzidos utilizando um script python\n"
"...\n"

#. type: Plain text
#: en/git-format-patch.txt:486
#, priority:100
msgid "When sending a patch this way, most often you are sending your own patch, so in addition to the \"`From $SHA1 $magic_timestamp`\" marker you should omit `From:` and `Date:` lines from the patch file.  The patch title is likely to be different from the subject of the discussion the patch is in response to, so it is likely that you would want to keep the Subject: line, like the example above."
msgstr "Ao enviar um patch dessa forma, na maioria das vezes você está enviando o seu próprio patch, portanto, além do marcador \"`From $SHA1 $magic_timestamp`\", você deve omitir as linhas `From:` e `Date:` do arquivo patch.  É provável que o título do patch seja diferente do assunto da discussão onde o patch é uma resposta, portanto, é provável que você queira manter a linha \"Subject:\", como no exemplo acima."

#. type: Title ~
#: en/git-format-patch.txt:488
#, no-wrap, priority:100
msgid "Checking for patch corruption"
msgstr "Verificando o corrompimento dos patches"

#. type: Plain text
#: en/git-format-patch.txt:491
#, priority:100
msgid "Many mailers if not set up properly will corrupt whitespace.  Here are two common types of corruption:"
msgstr "Muitos clientes de e-mail se não configurados corretamente irão corromper os espaços.  Aqui estão dois tipos comuns de corrompimento:"

#. type: Plain text
#: en/git-format-patch.txt:493
#, priority:100
msgid "Empty context lines that do not have _any_ whitespace."
msgstr "As linhas de contexto vazias que não possuem _qualquer_ espaço."

#. type: Plain text
#: en/git-format-patch.txt:496
#, priority:100
msgid "Non-empty context lines that have one extra whitespace at the beginning."
msgstr "As linhas de contexto não vazias que possuam um espaço extra no início."

#. type: Plain text
#: en/git-format-patch.txt:498
#, priority:100
msgid "One way to test if your MUA is set up correctly is:"
msgstr "Uma maneira de testar se o seu cliente de e-mail está configurado corretamente é fazendo o seguinte:"

#. type: Plain text
#: en/git-format-patch.txt:502
#, priority:100
msgid "Send the patch to yourself, exactly the way you would, except with To: and Cc: lines that do not contain the list and maintainer address."
msgstr "Envie o patch para você mesmo exatamente como você faria se fosse enviar para alguém sem adicionar a lista e o endereço do mantenedor em \"To:\" (Para:) e \"Cc:\"."

#. type: Plain text
#: en/git-format-patch.txt:505
#, priority:100
msgid "Save that patch to a file in UNIX mailbox format.  Call it a.patch, say."
msgstr "Salve esse patch num arquivo no formato mailbox do UNIX.  Chame-o de \"a.patch\"."

#. type: Plain text
#: en/git-format-patch.txt:507
#, priority:100
msgid "Apply it:"
msgstr "Aplique:"

#. type: Plain text
#: en/git-format-patch.txt:512
#, no-wrap, priority:100
msgid ""
"$ git fetch <project> master:test-apply\n"
"$ git switch test-apply\n"
"$ git restore --source=HEAD --staged --worktree :/\n"
"$ git am a.patch\n"
msgstr ""
"$ git fetch <projeto> master:test-apply\n"
"$ git switch test-apply\n"
"$ git restore --source=HEAD --staged --worktree :/\n"
"$ git am a.patch\n"

#. type: Plain text
#: en/git-format-patch.txt:514
#, priority:100
msgid "If it does not apply correctly, there can be various reasons."
msgstr "Pode haver vários motivos caso o patch não seja aplicado corretamente."

#. type: Plain text
#: en/git-format-patch.txt:519
#, priority:100
msgid "The patch itself does not apply cleanly.  That is _bad_ but does not have much to do with your MUA.  You might want to rebase the patch with linkgit:git-rebase[1] before regenerating it in this case."
msgstr "O patch em si não está correto.  Isso é _ruim_, mas não tem muito a ver com o seu cliente de e-mail.  Você pode querer refazer o patch neste caso com linkgit:git-rebase[1] antes de regenerá-lo."

#. type: Plain text
#: en/git-format-patch.txt:524
#, priority:100
msgid "The MUA corrupted your patch; \"am\" would complain that the patch does not apply.  Look in the .git/rebase-apply/ subdirectory and see what 'patch' file contains and check for the common corruption patterns mentioned above."
msgstr "O seu cliente de e-mail corrompeu o seu patch; o \"am\" reclamaria que o patch não pode ser aplicado.  Procure no subdiretório `.git/rebase-apply/` e veja o conteúdo do arquivo 'patch', verifique se os padrões mais comuns de corrupção mencionados acima se aplicam."

#. type: Plain text
#: en/git-format-patch.txt:532
#, priority:100
msgid "While at it, check the 'info' and 'final-commit' files as well.  If what is in 'final-commit' is not exactly what you would want to see in the commit log message, it is very likely that the receiver would end up hand editing the log message when applying your patch.  Things like \"Hi, this is my first patch.\\n\" in the patch e-mail should come after the three-dash line that signals the end of the commit message."
msgstr "Enquanto isso, verifique os arquivos 'info' e 'final-commit' também.  Caso o que estiver em 'final-commit' não seja exatamente o que você quer ver na mensagem do registro log do commit, é muito provável que o destinatário acabe editando manualmente a mensagem do registro log durante a aplicação do seu patch.  Coisas como \"Olá, este é o meu primeiro patch.\\n\" no e-mail do patch deve vir após a linha de três traços que sinaliza o final da mensagem do commit."

#. type: Title -
#: en/git-format-patch.txt:534
#, no-wrap, priority:100
msgid "MUA-SPECIFIC HINTS"
msgstr "DICAS ESPECÍFICAS PARA CLIENTES DE E-MAIL"

#. type: Plain text
#: en/git-format-patch.txt:537
#, priority:100
msgid "Here are some hints on how to successfully submit patches inline using various mailers."
msgstr "Aqui estão algumas dicas sobre como enviar os patches com sucesso utilizando diferentes clientes de e-mail."

#. type: Title ~
#: en/git-format-patch.txt:539
#, no-wrap, priority:100
msgid "GMail"
msgstr "GMail"

#. type: Plain text
#: en/git-format-patch.txt:545
#, priority:100
msgid "GMail does not have any way to turn off line wrapping in the web interface, so it will mangle any emails that you send.  You can however use \"git send-email\" and send your patches through the GMail SMTP server, or use any IMAP email client to connect to the google IMAP server and forward the emails through that."
msgstr "O GMail não tem como desativar a quebra de linha na interface da Web; portanto, ele altera os e-mails que você envia.  Você pode entanto usar o \"git send-email\" e enviar os seus patches através do servidor SMTP do GMail ou usar qualquer cliente de email IMAP para conectar-se ao servidor IMAP do google e encaminhar os e-mails dessa maneira."

#. type: Plain text
#: en/git-format-patch.txt:548
#, priority:100
msgid "For hints on using 'git send-email' to send your patches through the GMail SMTP server, see the EXAMPLE section of linkgit:git-send-email[1]."
msgstr "Para obter dicas sobre o uso do 'git send-email' para enviar os seus patches através do servidor SMTP do GMail, consulte a seção EXEMPLO do linkgit:git-send-email[1]."

#. type: Plain text
#: en/git-format-patch.txt:551
#, priority:100
msgid "For hints on submission using the IMAP interface, see the EXAMPLE section of linkgit:git-imap-send[1]."
msgstr "Para obter dicas sobre o envio utilizando a interface IMAP, consulte a seção EXEMPLO do linkgit:git-send-email[1]."

#. type: Title ~
#: en/git-format-patch.txt:553
#, no-wrap, priority:100
msgid "Thunderbird"
msgstr "Thunderbird"

#. type: Plain text
#: en/git-format-patch.txt:557
#, priority:100
msgid "By default, Thunderbird will both wrap emails as well as flag them as being 'format=flowed', both of which will make the resulting email unusable by Git."
msgstr "É predefinido que o Thunderbird agrupe os e-mails e sinalize-os como 'format=flowed', o que tornará o e-mail resultante inutilizável pelo Git."

#. type: Plain text
#: en/git-format-patch.txt:561
#, priority:100
msgid "There are three different approaches: use an add-on to turn off line wraps, configure Thunderbird to not mangle patches, or use an external editor to keep Thunderbird from mangling the patches."
msgstr "Existem três abordagens diferentes: utilize um complemento para desativar a quebra de linha, configure o Thunderbird para não alterar os patches ou utilize um editor externo para impedir que o Thunderbird manipule os patches."

#. type: Title ^
#: en/git-format-patch.txt:563
#, no-wrap, priority:100
msgid "Approach #1 (add-on)"
msgstr "Abordagem nº 1 (complemento)"

#. type: Plain text
#: en/git-format-patch.txt:571
#, priority:100
msgid "Install the Toggle Word Wrap add-on that is available from https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/ It adds a menu entry \"Enable Word Wrap\" in the composer's \"Options\" menu that you can tick off. Now you can compose the message as you otherwise do (cut + paste, 'git format-patch' | 'git imap-send', etc), but you have to insert line breaks manually in any text that you type."
msgstr "Instale o complemento \"Toggle Word Wrap\" que está disponível em https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/. É adicionado uma entrada chamada \"Enable Word Wrap Alt+W\" (Ativar a quebra automática de linha Alt+W) na aba \"Opções\" do compositor que você pode de-selecionar. Agora você pode compor a mensagem da mesma maneira que você sempre fez (recortar + colar, 'git format-patch' | 'git imap-send', etc), porém é necessário inserir as quebras das linhas manualmente em qualquer texto que for digitado."

#. type: Title ^
#: en/git-format-patch.txt:573
#, no-wrap, priority:100
msgid "Approach #2 (configuration)"
msgstr "Abordagem # 2 (configuração)"

#. type: Plain text
#: en/git-format-patch.txt:575
#, priority:100
msgid "Three steps:"
msgstr "Três etapas:"

#. type: Plain text
#: en/git-format-patch.txt:579
#, ignore-ellipsis, priority:100
msgid "Configure your mail server composition as plain text: Edit...Account Settings...Composition & Addressing, uncheck \"Compose Messages in HTML\"."
msgstr "Ainda no Thunderbird, configure a redação da mensagem de e-mail como texto sem formatação, vá em Editar -> Propriedades -> suaconta@email.com -> Redação e Endereçamento, desmarque a opção \"Usar formatação (HTML)\"."

#. type: Plain text
#: en/git-format-patch.txt:581
#, priority:100
msgid "Configure your general composition window to not wrap."
msgstr "Configure a sua janela de composição geral para não quebrar as linhas."

#. type: Plain text
#: en/git-format-patch.txt:584
#, priority:100
msgid "In Thunderbird 2: Edit..Preferences..Composition, wrap plain text messages at 0"
msgstr "No Thunderbird 2: Vá em Ferramentas -> Opções -> Edição -> Geral, defina como 0 (zero) caracteres a opção \"Quebrar a linha, em mensagem sem formatação, após\""

#. type: Plain text
#: en/git-format-patch.txt:590
#, priority:100
msgid "In Thunderbird 3: Edit..Preferences..Advanced..Config Editor.  Search for \"mail.wrap_long_lines\".  Toggle it to make sure it is set to `false`. Also, search for \"mailnews.wraplength\" and set the value to 0."
msgstr "No Thunderbird 3: Vá em Ferramentas -> Avançado -> Editor de config.  No campo localizar pesquise por \"mail.wrap_long_lines\".  Clique duas vezes com o mouse e tenha certeza que o seu valor mudou para `false`. Pesquise também pela opção \"mailnews.wraplength\", clique duas vezes com o mouse e defina o seu valor para 0 (zero)."

#. type: Plain text
#: en/git-format-patch.txt:595
#, priority:100
msgid "Disable the use of format=flowed: Edit..Preferences..Advanced..Config Editor.  Search for \"mailnews.send_plaintext_flowed\".  Toggle it to make sure it is set to `false`."
msgstr "Desative a utilização da opção \"format=flowed\": Vá em Ferramentas -> Avançado -> Editor de config.  No campo localizar pesquise por \"mailnews.send_plaintext_flowed\".  Clique duas vezes com o mouse e tenha certeza que o seu valor mudou para `false`."

#. type: Plain text
#: en/git-format-patch.txt:599
#, priority:100
msgid "After that is done, you should be able to compose email as you otherwise would (cut + paste, 'git format-patch' | 'git imap-send', etc), and the patches will not be mangled."
msgstr "Ao concluir, agora é possível compor o e-mail da mesma maneira que seria feito com (recortar + colar, 'git format-patch' | 'git imap-send', etc), e os patches não ficarão mutilados."

#. type: Title ^
#: en/git-format-patch.txt:601
#, no-wrap, priority:100
msgid "Approach #3 (external editor)"
msgstr "Abordagem nº 3 (editor externo)"

#. type: Plain text
#: en/git-format-patch.txt:606
#, priority:100
msgid "The following Thunderbird extensions are needed: AboutConfig from http://aboutconfig.mozdev.org/ and External Editor from http://globs.org/articles.php?lng=en&pg=8"
msgstr "As seguintes extensões do Thunderbird são necessárias: O AboutConfig http://aboutconfig.mozdev.org/ (Observação: o AboutConfig não é mais compatível com as versões mais novas do Thunderbird.) e o \"External Editor\" http://globs.org/articles.php?lng=en&pg=8"

#. type: Plain text
#: en/git-format-patch.txt:608
#, priority:100
msgid "Prepare the patch as a text file using your method of choice."
msgstr "Prepare o patch como um arquivo de texto utilizando o seu método preferido."

#. type: Plain text
#: en/git-format-patch.txt:613
#, priority:100
msgid "Before opening a compose window, use Edit->Account Settings to uncheck the \"Compose messages in HTML format\" setting in the \"Composition & Addressing\" panel of the account to be used to send the patch."
msgstr "Antes de abrir uma janela de composição, vá em Editar -> Propriedades -> Configurações da conta -> Redação e endereçamento e desmarque a opção \"Usar formatação (HTML)\" para que seja possível enviar o patch."

#. type: Plain text
#: en/git-format-patch.txt:617
#, priority:100
msgid "In the main Thunderbird window, 'before' you open the compose window for the patch, use Tools->about:config to set the following to the indicated values:"
msgstr "Na janela principal do Thunderbird, 'antes' de abrir a janela de composição do patch, vá em Ferramentas -> Avançado -> Editor de Configurações e defina os valores como indicado abaixo:"

#. type: delimited block -
#: en/git-format-patch.txt:621
#, no-wrap, priority:100
msgid ""
"\tmailnews.send_plaintext_flowed  => false\n"
"\tmailnews.wraplength             => 0\n"
msgstr ""
"\tmailnews.send_plaintext_flowed  => false\n"
"\tmailnews.wraplength             => 0\n"

#. type: Plain text
#: en/git-format-patch.txt:624
#, priority:100
msgid "Open a compose window and click the external editor icon."
msgstr "Abra uma janela de composição e clique no ícone do editor externo."

#. type: Plain text
#: en/git-format-patch.txt:627
#, priority:100
msgid "In the external editor window, read in the patch file and exit the editor normally."
msgstr "Na janela do editor externo, carregue o arquivo patch e saia do editor normalmente."

#. type: Plain text
#: en/git-format-patch.txt:630
#, priority:100
msgid "Side note: it may be possible to do step 2 with about:config and the following settings but no one's tried yet."
msgstr "Nota: Pode ser possível executar a segunda etapa para editar as seguintes configurações, mas ninguém tentou ainda."

#. type: delimited block -
#: en/git-format-patch.txt:635
#, no-wrap, priority:100
msgid ""
"\tmail.html_compose                       => false\n"
"\tmail.identity.default.compose_html      => false\n"
"\tmail.identity.id?.compose_html          => false\n"
msgstr ""
"\tmail.html_compose                       => false\n"
"\tmail.identity.default.compose_html      => false\n"
"\tmail.identity.id?.compose_html          => false\n"

#. type: Plain text
#: en/git-format-patch.txt:640
#, priority:100
msgid "There is a script in contrib/thunderbird-patch-inline which can help you include patches with Thunderbird in an easy way. To use it, do the steps above and then use the script as the external editor."
msgstr "Existe um script em contrib/thunderbird-patch-inline que pode ajudá-lo a incluir os patches com o Thunderbird facilmente. Para usá-lo, execute as etapas acima e utilize o script como um editor externo."

#. type: Title ~
#: en/git-format-patch.txt:642
#, no-wrap, priority:100
msgid "KMail"
msgstr "KMail"

#. type: Plain text
#: en/git-format-patch.txt:644
#, priority:100
msgid "This should help you to submit patches inline using KMail."
msgstr "Isso deve ajudá-lo a enviar os patches em linha utilizando o KMail."

#. type: Plain text
#: en/git-format-patch.txt:646
#, priority:100
msgid "Prepare the patch as a text file."
msgstr "Prepare o patch como um arquivo de texto."

#. type: Plain text
#: en/git-format-patch.txt:648
#, priority:100
msgid "Click on New Mail."
msgstr "Clique em \"New Mail\"."

#. type: Plain text
#: en/git-format-patch.txt:651
#, priority:100
msgid "Go under \"Options\" in the Composer window and be sure that \"Word wrap\" is not set."
msgstr "Vá em \"Opções\" na janela do Compositor verifique se \"Quebra de linha\" não está definido."

#. type: Plain text
#: en/git-format-patch.txt:653
#, ignore-ellipsis, priority:100
msgid "Use Message -> Insert file... and insert the patch."
msgstr "Utilize Mensagem -> Inserir arquivo -> e insira o patch."

#. type: Plain text
#: en/git-format-patch.txt:656
#, priority:100
msgid "Back in the compose window: add whatever other text you wish to the message, complete the addressing and subject fields, and press send."
msgstr "De volta à janela de composição: adicione qualquer outro texto que desejar, preencha os campos de endereçamento, assunto e pressione Enviar."

#. type: Title -
#: en/git-format-patch.txt:658
#, no-wrap, priority:100
msgid "BASE TREE INFORMATION"
msgstr "INFORMAÇÃO BASE DA ÁRVORE"

#. type: Plain text
#: en/git-format-patch.txt:667
#, priority:100
msgid "The base tree information block is used for maintainers or third party testers to know the exact state the patch series applies to. It consists of the 'base commit', which is a well-known commit that is part of the stable part of the project history everybody else works off of, and zero or more 'prerequisite patches', which are well-known patches in flight that is not yet part of the 'base commit' that need to be applied on top of 'base commit' in topological order before the patches can be applied."
msgstr "O bloco de informação da base da árvore é utilizado para que os mantenedores ou os testadores de terceiros saibam a condição exata ao qual a série de patches se aplicam. É a 'base do commit', é um commit informado que faz parte da parte estável do histórico do projeto onde todos os outros usam para trabalhar. Zero ou mais 'patches de pré-requisição' são patches informados em transição, porém ainda não fazem parte da 'base do commit' que precisam ser aplicados sobre o cume da 'base do commit' em ordem topológica antes que os patches possam ser aplicados."

#. type: Plain text
#: en/git-format-patch.txt:673
#, priority:100
msgid "The 'base commit' is shown as \"base-commit: \" followed by the 40-hex of the commit object name.  A 'prerequisite patch' is shown as \"prerequisite-patch-id: \" followed by the 40-hex 'patch id', which can be obtained by passing the patch through the `git patch-id --stable` command."
msgstr "A 'base do commit' é exibido como \"base-commit:\" seguido por 40 hexadecimais do nome do objeto commit.  Um 'patch de pré-requisição' é exibido como \"prerequisite-patch-id:\" seguido por um 'patch id' com 40 hexadecimais, que pode ser obtido passando o patch pelo comando `git patch-id --stable`."

#. type: Plain text
#: en/git-format-patch.txt:677
#, priority:100
msgid "Imagine that on top of the public commit P, you applied well-known patches X, Y and Z from somebody else, and then built your three-patch series A, B, C, the history would be like:"
msgstr "Imagine que, em cima do commit público P, foi aplicado os patches informados X, Y e Z de outra pessoa e construiu a sua série de três patches A, B, C, o histórico ficaria assim:"

#. type: delimited block .
#: en/git-format-patch.txt:680
#, no-wrap, priority:100
msgid "---P---X---Y---Z---A---B---C\n"
msgstr "---P---X---Y---Z---A---B---C\n"

#. type: Plain text
#: en/git-format-patch.txt:687
#, priority:100
msgid "With `git format-patch --base=P -3 C` (or variants thereof, e.g. with `--cover-letter` or using `Z..C` instead of `-3 C` to specify the range), the base tree information block is shown at the end of the first message the command outputs (either the first patch, or the cover letter), like this:"
msgstr "Com o `git format-patch --base = P -3 C` (ou variantes do mesmo com `--cover-letter` ou utilizando `Z..C` em vez de `-3 C` para especificar o intervalo por exemplo), o bloco das informações da base da árvore é exibido no final da primeira mensagem que o comando gera (o primeiro patch ou a carta de apresentação), assim:"

#. type: delimited block -
#: en/git-format-patch.txt:693
#, no-wrap, priority:100
msgid ""
"base-commit: P\n"
"prerequisite-patch-id: X\n"
"prerequisite-patch-id: Y\n"
"prerequisite-patch-id: Z\n"
msgstr ""
"base-commit: P\n"
"prerequisite-patch-id: X\n"
"prerequisite-patch-id: Y\n"
"prerequisite-patch-id: Z\n"

#. type: Plain text
#: en/git-format-patch.txt:696
#, priority:100
msgid "For non-linear topology, such as"
msgstr "Para uma topologia não linear, como"

#. type: delimited block .
#: en/git-format-patch.txt:701
#, no-wrap, priority:100
msgid ""
"---P---X---A---M---C\n"
"    \\         /\n"
"     Y---Z---B\n"
msgstr ""
"---P---X---A---M---C\n"
"    \\         /\n"
"     Y---Z---B\n"

#. type: Plain text
#: en/git-format-patch.txt:706
#, priority:100
msgid "You can also use `git format-patch --base=P -3 C` to generate patches for A, B and C, and the identifiers for P, X, Y, Z are appended at the end of the first message."
msgstr "Você também pode usar o comando `git format-patch --base = P -3 C` para gerar as correções para A, B e C, os identificadores para P, X, Y, Z serão anexados no final da primeira mensagem."

#. type: Plain text
#: en/git-format-patch.txt:712
#, priority:100
msgid "If set `--base=auto` in cmdline, it will automatically compute the base commit as the merge base of tip commit of the remote-tracking branch and revision-range specified in cmdline.  For a local branch, you need to make it to track a remote branch by `git branch --set-upstream-to` before using this option."
msgstr "Caso `--base=auto` seja definido no cmdline, será automaticamente computado na base do commit como o commit da base será o cume do ramo do commit monitorado remotamente e o intervalo da revisão determinado pelo cmdline.  Antes de utilizar esta opção para uma ramificação local, é preciso monitorar um ramo remoto com o comando `git branch --set-upstream-to`."

#. type: Plain text
#: en/git-format-patch.txt:718
#, priority:100
msgid "Extract commits between revisions R1 and R2, and apply them on top of the current branch using 'git am' to cherry-pick them:"
msgstr "Extraia os commits entre as revisões R1 e R2, aplique-as no cume do ramo atual utilizando o comando 'git am' para selecioná-las:"

#. type: delimited block -
#: en/git-format-patch.txt:721
#, no-wrap, priority:100
msgid "$ git format-patch -k --stdout R1..R2 | git am -3 -k\n"
msgstr "$ git format-patch -k --stdout R1..R2 | git am -3 -k\n"

#. type: Plain text
#: en/git-format-patch.txt:725
#, priority:100
msgid "Extract all commits which are in the current branch but not in the origin branch:"
msgstr "Extraia todos os commits que estão na ramificação atual, mas não na ramificação \"origin\":"

#. type: delimited block -
#: en/git-format-patch.txt:728
#, no-wrap, priority:100
msgid "$ git format-patch origin\n"
msgstr "$ git format-patch origin\n"

#. type: Plain text
#: en/git-format-patch.txt:731
#, priority:100
msgid "For each commit a separate file is created in the current directory."
msgstr "Para cada commit é criado um arquivo separado no diretório atual."

#. type: Plain text
#: en/git-format-patch.txt:734
#, priority:100
msgid "Extract all commits that lead to 'origin' since the inception of the project:"
msgstr "Extraia todos os commits que levem à 'origin' desde o início do projeto:"

#. type: delimited block -
#: en/git-format-patch.txt:737
#, no-wrap, priority:100
msgid "$ git format-patch --root origin\n"
msgstr "$ git format-patch --root origin\n"

#. type: Plain text
#: en/git-format-patch.txt:740
#, priority:100
msgid "The same as the previous one:"
msgstr "É o mesmo que o anterior:"

#. type: delimited block -
#: en/git-format-patch.txt:743
#, no-wrap, priority:100
msgid "$ git format-patch -M -B origin\n"
msgstr "$ git format-patch -M -B origin\n"

#. type: Plain text
#: en/git-format-patch.txt:750
#, priority:100
msgid "Additionally, it detects and handles renames and complete rewrites intelligently to produce a renaming patch.  A renaming patch reduces the amount of text output, and generally makes it easier to review.  Note that non-Git \"patch\" programs won't understand renaming patches, so use it only when you know the recipient uses Git to apply your patch."
msgstr "Além disso, ele detecta e manipula as renomeações e as reescritas completadas de maneira inteligente produzindo um patch de renomeação.  Um patch de renomeação reduz a quantidade de saída do texto e geralmente facilita a revisão.  Observe que os programas de \"patches\" que não sejam do Git não entenderão como renomear os patches; portanto, utilize-os apenas quando souber que o destinatário usa o Git para aplicar seu patch."

#. type: Plain text
#: en/git-format-patch.txt:753
#, priority:100
msgid "Extract three topmost commits from the current branch and format them as e-mailable patches:"
msgstr "Extraia os três commits mais importantes do ramo atual, formate-os como patches que possam ser enviados por e-mail:"

#. type: delimited block -
#: en/git-format-patch.txt:756
#, no-wrap, priority:100
msgid "$ git format-patch -3\n"
msgstr "$ git format-patch -3\n"

#. type: Plain text
#: en/git-format-patch.txt:765
#, priority:100
msgid "Note that `format-patch` will omit merge commits from the output, even if they are part of the requested range. A simple \"patch\" does not include enough information for the receiving end to reproduce the same merge commit."
msgstr "Observe que `format-patch` irá omitir a mesclagem dos commits que forem gerados, ainda que eles façam parte do intervalo solicitado. Um simples \"patch\" não inclui informações suficientes para que a parte receptora reproduza a mesma mesclagem do commit."

#. type: Plain text
#: en/git-format-patch.txt:769
#, ignore-same, priority:100
msgid "linkgit:git-am[1], linkgit:git-send-email[1]"
msgstr "linkgit:git-am[1], linkgit:git-send-email[1]"

#. type: Title =
#: en/git-fsck-objects.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-fsck-objects(1)"
msgstr "git-fsck-objects(1)"

#. type: Plain text
#: en/git-fsck-objects.txt:7
#, priority:100
msgid "git-fsck-objects - Verifies the connectivity and validity of the objects in the database"
msgstr "git-fsck-objects - Verifica a conectividade e validade dos objetos no banco de dados"

#. type: Plain text
#: en/git-fsck-objects.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git fsck-objects' ...\n"
msgstr "'git fsck-objects' ...\n"

#. type: Plain text
#: en/git-fsck-objects.txt:19
#, priority:100
msgid "This is a synonym for linkgit:git-fsck[1].  Please refer to the documentation of that command."
msgstr "Este é um sinônimo para o comando linkgit:git-fsck[1].  Consulte a documentação para obter mais referências sobre este comando."

#. type: Title =
#: en/git-fsck.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-fsck(1)"
msgstr "git-fsck(1)"

#. type: Plain text
#: en/git-fsck.txt:7
#, priority:100
msgid "git-fsck - Verifies the connectivity and validity of the objects in the database"
msgstr "git-fsck - Verifica a conectividade e a validade dos objetos no banco de dados"

#. type: Plain text
#: en/git-fsck.txt:16
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git fsck' [--tags] [--root] [--unreachable] [--cache] [--no-reflogs]\n"
"\t [--[no-]full] [--strict] [--verbose] [--lost-found]\n"
"\t [--[no-]dangling] [--[no-]progress] [--connectivity-only]\n"
"\t [--[no-]name-objects] [<object>...]\n"
msgstr ""
"'git fsck' [--tags] [--root] [--unreachable] [--cache] [--no-reflogs]\n"
"\t [--[no-]full] [--strict] [--verbose] [--lost-found]\n"
"\t [--[no-]dangling] [--[no-]progress] [--connectivity-only]\n"
"\t [--[no-]name-objects] [<objeto>...]\n"

#. type: Plain text
#: en/git-fsck.txt:25
#, priority:100
msgid "An object to treat as the head of an unreachability trace."
msgstr "Um objeto a ser tratado como a cabeça de um rastreamento de inacessibilidade."

#. type: Plain text
#: en/git-fsck.txt:29
#, priority:100
msgid "If no objects are given, 'git fsck' defaults to using the index file, all SHA-1 references in `refs` namespace, and all reflogs (unless --no-reflogs is given) as heads."
msgstr "Caso nenhum objeto seja informado, a predefinição do comando 'git fsck' retorna para o arquivo do índice, todas as referências SHA-1 no espaço de nomes `refs` e todos os reflogs (a menos que a opção `--no-reflogs` seja utilizada) serão utilizados como cabeçalhos."

#. type: Labeled list
#: en/git-fsck.txt:30
#, ignore-same, no-wrap, priority:100
msgid "--unreachable"
msgstr "--unreachable"

#. type: Plain text
#: en/git-fsck.txt:33
#, priority:100
msgid "Print out objects that exist but that aren't reachable from any of the reference nodes."
msgstr "Imprima os objetos que existam, porém que não sejam acessíveis a partir de nenhum dos nós de referência."

#. type: Labeled list
#: en/git-fsck.txt:34
#, ignore-same, no-wrap, priority:100
msgid "--[no-]dangling"
msgstr "--[no-]dangling"

#. type: Plain text
#: en/git-fsck.txt:37
#, priority:100
msgid "Print objects that exist but that are never 'directly' used (default).  `--no-dangling` can be used to omit this information from the output."
msgstr "Imprima os objetos que existam porém, que nunca são utilizados 'diretamente' (predefinição).  `--no-dangling` pode ser utilizado para omitir esta informação na saída."

#. type: Plain text
#: en/git-fsck.txt:40
#, priority:100
msgid "Report root nodes."
msgstr "Relatar os nós raiz."

#. type: Plain text
#: en/git-fsck.txt:43
#, priority:100
msgid "Report tags."
msgstr "Tags de relatório."

#. type: Labeled list
#: en/git-fsck.txt:44
#, ignore-same, no-wrap, priority:100
msgid "--cache"
msgstr "--cache"

#. type: Plain text
#: en/git-fsck.txt:47
#, priority:100
msgid "Consider any object recorded in the index also as a head node for an unreachability trace."
msgstr "Considere qualquer objeto registrado no índice também como um nó principal para um rastreamento de inacessibilidade."

#. type: Labeled list
#: en/git-fsck.txt:48
#, ignore-same, no-wrap, priority:100
msgid "--no-reflogs"
msgstr "--no-reflogs"

#. type: Plain text
#: en/git-fsck.txt:53
#, priority:100
msgid "Do not consider commits that are referenced only by an entry in a reflog to be reachable.  This option is meant only to search for commits that used to be in a ref, but now aren't, but are still in that corresponding reflog."
msgstr "Para serem acessíveis, não considere que os commits sejam referenciados apenas por uma entrada num \"reflog\".  Esta opção serve apenas para procurar commits que costumavam estar num \"ref\", mas agora não estão mais, mas ainda assim num reflog equivalente."

#. type: Labeled list
#: en/git-fsck.txt:54
#, ignore-same, no-wrap, priority:100
msgid "--full"
msgstr "--full"

#. type: Plain text
#: en/git-fsck.txt:63
#, priority:100
msgid "Check not just objects in GIT_OBJECT_DIRECTORY ($GIT_DIR/objects), but also the ones found in alternate object pools listed in GIT_ALTERNATE_OBJECT_DIRECTORIES or $GIT_DIR/objects/info/alternates, and in packed Git archives found in $GIT_DIR/objects/pack and corresponding pack subdirectories in alternate object pools.  This is now default; you can turn it off with --no-full."
msgstr "Verifique não apenas os objetos em `GIT_OBJECT_DIRECTORY` (`$GIT_DIR/objects`), mas também os que forem encontrados nos conjuntos de objetos alternativos listados em `GIT_ALTERNATE_OBJECT_DIRECTORIES` ou `$GIT_DIR/objects/info/alternates`, nos arquivos Git encontrados em `$GIT_DIR/objects/pack` e nos pacotes dos subdiretórios correspondentes nos conjuntos dos objetos alternativos.  Esta é a predefinição agora; desative-o com `--no-full`."

#. type: Labeled list
#: en/git-fsck.txt:64
#, ignore-same, no-wrap, priority:100
msgid "--connectivity-only"
msgstr "--connectivity-only"

#. type: Plain text
#: en/git-fsck.txt:72
#, priority:100
msgid "Check only the connectivity of reachable objects, making sure that any objects referenced by a reachable tag, commit, or tree is present. This speeds up the operation by avoiding reading blobs entirely (though it does still check that referenced blobs exist). This will detect corruption in commits and trees, but not do any semantic checks (e.g., for format errors). Corruption in blob objects will not be detected at all."
msgstr "Verifique apenas a conectividade dos objetos acessíveis, certificando-se de que todos os objetos referenciados por uma tag, commit ou árvore acessível estejam presentes. Isso acelera a operação evitando a leitura completa das bolhas (embora ainda verifique caso existam as bolhas referenciadas). Isso detectará a corrupção nos commits e nas árvores, porém não fará nenhuma verificação semântica (por exemplo, erros no formato). A corrupção nos objetos bolha não será detectada de forma alguma."

#. type: Plain text
#: en/git-fsck.txt:76
#, priority:100
msgid "Unreachable tags, commits, and trees will also be accessed to find the tips of dangling segments of history. Use `--no-dangling` if you don't care about this output and want to speed it up further."
msgstr "Tags, confirmações e árvores inacessíveis também serão acessadas para encontrar o topo dos segmentos pendentes na história. Use a opção `--no-dangling` caso não se importe com esta saída e queira acelerar um pouco as coisas ainda mais."

#. type: Labeled list
#: en/git-fsck.txt:77 en/git-index-pack.txt:82 en/git-mktag.txt:43 en/git-unpack-objects.txt:44
#, ignore-same, no-wrap, priority:100
msgid "--strict"
msgstr "--strict"

#. type: Plain text
#: en/git-fsck.txt:84
#, priority:100
msgid "Enable more strict checking, namely to catch a file mode recorded with g+w bit set, which was created by older versions of Git.  Existing repositories, including the Linux kernel, Git itself, and sparse repository have old objects that triggers this check, but it is recommended to check new projects with this flag."
msgstr "Ative uma verificação mais rigorosa para capturar um modo do arquivo gravado num conjunto de bits g+w, criado por versões mais antigas do Git.  Os repositórios existentes, incluindo o kernel do Linux, o próprio Git e o repositório esparso, possuem objetos antigos que acionam esta verificação. É recomendável verificar novos projetos com essa flag."

#. type: Plain text
#: en/git-fsck.txt:87
#, priority:100
msgid "Be chatty."
msgstr "Seja tagarela."

#. type: Labeled list
#: en/git-fsck.txt:88
#, ignore-same, no-wrap, priority:100
msgid "--lost-found"
msgstr "--lost-found"

#. type: Plain text
#: en/git-fsck.txt:93
#, priority:100
msgid "Write dangling objects into .git/lost-found/commit/ or .git/lost-found/other/, depending on type.  If the object is a blob, the contents are written into the file, rather than its object name."
msgstr "Dependendo do tipo, escreva os objetos pendentes em .git/lost-found/commit/ ou .git/lost-found/other/.  O conteúdo será gravado no arquivo e não no nome do objeto caso o objeto seja uma bolha."

#. type: Labeled list
#: en/git-fsck.txt:94
#, ignore-same, no-wrap, priority:100
msgid "--name-objects"
msgstr "--name-objects"

#. type: Plain text
#: en/git-fsck.txt:99
#, priority:100
msgid "When displaying names of reachable objects, in addition to the SHA-1 also display a name that describes *how* they are reachable, compatible with linkgit:git-rev-parse[1], e.g.  `HEAD@{1234567890}~25^2:src/`."
msgstr "Ao exibir os nomes dos objetos acessíveis além do SHA-1 que descrevam *como* eles são acessíveis, é compatível com linkgit:git-rev-parse[1], `HEAD@{1234567890}~25^2:src/` por exemplo."

#. type: Plain text
#: en/git-fsck.txt:106
#, priority:100
msgid "Progress status is reported on the standard error stream by default when it is attached to a terminal, unless --no-progress or --verbose is specified. --progress forces progress status even if the standard error stream is not directed to a terminal."
msgstr "A condição do progresso é relatado no fluxo de erro predefinido ao estar conectado num terminal, a menos que as opções `--no-progress` ou `--verbose` sejam utilizados. A opção `--progress` impõem que a condição do progresso seja exibida mesmo que o fluxo de erro predefinido não esteja direcionado para um terminal."

#. type: Plain text
#: en/git-fsck.txt:123
#, priority:100
msgid "git-fsck tests SHA-1 and general object sanity, and it does full tracking of the resulting reachability and everything else. It prints out any corruption it finds (missing or bad objects), and if you use the `--unreachable` flag it will also print out objects that exist but that aren't reachable from any of the specified head nodes (or the default set, as mentioned above)."
msgstr "O git-fsck testa se o SHA-1 e a sanidade geral dos objetos, faz o rastreamento completo da acessibilidade resultante e todo o resto. Imprime qualquer corrupção encontrada (objetos ausentes ou incorretos) , se utilizar a opção `--unreachable`, também serão impressos os objetos que existem mas que não estão acessíveis a partir de nenhum dos nós principais (ou da predefinição mencionada acima)."

#. type: Plain text
#: en/git-fsck.txt:127
#, priority:100
msgid "Any corrupt objects you will have to find in backups or other archives (i.e., you can just remove them and do an 'rsync' with some other site in the hopes that somebody else has the object you have corrupted)."
msgstr "Você precisará encontrar quaisquer outros objetos corrompidos nos backups ou em outros arquivos (ou seja, remova-os e faça um 'rsync' com outro site na esperança de que outra pessoa tenha uma cópia do objeto que você corrompeu)."

#. type: Plain text
#: en/git-fsck.txt:130
#, priority:100
msgid "If core.commitGraph is true, the commit-graph file will also be inspected using 'git commit-graph verify'. See linkgit:git-commit-graph[1]."
msgstr "Caso core.commitGraph seja verdadeiro, o arquivo commit-graph também será inspecionado utilizando 'git commit-graph verify'. See linkgit:git-commit-graph[1]."

#. type: Title -
#: en/git-fsck.txt:132
#, no-wrap, priority:100
msgid "Extracted Diagnostics"
msgstr "Diagnósticos Extraídos"

#. type: Labeled list
#: en/git-fsck.txt:134
#, no-wrap, priority:100
msgid "unreachable <type> <object>"
msgstr "unreachable <tipo> <objeto>"

#. type: Plain text
#: en/git-fsck.txt:141
#, priority:100
msgid "The <type> object <object>, isn't actually referred to directly or indirectly in any of the trees or commits seen. This can mean that there's another root node that you're not specifying or that the tree is corrupt. If you haven't missed a root node then you might as well delete unreachable nodes since they can't be used."
msgstr "O objeto <tipo> <objeto>, na verdade, não tem referência direta ou indireta com nenhuma das árvores ou commits já vistos. Significa que há um outro nó na raiz que você ainda não está informando ou que a árvore está corrompida. Caso você ainda não tenha perdido um nó na raiz, também possa excluir os nós que estejam inacessíveis, pois eles não possam ser utilizados."

#. type: Labeled list
#: en/git-fsck.txt:142
#, no-wrap, priority:100
msgid "missing <type> <object>"
msgstr "missing <tipo> <objeto>"

#. type: Plain text
#: en/git-fsck.txt:145
#, priority:100
msgid "The <type> object <object>, is referred to but isn't present in the database."
msgstr "O objeto <tipo> <objeto>, tem referência mas não está presente no banco de dados."

#. type: Labeled list
#: en/git-fsck.txt:146
#, no-wrap, priority:100
msgid "dangling <type> <object>"
msgstr "dangling <tipo> <objeto>"

#. type: Plain text
#: en/git-fsck.txt:149
#, priority:100
msgid "The <type> object <object>, is present in the database but never 'directly' used. A dangling commit could be a root node."
msgstr "O <tipo> do objeto <objeto> está presente no banco de dados, mas nunca é utilizado 'diretamente'. A dangling commit could be a root node."

#. type: Labeled list
#: en/git-fsck.txt:150
#, no-wrap, priority:100
msgid "hash mismatch <object>"
msgstr "hash mismatch <objeto>"

#. type: Plain text
#: en/git-fsck.txt:154
#, priority:100
msgid "The database has an object whose hash doesn't match the object database value.  This indicates a serious data integrity problem."
msgstr "O banco de dados tem um objeto cujo hash não coincide com o valor do banco de dados do objeto.  Isso indica um sério problema na integridade dos dados."

#. type: Title -
#: en/git-fsck.txt:156 en/git.txt:460
#, no-wrap, priority:100
msgid "Environment Variables"
msgstr "As Variáveis do Ambiente"

#. type: Labeled list
#: en/git-fsck.txt:158
#, ignore-same, no-wrap, priority:100
msgid "GIT_OBJECT_DIRECTORY"
msgstr "GIT_OBJECT_DIRECTORY"

#. type: Plain text
#: en/git-fsck.txt:160
#, priority:100
msgid "used to specify the object database root (usually $GIT_DIR/objects)"
msgstr "utilize para especificar a raiz do banco de dados do objeto (geralmente '$GIT_DIR/objects')"

#. type: Labeled list
#: en/git-fsck.txt:161
#, ignore-same, no-wrap, priority:100
msgid "GIT_INDEX_FILE"
msgstr "GIT_INDEX_FILE"

#. type: Plain text
#: en/git-fsck.txt:163
#, priority:100
msgid "used to specify the index file of the index"
msgstr "utilizado para determinar o arquivo de índice do índice"

#. type: Labeled list
#: en/git-fsck.txt:164
#, ignore-same, no-wrap, priority:100
msgid "GIT_ALTERNATE_OBJECT_DIRECTORIES"
msgstr "GIT_ALTERNATE_OBJECT_DIRECTORIES"

#. type: Plain text
#: en/git-fsck.txt:166
#, priority:100
msgid "used to specify additional object database roots (usually unset)"
msgstr "utilizado para determinar as raízes adicionais do banco de dados dos objetos (geralmente não definidos)"

#. type: Title =
#: en/git-gc.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-gc(1)"
msgstr "git-gc(1)"

#. type: Plain text
#: en/git-gc.txt:7
#, priority:100
msgid "git-gc - Cleanup unnecessary files and optimize the local repository"
msgstr "git-gc - Limpa os arquivos desnecessários e otimiza o repositório local"

#. type: Plain text
#: en/git-gc.txt:13
#, no-wrap, priority:100
msgid "'git gc' [--aggressive] [--auto] [--quiet] [--prune=<date> | --no-prune] [--force] [--keep-largest-pack]\n"
msgstr "'git gc' [--aggressive] [--auto] [--quiet] [--prune=<data> | --no-prune] [--force] [--keep-largest-pack]\n"

#. type: Plain text
#: en/git-gc.txt:22
#, priority:100
msgid "Runs a number of housekeeping tasks within the current repository, such as compressing file revisions (to reduce disk space and increase performance), removing unreachable objects which may have been created from prior invocations of 'git add', packing refs, pruning reflog, rerere metadata or stale working trees. May also update ancillary indexes such as the commit-graph."
msgstr "Executa várias tarefas de limpeza no repositório atual, como a compactação dos arquivos das revisões (para reduzir o espaço em disco e aumentar o desempenho), a remoção dos objetos inacessíveis que podem ter sido criados a partir de invocações anteriores ao 'git add', pacotes refs, a remoção do \"reflog\", metadados reerere ou árvores de trabalho obsoletas. Pode também atualizar os índices auxiliares, como o grafo do commit."

#. type: Plain text
#: en/git-gc.txt:27
#, priority:100
msgid "When common porcelain operations that create objects are run, they will check whether the repository has grown substantially since the last maintenance, and if so run `git gc` automatically. See `gc.auto` below for how to disable this behavior."
msgstr "Quando as operações porcelana tradicionais que criam os objetos são executadas, elas verificam se o repositório cresceu substancialmente desde a última manutenção e se for o caso, executam o o comando `git gc` automaticamente. Consulte `gc.auto` abaixo para saber como desativar este comportamento."

#. type: Plain text
#: en/git-gc.txt:33
#, priority:100
msgid "Running `git gc` manually should only be needed when adding objects to a repository without regularly running such porcelain commands, to do a one-off repository optimization, or e.g. to clean up a suboptimal mass-import. See the \"PACKFILE OPTIMIZATION\" section in linkgit:git-fast-import[1] for more details on the import case."
msgstr "A execução manual do comando `git gc` só é necessária ao adicionar objetos em um repositório quando não executar regularmente estes comandos porcelana, para executar uma otimização única do repositório ou por exemplo, para limpar uma importação em massa que esteja abaixo do ideal. Consulte a seção \"OTIMIZAÇÃO DE PACOTE\" no linkgit:git-fast-import[1] para obter mais detalhes sobre o caso de importação."

#. type: Labeled list
#: en/git-gc.txt:37 en/git-read-tree.txt:72
#, ignore-same, no-wrap, priority:100
msgid "--aggressive"
msgstr "--aggressive"

#. type: Plain text
#: en/git-gc.txt:43
#, priority:100
msgid "Usually 'git gc' runs very quickly while providing good disk space utilization and performance.  This option will cause 'git gc' to more aggressively optimize the repository at the expense of taking much more time.  The effects of this optimization are mostly persistent. See the \"AGGRESSIVE\" section below for details."
msgstr "Normalmente, o comando 'git gc' roda de forma muito rápida, proporcionando uma boa utilização do espaço e do desempenho em disco.  Esta opção fará com que o comando 'git gc' otimize de forma mais agressiva o repositório à custa de levar muito mais tempo.  Os efeitos dessa otimização em geral são persistentes. Consulte a seção \"AGRESSIVO\" abaixo para obter detalhes."

#. type: Labeled list
#: en/git-gc.txt:44
#, ignore-same, no-wrap, priority:100
msgid "--auto"
msgstr "--auto"

#. type: Plain text
#: en/git-gc.txt:47
#, priority:100
msgid "With this option, 'git gc' checks whether any housekeeping is required; if not, it exits without performing any work."
msgstr "Com esta opção, o comando 'git gc' verifica se é necessário alguma limpeza; caso contrário, sai sem fazer nada."

#. type: Plain text
#: en/git-gc.txt:50
#, priority:100
msgid "See the `gc.auto` option in the \"CONFIGURATION\" section below for how this heuristic works."
msgstr "Consulte a opção `gc.auto` na seção \"CONFIGURAÇÃO\" abaixo para saber como essa heurística funciona."

#. type: Plain text
#: en/git-gc.txt:55
#, ignore-ellipsis, priority:100
msgid "Once housekeeping is triggered by exceeding the limits of configuration options such as `gc.auto` and `gc.autoPackLimit`, all other housekeeping tasks (e.g. rerere, working trees, reflog...) will be performed as well."
msgstr "Caso seja excedido os limites definidos nas opções de configuração como `gc.auto` e `gc.autoPackLimit` o processo de limpeza é acionado, todas as outras tarefas de limpeza (como rerere, árvores de trabalho, reflog..., etc) também serão executados."

#. type: Labeled list
#: en/git-gc.txt:57 en/git-pack-objects.txt:99 en/git-repack.txt:66
#, ignore-same, no-wrap, priority:100
msgid "--cruft"
msgstr "--cruft"

#. type: Plain text
#: en/git-gc.txt:60
#, fuzzy, priority:100
#| msgid "When expiring unreachable objects, pack them separately into a cruft pack instead of storing the loose objects as loose objects."
msgid "When expiring unreachable objects, pack them separately into a cruft pack instead of storing them as loose objects."
msgstr "Ao expirar os objetos inalcançáveis, empacote-os separadamente num pacote simples em vez de armazenar os objetos soltos como objetos soltos."

#. type: Labeled list
#: en/git-gc.txt:61
#, no-wrap, priority:100
msgid "--prune=<date>"
msgstr "--prune=<data>"

#. type: Plain text
#: en/git-gc.txt:68
#, priority:100
msgid "Prune loose objects older than date (default is 2 weeks ago, overridable by the config variable `gc.pruneExpire`).  --prune=now prunes loose objects regardless of their age and increases the risk of corruption if another process is writing to the repository concurrently; see \"NOTES\" below. --prune is on by default."
msgstr "Elimine os objetos soltos anteriores à data (a predefinição retorna para de 2 semanas atrás, substituível pela variável de configuração `gc.pruneExpire`).  A opção `--prune=now` elimina objetos soltos independentemente da idade e aumenta o risco de corrupção caso outro processo esteja gravando no repositório; consulte \"OBSERVAÇÕES\" abaixo. A predefinição é que a opção `--prune` esteja sempre ativada."

#. type: Labeled list
#: en/git-gc.txt:69 en/git-pack-refs.txt:57
#, ignore-same, no-wrap, priority:100
msgid "--no-prune"
msgstr "--no-prune"

#. type: Plain text
#: en/git-gc.txt:71
#, priority:100
msgid "Do not prune any loose objects."
msgstr "Não corte qualquer dos objetos soltos."

#. type: Plain text
#: en/git-gc.txt:74
#, priority:100
msgid "Suppress all progress reports."
msgstr "Suprimir todos os relatórios de progresso."

#. type: Plain text
#: en/git-gc.txt:78
#, priority:100
msgid "Force `git gc` to run even if there may be another `git gc` instance running on this repository."
msgstr "Imponha a execução do `git gc` mesmo que possa haver uma outra instância do `git gc` em execução neste repositório."

#. type: Labeled list
#: en/git-gc.txt:79
#, ignore-same, no-wrap, priority:100
msgid "--keep-largest-pack"
msgstr "--keep-largest-pack"

#. type: Plain text
#: en/git-gc.txt:83
#, priority:100
msgid "All packs except the largest pack and those marked with a `.keep` files are consolidated into a single pack. When this option is used, `gc.bigPackThreshold` is ignored."
msgstr "Todos os pacotes, exceto o maior e os marcados com um arquivo `.keep`, são consolidados num único pacote. Quando esta opção é utilizada, a variável `gc.bigPackThreshold` é ignorada."

#. type: Title -
#: en/git-gc.txt:85
#, no-wrap, priority:100
msgid "AGGRESSIVE"
msgstr "AGRESSIVO"

#. type: Plain text
#: en/git-gc.txt:92
#, priority:100
msgid "When the `--aggressive` option is supplied, linkgit:git-repack[1] will be invoked with the `-f` flag, which in turn will pass `--no-reuse-delta` to linkgit:git-pack-objects[1]. This will throw away any existing deltas and re-compute them, at the expense of spending much more time on the repacking."
msgstr "Quando a opção `--aggressive` é utilizada, linkgit:git-repack[1] será invocado com a opção `-f`, que por sua vez passará a opção `--no-reuse-delta` para linkgit:git-pack-objects[1]. Isso descartará quaisquer deltas existentes e os computará novamente, às custas de se gastar muito mais tempo na re-embalagem."

#. type: Plain text
#: en/git-gc.txt:97
#, priority:100
msgid "The effects of this are mostly persistent, e.g. when packs and loose objects are coalesced into one another pack the existing deltas in that pack might get re-used, but there are also various cases where we might pick a sub-optimal delta from a newer pack instead."
msgstr "Os efeitos disso são predominantemente persistentes, por exemplo, quando os pacotes e os objetos soltos são reunidos entre si, os deltas existentes neste pacote podem ser reutilizados, porém também existem vários casos onde em vez disso, podemos escolher um delta não otimizado de um pacote mais novo."

#. type: Plain text
#: en/git-gc.txt:103
#, priority:100
msgid "Furthermore, supplying `--aggressive` will tweak the `--depth` and `--window` options passed to linkgit:git-repack[1]. See the `gc.aggressiveDepth` and `gc.aggressiveWindow` settings below. By using a larger window size we're more likely to find more optimal deltas."
msgstr "Além disso, utilizar `--aggressive` irá ajustar as opções `--depth` e `--window` encaminhadas para o linkgit:git-repack[1]. Consulte as configurações `gc.aggressiveDepth` e `gc.aggressiveWindow` abaixo. Ao utilizar um tamanho de janela maior, é mais provável que encontremos deltas mais otimizados."

#. type: Plain text
#: en/git-gc.txt:109
#, priority:100
msgid "It's probably not worth it to use this option on a given repository without running tailored performance benchmarks on it. It takes a lot more time, and the resulting space/delta optimization may or may not be worth it. Not using this at all is the right trade-off for most users and their repositories."
msgstr "Provavelmente não vale a pena utilizar esta opção em um determinado repositório sem antes executar um benchmark de desempenho sob medida. Leva muito mais tempo e a otimização de espaço/delta resultante pode ou não valer a pena. Não utilizar isso de forma alguma é um dilema para a maioria dos usuários e seus repositórios."

#. type: Plain text
#: en/git-gc.txt:131
#, priority:100
msgid "'git gc' tries very hard not to delete objects that are referenced anywhere in your repository. In particular, it will keep not only objects referenced by your current set of branches and tags, but also objects referenced by the index, remote-tracking branches, reflogs (which may reference commits in branches that were later amended or rewound), and anything else in the refs/* namespace. Note that a note (of the kind created by 'git notes') attached to an object does not contribute in keeping the object alive. If you are expecting some objects to be deleted and they aren't, check all of those locations and decide whether it makes sense in your case to remove those references."
msgstr "O comando 'git gc' evita muito a não exclusão dos objetos que possuam referencias em qualquer lugar do seu repositório. Ele manterá não apenas os objetos referenciados pelo seu conjunto atual das ramificações e as tags, mas também os objetos referenciados através do índice, as ramificações monitoradas remotamente, reflogs (que podem fazer referência no commit dos ramos que foram alterados ou retrocedido posteriormente) e qualquer outra coisa no espaço dos nomes refs/*. Observe que uma nota (do tipo criado através do 'git notes') anexada a um objeto não contribui para manter o objeto vivo. Caso esteja esperando que alguns objetos sejam excluídos e não foram, verifique todos estes locais e decida se faz sentido remover as referências ou não."

#. type: Plain text
#: en/git-gc.txt:138
#, priority:100
msgid "On the other hand, when 'git gc' runs concurrently with another process, there is a risk of it deleting an object that the other process is using but hasn't created a reference to. This may just cause the other process to fail or may corrupt the repository if the other process later adds a reference to the deleted object. Git has two features that significantly mitigate this problem:"
msgstr "Por outro lado, quando o 'git gc' é executado simultaneamente com outro processo, existe o risco de excluir um objeto que o outro processo está utilizando e que não criou uma referência para ele ainda. Isso pode causar falha no outro processo ou corromper o repositório caso o outro processo adicione posteriormente uma referência ao objeto excluído. O Git possui dois recursos que atenuam bastante este problema:"

#. type: Plain text
#: en/git-gc.txt:141
#, priority:100
msgid "Any object with modification time newer than the `--prune` date is kept, along with everything reachable from it."
msgstr "Qualquer objeto com um tempo de modificação mais recente que a data `--prune` é mantido, junto com tudo o que pode ser acessado."

#. type: Plain text
#: en/git-gc.txt:145
#, priority:100
msgid "Most operations that add an object to the database update the modification time of the object if it is already present so that #1 applies."
msgstr "A maioria das operações que adicionam um objeto ao banco de dados atualiza a hora da modificação do objeto, caso já esteja presente para que #1 se aplique."

#. type: Plain text
#: en/git-gc.txt:149
#, priority:100
msgid "However, these features fall short of a complete solution, so users who run commands concurrently have to live with some risk of corruption (which seems to be low in practice)."
msgstr "No entanto, estes recursos ficam aquém de uma solução completa; portanto, os usuários que executam comandos simultaneamente, precisam enfrentar algum risco de corrupção (o que na pratica, o risco parece ser baixo)."

#. type: Plain text
#: en/git-gc.txt:155
#, priority:100
msgid "The 'git gc --auto' command will run the 'pre-auto-gc' hook.  See linkgit:githooks[5] for more information."
msgstr "O comando 'git gc --auto' executará o gancho 'pre-auto-gc'.  Para mais informações consulte linkgit:githooks[5]."

#. type: Plain text
#: en/git-gc.txt:163
#, ignore-same, priority:100
msgid "linkgit:git-prune[1] linkgit:git-reflog[1] linkgit:git-repack[1] linkgit:git-rerere[1]"
msgstr "linkgit:git-prune[1] linkgit:git-reflog[1] linkgit:git-repack[1] linkgit:git-rerere[1]"

#. type: Title =
#: en/git-get-tar-commit-id.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-get-tar-commit-id(1)"
msgstr "git-get-tar-commit-id(1)"

#. type: Plain text
#: en/git-get-tar-commit-id.txt:7
#, priority:100
msgid "git-get-tar-commit-id - Extract commit ID from an archive created using git-archive"
msgstr "git-get-tar-commit-id - Extrai o ID do commit de um arquivo criado utilizando o comando git-archive"

#. type: Plain text
#: en/git-get-tar-commit-id.txt:13
#, no-wrap, priority:100
msgid "'git get-tar-commit-id'\n"
msgstr "'git get-tar-commit-id'\n"

#. type: Plain text
#: en/git-get-tar-commit-id.txt:22
#, priority:100
msgid "Read a tar archive created by 'git archive' from the standard input and extract the commit ID stored in it.  It reads only the first 1024 bytes of input, thus its runtime is not influenced by the size of the tar archive very much."
msgstr "Leia um arquivo tar criado pelo comando 'git archive' a partir da entrada padrão e extraia o ID do commit armazenado nele.  Ele lê apenas os primeiros 1024 bytes da entrada, portanto, o seu tempo de execução não é influenciado pelo tamanho do arquivo tar."

#. type: Plain text
#: en/git-get-tar-commit-id.txt:27
#, priority:100
msgid "If no commit ID is found, 'git get-tar-commit-id' quietly exists with a return code of 1.  This can happen if the archive had not been created using 'git archive' or if the first parameter of 'git archive' had been a tree ID instead of a commit ID or tag."
msgstr "Caso nenhum ID do commit seja encontrado, o 'git get-tar-commit-id' encerra silenciosamente com um código de retorno 1.  Isso pode acontecer caso o arquivo não tenha sido criado utilizando o comando 'git archive' ou se o primeiro parâmetro do 'git archive' tenha sido um ID da árvore em vez de um ID ou tag do commit."

#. type: Title =
#: en/git-grep.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-grep(1)"
msgstr "git-grep(1)"

#. type: Plain text
#: en/git-grep.txt:7
#, priority:100
msgid "git-grep - Print lines matching a pattern"
msgstr "git-grep - Imprima linhas que coincidam com um padrão"

#. type: Plain text
#: en/git-grep.txt:33
#, fuzzy, ignore-ellipsis, no-wrap, priority:100
#| msgid ""
#| "'git grep' [-a | --text] [-I] [--textconv] [-i | --ignore-case] [-w | --word-regexp]\n"
#| "\t   [-v | --invert-match] [-h|-H] [--full-name]\n"
#| "\t   [-E | --extended-regexp] [-G | --basic-regexp]\n"
#| "\t   [-P | --perl-regexp]\n"
#| "\t   [-F | --fixed-strings] [-n | --line-number] [--column]\n"
#| "\t   [-l | --files-with-matches] [-L | --files-without-match]\n"
#| "\t   [(-O | --open-files-in-pager) [<pager>]]\n"
#| "\t   [-z | --null]\n"
#| "\t   [ -o | --only-matching ] [-c | --count] [--all-match] [-q | --quiet]\n"
#| "\t   [--max-depth <depth>] [--[no-]recursive]\n"
#| "\t   [--color[=<when>] | --no-color]\n"
#| "\t   [--break] [--heading] [-p | --show-function]\n"
#| "\t   [-A <post-context>] [-B <pre-context>] [-C <context>]\n"
#| "\t   [-W | --function-context]\n"
#| "\t   [--threads <num>]\n"
#| "\t   [-f <file>] [-e] <pattern>\n"
#| "\t   [--and|--or|--not|(|)|-e <pattern>...]\n"
#| "\t   [--recurse-submodules] [--parent-basename <basename>]\n"
#| "\t   [ [--[no-]exclude-standard] [--cached | --no-index | --untracked] | <tree>...]\n"
#| "\t   [--] [<pathspec>...]\n"
msgid ""
"'git grep' [-a | --text] [-I] [--textconv] [-i | --ignore-case] [-w | --word-regexp]\n"
"\t   [-v | --invert-match] [-h|-H] [--full-name]\n"
"\t   [-E | --extended-regexp] [-G | --basic-regexp]\n"
"\t   [-P | --perl-regexp]\n"
"\t   [-F | --fixed-strings] [-n | --line-number] [--column]\n"
"\t   [-l | --files-with-matches] [-L | --files-without-match]\n"
"\t   [(-O | --open-files-in-pager) [<pager>]]\n"
"\t   [-z | --null]\n"
"\t   [ -o | --only-matching ] [-c | --count] [--all-match] [-q | --quiet]\n"
"\t   [--max-depth <depth>] [--[no-]recursive]\n"
"\t   [--color[=<when>] | --no-color]\n"
"\t   [--break] [--heading] [-p | --show-function]\n"
"\t   [-A <post-context>] [-B <pre-context>] [-C <context>]\n"
"\t   [-W | --function-context]\n"
"\t   [(-m | --max-count) <num>]\n"
"\t   [--threads <num>]\n"
"\t   [-f <file>] [-e] <pattern>\n"
"\t   [--and|--or|--not|(|)|-e <pattern>...]\n"
"\t   [--recurse-submodules] [--parent-basename <basename>]\n"
"\t   [ [--[no-]exclude-standard] [--cached | --no-index | --untracked] | <tree>...]\n"
"\t   [--] [<pathspec>...]\n"
msgstr ""
"'git grep' [-a | --text] [-I] [--textconv] [-i | --ignore-case] [-w | --word-regexp]\n"
"\t   [-v | --invert-match] [-h|-H] [--full-name]\n"
"\t   [-E | --extended-regexp] [-G | --basic-regexp]\n"
"\t   [-P | --perl-regexp]\n"
"\t   [-F | --fixed-strings] [-n | --line-number] [--column]\n"
"\t   [-l | --files-with-matches] [-L | --files-without-match]\n"
"\t   [(-O | --open-files-in-pager) [<pager>]]\n"
"\t   [-z | --null]\n"
"\t   [ -o | --only-matching ] [-c | --count] [--all-match] [-q | --quiet]\n"
"\t   [--max-depth <profundidade>] [--[no-]recursive]\n"
"\t   [--color[=<quando>] | --no-color]\n"
"\t   [--break] [--heading] [-p | --show-function]\n"
"\t   [-A <post-context>] [-B <pre-context>] [-C <context>]\n"
"\t   [-W | --function-context]\n"
"\t   [--threads <num>]\n"
"\t   [-f <arquivo>] [-e] <padrão>\n"
"\t   [--and|--or|--not|(|)|-e <padrão>...]\n"
"\t   [--recurse-submodules] [--parent-basename <basename>]\n"
"\t   [ [--[no-]exclude-standard] [--cached | --no-index | --untracked] | <árvore>...]\n"
"\t   [--] [<pathspec>...]\n"

#. type: Plain text
#: en/git-grep.txt:40
#, priority:100
msgid "Look for specified patterns in the tracked files in the work tree, blobs registered in the index file, or blobs in given tree objects.  Patterns are lists of one or more search expressions separated by newline characters.  An empty string as search expression matches all lines."
msgstr "Procure por padrões especificados nos arquivos rastreados da árvore de trabalho, bolhas registradas no arquivo do índice ou nas bolhas de determinados objetos da árvore.  Os padrões são listas de uma ou mais expressões de pesquisa separadas por caracteres de nova linha.  Uma cadeia de caracteres vazia utilizada como uma expressão de pesquisa coincide com todas as linhas."

#. type: Plain text
#: en/git-grep.txt:47
#, priority:100
msgid "Instead of searching tracked files in the working tree, search blobs registered in the index file."
msgstr "Em vez de procurar por arquivos rastreados na árvore de trabalho, pesquisar por bolhas registradas no índice do arquivo."

#. type: Plain text
#: en/git-grep.txt:50
#, priority:100
msgid "Search files in the current directory that is not managed by Git."
msgstr "Localize os arquivos no diretório atual que não sejam gerenciados pelo Git."

#. type: Labeled list
#: en/git-grep.txt:51
#, ignore-same, no-wrap, priority:100
msgid "--untracked"
msgstr "--untracked"

#. type: Plain text
#: en/git-grep.txt:54
#, priority:100
msgid "In addition to searching in the tracked files in the working tree, search also in untracked files."
msgstr "Além de localizar nos arquivos rastreados da árvore de trabalho, localize também nos arquivos não rastreados."

#. type: Labeled list
#: en/git-grep.txt:55
#, ignore-same, no-wrap, priority:100
msgid "--no-exclude-standard"
msgstr "--no-exclude-standard"

#. type: Plain text
#: en/git-grep.txt:58
#, priority:100
msgid "Also search in ignored files by not honoring the `.gitignore` mechanism. Only useful with `--untracked`."
msgstr "Localize também nos arquivos ignorados, ignorando o mecanismo `.gitignore`. Útil apenas com a opção `--untracked`."

#. type: Labeled list
#: en/git-grep.txt:59 en/git-ls-files.txt:105
#, ignore-same, no-wrap, priority:100
msgid "--exclude-standard"
msgstr "--exclude-standard"

#. type: Plain text
#: en/git-grep.txt:63
#, priority:100
msgid "Do not pay attention to ignored files specified via the `.gitignore` mechanism.  Only useful when searching files in the current directory with `--no-index`."
msgstr "Não preste atenção aos arquivos informados que foram ignorados através do mecanismo `.gitignore`.  Útil apenas ao pesquisar por arquivos no diretório atual sem a opção `--no-index'."

#. type: Plain text
#: en/git-grep.txt:70
#, priority:100
msgid "Recursively search in each submodule that is active and checked out in the repository.  When used in combination with the <tree> option the prefix of all submodule output will be the name of the parent project's <tree> object. This option has no effect if `--no-index` is given."
msgstr "Pesquise recursivamente em cada submódulo ativo e averiguado no repositório.  Quando utilizado em combinação com a opção `<tree>`, todo o prefixo gerado do submódulo será o nome do objeto `<tree>` na origem do projeto. Esta opção não tem qualquer efeito caso `--no-index` seja utilizado."

#. type: Plain text
#: en/git-grep.txt:74
#, priority:100
msgid "Process binary files as if they were text."
msgstr "Processe os arquivos binários como se fossem texto."

#. type: Plain text
#: en/git-grep.txt:77
#, priority:100
msgid "Honor textconv filter settings."
msgstr "Honre com as configurações do filtro \"textconv\"."

#. type: Plain text
#: en/git-grep.txt:81
#, priority:100
msgid "Do not honor textconv filter settings.  This is the default."
msgstr "Não respeite as configurações do filtro 'textconv'.  Esta é a predefinição."

#. type: Plain text
#: en/git-grep.txt:86
#, priority:100
msgid "Ignore case differences between the patterns and the files."
msgstr "Ignore as diferenças entre maiúsculas e minúsculas entre os padrões e os arquivos."

#. type: Labeled list
#: en/git-grep.txt:87
#, no-wrap, priority:100
msgid "-I"
msgstr "-I"

#. type: Plain text
#: en/git-grep.txt:89
#, priority:100
msgid "Don't match the pattern in binary files."
msgstr "Não coincida padrões em arquivos binários."

#. type: Labeled list
#: en/git-grep.txt:90
#, no-wrap, priority:100
msgid "--max-depth <depth>"
msgstr "--max-depth <profundidade>"

#. type: Plain text
#: en/git-grep.txt:96
#, priority:100
msgid "For each <pathspec> given on command line, descend at most <depth> levels of directories. A value of -1 means no limit.  This option is ignored if <pathspec> contains active wildcards.  In other words if \"a*\" matches a directory named \"a*\", \"*\" is matched literally so --max-depth is still effective."
msgstr "Para cada `<pathspec>` utilizado na linha de comandos, desça a <profundidade> máxima dos níveis do diretório. Um valor de -1 significa sem limite.  Esta opção será ignorada caso <pathspec> contenha curingas ativos.  Em outras palavras, caso \"a*\" coincida com um diretório chamado \"a*\", o curinga \"*\" coincidirá literalmente para que `--max-depth` ainda seja eficaz."

#. type: Labeled list
#: en/git-grep.txt:98 en/git-submodule.txt:414
#, ignore-same, no-wrap, priority:220
msgid "--recursive"
msgstr "--recursive"

#. type: Plain text
#: en/git-grep.txt:100
#, priority:100
msgid "Same as `--max-depth=-1`; this is the default."
msgstr "O mesmo que `--max-depth=-1`; Esta é a predefinição."

#. type: Labeled list
#: en/git-grep.txt:101
#, ignore-same, no-wrap, priority:100
msgid "--no-recursive"
msgstr "--no-recursive"

#. type: Plain text
#: en/git-grep.txt:103
#, priority:100
msgid "Same as `--max-depth=0`."
msgstr "O mesmo que `--max-depth=0`."

#. type: Labeled list
#: en/git-grep.txt:105
#, ignore-same, no-wrap, priority:100
msgid "--word-regexp"
msgstr "--word-regexp"

#. type: Plain text
#: en/git-grep.txt:109
#, priority:100
msgid "Match the pattern only at word boundary (either begin at the beginning of a line, or preceded by a non-word character; end at the end of a line or followed by a non-word character)."
msgstr "Coincida com o padrão apenas no limite da palavra (inicie no início de uma linha ou preceda um caractere que não seja uma palavra; termine no final de uma linha ou seguido por um caractere que não seja uma palavra)."

#. type: Labeled list
#: en/git-grep.txt:111
#, ignore-same, no-wrap, priority:100
msgid "--invert-match"
msgstr "--invert-match"

#. type: Plain text
#: en/git-grep.txt:113
#, priority:100
msgid "Select non-matching lines."
msgstr "Selecione as linhas que não coincidam."

#. type: Plain text
#: en/git-grep.txt:121
#, priority:100
msgid "By default, the command shows the filename for each match.  `-h` option is used to suppress this output.  `-H` is there for completeness and does not do anything except it overrides `-h` given earlier on the command line."
msgstr "É predefinido que o comando exiba o nome do arquivo para cada coincidência.  A opção `-h` é utilizada para suprimir esta saída.  A opção `-H` existe para ser completo e não faz nada exceto a reposição do `-h` utilizado anteriormente na linha de comando."

#. type: Labeled list
#: en/git-grep.txt:122 en/git-ls-files.txt:151 en/git-ls-tree.txt:78
#, ignore-same, no-wrap, priority:100
msgid "--full-name"
msgstr "--full-name"

#. type: Plain text
#: en/git-grep.txt:127 en/git-ls-files.txt:156
#, priority:100
msgid "When run from a subdirectory, the command usually outputs paths relative to the current directory.  This option forces paths to be output relative to the project top directory."
msgstr "O comando geralmente gera caminhos relativos ao diretório atual ao ser executado a partir de um subdiretório.  Esta opção impõem que os caminhos saiam relativos ao topo do diretório do projeto."

#. type: Labeled list
#: en/git-grep.txt:128 en/rev-list-options.txt:87
#, no-wrap, priority:260
msgid "-E"
msgstr "-E"

#. type: Labeled list
#: en/git-grep.txt:129 en/rev-list-options.txt:88
#, ignore-same, no-wrap, priority:260
msgid "--extended-regexp"
msgstr "--extended-regexp"

#. type: Labeled list
#: en/git-grep.txt:130
#, no-wrap, priority:100
msgid "-G"
msgstr "-G"

#. type: Labeled list
#: en/git-grep.txt:131 en/rev-list-options.txt:83
#, ignore-same, no-wrap, priority:260
msgid "--basic-regexp"
msgstr "--basic-regexp"

#. type: Plain text
#: en/git-grep.txt:134
#, priority:100
msgid "Use POSIX extended/basic regexp for patterns.  Default is to use basic regexp."
msgstr "Para os padrões, utilize uma expressão regular (regexp) POSIX estendido/básico.  A predefinição é utilizar uma expressão regular (regexp) básica."

#. type: Labeled list
#: en/git-grep.txt:136 en/rev-list-options.txt:98
#, ignore-same, no-wrap, priority:260
msgid "--perl-regexp"
msgstr "--perl-regexp"

#. type: Plain text
#: en/git-grep.txt:138
#, priority:100
msgid "Use Perl-compatible regular expressions for patterns."
msgstr "Para os padrões, utilize expressões regulares compatíveis com o Perl."

#. type: Plain text
#: en/git-grep.txt:142 en/rev-list-options.txt:105
#, priority:260
msgid "Support for these types of regular expressions is an optional compile-time dependency. If Git wasn't compiled with support for them providing this option will cause it to die."
msgstr "A compatibilidade para estes tipos de expressões regulares é uma dependência opcional no momento da compilação. Caso o Git não tenha sido compilado com este suporte, o Git será encerrado caso esta opção seja utilizada."

#. type: Labeled list
#: en/git-grep.txt:143 en/git-repack.txt:85 en/rev-list-options.txt:92
#, no-wrap, priority:260
msgid "-F"
msgstr "-F"

#. type: Labeled list
#: en/git-grep.txt:144 en/rev-list-options.txt:93
#, ignore-same, no-wrap, priority:260
msgid "--fixed-strings"
msgstr "--fixed-strings"

#. type: Plain text
#: en/git-grep.txt:147
#, priority:100
msgid "Use fixed strings for patterns (don't interpret pattern as a regex)."
msgstr "Utilize uma cadeia de caracteres fixos para os padrões (não interprete o padrão como uma expressão regular \"regex\")."

#. type: Labeled list
#: en/git-grep.txt:149
#, ignore-same, no-wrap, priority:100
msgid "--line-number"
msgstr "--line-number"

#. type: Plain text
#: en/git-grep.txt:151
#, priority:100
msgid "Prefix the line number to matching lines."
msgstr "Prefixe o número da linha às linhas coincidentes."

#. type: Labeled list
#: en/git-grep.txt:152
#, ignore-same, no-wrap, priority:100
msgid "--column"
msgstr "--column"

#. type: Plain text
#: en/git-grep.txt:155
#, priority:100
msgid "Prefix the 1-indexed byte-offset of the first match from the start of the matching line."
msgstr "Prefixe o deslocamento do byte (byte-offset) indexado em 1 da primeira coincidência desde o início da linha coincidente."

#. type: Labeled list
#: en/git-grep.txt:157
#, ignore-same, no-wrap, priority:100
msgid "--files-with-matches"
msgstr "--files-with-matches"

#. type: Labeled list
#: en/git-grep.txt:159
#, no-wrap, priority:100
msgid "-L"
msgstr "-L"

#. type: Labeled list
#: en/git-grep.txt:160
#, ignore-same, no-wrap, priority:100
msgid "--files-without-match"
msgstr "--files-without-match"

#. type: Plain text
#: en/git-grep.txt:165
#, priority:100
msgid "Instead of showing every matched line, show only the names of files that contain (or do not contain) matches.  For better compatibility with 'git diff', `--name-only` is a synonym for `--files-with-matches`."
msgstr "Em vez de exibir todas as linhas coincidentes, exiba apenas os nomes dos arquivos que contenha (ou não) as coincidências.  Para uma melhor compatibilidade com o comando 'git diff', a opção `--name-only` é um sinônimo de `--files-with-matches`."

#. type: Labeled list
#: en/git-grep.txt:166
#, no-wrap, priority:100
msgid "-O[<pager>]"
msgstr "-O[<pager>]"

#. type: Labeled list
#: en/git-grep.txt:167
#, no-wrap, priority:100
msgid "--open-files-in-pager[=<pager>]"
msgstr "--open-files-in-pager[=<pager>]"

#. type: Plain text
#: en/git-grep.txt:175
#, priority:100
msgid "Open the matching files in the pager (not the output of 'grep').  If the pager happens to be \"less\" or \"vi\", and the user specified only one pattern, the first file is positioned at the first match automatically. The `pager` argument is optional; if specified, it must be stuck to the option without a space. If `pager` is unspecified, the default pager will be used (see `core.pager` in linkgit:git-config[1])."
msgstr "Abra os arquivos coincidentes no pager (não a saída do 'grep').  Caso o pager seja \"less\" (menor) ou \"vi\" e o usuário usar apenas um padrão, o primeiro arquivo será posicionado na primeira coincidência de forma automática. O argumento `pager` é opcional; se utilizado, deverá estar preso à opção sem um espaço. Caso `pager` não seja utilizado, a predefinição do pager será utilizado (consulte `core.pager` no linkgit:git-config[1])."

#. type: Plain text
#: en/git-grep.txt:182
#, priority:100
msgid "Use \\0 as the delimiter for pathnames in the output, and print them verbatim. Without this option, pathnames with \"unusual\" characters are quoted as explained for the configuration variable core.quotePath (see linkgit:git-config[1])."
msgstr "Use '\\0' como um delimitador para os nomes do caminho na saída, e as imprima literalmente. Sem esta opção, os nomes do caminho com caracteres \"incomuns\" são citados como explicado na variável de configuração `core.quotePath` (consulte linkgit:git-config[1])."

#. type: Labeled list
#: en/git-grep.txt:184
#, ignore-same, no-wrap, priority:100
msgid "--only-matching"
msgstr "--only-matching"

#. type: Plain text
#: en/git-grep.txt:187
#, priority:100
msgid "Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line."
msgstr "Imprima apenas as partes que coincidam (não vazias) de uma linha coincidente com cada uma dessas partes numa linha separada na saída."

#. type: Labeled list
#: en/git-grep.txt:189 en/rev-list-options.txt:1179
#, ignore-same, no-wrap, priority:260
msgid "--count"
msgstr "--count"

#. type: Plain text
#: en/git-grep.txt:192
#, priority:100
msgid "Instead of showing every matched line, show the number of lines that match."
msgstr "Em vez de exibir todas as linhas coincidentes, exiba a quantidade de linhas coincidentes."

#. type: Plain text
#: en/git-grep.txt:196
#, priority:100
msgid "Show colored matches.  The value must be always (the default), never, or auto."
msgstr "Exibir as coincidências em cores.  Always (sempre) é o valor predefinido, as outras opções são \"never\" ou \"auto\"."

#. type: Plain text
#: en/git-grep.txt:201
#, priority:100
msgid "Turn off match highlighting, even when the configuration file gives the default to color output.  Same as `--color=never`."
msgstr "Desative o destacamento das coincidências, mesmo quando o arquivo da configuração fornecer a predefinição para a saída colorida.  O mesmo que `--color=never`."

#. type: Labeled list
#: en/git-grep.txt:202
#, ignore-same, no-wrap, priority:100
msgid "--break"
msgstr "--break"

#. type: Plain text
#: en/git-grep.txt:204
#, priority:100
msgid "Print an empty line between matches from different files."
msgstr "Imprima uma linha vazia entre as coincidências dos diferentes arquivos."

#. type: Labeled list
#: en/git-grep.txt:205
#, ignore-same, no-wrap, priority:100
msgid "--heading"
msgstr "--heading"

#. type: Plain text
#: en/git-grep.txt:208
#, priority:100
msgid "Show the filename above the matches in that file instead of at the start of each shown line."
msgstr "Exiba o nome do arquivo acima das coincidências nesse arquivo em vez de exibir no início de cada linha."

#. type: Labeled list
#: en/git-grep.txt:210
#, ignore-same, no-wrap, priority:100
msgid "--show-function"
msgstr "--show-function"

#. type: Plain text
#: en/git-grep.txt:216
#, priority:100
msgid "Show the preceding line that contains the function name of the match, unless the matching line is a function name itself.  The name is determined in the same way as `git diff` works out patch hunk headers (see 'Defining a custom hunk-header' in linkgit:gitattributes[5])."
msgstr "Exibe a linha anterior que contenha o nome da função da coincidência, a menos que a linha correspondente seja o próprio nome da função.  O nome é determinado da mesma maneira que o `git diff` lida com os pedaços dos cabeçalhos do patch (consulte 'Definindo um cabeçalho personalizado do hunk' em linkgit:gitattributes[5])."

#. type: Labeled list
#: en/git-grep.txt:217
#, no-wrap, priority:100
msgid "-<num>"
msgstr "-<num>"

#. type: Labeled list
#: en/git-grep.txt:218
#, no-wrap, priority:100
msgid "-C <num>"
msgstr "-C <num>"

#. type: Labeled list
#: en/git-grep.txt:219
#, no-wrap, priority:100
msgid "--context <num>"
msgstr "--context <num>"

#. type: Plain text
#: en/git-grep.txt:222
#, priority:100
msgid "Show <num> leading and trailing lines, and place a line containing `--` between contiguous groups of matches."
msgstr "Exiba um `<num>` (quantidade) de linhas iniciais e finais, coloque uma linha contendo `--` entre os grupos contínuos coincidentes."

#. type: Labeled list
#: en/git-grep.txt:223
#, no-wrap, priority:100
msgid "-A <num>"
msgstr "-A <num>"

#. type: Labeled list
#: en/git-grep.txt:224
#, no-wrap, priority:100
msgid "--after-context <num>"
msgstr "--after-context <num>"

#. type: Plain text
#: en/git-grep.txt:227
#, priority:100
msgid "Show <num> trailing lines, and place a line containing `--` between contiguous groups of matches."
msgstr "Exibe `<num>` (quantidade) de linhas finais e coloque uma linha contendo `--` entre os grupos contínuos coincidentes."

#. type: Labeled list
#: en/git-grep.txt:228
#, no-wrap, priority:100
msgid "-B <num>"
msgstr "-B <num>"

#. type: Labeled list
#: en/git-grep.txt:229
#, no-wrap, priority:100
msgid "--before-context <num>"
msgstr "--before-context <num>"

#. type: Plain text
#: en/git-grep.txt:232
#, priority:100
msgid "Show <num> leading lines, and place a line containing `--` between contiguous groups of matches."
msgstr "Exibe `<num>` (quantidade) de linhas iniciais e coloque uma linha contendo `--` entre os grupos contínuos coincidentes."

#. type: Plain text
#: en/git-grep.txt:241
#, priority:100
msgid "Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found. The function names are determined in the same way as `git diff` works out patch hunk headers (see 'Defining a custom hunk-header' in linkgit:gitattributes[5])."
msgstr "Exibe o texto ao redor a partir da linha anterior contendo o nome da função até uma antes do nome da próxima função, exibindo de forma efetiva a função completa onde uma correspondência tenha sido encontrada. O nome da função é determinada da mesma maneira que o comando `git diff` lida com os pedaços dos cabeçalhos do patch (consulte 'Definindo um cabeçalho personalizado do hunk' em linkgit:gitattributes[5])."

#. type: Labeled list
#: en/git-grep.txt:242
#, fuzzy, no-wrap, priority:100
#| msgid "-C <num>"
msgid "-m <num>"
msgstr "-C <num>"

#. type: Labeled list
#: en/git-grep.txt:243
#, fuzzy, no-wrap, priority:100
#| msgid "--max-count=<number>"
msgid "--max-count <num>"
msgstr "--max-count=<quantidade>"

#. type: Plain text
#: en/git-grep.txt:249
#, priority:100
msgid "Limit the amount of matches per file. When using the `-v` or `--invert-match` option, the search stops after the specified number of non-matches. A value of -1 will return unlimited results (the default). A value of 0 will exit immediately with a non-zero status."
msgstr ""

#. type: Labeled list
#: en/git-grep.txt:250
#, no-wrap, priority:100
msgid "--threads <num>"
msgstr "--threads <num>"

#. type: Plain text
#: en/git-grep.txt:253
#, priority:100
msgid "Number of grep worker threads to use.  See `grep.threads` in 'CONFIGURATION' for more information."
msgstr "Quantidade de threads de trabalho \"grep\" a serem utilizados.  Para mais informações consulte `grep.threads` em 'CONFIGURAÇÃO'."

#. type: Labeled list
#: en/git-grep.txt:254
#, no-wrap, priority:100
msgid "-f <file>"
msgstr "-f <arquivo>"

#. type: Plain text
#: en/git-grep.txt:256
#, priority:100
msgid "Read patterns from <file>, one per line."
msgstr "Leia os padrões vindos de um `<arquivo>`, um por linha."

#. type: Plain text
#: en/git-grep.txt:259
#, priority:100
msgid "Passing the pattern via <file> allows for providing a search pattern containing a \\0."
msgstr "A passagem do padrão através do <arquivo> permite o provimento de um padrão de pesquisa contendo um '\\0'."

#. type: Plain text
#: en/git-grep.txt:264
#, priority:100
msgid "Not all pattern types support patterns containing \\0. Git will error out if a given pattern type can't support such a pattern. The `--perl-regexp` pattern type when compiled against the PCRE v2 backend has the widest support for these types of patterns."
msgstr "Nem todos os tipos de padrões suportam padrões contendo '\\0'. O Git irá exibir um erro caso um determinado tipo de padrão não tiver compatibilidade com ele. O tipo do padrão `--perl-regexp` quando compilado contra a estrutura do PCRE v2 tem uma compatibilidade mais ampla para esses tipos de padrões."

#. type: Plain text
#: en/git-grep.txt:269
#, priority:100
msgid "In versions of Git before 2.23.0 patterns containing \\0 would be silently considered fixed. This was never documented, there were also odd and undocumented interactions between e.g. non-ASCII patterns containing \\0 and `--ignore-case`."
msgstr "Nas versões do Git anteriores à 2.23.0, os padrões contendo '\\0' seriam silenciosamente considerados corrigidos. Isso nunca foi documentado, também houve interações ímpares e não documentadas entre, por exemplo, os padrões não ASCII contendo '\\0' e `--ignore-case`."

#. type: Plain text
#: en/git-grep.txt:273
#, priority:100
msgid "In future versions we may learn to support patterns containing \\0 for more search backends, until then we'll die when the pattern type in question doesn't support them."
msgstr "Em futuras versões, podemos aprender a oferecer suporte aos padrões contendo '\\0' para mais estruturas de pesquisa, até então morreremos quando o tipo do padrão em questão não mais os suportar."

#. type: Plain text
#: en/git-grep.txt:279
#, priority:100
msgid "The next parameter is the pattern. This option has to be used for patterns starting with `-` and should be used in scripts passing user input to grep.  Multiple patterns are combined by 'or'."
msgstr "O próximo parâmetro é o padrão. Esta opção deve ser utilizada para padrões que comecem com `-` e deve ser utilizado em scripts que passam a entrada do usuário ao \"grep\".  Os vários padrões são combinados por 'or' (ou)."

#. type: Labeled list
#: en/git-grep.txt:280
#, ignore-same, no-wrap, priority:100
msgid "--and"
msgstr "--and"

#. type: Labeled list
#: en/git-grep.txt:281
#, ignore-same, no-wrap, priority:100
msgid "--or"
msgstr "--or"

#. type: Labeled list
#: en/git-grep.txt:282 en/git-rev-parse.txt:139 en/rev-list-options.txt:151
#, ignore-same, no-wrap, priority:260
msgid "--not"
msgstr "--not"

#. type: Labeled list
#: en/git-grep.txt:283
#, ignore-ellipsis, no-wrap, priority:100
msgid "( ... )"
msgstr "( ... )"

#. type: Plain text
#: en/git-grep.txt:288
#, priority:100
msgid "Specify how multiple patterns are combined using Boolean expressions.  `--or` is the default operator.  `--and` has higher precedence than `--or`.  `-e` has to be used for all patterns."
msgstr "Determina como os vários padrões são combinados utilizando expressões booleanas.  `--or` é o operador predefinido.  `--and` tem maior precedência que `--or`.  `-e` deve ser utilizado para todos os padrões."

#. type: Labeled list
#: en/git-grep.txt:289 en/rev-list-options.txt:70
#, ignore-same, no-wrap, priority:260
msgid "--all-match"
msgstr "--all-match"

#. type: Plain text
#: en/git-grep.txt:293
#, priority:100
msgid "When giving multiple pattern expressions combined with `--or`, this flag is specified to limit the match to files that have lines to match all of them."
msgstr "Ao utilizar múltiplas expressões de padrões combinadas com `--or`, este flag é utilizado para limitar a coincidência nos arquivos que possuam linhas que coincidam com todas elas."

#. type: Plain text
#: en/git-grep.txt:298
#, priority:100
msgid "Do not output matched lines; instead, exit with status 0 when there is a match and with non-zero status when there isn't."
msgstr "Não produza linhas coincidentes; em vez disso, encerre com uma condição 0 quando houver uma coincidência e diferente de 0 quando não houver."

#. type: Labeled list
#: en/git-grep.txt:299
#, ignore-ellipsis, no-wrap, priority:100
msgid "<tree>..."
msgstr "<árvore>..."

#. type: Plain text
#: en/git-grep.txt:302
#, priority:100
msgid "Instead of searching tracked files in the working tree, search blobs in the given trees."
msgstr "Em vez de localizar os arquivos rastreados na árvore de trabalho, localize as bolhas nas árvores informadas."

#. type: Plain text
#: en/git-grep.txt:306
#, priority:100
msgid "Signals the end of options; the rest of the parameters are <pathspec> limiters."
msgstr "Sinaliza o fim das opções; o restante dos parâmetros são os limitadores do `<pathspec>`."

#. type: Plain text
#: en/git-grep.txt:310
#, priority:100
msgid "If given, limit the search to paths matching at least one pattern.  Both leading paths match and glob(7) patterns are supported."
msgstr "Se utilizado, limite a localização dos caminhos que coincidam a pelo menos um padrão.  Ambas são compatíveis, as coincidências dos caminhos principais e os padrões bolha(7)."

#. type: Labeled list
#: en/git-grep.txt:317
#, no-wrap, priority:100
msgid "`git grep 'time_t' -- '*.[ch]'`"
msgstr "`git grep 'time_t' -- '*.[ch]'`"

#. type: Plain text
#: en/git-grep.txt:320
#, priority:100
msgid "Looks for `time_t` in all tracked .c and .h files in the working directory and its subdirectories."
msgstr "Procura por `time_t` em todos os arquivos rastreados .c e .h no diretório de trabalho e em seus subdiretórios."

#. type: Labeled list
#: en/git-grep.txt:321
#, no-wrap, priority:100
msgid "`git grep -e '#define' --and \\( -e MAX_PATH -e PATH_MAX \\)`"
msgstr "`git grep -e '#define' --and \\( -e MAX_PATH -e PATH_MAX \\)`"

#. type: Plain text
#: en/git-grep.txt:324
#, priority:100
msgid "Looks for a line that has `#define` and either `MAX_PATH` or `PATH_MAX`."
msgstr "Procura por uma linha que contenha `#define` e até mesmo `MAX_PATH` ou `PATH_MAX`."

#. type: Labeled list
#: en/git-grep.txt:325
#, no-wrap, priority:100
msgid "`git grep --all-match -e NODE -e Unexpected`"
msgstr "`git grep --all-match -e NODE -e Unexpected`"

#. type: Plain text
#: en/git-grep.txt:328
#, priority:100
msgid "Looks for a line that has `NODE` or `Unexpected` in files that have lines that match both."
msgstr "Procura por uma linha que tenha `NODE` ou `Unexpected` nos arquivos que tenham linhas que coincidam com ambas."

#. type: Labeled list
#: en/git-grep.txt:329
#, no-wrap, priority:100
msgid "`git grep solution -- :^Documentation`"
msgstr "`git grep solução -- :^Documentação`"

#. type: Plain text
#: en/git-grep.txt:331
#, priority:100
msgid "Looks for `solution`, excluding files in `Documentation`."
msgstr "Procura por `solução`, excluindo os arquivos em `Documentação`."

#. type: Title -
#: en/git-grep.txt:333
#, no-wrap, priority:100
msgid "NOTES ON THREADS"
msgstr "NOTAS SOBRE OS ENCADEAMENTOS"

#. type: Plain text
#: en/git-grep.txt:337
#, priority:100
msgid "The `--threads` option (and the grep.threads configuration) will be ignored when `--open-files-in-pager` is used, forcing a single-threaded execution."
msgstr "A opção `--threads` (e a configuração 'grep.threads') serão ignoradas quando a opção `--open-files-in-pager` for utilizado, impondo uma execução com thread único."

#. type: Plain text
#: en/git-grep.txt:342
#, priority:100
msgid "When grepping the object store (with `--cached` or giving tree objects), running with multiple threads might perform slower than single threaded if `--textconv` is given and there're too many text conversions. So if you experience low performance in this case, it might be desirable to use `--threads=1`."
msgstr "Ao fazer um 'grep' em um objeto armazenado (com a opção `--cached` ou oferecendo três objetos), a execução com várias threads poderá ser mais lenta do que uma thread única caso `--textconv` seja informado e haja muitas conversões de texto. Portanto, caso esteja com baixo desempenho, pode ser desejável utilizar `--threads=1`."

#. type: Title =
#: en/git-gui.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-gui(1)"
msgstr "git-gui(1)"

#. type: Plain text
#: en/git-gui.txt:7
#, priority:100
msgid "git-gui - A portable graphical interface to Git"
msgstr "git-gui - Uma interface gráfica portátil para o Git"

#. type: Plain text
#: en/git-gui.txt:12
#, no-wrap, priority:100
msgid "'git gui' [<command>] [<arguments>]\n"
msgstr "'git gui' [<comando>] [<argumentos>]\n"

#. type: Plain text
#: en/git-gui.txt:19
#, priority:100
msgid "A Tcl/Tk based graphical user interface to Git.  'git gui' focuses on allowing users to make changes to their repository by making new commits, amending existing ones, creating branches, performing local merges, and fetching/pushing to remote repositories."
msgstr "Uma interface gráfica baseada em Tcl / Tk para o Git.  O 'git gui' se concentra em permitir que os usuários façam alterações no seu repositório fazendo novos commit, melhorando os já existentes, criando ramificações, realizando mesclagens locais e buscando/impulsionando para os repositórios remotos."

#. type: Plain text
#: en/git-gui.txt:24
#, priority:100
msgid "Unlike 'gitk', 'git gui' focuses on commit generation and single file annotation and does not show project history.  It does however supply menu actions to start a 'gitk' session from within 'git gui'."
msgstr "Diferentemente do 'gitk', o comando 'git gui' se concentra na geração do commit e na anotação única do arquivo e não exibe o histórico do projeto.  No entanto, ele fornece as ações do menu para iniciar uma sessão 'gitk' a partir do comando 'git gui'."

#. type: Plain text
#: en/git-gui.txt:29
#, priority:100
msgid "'git gui' is known to work on all popular UNIX systems, Mac OS X, and Windows (under both Cygwin and MSYS).  To the extent possible OS specific user interface guidelines are followed, making 'git gui' a fairly native interface for users."
msgstr "Sabe-se que o 'git gui' funciona em todos os sistemas UNIX populares, no Mac OS X e no Windows (tanto no Cygwin quanto no MSYS).  Na medida do possível, são seguidas as diretrizes específicas do Sistema Operacional quanto a interface do usuário, tornando o comando 'git gui' como uma interface bastante nativa para os usuários."

#. type: Title -
#: en/git-gui.txt:31 en/git-p4.txt:63 en/git-remote.txt:44 en/git-rerere.txt:32 en/git-shell.txt:25 en/git-stash.txt:48 en/git-submodule.txt:33 en/git-svn.txt:29 en/git-worktree.txt:64
#, no-wrap, priority:240
msgid "COMMANDS"
msgstr "COMANDOS"

#. type: Labeled list
#: en/git-gui.txt:32
#, no-wrap, priority:100
msgid "blame"
msgstr "culpa"

#. type: Plain text
#: en/git-gui.txt:35
#, priority:100
msgid "Start a blame viewer on the specified file on the given version (or working directory if not specified)."
msgstr "Inicie um visualizador \"blame\" em determinado arquivo na versão informada (ou no diretório de trabalho, caso não seja informado)."

#. type: Labeled list
#: en/git-gui.txt:36
#, no-wrap, priority:100
msgid "browser"
msgstr "browser"

#. type: Plain text
#: en/git-gui.txt:40
#, priority:100
msgid "Start a tree browser showing all files in the specified commit.  Files selected through the browser are opened in the blame viewer."
msgstr "Inicie a navegação na árvore exibindo todos os arquivos no commit especificado.  Os arquivos selecionados pelo navegador são abertos no visualizador \"blame\"."

#. type: Labeled list
#: en/git-gui.txt:41
#, no-wrap, priority:100
msgid "citool"
msgstr "citool"

#. type: Plain text
#: en/git-gui.txt:46
#, priority:100
msgid "Start 'git gui' and arrange to make exactly one commit before exiting and returning to the shell.  The interface is limited to only commit actions, slightly reducing the application's startup time and simplifying the menubar."
msgstr "Inicie o 'git gui' e organize para fazer exatamente um commit antes de encerrar e retornar ao shell.  A interface é limitada a apenas as ações do commit, reduzindo um pouco o tempo da inicialização do aplicativo e simplificando a barra de menus."

#. type: Labeled list
#: en/git-gui.txt:47
#, no-wrap, priority:100
msgid "version"
msgstr "versão"

#. type: Plain text
#: en/git-gui.txt:49
#, priority:100
msgid "Display the currently running version of 'git gui'."
msgstr "Exiba a versão atual do 'git gui' em execução."

#. type: Title -
#: en/git-gui.txt:52 en/git-whatchanged.txt:29
#, no-wrap, priority:100
msgid "Examples"
msgstr "Exemplos"

#. type: Labeled list
#: en/git-gui.txt:53
#, no-wrap, priority:100
msgid "`git gui blame Makefile`"
msgstr "`git gui blame Makefile`"

#. type: Plain text
#: en/git-gui.txt:61
#, priority:100
msgid "Show the contents of the file 'Makefile' in the current working directory, and provide annotations for both the original author of each line, and who moved the line to its current location.  The uncommitted file is annotated, and uncommitted changes (if any) are explicitly attributed to 'Not Yet Committed'."
msgstr "Exibe o conteúdo do arquivo 'Makefile' no diretório de trabalho atual e fornece as anotações do autor original de cada linha, informando quem foi que moveu a linha para o seu local atual e respectivas alterações.  O arquivo que não foi feito o commit é anotado e as alterações não confirmadas (se houver) são explicitamente atribuídas a 'Ainda não confirmado'."

#. type: Labeled list
#: en/git-gui.txt:62
#, no-wrap, priority:100
msgid "`git gui blame v0.99.8 Makefile`"
msgstr "`git gui blame v0.99.8 Makefile`"

#. type: Plain text
#: en/git-gui.txt:68
#, priority:100
msgid "Show the contents of 'Makefile' in revision 'v0.99.8' and provide annotations for each line.  Unlike the above example the file is read from the object database and not the working directory."
msgstr "Exibe o conteúdo da versão do 'Makefile' na revisão 'v0.99.8' e informa as suas respectivas anotações em cada linha.  Diferente do exemplo acima, o arquivo é lido no banco de dados do objeto e não no diretório de trabalho."

#. type: Labeled list
#: en/git-gui.txt:69
#, no-wrap, priority:100
msgid "`git gui blame --line=100 Makefile`"
msgstr "`git gui blame --line=100 Makefile`"

#. type: Plain text
#: en/git-gui.txt:73
#, priority:100
msgid "Loads annotations as described above and automatically scrolls the view to center on line '100'."
msgstr "Carrega anotações conforme descrito acima e rola automaticamente a exibição para centralizar na linha de número '100'."

#. type: Labeled list
#: en/git-gui.txt:74
#, no-wrap, priority:100
msgid "`git gui citool`"
msgstr "`git gui citool`"

#. type: Plain text
#: en/git-gui.txt:79
#, priority:100
msgid "Make one commit and return to the shell when it is complete.  This command returns a non-zero exit code if the window was closed in any way other than by making a commit."
msgstr "Faça um commit e retorne ao shell quando estiver concluído.  Este comando retorna um código diferente de zero na saída caso a janela seja fechada de alguma outra maneira que não seja ao fazer um commit."

#. type: Labeled list
#: en/git-gui.txt:80
#, no-wrap, priority:100
msgid "`git gui citool --amend`"
msgstr "`git gui citool --amend`"

#. type: Plain text
#: en/git-gui.txt:84
#, priority:100
msgid "Automatically enter the 'Amend Last Commit' mode of the interface."
msgstr "Entre automaticamente no modo 'Altere o Último Commit' da interface."

#. type: Labeled list
#: en/git-gui.txt:85
#, no-wrap, priority:100
msgid "`git gui citool --nocommit`"
msgstr "`git gui citool --nocommit`"

#. type: Plain text
#: en/git-gui.txt:91
#, priority:100
msgid "Behave as normal citool, but instead of making a commit simply terminate with a zero exit code. It still checks that the index does not contain any unmerged entries, so you can use it as a GUI version of linkgit:git-mergetool[1]"
msgstr "Se comporta como o \"citool\" normal mas em vez de fazer um commit, simplesmente encerre com um código de saída igual a zero. Ele ainda verifica se o índice não contém entradas que não foram mescladas, para que você possa utilizá-lo como uma versão gráfica do linkgit:git-mergetool[1]"

#. type: Labeled list
#: en/git-gui.txt:92
#, no-wrap, priority:100
msgid "`git citool`"
msgstr "`git citool`"

#. type: Plain text
#: en/git-gui.txt:95
#, priority:100
msgid "Same as `git gui citool` (above)."
msgstr "O mesmo que `git gui citool` (acima)."

#. type: Labeled list
#: en/git-gui.txt:96
#, no-wrap, priority:100
msgid "`git gui browser maint`"
msgstr "`git gui browser maint`"

#. type: Plain text
#: en/git-gui.txt:101
#, priority:100
msgid "Show a browser for the tree of the 'maint' branch.  Files selected in the browser can be viewed with the internal blame viewer."
msgstr "Exibe um navegador para a árvore do ramo 'maint'.  Os arquivos selecionados no navegador podem ser visualizados com o visualizador interno."

#. type: Plain text
#: en/git-gui.txt:108
#, priority:100
msgid "The Git repository browser.  Shows branches, commit history and file differences.  gitk is the utility started by 'git gui''s Repository Visualize actions."
msgstr "O navegador do repositório Git.  Exibe as ramificações, o histórico do commit e a diferença dos arquivos. O gitk é o utilitário iniciado através das ações da Visualização do Repositório 'git gui'."

#. type: Title -
#: en/git-gui.txt:110
#, no-wrap, priority:100
msgid "Other"
msgstr "Outros"

#. type: Plain text
#: en/git-gui.txt:114
#, priority:100
msgid "'git gui' is actually maintained as an independent project, but stable versions are distributed as part of the Git suite for the convenience of end users."
msgstr "O 'git gui' é atualmente mantido como um projeto independente, porém as versões estáveis são distribuídas como parte do pacote Git para a conveniência dos usuários finais."

#. type: Plain text
#: en/git-gui.txt:116
#, priority:100
msgid "The official repository of the 'git gui' project can be found at:"
msgstr "O repositório oficial do projeto 'git gui' pode ser encontrado em:"

#. type: Plain text
#: en/git-gui.txt:118
#, no-wrap, priority:100
msgid "  https://github.com/prati0100/git-gui.git/\n"
msgstr "  https://github.com/prati0100/git-gui.git/\n"

#. type: Title =
#: en/git-hash-object.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-hash-object(1)"
msgstr "git-hash-object(1)"

#. type: Plain text
#: en/git-hash-object.txt:7
#, priority:80
msgid "git-hash-object - Compute object ID and optionally creates a blob from a file"
msgstr "git-hash-object - Compute a ID do objeto e opcionalmente crie uma bolha a partir de um arquivo"

#. type: Plain text
#: en/git-hash-object.txt:14
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git hash-object' [-t <type>] [-w] [--path=<file>|--no-filters] [--stdin [--literally]] [--] <file>...\n"
"'git hash-object' [-t <type>] [-w] --stdin-paths [--no-filters]\n"
msgstr ""
"'git hash-object' [-t <tipo>] [-w] [--path=<arquivo>|--no-filters] [--stdin [--literally]] [--] <arquivo>...\n"
"'git hash-object' [-t <tipo>] [-w] --stdin-paths [--no-filters]\n"

#. type: Plain text
#: en/git-hash-object.txt:22
#, priority:80
msgid "Computes the object ID value for an object with specified type with the contents of the named file (which can be outside of the work tree), and optionally writes the resulting object into the object database.  Reports its object ID to its standard output.  When <type> is not specified, it defaults to \"blob\"."
msgstr "Calcula o valor do ID do objeto para um objeto com o tipo especificado com o conteúdo do nome do arquivo (que pode estar fora da árvore de trabalho) e opcionalmente, grava o objeto gerado no banco de dados do objeto.  Informa o ID do objeto na saída padrão.  A predefinição retorna para \"blob\" quando o <tipo> não é informado."

#. type: Labeled list
#: en/git-hash-object.txt:26
#, no-wrap, priority:80
msgid "-t <type>"
msgstr "-t <tipo>"

#. type: Plain text
#: en/git-hash-object.txt:28
#, priority:80
msgid "Specify the type (default: \"blob\")."
msgstr "Especifique o tipo (Predefinição: \"blob\" (bolha))."

#. type: Plain text
#: en/git-hash-object.txt:31
#, priority:80
msgid "Actually write the object into the object database."
msgstr "Registre de fato o objeto dentro do objeto do banco de dados."

#. type: Plain text
#: en/git-hash-object.txt:34
#, priority:80
msgid "Read the object from standard input instead of from a file."
msgstr "Leia o objeto da entrada padrão em vez de um arquivo."

#. type: Labeled list
#: en/git-hash-object.txt:35
#, ignore-same, no-wrap, priority:80
msgid "--stdin-paths"
msgstr "--stdin-paths"

#. type: Plain text
#: en/git-hash-object.txt:38
#, priority:80
msgid "Read file names from the standard input, one per line, instead of from the command-line."
msgstr "Leia os nomes dos arquivos na entrada padrão, um por linha, em vez de ler da linha de comando."

#. type: Plain text
#: en/git-hash-object.txt:48
#, priority:80
msgid "Hash object as it were located at the given path. The location of file does not directly influence on the hash value, but path is used to determine what Git filters should be applied to the object before it can be placed to the object database, and, as result of applying filters, the actual blob put into the object database may differ from the given file. This option is mainly useful for hashing temporary files located outside of the working directory or files read from stdin."
msgstr "O objeto hash da maneira como ele foi encontrado no caminho informado. O local do arquivo não influencia diretamente o valor do hash, mas o caminho é utilizado para determinar quais os filtros Git que devem ser aplicados ao objeto antes de serem colocados no banco de dados do objeto, como resultado da aplicação dos filtros, a bolha real que foi colocada no banco de dados do objeto pode diferir do arquivo informado. Essa opção é útil principalmente para fazer o hash dos arquivos temporários localizados fora do diretório de trabalho ou nos arquivos lidos através do stdin."

#. type: Labeled list
#: en/git-hash-object.txt:49
#, ignore-same, no-wrap, priority:80
msgid "--no-filters"
msgstr "--no-filters"

#. type: Plain text
#: en/git-hash-object.txt:54
#, priority:80
msgid "Hash the contents as is, ignoring any input filter that would have been chosen by the attributes mechanism, including the end-of-line conversion. If the file is read from standard input then this is always implied, unless the `--path` option is given."
msgstr "Faça o hash do conteúdo da forma que estiver, ignorando qualquer filtro na entrada que teria sido selecionado pelo mecanismo dos atributos, incluindo a conversão da quebra de linha. Se o arquivo foi lido a partir da entrada padrão, isso sempre será feito de forma implícita, a menos que a opção `--path` seja utilizada."

#. type: Labeled list
#: en/git-hash-object.txt:55
#, ignore-same, no-wrap, priority:80
msgid "--literally"
msgstr "--literally"

#. type: Plain text
#: en/git-hash-object.txt:60
#, priority:80
msgid "Allow `--stdin` to hash any garbage into a loose object which might not otherwise pass standard object parsing or git-fsck checks. Useful for stress-testing Git itself or reproducing characteristics of corrupt or bogus objects encountered in the wild."
msgstr "Permita que a opção `--stdin` faça o hash de qualquer lixo num objeto solto que, de outra forma, não passaria na análise do objeto predefinido ou nas verificações do 'git-fsck'. Útil para realizar testes extensivos no Git ou reproduzir as características dos objetos corrompidos ou falsos encontrados por aí."

#. type: Title =
#: en/git-help.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-help(1)"
msgstr "git-help(1)"

#. type: Plain text
#: en/git-help.txt:7
#, priority:100
msgid "git-help - Display help information about Git"
msgstr "git-help - Exiba informações de ajuda sobre o Git"

#. type: Plain text
#: en/git-help.txt:17
#, fuzzy, no-wrap, priority:100
#| msgid ""
#| "'git help' [-a|--all] [--[no-]verbose] [--[no-]external-commands] [--[no-]aliases]\n"
#| "'git help' [[-i|--info] [-m|--man] [-w|--web]] [<command>|<guide>]\n"
#| "'git help' [-g|--guides]\n"
#| "'git help' [-c|--config]\n"
msgid ""
"'git help' [-a|--all] [--[no-]verbose] [--[no-]external-commands] [--[no-]aliases]\n"
"'git help' [[-i|--info] [-m|--man] [-w|--web]] [<command>|<doc>]\n"
"'git help' [-g|--guides]\n"
"'git help' [-c|--config]\n"
"'git help' [--user-interfaces]\n"
"'git help' [--developer-interfaces]\n"
msgstr ""
"'git help' [-a|--all] [--[no-]verbose] [--[no-]external-commands] [--[no-]aliases]\n"
"'git help' [[-i|--info] [-m|--man] [-w|--web]] [<comando>|<guia>]\n"
"'git help' [-g|--guides]\n"
"'git help' [-c|--config]\n"

#. type: Plain text
#: en/git-help.txt:24
#, fuzzy, priority:100
#| msgid "With no options and no '<command>' or '<guide>' given, the synopsis of the 'git' command and a list of the most commonly used Git commands are printed on the standard output."
msgid "With no options and no '<command>' or '<doc>' given, the synopsis of the 'git' command and a list of the most commonly used Git commands are printed on the standard output."
msgstr "Sem opções e sem informar '<comando>' ou '<guia>', serão exibidos na saída padrão um resumo do comando 'git' e uma lista dos comandos Git mais comumente utilizados."

#. type: Plain text
#: en/git-help.txt:27
#, priority:100
msgid "If the option `--all` or `-a` is given, all available commands are printed on the standard output."
msgstr "Caso a opção `--all` ou `-a` seja utilizada, todos os comandos disponíveis serão exibidos na saída padrão."

#. type: Plain text
#: en/git-help.txt:30
#, priority:100
msgid "If the option `--guides` or `-g` is given, a list of the Git concept guides is also printed on the standard output."
msgstr "Caso a opção `--guides` ou `-g` seja utilizada, uma lista do guia de conceitos do Git também será exibida na saída padrão."

#. type: Plain text
#: en/git-help.txt:35
#, fuzzy, priority:100
#| msgid "If a command, or a guide, is given, a manual page for that command or guide is brought up. The 'man' program is used by default for this purpose, but this can be overridden by other options or configuration variables."
msgid "If a command or other documentation is given, the relevant manual page will be brought up. The 'man' program is used by default for this purpose, but this can be overridden by other options or configuration variables."
msgstr "Caso um comando, ou um guia, seja utilizado, uma página do manual para esse comando ou guia será exibido. É predefinido que o programa 'man' seja utilizado para esta finalidade, porém pode ser substituído por outras opções ou variáveis de configuração."

#. type: Plain text
#: en/git-help.txt:39
#, priority:100
msgid "If an alias is given, git shows the definition of the alias on standard output. To get the manual page for the aliased command, use `git <command> --help`."
msgstr "Caso um apelido seja utilizado, o git exibe a definição do apelido na saída padrão. Para ver a página do manual para o comando ou apelido em questão, utilize `git <comando> --help`."

#. type: Plain text
#: en/git-help.txt:42
#, ignore-ellipsis, priority:100
msgid "Note that `git --help ...` is identical to `git help ...` because the former is internally converted into the latter."
msgstr "Observe que o `git --help ...` é idêntico ao `git help ...` porque o primeiro é convertido internamente para o último."

#. type: Plain text
#: en/git-help.txt:44
#, priority:100
msgid "To display the linkgit:git[1] man page, use `git help git`."
msgstr "Para exibir a página do manual linkgit:git[1], utilize o comando `git help git`."

#. type: Plain text
#: en/git-help.txt:46
#, priority:100
msgid "This page can be displayed with 'git help help' or `git help --help`"
msgstr "Esta página pode ser exibida com 'git help help' ou `git help --help`"

#. type: Plain text
#: en/git-help.txt:52
#, priority:100
msgid "Prints all the available commands on the standard output."
msgstr "Exibe uma lista de todos os comandos disponíveis na saída padrão."

#. type: Labeled list
#: en/git-help.txt:53
#, ignore-same, no-wrap, priority:100
msgid "--no-external-commands"
msgstr "--no-external-commands"

#. type: Plain text
#: en/git-help.txt:56
#, priority:100
msgid "When used with `--all`, exclude the listing of external \"git-*\" commands found in the `$PATH`."
msgstr "Quando utilizado com `--all`, exclua a listagem externa dos comandos \"git-*\" encontrados no `$PATH`."

#. type: Labeled list
#: en/git-help.txt:57
#, ignore-same, no-wrap, priority:100
msgid "--no-aliases"
msgstr "--no-aliases"

#. type: Plain text
#: en/git-help.txt:60
#, priority:100
msgid "When used with `--all`, exclude the listing of configured aliases."
msgstr "Quando utilizado com `--all`, exclua a listagem dos pseudônimos já configurados."

#. type: Plain text
#: en/git-help.txt:64
#, priority:100
msgid "When used with `--all` print description for all recognized commands. This is the default."
msgstr "Quando utilizado com a opção `--all`, imprima todas as descrições para todos os comandos que forem reconhecidos. Esta é a predefinição."

#. type: Labeled list
#: en/git-help.txt:66
#, ignore-same, no-wrap, priority:100
msgid "--config"
msgstr "--config"

#. type: Plain text
#: en/git-help.txt:69
#, priority:100
msgid "List all available configuration variables. This is a short summary of the list in linkgit:git-config[1]."
msgstr "Liste todas as variáveis de configuração disponíveis. Este é um breve resumo da lista em linkgit:git-config[1]."

#. type: Labeled list
#: en/git-help.txt:71
#, ignore-same, no-wrap, priority:100
msgid "--guides"
msgstr "--guides"

#. type: Plain text
#: en/git-help.txt:73
#, priority:100
msgid "Prints a list of the Git concept guides on the standard output."
msgstr "Exibe uma lista das guias do conceito do Git na saída padrão."

#. type: Labeled list
#: en/git-help.txt:74
#, ignore-same, no-wrap, priority:100
msgid "--user-interfaces"
msgstr "--user-interfaces"

#. type: Plain text
#: en/git-help.txt:77
#, fuzzy, priority:100
#| msgid "Prints a list of the Git concept guides on the standard output."
msgid "Prints a list of the repository, command and file interfaces documentation on the standard output."
msgstr "Exibe uma lista das guias do conceito do Git na saída padrão."

#. type: Plain text
#: en/git-help.txt:81
#, priority:100
msgid "In-repository file interfaces such as `.git/info/exclude` are documented here (see linkgit:gitrepository-layout[5]), as well as in-tree configuration such as `.mailmap` (see linkgit:gitmailmap[5])."
msgstr ""

#. type: Plain text
#: en/git-help.txt:86
#, priority:100
msgid "This section of the documentation also covers general or widespread user-interface conventions (e.g. linkgit:gitcli[7]), and pseudo-configuration such as the file-based `.git/hooks/*` interface described in linkgit:githooks[5]."
msgstr ""

#. type: Labeled list
#: en/git-help.txt:87
#, ignore-same, no-wrap, priority:100
msgid "--developer-interfaces"
msgstr "--developer-interfaces"

#. type: Plain text
#: en/git-help.txt:90
#, fuzzy, priority:100
#| msgid "Prints a list of the Git concept guides on the standard output."
msgid "Print list of file formats, protocols and other developer interfaces documentation on the standard output."
msgstr "Exibe uma lista das guias do conceito do Git na saída padrão."

#. type: Labeled list
#: en/git-help.txt:92
#, ignore-same, no-wrap, priority:100
msgid "--info"
msgstr "--info"

#. type: Plain text
#: en/git-help.txt:95
#, priority:100
msgid "Display manual page for the command in the 'info' format. The 'info' program will be used for that purpose."
msgstr "Exiba a página do manual do comando no formato 'info'. O programa 'info' será utilizado para este fim."

#. type: Labeled list
#: en/git-help.txt:97
#, ignore-same, no-wrap, priority:100
msgid "--man"
msgstr "--man"

#. type: Plain text
#: en/git-help.txt:101
#, priority:100
msgid "Display manual page for the command in the 'man' format. This option may be used to override a value set in the `help.format` configuration variable."
msgstr "Exiba a página do manual para o comando no formato 'man'. Esta opção pode ser utilizada para substituir um valor definido na variável de configuração `help.format`."

#. type: Plain text
#: en/git-help.txt:105
#, priority:100
msgid "By default the 'man' program will be used to display the manual page, but the `man.viewer` configuration variable may be used to choose other display programs (see below)."
msgstr "É predefinido que o programa 'man' será utilizado para exibir a página do manual, mas a variável de configuração `man.viewer` pode ser utilizada para configurar outros programas de exibição (veja abaixo)."

#. type: Labeled list
#: en/git-help.txt:107
#, ignore-same, no-wrap, priority:100
msgid "--web"
msgstr "--web"

#. type: Plain text
#: en/git-help.txt:110
#, priority:100
msgid "Display manual page for the command in the 'web' (HTML)  format. A web browser will be used for that purpose."
msgstr "Exiba a página do manual do comando no formato 'web' (HTML). Um navegador da web será utilizado para este fim."

#. type: Plain text
#: en/git-help.txt:116
#, priority:100
msgid "The web browser can be specified using the configuration variable `help.browser`, or `web.browser` if the former is not set. If none of these config variables is set, the 'git web{litdd}browse' helper script (called by 'git help') will pick a suitable default. See linkgit:git-web{litdd}browse[1] for more information about this."
msgstr "O navegador da web pode ser definido utilizando a variável de configuração `help.browser` ou` web.browser` se o primeiro já não esteja definido. Caso nenhuma destas configurações sejam definidas, o script de ajuda `git web{litdd}browse` (invocado através do comando `git help`) por predefinição será escolhida a melhor opção. Para obter mais informações, consulte linkgit:git-web{litdd}browse[1]."

#. type: Title -
#: en/git-help.txt:118 en/git-interpret-trailers.txt:137 en/git-p4.txt:556 en/git-web--browse.txt:59
#, no-wrap, priority:100
msgid "CONFIGURATION VARIABLES"
msgstr "VARIÁVEIS DE CONFIGURAÇÃO"

#. type: Title ~
#: en/git-help.txt:121
#, ignore-same, no-wrap, priority:100
msgid "help.format"
msgstr "help.format"

#. type: Plain text
#: en/git-help.txt:127
#, priority:100
msgid "If no command-line option is passed, the `help.format` configuration variable will be checked. The following values are supported for this variable; they make 'git help' behave as their corresponding command- line option:"
msgstr "A variável de configuração `help.format` será verificada caso nenhuma opção na linha de comando for utilizada. Os seguintes valores são compatíveis com esta variável; eles fazem com que 'git help' se comporte como a sua opção na linha de comando correspondente:"

#. type: Plain text
#: en/git-help.txt:129
#, priority:100
msgid "\"man\" corresponds to '-m|--man',"
msgstr "\"man\" correspondente a '-m|--man',"

#. type: Plain text
#: en/git-help.txt:130
#, priority:100
msgid "\"info\" corresponds to '-i|--info',"
msgstr "\"info\" correspondente a '-i|--info',"

#. type: Plain text
#: en/git-help.txt:131
#, priority:100
msgid "\"web\" or \"html\" correspond to '-w|--web'."
msgstr "\"web\" ou \"html\" correspondente a '-w|--web'."

#. type: Title ~
#: en/git-help.txt:133
#, no-wrap, priority:100
msgid "help.browser, web.browser and browser.<tool>.path"
msgstr "help.browser, web.browser e browser.<ferramenta>.path"

#. type: Plain text
#: en/git-help.txt:139
#, priority:100
msgid "The `help.browser`, `web.browser` and `browser.<tool>.path` will also be checked if the 'web' format is chosen (either by command-line option or configuration variable). See '-w|--web' in the OPTIONS section above and linkgit:git-web{litdd}browse[1]."
msgstr "O `help.browser`, `web.browser` e `browser.<ferramenta>.path` também serão averiguados caso o formato 'web' seja selecionado (seja por uma opção na linha de comando ou por uma variável de configuração). Consulte '-w|--web' na seção OPÇÕES acima e linkgit:git-web{litdd}browse[1]."

#. type: Title ~
#: en/git-help.txt:141
#, no-wrap, priority:100
msgid "man.viewer"
msgstr "man.viewer"

#. type: Plain text
#: en/git-help.txt:145
#, priority:100
msgid "The `man.viewer` configuration variable will be checked if the 'man' format is chosen. The following values are currently supported:"
msgstr "A variável de configuração `man.viewer` será verificada caso o formato 'man' seja selecionado. Os seguintes valores são compatíveis atualmente:"

#. type: Plain text
#: en/git-help.txt:147
#, priority:100
msgid "\"man\": use the 'man' program as usual,"
msgstr "O \"man\": utiliza o programa 'man' como de costume,"

#. type: Plain text
#: en/git-help.txt:149
#, priority:100
msgid "\"woman\": use 'emacsclient' to launch the \"woman\" mode in emacs (this only works starting with emacsclient versions 22),"
msgstr "o \"woman\": utiliza o 'emacsclient' para iniciar o modo \"woman\" no emacs (isso só funciona a partir das versões 22 do emacsclient),"

#. type: Plain text
#: en/git-help.txt:151
#, priority:100
msgid "\"konqueror\": use 'kfmclient' to open the man page in a new konqueror tab (see 'Note about konqueror' below)."
msgstr "o \"konqueror\": utiliza o 'kfmclient' para abrir a página do manual numa nova guia do konqueror (consulte 'Nota sobre o konqueror' abaixo)."

#. type: Plain text
#: en/git-help.txt:154
#, priority:100
msgid "Values for other tools can be used if there is a corresponding `man.<tool>.cmd` configuration entry (see below)."
msgstr "Os valores para as outras ferramentas podem ser utilizadas caso haja uma entrada de configuração correspondente `man.<ferramenta>.cmd` (veja abaixo)."

#. type: Plain text
#: en/git-help.txt:158
#, priority:100
msgid "Multiple values may be given to the `man.viewer` configuration variable. Their corresponding programs will be tried in the order listed in the configuration file."
msgstr "Vários valores que podem ser utilizados na variável de configuração `man.viewer`. Os seus programas correspondentes serão tentados na ordem listada no arquivo de configuração."

#. type: Plain text
#: en/git-help.txt:160
#, priority:100
msgid "For example, this configuration:"
msgstr "Esta configuração por exemplo:"

#. type: delimited block -
#: en/git-help.txt:165
#, no-wrap, priority:100
msgid ""
"\t[man]\n"
"\t\tviewer = konqueror\n"
"\t\tviewer = woman\n"
msgstr ""
"\t[man]\n"
"\t\tviewer = konqueror\n"
"\t\tviewer = woman\n"

#. type: Plain text
#: en/git-help.txt:169
#, priority:100
msgid "will try to use konqueror first. But this may fail (for example, if DISPLAY is not set) and in that case emacs' woman mode will be tried."
msgstr "tentará utilizar o konqueror primeiro. Mas isso pode falhar (caso a variável DISPLAY não estiver definido por exemplo) e nesse caso, será feito a tentativa no modo woman do emacs."

#. type: Plain text
#: en/git-help.txt:173
#, priority:100
msgid "If everything fails, or if no viewer is configured, the viewer specified in the `GIT_MAN_VIEWER` environment variable will be tried.  If that fails too, the 'man' program will be tried anyway."
msgstr "Caso tudo falhe, ou caso nenhum visualizador esteja configurado, será feito uma tentativa no visualizador especificado na variável de ambiente `GIT_MAN_VIEWER`.  Caso isso também falhe, o programa 'man' será testado mesmo assim."

#. type: Title ~
#: en/git-help.txt:175
#, no-wrap, priority:100
msgid "man.<tool>.path"
msgstr "man.<ferramenta>.path"

#. type: Plain text
#: en/git-help.txt:182
#, priority:100
msgid "You can explicitly provide a full path to your preferred man viewer by setting the configuration variable `man.<tool>.path`. For example, you can configure the absolute path to konqueror by setting 'man.konqueror.path'. Otherwise, 'git help' assumes the tool is available in PATH."
msgstr "Você pode informar de forma explicita um caminho completo para o seu visualizador man preferido, definindo a variável de configuração `man.<ferramenta>.path`. Por exemplo, você pode configurar o caminho absoluto para o konqueror, configurando 'man.konqueror.path'. Caso contrário, 'git help' assume que a ferramenta está disponível no seu `PATH`."

#. type: Title ~
#: en/git-help.txt:184
#, no-wrap, priority:100
msgid "man.<tool>.cmd"
msgstr "man.<ferramenta>.cmd"

#. type: Plain text
#: en/git-help.txt:192
#, priority:100
msgid "When the man viewer, specified by the `man.viewer` configuration variables, is not among the supported ones, then the corresponding `man.<tool>.cmd` configuration variable will be looked up. If this variable exists then the specified tool will be treated as a custom command and a shell eval will be used to run the command with the man page passed as arguments."
msgstr "Quando o visualizador man, definido através das variáveis de configuração `man.viewer`, não estiver entre as que são compatíveis, a variável de configuração correspondente `man.<ferramenta>.cmd` será pesquisada. Caso essa variável exista, a ferramenta informada será tratada como um comando personalizado e um shell eval será utilizado para executar o comando com a página do manual passada como argumentos."

#. type: Title ~
#: en/git-help.txt:194
#, no-wrap, priority:100
msgid "Note about konqueror"
msgstr "Uma observação sobre o konqueror"

#. type: Plain text
#: en/git-help.txt:199
#, priority:100
msgid "When 'konqueror' is specified in the `man.viewer` configuration variable, we launch 'kfmclient' to try to open the man page on an already opened konqueror in a new tab if possible."
msgstr "Quando o 'konqueror' for definido na variável de configuração `man.viewer`, iniciamos o 'kfmclient' para tentar abrir a página do manual num konqueror já aberto porém, numa nova guia, se for possível."

#. type: Plain text
#: en/git-help.txt:203
#, priority:100
msgid "For consistency, we also try such a trick if 'man.konqueror.path' is set to something like `A_PATH_TO/konqueror`. That means we will try to launch `A_PATH_TO/kfmclient` instead."
msgstr "Para uma maior consistência, também tentamos esse truque caso 'man.konqueror.path' esteja definido em algo como `UM_CAMINHO_PARA_O/konqueror`. Significa que em vez disso, tentaremos iniciar o `UM_CAMINHO_PARA_O/kfmclient`."

#. type: Plain text
#: en/git-help.txt:206 en/git-web--browse.txt:100
#, priority:100
msgid "If you really want to use 'konqueror', then you can use something like the following:"
msgstr "Caso você realmente queira utilizar usar o 'konqueror', faça o seguinte:"

#. type: delimited block -
#: en/git-help.txt:210
#, no-wrap, priority:100
msgid ""
"\t[man]\n"
"\t\tviewer = konq\n"
msgstr ""
"\t[man]\n"
"\t\tviewer = konq\n"

#. type: delimited block -
#: en/git-help.txt:213
#, no-wrap, priority:100
msgid ""
"\t[man \"konq\"]\n"
"\t\tcmd = A_PATH_TO/konqueror\n"
msgstr ""
"\t[man \"konq\"]\n"
"\t\tcmd = O_CAMINHO_PARA_O/konqueror\n"

#. type: Title ~
#: en/git-help.txt:216
#, no-wrap, priority:100
msgid "Note about git config --global"
msgstr "Observação sobre o comando `git config --global`"

#. type: Plain text
#: en/git-help.txt:220
#, priority:100
msgid "Note that all these configuration variables should probably be set using the `--global` flag, for example like this:"
msgstr "Observe que todas estas variáveis de configuração, provavelmente devem ser definidas utilizando a opção `--global`, assim por exemplo:"

#. type: delimited block -
#: en/git-help.txt:224
#, no-wrap, priority:100
msgid ""
"$ git config --global help.format web\n"
"$ git config --global web.browser firefox\n"
msgstr ""
"$ git config --global help.format web\n"
"$ git config --global web.browser firefox\n"

#. type: Plain text
#: en/git-help.txt:228 en/git-web--browse.txt:121
#, priority:100
msgid "as they are probably more user specific than repository specific.  See linkgit:git-config[1] for more information about this."
msgstr "como provavelmente são mais específicos do usuário do que do repositório.  Para mais informações, consulte linkgit:git-config[1]."

#. type: Title =
#: en/git-http-backend.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-http-backend(1)"
msgstr "git-http-backend(1)"

#. type: Plain text
#: en/git-http-backend.txt:7
#, priority:100
msgid "git-http-backend - Server side implementation of Git over HTTP"
msgstr "git-http-backend - Implementação do servidor do Git sobre HTTP"

#. type: Plain text
#: en/git-http-backend.txt:12
#, no-wrap, priority:100
msgid "'git http-backend'\n"
msgstr "'git http-backend'\n"

#. type: Plain text
#: en/git-http-backend.txt:22
#, priority:100
msgid "A simple CGI program to serve the contents of a Git repository to Git clients accessing the repository over http:// and https:// protocols.  The program supports clients fetching using both the smart HTTP protocol and the backwards-compatible dumb HTTP protocol, as well as clients pushing using the smart HTTP protocol. It also supports Git's more-efficient \"v2\" protocol if properly configured; see the discussion of `GIT_PROTOCOL` in the ENVIRONMENT section below."
msgstr "Um simples programa CGI para servir o conteúdo de um repositório Git para os clientes Git acessando o repositório nos protocolos http:// e https://.  O programa suporta a busca de clientes utilizando o protocolo HTTP inteligente e o protocolo HTTP antigo compatível com as versões anteriores, bem como os clientes impulsionando através do protocolo HTTP inteligente. Ele também é compatível com o protocolo \"v2\" mais eficiente do Git caso seja configurado corretamente; consulte o `GIT_PROTOCOL` na seção AMBIENTE abaixo."

#. type: Plain text
#: en/git-http-backend.txt:27
#, priority:100
msgid "It verifies that the directory has the magic file \"git-daemon-export-ok\", and it will refuse to export any Git directory that hasn't explicitly been marked for export this way (unless the `GIT_HTTP_EXPORT_ALL` environmental variable is set)."
msgstr "Verifica se o diretório possui o arquivo mágico \"git-daemon-export-ok\" e se recusará a exportar qualquer diretório Git que não tenha sido explicitamente marcado para exportação (a menos que a variável de ambiente `GIT_HTTP_EXPORT_ALL` esteja definida) ."

#. type: Plain text
#: en/git-http-backend.txt:33
#, priority:100
msgid "By default, only the `upload-pack` service is enabled, which serves 'git fetch-pack' and 'git ls-remote' clients, which are invoked from 'git fetch', 'git pull', and 'git clone'.  If the client is authenticated, the `receive-pack` service is enabled, which serves 'git send-pack' clients, which is invoked from 'git push'."
msgstr "É predefinido que apenas o serviço `upload-pack` esteja ativo, o que atende aos clientes 'git fetch-pack' e 'git ls-remote', que são chamados através do comando 'git fetch', 'git pull' e 'git clone' .  Caso o cliente seja autenticado, o serviço `receive-pack` é ativado, que oferece o 'git send-pack' aos clientes, que é chamado a partir do comando 'git push'."

#. type: Plain text
#: en/git-http-backend.txt:38
#, priority:100
msgid "These services can be enabled/disabled using the per-repository configuration file:"
msgstr "Estes serviços podem ser ativados/desativados usando o arquivo de configuração por repositório:"

#. type: Labeled list
#: en/git-http-backend.txt:39
#, no-wrap, priority:100
msgid "http.getanyfile"
msgstr "http.getanyfile"

#. type: Plain text
#: en/git-http-backend.txt:46
#, priority:100
msgid "This serves Git clients older than version 1.6.6 that are unable to use the upload pack service.  When enabled, clients are able to read any file within the repository, including objects that are no longer reachable from a branch but are still present.  It is enabled by default, but a repository can disable it by setting this configuration item to `false`."
msgstr "Isso atende aos clientes Git anteriores à versão 1.6.6 que não conseguem utilizar o serviço do pacote de upload.  Quando ativado, os clientes podem ler qualquer arquivo no repositório, incluindo os objetos que não são mais acessíveis a partir de um ramo, mas ainda estão presentes.  É predefinido que esteja ativo, porém um repositório pode desativá-lo definindo este item de configuração como `false`."

#. type: Labeled list
#: en/git-http-backend.txt:47
#, no-wrap, priority:100
msgid "http.uploadpack"
msgstr "http.uploadpack"

#. type: Plain text
#: en/git-http-backend.txt:51
#, priority:100
msgid "This serves 'git fetch-pack' and 'git ls-remote' clients.  It is enabled by default, but a repository can disable it by setting this configuration item to `false`."
msgstr "Isso serve aos clientes 'git fetch-pack' e 'git ls-remote'.  A predefinição é estar sempre ativo, porém um repositório pode desativá-lo ao definir este item de configuração como `false`."

#. type: Labeled list
#: en/git-http-backend.txt:52
#, no-wrap, priority:100
msgid "http.receivepack"
msgstr "http.receivepack"

#. type: Plain text
#: en/git-http-backend.txt:58
#, priority:100
msgid "This serves 'git send-pack' clients, allowing push.  It is disabled by default for anonymous users, and enabled by default for users authenticated by the web server.  It can be disabled by setting this item to `false`, or enabled for all users, including anonymous users, by setting it to `true`."
msgstr "Serve aos clientes o 'git send-pack', permitindo impulsionamento \"push\".  É predefinido que esteja inativo para os usuários anônimos e ativado para os usuários autenticados através do servidor da web.  Pode ser inativado caso este item seja definido como `false` ou ativado para todos os usuários, incluindo os usuários anônimos, caso seja definido como `true`."

#. type: Title -
#: en/git-http-backend.txt:60
#, no-wrap, priority:100
msgid "URL TRANSLATION"
msgstr "TRADUÇÃO DA URL"

#. type: Plain text
#: en/git-http-backend.txt:67
#, priority:100
msgid "To determine the location of the repository on disk, 'git http-backend' concatenates the environment variables PATH_INFO, which is set automatically by the web server, and GIT_PROJECT_ROOT, which must be set manually in the web server configuration.  If GIT_PROJECT_ROOT is not set, 'git http-backend' reads PATH_TRANSLATED, which is also set automatically by the web server."
msgstr "Para determinar a localização do repositório no disco, o comando 'git http-backend' concatena as variáveis do ambiente `PATH_INFO`, que são definidas automaticamente através do servidor web, e o `GIT_PROJECT_ROOT`, que deve ser definido manualmente na configuração do servidor da web.  Caso o `GIT_PROJECT_ROOT` não esteja definido, o comando 'git http-backend' exibirá o `PATH_TRANSLATED`, que também é definido automaticamente através do servidor web."

#. type: Plain text
#: en/git-http-backend.txt:72
#, priority:100
msgid "All of the following examples map `http://$hostname/git/foo/bar.git` to `/var/www/git/foo/bar.git`."
msgstr "Todos os exemplos a seguir mapeiam o `http://$hostname/git/foo/bar.git` para `/var/www/git/foo/bar.git`."

#. type: Labeled list
#: en/git-http-backend.txt:73
#, no-wrap, priority:100
msgid "Apache 2.x"
msgstr "Apache 2.x"

#. type: Plain text
#: en/git-http-backend.txt:77
#, priority:100
msgid "Ensure mod_cgi, mod_alias, and mod_env are enabled, set GIT_PROJECT_ROOT (or DocumentRoot) appropriately, and create a ScriptAlias to the CGI:"
msgstr "Certifique-se que o 'mod_cgi', 'mod_alias' e 'mod_env' estejam ativos, defina o `GIT_PROJECT_ROOT` (ou 'DocumentRoot') adequadamente e crie um \"ScriptAlias\" para o CGI:"

#. type: delimited block -
#: en/git-http-backend.txt:82
#, no-wrap, priority:100
msgid ""
"SetEnv GIT_PROJECT_ROOT /var/www/git\n"
"SetEnv GIT_HTTP_EXPORT_ALL\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"
msgstr ""
"SetEnv GIT_PROJECT_ROOT /var/www/git\n"
"SetEnv GIT_HTTP_EXPORT_ALL\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"

#. type: delimited block -
#: en/git-http-backend.txt:94
#, no-wrap, priority:100
msgid ""
"# This is not strictly necessary using Apache and a modern version of\n"
"# git-http-backend, as the webserver will pass along the header in the\n"
"# environment as HTTP_GIT_PROTOCOL, and http-backend will copy that into\n"
"# GIT_PROTOCOL. But you may need this line (or something similar if you\n"
"# are using a different webserver), or if you want to support older Git\n"
"# versions that did not do that copying.\n"
"#\n"
"# Having the webserver set up GIT_PROTOCOL is perfectly fine even with\n"
"# modern versions (and will take precedence over HTTP_GIT_PROTOCOL,\n"
"# which means it can be used to override the client's request).\n"
"SetEnvIf Git-Protocol \".*\" GIT_PROTOCOL=$0\n"
msgstr ""
"# Isso não é estritamente necessário ao usar o apache e uma versão moderna do\n"
"# git-http-backend, como o servidor web vai passar através do cabeçalho no\n"
"# ambiente como HTTP_GIT_PROTOCOL e o http-backend vai copiar isso no\n"
"# GIT_PROTOCOL. Mas você pode precisar desta linha (ou algo semelhante caso\n"
"# esteja usando um servidor web diferente) ou caso queira que seja compatível com um\n"
"# git mais antigo que não fizeram essa cópia.\n"
"#\n"
"# Ter o servidor web configurado GIT_PROTOCOL é suficiente mesmo com\n"
"# versões mais modernas (que terá precedência sobre o HTTP_GIT_PROTOCOL,\n"
"# o que significa que pode ser usado para substituir o pedido do cliente).\n"
"SetEnvIf Git-Protocol \".*\" GIT_PROTOCOL=$0\n"

#. type: Plain text
#: en/git-http-backend.txt:100
#, priority:100
msgid "To enable anonymous read access but authenticated write access, require authorization for both the initial ref advertisement (which we detect as a push via the service parameter in the query string), and the receive-pack invocation itself:"
msgstr "Para habilitar o acesso de leitura anônima, porém com acesso de gravação autenticado, exija a autorização para o anúncio da \"ref\" inicial (que detectamos como um \"push\" por meio do parâmetro \"service\" na cadeia de consulta) e a própria chamada do pacote de recebimento:"

#. type: delimited block -
#: en/git-http-backend.txt:105
#, no-wrap, priority:100
msgid ""
"RewriteCond %{QUERY_STRING} service=git-receive-pack [OR]\n"
"RewriteCond %{REQUEST_URI} /git-receive-pack$\n"
"RewriteRule ^/git/ - [E=AUTHREQUIRED:yes]\n"
msgstr ""
"RewriteCond %{QUERY_STRING} service=git-receive-pack [OR]\n"
"RewriteCond %{REQUEST_URI} /git-receive-pack$\n"
"RewriteRule ^/git/ - [E=AUTHREQUIRED:yes]\n"

#. type: delimited block -
#: en/git-http-backend.txt:109
#, no-wrap, priority:100
msgid ""
"<LocationMatch \"^/git/\">\n"
"\tOrder Deny,Allow\n"
"\tDeny from env=AUTHREQUIRED\n"
msgstr ""
"<LocationMatch \"^/git/\">\n"
"\tOrder Deny,Allow\n"
"\tDeny from env=AUTHREQUIRED\n"

#. type: delimited block -
#: en/git-http-backend.txt:116
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\tSatisfy Any\n"
"\t...\n"
"</LocationMatch>\n"
msgstr ""
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\tSatisfy Any\n"
"\t...\n"
"</LocationMatch>\n"

#. type: Plain text
#: en/git-http-backend.txt:121
#, priority:100
msgid "If you do not have `mod_rewrite` available to match against the query string, it is sufficient to just protect `git-receive-pack` itself, like:"
msgstr "Caso não tenha o `mod_rewrite` disponível para coincidir com o texto sob consulta é suficiente apenas para proteger o próprio `git-receive-pack`, como:"

#. type: delimited block -
#: en/git-http-backend.txt:129
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"<LocationMatch \"^/git/.*/git-receive-pack$\">\n"
"\tAuthType Basic\n"
"\tAuthName \"Git Access\"\n"
"\tRequire group committers\n"
"\t...\n"
"</LocationMatch>\n"
msgstr ""
"<LocationMatch \"^/git/.*/git-receive-pack$\">\n"
"\tAuthType Basic\n"
"\tAuthName \"Acesso Git\"\n"
"\tRequire group committers\n"
"\t...\n"
"</LocationMatch>\n"

#. type: Plain text
#: en/git-http-backend.txt:139
#, priority:100
msgid "In this mode, the server will not request authentication until the client actually starts the object negotiation phase of the push, rather than during the initial contact.  For this reason, you must also enable the `http.receivepack` config option in any repositories that should accept a push. The default behavior, if `http.receivepack` is not set, is to reject any pushes by unauthenticated users; the initial request will therefore report `403 Forbidden` to the client, without even giving an opportunity for authentication."
msgstr "Nesse modo, o servidor não solicitará uma autenticação até que o cliente realmente inicie a fase de negociação do objeto impulsionado (push) e não durante o contato inicial.  Por este motivo, você também deve ativar a opção da configuração `http.receivepack` em qualquer repositório que aceite um impulsionamento \"push\". O comportamento predefinido, caso a variável `http.receivepack` não esteja definida, é rejeitar qualquer impulsionamento \"push\" feito pelos usuários não autenticados; a solicitação inicial reportará, '403 Proibido' ao cliente, sem qualquer chance para uma autenticação."

#. type: Plain text
#: en/git-http-backend.txt:142
#, priority:100
msgid "To require authentication for both reads and writes, use a Location directive around the repository, or one of its parent directories:"
msgstr "Para exigir a autenticação para ambas as leituras e gravações, utilize uma diretiva local ao redor do repositório ou um dos seus diretórios upstream:"

#. type: delimited block -
#: en/git-http-backend.txt:150
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"<Location /git/private>\n"
"\tAuthType Basic\n"
"\tAuthName \"Private Git Access\"\n"
"\tRequire group committers\n"
"\t...\n"
"</Location>\n"
msgstr ""
"<Location /git/private>\n"
"\tAuthType Basic\n"
"\tAuthName \"Acesso Git Privado\"\n"
"\tRequire group committers\n"
"\t...\n"
"</Location>\n"

#. type: Plain text
#: en/git-http-backend.txt:155
#, priority:100
msgid "To serve gitweb at the same url, use a ScriptAliasMatch to only those URLs that 'git http-backend' can handle, and forward the rest to gitweb:"
msgstr "Para veicular o gitweb na mesma URL, utilize um 'ScriptAliasMatch' apenas para ss URLs que o 'git http-backend' pode manipular e encaminhe o restante para o gitweb:"

#. type: delimited block -
#: en/git-http-backend.txt:165
#, no-wrap, priority:100
msgid ""
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/(info/[^/]+ | \\\n"
"\t\t\t\t [0-9a-f]{2}/[0-9a-f]{38} | \\\n"
"\t\t\t\t pack/pack-[0-9a-f]{40}\\.(pack|idx)) | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"
msgstr ""
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/(info/[^/]+ | \\\n"
"\t\t\t\t [0-9a-f]{2}/[0-9a-f]{38} | \\\n"
"\t\t\t\t pack/pack-[0-9a-f]{40}\\.(pack|idx)) | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"

#. type: delimited block -
#: en/git-http-backend.txt:167
#, no-wrap, priority:100
msgid "ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"
msgstr "ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"

#. type: Plain text
#: en/git-http-backend.txt:171
#, priority:100
msgid "To serve multiple repositories from different linkgit:gitnamespaces[7] in a single repository:"
msgstr "Para servir os vários repositórios vindos de diferentes linkgit:gitnamespaces[7] num único repositório:"

#. type: delimited block -
#: en/git-http-backend.txt:175
#, no-wrap, priority:100
msgid ""
"SetEnvIf Request_URI \"^/git/([^/]*)\" GIT_NAMESPACE=$1\n"
"ScriptAliasMatch ^/git/[^/]*(.*) /usr/libexec/git-core/git-http-backend/storage.git$1\n"
msgstr ""
"SetEnvIf Request_URI \"^/git/([^/]*)\" GIT_NAMESPACE=$1\n"
"ScriptAliasMatch ^/git/[^/]*(.*) /usr/libexec/git-core/git-http-backend/storage.git$1\n"

#. type: Labeled list
#: en/git-http-backend.txt:177
#, no-wrap, priority:100
msgid "Accelerated static Apache 2.x"
msgstr "Apache estático acelerado 2.x"

#. type: Plain text
#: en/git-http-backend.txt:182
#, priority:100
msgid "Similar to the above, but Apache can be used to return static files that are stored on disk.  On many systems this may be more efficient as Apache can ask the kernel to copy the file contents from the file system directly to the network:"
msgstr "Semelhante ao anterior, porém o Apache pode ser usado para retornar arquivos estáticos armazenados no disco.  Isso pode ser mais eficiente em muitos sistemas, pois o Apache pode solicitar ao kernel que copie o conteúdo do arquivo do sistema de arquivos diretamente para a rede:"

#. type: delimited block -
#: en/git-http-backend.txt:185 en/git-http-backend.txt:195
#, no-wrap, priority:100
msgid "SetEnv GIT_PROJECT_ROOT /var/www/git\n"
msgstr "SetEnv GIT_PROJECT_ROOT /var/www/git\n"

#. type: delimited block -
#: en/git-http-backend.txt:189
#, no-wrap, priority:100
msgid ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"
msgstr ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAlias /git/ /usr/libexec/git-core/git-http-backend/\n"

#. type: Plain text
#: en/git-http-backend.txt:192
#, priority:100
msgid "This can be combined with the gitweb configuration:"
msgstr "Pode ser combinado com a configuração do gitweb:"

#. type: delimited block -
#: en/git-http-backend.txt:205
#, no-wrap, priority:100
msgid ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/info/[^/]+ | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"
"ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"
msgstr ""
"AliasMatch ^/git/(.*/objects/[0-9a-f]{2}/[0-9a-f]{38})$          /var/www/git/$1\n"
"AliasMatch ^/git/(.*/objects/pack/pack-[0-9a-f]{40}.(pack|idx))$ /var/www/git/$1\n"
"ScriptAliasMatch \\\n"
"\t\"(?x)^/git/(.*/(HEAD | \\\n"
"\t\t\tinfo/refs | \\\n"
"\t\t\tobjects/info/[^/]+ | \\\n"
"\t\t\tgit-(upload|receive)-pack))$\" \\\n"
"\t/usr/libexec/git-core/git-http-backend/$1\n"
"ScriptAlias /git/ /var/www/cgi-bin/gitweb.cgi/\n"

#. type: Labeled list
#: en/git-http-backend.txt:207
#, no-wrap, priority:100
msgid "Lighttpd"
msgstr "Lighttpd"

#. type: Plain text
#: en/git-http-backend.txt:211
#, priority:100
msgid "Ensure that `mod_cgi`, `mod_alias`, `mod_auth`, `mod_setenv` are loaded, then set `GIT_PROJECT_ROOT` appropriately and redirect all requests to the CGI:"
msgstr "Certifique-se de que `mod_cgi`, `mod_alias`, `mod_auth`, `mod_setenv` estejam carregados, então defina a variável `GIT_PROJECT_ROOT` adequadamente e redirecione todas as solicitações para o CGI:"

#. type: delimited block -
#: en/git-http-backend.txt:221
#, no-wrap, priority:100
msgid ""
"alias.url += ( \"/git\" => \"/usr/lib/git-core/git-http-backend\" )\n"
"$HTTP[\"url\"] =~ \"^/git\" {\n"
"\tcgi.assign = (\"\" => \"\")\n"
"\tsetenv.add-environment = (\n"
"\t\t\"GIT_PROJECT_ROOT\" => \"/var/www/git\",\n"
"\t\t\"GIT_HTTP_EXPORT_ALL\" => \"\"\n"
"\t)\n"
"}\n"
msgstr ""
"alias.url += ( \"/git\" => \"/usr/lib/git-core/git-http-backend\" )\n"
"$HTTP[\"url\"] =~ \"^/git\" {\n"
"\tcgi.assign = (\"\" => \"\")\n"
"\tsetenv.add-environment = (\n"
"\t\t\"GIT_PROJECT_ROOT\" => \"/var/www/git\",\n"
"\t\t\"GIT_HTTP_EXPORT_ALL\" => \"\"\n"
"\t)\n"
"}\n"

#. type: Plain text
#: en/git-http-backend.txt:224
#, priority:100
msgid "To enable anonymous read access but authenticated write access:"
msgstr "Para ativar o acesso de leitura anônima porém o acesso de gravação autenticado:"

#. type: delimited block -
#: en/git-http-backend.txt:232
#, no-wrap, priority:100
msgid ""
"$HTTP[\"querystring\"] =~ \"service=git-receive-pack\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
"$HTTP[\"url\"] =~ \"^/git/.*/git-receive-pack$\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
msgstr ""
"$HTTP[\"querystring\"] =~ \"service=git-receive-pack\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
"$HTTP[\"url\"] =~ \"^/git/.*/git-receive-pack$\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"

#. type: Plain text
#: en/git-http-backend.txt:235
#, priority:100
msgid "where `git-auth.conf` looks something like:"
msgstr "onde o `git-auth.conf` se parece com:"

#. type: delimited block -
#: en/git-http-backend.txt:245
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"auth.require = (\n"
"\t\"/\" => (\n"
"\t\t\"method\" => \"basic\",\n"
"\t\t\"realm\" => \"Git Access\",\n"
"\t\t\"require\" => \"valid-user\"\n"
"\t       )\n"
")\n"
"# ...and set up auth.backend here\n"
msgstr ""
"auth.require = (\n"
"\t\"/\" => (\n"
"\t\t\"method\" => \"basic\",\n"
"\t\t\"realm\" => \"Acesso Git\",\n"
"\t\t\"require\" => \"valid-user\"\n"
"\t       )\n"
")\n"
"# ...and set up auth.backend here\n"

#. type: Plain text
#: en/git-http-backend.txt:248
#, priority:100
msgid "To require authentication for both reads and writes:"
msgstr "Para exigir a autenticação tanto para leituras quanto para gravações:"

#. type: delimited block -
#: en/git-http-backend.txt:253
#, no-wrap, priority:100
msgid ""
"$HTTP[\"url\"] =~ \"^/git/private\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"
msgstr ""
"$HTTP[\"url\"] =~ \"^/git/private\" {\n"
"\tinclude \"git-auth.conf\"\n"
"}\n"

#. type: Plain text
#: en/git-http-backend.txt:260
#, priority:100
msgid "'git http-backend' relies upon the `CGI` environment variables set by the invoking web server, including:"
msgstr "O 'git http-backend' conta com as variáveis do ambiente `CGI` definidas pelo servidor da Web que está sendo invocado, incluindo:"

#. type: Plain text
#: en/git-http-backend.txt:262
#, priority:100
msgid "PATH_INFO (if GIT_PROJECT_ROOT is set, otherwise PATH_TRANSLATED)"
msgstr "`PATH_INFO` (caso `GIT_PROJECT_ROOT` seja definido, caso contrário utilize `PATH_TRANSLATED`)"

#. type: Plain text
#: en/git-http-backend.txt:263
#, priority:100
msgid "REMOTE_USER"
msgstr "REMOTE_USER"

#. type: Plain text
#: en/git-http-backend.txt:264
#, priority:100
msgid "REMOTE_ADDR"
msgstr "REMOTE_ADDR"

#. type: Plain text
#: en/git-http-backend.txt:265
#, priority:100
msgid "CONTENT_TYPE"
msgstr "CONTENT_TYPE"

#. type: Plain text
#: en/git-http-backend.txt:266
#, priority:100
msgid "QUERY_STRING"
msgstr "QUERY_STRING"

#. type: Plain text
#: en/git-http-backend.txt:267
#, priority:100
msgid "REQUEST_METHOD"
msgstr "REQUEST_METHOD"

#. type: Plain text
#: en/git-http-backend.txt:271
#, priority:100
msgid "The `GIT_HTTP_EXPORT_ALL` environmental variable may be passed to 'git-http-backend' to bypass the check for the \"git-daemon-export-ok\" file in each repository before allowing export of that repository."
msgstr "A variável de ambiente `GIT_HTTP_EXPORT_ALL` pode ser passada para o comando 'git-http-backend' para ignorar a verificação do arquivo \"git-daemon-export-ok\" em cada repositório antes de permitir a exportação desse repositório."

#. type: Plain text
#: en/git-http-backend.txt:280
#, priority:100
msgid "The `GIT_HTTP_MAX_REQUEST_BUFFER` environment variable (or the `http.maxRequestBuffer` config variable) may be set to change the largest ref negotiation request that git will handle during a fetch; any fetch requiring a larger buffer will not succeed.  This value should not normally need to be changed, but may be helpful if you are fetching from a repository with an extremely large number of refs.  The value can be specified with a unit (e.g., `100M` for 100 megabytes). The default is 10 megabytes."
msgstr "A variável de ambiente `GIT_HTTP_MAX_REQUEST_BUFFER` (ou a variável de configuração `http.maxRequestBuffer`) pode ser configurada para alterar a maior solicitação de negociação \"ref\" que o git será capaz de manipular durante uma busca; qualquer busca que exija um buffer maior não terá êxito.  Normalmente, esse valor não precisa ser alterado, mas pode ser útil caso você esteja buscando um repositório com uma quantidade de refs extremamente grande.  O valor pode ser definido como uma unidade (`100M` para 100 megabytes por exemplo). O valor predefinido é de 10 megabytes."

#. type: Plain text
#: en/git-http-backend.txt:290
#, priority:100
msgid "Clients may probe for optional protocol capabilities (like the v2 protocol) using the `Git-Protocol` HTTP header. In order to support these, the contents of that header must appear in the `GIT_PROTOCOL` environment variable. Most webservers will pass this header to the CGI via the `HTTP_GIT_PROTOCOL` variable, and `git-http-backend` will automatically copy that to `GIT_PROTOCOL`. However, some webservers may be more selective about which headers they'll pass, in which case they need to be configured explicitly (see the mention of `Git-Protocol` in the Apache config from the earlier EXAMPLES section)."
msgstr "Os clientes podem sondar por capacidades opcionais do protocolo (como o protocolo v2) utilizando o cabeçalho HTTP `Git-Protocol`. Para ser compatível com eles, o conteúdo desse cabeçalho deve aparecer na variável de ambiente `GIT_PROTOCOL`. A maioria dos servidores web passará esse cabeçalho para o CGI através da variável `HTTP_GIT_PROTOCOL` e o `git-http-backend` copiará automaticamente para a variável `GIT_PROTOCOL`. Entretanto, alguns servidores web podem ser mais seletivos sobre quais os cabeçalhos eles passarão, nesse caso, eles precisam ser configurados de forma explícita (veja a menção do `Git-Protocol` na configuração do Apache, a partir da seção EXEMPLOS mais recentes)."

#. type: Plain text
#: en/git-http-backend.txt:295
#, priority:100
msgid "The backend process sets GIT_COMMITTER_NAME to '$REMOTE_USER' and GIT_COMMITTER_EMAIL to '$\\{REMOTE_USER}@http.$\\{REMOTE_ADDR\\}', ensuring that any reflogs created by 'git-receive-pack' contain some identifying information of the remote user who performed the push."
msgstr "A estrutura define o `GIT_COMMITTER_NAME` como '$REMOTE_USER' e `GIT_COMMITTER_EMAIL` como '$\\{REMOTE_USER}@http.$\\{REMOTE_ADDR\\}', garantindo que quaisquer reflogs que forem criados através do comando 'git-receive-pack' contenham algumas informações de identificação do ramo remoto do usuário que executou o push."

#. type: Plain text
#: en/git-http-backend.txt:298
#, priority:100
msgid "All `CGI` environment variables are available to each of the hooks invoked by the 'git-receive-pack'."
msgstr "Todas as variáveis do ambiente `CGI` estão disponíveis para cada um dos ganchos invocados pelo comando 'git-receive-pack'."

#. type: Title =
#: en/git-http-fetch.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-http-fetch(1)"
msgstr "git-http-fetch(1)"

#. type: Plain text
#: en/git-http-fetch.txt:7
#, priority:100
msgid "git-http-fetch - Download from a remote Git repository via HTTP"
msgstr "git-http-fetch - Faça o download de um repositório Git remoto através de HTTP"

#. type: Plain text
#: en/git-http-fetch.txt:13
#, no-wrap, priority:100
msgid "'git http-fetch' [-c] [-t] [-a] [-d] [-v] [-w <filename>] [--recover] [--stdin | --packfile=<hash> | <commit>] <URL>\n"
msgstr "'git http-fetch' [-c] [-t] [-a] [-d] [-v] [-w <nome-do-arquivo>] [--recover] [--stdin | --packfile=<hash> | <commit>] <URL>\n"

#. type: Plain text
#: en/git-http-fetch.txt:17
#, priority:100
msgid "Downloads a remote Git repository via HTTP."
msgstr "Faz o download de um repositório remoto Git através do HTTP."

#. type: Plain text
#: en/git-http-fetch.txt:21
#, priority:100
msgid "This command always gets all objects. Historically, there were three options `-a`, `-c` and `-t` for choosing which objects to download. They are now silently ignored."
msgstr "Este comando sempre obtém todos os objetos. Historicamente, havia três opções `-a`, `-c` e `-t` para escolher quais os objetos baixar. Agora eles são ignorados de forma silenciosa."

#. type: Labeled list
#: en/git-http-fetch.txt:24
#, no-wrap, priority:100
msgid "commit-id"
msgstr "commit-id"

#. type: Plain text
#: en/git-http-fetch.txt:27
#, priority:100
msgid "Either the hash or the filename under [URL]/refs/ to pull."
msgstr "O hash ou o nome do arquivo em [URL]/refs/ para obter."

#. type: Labeled list
#: en/git-http-fetch.txt:28
#, no-wrap, priority:100
msgid "-a, -c, -t"
msgstr "-a, -c, -t"

#. type: Plain text
#: en/git-http-fetch.txt:30
#, priority:100
msgid "These options are ignored for historical reasons."
msgstr "Estas opções são ignoradas por razões históricas."

#. type: Plain text
#: en/git-http-fetch.txt:32
#, priority:100
msgid "Report what is downloaded."
msgstr "Relate o que foi baixado."

#. type: Labeled list
#: en/git-http-fetch.txt:33
#, no-wrap, priority:100
msgid "-w <filename>"
msgstr "-w <nome-do-arquivo>"

#. type: Plain text
#: en/git-http-fetch.txt:36
#, priority:100
msgid "Writes the commit-id into the filename under $GIT_DIR/refs/<filename> on the local end after the transfer is complete."
msgstr "Grava o ID do commit no nome do arquivo sob '$GIT_DIR/refs/<nome-do-arquivo>' no local final depois que a transferência tenha sido concluída."

#. type: Plain text
#: en/git-http-fetch.txt:40
#, priority:100
msgid "Instead of a commit id on the command line (which is not expected in this case), 'git http-fetch' expects lines on stdin in the format"
msgstr "Em vez de um ID do commit na linha de comando (o que não é esperado neste caso), 'git http-fetch' espera pelas linhas no stdin no formato"

#. type: Plain text
#: en/git-http-fetch.txt:42
#, no-wrap, priority:100
msgid "<commit-id>['\\t'<filename-as-in--w>]\n"
msgstr "<commit-id>['\\t'<nome-do-arquivo-como-em--w>]\n"

#. type: Labeled list
#: en/git-http-fetch.txt:43
#, no-wrap, priority:100
msgid "--packfile=<hash>"
msgstr "--packfile=<hash>"

#. type: Plain text
#: en/git-http-fetch.txt:51
#, priority:100
msgid "For internal use only. Instead of a commit id on the command line (which is not expected in this case), 'git http-fetch' fetches the packfile directly at the given URL and uses index-pack to generate corresponding .idx and .keep files.  The hash is used to determine the name of the temporary file and is arbitrary. The output of index-pack is printed to stdout. Requires --index-pack-args."
msgstr "Para uso interno apenas. Em vez de uma ID para o commit na linha de comando (o que não é esperado neste caso), o comando 'git http-fetch' busca o arquivo dos pacotes diretamente na URL informada e usa o pacote dos índices para gerar os arquivos .idx e .keep correspondentes. O hash é utilizado para determinar o nome do arquivo temporário e é arbitrário. O pacote dos índices que foi é impresso no stdout. Requer a opção --index-pack-args."

#. type: Labeled list
#: en/git-http-fetch.txt:52
#, no-wrap, priority:100
msgid "--index-pack-args=<args>"
msgstr "--index-pack-args=<argumentos>"

#. type: Plain text
#: en/git-http-fetch.txt:55
#, priority:100
msgid "For internal use only. The command to run on the contents of the downloaded pack. Arguments are URL-encoded separated by spaces."
msgstr "Apenas para uso interno. O comando que será executado no conteúdo do pacote que foi baixado. Os argumentos são codificados por URL separados por espaços."

#. type: Labeled list
#: en/git-http-fetch.txt:56
#, ignore-same, no-wrap, priority:100
msgid "--recover"
msgstr "--recover"

#. type: Plain text
#: en/git-http-fetch.txt:59
#, priority:100
msgid "Verify that everything reachable from target is fetched.  Used after an earlier fetch is interrupted."
msgstr "Verifique se tudo o que seja acessível a partir do destino já foi obtido.  Utilizado depois que uma busca anterior tenha sido interrompida."

#. type: Title =
#: en/git-http-push.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-http-push(1)"
msgstr "git-http-push(1)"

#. type: Plain text
#: en/git-http-push.txt:7
#, priority:100
msgid "git-http-push - Push objects over HTTP/DAV to another repository"
msgstr "git-http-push - Impulsiona os objetos por HTTP/DAV para um outro repositório"

#. type: Plain text
#: en/git-http-push.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git http-push' [--all] [--dry-run] [--force] [--verbose] <URL> <ref> [<ref>...]\n"
msgstr "'git http-push' [--all] [--dry-run] [--force] [--verbose] <URL> <ref> [<ref>...]\n"

#. type: Plain text
#: en/git-http-push.txt:18
#, priority:100
msgid "Sends missing objects to remote repository, and updates the remote branch."
msgstr "Envia os objetos ausentes para o repositório remoto e atualiza a ramificação remota."

#. type: Plain text
#: en/git-http-push.txt:22
#, no-wrap, priority:100
msgid ""
"*NOTE*: This command is temporarily disabled if your libcurl\n"
"is older than 7.16, as the combination has been reported\n"
"not to work and sometimes corrupts repository.\n"
msgstr ""
"*OBSERVAÇÃO*: Este comando está temporariamente desativado caso o seu libcurl\n"
"seja anterior a versão 7,16, pois a combinação foi relatada\n"
"para não funcionar e às vezes corrompe o repositório.\n"

#. type: Plain text
#: en/git-http-push.txt:29
#, priority:100
msgid "Do not assume that the remote repository is complete in its current state, and verify all objects in the entire local ref's history exist in the remote repository."
msgstr "Não assuma que o repositório remoto esteja completo na sua condição atual e verifique se todos os objetos em todo o histórico da referência local existem no repositório remoto."

#. type: Plain text
#: en/git-http-push.txt:36 en/git-send-pack.txt:60
#, priority:100
msgid "Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.  This flag disables the check.  What this means is that the remote repository can lose commits; use it with care."
msgstr "Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.  Esta flag desativa esta verificação.  What this means is that the remote repository can lose commits; use it with care."

#. type: Plain text
#: en/git-http-push.txt:39 en/git-push.txt:175 en/git-send-pack.txt:53
#, priority:220
msgid "Do everything except actually send the updates."
msgstr "Faça tudo, exceto realmente enviar as atualizações."

#. type: Plain text
#: en/git-http-push.txt:43
#, priority:100
msgid "Report the list of objects being walked locally and the list of objects successfully sent to the remote repository."
msgstr "Relate a lista dos objetos sendo percorridos localmente e a lista dos objetos enviados com sucesso para o repositório remoto."

#. type: Plain text
#: en/git-http-push.txt:49
#, priority:100
msgid "Remove <ref> from remote repository.  The specified branch cannot be the remote HEAD.  If -d is specified the following other conditions must also be met:"
msgstr "Remova a `<ref>` do repositório remoto.  O ramo especificado não pode ser o `HEAD` remoto.  Caso o `-d` seja utilizado, as outras condições a seguir também deverão ser atendidas:"

#. type: Plain text
#: en/git-http-push.txt:51
#, priority:100
msgid "Remote HEAD must resolve to an object that exists locally"
msgstr "O `HEAD` remoto deve resolver para um objeto que exista localmente"

#. type: Plain text
#: en/git-http-push.txt:52
#, priority:100
msgid "Specified branch resolves to an object that exists locally"
msgstr "O ramo informado resolve para um objeto que exista localmente"

#. type: Plain text
#: en/git-http-push.txt:53
#, priority:100
msgid "Specified branch is an ancestor of the remote HEAD"
msgstr "O ramo especificado é um ancestral do `HEAD` remoto"

#. type: Labeled list
#: en/git-http-push.txt:54 en/git-send-pack.txt:98
#, ignore-ellipsis, no-wrap, priority:100
msgid "<ref>..."
msgstr "<ref>..."

#. type: Plain text
#: en/git-http-push.txt:56 en/git-send-pack.txt:100
#, priority:100
msgid "The remote refs to update."
msgstr "O ramo remoto refs que serão atualizados."

#. type: Title -
#: en/git-http-push.txt:59 en/git-send-pack.txt:103
#, no-wrap, priority:100
msgid "SPECIFYING THE REFS"
msgstr "ESPECIFICANDO AS REFS"

#. type: Plain text
#: en/git-http-push.txt:65
#, priority:100
msgid "A '<ref>' specification can be either a single pattern, or a pair of such patterns separated by a colon \":\" (this means that a ref name cannot have a colon in it).  A single pattern '<name>' is just a shorthand for '<name>:<name>'."
msgstr "Uma especificação '<ref>' pode ser um padrão único ou um par desses padrões separados por dois pontos \":\" (significa que um nome \"ref\" não pode conter dois pontos).  Um único padrão '<nome>' é apenas uma abreviação para '<nome>:<nome>'."

#. type: Plain text
#: en/git-http-push.txt:70
#, priority:100
msgid "Each pattern pair '<src>:<dst>' consists of the source side (before the colon) and the destination side (after the colon).  The ref to be pushed is determined by finding a match that matches the source side, and where it is pushed is determined by using the destination side."
msgstr "Cada par de padrões '<src>:<dst>' consiste no lado da origem (antes dos dois pontos) e no lado do destino (depois dos dois pontos).  O \"ref\" a ser impulsionado é determinado ao localizar uma coincidência que corresponda com a origem, a localização da origem é determinada utilizando o lado do destino."

#. type: Plain text
#: en/git-http-push.txt:73
#, priority:100
msgid "It is an error if '<src>' does not match exactly one of the local refs."
msgstr "É um erro caso '<src>' não corresponda exatamente a um dos refs locais."

#. type: Plain text
#: en/git-http-push.txt:75
#, priority:100
msgid "If '<dst>' does not match any remote ref, either"
msgstr "Caso '<dst>' não corresponda a nenhum 'ref' remoto"

#. type: Plain text
#: en/git-http-push.txt:78 en/git-send-pack.txt:138
#, priority:100
msgid "it has to start with \"refs/\"; <dst> is used as the destination literally in this case."
msgstr "é preciso iniciar com \"refs/\"; o <dst> é utilizado literalmente como destino neste caso."

#. type: Plain text
#: en/git-http-push.txt:82 en/git-send-pack.txt:142
#, priority:100
msgid "<src> == <dst> and the ref that matched the <src> must not exist in the set of remote refs; the ref matched <src> locally is used as the name of the destination."
msgstr "<src> == <dst> e a referência que coincida com <src> não devem existir no conjunto de refs remotas; o \"ref\" que coincida com o <src> localmente é utilizado como o nome do destino."

#. type: Plain text
#: en/git-http-push.txt:88 en/git-send-pack.txt:148
#, priority:100
msgid "Without `--force`, the <src> ref is stored at the remote only if <dst> does not exist, or <dst> is a proper subset (i.e. an ancestor) of <src>.  This check, known as \"fast-forward check\", is performed in order to avoid accidentally overwriting the remote ref and lose other peoples' commits from there."
msgstr "Sem `--force`, a fonte do `<src>` \"ref\" é armazenado no ramo remoto apenas caso o destino `<dst>` não exista ou o destino `<dst>` seja um subconjunto apropriado (ou seja, um ancestral) da origem `<src>`.  Esta verificação, conhecida como \"verificação de avanço rápido\", é realizada para evitar sobrescrever acidentalmente a \"ref\" remota e perder os commits de outras pessoas a partir daí."

#. type: Plain text
#: en/git-http-push.txt:90 en/git-send-pack.txt:150
#, priority:100
msgid "With `--force`, the fast-forward check is disabled for all refs."
msgstr "Com `--force`, a verificação do avanço rápido é desativado para todas as refs."

#. type: Plain text
#: en/git-http-push.txt:93 en/git-send-pack.txt:153
#, priority:100
msgid "Optionally, a <ref> parameter can be prefixed with a plus '+' sign to disable the fast-forward check only on that ref."
msgstr "Opcionalmente, um parâmetro <ref> pode ser prefixado com um sinal de mais '+' para desativar a verificação de avanço rápido apenas nessa \"ref\"."

#. type: Title =
#: en/git-imap-send.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-imap-send(1)"
msgstr "git-imap-send(1)"

#. type: Plain text
#: en/git-imap-send.txt:7
#, priority:100
msgid "git-imap-send - Send a collection of patches from stdin to an IMAP folder"
msgstr "git-imap-send - Envia uma coleção de patches do stdin para um diretório IMAP"

#. type: Plain text
#: en/git-imap-send.txt:13
#, no-wrap, priority:100
msgid "'git imap-send' [-v] [-q] [--[no-]curl]\n"
msgstr "'git imap-send' [-v] [-q] [--[no-]curl]\n"

#. type: Plain text
#: en/git-imap-send.txt:23
#, priority:100
msgid "This command uploads a mailbox generated with 'git format-patch' into an IMAP drafts folder.  This allows patches to be sent as other email is when using mail clients that cannot read mailbox files directly. The command also works with any general mailbox in which emails have the fields \"From\", \"Date\", and \"Subject\" in that order."
msgstr "Este comando carrega uma caixa de correio gerada com 'git format-patch' num diretório de rascunhos IMAP.  Permite que os patches sejam enviados como ocorre com os outros emails ao utilizar clientes de email que não podem ler diretamente os arquivos da caixa de correio. O comando também funciona com qualquer caixa de correio geral na qual os e-mails tenham os campos \"De\", \"Data\" e \"Assunto\" nesta ordem."

#. type: Plain text
#: en/git-imap-send.txt:25
#, priority:100
msgid "Typical usage is something like:"
msgstr "A típica utilização é algo como:"

#. type: Plain text
#: en/git-imap-send.txt:27
#, priority:100
msgid "git format-patch --signoff --stdout --attach origin | git imap-send"
msgstr "git format-patch --signoff --stdout --attach origin | git imap-send"

#. type: Plain text
#: en/git-imap-send.txt:39
#, priority:100
msgid "Be quiet."
msgstr "Fique em silêncio."

#. type: Labeled list
#: en/git-imap-send.txt:40
#, ignore-same, no-wrap, priority:100
msgid "--curl"
msgstr "--curl"

#. type: Plain text
#: en/git-imap-send.txt:44
#, priority:100
msgid "Use libcurl to communicate with the IMAP server, unless tunneling into it.  Ignored if Git was built without the USE_CURL_FOR_IMAP_SEND option set."
msgstr "Utilize o libcurl para se comunicar com o servidor IMAP, a menos que faça um tunelamento para ele.  É Ignorado caso o Git tenha sido compilado sem a opção `USE_CURL_FOR_IMAP_SEND` definida."

#. type: Labeled list
#: en/git-imap-send.txt:45
#, ignore-same, no-wrap, priority:100
msgid "--no-curl"
msgstr "--no-curl"

#. type: Plain text
#: en/git-imap-send.txt:49
#, priority:100
msgid "Talk to the IMAP server using git's own IMAP routines instead of using libcurl.  Ignored if Git was built with the NO_OPENSSL option set."
msgstr "Converse com o servidor IMAP utilizando as próprias rotinas IMAP do git em vez de utilizar as da libcurl.  É Ignorado caso o Git tenha sido compilado com a opção `NO_OPENSSL` definida."

#. type: Plain text
#: en/git-imap-send.txt:56
#, priority:100
msgid "To use the tool, `imap.folder` and either `imap.tunnel` or `imap.host` must be set to appropriate values."
msgstr "Para utilizar a ferramenta, o `imap.folder` e o `imap.tunnel` ou o `imap.host` devem ser configurados com os valores apropriados."

#. type: Plain text
#: en/git-imap-send.txt:64
#, priority:100
msgid "Using tunnel mode:"
msgstr "Utilizando um modo de tunelamento:"

#. type: delimited block .
#: en/git-imap-send.txt:69
#, no-wrap, priority:100
msgid ""
"[imap]\n"
"    folder = \"INBOX.Drafts\"\n"
"    tunnel = \"ssh -q -C user@example.com /usr/bin/imapd ./Maildir 2> /dev/null\"\n"
msgstr ""
"[imap]\n"
"    folder = \"INBOX.Drafts\"\n"
"    tunnel = \"ssh -q -C user@example.com /usr/bin/imapd ./Maildir 2> /dev/null\"\n"

#. type: Plain text
#: en/git-imap-send.txt:72
#, priority:100
msgid "Using direct mode:"
msgstr "Utilizando o modo direto:"

#. type: delimited block .
#: en/git-imap-send.txt:79
#, no-wrap, priority:100
msgid ""
"[imap]\n"
"    folder = \"INBOX.Drafts\"\n"
"    host = imap://imap.example.com\n"
"    user = bob\n"
"    pass = p4ssw0rd\n"
msgstr ""
"[imap]\n"
"    folder = \"INBOX.Drafts\"\n"
"    host = imap://imap.example.com\n"
"    user = bob\n"
"    pass = p4ssw0rd\n"

#. type: Plain text
#: en/git-imap-send.txt:82
#, priority:100
msgid "Using direct mode with SSL:"
msgstr "Usando o modo direto com SSL:"

#. type: delimited block .
#: en/git-imap-send.txt:91
#, no-wrap, priority:100
msgid ""
"[imap]\n"
"    folder = \"INBOX.Drafts\"\n"
"    host = imaps://imap.example.com\n"
"    user = bob\n"
"    pass = p4ssw0rd\n"
"    port = 123\n"
"    ; sslVerify = false\n"
msgstr ""
"[imap]\n"
"    folder = \"INBOX.Drafts\"\n"
"    host = imaps://imap.example.com\n"
"    user = bob\n"
"    pass = p4ssw0rd\n"
"    port = 123\n"
"    ; sslVerify = false\n"

#. type: Plain text
#: en/git-imap-send.txt:100
#, priority:100
msgid "You may want to use `sslVerify=false` while troubleshooting, if you suspect that the reason you are having trouble connecting is because the certificate you use at the private server `example.com` you are trying to set up (or have set up) may not be verified correctly."
msgstr "Você pode querer utilizar `sslVerify=false` durante a resolução de problemas, caso suspeite que a fonte dos seu problemas de conexão é porque talvez haja um erro de verificação no certificado que você utiliza no servidor privado `example.com` que você está tentando configurar (ou já configurou)."

#. type: Plain text
#: en/git-imap-send.txt:102
#, priority:100
msgid "Using Gmail's IMAP interface:"
msgstr "Usando a interface IMAP do Gmail:"

#. type: delimited block -
#: en/git-imap-send.txt:109
#, no-wrap, priority:100
msgid ""
"[imap]\n"
"\tfolder = \"[Gmail]/Drafts\"\n"
"\thost = imaps://imap.gmail.com\n"
"\tuser = user@gmail.com\n"
"\tport = 993\n"
msgstr ""
"[imap]\n"
"\tfolder = \"[Gmail]/Drafts\"\n"
"\thost = imaps://imap.gmail.com\n"
"\tuser = user@gmail.com\n"
"\tport = 993\n"

#. type: Plain text
#: en/git-imap-send.txt:114
#, priority:100
msgid "You might need to instead use: `folder = \"[Google Mail]/Drafts\"` if you get an error that the \"Folder doesn't exist\"."
msgstr "Você pode precisar utilizar: `folder = \"[Google Mail]/Drafts\"` caso receba um erro indicando que a \"O diretório não existe\"."

#. type: Plain text
#: en/git-imap-send.txt:118
#, priority:100
msgid "If your Gmail account is set to another language than English, the name of the \"Drafts\" folder will be localized."
msgstr "Caso a sua conta do Gmail esteja definida para outro idioma que não o inglês, o nome da pasta \"Drafts\" será localizado para \"Rascunhos\"."

#. type: Plain text
#: en/git-imap-send.txt:120
#, priority:100
msgid "Once the commits are ready to be sent, run the following command:"
msgstr "Quando os commits estiverem prontos para serem enviados, execute o seguinte comando:"

#. type: Plain text
#: en/git-imap-send.txt:122
#, no-wrap, priority:100
msgid "  $ git format-patch --cover-letter -M --stdout origin/master | git imap-send\n"
msgstr "  $ git format-patch --cover-letter -M --stdout origin/master | git imap-send\n"

#. type: Plain text
#: en/git-imap-send.txt:126
#, priority:100
msgid "Just make sure to disable line wrapping in the email client (Gmail's web interface will wrap lines no matter what, so you need to use a real IMAP client)."
msgstr "Apenas certifique-se de desabilitar a quebra de linha no cliente de email (a interface da Web do Gmail sempre irá quebrar as linhas independentemente de qualquer coisa, portanto, você precisará utilizar um cliente IMAP de verdade)."

#. type: Title -
#: en/git-imap-send.txt:128
#, no-wrap, priority:100
msgid "CAUTION"
msgstr "CUIDADO"

#. type: Plain text
#: en/git-imap-send.txt:135
#, priority:100
msgid "It is still your responsibility to make sure that the email message sent by your email program meets the standards of your project.  Many projects do not like patches to be attached.  Some mail agents will transform patches (e.g. wrap lines, send them as format=flowed) in ways that make them fail.  You will get angry flames ridiculing you if you don't check this."
msgstr "Ainda é sua responsabilidade garantir que a mensagem de e-mail enviado pelo seu programa de e-mail atenda aos padrões do seu projeto.  Muitos projetos não gostam que os patches sejam anexados em mensagens de e-mail.  Alguns agentes de correio transformarão os patches (quebras de linhas automática, enviá-los como 'format=flowed' por exemplo) de maneira que irão fazê-los falhar.  Você receberá chamas raivosas que o ridicularizarão na frente de todo mundo se não prestar atenção."

#. type: Plain text
#: en/git-imap-send.txt:139
#, no-wrap, priority:100
msgid ""
"Thunderbird in particular is known to be problematic.  Thunderbird\n"
"users may wish to visit this web page for more information:\n"
"  http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email\n"
msgstr ""
"O Thunderbird é um velho informado por ser problemático.  Os usuários do Thunderbird\n"
"podem querer visitar esta página da web para obter mais informações:\n"
"  http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email\n"

#. type: Plain text
#: en/git-imap-send.txt:143
#, priority:100
msgid "linkgit:git-format-patch[1], linkgit:git-send-email[1], mbox(5)"
msgstr "linkgit:git-format-patch[1], linkgit:git-send-email[1], mbox(5)"

#. type: Title =
#: en/git-index-pack.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-index-pack(1)"
msgstr "git-index-pack(1)"

#. type: Plain text
#: en/git-index-pack.txt:7
#, priority:100
msgid "git-index-pack - Build pack index file for an existing packed archive"
msgstr "git-index-pack - Construa um pacote do arquivo do índice para um arquivo compactado já existente"

#. type: Plain text
#: en/git-index-pack.txt:15
#, no-wrap, priority:100
msgid ""
"'git index-pack' [-v] [-o <index-file>] [--[no-]rev-index] <pack-file>\n"
"'git index-pack' --stdin [--fix-thin] [--keep] [-v] [-o <index-file>]\n"
"\t\t  [--[no-]rev-index] [<pack-file>]\n"
msgstr ""
"'git index-pack' [-v] [-o <index-file>] [--[no-]rev-index] <pack-file>\n"
"'git index-pack' --stdin [--fix-thin] [--keep] [-v] [-o <index-file>]\n"
"\t\t  [--[no-]rev-index] [<pack-file>]\n"

#. type: Plain text
#: en/git-index-pack.txt:24
#, priority:100
msgid "Reads a packed archive (.pack) from the specified file, and builds a pack index file (.idx) for it. Optionally writes a reverse-index (.rev) for the specified pack. The packed archive together with the pack index can then be placed in the objects/pack/ directory of a Git repository."
msgstr "Faz a leitura de um arquivo compactado (.pack) do arquivo informado e cria um pacote do arquivo do índice (.idx) para ele. Opcionalmente escreve um índice reverso(.rev) para o pacote informado. O arquivo compactado junto com o pacote do índice pode ser colocado no diretório objects/pack/ de um repositório Git."

#. type: Plain text
#: en/git-index-pack.txt:30
#, priority:100
msgid "Be verbose about what is going on, including progress status."
msgstr "Seja detalhado sobre o que está acontecendo, incluindo a condição geral do progresso."

#. type: Labeled list
#: en/git-index-pack.txt:31
#, no-wrap, priority:100
msgid "-o <index-file>"
msgstr "-o <arquivo-índice>"

#. type: Plain text
#: en/git-index-pack.txt:38
#, priority:100
msgid "Write the generated pack index into the specified file.  Without this option the name of pack index file is constructed from the name of packed archive file by replacing .pack with .idx (and the program fails if the name of packed archive does not end with .pack)."
msgstr "Escreva o índice do pacote gerado no arquivo especificado.  Sem essa opção, o nome do arquivo do pacote do arquivo do índice é construído a partir do nome do arquivo compactado substituindo '.pack' por '.idx' (e o programa falha caso o nome do arquivo compactado não termine com '.pack')."

#. type: Labeled list
#: en/git-index-pack.txt:39
#, ignore-same, no-wrap, priority:100
msgid "--[no-]rev-index"
msgstr "--[no-]rev-index"

#. type: Plain text
#: en/git-index-pack.txt:45
#, priority:100
msgid "When this flag is provided, generate a reverse index (a `.rev` file) corresponding to the given pack. If `--verify` is given, ensure that the existing reverse index is correct. Takes precedence over `pack.writeReverseIndex`."
msgstr "Quando este sinalizador for informado, gere um índice reverso (um arquivo `.rev`) correspondente ao pacote informado. Caso `--verify` seja usado, certifique-se que o índice reverso existente esteja correto. Tem precedência sobre `pack.writeReverseIndex`."

#. type: Plain text
#: en/git-index-pack.txt:55
#, priority:100
msgid "When this flag is provided, the pack is read from stdin instead and a copy is then written to <pack-file>. If <pack-file> is not specified, the pack is written to objects/pack/ directory of the current Git repository with a default name determined from the pack content.  If <pack-file> is not specified consider using --keep to prevent a race condition between this process and 'git repack'."
msgstr "Quando esta opção é informada, o pacote é lido a partir do stdin e uma cópia é gravada no <pack-file>. Caso o <pack-file> não seja informado, o pacote será gravado no diretório 'objects/pack/' do repositório Git atual com um nome predefinido determinado através do conteúdo do pacote.  Caso o <pack-file> não seja informado, considere utilizar a opção `--keep` para evitar uma condição de corrida entre este processo e o 'git repack'."

#. type: Labeled list
#: en/git-index-pack.txt:56
#, ignore-same, no-wrap, priority:100
msgid "--fix-thin"
msgstr "--fix-thin"

#. type: Plain text
#: en/git-index-pack.txt:61
#, priority:100
msgid "Fix a \"thin\" pack produced by `git pack-objects --thin` (see linkgit:git-pack-objects[1] for details) by adding the excluded objects the deltified objects are based on to the pack. This option only makes sense in conjunction with --stdin."
msgstr "Corrija um pacote \"thin\" produzido por `git pack objects thin` (para mais detalhes, consulte linkgit:git-pack-objects[1]) adicionando os objetos excluídos nos quais os objetos \"deltificados\" utilizam como base no pacote. Esta opção só faz sentido caso seja utilizado em conjunto com `--stdin`."

#. type: Plain text
#: en/git-index-pack.txt:69
#, priority:100
msgid "Before moving the index into its final destination create an empty .keep file for the associated pack file.  This option is usually necessary with --stdin to prevent a simultaneous 'git repack' process from deleting the newly constructed pack and index before refs can be updated to use objects contained in the pack."
msgstr "Antes de mover o índice para seu destino final, crie um arquivo '.keep' vazio para o arquivo do pacote associado.  Essa opção geralmente é necessária com '--stdin' para impedir que um processo simultâneo do 'git repack' exclua o pacote e o índice recém-construídos antes que as refs possam ser atualizadas para utilizar os objetos existentes no pacote."

#. type: Labeled list
#: en/git-index-pack.txt:70
#, no-wrap, priority:100
msgid "--keep=<msg>"
msgstr "--keep=<msg>"

#. type: Plain text
#: en/git-index-pack.txt:76
#, priority:100
msgid "Like --keep create a .keep file before moving the index into its final destination, but rather than creating an empty file place '<msg>' followed by an LF into the .keep file.  The '<msg>' message can later be searched for within all .keep files to locate any which have outlived their usefulness."
msgstr "Assim como a opção `--keep`, crie um arquivo '.keep' antes de mover o índice para seu destino final, em vez de criar um local do arquivo vazio '<msg>', seguido de um LF no arquivo .keep.  A mensagem '<msg>' pode ser pesquisada posteriormente em todos os arquivos '.keep' para localizar qualquer um que tenha perdido a sua utilidade."

#. type: Labeled list
#: en/git-index-pack.txt:77 en/git-pack-objects.txt:291
#, no-wrap, priority:100
msgid "--index-version=<version>[,<offset>]"
msgstr "--index-version=<version>[,<offset>]"

#. type: Plain text
#: en/git-index-pack.txt:81 en/git-pack-objects.txt:295
#, priority:100
msgid "This is intended to be used by the test suite only. It allows to force the version for the generated pack index, and to force 64-bit index entries on objects located above the given offset."
msgstr "Isso foi pensado para ser utilizado apenas pelo conjunto de testes. Ele permite impor a versão do índice do pacote gerado e impor as entradas no índice com 64 bits nos objetos localizados acima da compensação informada."

#. type: Plain text
#: en/git-index-pack.txt:84
#, priority:100
msgid "Die, if the pack contains broken objects or links."
msgstr "Encerre, caso o pacote contenha objetos ou links quebrados."

#. type: Labeled list
#: en/git-index-pack.txt:85
#, ignore-same, no-wrap, priority:100
msgid "--progress-title"
msgstr "--progress-title"

#. type: Plain text
#: en/git-index-pack.txt:87 en/git-index-pack.txt:96
#, priority:100
msgid "For internal use only."
msgstr "Apenas para uso interno."

#. type: Plain text
#: en/git-index-pack.txt:90
#, priority:100
msgid "Set the title of the progress bar. The title is \"Receiving objects\" by default and \"Indexing objects\" when `--stdin` is specified."
msgstr "Defina o título da barra de progresso. O título predefinido é \"Receber objetos\" e \"Indexar objetos\" quando a opção `--stdin` for usada."

#. type: Plain text
#: en/git-index-pack.txt:93
#, priority:100
msgid "Die if the pack contains broken links. For internal use only."
msgstr "Encerre caso o pacote contenha links quebrados. Apenas para utilização interna."

#. type: Labeled list
#: en/git-index-pack.txt:94
#, ignore-same, no-wrap, priority:100
msgid "--fsck-objects"
msgstr "--fsck-objects"

#. type: Plain text
#: en/git-index-pack.txt:101
#, priority:100
msgid "Die if the pack contains broken objects. If the pack contains a tree pointing to a .gitmodules blob that does not exist, prints the hash of that blob (for the caller to check) after the hash that goes into the name of the pack/idx file (see \"Notes\")."
msgstr "O processo é encerrado caso o pacote contenha objetos quebrados. Caso o pacote contiver uma árvore apontando para uma bolha \".gitmodules\" que não exista, imprima o hash desta bolha (para que o requerente o verifique) após o hash que vai para o nome do arquivo pack/idx (consulte \"Notas\")."

#. type: Labeled list
#: en/git-index-pack.txt:102 en/git-pack-objects.txt:281 en/git-repack.txt:114
#, no-wrap, priority:100
msgid "--threads=<n>"
msgstr "--threads=<n>"

#. type: Plain text
#: en/git-index-pack.txt:111
#, priority:100
msgid "Specifies the number of threads to spawn when resolving deltas. This requires that index-pack be compiled with pthreads otherwise this option is ignored with a warning.  This is meant to reduce packing time on multiprocessor machines. The required amount of memory for the delta search window is however multiplied by the number of threads.  Specifying 0 will cause Git to auto-detect the number of CPU's and use maximum 3 threads."
msgstr "Determina a quantidade de \"threads\" a serem geradas para resolver os deltas. Isso requer que os objetos do pacote sejam compilados com \"pthreads\", caso contrário esta opção será ignorada exibindo um aviso.  Isso visa reduzir o tempo do empacotamento em máquinas com multiprocessados. A quantidade de memória necessária para a janela de pesquisa delta é multiplicada pela quantidade de threads.  Definindo como `0` faz com que o Git detecte automaticamente a quantidade de CPUs e defina a quantidade de \"threads\" proporcionalmente e utiliza o máximo de 3 \"threads\"."

#. type: Labeled list
#: en/git-index-pack.txt:112 en/git-unpack-objects.txt:47
#, no-wrap, priority:100
msgid "--max-input-size=<size>"
msgstr "--max-input-size=<tamanho>"

#. type: Plain text
#: en/git-index-pack.txt:114 en/git-unpack-objects.txt:49
#, priority:100
msgid "Die, if the pack is larger than <size>."
msgstr "Encerre caso o pacote seja maior que <tamanho>."

#. type: Labeled list
#: en/git-index-pack.txt:115 en/git-show-index.txt:42
#, no-wrap, priority:100
msgid "--object-format=<hash-algorithm>"
msgstr "--object-format=<hash-algorithm>"

#. type: Plain text
#: en/git-index-pack.txt:120
#, priority:100
msgid "Specify the given object format (hash algorithm) for the pack.  The valid values are 'sha1' and (if enabled) 'sha256'.  The default is the algorithm for the current repository (set by `extensions.objectFormat`), or 'sha1' if no value is set or outside a repository."
msgstr "Defina o formato do objeto informado (algoritmo hash) para o pacote.  Os valores válidos são 'sha1' e (se ativado) 'sha256'.  A predefinição é o algoritmo para o repositório atual (definido através da opção `extensions.objectFormat`) ou 'sha1' caso nenhum valor seja definido dentro ou fora do repositório."

#. type: Plain text
#: en/git-index-pack.txt:122
#, priority:100
msgid "This option cannot be used with --stdin."
msgstr "Esta opção não pode ser utilizada com --stdin."

#. type: Labeled list
#: en/git-index-pack.txt:125
#, no-wrap, priority:100
msgid "--promisor[=<message>]"
msgstr "--promisor[=<mensagem>]"

#. type: Plain text
#: en/git-index-pack.txt:132
#, priority:100
msgid "Before committing the pack-index, create a .promisor file for this pack. Particularly helpful when writing a promisor pack with --fix-thin since the name of the pack is not final until the pack has been fully written. If a `<message>` is provided, then that content will be written to the .promisor file for future reference. See link:technical/partial-clone.html[partial clone] for more information."
msgstr "Antes fazer o commit do índice do pacote, crie um arquivo .promisor para este pacote. É particularmente útil ao escrever um pacote promissor com a opção `--fix-thin` já que o nome do pacote não é definitivo até que o pacote tenha sido totalmente escrito. Caso uma `<menssagem>` seja fornecida, esse conteúdo será gravado no arquivo .promisor para uma referência futura. Consulte o link:technical/partial-clone.html[clone parcial] para obter mais informações."

#. type: Plain text
#: en/git-index-pack.txt:140
#, priority:100
msgid "Once the index has been created, the hash that goes into the name of the pack/idx file is printed to stdout. If --stdin was also used then this is prefixed by either \"pack\\t\", or \"keep\\t\" if a new .keep file was successfully created. This is useful to remove a"
msgstr "Uma vez que o índice seja criado, o hash que vai dentro do nome do arquivo pack/idx é exibido no stdout. Caso `--stdin` também seja utilizado, então este é prefixado por \"pack\\t\" ou \"keep\\t\" caso um novo arquivo `.keep` seja criado com êxito. Isso é útil para remover um"

#. type: Block title
#: en/git-index-pack.txt:140
#, no-wrap, priority:100
msgid "keep file used as a lock to prevent the race with 'git repack'"
msgstr "mantenha o arquivo utilizado como uma trava para impedir uma corrida com `git repack`"

#. type: Plain text
#: en/git-index-pack.txt:142
#, priority:100
msgid "mentioned above."
msgstr "citados acima."

#. type: Title =
#: en/git-init-db.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-init-db(1)"
msgstr "git-init-db(1)"

#. type: Plain text
#: en/git-init-db.txt:7
#, priority:100
msgid "git-init-db - Creates an empty Git repository"
msgstr "git-init-db - Cria um repositório Git vazio"

#. type: Plain text
#: en/git-init-db.txt:13
#, no-wrap, priority:100
msgid "'git init-db' [-q | --quiet] [--bare] [--template=<template-directory>] [--separate-git-dir <git-dir>] [--shared[=<permissions>]]\n"
msgstr "'git init-db' [-q | --quiet] [--bare] [--template=<diretório-modelo>] [--separate-git-dir <dir-git>] [--shared[=<permissões>]]\n"

#. type: Plain text
#: en/git-init-db.txt:20
#, priority:100
msgid "This is a synonym for linkgit:git-init[1].  Please refer to the documentation of that command."
msgstr "Este é um sinônimo para linkgit:git-init[1].  Para referências deste comando, favor consultar a documentação."

#. type: Title =
#: en/git-init.txt:2
#, ignore-same, no-wrap, priority:300
msgid "git-init(1)"
msgstr "git-init(1)"

#. type: Plain text
#: en/git-init.txt:7
#, priority:300
msgid "git-init - Create an empty Git repository or reinitialize an existing one"
msgstr "git-init - Cria um repositório Git vazio ou reinicializa um já existente"

#. type: Plain text
#: en/git-init.txt:16
#, no-wrap, priority:300
msgid ""
"'git init' [-q | --quiet] [--bare] [--template=<template-directory>]\n"
"\t  [--separate-git-dir <git-dir>] [--object-format=<format>]\n"
"\t  [-b <branch-name> | --initial-branch=<branch-name>]\n"
"\t  [--shared[=<permissions>]] [<directory>]\n"
msgstr ""
"'git init' [-q | --quiet] [--bare] [--template=<diretório-modelo>]\n"
"\t  [--separate-git-dir <dir-git>] [--object-format=<formato>]\n"
"\t  [-b <nome-do-ramo> | --initial-branch=<nome-do-ramo>]\n"
"\t  [--shared[=<permissões>]] [<diretório>]\n"

#. type: Plain text
#: en/git-init.txt:26
#, priority:300
msgid "This command creates an empty Git repository - basically a `.git` directory with subdirectories for `objects`, `refs/heads`, `refs/tags`, and template files.  An initial branch without any commits will be created (see the `--initial-branch` option below for its name)."
msgstr "Este comando cria um repositório Git vazio, basicamente um diretório `.git` com subdiretórios para os arquivos `objects`, `refs/heads`, `refs/tags` e arquivos modelo.  Também é criado um ramo inicial sem qualquer commit (consulte o nome da opção `--initial-branch` abaixo)."

#. type: Plain text
#: en/git-init.txt:29
#, priority:300
msgid "If the `$GIT_DIR` environment variable is set then it specifies a path to use instead of `./.git` for the base of the repository."
msgstr "Caso a variável de ambiente `$GIT_DIR` esteja configurada, esta especificará um caminho a ser utilizado para a base dos repositórios em vez de `./.git`."

#. type: Plain text
#: en/git-init.txt:34
#, priority:300
msgid "If the object storage directory is specified via the `$GIT_OBJECT_DIRECTORY` environment variable then the sha1 directories are created underneath - otherwise the default `$GIT_DIR/objects` directory is used."
msgstr "Caso o diretório de armazenamento de objetos seja especificado através da variável de ambiente `$GIT_OBJECT_DIRECTORY`, então os diretórios \"sha1\" serão criados abaixo, caso contrário, será utilizado o diretório predefinido `$GIT_DIR/objects`."

#. type: Plain text
#: en/git-init.txt:39
#, priority:300
msgid "Running 'git init' in an existing repository is safe. It will not overwrite things that are already there. The primary reason for rerunning 'git init' is to pick up newly added templates (or to move the repository to another place if --separate-git-dir is given)."
msgstr "É seguro executar o comando `git init` num repositório existente. O comando não substituirá as coisas que já estiverem lá. O principal motivo para executar novamente o comando `git init` é pegar os modelos adicionados recentemente (ou mover o repositório para um outro local caso `--separate-git-dir` seja utilizado)."

#. type: Plain text
#: en/git-init.txt:47
#, priority:300
msgid "Only print error and warning messages; all other output will be suppressed."
msgstr "Exiba apenas mensagens de erro e aviso; suprima todas as outras mensagens."

#. type: Plain text
#: en/git-init.txt:52
#, priority:300
msgid "Create a bare repository. If `GIT_DIR` environment is not set, it is set to the current working directory."
msgstr "Crie um repositório simples. Caso a variável de ambiente `GIT_DIR` não esteja definido, defina diretório de trabalho atual."

#. type: Labeled list
#: en/git-init.txt:53
#, no-wrap, priority:300
msgid "--object-format=<format>"
msgstr "--object-format=<formato>"

#. type: Plain text
#: en/git-init.txt:57
#, priority:300
msgid "Specify the given object format (hash algorithm) for the repository.  The valid values are 'sha1' and (if enabled) 'sha256'.  'sha1' is the default."
msgstr "Defina o formato do objeto informado (algoritmo hash) para o repositório.  Os valores válidos são 'sha1' e (se ativado) 'sha256'.  O valor predefinido é 'sha1'."

#. type: Plain text
#: en/git-init.txt:64
#, priority:300
msgid "Specify the directory from which templates will be used.  (See the \"TEMPLATE DIRECTORY\" section below.)"
msgstr "Especifique o diretório de onde os modelos serão utilizados.  (Consulte a seção \"DIRETÓRIO MODELO\" abaixo.)"

#. type: Plain text
#: en/git-init.txt:71
#, priority:300
msgid "Instead of initializing the repository as a directory to either `$GIT_DIR` or `./.git/`, create a text file there containing the path to the actual repository.  This file acts as filesystem-agnostic Git symbolic link to the repository."
msgstr "Em vez de inicializar o repositório como um diretório para `$GIT_DIR` or `./.git/`, crie um arquivo de texto contendo o caminho para o repositório real.  Este arquivo atua como um link simbólico independente para o repositório do sistema de arquivos Git."

#. type: Plain text
#: en/git-init.txt:73
#, priority:300
msgid "If this is reinitialization, the repository will be moved to the specified path."
msgstr "Caso seja reinicializado, o repositório será movido para um caminho determinado."

#. type: Labeled list
#: en/git-init.txt:74
#, no-wrap, priority:300
msgid "-b <branch-name>"
msgstr "-b <nome-do-ramo>"

#. type: Labeled list
#: en/git-init.txt:75
#, no-wrap, priority:300
msgid "--initial-branch=<branch-name>"
msgstr "--initial-branch=<nome-do-ramo>"

#. type: Plain text
#: en/git-init.txt:81
#, priority:300
msgid "Use the specified name for the initial branch in the newly created repository.  If not specified, fall back to the default name (currently `master`, but this is subject to change in the future; the name can be customized via the `init.defaultBranch` configuration variable)."
msgstr "Use o nome definido para o ramo inicial no repositório que foi recém-criado.  Caso não seja especificado, retorne ao nome predefinido (atualmente `master` porém isso está para mudar no futuro; o nome pode ser personalizado através da variável de configuração `init.defaultBranch`."

#. type: Labeled list
#: en/git-init.txt:82
#, no-wrap, priority:300
msgid "--shared[=(false|true|umask|group|all|world|everybody|<perm>)]"
msgstr "--shared[=(false|true|umask|group|all|world|everybody|<perm>)]"

#. type: Plain text
#: en/git-init.txt:90
#, priority:300
msgid "Specify that the Git repository is to be shared amongst several users.  This allows users belonging to the same group to push into that repository.  When specified, the config variable \"core.sharedRepository\" is set so that files and directories under `$GIT_DIR` are created with the requested permissions.  When not specified, Git will use permissions reported by umask(2)."
msgstr "Determina que o repositório Git deve ser compartilhado entre vários usuários.  Isso permite que os usuários pertencentes ao mesmo grupo enviem para esse repositório.  Quando definido, a variável de configuração `core.sharedRepository` é utilizada para que os arquivos e os diretórios definidos pela variável `$GIT_DIR` sejam criados com as permissões solicitadas.  Quando não definido, o Git usará as permissões informadas pelo umask(2)."

#. type: Plain text
#: en/git-init.txt:93
#, priority:300
msgid "The option can have the following values, defaulting to 'group' if no value is given:"
msgstr "A opção pode ter os seguintes valores, predefinido como 'group' caso nenhum valor seja informado:"

#. type: Labeled list
#: en/git-init.txt:95
#, no-wrap, priority:300
msgid "'umask' (or 'false')"
msgstr "'umask' (ou 'false')"

#. type: Plain text
#: en/git-init.txt:99
#, priority:300
msgid "Use permissions reported by umask(2). The default, when `--shared` is not specified."
msgstr "Utilize as permissões informadas por umask(2). É a predefinição quando `--shared` não é utilizado."

#. type: Labeled list
#: en/git-init.txt:100
#, no-wrap, priority:300
msgid "'group' (or 'true')"
msgstr "'group' (ou 'true')"

#. type: Plain text
#: en/git-init.txt:108
#, priority:300
msgid "Make the repository group-writable, (and g+sx, since the git group may be not the primary group of all users). This is used to loosen the permissions of an otherwise safe umask(2) value. Note that the umask still applies to the other permission bits (e.g. if umask is '0022', using 'group' will not remove read privileges from other (non-group) users). See '0xxx' for how to exactly specify the repository permissions."
msgstr "Torne o grupo do repositório com permissão de escrita (g+sx por exemplo, pois o grupo git pode não ser o grupo principal de todos os usuários). Isso é utilizado para afrouxar as permissões de um valor, a não ser que indique o contrário, umask(2) seguro. Observe que o umask ainda se aplica aos outros bits de permissão (por exemplo, caso o umask seja '0022' o uso de 'group' não removerá os privilégios de leitura dos outros usuários (sem um grupo). Consulte '0xxx' para saber como usar exatamente as permissões do repositório."

#. type: Labeled list
#: en/git-init.txt:109
#, no-wrap, priority:300
msgid "'all' (or 'world' or 'everybody')"
msgstr "'all' ('world' ou 'everybody')"

#. type: Plain text
#: en/git-init.txt:112
#, priority:300
msgid "Same as 'group', but make the repository readable by all users."
msgstr "O mesmo que 'group', mas torna o repositório legível por todos os usuários."

#. type: Labeled list
#: en/git-init.txt:113
#, no-wrap, priority:300
msgid "'<perm>'"
msgstr "'<perm>'"

#. type: Plain text
#: en/git-init.txt:123
#, priority:300
msgid "'<perm>' is a 3-digit octal number prefixed with `0` and each file will have mode '<perm>'. '<perm>' will override users' umask(2)  value (and not only loosen permissions as 'group' and 'all' does). '0640' will create a repository which is group-readable, but not group-writable or accessible to others. '0660' will create a repo that is readable and writable to the current user and group, but inaccessible to others (directories and executable files get their `x` bit from the `r` bit for corresponding classes of users)."
msgstr "'<perm>' é um número octal com 3 dígitos prefixado com `0` e cada arquivo terá o modo '<perm>'. '<perm>' substituirá o valor `umask(2)` dos usuários (e não apenas diminuirá as permissões como 'group' e 'all'). '0640' criará um repositório de apenas leitura por grupo, sem permissão escrita ou acessível a outros. '0660' criará um repositório com permissão de leitura e escrita ao usuário e ao grupo atual, porém, inacessível aos outros (os diretórios e os arquivos executáveis recebem seu bit 'x' do bit 'r' para as classes correspondentes dos usuários)."

#. type: Plain text
#: en/git-init.txt:128
#, priority:300
msgid "By default, the configuration flag `receive.denyNonFastForwards` is enabled in shared repositories, so that you cannot force a non fast-forwarding push into it."
msgstr "É predefinido que a flag da configuração `receive.denyNonFastForwards` seja ativado nos repositórios compartilhados para que você não possa impor um impulsionamento `fast-forwarding` para ele."

#. type: Plain text
#: en/git-init.txt:131
#, priority:300
msgid "If you provide a 'directory', the command is run inside it. If this directory does not exist, it will be created."
msgstr "Caso utilize um `diretório`, o comando será executado dentro dele. E caso o diretório não exista, um será criado."

#. type: Title -
#: en/git-init.txt:133
#, no-wrap, priority:300
msgid "TEMPLATE DIRECTORY"
msgstr "DIRETÓRIO MODELO"

#. type: Plain text
#: en/git-init.txt:137
#, priority:300
msgid "Files and directories in the template directory whose name do not start with a dot will be copied to the `$GIT_DIR` after it is created."
msgstr "Os arquivos e diretórios no diretório modelo cujo nome não começa com um ponto serão copiados para o `$GIT_DIR` após a sua criação."

#. type: Plain text
#: en/git-init.txt:139
#, priority:300
msgid "The template directory will be one of the following (in order):"
msgstr "O diretório modelo será um dos seguintes (em ordem):"

#. type: Plain text
#: en/git-init.txt:141
#, priority:300
msgid "the argument given with the `--template` option;"
msgstr "o argumento utilizado com a opção `--template`;"

#. type: Plain text
#: en/git-init.txt:143
#, priority:300
msgid "the contents of the `$GIT_TEMPLATE_DIR` environment variable;"
msgstr "o conteúdo da variável de ambiente `$GIT_TEMPLATE_DIR`;"

#. type: Plain text
#: en/git-init.txt:145
#, priority:300
msgid "the `init.templateDir` configuration variable; or"
msgstr "a variável de configuração `init.templateDir`; ou"

#. type: Plain text
#: en/git-init.txt:147
#, priority:300
msgid "the default template directory: `/usr/share/git-core/templates`."
msgstr "A predefinição do diretório modelo: `/usr/share/git-core/templates`."

#. type: Plain text
#: en/git-init.txt:150
#, priority:300
msgid "The default template directory includes some directory structure, suggested \"exclude patterns\" (see linkgit:gitignore[5]), and sample hook files."
msgstr "A predefinição do diretório modelo inclui alguma estrutura de diretórios, \"padrões de exclusão\" sugeridos (consulte linkgit:gitignore[5]) e os arquivos gancho de amostragem."

#. type: Plain text
#: en/git-init.txt:153
#, priority:300
msgid "The sample hooks are all disabled by default. To enable one of the sample hooks rename it by removing its `.sample` suffix."
msgstr "Por predefinição os ganchos de amostragem estão todos desativados. Para ativar um dos ganchos de amostragem, renomeie-o removendo o sufixo `.sample`."

#. type: Plain text
#: en/git-init.txt:155
#, priority:300
msgid "See linkgit:githooks[5] for more general info on hook execution."
msgstr "Para um apanhado geral sobre execução hook consulte linkgit:githooks[5]."

#. type: Labeled list
#: en/git-init.txt:159
#, no-wrap, priority:300
msgid "Start a new Git repository for an existing code base"
msgstr "Inicie um novo repositório Git na base de um código já existente"

#. type: delimited block -
#: en/git-init.txt:166
#, no-wrap, priority:300
msgid ""
"$ cd /path/to/my/codebase\n"
"$ git init      <1>\n"
"$ git add .     <2>\n"
"$ git commit    <3>\n"
msgstr ""
"$ cd /path/to/my/codebase\n"
"$ git init      <1>\n"
"$ git add .     <2>\n"
"$ git commit    <3>\n"

#. type: Plain text
#: en/git-init.txt:169
#, priority:300
msgid "Create a /path/to/my/codebase/.git directory."
msgstr "Cria um diretório /path/to/my/codebase/.git."

#. type: Plain text
#: en/git-init.txt:170
#, priority:300
msgid "Add all existing files to the index."
msgstr "Adicione todos os arquivos existentes ao índice."

#. type: Plain text
#: en/git-init.txt:171
#, priority:300
msgid "Record the pristine state as the first commit in the history."
msgstr "Registre o estado intocado como o primeiro commit no histórico."

#. type: Title =
#: en/git-instaweb.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-instaweb(1)"
msgstr "git-instaweb(1)"

#. type: Plain text
#: en/git-instaweb.txt:7
#, priority:100
msgid "git-instaweb - Instantly browse your working repository in gitweb"
msgstr "git-instaweb - Navegue instantaneamente no seu repositório de trabalho com o gitweb"

#. type: Plain text
#: en/git-instaweb.txt:14
#, no-wrap, priority:100
msgid ""
"'git instaweb' [--local] [--httpd=<httpd>] [--port=<port>]\n"
"               [--browser=<browser>]\n"
"'git instaweb' [--start] [--stop] [--restart]\n"
msgstr ""
"'git instaweb' [--local] [--httpd=<httpd>] [--port=<porta>]\n"
"               [--browser=<browser>]\n"
"'git instaweb' [--start] [--stop] [--restart]\n"

#. type: Plain text
#: en/git-instaweb.txt:19
#, priority:100
msgid "A simple script to set up `gitweb` and a web server for browsing the local repository."
msgstr "Um script simples para configurar o `gitweb` e um servidor da web para navegar no repositório local."

#. type: Plain text
#: en/git-instaweb.txt:26
#, priority:100
msgid "Only bind the web server to the local IP (127.0.0.1)."
msgstr "Amarre o servidor da web apenas ao endereço IP local (127.0.0.1)."

#. type: Labeled list
#: en/git-instaweb.txt:28
#, ignore-same, no-wrap, priority:100
msgid "--httpd"
msgstr "--httpd"

#. type: Plain text
#: en/git-instaweb.txt:35
#, priority:100
msgid "The HTTP daemon command-line that will be executed.  Command-line options may be specified here, and the configuration file will be added at the end of the command-line.  Currently apache2, lighttpd, mongoose, plackup, python and webrick are supported.  (Default: lighttpd)"
msgstr "A linha de comando do daemon HTTP que será executado.  As opções da linha de comando podem ser informadas aqui e o arquivo da configuração será adicionada no final da linha de comando.  Atualmente são compatíveis, apache2, lighttpd, mongoose, plackup, python e webrick.  (Predefinição: lighttpd)"

#. type: Labeled list
#: en/git-instaweb.txt:37
#, ignore-same, no-wrap, priority:100
msgid "--module-path"
msgstr "--module-path"

#. type: Plain text
#: en/git-instaweb.txt:40
#, priority:100
msgid "The module path (only needed if httpd is Apache).  (Default: /usr/lib/apache2/modules)"
msgstr "O caminho do módulo (é apenas necessário caso o httpd seja o Apache).  (Predefinição: /usr/lib/apache2/modules)"

#. type: Labeled list
#: en/git-instaweb.txt:42
#, ignore-same, no-wrap, priority:100
msgid "--port"
msgstr "--port"

#. type: Plain text
#: en/git-instaweb.txt:44
#, priority:100
msgid "The port number to bind the httpd to.  (Default: 1234)"
msgstr "O número da porta que será associada ao httpd.  (Predefinição: 1234)"

#. type: Labeled list
#: en/git-instaweb.txt:46
#, ignore-same, no-wrap, priority:100
msgid "--browser"
msgstr "--browser"

#. type: Plain text
#: en/git-instaweb.txt:52
#, priority:100
msgid "The web browser that should be used to view the gitweb page. This will be passed to the 'git web{litdd}browse' helper script along with the URL of the gitweb instance. See linkgit:git-web{litdd}browse[1] for more information about this. If the script fails, the URL will be printed to stdout."
msgstr "O navegador da web que deve ser utilizado para exibir a página gitweb. Isso será encaminhado ao script auxiliar 'git web{litdd}browse' junto com a URL da instância gitweb. Para obter mais informações sobre isso consulte linkgit:git-web{litdd}browse[1]. Caso o script falhe, a URL será exibida no stdout."

#. type: Labeled list
#: en/git-instaweb.txt:53 en/git-update-ref.txt:125
#, no-wrap, priority:100
msgid "start"
msgstr "start"

#. type: Labeled list
#: en/git-instaweb.txt:54
#, ignore-same, no-wrap, priority:100
msgid "--start"
msgstr "--start"

#. type: Plain text
#: en/git-instaweb.txt:57
#, priority:100
msgid "Start the httpd instance and exit.  Regenerate configuration files as necessary for spawning a new instance."
msgstr "Inicie o servidor httpd e encerre.  Gere novamente os arquivos de configuração para criar uma nova instância conforme seja necessário."

#. type: Labeled list
#: en/git-instaweb.txt:58
#, no-wrap, priority:100
msgid "stop"
msgstr "stop"

#. type: Labeled list
#: en/git-instaweb.txt:59
#, ignore-same, no-wrap, priority:100
msgid "--stop"
msgstr "--stop"

#. type: Plain text
#: en/git-instaweb.txt:63
#, priority:100
msgid "Stop the httpd instance and exit.  This does not generate any of the configuration files for spawning a new instance, nor does it close the browser."
msgstr "Pare o servidor httpd e encerre.  Isso não gera nenhum dos arquivos de configuração para criar uma nova instância, nem fecha o navegador."

#. type: Labeled list
#: en/git-instaweb.txt:64
#, no-wrap, priority:100
msgid "restart"
msgstr "restart"

#. type: Labeled list
#: en/git-instaweb.txt:65
#, ignore-same, no-wrap, priority:100
msgid "--restart"
msgstr "--restart"

#. type: Plain text
#: en/git-instaweb.txt:68
#, priority:100
msgid "Restart the httpd instance and exit.  Regenerate configuration files as necessary for spawning a new instance."
msgstr "Reinicia o servidor httpd e encerre.  Gere novamente os arquivos de configuração para criar uma nova instância conforme seja necessário."

#. type: Plain text
#: en/git-instaweb.txt:73
#, priority:100
msgid "You may specify configuration in your .git/config"
msgstr "Você pode definir a sua configuração em seu `.git/config`"

#. type: delimited block -
#: en/git-instaweb.txt:81
#, no-wrap, priority:100
msgid ""
"[instaweb]\n"
"\tlocal = true\n"
"\thttpd = apache2 -f\n"
"\tport = 4321\n"
"\tbrowser = konqueror\n"
"\tmodulePath = /usr/lib/apache2/modules\n"
msgstr ""
"[instaweb]\n"
"\tlocal = true\n"
"\thttpd = apache2 -f\n"
"\tport = 4321\n"
"\tbrowser = konqueror\n"
"\tmodulePath = /usr/lib/apache2/modules\n"

#. type: Plain text
#: en/git-instaweb.txt:87
#, priority:100
msgid "If the configuration variable `instaweb.browser` is not set, `web.browser` will be used instead if it is defined. See linkgit:git-web{litdd}browse[1] for more information about this."
msgstr "Caso a variável de configuração `instaweb.browser` não esteja definida, a variável ` web.browser` será utilizada em seu lugar caso esteja definida. Para obter mais informações sobre isso consulte linkgit:git-web{litdd}browse[1]."

#. type: Title =
#: en/git-interpret-trailers.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-interpret-trailers(1)"
msgstr "git-interpret-trailers(1)"

#. type: Plain text
#: en/git-interpret-trailers.txt:7
#, priority:100
msgid "git-interpret-trailers - Add or parse structured information in commit messages"
msgstr "git-interpret-trailers - Adiciona ou analisa informação estruturada em mensagens de commit"

#. type: Plain text
#: en/git-interpret-trailers.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git interpret-trailers' [<options>] [(--trailer <token>[(=|:)<value>])...] [<file>...]\n"
"'git interpret-trailers' [<options>] [--parse] [<file>...]\n"
msgstr ""
"'git interpret-trailers' [<opções>] [(--trailer <token>[(=|:)<valor>])...] [<arquivo>...]\n"
"'git interpret-trailers' [<opções>] [--parse] [<arquivo>...]\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:19
#, priority:100
msgid "Help parsing or adding 'trailers' lines, that look similar to RFC 822 e-mail headers, at the end of the otherwise free-form part of a commit message."
msgstr "Ajuda a analisar ou adicionar linhas com 'caracteres de resposta' que se pareçam com os cabeçalhos de e-mail segundo a norma RFC 822 no final ou na parte livre de uma mensagem de commit."

#. type: Plain text
#: en/git-interpret-trailers.txt:23
#, priority:100
msgid "This command reads some patches or commit messages from either the <file> arguments or the standard input if no <file> is specified. If `--parse` is specified, the output consists of the parsed trailers."
msgstr "Este comando lê alguns patches ou faz o commit das mensagens dos argumentos <arquivo> ou da entrada padrão se nenhum <arquivo> seja definido. Caso `--parse` seja definido a saída consistirá nos caracteres de resposta analisados."

#. type: Plain text
#: en/git-interpret-trailers.txt:27
#, priority:100
msgid "Otherwise, this command applies the arguments passed using the `--trailer` option, if any, to the commit message part of each input file. The result is emitted on the standard output."
msgstr "Caso contrário, este comando aplica os argumentos passados utilizando a opção `--trailer`, caso exista, à parte da mensagem de commit de cada arquivo de entrada. O resultado é emitido na saída padrão."

#. type: Plain text
#: en/git-interpret-trailers.txt:32
#, priority:100
msgid "Some configuration variables control the way the `--trailer` arguments are applied to each commit message and the way any existing trailer in the commit message is changed. They also make it possible to automatically add some trailers."
msgstr "Algumas variáveis de configuração controlam a maneira como os argumentos do `--trailer` são aplicados a cada mensagem de commit e a maneira como qualquer `trailer` existente na mensagem de commit é alterado. Eles também possibilitam adicionar automaticamente alguns `trailers`."

#. type: Plain text
#: en/git-interpret-trailers.txt:39
#, priority:100
msgid "By default, a '<token>=<value>' or '<token>:<value>' argument given using `--trailer` will be appended after the existing trailers only if the last trailer has a different (<token>, <value>) pair (or if there is no existing trailer). The <token> and <value> parts will be trimmed to remove starting and trailing whitespace, and the resulting trimmed <token> and <value> will appear in the message like this:"
msgstr "É predefinido que, usando um argumento '<token>=<valor>' ou '<token>:<valor>' utilizando a opção `--trailer` será anexado após os caracteres de resposta existentes caso o último tenha um par (<token>, <valor>), (ou caso não exista nenhum caractere de resposta). As partes <token> e <valor> serão aparados para remover os espaços iniciais e finais, o que sobrar aparecerá na mensagem da seguinte maneira:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:42
#, no-wrap, priority:100
msgid "token: value\n"
msgstr "token: valor\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:46
#, priority:100
msgid "This means that the trimmed <token> and <value> will be separated by `': '` (one colon followed by one space)."
msgstr "Significa que o <token> e o <valor> ajustado será separado por um `': '` (dois pontos seguido por um espaço)."

#. type: Plain text
#: en/git-interpret-trailers.txt:52
#, priority:100
msgid "By default the new trailer will appear at the end of all the existing trailers. If there is no existing trailer, the new trailer will appear after the commit message part of the output, and, if there is no line with only spaces at the end of the commit message part, one blank line will be added before the new trailer."
msgstr "É predefinido que o novo caractere de resposta aparecerá no final de todos os caracteres de resposta já existentes. Caso não exista, o novo caractere de resposta aparecerá na saída após a parte da mensagem do commit, caso não haja uma linha com apenas espaços no final da parte da mensagem do commit, uma linha em branco será adicionada antes do novo caractere de resposta."

#. type: Plain text
#: en/git-interpret-trailers.txt:62
#, priority:100
msgid "Existing trailers are extracted from the input message by looking for a group of one or more lines that (i) is all trailers, or (ii) contains at least one Git-generated or user-configured trailer and consists of at least 25% trailers.  The group must be preceded by one or more empty (or whitespace-only) lines.  The group must either be at the end of the message or be the last non-whitespace lines before a line that starts with '---' (followed by a space or the end of the line). Such three minus signs start the patch part of the message. See also `--no-divider` below."
msgstr "Os caracteres de resposta já existentes são extraídos da mensagem da entrada ao procurar um grupo de uma ou mais linhas onde (i) tenha todos os caracteres de resposta ou (ii) contenha pelo menos um caractere de resposta gerado através do Git ou configurado pelo usuário que consista em pelo menos 25% dos caracteres de resposta.  O grupo deve ser precedido por uma ou mais linhas vazias (ou somente com espaço).  O grupo deve estar no final da mensagem ou ser as últimas linhas que não sejam espaços antes de uma linha que começa com '---' (seguida por um espaço ou o quebra da linha). Estes três sinais de menos (-) iniciam a parte do patch da mensagem. Consulte também a opção `--no-divider` abaixo."

#. type: Plain text
#: en/git-interpret-trailers.txt:69
#, fuzzy, priority:100
#| msgid "When reading trailers, there can be whitespaces after the token, the separator and the value. There can also be whitespaces inside the token and the value. The value may be split over multiple lines with each subsequent line starting with whitespace, like the \"folding\" in RFC 822."
msgid "When reading trailers, there can be no whitespace before or inside the token, but any number of regular space and tab characters are allowed between the token and the separator. There can be whitespaces before, inside or after the value. The value may be split over multiple lines with each subsequent line starting with at least one whitespace, like the \"folding\" in RFC 822."
msgstr "Ao ler os caracteres de resposta, podem haver espaços após o token, o separador e o valor. Também pode haver espaços no token e no valor. O valor pode ser dividido em várias linhas, com cada linha subsequente começando com um espaço, como a descrição \"folding\" (dobra) na norma RFC 822."

#. type: Plain text
#: en/git-interpret-trailers.txt:73
#, priority:100
msgid "Note that 'trailers' do not follow and are not intended to follow many rules for RFC 822 headers. For example they do not follow the encoding rules and probably many other rules."
msgstr "Observe que caracteres de resposta não seguem e não se destinam a seguir muitas regras para os cabeçalhos da norma RFC 822. Por exemplo, eles não seguem as normas de codificação e muito provavelmente não sigam quaisquer outras."

#. type: Labeled list
#: en/git-interpret-trailers.txt:76
#, ignore-same, no-wrap, priority:100
msgid "--in-place"
msgstr "--in-place"

#. type: Plain text
#: en/git-interpret-trailers.txt:78
#, priority:100
msgid "Edit the files in place."
msgstr "Edite os arquivos no local."

#. type: Labeled list
#: en/git-interpret-trailers.txt:79
#, ignore-same, no-wrap, priority:100
msgid "--trim-empty"
msgstr "--trim-empty"

#. type: Plain text
#: en/git-interpret-trailers.txt:83
#, priority:100
msgid "If the <value> part of any trailer contains only whitespace, the whole trailer will be removed from the resulting message.  This applies to existing trailers as well as new trailers."
msgstr "Caso o <valor> da parte de qualquer `caractere de resposta` contenha apenas espaços, o `caractere de resposta` inteiro será removido da mensagem resultante.  Isso se aplica os `caracteres de resposta` já existentes, bem como aos novos `caractere de resposta`."

#. type: Plain text
#: en/git-interpret-trailers.txt:88
#, priority:100
msgid "Specify a (<token>, <value>) pair that should be applied as a trailer to the input messages. See the description of this command."
msgstr "Defina um par (<token>, <valor>) que deve ser aplicado como um caractere de resposta nas mensagens de entrada. Consulte a descrição deste comando."

#. type: Labeled list
#: en/git-interpret-trailers.txt:89
#, no-wrap, priority:100
msgid "--where <placement>"
msgstr "--where <arranjo>"

#. type: Labeled list
#: en/git-interpret-trailers.txt:90
#, ignore-same, no-wrap, priority:100
msgid "--no-where"
msgstr "--no-where"

#. type: Plain text
#: en/git-interpret-trailers.txt:96
#, priority:100
msgid "Specify where all new trailers will be added.  A setting provided with '--where' overrides all configuration variables and applies to all '--trailer' options until the next occurrence of '--where' or '--no-where'. Possible values are `after`, `before`, `end` or `start`."
msgstr "Especifique onde todos os novos caracteres de resposta serão adicionados.  Uma configuração utilizada com '--where' substitui todas as variáveis de configuração e se aplica a todas as opções `--trailer` até a próxima ocorrência de '--where' ou '--no-where'. Os valores válidos são `after`, `before`, `end` or `start`."

#. type: Labeled list
#: en/git-interpret-trailers.txt:97
#, no-wrap, priority:100
msgid "--if-exists <action>"
msgstr "--if-exists <ação>"

#. type: Labeled list
#: en/git-interpret-trailers.txt:98
#, ignore-same, no-wrap, priority:100
msgid "--no-if-exists"
msgstr "--no-if-exists"

#. type: Plain text
#: en/git-interpret-trailers.txt:105
#, priority:100
msgid "Specify what action will be performed when there is already at least one trailer with the same <token> in the message.  A setting provided with '--if-exists' overrides all configuration variables and applies to all '--trailer' options until the next occurrence of '--if-exists' or '--no-if-exists'. Possible actions are `addIfDifferent`, `addIfDifferentNeighbor`, `add`, `replace` and `doNothing`."
msgstr "Defina qual ação será executada quando já houver pelo menos um caractere de resposta com o mesmo <token> na mensagem.  Uma configuração utilizada com '--if-exists' substitui todas as variáveis de configuração e se aplica a todas as opções `--trailer` até a próxima ocorrência do '--if-exists' ou '--no-if-exists'. As possíveis ações são `addIfDifferent`, `addIfDifferentNeighbor`, `add`, `replace` e `doNothing`."

#. type: Labeled list
#: en/git-interpret-trailers.txt:106
#, no-wrap, priority:100
msgid "--if-missing <action>"
msgstr "--if-missing <ação>"

#. type: Labeled list
#: en/git-interpret-trailers.txt:107
#, ignore-same, no-wrap, priority:100
msgid "--no-if-missing"
msgstr "--no-if-missing"

#. type: Plain text
#: en/git-interpret-trailers.txt:114
#, priority:100
msgid "Specify what action will be performed when there is no other trailer with the same <token> in the message.  A setting provided with '--if-missing' overrides all configuration variables and applies to all '--trailer' options until the next occurrence of '--if-missing' or '--no-if-missing'. Possible actions are `doNothing` or `add`."
msgstr "Especifique qual ação será executada quando não houver outro caractere de resposta com o mesmo <token> na mensagem.  Uma configuração utilizada com o comando `--if-missing` substitui todas as variáveis de configuração e se aplica a todas as opções `--trailer` até a próxima ocorrência de `--if-missing` ou `--no-if-missing`. As possíveis ações são `doNothing` ou `add`."

#. type: Labeled list
#: en/git-interpret-trailers.txt:115
#, ignore-same, no-wrap, priority:100
msgid "--only-trailers"
msgstr "--only-trailers"

#. type: Plain text
#: en/git-interpret-trailers.txt:117
#, priority:100
msgid "Output only the trailers, not any other parts of the input."
msgstr "Exibe apenas os caracteres de resposta e não quaisquer outras partes da entrada."

#. type: Labeled list
#: en/git-interpret-trailers.txt:118
#, ignore-same, no-wrap, priority:100
msgid "--only-input"
msgstr "--only-input"

#. type: Plain text
#: en/git-interpret-trailers.txt:122
#, priority:100
msgid "Output only trailers that exist in the input; do not add any from the command-line or by following configured `trailer.*` rules."
msgstr "Exibe apenas os caracteres de resposta que existam na entrada; não adicione qualquer outra linha de comando ou siga as regras `trailer.*` já configuradas."

#. type: Labeled list
#: en/git-interpret-trailers.txt:123
#, ignore-same, no-wrap, priority:100
msgid "--unfold"
msgstr "--unfold"

#. type: Plain text
#: en/git-interpret-trailers.txt:126
#, priority:100
msgid "Remove any whitespace-continuation in trailers, so that each trailer appears on a line by itself with its full content."
msgstr "Remova qualquer continuação de espaço nos caracteres de resposta para que cada caractere apareça numa linha por si só, com o seu conteúdo completo."

#. type: Labeled list
#: en/git-interpret-trailers.txt:127
#, ignore-same, no-wrap, priority:100
msgid "--parse"
msgstr "--parse"

#. type: Plain text
#: en/git-interpret-trailers.txt:130
#, priority:100
msgid "A convenience alias for `--only-trailers --only-input --unfold`."
msgstr "É um atalho conveniente para os comandos `--only-trailers --only-input --unfold`."

#. type: Labeled list
#: en/git-interpret-trailers.txt:131
#, ignore-same, no-wrap, priority:100
msgid "--no-divider"
msgstr "--no-divider"

#. type: Plain text
#: en/git-interpret-trailers.txt:135
#, priority:100
msgid "Do not treat `---` as the end of the commit message. Use this when you know your input contains just the commit message itself (and not an email or the output of `git format-patch`)."
msgstr "Não trate `---` como o final da mensagem de commit. Utilize isso quando souber que a sua entrada tenha apenas a própria mensagem do commit (e não um e-mail ou a saída do `git format-patch`)."

#. type: Labeled list
#: en/git-interpret-trailers.txt:139
#, no-wrap, priority:100
msgid "trailer.separators"
msgstr "trailer.separators"

#. type: Plain text
#: en/git-interpret-trailers.txt:144
#, priority:100
msgid "This option tells which characters are recognized as trailer separators. By default only ':' is recognized as a trailer separator, except that '=' is always accepted on the command line for compatibility with other git commands."
msgstr "Esta opção informa quais os caracteres são reconhecidos como separadores dos caracteres de resposta. É predefinido que apenas o `:` seja reconhecido como um, a menos que `=` seja sempre aceito na linha de comando por questões de compatibilidade com os outros comandos git."

#. type: Plain text
#: en/git-interpret-trailers.txt:148
#, priority:100
msgid "The first character given by this option will be the default character used when another separator is not specified in the config for this trailer."
msgstr "O primeiro caractere informado por esta opção será o caractere predefinido que será utilizado quando um outro separador não seja utilizado na configuração deste `caractere de resposta`."

#. type: Plain text
#: en/git-interpret-trailers.txt:155
#, priority:100
msgid "For example, if the value for this option is \"%=$\", then only lines using the format '<token><sep><value>' with <sep> containing '%', '=' or '$' and then spaces will be considered trailers. And '%' will be the default separator used, so by default trailers will appear like: '<token>% <value>' (one percent sign and one space will appear between the token and the value)."
msgstr "Como por exemplo, caso o valor desta opção seja \"%=$\", apenas as linhas que usam o formato '<token><sep><valor>' com <sep> contendo '%', '=' ou '$' e os espaços, serão considerados `caracteres de resposta`. É predefinido que o sinal '%' será utilizado como um separador; portanto, os caracteres de resposta aparecerão como: '<token>% <valor>' (um sinal de porcentagem e um espaço aparecerão entre token e o valor)."

#. type: Labeled list
#: en/git-interpret-trailers.txt:156
#, no-wrap, priority:100
msgid "trailer.where"
msgstr "trailer.where"

#. type: Plain text
#: en/git-interpret-trailers.txt:158
#, priority:100
msgid "This option tells where a new trailer will be added."
msgstr "Esta opção informa onde um novo caractere de resposta será adicionado."

#. type: Plain text
#: en/git-interpret-trailers.txt:160
#, priority:100
msgid "This can be `end`, which is the default, `start`, `after` or `before`."
msgstr "Pode ser `end` (pré definido),` start`, `after` ou` before`."

#. type: Plain text
#: en/git-interpret-trailers.txt:163
#, priority:100
msgid "If it is `end`, then each new trailer will appear at the end of the existing trailers."
msgstr "Caso seja `end`, então cada novo caractere de resposta aparecerá no final dos caracteres de resposta já existentes."

#. type: Plain text
#: en/git-interpret-trailers.txt:166
#, priority:100
msgid "If it is `start`, then each new trailer will appear at the start, instead of the end, of the existing trailers."
msgstr "Caso seja `start`, cada novo caractere de resposta aparecerá no início, e não no final, dos caracteres de resposta já existentes."

#. type: Plain text
#: en/git-interpret-trailers.txt:169
#, priority:100
msgid "If it is `after`, then each new trailer will appear just after the last trailer with the same <token>."
msgstr "Caso seja `after` , cada novo caractere de resposta aparecerá logo após o último caractere de resposta com o mesmo <token>."

#. type: Plain text
#: en/git-interpret-trailers.txt:172
#, priority:100
msgid "If it is `before`, then each new trailer will appear just before the first trailer with the same <token>."
msgstr "Caso seja `before`, então cada novo caractere de resposta aparecerá logo no começo do primeiro caractere de resposta com o mesmo <token>."

#. type: Labeled list
#: en/git-interpret-trailers.txt:173
#, no-wrap, priority:100
msgid "trailer.ifexists"
msgstr "trailer.ifexists"

#. type: Plain text
#: en/git-interpret-trailers.txt:177
#, priority:100
msgid "This option makes it possible to choose what action will be performed when there is already at least one trailer with the same <token> in the message."
msgstr "Essa opção permite escolher qual ação será executada quando já houver pelo menos um caractere de resposta com o mesmo <token> na mensagem."

#. type: Plain text
#: en/git-interpret-trailers.txt:180
#, priority:100
msgid "The valid values for this option are: `addIfDifferentNeighbor` (this is the default), `addIfDifferent`, `add`, `replace` or `doNothing`."
msgstr "Os valores válidos para esta opção são: `addIfDifferentNeighbor` (predefinido), `addIfDifferent`, `add`, `replace` ou `doNothing`."

#. type: Plain text
#: en/git-interpret-trailers.txt:184
#, priority:100
msgid "With `addIfDifferentNeighbor`, a new trailer will be added only if no trailer with the same (<token>, <value>) pair is above or below the line where the new trailer will be added."
msgstr "Com `addIfDifferentNeighbor`, um novo caractere de resposta será adicionado apenas caso nenhum com o mesmo par (<token>,<valor>) esteja acima ou abaixo da linha onde o novo caractere de resposta será adicionado."

#. type: Plain text
#: en/git-interpret-trailers.txt:187
#, priority:100
msgid "With `addIfDifferent`, a new trailer will be added only if no trailer with the same (<token>, <value>) pair is already in the message."
msgstr "Com `addIfDifferent`, um novo caractere de resposta será adicionado apenas caso nenhum com o mesmo par (<token>,<valor>) já esteja na mensagem."

#. type: Plain text
#: en/git-interpret-trailers.txt:190
#, priority:100
msgid "With `add`, a new trailer will be added, even if some trailers with the same (<token>, <value>) pair are already in the message."
msgstr "Com `add`, um novo caractere de resposta será adicionado mesmo que alguns com o mesmo par (<token>,<valor>) já estejam na mensagem."

#. type: Plain text
#: en/git-interpret-trailers.txt:195
#, priority:100
msgid "With `replace`, an existing trailer with the same <token> will be deleted and the new trailer will be added. The deleted trailer will be the closest one (with the same <token>) to the place where the new one will be added."
msgstr "Com `replace`, um caractere de resposta existente com a mesmo <token> será excluído e um novo será adicionado. O caractere de resposta excluído será o mais próximo (com o mesmo <token>) do local onde o novo será adicionado."

#. type: Plain text
#: en/git-interpret-trailers.txt:198
#, priority:100
msgid "With `doNothing`, nothing will be done; that is no new trailer will be added if there is already one with the same <token> in the message."
msgstr "Com `doNothing`, nada será feito; isso é, nenhum novo caractere de resposta será adicionado caso já haja um com o mesmo <token> na mensagem."

#. type: Labeled list
#: en/git-interpret-trailers.txt:199
#, no-wrap, priority:100
msgid "trailer.ifmissing"
msgstr "trailer.ifmissing"

#. type: Plain text
#: en/git-interpret-trailers.txt:203
#, priority:100
msgid "This option makes it possible to choose what action will be performed when there is not yet any trailer with the same <token> in the message."
msgstr "Esta opção possibilita escolher qual ação será executada quando ainda não houver nenhum \"caractere de resposta\" com o mesmo `<token>` na mensagem."

#. type: Plain text
#: en/git-interpret-trailers.txt:206
#, priority:100
msgid "The valid values for this option are: `add` (this is the default) and `doNothing`."
msgstr "Os valores válidos para esta opção são: `add` (o valor predefinido) e `doNothing`."

#. type: Plain text
#: en/git-interpret-trailers.txt:208
#, priority:100
msgid "With `add`, a new trailer will be added."
msgstr "Com `add`, um novo caractere de resposta será adicionado."

#. type: Plain text
#: en/git-interpret-trailers.txt:210
#, priority:100
msgid "With `doNothing`, nothing will be done."
msgstr "Com `doNothing`, nada será feito."

#. type: Labeled list
#: en/git-interpret-trailers.txt:211
#, no-wrap, priority:100
msgid "trailer.<token>.key"
msgstr "trailer.<token>.key"

#. type: Plain text
#: en/git-interpret-trailers.txt:217
#, priority:100
msgid "This `key` will be used instead of <token> in the trailer. At the end of this key, a separator can appear and then some space characters. By default the only valid separator is ':', but this can be changed using the `trailer.separators` config variable."
msgstr "Esta `key` será utilizada em vez do <token> no caractere de resposta. No final desta chave, um separador pode aparecer e em seguida, alguns caracteres de espaço. É predefinido que o único separador válido seja ':', mas isso pode ser alterado utilizando a variável de configuração `trailer.separators`."

#. type: Plain text
#: en/git-interpret-trailers.txt:220
#, priority:100
msgid "If there is a separator, then the key will be used instead of both the <token> and the default separator when adding the trailer."
msgstr "Caso haja um separador, a chave será utilizada no lugar do <token> e do separador predefinido ao adicionar o caractere de resposta."

#. type: Labeled list
#: en/git-interpret-trailers.txt:221
#, no-wrap, priority:100
msgid "trailer.<token>.where"
msgstr "trailer.<token>.where"

#. type: Plain text
#: en/git-interpret-trailers.txt:225
#, priority:100
msgid "This option takes the same values as the 'trailer.where' configuration variable and it overrides what is specified by that option for trailers with the specified <token>."
msgstr "Esta opção utiliza os mesmos valores da variável de configuração 'trailer.where' e substitui o que for especificado por essa opção para os caracteres de resposta com o `<token>` determinado."

#. type: Labeled list
#: en/git-interpret-trailers.txt:226
#, no-wrap, priority:100
msgid "trailer.<token>.ifexists"
msgstr "trailer.<token>.ifexists"

#. type: Plain text
#: en/git-interpret-trailers.txt:230
#, priority:100
msgid "This option takes the same values as the 'trailer.ifexists' configuration variable and it overrides what is specified by that option for trailers with the specified <token>."
msgstr "Essa opção utiliza os mesmos valores que a variável de configuração 'trailer.ifexists' e substitui o que for definido por esta opção para os caracteres de resposta com o <token> informado."

#. type: Labeled list
#: en/git-interpret-trailers.txt:231
#, no-wrap, priority:100
msgid "trailer.<token>.ifmissing"
msgstr "trailer.<token>.ifmissing"

#. type: Plain text
#: en/git-interpret-trailers.txt:235
#, priority:100
msgid "This option takes the same values as the 'trailer.ifmissing' configuration variable and it overrides what is specified by that option for trailers with the specified <token>."
msgstr "Esta opção utiliza os mesmos valores que a variável de configuração 'trailer.ifmissing' e substitui o que for definido por esta opção para os caracteres de resposta com o <token> informado."

#. type: Labeled list
#: en/git-interpret-trailers.txt:236
#, no-wrap, priority:100
msgid "trailer.<token>.command"
msgstr "trailer.<token>.command"

#. type: Plain text
#: en/git-interpret-trailers.txt:241
#, priority:100
msgid "This option behaves in the same way as 'trailer.<token>.cmd', except that it doesn't pass anything as argument to the specified command.  Instead the first occurrence of substring $ARG is replaced by the value that would be passed as argument."
msgstr "Esta opção se comporta da mesma maneira que o 'trailer.<token>.cmd', exceto que nada é oferecido como argumento para o comando informado.  Em vez disso, a primeira ocorrência da substring $ARG é substituída pelo valor que seria passado como argumento."

#. type: Plain text
#: en/git-interpret-trailers.txt:245
#, priority:100
msgid "The 'trailer.<token>.command' option has been deprecated in favor of 'trailer.<token>.cmd' due to the fact that $ARG in the user's command is only replaced once and that the original way of replacing $ARG is not safe."
msgstr "A opção 'trailer.<token>.command' foi substituída por 'trailer.<token>.cmd' pois o $ARG no comando do usuário ser substituído apenas uma vez e a maneira anterior de se substituir o $ARG não era segura."

#. type: Plain text
#: en/git-interpret-trailers.txt:249
#, priority:100
msgid "When both 'trailer.<token>.cmd' and 'trailer.<token>.command' are given for the same <token>, 'trailer.<token>.cmd' is used and 'trailer.<token>.command' is ignored."
msgstr "Quando ambos 'trailer.<token>.cmd' e 'trailer.<token>.command' são oferecidos para o mesmo <token>, o 'trailer.<token>.cmd' é usado e o 'trailer.<token>.command' é ignorado."

#. type: Labeled list
#: en/git-interpret-trailers.txt:250
#, no-wrap, priority:100
msgid "trailer.<token>.cmd"
msgstr "trailer.<token>.cmd"

#. type: Plain text
#: en/git-interpret-trailers.txt:255
#, priority:100
msgid "This option can be used to specify a shell command that will be called: once to automatically add a trailer with the specified <token>, and then each time a '--trailer <token>=<value>' argument to modify the <value> of the trailer that this option would produce."
msgstr "Esta opção pode ser usada para definir um comando shell que será invocado: uma vez para adicionar um atrelado de forma automática com o <token> informado e, a seguir, a cada opção '--trailer <token>=<valor>' para alterar o <valor> do atrelado que esta opção produziria."

#. type: Plain text
#: en/git-interpret-trailers.txt:262
#, priority:100
msgid "When the specified command is first called to add a trailer with the specified <token>, the behavior is as if a special '--trailer <token>=<value>' argument was added at the beginning of the \"git interpret-trailers\" command, where <value> is taken to be the standard output of the command with any leading and trailing whitespace trimmed off."
msgstr "Quando o comando informado é chamado pela primeira vez para adicionar um atrelado com o <token> definido, o comportamento é como se um argumento especial '--trailer <token>=<valor>' fosse adicionado no início do comando \"git interpret-trailers\", onde o <valor> é considerado a saída padrão do comando com qualquer espaço em branco eliminado à esquerda e à direita."

#. type: Plain text
#: en/git-interpret-trailers.txt:269
#, priority:100
msgid "If some '--trailer <token>=<value>' arguments are also passed on the command line, the command is called again once for each of these arguments with the same <token>. And the <value> part of these arguments, if any, will be passed to the command as its first argument. This way the command can produce a <value> computed from the <value> passed in the '--trailer <token>=<value>' argument."
msgstr "Caso algumas opção '--trailer <token>=<valor>' também sejam passadosna linha de comando, o comando é invocado novamente uma vez para cada um destes argumentos que tenham o mesmo <token>. E a parte <valor> desses argumentos, caso hajam, será passada ao comando como sendo o seu primeiro argumento. Desta forma, o comando pode produzir um <valor> calculado a partir do <valor> informado na opção '--trailer <token>=<valor>'."

#. type: Plain text
#: en/git-interpret-trailers.txt:275
#, priority:100
msgid "Configure a 'sign' trailer with a 'Signed-off-by' key, and then add two of these trailers to a message:"
msgstr "Configure um caractere de resposta 'sign' com uma chave 'Assinada por' (Signed-off-by) e adicione dois destes caracteres de resposta numa mensagem:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:280
#, no-wrap, priority:100
msgid ""
"$ git config trailer.sign.key \"Signed-off-by\"\n"
"$ cat msg.txt\n"
"subject\n"
msgstr ""
"$ git config trailer.sign.key \"Assinado-por\"\n"
"$ cat msg.txt\n"
"subject\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:284
#, no-wrap, priority:100
msgid ""
"message\n"
"$ cat msg.txt | git interpret-trailers --trailer 'sign: Alice <alice@example.com>' --trailer 'sign: Bob <bob@example.com>'\n"
"subject\n"
msgstr ""
"message\n"
"$ cat msg.txt | git interpret-trailers --trailer 'sign: Alice <alice@example.com>' --trailer 'sign: Bob <bob@example.com>'\n"
"subject\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:286 en/git-interpret-trailers.txt:298 en/git-interpret-trailers.txt:305 en/git-interpret-trailers.txt:371 en/git-interpret-trailers.txt:396 en/git-interpret-trailers.txt:418
#, no-wrap, priority:100
msgid "message\n"
msgstr "mensagem\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:289
#, no-wrap, priority:100
msgid ""
"Signed-off-by: Alice <alice@example.com>\n"
"Signed-off-by: Bob <bob@example.com>\n"
msgstr ""
"Assinado-por: Alice <alice@example.com>\n"
"Assinado-por: Bob <bob@example.com>\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:292
#, priority:100
msgid "Use the `--in-place` option to edit a message file in place:"
msgstr "Utilize a opção `- in-place` para editar um arquivo da mensagem no local:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:296
#, no-wrap, priority:100
msgid ""
"$ cat msg.txt\n"
"subject\n"
msgstr ""
"$ cat msg.txt\n"
"subject\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:303
#, no-wrap, priority:100
msgid ""
"Signed-off-by: Bob <bob@example.com>\n"
"$ git interpret-trailers --trailer 'Acked-by: Alice <alice@example.com>' --in-place msg.txt\n"
"$ cat msg.txt\n"
"subject\n"
msgstr ""
"Assinado-por: Bob <bob@example.com>\n"
"$ git interpret-trailers --trailer 'Acked-by: Alice <alice@example.com>' --in-place msg.txt\n"
"$ cat msg.txt\n"
"subject\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:308
#, no-wrap, priority:100
msgid ""
"Signed-off-by: Bob <bob@example.com>\n"
"Acked-by: Alice <alice@example.com>\n"
msgstr ""
"Assinado-por: Bob <bob@example.com>\n"
"Reconhecido-por: Alice <alice@example.com>\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:312
#, priority:100
msgid "Extract the last commit as a patch, and add a 'Cc' and a 'Reviewed-by' trailer to it:"
msgstr "Extraia o último commit como um patch e adicione um caractere de resposta 'Cc' com um 'Revisado por' a ele:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:317
#, no-wrap, priority:100
msgid ""
"$ git format-patch -1\n"
"0001-foo.patch\n"
"$ git interpret-trailers --trailer 'Cc: Alice <alice@example.com>' --trailer 'Reviewed-by: Bob <bob@example.com>' 0001-foo.patch >0001-bar.patch\n"
msgstr ""
"$ git format-patch -1\n"
"0001-foo.patch\n"
"$ git interpret-trailers --trailer 'Cc: Alice <alice@example.com>' --trailer 'Reviewed-by: Bob <bob@example.com>' 0001-foo.patch >0001-bar.patch\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:322
#, priority:100
msgid "Configure a 'sign' trailer with a command to automatically add a 'Signed-off-by: ' with the author information only if there is no 'Signed-off-by: ' already, and show how it works:"
msgstr "Configure um caractere de resposta 'sign' com um comando para adicionar automaticamente um 'Assinado-por:' com as informações do autor apenas se ainda não houver um 'Assinado-por:' e exiba como ele funciona:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:330
#, no-wrap, priority:100
msgid ""
"$ git config trailer.sign.key \"Signed-off-by: \"\n"
"$ git config trailer.sign.ifmissing add\n"
"$ git config trailer.sign.ifexists doNothing\n"
"$ git config trailer.sign.command 'echo \"$(git config user.name) <$(git config user.email)>\"'\n"
"$ git interpret-trailers <<EOF\n"
"> EOF\n"
msgstr ""
"$ git config trailer.sign.key \"Assinado-por: \"\n"
"$ git config trailer.sign.ifmissing add\n"
"$ git config trailer.sign.ifexists doNothing\n"
"$ git config trailer.sign.command 'echo \"$(git config user.name) <$(git config user.email)>\"'\n"
"$ git interpret-trailers <<EOF\n"
"> EOF\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:335
#, no-wrap, priority:100
msgid ""
"Signed-off-by: Bob <bob@example.com>\n"
"$ git interpret-trailers <<EOF\n"
"> Signed-off-by: Alice <alice@example.com>\n"
"> EOF\n"
msgstr ""
"Assinado-por: Bob <bob@example.com>\n"
"$ git interpret-trailers <<EOF\n"
"> Signed-off-by: Alice <alice@example.com>\n"
"> EOF\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:337
#, no-wrap, priority:100
msgid "Signed-off-by: Alice <alice@example.com>\n"
msgstr "Assinado-por: Alice <alice@example.com>\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:341
#, priority:100
msgid "Configure a 'fix' trailer with a key that contains a '#' and no space after this character, and show how it works:"
msgstr "Configure um caracteres de resposta 'fix' com uma chave que contenha um '#', sem espaço após este caractere e mostre como ele funciona:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:347
#, no-wrap, priority:100
msgid ""
"$ git config trailer.separators \":#\"\n"
"$ git config trailer.fix.key \"Fix #\"\n"
"$ echo \"subject\" | git interpret-trailers --trailer fix=42\n"
"subject\n"
msgstr ""
"$ git config trailer.separators \":#\"\n"
"$ git config trailer.fix.key \"Fix #\"\n"
"$ echo \"subject\" | git interpret-trailers --trailer fix=42\n"
"subject\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:349
#, no-wrap, priority:100
msgid "Fix #42\n"
msgstr "Fix #42\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:354
#, priority:100
msgid "Configure a 'help' trailer with a cmd use a script `glog-find-author` which search specified author identity from git log in git repository and show how it works:"
msgstr "Configure um atrelado de 'ajuda' com um cmd usando um script `glog-find-author` que pesquisa a identidade do autor informado no log do git no repositório e mostre como funciona:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:369
#, no-wrap, priority:100
msgid ""
"$ cat ~/bin/glog-find-author\n"
"#!/bin/sh\n"
"test -n \"$1\" && git log --author=\"$1\" --pretty=\"%an <%ae>\" -1 || true\n"
"$ git config trailer.help.key \"Helped-by: \"\n"
"$ git config trailer.help.ifExists \"addIfDifferentNeighbor\"\n"
"$ git config trailer.help.cmd \"~/bin/glog-find-author\"\n"
"$ git interpret-trailers --trailer=\"help:Junio\" --trailer=\"help:Couder\" <<EOF\n"
"> subject\n"
">\n"
"> message\n"
">\n"
"> EOF\n"
"subject\n"
msgstr ""
"$ cat ~/bin/glog-find-author\n"
"#!/bin/sh\n"
"test -n \"$1\" && git log --author=\"$1\" --pretty=\"%an <%ae>\" -1 || true\n"
"$ git config trailer.help.key \"Auxiliado por: \"\n"
"$ git config trailer.help.ifExists \"addIfDifferentNeighbor\"\n"
"$ git config trailer.help.cmd \"~/bin/glog-find-author\"\n"
"$ git interpret-trailers --trailer=\"help:Junio\" --trailer=\"help:Couder\" <<EOF\n"
"> assunto\n"
">\n"
"> mensagem\n"
">\n"
"> EOF\n"
"assunto\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:374
#, no-wrap, priority:100
msgid ""
"Helped-by: Junio C Hamano <gitster@pobox.com>\n"
"Helped-by: Christian Couder <christian.couder@gmail.com>\n"
msgstr ""
"Auxiliado por: Junio C Hamano <gitster@pobox.com>\n"
"Auxiliado por: Christian Couder <christian.couder@gmail.com>\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:379
#, priority:100
msgid "Configure a 'ref' trailer with a cmd use a script `glog-grep` to grep last relevant commit from git log in the git repository and show how it works:"
msgstr "Configure um atrelado 'ref' com um cmd, use um script `glog-grep` para fazer um \"grep\" (captura) do último commit relevante do log do git no repositório e mostre como funciona:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:394
#, no-wrap, priority:100
msgid ""
"$ cat ~/bin/glog-grep\n"
"#!/bin/sh\n"
"test -n \"$1\" && git log --grep \"$1\" --pretty=reference -1 || true\n"
"$ git config trailer.ref.key \"Reference-to: \"\n"
"$ git config trailer.ref.ifExists \"replace\"\n"
"$ git config trailer.ref.cmd \"~/bin/glog-grep\"\n"
"$ git interpret-trailers --trailer=\"ref:Add copyright notices.\" <<EOF\n"
"> subject\n"
">\n"
"> message\n"
">\n"
"> EOF\n"
"subject\n"
msgstr ""
"$ cat ~/bin/glog-grep\n"
"#!/bin/sh\n"
"test -n \"$1\" && git log --grep \"$1\" --pretty=reference -1 || true\n"
"$ git config trailer.ref.key \"Referência para: \"\n"
"$ git config trailer.ref.ifExists \"substitua\"\n"
"$ git config trailer.ref.cmd \"~/bin/glog-grep\"\n"
"$ git interpret-trailers --trailer=\"ref:Add copyright notices.\" <<EOF\n"
"> assunto\n"
">\n"
"> mensagem\n"
">\n"
"> EOF\n"
"assunto\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:398
#, no-wrap, priority:100
msgid "Reference-to: 8bc9a0c769 (Add copyright notices., 2005-04-07)\n"
msgstr "Refere-se ao: 8bc9a0c769 (Adicionado avisos de ireitos autorais., 2005-04-07)\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:402
#, priority:100
msgid "Configure a 'see' trailer with a command to show the subject of a commit that is related, and show how it works:"
msgstr "Configure um caractere de resposta 'see' com um comando para exibir o assunto de um commit relacionado e exibir como ele funciona:"

#. type: delimited block -
#: en/git-interpret-trailers.txt:416
#, no-wrap, priority:100
msgid ""
"$ git config trailer.see.key \"See-also: \"\n"
"$ git config trailer.see.ifExists \"replace\"\n"
"$ git config trailer.see.ifMissing \"doNothing\"\n"
"$ git config trailer.see.command \"git log -1 --oneline --format=\\\"%h (%s)\\\" --abbrev-commit --abbrev=14 \\$ARG\"\n"
"$ git interpret-trailers <<EOF\n"
"> subject\n"
"> \n"
"> message\n"
"> \n"
"> see: HEAD~2\n"
"> EOF\n"
"subject\n"
msgstr ""
"$ git config trailer.see.key \"See-also: \"\n"
"$ git config trailer.see.ifExists \"replace\"\n"
"$ git config trailer.see.ifMissing \"doNothing\"\n"
"$ git config trailer.see.command \"git log -1 --oneline --format=\\\"%h (%s)\\\" --abbrev-commit --abbrev=14 \\$ARG\"\n"
"$ git interpret-trailers <<EOF\n"
"> subject\n"
"> \n"
"> message\n"
"> \n"
"> see: HEAD~2\n"
"> EOF\n"
"subject\n"

#. type: delimited block -
#: en/git-interpret-trailers.txt:420
#, no-wrap, priority:100
msgid "See-also: fe3187489d69c4 (subject of related commit)\n"
msgstr "See-also: fe3187489d69c4 (assunto do commit relacionado)\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:427
#, priority:100
msgid "Configure a commit template with some trailers with empty values (using sed to show and keep the trailing spaces at the end of the trailers), then configure a commit-msg hook that uses 'git interpret-trailers' to remove trailers with empty values and to add a 'git-version' trailer:"
msgstr "Configure um modelo do commit com alguns caracteres de resposta com valores vazios (utilizando o comando sed para exibir e manter os espaços finais no final dos caracteres de resposta) e configure um gancho 'commit-msg' que utilize o comando 'git interpret-trailers' para remover os caracteres de resposta com os valores vazios e para adicionar um 'git-version':"

#. type: delimited block -
#: en/git-interpret-trailers.txt:446
#, no-wrap, priority:100
msgid ""
"$ sed -e 's/ Z$/ /' >commit_template.txt <<EOF\n"
"> ***subject***\n"
"> \n"
"> ***message***\n"
"> \n"
"> Fixes: Z\n"
"> Cc: Z\n"
"> Reviewed-by: Z\n"
"> Signed-off-by: Z\n"
"> EOF\n"
"$ git config commit.template commit_template.txt\n"
"$ cat >.git/hooks/commit-msg <<EOF\n"
"> #!/bin/sh\n"
"> git interpret-trailers --trim-empty --trailer \"git-version: \\$(git describe)\" \"\\$1\" > \"\\$1.new\"\n"
"> mv \"\\$1.new\" \"\\$1\"\n"
"> EOF\n"
"$ chmod +x .git/hooks/commit-msg\n"
msgstr ""
"$ sed -e 's/ Z$/ /' >commit_template.txt <<EOF\n"
"> ***assunto***\n"
"> \n"
"> ***mensagem***\n"
"> \n"
"> Fixes: Z\n"
"> Cc: Z\n"
"> Revisado-por: Z\n"
"> Assinado-por: Z\n"
"> EOF\n"
"$ git config commit.template commit_template.txt\n"
"$ cat >.git/hooks/commit-msg <<EOF\n"
"> #!/bin/sh\n"
"> git interpret-trailers --trim-empty --trailer \"git-version: \\$(git describe)\" \"\\$1\" > \"\\$1.new\"\n"
"> mv \"\\$1.new\" \"\\$1\"\n"
"> EOF\n"
"$ chmod +x .git/hooks/commit-msg\n"

#. type: Plain text
#: en/git-interpret-trailers.txt:451
#, ignore-same, priority:100
msgid "linkgit:git-commit[1], linkgit:git-format-patch[1], linkgit:git-config[1]"
msgstr "linkgit:git-commit[1], linkgit:git-format-patch[1], linkgit:git-config[1]"

#. type: Title =
#: en/git-log.txt:2
#, ignore-same, no-wrap, priority:260
msgid "git-log(1)"
msgstr "git-log(1)"

#. type: Plain text
#: en/git-log.txt:7
#, priority:260
msgid "git-log - Show commit logs"
msgstr "git-log - Exibe os registros log do commit"

#. type: Plain text
#: en/git-log.txt:13
#, ignore-ellipsis, no-wrap, priority:260
msgid "'git log' [<options>] [<revision-range>] [[--] <path>...]\n"
msgstr "'git log' [<opções>] [<intervalo-das-revisões>] [[--] <caminho>...]\n"

#. type: Plain text
#: en/git-log.txt:17
#, priority:260
msgid "Shows the commit logs."
msgstr "Exibe os registros log do commit."

#. type: Plain text
#: en/git-log.txt:25
#, priority:260
msgid "The command takes options applicable to the linkgit:git-rev-list[1] command to control what is shown and how, and options applicable to the linkgit:git-diff[1] command to control how the changes each commit introduces are shown."
msgstr "O comando aceita as opções aplicáveis ao comando linkgit:git-rev-list[1] para controlar o que é exibido e como. As opções aplicáveis ao comando linkgit:git-diff[1] serve para controlar como as alterações que cada commit faz são exibidas."

#. type: Labeled list
#: en/git-log.txt:30
#, ignore-same, no-wrap, priority:260
msgid "--follow"
msgstr "--follow"

#. type: Plain text
#: en/git-log.txt:33
#, priority:260
msgid "Continue listing the history of a file beyond renames (works only for a single file)."
msgstr "Continue listando o histórico de um arquivo além de o renomear (funciona apenas para um único arquivo)."

#. type: Labeled list
#: en/git-log.txt:34
#, ignore-same, no-wrap, priority:260
msgid "--no-decorate"
msgstr "--no-decorate"

#. type: Labeled list
#: en/git-log.txt:35
#, no-wrap, priority:260
msgid "--decorate[=short|full|auto|no]"
msgstr "--decorate[=short|full|auto|no]"

#. type: Plain text
#: en/git-log.txt:45
#, priority:260
msgid "Print out the ref names of any commits that are shown. If 'short' is specified, the ref name prefixes 'refs/heads/', 'refs/tags/' and 'refs/remotes/' will not be printed. If 'full' is specified, the full ref name (including prefix) will be printed. If 'auto' is specified, then if the output is going to a terminal, the ref names are shown as if 'short' were given, otherwise no ref names are shown. The option `--decorate` is short-hand for `--decorate=short`.  Default to configuration value of `log.decorate` if configured, otherwise, `auto`."
msgstr "Exiba os nomes das refs de quaisquer commits que estão sendo exibidos. Caso `short` seja definido, os prefixos do nome das refs `refs/heads/`, `refs/tags/` e `refs/remotes/` não serão exibidas. Já se `full` for definido, o nome completo da \"ref\" (incluindo o prefixo) será exibida. Se 'auto' for definido e se a saída seja para um terminal, os nomes das referências serão exibidas como se a opção 'short' tenha sido utilizada, caso contrário, nenhuma referência de nome será exibida. A opção `--decorate` é um atalho para `--decorate=short`. Caso seja configurado, o valor de `log.decorate` é utilizado, caso contrário a predefinição é `auto`."

#. type: Labeled list
#: en/git-log.txt:46
#, no-wrap, priority:260
msgid "--decorate-refs=<pattern>"
msgstr "--decorate-refs=<padrão>"

#. type: Labeled list
#: en/git-log.txt:47
#, no-wrap, priority:260
msgid "--decorate-refs-exclude=<pattern>"
msgstr "--decorate-refs-exclude=<padrão>"

#. type: Plain text
#: en/git-log.txt:54
#, fuzzy, priority:260
#| msgid "If no `--decorate-refs` is given, pretend as if all refs were included.  For each candidate, do not use it for decoration if it matches any patterns given to `--decorate-refs-exclude` or if it doesn't match any of the patterns given to `--decorate-refs`. The `log.excludeDecoration` config option allows excluding refs from the decorations, but an explicit `--decorate-refs` pattern will override a match in `log.excludeDecoration`."
msgid "For each candidate reference, do not use it for decoration if it matches any patterns given to `--decorate-refs-exclude` or if it doesn't match any of the patterns given to `--decorate-refs`. The `log.excludeDecoration` config option allows excluding refs from the decorations, but an explicit `--decorate-refs` pattern will override a match in `log.excludeDecoration`."
msgstr "caso nenhuma opção `--decorate-refs` seja utilizada, finja que todos as refs foram incluídas.  Para cada candidato, não o use para decoração caso ele coincida com algum padrão fornecido para a opção `--decorate-refs-exclude` ou caso não coincida com nenhum padrão fornecido para `--decorate-refs`. A opção de configuração `log.excludeDecoration` permite excluir as refs das decorações, porém um padrão explícito `--decorate-refs` será substituida caso coincida com `log.excludeDecoration`."

#. type: Plain text
#: en/git-log.txt:58
#, priority:260
msgid "If none of these options or config settings are given, then references are used as decoration if they match `HEAD`, `refs/heads/`, `refs/remotes/`, `refs/stash/`, or `refs/tags/`."
msgstr ""

#. type: Labeled list
#: en/git-log.txt:59
#, ignore-same, no-wrap, priority:260
msgid "--clear-decorations"
msgstr "--clear-decorations"

#. type: Plain text
#: en/git-log.txt:65
#, priority:260
msgid "When specified, this option clears all previous `--decorate-refs` or `--decorate-refs-exclude` options and relaxes the default decoration filter to include all references. This option is assumed if the config value `log.initialDecorationSet` is set to `all`."
msgstr ""

#. type: Labeled list
#: en/git-log.txt:66
#, ignore-same, no-wrap, priority:260
msgid "--source"
msgstr "--source"

#. type: Plain text
#: en/git-log.txt:69
#, priority:260
msgid "Print out the ref name given on the command line by which each commit was reached."
msgstr "Exiba na tela o nome \"ref\" utilizado na linha de comando pela qual cada commit foi alcançado."

#. type: Plain text
#: en/git-log.txt:75
#, priority:260
msgid "Use mailmap file to map author and committer names and email addresses to canonical real names and email addresses. See linkgit:git-shortlog[1]."
msgstr "Utilize o arquivo mailmap para mapear os nomes dos autores dos commits e seus endereços de e-mail para nomes e endereços de e-mail reais canônicos. Consulte linkgit:git-shortlog[1]."

#. type: Labeled list
#: en/git-log.txt:76
#, ignore-same, no-wrap, priority:260
msgid "--full-diff"
msgstr "--full-diff"

#. type: Plain text
#: en/git-log.txt:82
#, ignore-ellipsis, priority:260
msgid "Without this flag, `git log -p <path>...` shows commits that touch the specified paths, and diffs about the same specified paths.  With this, the full diff is shown for commits that touch the specified paths; this means that \"<path>...\" limits only commits, and doesn't limit diff for those commits."
msgstr "Sem esta opção, o comando `git log -p <caminho> ...` exibe os commits que tocam os caminhos informados e os \"diffs\" sobre os mesmos caminhos.  Com isso, o \"diff\" completo é exibido para os commits que tocam nos caminhos informados; significa que o \"<caminho> ...\" limita apenas os commits, não limita o \"diff\" para estes commits."

#. type: Plain text
#: en/git-log.txt:85
#, priority:260
msgid "Note that this affects all diff-based output types, e.g. those produced by `--stat`, etc."
msgstr "Observe que isso afeta todos os tipos de saída baseados em \"diff\", por exemplo os produzidos pelas opções `--stat`, etc."

#. type: Labeled list
#: en/git-log.txt:86
#, ignore-same, no-wrap, priority:260
msgid "--log-size"
msgstr "--log-size"

#. type: Plain text
#: en/git-log.txt:91
#, priority:260
msgid "Include a line ``log size <number>'' in the output for each commit, where <number> is the length of that commit's message in bytes.  Intended to speed up tools that read log messages from `git log` output by allowing them to allocate space in advance."
msgstr "Inclua uma linha ``log size <número>'' na saída para cada commit, onde o <número> é o comprimento da mensagem deste commit em bytes.  Destina-se a acelerar as ferramentas que leem as mensagens a partir do comando `git log` para alocar espaço antecipadamente."

#. type: Labeled list
#: en/git-log.txt:94 en/git-shortlog.txt:92
#, no-wrap, priority:260
msgid "<revision-range>"
msgstr "<intervalo-da-revisão>"

#. type: Plain text
#: en/git-log.txt:102
#, priority:260
msgid "Show only commits in the specified revision range.  When no <revision-range> is specified, it defaults to `HEAD` (i.e. the whole history leading to the current commit).  `origin..HEAD` specifies all the commits reachable from the current commit (i.e. `HEAD`), but not from `origin`. For a complete list of ways to spell <revision-range>, see the 'Specifying Ranges' section of linkgit:gitrevisions[7]."
msgstr "Exibe apenas os commits no intervalo definido das revisões.  Quando um <intervalo-da-revisão> não é definido, a predefinição retorna para `HEAD` (ou seja, todo o histórico que leva ao commit atual).  O `origin..HEAD` define todos os commits acessíveis a partir do commit atual (ou seja, `HEAD`), porém não a partir do `origin`. Para obter uma lista mais completa de maneiras de soletrar o <intervalo-da-revisão>, consulte a seção \"DEFININDO OS INTERVALOS\" no linkgit:gitrevisions[7]."

#. type: Labeled list
#: en/git-log.txt:103 en/git-shortlog.txt:101
#, ignore-ellipsis, no-wrap, priority:260
msgid "[--] <path>..."
msgstr "[--] <caminho>..."

#. type: Plain text
#: en/git-log.txt:108
#, priority:260
msgid "Show only commits that are enough to explain how the files that match the specified paths came to be.  See 'History Simplification' below for details and other simplification modes."
msgstr "Exiba apenas os commits que sejam suficientes para explicar como os arquivos que coincidam com os caminhos informados foram criados.  Consulte 'Simplificação do Histórico' abaixo para obter mais detalhes e para conhecer os outros modos de simplificação."

#. type: Plain text
#: en/git-log.txt:111 en/git-shortlog.txt:107
#, priority:260
msgid "Paths may need to be prefixed with `--` to separate them from options or the revision range, when confusion arises."
msgstr "Os caminhos podem precisar ser prefixados com um `--` para separá-los das opções ou do intervalo de revisões, quando um conflito surgir."

#. type: Title -
#: en/git-log.txt:117 en/git-show.txt:49
#, no-wrap, priority:260
msgid "DIFF FORMATTING"
msgstr "FORMATAÇÃO DIFF"

#. type: Plain text
#: en/git-log.txt:121
#, priority:260
msgid "By default, `git log` does not generate any diff output. The options below can be used to show the changes made by each commit."
msgstr "Por predefinição, o comando `git log` não gera qualquer diff. As opções abaixo podem ser usadas para exibir as alterações feitas por cada commit."

#. type: Plain text
#: en/git-log.txt:128
#, priority:260
msgid "Note that unless one of `--diff-merges` variants (including short `-m`, `-c`, and `--cc` options) is explicitly given, merge commits will not show a diff, even if a diff format like `--patch` is selected, nor will they match search options like `-S`. The exception is when `--first-parent` is in use, in which case `first-parent` is the default format."
msgstr "Note que a menos que uma das variantes `--diff-merges` (incluindo as opções curtas`-m`, `-c` e `--cc`) seja explicitamente informada, a mesclagem dos commits não mostrarão um diff, mesmo se um diff formato como `--patch` seja escolhido, nem corresponderá às opções de pesquisa como `-S`. A exceção é quando a opção `--first-parent` está em uso, neste caso`first-parent` é o formato predefinido."

#. type: Labeled list
#: en/git-log.txt:137
#, no-wrap, priority:260
msgid "`git log --no-merges`"
msgstr "`git log --no-merges`"

#. type: Plain text
#: en/git-log.txt:140
#, priority:260
msgid "Show the whole commit history, but skip any merges"
msgstr "Exibe todo o histórico do commit, mas ignore todas as mesclagens"

#. type: Labeled list
#: en/git-log.txt:141
#, no-wrap, priority:260
msgid "`git log v2.6.12.. include/scsi drivers/scsi`"
msgstr "`git log v2.6.12.. include/scsi drivers/scsi`"

#. type: Plain text
#: en/git-log.txt:145
#, priority:260
msgid "Show all commits since version 'v2.6.12' that changed any file in the `include/scsi` or `drivers/scsi` subdirectories"
msgstr "Exibe todos os commits desde a versão 'v2.6.12' que alterou qualquer arquivo nos subdiretórios 'include/scsi' ou 'drivers/scsi'"

#. type: Labeled list
#: en/git-log.txt:146
#, no-wrap, priority:260
msgid "`git log --since=\"2 weeks ago\" -- gitk`"
msgstr "`git log --since=\"2 weeks ago\" -- gitk`"

#. type: Plain text
#: en/git-log.txt:151
#, priority:260
msgid "Show the changes during the last two weeks to the file 'gitk'.  The `--` is necessary to avoid confusion with the *branch* named 'gitk'"
msgstr "Exibe as alterações nas últimas duas semanas no arquivo 'gitk'.  O `--` é necessário para evitar confusão com o *ramo* chamado 'gitk'"

#. type: Labeled list
#: en/git-log.txt:152
#, no-wrap, priority:260
msgid "`git log --name-status release..test`"
msgstr "`git log --name-status release..test`"

#. type: Plain text
#: en/git-log.txt:157
#, priority:260
msgid "Show the commits that are in the \"test\" branch but not yet in the \"release\" branch, along with the list of paths each commit modifies."
msgstr "Exibe os commits que estão no ramo \"test\", mas não ainda no ramo \"release\", junto com a lista dos caminhos que cada commit modifica."

#. type: Labeled list
#: en/git-log.txt:158
#, no-wrap, priority:260
msgid "`git log --follow builtin/rev-list.c`"
msgstr "`git log --follow builtin/rev-list.c`"

#. type: Plain text
#: en/git-log.txt:163
#, priority:260
msgid "Shows the commits that changed `builtin/rev-list.c`, including those commits that occurred before the file was given its present name."
msgstr "Exibe os commits que mudaram o arquivo `builtin/rev-list.c`, incluindo os commits que ocorreram antes do arquivo receber o nome atual."

#. type: Labeled list
#: en/git-log.txt:164
#, no-wrap, priority:260
msgid "`git log --branches --not --remotes=origin`"
msgstr "`git log --branches --not --remotes=origin`"

#. type: Plain text
#: en/git-log.txt:169
#, priority:260
msgid "Shows all commits that are in any of local branches but not in any of remote-tracking branches for 'origin' (what you have that origin doesn't)."
msgstr "Exibe todas os commits que estão em qualquer uma das ramificações locais, mas não em quaisquer outras ramificações remotas rastreadas para 'origin' (o que você tem mas na \"origin\" não)."

#. type: Labeled list
#: en/git-log.txt:170
#, no-wrap, priority:260
msgid "`git log master --not --remotes=*/master`"
msgstr "`git log master --not --remotes=*/master`"

#. type: Plain text
#: en/git-log.txt:174
#, priority:260
msgid "Shows all commits that are in local master but not in any remote repository master branches."
msgstr "Exibe todos os commits que estão no \"master\" local, mas não em nenhuma outra ramificação \"master\" do repositório remoto."

#. type: Labeled list
#: en/git-log.txt:175
#, no-wrap, priority:260
msgid "`git log -p -m --first-parent`"
msgstr "`git log -p -m --first-parent`"

#. type: Plain text
#: en/git-log.txt:182
#, priority:260
msgid "Shows the history including change diffs, but only from the ``main branch'' perspective, skipping commits that come from merged branches, and showing full diffs of changes introduced by the merges.  This makes sense only when following a strict policy of merging all topic branches when staying on a single integration branch."
msgstr "EWxibe o histórico, incluindo as alterações dos diffs, porém apenas da perspectiva do ``ramo principal'', ignorando os commits provenientes da mesclagem das ramificações e exibindo os diffs completos das alterações introduzidas pelas mesclagens.  Apenas faz sentido ao seguir uma política estrita de mesclar todos os tópicos das ramificações ao permanecer num único ramo integrado."

#. type: Labeled list
#: en/git-log.txt:183
#, no-wrap, priority:260
msgid "`git log -L '/int main/',/^}/:main.c`"
msgstr "`git log -L '/int main/',/^}/:main.c`"

#. type: Plain text
#: en/git-log.txt:187
#, priority:260
msgid "Shows how the function `main()` in the file `main.c` evolved over time."
msgstr "Exibe como a função `main()` no arquivo `main.c` evoluiu ao longo do tempo."

#. type: Labeled list
#: en/git-log.txt:188
#, no-wrap, priority:260
msgid "`git log -3`"
msgstr "`git log -3`"

#. type: Plain text
#: en/git-log.txt:191
#, priority:260
msgid "Limits the number of commits to show to 3."
msgstr "Limita a quantidade de commits a serem exibidos em 3."

#. type: Plain text
#: en/git-log.txt:202
#, priority:260
msgid "See linkgit:git-config[1] for core variables and linkgit:git-diff[1] for settings related to diff generation."
msgstr "Para configurações relacionadas com a geração de arquivos diferenciais \"diff\" consulte linkgit:git-diff[1], para as variáveis principais consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/git-log.txt:203
#, ignore-same, no-wrap, priority:260
msgid "format.pretty"
msgstr "format.pretty"

#. type: Plain text
#: en/git-log.txt:206
#, priority:260
msgid "Default for the `--format` option.  (See 'Pretty Formats' above.)  Defaults to `medium`."
msgstr "É a opção predefinida para `--format`.  (Consulte 'Formatos bonitos' acima.)  A predefinição retorna para `medium`."

#. type: Labeled list
#: en/git-log.txt:207
#, ignore-same, no-wrap, priority:260
msgid "i18n.logOutputEncoding"
msgstr "i18n.logOutputEncoding"

#. type: Plain text
#: en/git-log.txt:211
#, priority:260
msgid "Encoding to use when displaying logs.  (See 'Discussion' above.)  Defaults to the value of `i18n.commitEncoding` if set, and UTF-8 otherwise."
msgstr "Codificação que será utilizada para exibir os registros logs.  (Consulte a 'Discussão' acima.)  A predefinição retorna para o valor existente na opção de configuração `i18n.commitEncoding` caso seja definido, caso contrário, 'UTF-8'."

#. type: Title =
#: en/git-ls-files.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-ls-files(1)"
msgstr "git-ls-files(1)"

#. type: Plain text
#: en/git-ls-files.txt:7
#, priority:80
msgid "git-ls-files - Show information about files in the index and the working tree"
msgstr "git-ls-files - Exiba as informações sobre os arquivos no índice e na árvore de trabalho"

#. type: Plain text
#: en/git-ls-files.txt:24
#, fuzzy, ignore-ellipsis, no-wrap, priority:80
#| msgid ""
#| "'git ls-files' [-z] [-t] [-v] [-f]\n"
#| "\t\t[-c|--cached] [-d|--deleted] [-o|--others] [-i|--|ignored]\n"
#| "\t\t[-s|--stage] [-u|--unmerged] [-k|--|killed] [-m|--modified]\n"
#| "\t\t[--directory [--no-empty-directory]] [--eol]\n"
#| "\t\t[--deduplicate]\n"
#| "\t\t[-x <pattern>|--exclude=<pattern>]\n"
#| "\t\t[-X <file>|--exclude-from=<file>]\n"
#| "\t\t[--exclude-per-directory=<file>]\n"
#| "\t\t[--exclude-standard]\n"
#| "\t\t[--error-unmatch] [--with-tree=<tree-ish>]\n"
#| "\t\t[--full-name] [--recurse-submodules]\n"
#| "\t\t[--abbrev[=<n>]] [--] [<file>...]\n"
msgid ""
"'git ls-files' [-z] [-t] [-v] [-f]\n"
"\t\t[-c|--cached] [-d|--deleted] [-o|--others] [-i|--|ignored]\n"
"\t\t[-s|--stage] [-u|--unmerged] [-k|--|killed] [-m|--modified]\n"
"\t\t[--directory [--no-empty-directory]] [--eol]\n"
"\t\t[--deduplicate]\n"
"\t\t[-x <pattern>|--exclude=<pattern>]\n"
"\t\t[-X <file>|--exclude-from=<file>]\n"
"\t\t[--exclude-per-directory=<file>]\n"
"\t\t[--exclude-standard]\n"
"\t\t[--error-unmatch] [--with-tree=<tree-ish>]\n"
"\t\t[--full-name] [--recurse-submodules]\n"
"\t\t[--abbrev[=<n>]] [--format=<format>] [--] [<file>...]\n"
msgstr ""
"'git ls-files' [-z] [-t] [-v] [-f]\n"
"\t\t[-c|--cached] [-d|--deleted] [-o|--others] [-i|--|ignored]\n"
"\t\t[-s|--stage] [-u|--unmerged] [-k|--|killed] [-m|--modified]\n"
"\t\t[--directory [--no-empty-directory]] [--eol]\n"
"\t\t[--deduplicate]\n"
"\t\t[-x <padrão>|--exclude=<padrão>]\n"
"\t\t[-X <arquivo>|--exclude-from=<arquivo>]\n"
"\t\t[--exclude-per-directory=<arquivo>]\n"
"\t\t[--exclude-standard]\n"
"\t\t[--error-unmatch] [--with-tree=<árvore>]\n"
"\t\t[--full-name] [--recurse-submodules]\n"
"\t\t[--abbrev[=<n>]] [--] [<arquivo>...]\n"

#. type: Plain text
#: en/git-ls-files.txt:29
#, priority:80
msgid "This merges the file listing in the index with the actual working directory list, and shows different combinations of the two."
msgstr "Isso mescla a lista dos arquivos no índice com a lista real dos diretórios de trabalho e mostra as diferentes combinações dos dois."

#. type: Plain text
#: en/git-ls-files.txt:32
#, priority:80
msgid "One or more of the options below may be used to determine the files shown:"
msgstr "Uma ou mais das opções abaixo podem ser utilizadas para determinar quais os arquivos serão exibidos:"

#. type: Plain text
#: en/git-ls-files.txt:38
#, priority:80
msgid "Show cached files in the output (default)"
msgstr "Exibe os arquivos no cache da saída (predefinido)"

#. type: Labeled list
#: en/git-ls-files.txt:40
#, ignore-same, no-wrap, priority:80
msgid "--deleted"
msgstr "--deleted"

#. type: Plain text
#: en/git-ls-files.txt:42
#, priority:80
msgid "Show deleted files in the output"
msgstr "Exibe os arquivos excluídos da saída"

#. type: Labeled list
#: en/git-ls-files.txt:44
#, ignore-same, no-wrap, priority:80
msgid "--modified"
msgstr "--modified"

#. type: Plain text
#: en/git-ls-files.txt:46
#, priority:80
msgid "Show modified files in the output"
msgstr "Exibe os arquivos modificados na saída"

#. type: Labeled list
#: en/git-ls-files.txt:48
#, ignore-same, no-wrap, priority:80
msgid "--others"
msgstr "--others"

#. type: Plain text
#: en/git-ls-files.txt:50
#, priority:80
msgid "Show other (i.e. untracked) files in the output"
msgstr "Exibe os outros arquivos (não monitorados) na saída"

#. type: Labeled list
#: en/git-ls-files.txt:52
#, ignore-same, no-wrap, priority:80
msgid "--ignored"
msgstr "--ignored"

#. type: Plain text
#: en/git-ls-files.txt:58
#, priority:80
msgid "Show only ignored files in the output. When showing files in the index, print only those matched by an exclude pattern. When showing \"other\" files, show only those matched by an exclude pattern. Standard ignore rules are not automatically activated, therefore at least one of the `--exclude*` options is required."
msgstr "Exibe apenas os arquivos ignorados na saída. Ao exibir os arquivos no índice, exiba apenas aqueles que coincidam através de um padrão de exclusão. Ao exibir os \"outros\" arquivos, exiba apenas aqueles que coincidam através de um padrão de exclusão. As regras predefinidas para ignorar não estão automaticamente ativas; portanto, pelo menos uma das opções `--exclude*` são necessários."

#. type: Labeled list
#: en/git-ls-files.txt:60
#, ignore-same, no-wrap, priority:80
msgid "--stage"
msgstr "--stage"

#. type: Plain text
#: en/git-ls-files.txt:62
#, priority:80
msgid "Show staged contents' mode bits, object name and stage number in the output."
msgstr "Exibe os bits do modo do conteúdo escalonado, o nome do objeto e o número do estágio na saída."

#. type: Labeled list
#: en/git-ls-files.txt:63
#, ignore-same, no-wrap, priority:80
msgid "--directory"
msgstr "--directory"

#. type: Plain text
#: en/git-ls-files.txt:66
#, priority:80
msgid "If a whole directory is classified as \"other\", show just its name (with a trailing slash) and not its whole contents."
msgstr "Caso um diretório inteiro seja classificado como \"other\" (outro), exibe apenas o seu nome (com uma barra à direita) e não todo o seu conteúdo."

#. type: Labeled list
#: en/git-ls-files.txt:67
#, ignore-same, no-wrap, priority:80
msgid "--no-empty-directory"
msgstr "--no-empty-directory"

#. type: Plain text
#: en/git-ls-files.txt:69
#, priority:80
msgid "Do not list empty directories. Has no effect without --directory."
msgstr "Não liste os diretórios vazios. Não tem efeito sem a opção `--directory`."

#. type: Labeled list
#: en/git-ls-files.txt:71 en/git-update-index.txt:67
#, ignore-same, no-wrap, priority:80
msgid "--unmerged"
msgstr "--unmerged"

#. type: Plain text
#: en/git-ls-files.txt:73
#, priority:80
msgid "Show unmerged files in the output (forces --stage)"
msgstr "Exibe os arquivos não mesclados na saída (impõem a utilização da opção `--stage`)"

#. type: Labeled list
#: en/git-ls-files.txt:75
#, ignore-same, no-wrap, priority:80
msgid "--killed"
msgstr "--killed"

#. type: Plain text
#: en/git-ls-files.txt:79
#, priority:80
msgid "Show files on the filesystem that need to be removed due to file/directory conflicts for checkout-index to succeed."
msgstr "Exibe os arquivos no sistema de arquivos que precisam ser removidos devido a conflitos do arquivo/diretório para que o índice averiguado seja bem-sucedido."

#. type: Plain text
#: en/git-ls-files.txt:83
#, priority:80
msgid "\\0 line termination on output and do not quote filenames.  See OUTPUT below for more information."
msgstr "A terminação \\0 da linha na saída e não cita os nomes dos arquivos.  Consulte SAÍDA abaixo para obter mais informações."

#. type: Labeled list
#: en/git-ls-files.txt:84
#, ignore-same, no-wrap, priority:80
msgid "--deduplicate"
msgstr "--deduplicate"

#. type: Plain text
#: en/git-ls-files.txt:90
#, priority:80
msgid "When only filenames are shown, suppress duplicates that may come from having multiple stages during a merge, or giving `--deleted` and `--modified` option at the same time.  When any of the `-t`, `--unmerged`, or `--stage` option is in use, this option has no effect."
msgstr "Quando apenas os nomes dos arquivos são mostrados, suprima as duplicatas que poderiam vir de vários estágios durante uma mesclagem ou passando as opções `--deleted` e `--modified` ao mesmo tempo.  Esta opção não tem efeito algum quando qualquer uma das opções `-t`,`--unmerged` ou `--stage` estiver em uso."

#. type: Labeled list
#: en/git-ls-files.txt:91
#, no-wrap, priority:80
msgid "-x <pattern>"
msgstr "-x <padrão>"

#. type: Plain text
#: en/git-ls-files.txt:96
#, priority:80
msgid "Skip untracked files matching pattern.  Note that pattern is a shell wildcard pattern. See EXCLUDE PATTERNS below for more information."
msgstr "Ignora o padrão de correspondência dos arquivos não monitorados.  Observe que o padrão é um padrão curinga do shell. Consulte EXCLUIR PADRÕES abaixo para obter mais informações."

#. type: Labeled list
#: en/git-ls-files.txt:97
#, no-wrap, priority:80
msgid "-X <file>"
msgstr "-X <arquivo>"

#. type: Labeled list
#: en/git-ls-files.txt:98
#, no-wrap, priority:80
msgid "--exclude-from=<file>"
msgstr "--exclude-from=<arquivo>"

#. type: Plain text
#: en/git-ls-files.txt:100
#, priority:80
msgid "Read exclude patterns from <file>; 1 per line."
msgstr "Leia os padrões de exclusão do <arquivo>; 1 por linha."

#. type: Labeled list
#: en/git-ls-files.txt:101
#, no-wrap, priority:80
msgid "--exclude-per-directory=<file>"
msgstr "--exclude-per-directory=<arquivo>"

#. type: Plain text
#: en/git-ls-files.txt:104
#, priority:80
msgid "Read additional exclude patterns that apply only to the directory and its subdirectories in <file>."
msgstr "Leia os padrões de exclusão adicionais que se aplicam apenas ao diretório e aos seus subdiretórios no <arquivo>."

#. type: Plain text
#: en/git-ls-files.txt:108
#, priority:80
msgid "Add the standard Git exclusions: .git/info/exclude, .gitignore in each directory, and the user's global exclusion file."
msgstr "Adicione as exclusões padrão do Git: '.git/info/exclude', '.gitignore' em cada diretório e o arquivo de exclusão global do usuário."

#. type: Labeled list
#: en/git-ls-files.txt:109
#, ignore-same, no-wrap, priority:80
msgid "--error-unmatch"
msgstr "--error-unmatch"

#. type: Plain text
#: en/git-ls-files.txt:112
#, priority:80
msgid "If any <file> does not appear in the index, treat this as an error (return 1)."
msgstr "Caso algum `<arquivo>` não apareça no índice, trate isso como um erro (retorno 1)."

#. type: Labeled list
#: en/git-ls-files.txt:113
#, no-wrap, priority:80
msgid "--with-tree=<tree-ish>"
msgstr "--with-tree=<árvore>"

#. type: Plain text
#: en/git-ls-files.txt:119
#, priority:80
msgid "When using --error-unmatch to expand the user supplied <file> (i.e. path pattern) arguments to paths, pretend that paths which were removed in the index since the named <tree-ish> are still present.  Using this option with `-s` or `-u` options does not make any sense."
msgstr "Ao utilizar o comando `--error-unmatch` para expandir os argumentos <arquivo> (padrão do caminho por exemplo) argumentos para os caminhos, finja que os caminhos que foram removidos no índice desde que a `<árvore>` ainda esteja presente.  Utilizar esta opção com as opções `-s` ou `-u` não faz nenhum sentido."

#. type: Plain text
#: en/git-ls-files.txt:127
#, priority:80
msgid "This feature is semi-deprecated. For scripting purpose, linkgit:git-status[1] `--porcelain` and linkgit:git-diff-files[1] `--name-status` are almost always superior alternatives, and users should look at linkgit:git-status[1] `--short` or linkgit:git-diff[1] `--name-status` for more user-friendly alternatives."
msgstr "Esse recurso está quase obsoleto. Para fins de script, linkgit:git-status[1] `--porcelain` e linkgit:git-diff-files[1] `--name-status` são quase sempre as maiores alternativas, os usuários devem olhar para o linkgit:git-status[1] `--short` ou linkgit:git-diff[1] `--namename-status` para as alternativas mais amigáveis."

#. type: Plain text
#: en/git-ls-files.txt:131
#, priority:80
msgid "This option identifies the file status with the following tags (followed by a space) at the start of each line:"
msgstr "Esta opção identifica a condição geral do arquivo com as seguintes opções (seguidas por um espaço) no início de cada linha:"

#. type: Labeled list
#: en/git-ls-files.txt:132
#, no-wrap, priority:80
msgid "H"
msgstr "H"

#. type: Plain text
#: en/git-ls-files.txt:133
#, priority:80
msgid "cached"
msgstr "cached"

#. type: Labeled list
#: en/git-ls-files.txt:133
#, no-wrap, priority:80
msgid "S"
msgstr "S"

#. type: Plain text
#: en/git-ls-files.txt:134
#, priority:80
msgid "skip-worktree"
msgstr "skip-worktree"

#. type: Labeled list
#: en/git-ls-files.txt:134
#, no-wrap, priority:80
msgid "M"
msgstr "M"

#. type: Plain text
#: en/git-ls-files.txt:135
#, priority:80
msgid "unmerged"
msgstr "unmerged"

#. type: Labeled list
#: en/git-ls-files.txt:135
#, no-wrap, priority:80
msgid "R"
msgstr "R"

#. type: Plain text
#: en/git-ls-files.txt:136
#, priority:80
msgid "removed/deleted"
msgstr "removido/excluído"

#. type: Labeled list
#: en/git-ls-files.txt:136
#, no-wrap, priority:80
msgid "C"
msgstr "C"

#. type: Plain text
#: en/git-ls-files.txt:137
#, priority:80
msgid "modified/changed"
msgstr "modificado/alterado"

#. type: Labeled list
#: en/git-ls-files.txt:137
#, no-wrap, priority:80
msgid "K"
msgstr "K"

#. type: Plain text
#: en/git-ls-files.txt:138
#, priority:80
msgid "to be killed"
msgstr "para ser encerrado"

#. type: Labeled list
#: en/git-ls-files.txt:138
#, no-wrap, priority:80
msgid "?"
msgstr "?"

#. type: Title ~
#: en/git-ls-files.txt:139 en/git.txt:632
#, no-wrap, priority:100
msgid "other"
msgstr "Outros"

#. type: Plain text
#: en/git-ls-files.txt:145
#, priority:80
msgid "Similar to `-t`, but use lowercase letters for files that are marked as 'assume unchanged' (see linkgit:git-update-index[1])."
msgstr "Semelhante ao `-t`, porém utilize as letras minúsculas para os arquivos marcados como 'assume unchanged' ou 'assuma que não foi alterado' (consulte linkgit:git-update-index[1])."

#. type: Plain text
#: en/git-ls-files.txt:150
#, priority:80
msgid "Similar to `-t`, but use lowercase letters for files that are marked as 'fsmonitor valid' (see linkgit:git-update-index[1])."
msgstr "Semelhante ao `-t`, porém utilize as letras minúsculas para os arquivos marcados como 'fsmonitor valid' ou 'fsmonitor válido' (consulte linkgit:git-update-index[1])."

#. type: Plain text
#: en/git-ls-files.txt:160
#, priority:80
msgid "Recursively calls ls-files on each active submodule in the repository.  Currently there is only support for the --cached and --stage modes."
msgstr "Chama recursivamente os 'ls-files' em cada submódulo no repositório.  Atualmente, há apenas suporte para os modos `--cached` e `--stage`."

#. type: Plain text
#: en/git-ls-files.txt:166 en/git-ls-tree.txt:77
#, priority:80
msgid "Instead of showing the full 40-byte hexadecimal object lines, show the shortest prefix that is at least '<n>' hexdigits long that uniquely refers the object.  Non default number of digits can be specified with --abbrev=<n>."
msgstr "Em vez de exibir as linhas do objeto hexadecimal com 40 bytes, exibe o prefixo mais curto que se refira de forma única ao objeto e que tenha até '<n>' hexdigits.  Um número não predefinido dos dígitos podem ser definidos com `--abbrev=<n>`."

#. type: Plain text
#: en/git-ls-files.txt:172
#, priority:80
msgid "After each line that describes a file, add more data about its cache entry.  This is intended to show as much information as possible for manual inspection; the exact format may change at any time."
msgstr "Após cada linha que descreve um arquivo, adicione mais dados sobre a sua entrada no cache.  O objetivo é exibir o máximo de informações possíveis para a inspeção manual; o formato exato pode mudar a qualquer momento."

#. type: Labeled list
#: en/git-ls-files.txt:173
#, ignore-same, no-wrap, priority:80
msgid "--eol"
msgstr "--eol"

#. type: Plain text
#: en/git-ls-files.txt:178
#, priority:80
msgid "Show <eolinfo> and <eolattr> of files.  <eolinfo> is the file content identification used by Git when the \"text\" attribute is \"auto\" (or not set and core.autocrlf is not false).  <eolinfo> is either \"-text\", \"none\", \"lf\", \"crlf\", \"mixed\" or \"\"."
msgstr "Exibe o `<eolinfo>` e o `<eolattr>` dos arquivos.  O `<eolinfo>` é a identificação do conteúdo do arquivo utilizado pelo Git quando o atributo \"text\" for  \"auto\" (ou não está definido e o `core.autocrlf` não for falso).  O `<eolinfo>` é \"-text\", \"none\", \"lf\", \"crlf\", \"mixed\" ou \"\"."

#. type: Plain text
#: en/git-ls-files.txt:181
#, priority:80
msgid "\"\" means the file is not a regular file, it is not in the index or not accessible in the working tree."
msgstr "\"\" significa que o arquivo não é um arquivo comum, não está no índice ou não está acessível na árvore de trabalho."

#. type: Plain text
#: en/git-ls-files.txt:185
#, priority:80
msgid "<eolattr> is the attribute that is used when checking out or committing, it is either \"\", \"-text\", \"text\", \"text=auto\", \"text eol=lf\", \"text eol=crlf\".  Since Git 2.10 \"text=auto eol=lf\" and \"text=auto eol=crlf\" are supported."
msgstr "O `<eolattr>` é o atributo utilizado ao efetuar a averiguação ou fazer o commit, é também \"\", \"-text\", \"text\", \"text=auto\", \"text eol=lf\", \"text eol=crlf\".  Desde o Git 2.10, \"text=auto eol=lf\" e \"text=auto eol=crlf\" são compatíveis."

#. type: Plain text
#: en/git-ls-files.txt:189
#, priority:80
msgid "Both the <eolinfo> in the index (\"i/<eolinfo>\")  and in the working tree (\"w/<eolinfo>\") are shown for regular files, followed by the (\"attr/<eolattr>\")."
msgstr "Ambos os `<eolinfo>` no índice (\"i/<eolinfo>\") e na árvore de trabalho (\"w/<eolinfo>\") são exibidos para os arquivos regulares, seguidos pelo (\"attr/<eolattr>\")."

#. type: Plain text
#: en/git-ls-files.txt:194
#, priority:80
msgid "If the index is sparse, show the sparse directories without expanding to the contained files. Sparse directories will be shown with a trailing slash, such as \"x/\" for a sparse directory \"x\"."
msgstr "Caso o índice seja esparso, mostre os diretórios esparsos sem expandir aos arquivos contidos. Os diretórios esparsos serão mostrados com uma barra, como \"x/\" para um diretório esparso \"x\"."

#. type: Plain text
#: en/git-ls-files.txt:202
#, fuzzy, priority:80
#| msgid "A string that interpolates `%(fieldname)` from the result being shown. It also interpolates `%%` to `%`, and `%xx` where `xx` are hex digits interpolates to character with hex code `xx`; for example `%00` interpolates to `\\0` (NUL), `%09` to `\\t` (TAB) and `%0a` to `\\n` (LF).  When specified, `--format` cannot be combined with other format-altering options, including `--long`, `--name-only` and `--object-only`."
msgid "A string that interpolates `%(fieldname)` from the result being shown.  It also interpolates `%%` to `%`, and `%xx` where `xx` are hex digits interpolates to character with hex code `xx`; for example `%00` interpolates to `\\0` (NUL), `%09` to `\\t` (TAB) and %0a to `\\n` (LF).  --format cannot be combined with `-s`, `-o`, `-k`, `-t`, `--resolve-undo` and `--eol`."
msgstr "Uma string que interpola `%(fieldname)` do resultado que está sendo mostrado. Ele também interpola `%%` para `%`, e `%xx` onde `xx` são dígitos hexadecimais interpolados para o caractere com código hexadecimal `xx`; por exemplo, `%00` interpola para `\\0` (NUL), `%09` para `\\t` (TAB) e `%0a` para `\\n` (LF). Quando especificado, `--format` não pode ser combinado com outras opções de alteração do formato como `--long`, `--name-only` e `--object-only`."

#. type: Labeled list
#: en/git-ls-files.txt:205 en/git.txt:419 en/git-update-index.txt:229
#, no-wrap, priority:100
msgid "<file>"
msgstr "<arquivo>"

#. type: Plain text
#: en/git-ls-files.txt:208
#, priority:80
msgid "Files to show. If no files are given all files which match the other specified criteria are shown."
msgstr "Arquivos para exibir. Caso nenhum arquivo seja informado, todos os arquivos que coincidam com outros critérios informados serão mostrados."

#. type: Plain text
#: en/git-ls-files.txt:213
#, priority:80
msgid "'git ls-files' just outputs the filenames unless `--stage` is specified in which case it outputs:"
msgstr "'git ls-files' apenas gera os nomes dos arquivos, a menos que a opção `--stage` seja utilizado; nesse caso, ele gera:"

#. type: Plain text
#: en/git-ls-files.txt:215
#, no-wrap, priority:80
msgid "        [<tag> ]<mode> <object> <stage> <file>\n"
msgstr "        [<tag> ]<modo> <objeto> <estágio> <arquivo>\n"

#. type: Plain text
#: en/git-ls-files.txt:218
#, no-wrap, priority:80
msgid ""
"'git ls-files --eol' will show\n"
"\ti/<eolinfo><SPACES>w/<eolinfo><SPACES>attr/<eolattr><SPACE*><TAB><file>\n"
msgstr ""
"'git ls-files --eol' will show\n"
"\ti/<eolinfo><SPACES>w/<eolinfo><SPACES>attr/<eolattr><SPACE*><TAB><arquivo>\n"

#. type: Plain text
#: en/git-ls-files.txt:221
#, priority:80
msgid "'git ls-files --unmerged' and 'git ls-files --stage' can be used to examine detailed information on unmerged paths."
msgstr "Os comando 'git ls-files --unmerged' e o 'git ls-files --stage' podem ser utilizados para examinar as informações detalhadas sobre os caminhos não mesclados."

#. type: Plain text
#: en/git-ls-files.txt:227
#, priority:80
msgid "For an unmerged path, instead of recording a single mode/SHA-1 pair, the index records up to three such pairs; one from tree O in stage 1, A in stage 2, and B in stage 3.  This information can be used by the user (or the porcelain) to see what should eventually be recorded at the path. (see linkgit:git-read-tree[1] for more information on state)"
msgstr "Para um caminho que não foi mesclado, em vez de gravar um único modo/ par SHA-1 pair, o índice registra até três desses pares; um da árvore O no estágio 1, A no estágio 2 e B no estágio 3.  Esta informação pode ser utilizada pelo usuário (ou pela porcelana) para ver o quê eventualmente deverá ser registrado no caminho. (para mais informações sobre estado/condição consulte linkgit:git-read-tree[1]"

#. type: Plain text
#: en/git-ls-files.txt:238
#, fuzzy, priority:80
#| msgid "It is possible to print in a custom format by using the `--format` option, which is able to interpolate different fields using a `%(fieldname)` notation.  For example, if you only care about the \"objectname\" and \"path\" fields, you can execute with a specific \"--format\" like"
msgid "It is possible to print in a custom format by using the `--format` option, which is able to interpolate different fields using a `%(fieldname)` notation. For example, if you only care about the \"objectname\" and \"path\" fields, you can execute with a specific \"--format\" like"
msgstr "É possível imprimir em um formato personalizado usando a opção `--format`, que é capaz de interpolar diferentes campos usando uma notação `%(fieldname)`. Por exemplo, se você se importa apenas com os campos \"objectname\" e \"path\", você pode executar com um comando \"--format\" específico como"

#. type: Plain text
#: en/git-ls-files.txt:240
#, fuzzy, no-wrap, priority:80
#| msgid "\tgit ls-tree --format='%(objectname) %(path)' <tree-ish>\n"
msgid "\tgit ls-files --format='%(objectname) %(path)'\n"
msgstr "\tgit ls-tree --format='%(objectname) %(caminho)' <tree-ish>\n"

#. type: Plain text
#: en/git-ls-files.txt:247
#, priority:80
msgid "The way each path is shown can be customized by using the `--format=<format>` option, where the %(fieldname) in the <format> string for various aspects of the index entry are interpolated.  The following \"fieldname\" are understood:"
msgstr ""

#. type: Labeled list
#: en/git-ls-files.txt:248 en/git-ls-tree.txt:151
#, no-wrap, priority:80
msgid "objectmode"
msgstr "objectmode"

#. type: Plain text
#: en/git-ls-files.txt:250
#, fuzzy, priority:80
#| msgid "be quiet if files exist or are not in the index"
msgid "The mode of the file which is recorded in the index."
msgstr "fique em silêncio caso os arquivos já existirem ou não estiverem no índice"

#. type: Plain text
#: en/git-ls-files.txt:252
#, fuzzy, priority:80
#| msgid "be quiet if files exist or are not in the index"
msgid "The name of the file which is recorded in the index."
msgstr "fique em silêncio caso os arquivos já existirem ou não estiverem no índice"

#. type: Labeled list
#: en/git-ls-files.txt:252
#, fuzzy, no-wrap, priority:80
#| msgid "--stage"
msgid "stage"
msgstr "--stage"

#. type: Plain text
#: en/git-ls-files.txt:254
#, fuzzy, priority:80
#| msgid "be quiet if files exist or are not in the index"
msgid "The stage of the file which is recorded in the index."
msgstr "fique em silêncio caso os arquivos já existirem ou não estiverem no índice"

#. type: Labeled list
#: en/git-ls-files.txt:254
#, fuzzy, no-wrap, priority:80
#| msgid "--no-index"
msgid "eolinfo:index"
msgstr "--no-index"

#. type: Labeled list
#: en/git-ls-files.txt:255
#, fuzzy, no-wrap, priority:80
#| msgid "skip-worktree"
msgid "eolinfo:worktree"
msgstr "skip-worktree"

#. type: Plain text
#: en/git-ls-files.txt:258
#, priority:80
msgid "The <eolinfo> (see the description of the `--eol` option) of the contents in the index or in the worktree for the path."
msgstr ""

#. type: Labeled list
#: en/git-ls-files.txt:258
#, fuzzy, no-wrap, priority:80
#| msgid "attr"
msgid "eolattr"
msgstr "attr"

#. type: Plain text
#: en/git-ls-files.txt:261
#, priority:80
msgid "The <eolattr> (see the description of the `--eol` option)  that applies to the path."
msgstr ""

#. type: Labeled list
#: en/git-ls-files.txt:261 en/git-ls-tree.txt:160
#, no-wrap, priority:80
msgid "path"
msgstr "caminho"

#. type: Plain text
#: en/git-ls-files.txt:263
#, priority:80
msgid "The pathname of the file which is recorded in the index."
msgstr ""

#. type: Title -
#: en/git-ls-files.txt:265
#, no-wrap, priority:80
msgid "EXCLUDE PATTERNS"
msgstr "EXCLUIR PADRÕES"

#. type: Plain text
#: en/git-ls-files.txt:271
#, priority:80
msgid "'git ls-files' can use a list of \"exclude patterns\" when traversing the directory tree and finding files to show when the flags --others or --ignored are specified.  linkgit:gitignore[5] specifies the format of exclude patterns."
msgstr "O 'git ls-files' pode utilizar uma lista de \"padrões de exclusão\" ao percorrer a árvore dos diretórios e localizar os arquivos para exibir quando as opções `--others` ou `--ignored` são utilizados.  linkgit:gitignore[5] determina o formato dos padrões de exclusão."

#. type: Plain text
#: en/git-ls-files.txt:273
#, priority:80
msgid "These exclude patterns come from these places, in order:"
msgstr "Estes padrões de exclusão vêm destes locais, na ordem:"

#. type: Plain text
#: en/git-ls-files.txt:277
#, priority:80
msgid "The command-line flag --exclude=<pattern> specifies a single pattern.  Patterns are ordered in the same order they appear in the command line."
msgstr "A opção da linha de comando `--exclude=<padrão>` define um único padrão.  Os padrões são ordenados na mesma ordem em que aparecem na linha de comando."

#. type: Plain text
#: en/git-ls-files.txt:281
#, priority:80
msgid "The command-line flag --exclude-from=<file> specifies a file containing a list of patterns.  Patterns are ordered in the same order they appear in the file."
msgstr "A opção da linha de comando `--exclude-from=<arquivo>` define um arquivo que contém uma lista de padrões.  Os padrões são ordenados na mesma ordem em que aparecem no arquivo."

#. type: Plain text
#: en/git-ls-files.txt:287
#, priority:80
msgid "The command-line flag --exclude-per-directory=<name> specifies a name of the file in each directory 'git ls-files' examines, normally `.gitignore`.  Files in deeper directories take precedence.  Patterns are ordered in the same order they appear in the files."
msgstr "A opção da linha de comando `--exclude-per-directory=<nome>` define um nome do arquivo em cada diretório que o comando 'git ls-files' examina, normalmente `.gitignore`.  Os arquivos nos diretórios mais profundos têm precedência.  Os padrões são ordenados na mesma ordem em que aparecem nos arquivos."

#. type: Plain text
#: en/git-ls-files.txt:293
#, priority:80
msgid "A pattern specified on the command line with --exclude or read from the file specified with --exclude-from is relative to the top of the directory tree.  A pattern read from a file specified by --exclude-per-directory is relative to the directory that the pattern file appears in."
msgstr "Um padrão definido na linha de comandos com `--exclude` ou lido do arquivo definido com `--exclude-from` é relativo ao topo da árvore de diretórios.  Um padrão lido de um arquivo definido com `--exclude-per-directory` é relativo ao diretório em que o padrão do arquivo aparece."

#. type: Plain text
#: en/git-ls-files.txt:297
#, ignore-same, priority:80
msgid "linkgit:git-read-tree[1], linkgit:gitignore[5]"
msgstr "linkgit:git-read-tree[1], linkgit:gitignore[5]"

#. type: Title =
#: en/git-ls-remote.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-ls-remote(1)"
msgstr "git-ls-remote(1)"

#. type: Plain text
#: en/git-ls-remote.txt:7
#, priority:100
msgid "git-ls-remote - List references in a remote repository"
msgstr "git-ls-remote - Liste referências num repositório remoto"

#. type: Plain text
#: en/git-ls-remote.txt:15
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git ls-remote' [--heads] [--tags] [--refs] [--upload-pack=<exec>]\n"
"\t      [-q | --quiet] [--exit-code] [--get-url] [--sort=<key>]\n"
"\t      [--symref] [<repository> [<refs>...]]\n"
msgstr ""
"'git ls-remote' [--heads] [--tags] [--refs] [--upload-pack=<exec>]\n"
"\t      [-q | --quiet] [--exit-code] [--get-url] [--sort=<chave>]\n"
"\t      [--symref] [<repositório> [<refs>...]]\n"

#. type: Plain text
#: en/git-ls-remote.txt:20
#, priority:100
msgid "Displays references available in a remote repository along with the associated commit IDs."
msgstr "Exibe as referências disponíveis num repositório remoto, juntamente com as IDs os commits associados."

#. type: Labeled list
#: en/git-ls-remote.txt:25 en/git-show-ref.txt:40
#, ignore-same, no-wrap, priority:100
msgid "--heads"
msgstr "--heads"

#. type: Plain text
#: en/git-ls-remote.txt:34
#, priority:100
msgid "Limit to only refs/heads and refs/tags, respectively.  These options are _not_ mutually exclusive; when given both, references stored in refs/heads and refs/tags are displayed.  Note that `git ls-remote -h` used without anything else on the command line gives help, consistent with other git subcommands."
msgstr "Limite a apenas 'refs/heads' e 'refs/tags', respectivamente.  Essas opções _não_ são reciprocamente exclusivas; ambas quando informadas, as referências armazenadas em 'refs/heads' e 'refs/tags' são exibidas.  Note que o `git ls-remote -h` exibe a ajuda quando utilizado sem nada na linha de comando, consistente com outros subcomandos do git."

#. type: Labeled list
#: en/git-ls-remote.txt:35
#, ignore-same, no-wrap, priority:100
msgid "--refs"
msgstr "--refs"

#. type: Plain text
#: en/git-ls-remote.txt:37
#, priority:100
msgid "Do not show peeled tags or pseudorefs like `HEAD` in the output."
msgstr "Não exiba as opções removidas ou as 'pseudorefs' como `HEAD` na saída."

#. type: Plain text
#: en/git-ls-remote.txt:41
#, priority:100
msgid "Do not print remote URL to stderr."
msgstr "Não exiba a URL remota no stderr."

#. type: Labeled list
#: en/git-ls-remote.txt:42
#, no-wrap, priority:100
msgid "--upload-pack=<exec>"
msgstr "--upload-pack=<exec>"

#. type: Plain text
#: en/git-ls-remote.txt:47
#, priority:100
msgid "Specify the full path of 'git-upload-pack' on the remote host. This allows listing references from repositories accessed via SSH and where the SSH daemon does not use the PATH configured by the user."
msgstr "Define o caminho completo do 'git-upload-pack' no host remoto. Permite listar as referências dos repositórios acessados através do SSH e onde o daemon SSH não utiliza o PATH configurado pelo usuário."

#. type: Plain text
#: en/git-ls-remote.txt:53
#, priority:100
msgid "Exit with status \"2\" when no matching refs are found in the remote repository. Usually the command exits with status \"0\" to indicate it successfully talked with the remote repository, whether it found any matching refs."
msgstr "Encerra com a condição '2' quando nenhuma refs coincidente for encontrada no repositório remoto. Normalmente, o comando encerra com a condição '0' para indicar que houve uma comunicação bem sucedida com o repositório remoto, caso tenha encontrado qualquer refs coincidentes."

#. type: Labeled list
#: en/git-ls-remote.txt:54
#, ignore-same, no-wrap, priority:100
msgid "--get-url"
msgstr "--get-url"

#. type: Plain text
#: en/git-ls-remote.txt:58
#, priority:100
msgid "Expand the URL of the given remote repository taking into account any \"url.<base>.insteadOf\" config setting (See linkgit:git-config[1]) and exit without talking to the remote."
msgstr "Expanda a URL do repositório remoto informado, levando em consideração qualquer definição da configuração \"url.<base>.insteadOf\" (consulte linkgit:git-config[1]) e encerre sem se comunicar com o repositório remoto."

#. type: Labeled list
#: en/git-ls-remote.txt:59
#, ignore-same, no-wrap, priority:100
msgid "--symref"
msgstr "--symref"

#. type: Plain text
#: en/git-ls-remote.txt:64
#, priority:100
msgid "In addition to the object pointed by it, show the underlying ref pointed by it when showing a symbolic ref.  Currently, upload-pack only shows the symref HEAD, so it will be the only one shown by ls-remote."
msgstr "Além do objeto apontado por ele, exiba a referência subjacente apontada por ele ao exibir uma referência simbólica.  Atualmente, o \"upload-pack\" exibe apenas a referência simbólica do `HEAD`, portanto será o único exibido pelo 'ls-remote'."

#. type: Plain text
#: en/git-ls-remote.txt:74
#, priority:100
msgid "Sort based on the key given. Prefix `-` to sort in descending order of the value. Supports \"version:refname\" or \"v:refname\" (tag names are treated as versions). The \"version:refname\" sort order can also be affected by the \"versionsort.suffix\" configuration variable.  See linkgit:git-for-each-ref[1] for more sort options, but be aware keys like `committerdate` that require access to the objects themselves will not work for refs whose objects have not yet been fetched from the remote, and will give a `missing object` error."
msgstr "Classifique com base na chave informada. O prefixo `-` é utilizado para classificar em ordem decrescente. Supports \"version:refname\" or \"v:refname\" (tag names are treated as versions). A ordem de classificação `versão:refname` também pode ser afetada pela variável de configuração `versionsort.sufix`.  Para mais opções de classificação consulte linkgit:git-for-each-ref[1], porém esteja ciente que chaves como `committerdate` que requeiram acesso aos objetos em si não funcionarão com refs cujos objetos ainda não foram capturados remotamente e exibirão um erro `missing object`."

#. type: Plain text
#: en/git-ls-remote.txt:82
#, priority:100
msgid "Transmit the given string to the server when communicating using protocol version 2.  The given string must not contain a NUL or LF character.  When multiple `--server-option=<option>` are given, they are all sent to the other side in the order listed on the command line."
msgstr "Transmita a sequência usada para o servidor ao se comunicar utilizando o protocolo versão 2.  A sequência informada não deve conter um caractere `NUL` ou `LF`.  Quando a opção `--server-option=<opção>` forem utilizadas várias vezes, todos serão enviados para o outro lado na ordem listada na linha de comando."

#. type: Plain text
#: en/git-ls-remote.txt:87
#, priority:100
msgid "The \"remote\" repository to query.  This parameter can be either a URL or the name of a remote (see the GIT URLS and REMOTES sections of linkgit:git-fetch[1])."
msgstr "O repositório \"remoto\" que será consultado.  Este parâmetro pode ser uma URL ou o nome de um ramo remoto (consulte as seções URLs e REMOTOS do GIT no linkgit:git-fetch[1])."

#. type: Plain text
#: en/git-ls-remote.txt:93
#, ignore-ellipsis, priority:100
msgid "When unspecified, all references, after filtering done with --heads and --tags, are shown.  When <refs>... are specified, only references matching the given patterns are displayed."
msgstr "Quando não for utilizado, todas as referências, após a filtragem feita com `--heads` e `--tags`, são exibidas.  Quando as `<refs>...` é definido, apenas as referências que coincidam com os padrões informados são exibidas."

#. type: delimited block -
#: en/git-ls-remote.txt:113
#, no-wrap, priority:100
msgid ""
"$ git ls-remote --tags ./.\n"
"d6602ec5194c87b0fc87103ca4d67251c76f233a\trefs/tags/v0.99\n"
"f25a265a342aed6041ab0cc484224d9ca54b6f41\trefs/tags/v0.99.1\n"
"7ceca275d047c90c0c7d5afb13ab97efdf51bd6e\trefs/tags/v0.99.3\n"
"c5db5456ae3b0873fc659c19fafdde22313cc441\trefs/tags/v0.99.2\n"
"0918385dbd9656cab0d1d81ba7453d49bbc16250\trefs/tags/junio-gpg-pub\n"
"$ git ls-remote http://www.kernel.org/pub/scm/git/git.git master seen rc\n"
"5fe978a5381f1fbad26a80e682ddd2a401966740\trefs/heads/master\n"
"c781a84b5204fb294c9ccc79f8b3baceeb32c061\trefs/heads/seen\n"
"$ git remote add korg http://www.kernel.org/pub/scm/git/git.git\n"
"$ git ls-remote --tags korg v\\*\n"
"d6602ec5194c87b0fc87103ca4d67251c76f233a\trefs/tags/v0.99\n"
"f25a265a342aed6041ab0cc484224d9ca54b6f41\trefs/tags/v0.99.1\n"
"c5db5456ae3b0873fc659c19fafdde22313cc441\trefs/tags/v0.99.2\n"
"7ceca275d047c90c0c7d5afb13ab97efdf51bd6e\trefs/tags/v0.99.3\n"
msgstr ""
"$ git ls-remote --tags ./.\n"
"d6602ec5194c87b0fc87103ca4d67251c76f233a\trefs/tags/v0.99\n"
"f25a265a342aed6041ab0cc484224d9ca54b6f41\trefs/tags/v0.99.1\n"
"7ceca275d047c90c0c7d5afb13ab97efdf51bd6e\trefs/tags/v0.99.3\n"
"c5db5456ae3b0873fc659c19fafdde22313cc441\trefs/tags/v0.99.2\n"
"0918385dbd9656cab0d1d81ba7453d49bbc16250\trefs/tags/junio-gpg-pub\n"
"$ git ls-remote http://www.kernel.org/pub/scm/git/git.git master seen rc\n"
"5fe978a5381f1fbad26a80e682ddd2a401966740\trefs/heads/master\n"
"c781a84b5204fb294c9ccc79f8b3baceeb32c061\trefs/heads/seen\n"
"$ git remote add korg http://www.kernel.org/pub/scm/git/git.git\n"
"$ git ls-remote --tags korg v\\*\n"
"d6602ec5194c87b0fc87103ca4d67251c76f233a\trefs/tags/v0.99\n"
"f25a265a342aed6041ab0cc484224d9ca54b6f41\trefs/tags/v0.99.1\n"
"c5db5456ae3b0873fc659c19fafdde22313cc441\trefs/tags/v0.99.2\n"
"7ceca275d047c90c0c7d5afb13ab97efdf51bd6e\trefs/tags/v0.99.3\n"

#. type: Plain text
#: en/git-ls-remote.txt:118
#, ignore-same, priority:100
msgid "linkgit:git-check-ref-format[1]."
msgstr "linkgit:git-check-ref-format[1]."

#. type: Title =
#: en/git-ls-tree.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-ls-tree(1)"
msgstr "git-ls-tree(1)"

#. type: Plain text
#: en/git-ls-tree.txt:7
#, priority:80
msgid "git-ls-tree - List the contents of a tree object"
msgstr "git-ls-tree - Lista o conteúdo de um objeto na árvore"

#. type: Plain text
#: en/git-ls-tree.txt:15
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git ls-tree' [-d] [-r] [-t] [-l] [-z]\n"
"\t    [--name-only] [--name-status] [--object-only] [--full-name] [--full-tree] [--abbrev[=<n>]] [--format=<format>]\n"
"\t    <tree-ish> [<path>...]\n"
msgstr ""
"'git ls-tree' [-d] [-r] [-t] [-l] [-z]\n"
"\t    [--name-only] [--name-status] [--object-only] [--full-name] [--full-tree] [--abbrev[=<n>]] [--format=<formato>]\n"
"\t    <tree-ish> [<caminho>...]\n"

#. type: Plain text
#: en/git-ls-tree.txt:20
#, priority:80
msgid "Lists the contents of a given tree object, like what \"/bin/ls -a\" does in the current working directory.  Note that:"
msgstr "Lista o conteúdo de um determinado objeto na árvore, como o que \"/bin/ls -a\" faz no diretório de trabalho atual.  Observe que:"

#. type: Plain text
#: en/git-ls-tree.txt:25
#, priority:80
msgid "the behaviour is slightly different from that of \"/bin/ls\" in that the '<path>' denotes just a list of patterns to match, e.g. so specifying directory name (without `-r`) will behave differently, and order of the arguments does not matter."
msgstr "o comportamento é um pouco diferente do \"/bin/ls\", pois o '<caminho>' indica apenas uma lista de padrões para serem coincididos, portanto, especificar o nome do diretório (sem `-r`) se comportará de maneira diferente e a ordem dos argumentos não importa."

#. type: Plain text
#: en/git-ls-tree.txt:35
#, priority:80
msgid "the behaviour is similar to that of \"/bin/ls\" in that the '<path>' is taken as relative to the current working directory.  E.g. when you are in a directory 'sub' that has a directory 'dir', you can run 'git ls-tree -r HEAD dir' to list the contents of the tree (that is `sub/dir` in `HEAD`).  You don't want to give a tree that is not at the root level (e.g. `git ls-tree -r HEAD:sub dir`) in this case, as that would result in asking for `sub/sub/dir` in the `HEAD` commit.  However, the current working directory can be ignored by passing --full-tree option."
msgstr "o comportamento é semelhante ao do \"/bin/ls\" onde o '<caminho>' é considerado como relativo ao diretório de trabalho atual.  Por exemplo, quando você está em um diretório 'sub' que possui um diretório 'dir', é possível executar o comando 'git ls-tree -r HEAD dir' para listar o conteúdo da árvore (que é `sub/dir` no `HEAD`).  Você quer informar uma árvore que não esteja no nível raiz (por exemplo, `git ls-tree -r HEAD:sub dir`) neste caso, pois isso resultaria na solicitação do `sub/sub/dir` no commit `HEAD`.  No entanto, o diretório de trabalho atual pode ser ignorado passando a opção `--full-tree`."

#. type: Plain text
#: en/git-ls-tree.txt:40
#, priority:80
msgid "Id of a tree-ish."
msgstr "Id de uma `tree-ish`."

#. type: Plain text
#: en/git-ls-tree.txt:43
#, priority:80
msgid "Show only the named tree entry itself, not its children."
msgstr "Exibe apenas a entrada da árvore informada em si, não seus herdeiros."

#. type: Plain text
#: en/git-ls-tree.txt:46
#, priority:80
msgid "Recurse into sub-trees."
msgstr "Recursar nas subárvores."

#. type: Plain text
#: en/git-ls-tree.txt:50
#, priority:80
msgid "Show tree entries even when going to recurse them. Has no effect if `-r` was not passed. `-d` implies `-t`."
msgstr "Exiba as entradas da árvore mesmo quando for recursá-las. Não tem efeito caso `-r` não tenha sido passado. `-d` implica no uso da opção `-t`."

#. type: Plain text
#: en/git-ls-tree.txt:54
#, priority:80
msgid "Show object size of blob (file) entries."
msgstr "Exibe o tamanho do objeto nas entradas da bolha (arquivo)."

#. type: Plain text
#: en/git-ls-tree.txt:58
#, priority:80
msgid "\\0 line termination on output and do not quote filenames.  See OUTPUT FORMAT below for more information."
msgstr "A terminação \\0 da linha na saída e não cita os nomes dos arquivos.  Consulte FORMATO DE SAÍDA abaixo para obter mais informações."

#. type: Plain text
#: en/git-ls-tree.txt:63
#, priority:80
msgid "List only filenames (instead of the \"long\" output), one per line.  Cannot be combined with `--object-only`."
msgstr "Liste apenas os nomes dos arquivos (em vez da saída \"longa\"), um por linha.  Não pode ser combinado com a opção `--object-only`."

#. type: Labeled list
#: en/git-ls-tree.txt:64
#, ignore-same, no-wrap, priority:80
msgid "--object-only"
msgstr "--object-only"

#. type: Plain text
#: en/git-ls-tree.txt:71
#, priority:80
msgid "List only names of the objects, one per line. Cannot be combined with `--name-only` or `--name-status`.  This is equivalent to specifying `--format='%(objectname)'`, but for both this option and that exact format the command takes a hand-optimized codepath instead of going through the generic formatting mechanism."
msgstr "Liste apenas os nomes dos objetos, um por linha. Não pode ser combinado com a opção `--name-only` ou `--name-status`. Isso é o mesmo que usar `--format='%(objectname)'`, mas tanto para esta opção quanto para aquele formato exato, o comando usa um caminho de código otimizado manualmente em vez de passar pelo mecanismo de formatação genérico."

#. type: Plain text
#: en/git-ls-tree.txt:81
#, priority:80
msgid "Instead of showing the path names relative to the current working directory, show the full path names."
msgstr "Em vez de mostrar os nomes dos caminhos relativos ao diretório de trabalho atual, mostre os nomes completos dos caminhos."

#. type: Plain text
#: en/git-ls-tree.txt:85
#, priority:80
msgid "Do not limit the listing to the current working directory.  Implies --full-name."
msgstr "Não limite a listagem ao diretório de trabalho atual.  Implica no uso da opção `--full-name`."

#. type: Plain text
#: en/git-ls-tree.txt:95
#, priority:80
msgid "A string that interpolates `%(fieldname)` from the result being shown. It also interpolates `%%` to `%`, and `%xx` where `xx` are hex digits interpolates to character with hex code `xx`; for example `%00` interpolates to `\\0` (NUL), `%09` to `\\t` (TAB) and `%0a` to `\\n` (LF).  When specified, `--format` cannot be combined with other format-altering options, including `--long`, `--name-only` and `--object-only`."
msgstr "Uma string que interpola `%(fieldname)` do resultado que está sendo mostrado. Ele também interpola `%%` para `%`, e `%xx` onde `xx` são dígitos hexadecimais interpolados para o caractere com código hexadecimal `xx`; por exemplo, `%00` interpola para `\\0` (NUL), `%09` para `\\t` (TAB) e `%0a` para `\\n` (LF). Quando especificado, `--format` não pode ser combinado com outras opções de alteração do formato como `--long`, `--name-only` e `--object-only`."

#. type: Labeled list
#: en/git-ls-tree.txt:96
#, ignore-ellipsis, no-wrap, priority:80
msgid "[<path>...]"
msgstr "[<caminho>...]"

#. type: Plain text
#: en/git-ls-tree.txt:100
#, priority:80
msgid "When paths are given, show them (note that this isn't really raw pathnames, but rather a list of patterns to match).  Otherwise implicitly uses the root level of the tree as the sole path argument."
msgstr "Quando os caminhos forem informados, exiba-os (observe que estes nomes do caminho não são realmente brutos, porém uma lista de padrões que serão combinados).  Caso contrário, implicitamente utiliza o nível na raiz da árvore como o único argumento do caminho."

#. type: Title -
#: en/git-ls-tree.txt:103
#, no-wrap, priority:80
msgid "Output Format"
msgstr "Formato de saída"

#. type: Plain text
#: en/git-ls-tree.txt:108
#, priority:80
msgid "The output format of `ls-tree` is determined by either the `--format` option, or other format-altering options such as `--name-only` etc.  (see `--format` above)."
msgstr "O formato de saída do `ls-tree` é determinado pela opção `--format` ou com as outras opções de alteração do formato, tais como `--name-only` etc.  (consulte o `--format` acima)."

#. type: Plain text
#: en/git-ls-tree.txt:112
#, priority:80
msgid "The use of certain `--format` directives is equivalent to using those options, but invoking the full formatting machinery can be slower than using an appropriate formatting option."
msgstr "O uso de certas diretivas `--format` à utilização dessas opções, ao invocar o mecanismo completo de formatação pode ser mais lento do que se usar uma opção de formatação apropriada."

#. type: Plain text
#: en/git-ls-tree.txt:116
#, priority:80
msgid "In cases where the `--format` would exactly map to an existing option `ls-tree` will use the appropriate faster path. Thus the default format is equivalent to:"
msgstr "Nos casos onde o `- -format` mapearia exatamente para uma opção existente, o `ls-tree` utilizará o caminho mais rápido e apropriado. Assim, o formato padrão é equivalente a:"

#. type: Plain text
#: en/git-ls-tree.txt:118
#, no-wrap, priority:80
msgid "\t%(objectmode) %(objecttype) %(objectname)%x09%(path)\n"
msgstr "\t%(objectmode) %(objecttype) %(objectname)%x09%(path)\n"

#. type: Plain text
#: en/git-ls-tree.txt:121
#, priority:80
msgid "This output format is compatible with what `--index-info --stdin` of 'git update-index' expects."
msgstr "Este formato gerado é compatível com o que a opção `--index-info --stdin` do comando 'git update-index' espera."

#. type: Plain text
#: en/git-ls-tree.txt:123
#, priority:80
msgid "When the `-l` option is used, format changes to"
msgstr "Quando a opção `-l` é utilizada, o formato muda para"

#. type: Plain text
#: en/git-ls-tree.txt:125
#, no-wrap, priority:80
msgid "\t%(objectmode) %(objecttype) %(objectname) %(objectsize:padded)%x09%(path)\n"
msgstr "\t%(objectmode) %(objecttype) %(objectname) %(objectsize:padded)%x09%(path)\n"

#. type: Plain text
#: en/git-ls-tree.txt:129
#, priority:80
msgid "Object size identified by <objectname> is given in bytes, and right-justified with minimum width of 7 characters.  Object size is given only for blobs (file) entries; for other entries `-` character is used in place of size."
msgstr "O tamanho do objeto identificado pelo `<nome_do_objeto>` é informado em bytes e justificado à direita com largura mínima de 7 caracteres.  O tamanho do objeto é informado apenas para as entradas das bolhas (arquivo); para as outras entradas, o caracter `-` é utilizado no lugar do tamanho."

#. type: Plain text
#: en/git-ls-tree.txt:136
#, priority:80
msgid "Customized format:"
msgstr "Formato personalizado:"

#. type: Plain text
#: en/git-ls-tree.txt:141
#, priority:80
msgid "It is possible to print in a custom format by using the `--format` option, which is able to interpolate different fields using a `%(fieldname)` notation.  For example, if you only care about the \"objectname\" and \"path\" fields, you can execute with a specific \"--format\" like"
msgstr "É possível imprimir em um formato personalizado usando a opção `--format`, que é capaz de interpolar diferentes campos usando uma notação `%(fieldname)`. Por exemplo, se você se importa apenas com os campos \"objectname\" e \"path\", você pode executar com um comando \"--format\" específico como"

#. type: Plain text
#: en/git-ls-tree.txt:143
#, no-wrap, priority:80
msgid "\tgit ls-tree --format='%(objectname) %(path)' <tree-ish>\n"
msgstr "\tgit ls-tree --format='%(objectname) %(caminho)' <tree-ish>\n"

#. type: Plain text
#: en/git-ls-tree.txt:150
#, priority:80
msgid "Various values from structured fields can be used to interpolate into the resulting output. For each outputing line, the following names can be used:"
msgstr "Há vários valores dos campos estruturados que podem ser utilizados para a interpolação da saída resultante. Para cada linha gerada, os seguintes nomes podem ser usados:"

#. type: Plain text
#: en/git-ls-tree.txt:153
#, priority:80
msgid "The mode of the object."
msgstr "O modo do objeto."

#. type: Plain text
#: en/git-ls-tree.txt:155
#, priority:80
msgid "The type of the object (`commit`, `blob` or `tree`)."
msgstr "O tipo do objeto (`commit`, `blob` ou `tree`)."

#. type: Plain text
#: en/git-ls-tree.txt:157
#, priority:80
msgid "The name of the object."
msgstr "O nome do objeto."

#. type: Labeled list
#: en/git-ls-tree.txt:157
#, no-wrap, priority:80
msgid "objectsize[:padded]"
msgstr "objectsize[:padded]"

#. type: Plain text
#: en/git-ls-tree.txt:160
#, priority:80
msgid "The size of a `blob` object (\"-\" if it's a `commit` or `tree`).  It also supports a padded format of size with \"%(objectsize:padded)\"."
msgstr "O tamanho do objeto `blob` (\"-\" caso seja um `commit` ou `tree`). Também suporta um formato preenchido do tamanho com \"%(objectsize:padded)\"."

#. type: Plain text
#: en/git-ls-tree.txt:162
#, priority:80
msgid "The pathname of the object."
msgstr "O caminho do objeto."

#. type: Title =
#: en/git-mailinfo.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-mailinfo(1)"
msgstr "git-mailinfo(1)"

#. type: Plain text
#: en/git-mailinfo.txt:7
#, priority:100
msgid "git-mailinfo - Extracts patch and authorship from a single e-mail message"
msgstr "git-mailinfo - Extrai o patch e a autoria de uma única mensagem de e-mail"

#. type: Plain text
#: en/git-mailinfo.txt:15
#, no-wrap, priority:100
msgid ""
"'git mailinfo' [-k|-b] [-u | --encoding=<encoding> | -n]\n"
"\t       [--[no-]scissors] [--quoted-cr=<action>]\n"
"\t       <msg> <patch>\n"
msgstr ""
"'git mailinfo' [-k|-b] [-u | --encoding=<encoding> | -n]\n"
"\t       [--[no-]scissors] [--quoted-cr=<ação>]\n"
"\t       <msg> <patch>\n"

#. type: Plain text
#: en/git-mailinfo.txt:25
#, priority:100
msgid "Reads a single e-mail message from the standard input, and writes the commit log message in <msg> file, and the patches in <patch> file.  The author name, e-mail and e-mail subject are written out to the standard output to be used by 'git am' to create a commit.  It is usually not necessary to use this command directly.  See linkgit:git-am[1] instead."
msgstr "Lê uma única mensagem de email da entrada padrão, registra a mensagem do commit no log num arquivo <msg>, e os patches num arquivo <patch>.  O nome do autor, o assunto da mensagem e o endereço do e-mail são gravados na saída padrão para criar um commit que serão utilizados pelo comando 'git am'.  Na maioria das vezes, não é necessário usar este comando diretamente.  Em vez disso, consulte linkgit:git-am[1]."

#. type: Plain text
#: en/git-mailinfo.txt:34
#, priority:100
msgid "Usually the program removes email cruft from the Subject: header line to extract the title line for the commit log message.  This option prevents this munging, and is most useful when used to read back 'git format-patch -k' output."
msgstr "Normalmente, o programa remove a sujeira do cabeçalho do Assunto: do e-mail extraindo o título da linha da mensagem do registro log do commit.  Esta opção evita essa interrupção e tem mais utilidade quando utilizada para ler a saída do comando 'git format-patch -k'."

#. type: Plain text
#: en/git-mailinfo.txt:36
#, priority:100
msgid "Specifically, the following are removed until none of them remain:"
msgstr "Especificamente, o seguinte é removido até que nenhum deles permaneça:"

#. type: Plain text
#: en/git-mailinfo.txt:39
#, priority:100
msgid "Leading and trailing whitespace."
msgstr "Os espaços à esquerda e à direita."

#. type: Plain text
#: en/git-mailinfo.txt:41
#, priority:100
msgid "Leading `Re:`, `re:`, and `:`."
msgstr "Iniciando com `Re:`, `re:`, e `:`."

#. type: Plain text
#: en/git-mailinfo.txt:43
#, priority:100
msgid "Leading bracketed strings (between `[` and `]`, usually"
msgstr "As sequências dos caracteres entre colchetes à esquerda (entre `[` e `]`, geralmente"

#. type: Plain text
#: en/git-mailinfo.txt:44
#, priority:100
msgid "`[PATCH]`)."
msgstr "`[PATCH]`)."

#. type: Plain text
#: en/git-mailinfo.txt:48
#, priority:100
msgid "Finally, runs of whitespace are normalized to a single ASCII space character."
msgstr "Finalmente, as execuções do espaço são normalizadas para um único caractere de espaço ASCII."

#. type: Plain text
#: en/git-mailinfo.txt:53
#, priority:100
msgid "When -k is not in effect, all leading strings bracketed with '[' and ']' pairs are stripped.  This option limits the stripping to only the pairs whose bracketed string contains the word \"PATCH\"."
msgstr "Quando -k não está em vigor, todas as cadeias iniciais entre parênteses com os pares '[' e ']' são removidos.  Esta opção limita a remoção apenas aos pares cuja cadeia entre os colchetes contenha a palavra \"PATCH\"."

#. type: Plain text
#: en/git-mailinfo.txt:60
#, priority:100
msgid "The commit log message, author name and author email are taken from the e-mail, and after minimally decoding MIME transfer encoding, re-coded in the charset specified by `i18n.commitEncoding` (defaulting to UTF-8) by transliterating them.  This used to be optional but now it is the default."
msgstr "A mensagem do registro log do commit, o nome do autor e seu e-mail são obtidos a partir do e-mail e após a decodificação mínima da codificação de transferência MIME, recodificados no conjunto de caracteres definido pela opção de configuração `i18n.commitEncoding` (predefinido para UTF-8), transliterando-os.  Isso costumava ser opcional, agora é o padrão."

#. type: Plain text
#: en/git-mailinfo.txt:63
#, priority:100
msgid "Note that the patch is always used as-is without charset conversion, even with this flag."
msgstr "Observe que o patch é sempre utilizado como está, sem conversão do 'charset' (definição dos caracteres), mesmo com esta opção."

#. type: Plain text
#: en/git-mailinfo.txt:67
#, priority:100
msgid "Similar to -u.  But when re-coding, the charset specified here is used instead of the one specified by `i18n.commitEncoding` or UTF-8."
msgstr "Semelhante ao -u.  Porém, ao re-codificar, o conjunto dos caracteres informados aqui é utilizado em vez do informado pelo `i18n.commitEncoding` ou o UTF-8."

#. type: Plain text
#: en/git-mailinfo.txt:70
#, priority:100
msgid "Disable all charset re-coding of the metadata."
msgstr "Desative toda a re-codificação do \"charset\" dos metadados."

#. type: Plain text
#: en/git-mailinfo.txt:75
#, priority:100
msgid "Copy the Message-ID header at the end of the commit message.  This is useful in order to associate commits with mailing list discussions."
msgstr "Copie o cabeçalho da ID da mensagem no final da mensagem do commit.  É útil para associar os commits a discussões nas listas de discussão."

#. type: Plain text
#: en/git-mailinfo.txt:83
#, priority:100
msgid "Remove everything in body before a scissors line (e.g. \"-- >8 --\").  The line represents scissors and perforation marks, and is used to request the reader to cut the message at that line.  If that line appears in the body of the message before the patch, everything before it (including the scissors line itself) is ignored when this option is used."
msgstr "Remove tudo do corpo da mensagem antes das marcações  (por exemplo \"-- >8 --\").  A linha representa cortes e marcas de perfuração utilizada para pedir ao leitor que corte a mensagem bem nessa linha.  Caso esta linha apareça no corpo da mensagem antes do patch, tudo o que estiver à frente (incluindo a própria linha) será ignorado quando essa opção for utilizada."

#. type: Plain text
#: en/git-mailinfo.txt:88
#, priority:100
msgid "This is useful if you want to begin your message in a discussion thread with comments and suggestions on the message you are responding to, and to conclude it with a patch submission, separating the discussion and the beginning of the proposed commit log message with a scissors line."
msgstr "É útil caso queira iniciar a sua mensagem num tópico de discussão com comentários e sugestões sobre a mensagem que está respondendo e concluí-la com um envio do patch, separando a discussão e o início da mensagem do registro log do commit proposta com uma linha de grafo traçado."

#. type: Plain text
#: en/git-mailinfo.txt:90
#, priority:100
msgid "This can be enabled by default with the configuration option mailinfo.scissors."
msgstr "É possível que seja predefinidamente ativada com a opção de configuração mailinfo.scissors."

#. type: Plain text
#: en/git-mailinfo.txt:93
#, priority:100
msgid "Ignore scissors lines. Useful for overriding mailinfo.scissors settings."
msgstr "Ignore as linhas de grafo traçado. Útil para substituir as configurações de mailinfo.scissors."

#. type: Plain text
#: en/git-mailinfo.txt:98
#, priority:100
msgid "Action when processes email messages sent with base64 or quoted-printable encoding, and the decoded lines end with a CRLF instead of a simple LF."
msgstr "A ação quando processa as mensagens de e-mail enviadas com codificação base64 ou citada para impressão, as linhas decodificadas terminam com um CRLF em vez de um LF simples."

#. type: Plain text
#: en/git-mailinfo.txt:100
#, priority:100
msgid "The valid actions are:"
msgstr "As ações válidas são:"

#. type: Plain text
#: en/git-mailinfo.txt:103
#, priority:100
msgid "`nowarn`: Git will do nothing when such a CRLF is found."
msgstr "`nowarn`: O git não fará nada quando tal CRLF for encontrado."

#. type: Plain text
#: en/git-mailinfo.txt:104
#, priority:100
msgid "`warn`: Git will issue a warning for each message if such a CRLF is"
msgstr "`warn`: O git emitirá um aviso para cada mensagem caso tal CRLF seja"

#. type: Plain text
#: en/git-mailinfo.txt:105
#, priority:100
msgid "found."
msgstr "encontrado."

#. type: Plain text
#: en/git-mailinfo.txt:106
#, priority:100
msgid "`strip`: Git will convert those CRLF to LF."
msgstr "`strip`: O git converterá estes CRLF para LF."

#. type: Plain text
#: en/git-mailinfo.txt:110
#, priority:100
msgid "The default action could be set by configuration option `mailinfo.quotedCR`.  If no such configuration option has been set, `warn` will be used."
msgstr "A ação predefinida pode ser definida pela opção de configuração `mailinfo.quotedCR`.  Caso nenhuma opção de configuração tenha sido definida, um `warn` será usado."

#. type: Labeled list
#: en/git-mailinfo.txt:111
#, no-wrap, priority:100
msgid "<msg>"
msgstr "<msg>"

#. type: Plain text
#: en/git-mailinfo.txt:114
#, priority:100
msgid "The commit log message extracted from e-mail, usually except the title line which comes from e-mail Subject."
msgstr "Geralmente a mensagem do registro log do commit extraída do e-mail, exceto quando a linha do título que vem do Assunto do email."

#. type: Labeled list
#: en/git-mailinfo.txt:115
#, no-wrap, priority:100
msgid "<patch>"
msgstr "<patch>"

#. type: Plain text
#: en/git-mailinfo.txt:117
#, priority:100
msgid "The patch extracted from e-mail."
msgstr "O patch extraído do e-mail."

#. type: Title =
#: en/git-mailsplit.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-mailsplit(1)"
msgstr "git-mailsplit(1)"

#. type: Plain text
#: en/git-mailsplit.txt:7
#, priority:100
msgid "git-mailsplit - Simple UNIX mbox splitter program"
msgstr "git-mailsplit - Simples Programa separador do mbox UNIX"

#. type: Plain text
#: en/git-mailsplit.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git mailsplit' [-b] [-f<nn>] [-d<prec>] [--keep-cr] [--mboxrd]\n"
"\t\t-o<directory> [--] [(<mbox>|<Maildir>)...]\n"
msgstr ""
"'git mailsplit' [-b] [-f<nn>] [-d<prec>] [--keep-cr] [--mboxrd]\n"
"\t\t-o<diretório> [--] [(<mbox>|<Maildir>)...]\n"

#. type: Plain text
#: en/git-mailsplit.txt:18
#, priority:100
msgid "Splits a mbox file or a Maildir into a list of files: \"0001\" \"0002\" ..  in the specified directory so you can process them further from there."
msgstr "Divide um arquivo 'mbox' ou um 'Maildir' numa lista de arquivos: \"0001\" \"0002\" ..  no diretório informado para que você possa processá-los ainda mais a partir daí."

#. type: Plain text
#: en/git-mailsplit.txt:21
#, priority:100
msgid "Maildir splitting relies upon filenames being sorted to output patches in the correct order."
msgstr "A divisão do Maildir depende da classificação dos nomes dos arquivos para produzir os patches na ordem correta."

#. type: Labeled list
#: en/git-mailsplit.txt:24
#, no-wrap, priority:100
msgid "<mbox>"
msgstr "<mbox>"

#. type: Plain text
#: en/git-mailsplit.txt:27
#, priority:100
msgid "Mbox file to split.  If not given, the mbox is read from the standard input."
msgstr "O arquivo Mbox para ser dividido.  Se não for informada, a mbox é lida na entrada padrão."

#. type: Labeled list
#: en/git-mailsplit.txt:28
#, no-wrap, priority:100
msgid "<Maildir>"
msgstr "<Maildir>"

#. type: Plain text
#: en/git-mailsplit.txt:31
#, priority:100
msgid "Root of the Maildir to split. This directory should contain the cur, tmp and new subdirectories."
msgstr "Raiz do Maildir que será dividida. Este diretório deve conter os subdiretórios `cur`, `tmp` e `new`."

#. type: Labeled list
#: en/git-mailsplit.txt:32
#, no-wrap, priority:100
msgid "-o<directory>"
msgstr "-o<diretório>"

#. type: Plain text
#: en/git-mailsplit.txt:34
#, priority:100
msgid "Directory in which to place the individual messages."
msgstr "O diretório onde colocar as mensagens individuais."

#. type: Plain text
#: en/git-mailsplit.txt:38
#, priority:100
msgid "If any file doesn't begin with a From line, assume it is a single mail message instead of signaling error."
msgstr "Caso algum arquivo não comece com uma linha \"De\", suponha que seja uma única mensagem de e-mail em vez de sinalizar um erro."

#. type: Labeled list
#: en/git-mailsplit.txt:39
#, no-wrap, priority:100
msgid "-d<prec>"
msgstr "-d<prec>"

#. type: Plain text
#: en/git-mailsplit.txt:43
#, priority:100
msgid "Instead of the default 4 digits with leading zeros, different precision can be specified for the generated filenames."
msgstr "Em vez dos 4 dígitos predefinidos com zeros à esquerda, uma precisão diferente pode ser definida para os nomes dos arquivos gerados."

#. type: Labeled list
#: en/git-mailsplit.txt:44
#, no-wrap, priority:100
msgid "-f<nn>"
msgstr "-f<nn>"

#. type: Plain text
#: en/git-mailsplit.txt:47
#, priority:100
msgid "Skip the first <nn> numbers, for example if -f3 is specified, start the numbering with 0004."
msgstr "Pule os primeiros números <nn>, caso -f3 seja utilizado, inicie a numeração com 0004 por exemplo."

#. type: Labeled list
#: en/git-mailsplit.txt:48
#, ignore-same, no-wrap, priority:100
msgid "--keep-cr"
msgstr "--keep-cr"

#. type: Plain text
#: en/git-mailsplit.txt:50
#, priority:100
msgid "Do not remove `\\r` from lines ending with `\\r\\n`."
msgstr "Não remova os `\\r` das linhas que terminam com `\\r\\n`."

#. type: Labeled list
#: en/git-mailsplit.txt:51
#, ignore-same, no-wrap, priority:100
msgid "--mboxrd"
msgstr "--mboxrd"

#. type: Plain text
#: en/git-mailsplit.txt:54
#, priority:100
msgid "Input is of the \"mboxrd\" format and \"^>+From \" line escaping is reversed."
msgstr "A entrada utiliza o formato \"mboxrd\" e a quebra da linha \"^>+From \" é revertida."

#. type: Title =
#: en/git-merge-base.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-merge-base(1)"
msgstr "git-merge-base(1)"

#. type: Plain text
#: en/git-merge-base.txt:7
#, priority:80
msgid "git-merge-base - Find as good common ancestors as possible for a merge"
msgstr "git-merge-base - Encontre o melhor ancestral comum possível para uma mesclagem"

#. type: Plain text
#: en/git-merge-base.txt:17
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git merge-base' [-a|--all] <commit> <commit>...\n"
"'git merge-base' [-a|--all] --octopus <commit>...\n"
"'git merge-base' --is-ancestor <commit> <commit>\n"
"'git merge-base' --independent <commit>...\n"
"'git merge-base' --fork-point <ref> [<commit>]\n"
msgstr ""
"'git merge-base' [-a|--all] <commit> <commit>...\n"
"'git merge-base' [-a|--all] --octopus <commit>...\n"
"'git merge-base' --is-ancestor <commit> <commit>\n"
"'git merge-base' --independent <commit>...\n"
"'git merge-base' --fork-point <ref> [<commit>]\n"

#. type: Plain text
#: en/git-merge-base.txt:27
#, priority:80
msgid "'git merge-base' finds best common ancestor(s) between two commits to use in a three-way merge.  One common ancestor is 'better' than another common ancestor if the latter is an ancestor of the former.  A common ancestor that does not have any better common ancestor is a 'best common ancestor', i.e. a 'merge base'.  Note that there can be more than one merge base for a pair of commits."
msgstr "O comando 'git merge-base' encontra os melhores ancestrais comuns entre dois commits para utiliza-lo numa mesclagem de três vias.  Um ancestral comum é 'melhor' que um outro ancestral comum caso o último seja um ancestral do primeiro.  Um ancestral comum que não possua um melhor ancestral comum, será o 'melhor ancestral comum', ou seja, será uma 'base para a mesclagem'.  Observe que pode haver mais de uma base para mesclagem para um par de commits."

#. type: Title -
#: en/git-merge-base.txt:29
#, no-wrap, priority:80
msgid "OPERATION MODES"
msgstr "MODOS DE OPERAÇÃO"

#. type: Plain text
#: en/git-merge-base.txt:33
#, priority:80
msgid "As the most common special case, specifying only two commits on the command line means computing the merge base between the given two commits."
msgstr "Como o caso especial mais comum, utilizar apenas dois commits na linha de comando significa calcular a base de mesclagem entre os dois commits informados."

#. type: Plain text
#: en/git-merge-base.txt:38
#, priority:80
msgid "More generally, among the two commits to compute the merge base from, one is specified by the first commit argument on the command line; the other commit is a (possibly hypothetical) commit that is a merge across all the remaining commits on the command line."
msgstr "De maneira mais geral, entre os dois commits para fazer cálculo na base de mesclagem, um é definido pelo primeiro argumento do commit na linha de comando; o outro commit é um commit (possivelmente hipotético) que é uma mesclagem entre todos os demais commits na linha de comando."

#. type: Plain text
#: en/git-merge-base.txt:42
#, priority:80
msgid "As a consequence, the 'merge base' is not necessarily contained in each of the commit arguments if more than two commits are specified. This is different from linkgit:git-show-branch[1] when used with the `--merge-base` option."
msgstr "Como consequência, o 'merge base' (a base da mesclagem) não está necessariamente contida em cada uma das opções do commit caso mais de dois commits forem informadas. Isso é diferente do linkgit:git-show-branch[1] quando utilizado com a opção `--merge-base`."

#. type: Labeled list
#: en/git-merge-base.txt:43
#, ignore-same, no-wrap, priority:80
msgid "--octopus"
msgstr "--octopus"

#. type: Plain text
#: en/git-merge-base.txt:47
#, priority:80
msgid "Compute the best common ancestors of all supplied commits, in preparation for an n-way merge.  This mimics the behavior of 'git show-branch --merge-base'."
msgstr "Calcule os melhores ancestrais comuns de todos commits informados, em preparação para uma mesclagem \"n-way\".  Imita o comportamento do comando 'git show-branch --merge-base'."

#. type: Labeled list
#: en/git-merge-base.txt:48 en/git-show-branch.txt:90
#, ignore-same, no-wrap, priority:100
msgid "--independent"
msgstr "--independent"

#. type: Plain text
#: en/git-merge-base.txt:54
#, priority:80
msgid "Instead of printing merge bases, print a minimal subset of the supplied commits with the same ancestors.  In other words, among the commits given, list those which cannot be reached from any other.  This mimics the behavior of 'git show-branch --independent'."
msgstr "Em vez de exibir as bases de mesclagem, exiba um subconjunto mínimo dos commits informados com os mesmos ancestrais.  Em outras palavras, entre os commits informados, liste aqueles que não podem ser alcançados por nenhum outro.  Imita o comportamento do comando 'git show-branch --independent'."

#. type: Labeled list
#: en/git-merge-base.txt:55
#, ignore-same, no-wrap, priority:80
msgid "--is-ancestor"
msgstr "--is-ancestor"

#. type: Plain text
#: en/git-merge-base.txt:59
#, priority:80
msgid "Check if the first <commit> is an ancestor of the second <commit>, and exit with status 0 if true, or with status 1 if not.  Errors are signaled by a non-zero status that is not 1."
msgstr "Verifique se o primeiro <commit> é um ancestral do segundo <commit> e encerre com a condição 0, se for verdadeiro, ou com a condição 1 se não for.  Os erros são sinalizados através de uma condição diferente de zero que não seja 1."

#. type: Labeled list
#: en/git-merge-base.txt:60 en/git-rebase.txt:434
#, ignore-same, no-wrap, priority:100
msgid "--fork-point"
msgstr "--fork-point"

#. type: Plain text
#: en/git-merge-base.txt:68
#, priority:80
msgid "Find the point at which a branch (or any history that leads to <commit>) forked from another branch (or any reference)  <ref>. This does not just look for the common ancestor of the two commits, but also takes into account the reflog of <ref> to see if the history leading to <commit> forked from an earlier incarnation of the branch <ref> (see discussion on this mode below)."
msgstr "Encontre o ponto onde uma ramificação (ou qualquer histórico que leve ao <commit>) bifurque-se da outra ramificação (ou qualquer outra referência) <ref>. Isso não procura apenas pelo ancestral comum dos dois commits, mas também leva em consideração o reflog de <ref> para ver se o histórico que levou ao <commit> bifurcou-se de uma encarnação anterior do ramo <ref> (consulte a discussão sobre este modo abaixo)."

#. type: Plain text
#: en/git-merge-base.txt:74
#, priority:80
msgid "Output all merge bases for the commits, instead of just one."
msgstr "Gere todas as bases da mesclagem para os commits em vez de apenas um."

#. type: Plain text
#: en/git-merge-base.txt:80
#, priority:80
msgid "Given two commits 'A' and 'B', `git merge-base A B` will output a commit which is reachable from both 'A' and 'B' through the parent relationship."
msgstr "Dado dois commits 'A' e 'B', o `git merge-base A B` produzirá um commit que pode ser acessado a partir de 'A' e 'B' através do relacionamento com a origem."

#. type: Plain text
#: en/git-merge-base.txt:82
#, priority:80
msgid "For example, with this topology:"
msgstr "Por exemplo, com esta topologia:"

#. type: delimited block .
#: en/git-merge-base.txt:87
#, no-wrap, priority:80
msgid ""
"\t o---o---o---B\n"
"\t/\n"
"---o---1---o---o---o---A\n"
msgstr ""
"\t o---o---o---B\n"
"\t/\n"
"---o---1---o---o---o---A\n"

#. type: Plain text
#: en/git-merge-base.txt:90
#, priority:80
msgid "the merge base between 'A' and 'B' is '1'."
msgstr "a base de mesclagem entre 'A' e 'B' é '1'."

#. type: Plain text
#: en/git-merge-base.txt:94
#, priority:80
msgid "Given three commits 'A', 'B' and 'C', `git merge-base A B C` will compute the merge base between 'A' and a hypothetical commit 'M', which is a merge between 'B' and 'C'.  For example, with this topology:"
msgstr "Dados três commits 'A', 'B' e 'C', `git merge-base A B C` irá calcular a base de fusão entre 'A' e um hipotético commit 'M', que é uma fusão entre 'B' e 'C'.  Por exemplo, com esta topologia:"

#. type: delimited block .
#: en/git-merge-base.txt:101
#, no-wrap, priority:80
msgid ""
"       o---o---o---o---C\n"
"      /\n"
"     /   o---o---o---B\n"
"    /   /\n"
"---2---1---o---o---o---A\n"
msgstr ""
"       o---o---o---o---C\n"
"      /\n"
"     /   o---o---o---B\n"
"    /   /\n"
"---2---1---o---o---o---A\n"

#. type: Plain text
#: en/git-merge-base.txt:105
#, priority:80
msgid "the result of `git merge-base A B C` is '1'.  This is because the equivalent topology with a merge commit 'M' between 'B' and 'C' is:"
msgstr "o resultado do `git merge-base A B C` é '1'.  Isso ocorre porque a topologia equivalente com uma consolidação de mesclagem 'M' entre 'B' e 'C' é:"

#. type: delimited block .
#: en/git-merge-base.txt:113
#, no-wrap, priority:80
msgid ""
"       o---o---o---o---o\n"
"      /                 \\\n"
"     /   o---o---o---o---M\n"
"    /   /\n"
"---2---1---o---o---o---A\n"
msgstr ""
"       o---o---o---o---o\n"
"      /                 \\\n"
"     /   o---o---o---o---M\n"
"    /   /\n"
"---2---1---o---o---o---A\n"

#. type: Plain text
#: en/git-merge-base.txt:118
#, priority:80
msgid "and the result of `git merge-base A M` is '1'.  Commit '2' is also a common ancestor between 'A' and 'M', but '1' is a better common ancestor, because '2' is an ancestor of '1'.  Hence, '2' is not a merge base."
msgstr "e o resultado do `git merge-base A M` é '1'.  O commit '2' também é um ancestral comum entre 'A' e 'M', porém '1' é um melhor ancestral comum, porque '2' é um ancestral de '1'.  Portanto, '2' não é uma base de mesclagem."

#. type: Plain text
#: en/git-merge-base.txt:121
#, priority:80
msgid "The result of `git merge-base --octopus A B C` is '2', because '2' is the best common ancestor of all commits."
msgstr "O resultado do `git merge-base --octopus A B C` é '2', porque '2' é o melhor ancestral comum de todos os commits."

#. type: Plain text
#: en/git-merge-base.txt:124
#, priority:80
msgid "When the history involves criss-cross merges, there can be more than one 'best' common ancestor for two commits.  For example, with this topology:"
msgstr "Quando a história envolve mesclagens cruzadas, pode haver mais de um \"melhor\" ancestral comum para dois commits.  Por exemplo, com esta topologia:"

#. type: delimited block .
#: en/git-merge-base.txt:131
#, no-wrap, priority:80
msgid ""
"---1---o---A\n"
"    \\ /\n"
"     X\n"
"    / \\\n"
"---2---o---o---B\n"
msgstr ""
"---1---o---A\n"
"    \\ /\n"
"     X\n"
"    / \\\n"
"---2---o---o---B\n"

#. type: Plain text
#: en/git-merge-base.txt:136
#, priority:80
msgid "both '1' and '2' are merge-bases of A and B.  Neither one is better than the other (both are 'best' merge bases).  When the `--all` option is not given, it is unspecified which best one is output."
msgstr "ambos os '1' e '2' são bases de mesclagem de A e B. Nenhum é melhor que o outro (ambos são 'melhores' bases de mesclagem).  Quando a opção `--all` não é utilizado, não da para saber qual é a melhor saída."

#. type: Plain text
#: en/git-merge-base.txt:141
#, priority:80
msgid "A common idiom to check \"fast-forward-ness\" between two commits A and B is (or at least used to be) to compute the merge base between A and B, and check if it is the same as A, in which case, A is an ancestor of B.  You will see this idiom used often in older scripts."
msgstr "Um idioma comum para verificar o \"avanço rápido\" entre os dois commits 'A' e 'B' seja (ou pelo menos costumava ser) calcular a base da mesclagem entre 'A' e 'B' e verificar se é o mesmo que 'A'; nesse caso, 'A' é um ancestral de 'B'. Você verá este idioma utilizado frequentemente com scripts mais antigos."

#. type: delimited block .
#: en/git-merge-base.txt:148
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"A=$(git rev-parse --verify A)\n"
"if test \"$A\" = \"$(git merge-base A B)\"\n"
"then\n"
"\t... A is an ancestor of B ...\n"
"fi\n"
msgstr ""
"A=$(git rev-parse --verify A)\n"
"if test \"$A\" = \"$(git merge-base A B)\"\n"
"then\n"
"\t... A é um ancestral do B ...\n"
"fi\n"

#. type: Plain text
#: en/git-merge-base.txt:151
#, priority:80
msgid "In modern git, you can say this in a more direct way:"
msgstr "No git moderno, você pode dizer isso de uma maneira mais direta:"

#. type: delimited block .
#: en/git-merge-base.txt:157
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"if git merge-base --is-ancestor A B\n"
"then\n"
"\t... A is an ancestor of B ...\n"
"fi\n"
msgstr ""
"if git merge-base --is-ancestor A B\n"
"then\n"
"\t... A é um ancestral do B ...\n"
"fi\n"

#. type: Plain text
#: en/git-merge-base.txt:160
#, priority:80
msgid "instead."
msgstr "em vez disso."

#. type: Title -
#: en/git-merge-base.txt:162
#, no-wrap, priority:80
msgid "Discussion on fork-point mode"
msgstr "Discussão sobre o modo do ponto de forquilha"

#. type: Plain text
#: en/git-merge-base.txt:168
#, priority:80
msgid "After working on the `topic` branch created with `git switch -c topic origin/master`, the history of remote-tracking branch `origin/master` may have been rewound and rebuilt, leading to a history of this shape:"
msgstr "Depois de trabalhar no ramo `topic` criado com o comando `git switch -c topic origin/master`, o histórico do ramo monitorado remotamente `origin/master` pode ter sido retrocedido e reconstruído, levando a um histórico desta forma:"

#. type: delimited block .
#: en/git-merge-base.txt:177
#, no-wrap, priority:80
msgid ""
"\t\t o---B2\n"
"\t\t/\n"
"---o---o---B1--o---o---o---B (origin/master)\n"
"\t\\\n"
"\t B0\n"
"\t  \\\n"
"\t   D0---D1---D (topic)\n"
msgstr ""
"\t\t o---B2\n"
"\t\t/\n"
"---o---o---B1--o---o---o---B (origin/master)\n"
"\t\\\n"
"\t B0\n"
"\t  \\\n"
"\t   D0---D1---D (topic)\n"

#. type: Plain text
#: en/git-merge-base.txt:184
#, priority:80
msgid "where `origin/master` used to point at commits B0, B1, B2 and now it points at B, and your `topic` branch was started on top of it back when `origin/master` was at B0, and you built three commits, D0, D1, and D, on top of it.  Imagine that you now want to rebase the work you did on the topic on top of the updated origin/master."
msgstr "onde `origin/master` costumava apontar para os commits 'B0', 'B1', 'B2' e agora aponta para 'B', e o seu ramo `topic` foi iniciada sobre ela quando `origin/master` estava em 'B0' e você construiu três commits, 'D0', 'D1' e 'D' em cima dele.  Imagine que agora você quer refazer o trabalho realizado no tópico sobre o `origin/master` atualizado."

#. type: Plain text
#: en/git-merge-base.txt:190
#, priority:80
msgid "In such a case, `git merge-base origin/master topic` would return the parent of B0 in the above picture, but B0^..D is *not* the range of commits you would want to replay on top of B (it includes B0, which is not what you wrote; it is a commit the other side discarded when it moved its tip from B0 to B1)."
msgstr "Nesse caso o comando `git merge-base origin/master topic' retornaria a inicial do 'B0' na imagem acima, porém 'B0^..D' *não é* o intervalo dos commits que você deseja reproduzir em cima do 'B' ( inclui 'B0', que não é o que você escreveu; é um commit que o outro lado descartou quando mudou o seu cume de 'B0' para 'B1')."

#. type: Plain text
#: en/git-merge-base.txt:198
#, priority:80
msgid "`git merge-base --fork-point origin/master topic` is designed to help in such a case.  It takes not only B but also B0, B1, and B2 (i.e. old tips of the remote-tracking branches your repository's reflog knows about) into account to see on which commit your topic branch was built and finds B0, allowing you to replay only the commits on your topic, excluding the commits the other side later discarded."
msgstr "O comando `git merge-base --fork-point origin/master topic` foi projetado para ajudar nesse caso.  Ele leva não apenas B, mas também B0, B1 e B2 (ou seja, dicas antigas do monitoramento dos ramos remotos onde o seu reflog conhece) para ver em qual commit o tópico do seu ramo foi construído e encontra o B0, permitindo a reprodução de apenas os commits no seu tópico, excluindo os commits que o outro lado descartou posteriormente."

#. type: Plain text
#: en/git-merge-base.txt:200
#, priority:80
msgid "Hence"
msgstr "Consequentemente"

#. type: Plain text
#: en/git-merge-base.txt:202
#, no-wrap, priority:80
msgid "    $ fork_point=$(git merge-base --fork-point origin/master topic)\n"
msgstr "    $ fork_point=$(git merge-base --fork-point origin/master topic)\n"

#. type: Plain text
#: en/git-merge-base.txt:204
#, priority:80
msgid "will find B0, and"
msgstr "irá encontrar 'B0' e"

#. type: Plain text
#: en/git-merge-base.txt:206
#, no-wrap, priority:80
msgid "    $ git rebase --onto origin/master $fork_point topic\n"
msgstr "    $ git rebase --onto origin/master $fork_point topic\n"

#. type: Plain text
#: en/git-merge-base.txt:209
#, priority:80
msgid "will replay D0, D1 and D on top of B to create a new history of this shape:"
msgstr "repetirá 'D0', 'D1' e 'D' em cima do 'B' para criar um novo histórico dessa forma:"

#. type: delimited block .
#: en/git-merge-base.txt:218
#, no-wrap, priority:80
msgid ""
"\t\t o---B2\n"
"\t\t/\n"
"---o---o---B1--o---o---o---B (origin/master)\n"
"\t\\                   \\\n"
"\t B0                  D0'--D1'--D' (topic - updated)\n"
"\t  \\\n"
"\t   D0---D1---D (topic - old)\n"
msgstr ""
"\t\t o---B2\n"
"\t\t/\n"
"---o---o---B1--o---o---o---B (origin/master)\n"
"\t\\                   \\\n"
"\t B0                  D0'--D1'--D' (topic - updated)\n"
"\t  \\\n"
"\t   D0---D1---D (topic - old)\n"

#. type: Plain text
#: en/git-merge-base.txt:226
#, priority:80
msgid "A caveat is that older reflog entries in your repository may be expired by `git gc`.  If B0 no longer appears in the reflog of the remote-tracking branch `origin/master`, the `--fork-point` mode obviously cannot find it and fails, avoiding to give a random and useless result (such as the parent of B0, like the same command without the `--fork-point` option gives)."
msgstr "Uma ressalva é que as entradas antigas do reflog no seu repositório podem ser reveladas através do comando `git gc`.  Caso 'B0' não apareça mais no reflog do ramo monitorado remotamente `origin/master`, o modo `--fork-point` obviamente não poderá encontrá-lo e irá falhar evitando dar um resultado aleatório e inútil (como a inicial do 'B0', como o mesmo comando sem a opção `--fork-point` oferece)."

#. type: Plain text
#: en/git-merge-base.txt:237
#, priority:80
msgid "Also, the remote-tracking branch you use the `--fork-point` mode with must be the one your topic forked from its tip.  If you forked from an older commit than the tip, this mode would not find the fork point (imagine in the above sample history B0 did not exist, origin/master started at B1, moved to B2 and then B, and you forked your topic at origin/master^ when origin/master was B1; the shape of the history would be the same as above, without B0, and the parent of B1 is what `git merge-base origin/master topic` correctly finds, but the `--fork-point` mode will not, because it is not one of the commits that used to be at the tip of origin/master)."
msgstr "Além disso, o ramo monitorado remotamente com o qual você utiliza o modo `--fork-point` deve ser aquele onde seu tópico foi extraído.  Caso você bifurque a partir de um commit mais antigo que o cume, este modo não encontrou o ponto de bifurcação (imagine no histórico de amostra acima do 'B0' não exista, o `origin/master` iniciado com 'B1', movido para o 'B2' e depois 'B', você bifurcou o seu tópico na `origin/master^` quando a `origin/master` era o 'B1'; o formato do histórico seria o mesmo que o acima, sem o 'B0', e a inicial do 'B1' é o que o `git merge-base origin/master topic` encontra corretamente, porém o modo `--fork-point` não será, porque não é um dos commits que costumava estar no cume de `origin/master`)."

#. type: Title -
#: en/git-merge-base.txt:240
#, no-wrap, priority:80
msgid "See also"
msgstr "Consulte também"

#. type: Plain text
#: en/git-merge-base.txt:244
#, ignore-same, priority:80
msgid "linkgit:git-rev-list[1], linkgit:git-show-branch[1], linkgit:git-merge[1]"
msgstr "linkgit:git-rev-list[1], linkgit:git-show-branch[1], linkgit:git-merge[1]"

#. type: Title =
#: en/git-merge-file.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-merge-file(1)"
msgstr "git-merge-file(1)"

#. type: Plain text
#: en/git-merge-file.txt:7
#, priority:90
msgid "git-merge-file - Run a three-way file merge"
msgstr "git-merge-file - Executa uma mesclagem do arquivo com três vias"

#. type: Plain text
#: en/git-merge-file.txt:15
#, no-wrap, priority:90
msgid ""
"'git merge-file' [-L <current-name> [-L <base-name> [-L <other-name>]]]\n"
"\t[--ours|--theirs|--union] [-p|--stdout] [-q|--quiet] [--marker-size=<n>]\n"
"\t[--[no-]diff3] <current-file> <base-file> <other-file>\n"
msgstr ""
"'git merge-file' [-L <nome-atual> [-L <nome-base> [-L <outro-nome>]]]\n"
"\t[--ours|--theirs|--union] [-p|--stdout] [-q|--quiet] [--marker-size=<n>]\n"
"\t[--[no-]diff3] <arquivo-atual> <arquivo-base> <outro-arquivo>\n"

#. type: Plain text
#: en/git-merge-file.txt:25
#, priority:90
msgid "'git merge-file' incorporates all changes that lead from the `<base-file>` to `<other-file>` into `<current-file>`. The result ordinarily goes into `<current-file>`. 'git merge-file' is useful for combining separate changes to an original. Suppose `<base-file>` is the original, and both `<current-file>` and `<other-file>` are modifications of `<base-file>`, then 'git merge-file' combines both changes."
msgstr "O comando 'git merge-file' incorpora todas as alterações que levam de `<arquivo-base>` para `<outro-arquivo>` no `<arquivo-atual>`. O resultado normalmente é inserido no `<arquivo-atual>`. O comando 'git merge-file' é útil para combinar as alterações separadas num original. Suponha que `<arquivo-base>` seja o original e ambos os `<arquivo-atual>` e `<outro-arquivo>` sejam alterações do `<arquivo-base>`, então o comando 'git merge-file' faz a combinação das duas alterações ."

#. type: Plain text
#: en/git-merge-file.txt:30
#, priority:90
msgid "A conflict occurs if both `<current-file>` and `<other-file>` have changes in a common segment of lines. If a conflict is found, 'git merge-file' normally outputs a warning and brackets the conflict with lines containing <<<<<<< and >>>>>>> markers. A typical conflict will look like this:"
msgstr "Ocorre um conflito se ambos `<arquivo-atual>`e o `<outro-arquivo>` tiver alterações num segmento comum das linhas. Caso um conflito seja encontrado, o comando 'git merge-file' normalmente gera um aviso e coloca o conflito entre as linhas que contêm os marcadores '<<<<<<<' e '>>>>>>>'. Um conflito típico ficaria assim:"

#. type: Plain text
#: en/git-merge-file.txt:36
#, no-wrap, priority:90
msgid ""
"\t<<<<<<< A\n"
"\tlines in file A\n"
"\t=======\n"
"\tlines in file B\n"
"\t>>>>>>> B\n"
msgstr ""
"\t<<<<<<< A\n"
"\tlinhas no arquivo A\n"
"\t=======\n"
"\tlinhas no arquivo B\n"
"\t>>>>>>> B\n"

#. type: Plain text
#: en/git-merge-file.txt:42
#, priority:90
msgid "If there are conflicts, the user should edit the result and delete one of the alternatives.  When `--ours`, `--theirs`, or `--union` option is in effect, however, these conflicts are resolved favouring lines from `<current-file>`, lines from `<other-file>`, or lines from both respectively.  The length of the conflict markers can be given with the `--marker-size` option."
msgstr "Caso haja conflitos, o usuário deve editar o resultado e excluir uma das alternativas.  Quando a opção `--ours` (nosso), `--theirs` (deles) ou `--union` (união) está em vigor e no entanto, estes conflitos são resolvidos favorecendo as linhas vindas do `<arquivo-atual> `, as linhas vindas do `<outro-arquivo>` ou as linhas de ambos, respectivamente.  O comprimento dos marcadores de conflito pode ser definidos através da opção `--marker-size`."

#. type: Plain text
#: en/git-merge-file.txt:46
#, priority:90
msgid "The exit value of this program is negative on error, and the number of conflicts otherwise (truncated to 127 if there are more than that many conflicts). If the merge was clean, the exit value is 0."
msgstr "O valor na saída deste programa é negativo caso ocorra um erro, se não o número de conflito (truncado para 127 caso haja mais que muitos conflitos). Caso a mesclagem esteja limpa, o valor na saída será 0."

#. type: Plain text
#: en/git-merge-file.txt:50
#, priority:90
msgid "'git merge-file' is designed to be a minimal clone of RCS 'merge'; that is, it implements all of RCS 'merge''s functionality which is needed by linkgit:git[1]."
msgstr "O comando 'git merge-file' foi projetado para ser um clone reduzido do RCS 'merge'; isto é, implementa toda a funcionalidade de 'mesclagem' do RCS, necessária ao linkgit:git[1]."

#. type: Labeled list
#: en/git-merge-file.txt:55
#, no-wrap, priority:90
msgid "-L <label>"
msgstr "-L <rótulo>"

#. type: Plain text
#: en/git-merge-file.txt:62
#, priority:90
msgid "This option may be given up to three times, and specifies labels to be used in place of the corresponding file names in conflict reports. That is, `git merge-file -L x -L y -L z a b c` generates output that looks like it came from files x, y and z instead of from files a, b and c."
msgstr "Essa opção pode ser utilizada até três vezes e define os rótulos para serem utilizados em vez dos nomes dos arquivos correspondentes nos relatórios de conflito. Ou seja, `git merge-file -L x -L y -L z a b c` gera uma saída onde parece que veio dos arquivos 'x', 'y' e 'z' em vez dos arquivos 'a', 'b' e 'c'."

#. type: Plain text
#: en/git-merge-file.txt:66
#, priority:90
msgid "Send results to standard output instead of overwriting `<current-file>`."
msgstr "Envie os resultados para a saída padrão, em vez de sobrescrever o `<arquivo atual>`."

#. type: Plain text
#: en/git-merge-file.txt:69
#, priority:90
msgid "Quiet; do not warn about conflicts."
msgstr "Quieto; não avise sobre conflitos."

#. type: Labeled list
#: en/git-merge-file.txt:70
#, ignore-same, no-wrap, priority:90
msgid "--diff3"
msgstr "--diff3"

#. type: Plain text
#: en/git-merge-file.txt:72
#, priority:90
msgid "Show conflicts in \"diff3\" style."
msgstr "Exibe conflitos no estilo \"diff3\"."

#. type: Labeled list
#: en/git-merge-file.txt:73
#, ignore-same, no-wrap, priority:90
msgid "--zdiff3"
msgstr "--zdiff3"

#. type: Plain text
#: en/git-merge-file.txt:75
#, priority:90
msgid "Show conflicts in \"zdiff3\" style."
msgstr "Exibe conflitos no estilo \"zdiff3\"."

#. type: Labeled list
#: en/git-merge-file.txt:78
#, ignore-same, no-wrap, priority:90
msgid "--union"
msgstr "--union"

#. type: Plain text
#: en/git-merge-file.txt:81
#, priority:90
msgid "Instead of leaving conflicts in the file, resolve conflicts favouring our (or their or both) side of the lines."
msgstr "Em vez de deixar conflitos no arquivo, resolva conflitos favorecendo o nosso lado (ou o deles, ou ambos) das linhas."

#. type: Labeled list
#: en/git-merge-file.txt:86
#, no-wrap, priority:90
msgid "`git merge-file README.my README README.upstream`"
msgstr "`git merge-file README.my README README.upstream`"

#. type: Plain text
#: en/git-merge-file.txt:90
#, priority:90
msgid "combines the changes of README.my and README.upstream since README, tries to merge them and writes the result into README.my."
msgstr "combina as alterações de 'README.my' e 'README.upstream' desde o 'README', tenta mesclá-las e grava o resultado no 'README.my'."

#. type: Labeled list
#: en/git-merge-file.txt:91
#, no-wrap, priority:90
msgid "`git merge-file -L a -L b -L c tmp/a123 tmp/b234 tmp/c345`"
msgstr "`git merge-file -L a -L b -L c tmp/a123 tmp/b234 tmp/c345`"

#. type: Plain text
#: en/git-merge-file.txt:95
#, priority:90
msgid "merges tmp/a123 and tmp/c345 with the base tmp/b234, but uses labels `a` and `c` instead of `tmp/a123` and `tmp/c345`."
msgstr "mescla 'tmp/a123' e 'tmp/c345' com a base 'tmp/b234', mas utiliza os rótulos `a` e `c` em vez do `tmp/a123` e `tmp/c345`."

#. type: Title =
#: en/git-merge-index.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-merge-index(1)"
msgstr "git-merge-index(1)"

#. type: Plain text
#: en/git-merge-index.txt:7
#, priority:90
msgid "git-merge-index - Run a merge for files needing merging"
msgstr "git-merge-index - Executa uma mesclagem para os arquivos que precisam ser mesclados"

#. type: Plain text
#: en/git-merge-index.txt:13
#, ignore-ellipsis, no-wrap, priority:90
msgid "'git merge-index' [-o] [-q] <merge-program> (-a | ( [--] <file>...) )\n"
msgstr "'git merge-index' [-o] [-q] <merge-program> (-a | ( [--] <arquivo>...) )\n"

#. type: Plain text
#: en/git-merge-index.txt:20
#, priority:90
msgid "This looks up the <file>(s) in the index and, if there are any merge entries, passes the SHA-1 hash for those files as arguments 1, 2, 3 (empty argument if no file), and <file> as argument 4.  File modes for the three files are passed as arguments 5, 6 and 7."
msgstr "Ele procura pelos `<arquivos>` no índice e caso haja alguma mesclagem na entrada, passa o hash SHA-1 para estes arquivos em forma de comandos 1, 2, 3 (opções vazias caso não haja um arquivo) e `<arquivo>` como a opção 4.  Os modos do arquivo para os três arquivos são encaminhados como as opções 5, 6 e 7."

#. type: Plain text
#: en/git-merge-index.txt:28
#, priority:90
msgid "Run merge against all files in the index that need merging."
msgstr "Execute a mesclagem em todos os arquivos no índice que precisam ser mesclados."

#. type: Plain text
#: en/git-merge-index.txt:34
#, priority:90
msgid "Instead of stopping at the first failed merge, do all of them in one shot - continue with merging even when previous merges returned errors, and only return the error code after all the merges."
msgstr "Em vez de parar na primeira mesclagem com problemas, faça todos eles de uma vez só - continue com a mesclagem mesmo quando as mesclagens anteriores retornarem erros e retorne apenas o código do erro ao final de todas as mesclagens."

#. type: Plain text
#: en/git-merge-index.txt:39
#, priority:90
msgid "Do not complain about a failed merge program (a merge program failure usually indicates conflicts during the merge). This is for porcelains which might want to emit custom messages."
msgstr "Não reclame sobre um programa de mesclagem que falhou (uma falha no programa de mesclagem geralmente indica conflitos durante o processo). Isto serve apenas para porcelanas que queiram emitir mensagens personalizadas."

#. type: Plain text
#: en/git-merge-index.txt:43
#, priority:90
msgid "If 'git merge-index' is called with multiple <file>s (or -a) then it processes them in turn only stopping if merge returns a non-zero exit code."
msgstr "Caso o comando 'git merge-index' seja chamado com vários <arquivo>s (ou -a), ele os processará por vez, parando apenas caso o merge retorne um código com uma saída diferente de zero."

#. type: Plain text
#: en/git-merge-index.txt:46
#, priority:90
msgid "Typically this is run with a script calling Git's imitation of the 'merge' command from the RCS package."
msgstr "Normalmente, é executado com um script chamando a imitação do comando 'merge' pelo Git vindo do pacote RCS."

#. type: Plain text
#: en/git-merge-index.txt:49
#, priority:90
msgid "A sample script called 'git merge-one-file' is included in the distribution."
msgstr "Um script de exemplo chamado 'git merge-one-file' está incluso na distribuição."

#. type: Plain text
#: en/git-merge-index.txt:54
#, priority:90
msgid "ALERT ALERT ALERT! The Git \"merge object order\" is different from the RCS 'merge' program merge object order. In the above ordering, the original is first. But the argument order to the 3-way merge program 'merge' is to have the original in the middle. Don't ask me why."
msgstr "ALERTA ALERTA ALERTA! A \"ordem da mesclagem dos objetos\" do Git é diferente da ordem de mesclagem do objeto no programa RCS 'merge'. Na ordem acima, o original é o primeiro. Porém, a ordem das opções para o programa de mesclagem 'merge' de três vias é ter o original no meio. Não me pergunte o por quê."

#. type: Plain text
#: en/git-merge-index.txt:56 en/git-svn.txt:171
#, priority:100
msgid "Examples:"
msgstr "Exemplos:"

#. type: delimited block -
#: en/git-merge-index.txt:63
#, no-wrap, priority:90
msgid ""
"torvalds@ppc970:~/merge-test> git merge-index cat MM\n"
"This is MM from the original tree.\t\t# original\n"
"This is modified MM in the branch A.\t\t# merge1\n"
"This is modified MM in the branch B.\t\t# merge2\n"
"This is modified MM in the branch B.\t\t# current contents\n"
msgstr ""
"torvalds@ppc970:~/merge-test> git merge-index cat MM\n"
"Este é o MM vindo da árvore original.\t\t# original\n"
"Este é o MM modificado no ramo A.\t\t# merge1\n"
"Este é o MM modificado no ramo B.\t\t# merge2\n"
"Este é o MM modificado no ramo B.\t\t# conteúdo atual\n"

#. type: delimited block -
#: en/git-merge-index.txt:74
#, no-wrap, priority:90
msgid ""
"torvalds@ppc970:~/merge-test> git merge-index cat AA MM\n"
"cat: : No such file or directory\n"
"This is added AA in the branch A.\n"
"This is added AA in the branch B.\n"
"This is added AA in the branch B.\n"
"fatal: merge program failed\n"
msgstr ""
"torvalds@ppc970:~/merge-test> git merge-index cat AA MM\n"
"cat: : No such file or directory\n"
"This is added AA in the branch A.\n"
"This is added AA in the branch B.\n"
"This is added AA in the branch B.\n"
"fatal: merge program failed\n"

#. type: Plain text
#: en/git-merge-index.txt:80
#, priority:90
msgid "where the latter example shows how 'git merge-index' will stop trying to merge once anything has returned an error (i.e., `cat` returned an error for the AA file, because it didn't exist in the original, and thus 'git merge-index' didn't even try to merge the MM thing)."
msgstr "onde o último exemplo mostra como o comando 'git merge-index' interrompe as tentativas de mesclagem depois que algo retorna um erro (ou seja, `cat` retornou um erro para o arquivo 'AA', porque ele não existia no original e portanto, 'git merge-index' sequer tentou mesclar o tal 'MM')."

#. type: Title =
#: en/git-merge-one-file.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-merge-one-file(1)"
msgstr "git-merge-one-file(1)"

#. type: Plain text
#: en/git-merge-one-file.txt:7
#, priority:100
msgid "git-merge-one-file - The standard helper program to use with git-merge-index"
msgstr "git-merge-one-file - O programa auxiliar predefinido que será utilizado com o comando git-merge-index"

#. type: Plain text
#: en/git-merge-one-file.txt:13
#, no-wrap, priority:100
msgid "'git merge-one-file'\n"
msgstr "'git merge-one-file'\n"

#. type: Plain text
#: en/git-merge-one-file.txt:18
#, priority:100
msgid "This is the standard helper program to use with 'git merge-index' to resolve a merge after the trivial merge done with 'git read-tree -m'."
msgstr "Este é o programa auxiliar predefinido a ser utilizado com o 'git merge-index' para resolver uma mesclagem após a mesclagem trivial feita com o comando 'git read-tree -m'."

#. type: Title =
#: en/git-mergetool--lib.txt:2
#, no-wrap, priority:100
msgid "git-mergetool{litdd}lib(1)"
msgstr "git-mergetool{litdd}lib(1)"

#. type: Plain text
#: en/git-mergetool--lib.txt:7
#, priority:100
msgid "git-mergetool--lib - Common Git merge tool shell scriptlets"
msgstr "git-mergetool - lib - Scriptlets do shell, ferramentas de mesclagem comuns do Git"

#. type: Plain text
#: en/git-mergetool--lib.txt:12
#, no-wrap, priority:100
msgid "'TOOL_MODE=(diff|merge) . \"$(git --exec-path)/git-mergetool{litdd}lib\"'\n"
msgstr "'TOOL_MODE=(diff|merge) . \"$(git --exec-path)/git-mergetool{litdd}lib\"'\n"

#. type: Plain text
#: en/git-mergetool--lib.txt:19 en/git-sh-i18n.txt:19 en/git-sh-setup.txt:19
#, priority:100
msgid "This is not a command the end user would want to run.  Ever.  This documentation is meant for people who are studying the Porcelain-ish scripts and/or are writing new ones."
msgstr "Este não é um comando que o usuário final gostaria de executar.  Nunca.  This documentation is meant for people who are studying the Porcelain-ish scripts and/or are writing new ones."

#. type: Plain text
#: en/git-mergetool--lib.txt:23
#, priority:100
msgid "The 'git-mergetool{litdd}lib' scriptlet is designed to be sourced (using `.`) by other shell scripts to set up functions for working with Git merge tools."
msgstr "O scriptlet 'git-mergetool{litdd}lib' foi projetado para ser originado (utilizando `.`) por outros scripts shell para configurar as funções para trabalhar com as ferramentas de mesclagem do Git."

#. type: Plain text
#: en/git-mergetool--lib.txt:27
#, priority:100
msgid "Before sourcing 'git-mergetool{litdd}lib', your script must set `TOOL_MODE` to define the operation mode for the functions listed below.  'diff' and 'merge' are valid values."
msgstr "Antes de fornecer o 'git-mergetool{litdd}lib', o seu script deve definir `TOOL_MODE` para informar o modo de operação para as funções listadas abaixo.  'diff' e 'merge' são valores válidos."

#. type: Title -
#: en/git-mergetool--lib.txt:29 en/git-sh-i18n.txt:28 en/git-sh-setup.txt:34
#, no-wrap, priority:100
msgid "FUNCTIONS"
msgstr "FUNÇÕES"

#. type: Labeled list
#: en/git-mergetool--lib.txt:30
#, no-wrap, priority:100
msgid "get_merge_tool"
msgstr "get_merge_tool"

#. type: Plain text
#: en/git-mergetool--lib.txt:34
#, priority:100
msgid "returns a merge tool. the return code is 1 if we returned a guessed merge tool, else 0. '$GIT_MERGETOOL_GUI' may be set to 'true' to search for the appropriate guitool."
msgstr "retorna uma ferramenta de mesclagem. o código de retorno é 1 caso a ferramenta de mesclagem tenha sido encontrada através de uma adivinhação, senão 0. O '$GIT_MERGETOOL_GUI' pode ser definido como 'true' para localizar o guitool apropriado."

#. type: Labeled list
#: en/git-mergetool--lib.txt:35
#, no-wrap, priority:100
msgid "get_merge_tool_cmd"
msgstr "get_merge_tool_cmd"

#. type: Plain text
#: en/git-mergetool--lib.txt:37
#, priority:100
msgid "returns the custom command for a merge tool."
msgstr "retorna o comando personalizado para uma ferramenta de mesclagem."

#. type: Labeled list
#: en/git-mergetool--lib.txt:38
#, no-wrap, priority:100
msgid "get_merge_tool_path"
msgstr "get_merge_tool_path"

#. type: Plain text
#: en/git-mergetool--lib.txt:40
#, priority:100
msgid "returns the custom path for a merge tool."
msgstr "retorna o caminho personalizado para uma ferramenta de mesclagem."

#. type: Labeled list
#: en/git-mergetool--lib.txt:41
#, no-wrap, priority:100
msgid "initialize_merge_tool"
msgstr "initialize_merge_tool"

#. type: Plain text
#: en/git-mergetool--lib.txt:44
#, priority:100
msgid "bring merge tool specific functions into scope so they can be used or overridden."
msgstr "traga funções específicas da ferramenta de mesclagem para o escopo para que possam ser usadas ou substituídas."

#. type: Labeled list
#: en/git-mergetool--lib.txt:45
#, no-wrap, priority:100
msgid "run_merge_tool"
msgstr "run_merge_tool"

#. type: Plain text
#: en/git-mergetool--lib.txt:50
#, priority:100
msgid "launches a merge tool given the tool name and a true/false flag to indicate whether a merge base is present.  '$MERGED', '$LOCAL', '$REMOTE', and '$BASE' must be defined for use by the merge tool."
msgstr "inicia uma ferramenta de mesclagem com seu nome e uma opção 'true/false' para indicar se a mesclagem de uma base está presente.  '$MERGED', '$LOCAL', '$REMOTE' e '$BASE' devem estar definidos para que a ferramenta de mesclagem possa ser usada."

#. type: Title =
#: en/git-mergetool.txt:2
#, ignore-same, no-wrap, priority:240
msgid "git-mergetool(1)"
msgstr "git-mergetool(1)"

#. type: Plain text
#: en/git-mergetool.txt:7
#, priority:240
msgid "git-mergetool - Run merge conflict resolution tools to resolve merge conflicts"
msgstr "git-mergetool - Execute ferramentas para a resolução de problemas quando houver conflitos de mesclagem"

#. type: Plain text
#: en/git-mergetool.txt:12
#, ignore-ellipsis, no-wrap, priority:240
msgid "'git mergetool' [--tool=<tool>] [-y | --[no-]prompt] [<file>...]\n"
msgstr "'git mergetool' [--tool=<ferramenta>] [-y | --[no-]prompt] [<arquivo>...]\n"

#. type: Plain text
#: en/git-mergetool.txt:18
#, priority:240
msgid "Use `git mergetool` to run one of several merge utilities to resolve merge conflicts.  It is typically run after 'git merge'."
msgstr "Utilize o comando `git mergetool` para executar um dos vários utilitários de mesclagem para resolver os conflitos de mesclagem.  Normalmente, é executado após o comando 'git merge'."

#. type: Plain text
#: en/git-mergetool.txt:24
#, priority:240
msgid "If one or more <file> parameters are given, the merge tool program will be run to resolve differences on each file (skipping those without conflicts).  Specifying a directory will include all unresolved files in that path.  If no <file> names are specified, 'git mergetool' will run the merge tool program on every file with merge conflicts."
msgstr "Caso um ou mais parâmetros <arquivo> forem informados, o programa da ferramenta de mesclagem será executado para resolver as diferenças em cada arquivo (ignorando aqueles quem não tiverem conflitos).  A especificação de um diretório incluirá todos os arquivos que não foram resolvidos neste caminho.  Caso nenhum nome <arquivo> seja informado, o comando 'git mergetool' executará o programa da ferramenta de mesclagem em todos os arquivos com conflitos de mesclagem."

#. type: Plain text
#: en/git-mergetool.txt:33
#, priority:240
msgid "Use the merge resolution program specified by <tool>.  Valid values include emerge, gvimdiff, kdiff3, meld, vimdiff, and tortoisemerge. Run `git mergetool --tool-help` for the list of valid <tool> settings."
msgstr "Utilize o programa para a resolução da mesclagem definido através de <ferramenta>.  Os valores válidos incluem `emerge`, `gvimdiff`, `kdiff3`, `meld`, `vimdiff`, e `tortoisemerge`. Execute o `git mergetool --tool-help` para a lista de configurações válidas da <ferramenta>."

#. type: Plain text
#: en/git-mergetool.txt:38
#, priority:240
msgid "If a merge resolution program is not specified, 'git mergetool' will use the configuration variable `merge.tool`.  If the configuration variable `merge.tool` is not set, 'git mergetool' will pick a suitable default."
msgstr "Caso um programa para resolução da mesclagem não for informado, o comando 'git mergetool' utilizará a variável de configuração `merge.tool`.  Caso a variável de configuração `merge.tool` não esteja definida, o comando 'git mergetool' escolherá uma predefinição apropriada."

#. type: Plain text
#: en/git-mergetool.txt:44
#, priority:240
msgid "You can explicitly provide a full path to the tool by setting the configuration variable `mergetool.<tool>.path`. For example, you can configure the absolute path to kdiff3 by setting `mergetool.kdiff3.path`. Otherwise, 'git mergetool' assumes the tool is available in PATH."
msgstr "Você pode de forma explicita informar um caminho completo para a ferramenta, definindo a variável de configuração `mergetool.<ferramenta>.path`. Por exemplo, você pode configurar o caminho absoluto para o kdiff3 configurando a opção `mergetool.kdiff3.path`. Caso contrário, o comando 'git mergetool' assume que a ferramenta está disponível no PATH."

#. type: Plain text
#: en/git-mergetool.txt:49
#, priority:240
msgid "Instead of running one of the known merge tool programs, 'git mergetool' can be customized to run an alternative program by specifying the command line to invoke in a configuration variable `mergetool.<tool>.cmd`."
msgstr "Em vez de executar um dos programas informados da ferramenta de mesclagem, o comando 'git mergetool' pode ser customizado para executar um programa alternativo, informado na linha de comando para chamar numa variável de configuração `mergetool.<ferramenta>.cmd`."

#. type: Plain text
#: en/git-mergetool.txt:60
#, priority:240
msgid "When 'git mergetool' is invoked with this tool (either through the `-t` or `--tool` option or the `merge.tool` configuration variable) the configured command line will be invoked with `$BASE` set to the name of a temporary file containing the common base for the merge, if available; `$LOCAL` set to the name of a temporary file containing the contents of the file on the current branch; `$REMOTE` set to the name of a temporary file containing the contents of the file to be merged, and `$MERGED` set to the name of the file to which the merge tool should write the result of the merge resolution."
msgstr "Quando o comando 'git mergetool' é chamado com esta ferramenta (através da opção `-t` ou `--tool` ou da variável de configuração `merge.tool`), a linha de comando configurada será invocada com `$BASE` definido como o nome de um arquivo temporário contendo a base comum para a mesclagem, caso esteja disponível; `$LOCAL` definido como o nome de um arquivo temporário que contém o conteúdo do arquivo no ramo atual; `$ REMOTE` definido como o nome de um arquivo temporário que contém o conteúdo do arquivo a ser mesclado e `$MERGED` definido como o nome do arquivo onde a ferramenta de mesclagem deve gravar o resultado da resolução da mesclagem."

#. type: Plain text
#: en/git-mergetool.txt:66
#, priority:240
msgid "If the custom merge tool correctly indicates the success of a merge resolution with its exit code, then the configuration variable `mergetool.<tool>.trustExitCode` can be set to `true`.  Otherwise, 'git mergetool' will prompt the user to indicate the success of the resolution after the custom tool has exited."
msgstr "Caso a ferramenta de mesclagem personalizada indicar corretamente o sucesso da resolução de uma mesclagem com o seu código na saída, a variável de configuração `mergetool.<ferramenta>.trustExitCode` poderá ser definida como `true`.  Caso contrário, o 'git mergetool' solicitará ao usuário que indique o sucesso da resolução após o encerramento da ferramenta personalizada."

#. type: Plain text
#: en/git-mergetool.txt:69
#, priority:240
msgid "Print a list of merge tools that may be used with `--tool`."
msgstr "Exibe uma lista das ferramentas de mesclagem que podem ser utilizadas com a opção `--tool`."

#. type: Plain text
#: en/git-mergetool.txt:77
#, priority:240
msgid "Don't prompt before each invocation of the merge resolution program.  This is the default if the merge resolution program is explicitly specified with the `--tool` option or with the `merge.tool` configuration variable."
msgstr "Não avise antes de cada invocação do programa de resolução da mesclagem.  Esta é a predefinição caso o programa para a resolução da mesclagem seja informada de forma explicita com a opção `tool` ou com a variável de configuração `merge.tool`."

#. type: Plain text
#: en/git-mergetool.txt:81
#, priority:240
msgid "Prompt before each invocation of the merge resolution program to give the user a chance to skip the path."
msgstr "Avise antes de cada invocação do programa para a resolução da mesclagem, para dar ao usuário a chance de ignorar o caminho."

#. type: Labeled list
#: en/git-mergetool.txt:83
#, ignore-same, no-wrap, priority:240
msgid "--gui"
msgstr "--gui"

#. type: Plain text
#: en/git-mergetool.txt:89
#, priority:240
msgid "When 'git-mergetool' is invoked with the `-g` or `--gui` option the default merge tool will be read from the configured `merge.guitool` variable instead of `merge.tool`. If `merge.guitool` is not set, we will fallback to the tool configured under `merge.tool`."
msgstr "Quando o comando 'git-difftool' é chamado com a opção `-g` ou `--gui`, a ferramenta diff predefinida será lida na variável de configuração `diff.guitool` em vez do `diff.tool`. Caso a variável `diff.guitool` não esteja definida, retroagiremos para a ferramenta configurada em `merge.guitool`."

#. type: Labeled list
#: en/git-mergetool.txt:90
#, ignore-same, no-wrap, priority:240
msgid "--no-gui"
msgstr "--no-gui"

#. type: Plain text
#: en/git-mergetool.txt:94
#, priority:240
msgid "This overrides a previous `-g` or `--gui` setting and reads the default merge tool will be read from the configured `merge.tool` variable."
msgstr "Substitui uma configuração anterior `-g` ou `--gui` e faz a leitura da ferramenta de mesclagem predefinida através da variável `merge.tool` já configurada."

#. type: Plain text
#: en/git-mergetool.txt:101
#, priority:240
msgid "Process files in the order specified in the <orderfile>, which has one shell glob pattern per line.  This overrides the `diff.orderFile` configuration variable (see linkgit:git-config[1]).  To cancel `diff.orderFile`, use `-O/dev/null`."
msgstr "Processe os arquivos na ordem usada na <ordem-do-arquivo> que tenha um padrão \"shell glob\" por linha.  Substitui a variável de configuração `diff.orderFile` (consulte o comando linkgit:git-config[1]).  Para cancelar a variável `diff.orderFile`, utilize `-O/dev/null`."

#. type: Title -
#: en/git-mergetool.txt:111
#, no-wrap, priority:240
msgid "TEMPORARY FILES"
msgstr "ARQUIVOS TEMPORÁRIOS"

#. type: Plain text
#: en/git-mergetool.txt:115
#, priority:240
msgid "`git mergetool` creates `*.orig` backup files while resolving merges.  These are safe to remove once a file has been merged and its `git mergetool` session has completed."
msgstr "O `git mergetool` cria arquivos de backup` * .orig` enquanto lida com as mesclagens.  É seguro removê-los assim que um arquivo for mesclado e a sua sessão `git mergetool` tenha terminado."

#. type: Plain text
#: en/git-mergetool.txt:119
#, priority:240
msgid "Setting the `mergetool.keepBackup` configuration variable to `false` causes `git mergetool` to automatically remove the backup as files are successfully merged."
msgstr "Definir a variável de configuração `mergetool.keepBackup` como` false` faz com que o comando `git mergetool` remova automaticamente o backup enquanto os arquivos forem sendo mesclados com sucesso."

#. type: Title -
#: en/git-mergetool.txt:121
#, no-wrap, priority:240
msgid "BACKEND SPECIFIC HINTS"
msgstr "DICAS ESPECÍFICAS PARA CLIENTES"

#. type: Plain text
#: en/git-mergetool.txt:124 en/mergetools-merge.txt:29
#, ignore-same, no-wrap, priority:240
msgid "vimdiff"
msgstr "vimdiff"

#. type: Title =
#: en/git-merge-tree.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-merge-tree(1)"
msgstr "git-merge-tree(1)"

#. type: Plain text
#: en/git-merge-tree.txt:7
#, fuzzy, priority:100
#| msgid "git-merge-tree - Show three-way merge without touching index"
msgid "git-merge-tree - Perform merge without touching index or working tree"
msgstr "git-merge-tree - Exiba as três maneiras de mesclagem sem mexer no índice"

#. type: Plain text
#: en/git-merge-tree.txt:14
#, no-wrap, priority:100
msgid ""
"'git merge-tree' [--write-tree] [<options>] <branch1> <branch2>\n"
"'git merge-tree' [--trivial-merge] <base-tree> <branch1> <branch2> (deprecated)\n"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:23
#, priority:100
msgid "This command has a modern `--write-tree` mode and a deprecated `--trivial-merge` mode.  With the exception of the <<DEPMERGE,DEPRECATED DESCRIPTION>> section at the end, the rest of this documentation describes modern `--write-tree` mode."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:26
#, priority:100
msgid "Performs a merge, but does not make any new commits and does not read from or write to either the working tree or index."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:29
#, priority:100
msgid "The performed merge will use the same feature as the \"real\" linkgit:git-merge[1], including:"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:31
#, priority:100
msgid "three way content merges of individual files"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:32
#, fuzzy, priority:100
#| msgid "Directory rename detection"
msgid "rename detection"
msgstr "Detecção da renomeação do diretório"

#. type: Plain text
#: en/git-merge-tree.txt:33
#, priority:100
msgid "proper directory/file conflict handling"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:35
#, priority:100
msgid "recursive ancestor consolidation (i.e. when there is more than one merge base, creating a virtual merge base by merging the merge bases)"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:36
#, priority:100
msgid "etc."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:39
#, priority:100
msgid "After the merge completes, a new toplevel tree object is created.  See `OUTPUT` below for details."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:48
#, priority:100
msgid "Do not quote filenames in the <Conflicted file info> section, and end each filename with a NUL character rather than newline.  Also begin the messages section with a NUL character instead of a newline.  See <<OUTPUT>> below for more information."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:55
#, priority:100
msgid "In the Conflicted file info section, instead of writing a list of (mode, oid, stage, path) tuples to output for conflicted files, just provide a list of filenames with conflicts (and do not list filenames multiple times if they have multiple conflicting stages)."
msgstr ""

#. type: Labeled list
#: en/git-merge-tree.txt:56
#, ignore-same, no-wrap, priority:100
msgid "--[no-]messages"
msgstr "--[no-]messages"

#. type: Plain text
#: en/git-merge-tree.txt:61
#, priority:100
msgid "Write any informational messages such as \"Auto-merging <path>\" or CONFLICT notices to the end of stdout.  If unspecified, the default is to include these messages if there are merge conflicts, and to omit them otherwise."
msgstr ""

#. type: Labeled list
#: en/git-merge-tree.txt:62 en/merge-options.txt:200
#, ignore-same, no-wrap, priority:240
msgid "--allow-unrelated-histories"
msgstr "--allow-unrelated-histories"

#. type: Plain text
#: en/git-merge-tree.txt:66
#, priority:100
msgid "merge-tree will by default error out if the two branches specified share no common history.  This flag can be given to override that check and make the merge proceed anyway."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:73
#, priority:100
msgid "For a successful merge, the output from git-merge-tree is simply one line:"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:75
#, no-wrap, priority:100
msgid "\t<OID of toplevel tree>\n"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:77
#, fuzzy, priority:100
#| msgid "If `--verbose` is specified, the output is a series of lines of the form:"
msgid "Whereas for a conflicted merge, the output is by default of the form:"
msgstr "Caso a opção `--verbose` seja utilizada, a saída será uma série de linhas desta forma:"

#. type: Plain text
#: en/git-merge-tree.txt:81
#, no-wrap, priority:100
msgid ""
"\t<OID of toplevel tree>\n"
"\t<Conflicted file info>\n"
"\t<Informational messages>\n"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:83
#, priority:100
msgid "These are discussed individually below."
msgstr ""

#. type: Title ~
#: en/git-merge-tree.txt:86
#, no-wrap, priority:100
msgid "OID of toplevel tree"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:92
#, priority:100
msgid "This is a tree object that represents what would be checked out in the working tree at the end of `git merge`.  If there were conflicts, then files within this tree may have embedded conflict markers.  This section is always followed by a newline (or NUL if `-z` is passed)."
msgstr ""

#. type: Title ~
#: en/git-merge-tree.txt:95
#, no-wrap, priority:100
msgid "Conflicted file info"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:98
#, fuzzy, priority:100
#| msgid "Each line of options has this format:"
msgid "This is a sequence of lines with the format"
msgstr "As opções de cada linha possui este formato:"

#. type: Plain text
#: en/git-merge-tree.txt:100
#, fuzzy, no-wrap, priority:100
#| msgid "        [<tag> ]<mode> <object> <stage> <file>\n"
msgid "\t<mode> <object> <stage> <filename>\n"
msgstr "        [<tag> ]<modo> <objeto> <estágio> <arquivo>\n"

#. type: Plain text
#: en/git-merge-tree.txt:106
#, fuzzy, priority:100
#| msgid "Without the `-z` option, pathnames with \"unusual\" characters are quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1]).  Using `-z` the filename is output verbatim and the line is terminated by a NUL byte."
msgid "The filename will be quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1]).  However, if the `--name-only` option is passed, the mode, object, and stage will be omitted.  If `-z` is passed, the \"lines\" are terminated by a NUL character instead of a newline character."
msgstr "Sem a opção `z`, os `pathnames` com os caracteres \"incomuns\" são citados conforme explicado na variável de configuração `core.quotePath` (consulte linkgit:git-config[1]).  Utilizando a opção `-z`, o nome do arquivo é gerado literalmente e a linha é finalizada com um byte `NUL`."

#. type: Title ~
#: en/git-merge-tree.txt:109
#, fuzzy, no-wrap, priority:100
#| msgid "Information"
msgid "Informational messages"
msgstr "Informação"

#. type: Plain text
#: en/git-merge-tree.txt:114
#, priority:100
msgid "This always starts with a blank line (or NUL if `-z` is passed) to separate it from the previous sections, and then has free-form messages about the merge, such as:"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:116
#, fuzzy, priority:100
#| msgid "--series <file>"
msgid "\"Auto-merging <file>\""
msgstr "--series <arquivo>"

#. type: Plain text
#: en/git-merge-tree.txt:117
#, ignore-ellipsis, priority:100
msgid "\"CONFLICT (rename/delete): <oldfile> renamed...but deleted in...\""
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:118
#, priority:100
msgid "\"Failed to merge submodule <submodule> (<reason>)\""
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:119
#, priority:100
msgid "\"Warning: cannot merge binary files: <filename>\""
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:123
#, priority:100
msgid "Note that these free-form messages will never have a NUL character in or between them, even if -z is passed.  It is simply a large block of text taking up the remainder of the output."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:131
#, priority:100
msgid "For a successful, non-conflicted merge, the exit status is 0.  When the merge has conflicts, the exit status is 1.  If the merge is not able to complete (or start) due to some kind of error, the exit status is something other than 0 or 1 (and the output is unspecified)."
msgstr ""

#. type: Title -
#: en/git-merge-tree.txt:133
#, fuzzy, no-wrap, priority:100
#| msgid "NOTES"
msgid "USAGE NOTES"
msgstr "OBSERVAÇÕES"

#. type: Plain text
#: en/git-merge-tree.txt:140
#, priority:100
msgid "This command is intended as low-level plumbing, similar to linkgit:git-hash-object[1], linkgit:git-mktree[1], linkgit:git-commit-tree[1], linkgit:git-write-tree[1], linkgit:git-update-ref[1], and linkgit:git-mktag[1].  Thus, it can be used as a part of a series of steps such as:"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:145
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"       NEWTREE=$(git merge-tree --write-tree $BRANCH1 $BRANCH2)\n"
"       test $? -eq 0 || die \"There were conflicts...\"\n"
"       NEWCOMMIT=$(git commit-tree $NEWTREE -p $BRANCH1 -p $BRANCH2)\n"
"       git update-ref $BRANCH1 $NEWCOMMIT\n"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:148
#, priority:100
msgid "Note that when the exit status is non-zero, `NEWTREE` in this sequence will contain a lot more output than just a tree."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:151
#, priority:100
msgid "For conflicts, the output includes the same information that you'd get with linkgit:git-merge[1]:"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:154
#, priority:100
msgid "what would be written to the working tree (the <<OIDTLT,OID of toplevel tree>>)"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:156
#, priority:100
msgid "the higher order stages that would be written to the index (the <<CFI,Conflicted file info>>)"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:158
#, priority:100
msgid "any messages that would have been printed to stdout (the <<IM,Informational messages>>)"
msgstr ""

#. type: Title -
#: en/git-merge-tree.txt:160
#, no-wrap, priority:100
msgid "MISTAKES TO AVOID"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:169
#, priority:100
msgid "Do NOT look through the resulting toplevel tree to try to find which files conflict; parse the <<CFI,Conflicted file info>> section instead.  Not only would parsing an entire tree be horrendously slow in large repositories, there are numerous types of conflicts not representable by conflict markers (modify/delete, mode conflict, binary file changed on both sides, file/directory conflicts, various rename conflict permutations, etc.)"
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:175
#, priority:100
msgid "Do NOT interpret an empty <<CFI,Conflicted file info>> list as a clean merge; check the exit status.  A merge can have conflicts without having individual files conflict (there are a few types of directory rename conflicts that fall into this category, and others might also be added in the future)."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:189
#, priority:100
msgid "Do NOT attempt to guess or make the user guess the conflict types from the <<CFI,Conflicted file info>> list.  The information there is insufficient to do so.  For example: Rename/rename(1to2) conflicts (both sides renamed the same file differently) will result in three different file having higher order stages (but each only has one higher order stage), with no way (short of the <<IM,Informational messages>> section)  to determine which three files are related.  File/directory conflicts also result in a file with exactly one higher order stage.  Possibly-involved-in-directory-rename conflicts (when \"merge.directoryRenames\" is unset or set to \"conflicts\") also result in a file with exactly one higher order stage.  In all cases, the <<IM,Informational messages>> section has the necessary info, though it is not designed to be machine parseable."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:196
#, priority:100
msgid "Do NOT assume that each paths from <<CFI,Conflicted file info>>, and the logical conflicts in the <<IM,Informational messages>> have a one-to-one mapping, nor that there is a one-to-many mapping, nor a many-to-one mapping.  Many-to-many mappings exist, meaning that each path can have many logical conflict types in a single merge, and each logical conflict type can affect many paths."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:200
#, priority:100
msgid "Do NOT assume all filenames listed in the <<IM,Informational messages>> section had conflicts.  Messages can be included for files that have no conflicts, such as \"Auto-merging <file>\"."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:211
#, priority:100
msgid "AVOID taking the OIDS from the <<CFI,Conflicted file info>> and re-merging them to present the conflicts to the user.  This will lose information.  Instead, look up the version of the file found within the <<OIDTLT,OID of toplevel tree>> and show that instead.  In particular, the latter will have conflict markers annotated with the original branch/commit being merged and, if renames were involved, the original filename.  While you could include the original branch/commit in the conflict marker annotations when re-merging, the original filename is not available from the <<CFI,Conflicted file info>> and thus you would be losing information that might help the user resolve the conflict."
msgstr ""

#. type: Title -
#: en/git-merge-tree.txt:214
#, fuzzy, no-wrap, priority:100
#| msgid "DESCRIPTION"
msgid "DEPRECATED DESCRIPTION"
msgstr "DESCRIÇÃO"

#. type: Plain text
#: en/git-merge-tree.txt:219
#, priority:100
msgid "Per the <<NEWMERGE,DESCRIPTION>> and unlike the rest of this documentation, this section describes the deprecated `--trivial-merge` mode."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:222
#, priority:100
msgid "Other than the optional `--trivial-merge`, this mode accepts no options."
msgstr ""

#. type: Plain text
#: en/git-merge-tree.txt:230
#, fuzzy, priority:100
#| msgid "Reads three tree-ish, and output trivial merge results and conflicting stages to the standard output.  This is similar to what three-way 'git read-tree -m' does, but instead of storing the results in the index, the command outputs the entries to the standard output."
msgid "This mode reads three tree-ish, and outputs trivial merge results and conflicting stages to the standard output in a semi-diff format.  Since this was designed for higher level scripts to consume and merge the results back into the index, it omits entries that match <branch1>.  The result of this second form is similar to what three-way 'git read-tree -m' does, but instead of storing the results in the index, the command outputs the entries to the standard output."
msgstr "Faz a leitura de três árvores e produz resultados comuns de mesclagem assim como encaminha os estágios conflitantes para a saída padrão.  Isso é semelhante ao que o 'git read-tree -m' no entanto, em vez de armazenar os resultados no índice, o comando externa as entradas na saída padrão."

#. type: Plain text
#: en/git-merge-tree.txt:237
#, priority:100
msgid "This form not only has limited applicability (a trivial merge cannot handle content merges of individual files, rename detection, proper directory/file conflict handling, etc.), the output format is also difficult to work with, and it will generally be less performant than the first form even on successful merges (especially if working in large repositories)."
msgstr ""

#. type: Title =
#: en/git-merge.txt:2
#, ignore-same, no-wrap, priority:240
msgid "git-merge(1)"
msgstr "git-merge(1)"

#. type: Plain text
#: en/git-merge.txt:7
#, priority:240
msgid "git-merge - Join two or more development histories together"
msgstr "git-merge - Une dois ou mais históricos de desenvolvimento"

#. type: Plain text
#: en/git-merge.txt:18
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"'git merge' [-n] [--stat] [--no-commit] [--squash] [--[no-]edit]\n"
"\t[--no-verify] [-s <strategy>] [-X <strategy-option>] [-S[<keyid>]]\n"
"\t[--[no-]allow-unrelated-histories]\n"
"\t[--[no-]rerere-autoupdate] [-m <msg>] [-F <file>]\n"
"\t[--into-name <branch>] [<commit>...]\n"
"'git merge' (--continue | --abort | --quit)\n"
msgstr ""
"'git merge' [-n] [--stat] [--no-commit] [--squash] [--[no-]edit]\n"
"\t[--no-verify] [-s <estratégia>] [-X <opção-da-estratégia>] [-S[<keyid>]]\n"
"\t[--[no-]allow-unrelated-histories]\n"
"\t[--[no-]rerere-autoupdate] [-m <msg>] [-F <arquivo>] [<commit>...]\n"
"\t[--into-name <ramo>] [<commit>...]\n"
"'git merge' (--continue | --abort | --quit)\n"

#. type: Plain text
#: en/git-merge.txt:26
#, priority:240
msgid "Incorporates changes from the named commits (since the time their histories diverged from the current branch) into the current branch.  This command is used by 'git pull' to incorporate changes from another repository and can be used by hand to merge changes from one branch into another."
msgstr "Incorpora as alterações dos commits citados (desde o momento em que os seus históricos divergirem do ramo atual) para dentro do ramo atual.  Este comando é utilizado pelo 'git pull' para incorporar as alterações vindos de outro repositório e pode ser utilizado manualmente para mesclar as alterações do outro ramo para um outro."

#. type: Plain text
#: en/git-merge.txt:29 en/git-pull.txt:43
#, priority:240
msgid "Assume the following history exists and the current branch is \"`master`\":"
msgstr "Suponha que exista o seguinte histórico e o ramo atual seja `master`:"

#. type: delimited block -
#: en/git-merge.txt:34
#, no-wrap, priority:240
msgid ""
"\t  A---B---C topic\n"
"\t /\n"
"    D---E---F---G master\n"
msgstr ""
"\t  A---B---C topic\n"
"\t /\n"
"    D---E---F---G master\n"

#. type: Plain text
#: en/git-merge.txt:41
#, priority:240
msgid "Then \"`git merge topic`\" will replay the changes made on the `topic` branch since it diverged from `master` (i.e., `E`) until its current commit (`C`) on top of `master`, and record the result in a new commit along with the names of the two parent commits and a log message from the user describing the changes."
msgstr "Em seguida, `git merge topic` repetirá as alterações feitas no ramo `topic` uma vez que ele divergiu de `master` (ou seja,`E`) até que o seu commit atual (`C`) no topo do `master` registrando o resultado num novo commit junto com os nomes de dois commits relacionados numa mensagem log vindo do usuário descrevendo as alterações."

#. type: delimited block -
#: en/git-merge.txt:46
#, no-wrap, priority:240
msgid ""
"\t  A---B---C topic\n"
"\t /         \\\n"
"    D---E---F---G---H master\n"
msgstr ""
"\t  A---B---C topic\n"
"\t /         \\\n"
"    D---E---F---G---H master\n"

#. type: Plain text
#: en/git-merge.txt:55
#, priority:240
msgid "The second syntax (\"`git merge --abort`\") can only be run after the merge has resulted in conflicts. 'git merge --abort' will abort the merge process and try to reconstruct the pre-merge state. However, if there were uncommitted changes when the merge started (and especially if those changes were further modified after the merge was started), 'git merge --abort' will in some cases be unable to reconstruct the original (pre-merge) changes. Therefore:"
msgstr "A segunda sintaxe (\"`git merge --abort`\") só pode ser executada após o resultado da mesclagem apresentar conflitos. O comando 'git merge abort' abortará o processo de mesclagem e tentará reconstruir a condição anterior a mesclagem. No entanto, Caso haja alterações com commits não realizados quando a mesclagem for iniciada (e especialmente caso estas alterações forem modificadas posteriormente após o início da mesclagem), o 'git merge abort' será, em alguns casos, incapaz de reconstruir as alterações originais (pré-mesclagem). Portanto:"

#. type: Plain text
#: en/git-merge.txt:59
#, no-wrap, priority:240
msgid ""
"*Warning*: Running 'git merge' with non-trivial uncommitted changes is\n"
"discouraged: while possible, it may leave you in a state that is hard to\n"
"back out of in the case of a conflict.\n"
msgstr ""
"*Aviso*: É desencorajado executar o comando 'git merge' com alterações\n"
"não-triviais dos commits que não foram feitos é desencorajado: enquanto\n"
"possível, pode deixá-lo numa condição difícil de sair no caso de haver um conflito.\n"

#. type: Plain text
#: en/git-merge.txt:62
#, priority:240
msgid "The third syntax (\"`git merge --continue`\") can only be run after the merge has resulted in conflicts."
msgstr "A terceira sintaxe (\"`git merge --continue`\") só pode ser executada depois que a mesclagem apresentar conflitos."

#. type: Plain text
#: en/git-merge.txt:72
#, priority:240
msgid "Set the commit message to be used for the merge commit (in case one is created)."
msgstr "Defina a mensagem do commit que será utilizada para a mesclagem do commit (no caso de uma ser criada)."

#. type: Plain text
#: en/git-merge.txt:75 en/git-merge.txt:92
#, priority:240
msgid "If `--log` is specified, a shortlog of the commits being merged will be appended to the specified message."
msgstr "Caso `--log` seja utilizado, um atalho dos commits que estão sendo mesclados será anexado à mensagem informada."

#. type: Plain text
#: en/git-merge.txt:79
#, priority:240
msgid "The 'git fmt-merge-msg' command can be used to give a good default for automated 'git merge' invocations. The automated message can include the branch description."
msgstr "O comando 'git fmt-merge-msg' pode ser utilizado para informar uma boa predefinição para as invocações automatizadas do comando 'git merge'. A mensagem automatizada pode incluir a descrição da ramificação."

#. type: Plain text
#: en/git-merge.txt:84
#, priority:240
msgid "Prepare the default merge message as if merging to the branch `<branch>`, instead of the name of the real branch to which the merge is made."
msgstr "Prepare a mensagem predefinida da mesclagem como se fosse uma mesclagem para a ramificação `<ramificação>` em vez do nome da ramificação real para onde a mesclagem for feita."

#. type: Plain text
#: en/git-merge.txt:89
#, priority:240
msgid "Read the commit message to be used for the merge commit (in case one is created)."
msgstr "Leia a mensagem de commit que será utilizada para mesclar o commit (no caso de uma ser criada)."

#. type: Plain text
#: en/git-merge.txt:99
#, priority:240
msgid "Silently overwrite ignored files from the merge result. This is the default behavior. Use `--no-overwrite-ignore` to abort."
msgstr "Silently overwrite ignored files from the merge result. Este é o comportamento predefinido. Use `--no-overwrite-ignore` to abort."

#. type: Plain text
#: en/git-merge.txt:104
#, priority:240
msgid "Abort the current conflict resolution process, and try to reconstruct the pre-merge state. If an autostash entry is present, apply it to the worktree."
msgstr "Interrompa o processo atual da resolução de conflitos e tente reconstruir a condição de pré-mesclagem. Caso uma entrada de \"autostash\" esteja presente, aplique-a à árvore de trabalho."

#. type: Plain text
#: en/git-merge.txt:109
#, priority:240
msgid "If there were uncommitted worktree changes present when the merge started, 'git merge --abort' will in some cases be unable to reconstruct these changes. It is therefore recommended to always commit or stash your changes before running 'git merge'."
msgstr "Caso existam commits que não tenham sido realizados e estejam presentes na árvore de trabalho quando a mesclagem for iniciada, o comando 'git merge --abort' será, em alguns casos, incapaz de reconstruir essas alterações. Portanto, é recomendável sempre fazer o commit ou acumular as suas alterações antes de executar o 'git merge'."

#. type: Plain text
#: en/git-merge.txt:115
#, priority:240
msgid "'git merge --abort' is equivalent to 'git reset --merge' when `MERGE_HEAD` is present unless `MERGE_AUTOSTASH` is also present in which case 'git merge --abort' applies the stash entry to the worktree whereas 'git reset --merge' will save the stashed changes in the stash list."
msgstr "O comando 'git merge --abort' é o equivalente ao 'git reset --merge' quando `MERGE_HEAD` estiver presente ou a menos que o `MERGE_AUTOSTASH` também esteja; neste caso, o comando 'git merge --abort' aplica a entrada \"stash\" na área de trabalho enquanto 'git reset --merge' salvará as alterações acumuladas na lista \"stash\"."

#. type: Plain text
#: en/git-merge.txt:120
#, priority:240
msgid "Forget about the current merge in progress. Leave the index and the working tree as-is. If `MERGE_AUTOSTASH` is present, the stash entry will be saved to the stash list."
msgstr "Não se preocupe com a mesclagem em andamento. Mantenha o índice e a árvore de trabalho como estão. Caso `MERGE_AUTOSTASH` esteja presente, os lançamentos armazenados serão salvos na lista \"stash\"."

#. type: Plain text
#: en/git-merge.txt:125
#, priority:240
msgid "After a 'git merge' stops due to conflicts you can conclude the merge by running 'git merge --continue' (see \"HOW TO RESOLVE CONFLICTS\" section below)."
msgstr "Depois que um 'git merge' for interrompido por causa dos conflitos, é possível concluir a mesclagem executando o comando 'git merge --continue' (consulte a seção \"COMO RESOLVER CONFLITOS\" abaixo)."

#. type: Plain text
#: en/git-merge.txt:130
#, priority:240
msgid "Commits, usually other branch heads, to merge into our branch.  Specifying more than one commit will create a merge with more than two parents (affectionately called an Octopus merge)."
msgstr "Os commits, geralmente outros cabeçalhos do ramo que serão mesclados na nossa filial.  A especificação de mais de um commit criará uma mesclagem com mais de duas origens (carinhosamente chamada de mesclagem polvo (octopus merge))."

#. type: Plain text
#: en/git-merge.txt:134
#, priority:240
msgid "If no commit is given from the command line, merge the remote-tracking branches that the current branch is configured to use as its upstream.  See also the configuration section of this manual page."
msgstr "Caso nenhum commit seja informado na linha de comando, mescle as ramificações monitoradas remotamente para que a ramificação atual esteja configurada para ser utilizada como sua upstream.  Consulte também a seção de configuração desta página do manual."

#. type: Plain text
#: en/git-merge.txt:138
#, priority:240
msgid "When `FETCH_HEAD` (and no other commit) is specified, the branches recorded in the `.git/FETCH_HEAD` file by the previous invocation of `git fetch` for merging are merged to the current branch."
msgstr "Quando `FETCH_HEAD` (e nenhum outro commit) for definido, as ramificações registradas no arquivo `.git/FETCH_HEAD` através da invocação anterior para mesclagem com o comando `git fetch`, serão mescladas no ramo atual."

#. type: Title -
#: en/git-merge.txt:141
#, no-wrap, priority:240
msgid "PRE-MERGE CHECKS"
msgstr "VERIFICAÇÕES PRÉVIAS DA MESCLAGEM"

#. type: Plain text
#: en/git-merge.txt:149
#, priority:240
msgid "Before applying outside changes, you should get your own work in good shape and committed locally, so it will not be clobbered if there are conflicts.  See also linkgit:git-stash[1].  'git pull' and 'git merge' will stop without doing anything when local uncommitted changes overlap with files that 'git pull'/'git merge' may need to update."
msgstr "Você deve ter o seu próprio trabalho em boas condições e com o commit feito localmente antes de aplicar as alterações externas, para evitar que sejam sobrescritos no caso da existência de conflitos.  Consulte também linkgit:git-stash[1].  Os comandos 'git pull' e 'git merge' ficarão inertes sem fazer nada quando as modificações dos commits que não foram aplicados localmente se sobrepuserem aos arquivos que os comandos 'git pull'/'git merge' talvez precisem atualizar."

#. type: Plain text
#: en/git-merge.txt:155
#, priority:240
msgid "To avoid recording unrelated changes in the merge commit, 'git pull' and 'git merge' will also abort if there are any changes registered in the index relative to the `HEAD` commit.  (Special narrow exceptions to this rule may exist depending on which merge strategy is in use, but generally, the index must match HEAD.)"
msgstr "Para evitar o registro de alterações não relacionadas a mesclagem do commit, os comandos 'git pull' e 'git merge' também serão cancelados caso exista alguma alteração registrada no índice em relação ao commit `HEAD`.  (Podem existir algumas poucas exceções especiais a essa regra dependendo de qual estratégia de mesclagem estiver em uso, no geral, o índice deve corresponder ao HEAD.)"

#. type: Plain text
#: en/git-merge.txt:158
#, priority:240
msgid "If all named commits are already ancestors of `HEAD`, 'git merge' will exit early with the message \"Already up to date.\""
msgstr "Caso todos os commits sejam antecessores ao `HEAD`, então o comando 'git merge' encerrara prematuramente exibindo a mensagem \"Já foi atualizado\""

#. type: Title -
#: en/git-merge.txt:160
#, no-wrap, priority:240
msgid "FAST-FORWARD MERGE"
msgstr "MESCLAGEM COM AVANÇO RÁPIDO"

#. type: Plain text
#: en/git-merge.txt:170
#, priority:240
msgid "Often the current branch head is an ancestor of the named commit.  This is the most common case especially when invoked from 'git pull': you are tracking an upstream repository, you have committed no local changes, and now you want to update to a newer upstream revision.  In this case, a new commit is not needed to store the combined history; instead, the `HEAD` (along with the index) is updated to point at the named commit, without creating an extra merge commit."
msgstr "Frequentemente, o cabeçalho do ramo atual é um ancestral do commit informado.  Este é o caso mais comum especialmente quando invocado a partir do comando 'git pull': você está monitorando um repositório upstream, não efetuou as alterações locais e agora deseja atualizar para uma revisão upstream mais recente.  Nesse caso, não é necessário um novo commit para armazenar o histórico combinado; em vez disso, o `HEAD` (junto com o índice) é atualizado para apontar para o commit informado sem criar uma mesclagem extra do commit."

#. type: Plain text
#: en/git-merge.txt:172
#, priority:240
msgid "This behavior can be suppressed with the `--no-ff` option."
msgstr "Este comportamento pode ser suprimido ao usar a opção `--no-ff`."

#. type: Title -
#: en/git-merge.txt:174
#, no-wrap, priority:240
msgid "TRUE MERGE"
msgstr "MESCLAGEM REAL"

#. type: Plain text
#: en/git-merge.txt:179
#, priority:240
msgid "Except in a fast-forward merge (see above), the branches to be merged must be tied together by a merge commit that has both of them as its parents."
msgstr "Exceto numa mesclagem de avanço rápido (veja acima), as ramificações que serão mescladas devem ser vinculadas através de uma consolidação da mesclagem que tenha ambas como as suas origens."

#. type: Plain text
#: en/git-merge.txt:184
#, priority:240
msgid "A merged version reconciling the changes from all branches to be merged is committed, and your `HEAD`, index, and working tree are updated to it.  It is possible to have modifications in the working tree as long as they do not overlap; the update will preserve them."
msgstr "Uma versão mesclada que reconcilia as alterações de todas as ramificações que serão mescladas, o commit é feito e o seu `HEAD`, índice e a árvore de trabalho são atualizados para ela.  É possível ter alterações na árvore de trabalho, desde que não se sobreponham; a atualização irá preservá-las."

#. type: Plain text
#: en/git-merge.txt:187
#, priority:240
msgid "When it is not obvious how to reconcile the changes, the following happens:"
msgstr "Quando não é óbvio como reconciliar as alterações, acontece o seguinte:"

#. type: Plain text
#: en/git-merge.txt:189
#, priority:240
msgid "The `HEAD` pointer stays the same."
msgstr "O indicador do `HEAD` se mantém o mesmo."

#. type: Plain text
#: en/git-merge.txt:190
#, priority:240
msgid "The `MERGE_HEAD` ref is set to point to the other branch head."
msgstr "O \"ref\" do `MERGE_HEAD` é definido para indicar o `HEAD` do outro ramo."

#. type: Plain text
#: en/git-merge.txt:192
#, priority:240
msgid "Paths that merged cleanly are updated both in the index file and in your working tree."
msgstr "Os caminhos que foram mesclados corretamente são atualizados no arquivo do índice e na sua árvore de trabalho."

#. type: Plain text
#: en/git-merge.txt:198
#, priority:240
msgid "For conflicting paths, the index file records up to three versions: stage 1 stores the version from the common ancestor, stage 2 from `HEAD`, and stage 3 from `MERGE_HEAD` (you can inspect the stages with `git ls-files -u`).  The working tree files contain the result of the \"merge\" program; i.e. 3-way merge results with familiar conflict markers `<<<` `===` `>>>`."
msgstr "Para os caminhos conflitantes, o arquivo do índice registra até três versões: o estágio 1 armazena a versão do ancestral comum, o estágio 2 do `HEAD` e o estágio 3 do `MERGE_HEAD` (você pode inspecionar os estágios com `git ls-files -u`).  Os arquivos da árvore de trabalho contêm o resultado do programa \"merge\"; ou seja, os resultados da mesclagem em três direções com os marcadores de conflito familiares `<<<`, `===` e `>>>`."

#. type: Plain text
#: en/git-merge.txt:202
#, priority:240
msgid "No other changes are made.  In particular, the local modifications you had before you started merge will stay the same and the index entries for them stay as they were, i.e. matching `HEAD`."
msgstr "Nenhuma outra alteração é feita.  Em particular, as alterações locais que você tinha antes de iniciar a mesclagem permanecerão as mesmas e as entradas do índice para elas permanecerão como estavam, ou seja, correspondendo com `HEAD '."

#. type: Plain text
#: en/git-merge.txt:205
#, priority:240
msgid "If you tried a merge which resulted in complex conflicts and want to start over, you can recover with `git merge --abort`."
msgstr "Caso tenha tentado uma mesclagem que resultou em conflitos complexos e queira recomeçar, execute o comando `git merge --abort`."

#. type: Title -
#: en/git-merge.txt:207
#, no-wrap, priority:240
msgid "MERGING TAG"
msgstr "MESCLANDO TAG"

#. type: Plain text
#: en/git-merge.txt:214
#, priority:240
msgid "When merging an annotated (and possibly signed) tag, Git always creates a merge commit even if a fast-forward merge is possible, and the commit message template is prepared with the tag message.  Additionally, if the tag is signed, the signature check is reported as a comment in the message template. See also linkgit:git-tag[1]."
msgstr "Ao mesclar uma tag anotada (e possivelmente assinada), o Git sempre cria a mesclagem de um commit, mesmo que seja possível realizar uma mesclagem de avanço rápido, o modelo da mensagem do commit é preparado com a mensagem da tag.  Além disso, caso a tag esteja assinada, a verificação da assinatura será relatada como um comentário no modelo de mensagem. Consulte também linkgit:git-tag[1]."

#. type: Plain text
#: en/git-merge.txt:218
#, priority:240
msgid "When you want to just integrate with the work leading to the commit that happens to be tagged, e.g. synchronizing with an upstream release point, you may not want to make an unnecessary merge commit."
msgstr "Quando você deseja apenas integrar-se ao trabalho que leva ao commit que está marcado, por exemplo, sincronizando com um ponto de liberação upstream, talvez você não queira fazer uma consolidação desnecessária da mesclagem."

#. type: Plain text
#: en/git-merge.txt:222
#, priority:240
msgid "In such a case, you can \"unwrap\" the tag yourself before feeding it to `git merge`, or pass `--ff-only` when you do not have any work on your own. e.g."
msgstr "Neste caso, você pode \"desembrulhar\" a etiqueta antes de encaminhá-la para o comando `git merge` ou passar ao `--ffff-only` quando você não tiver nenhum trabalho feito por conta própria. por exemplo."

#. type: delimited block -
#: en/git-merge.txt:227
#, no-wrap, priority:240
msgid ""
"git fetch origin\n"
"git merge v1.2.3^0\n"
"git merge --ff-only v1.2.3\n"
msgstr ""
"git fetch origin\n"
"git merge v1.2.3^0\n"
"git merge --ff-only v1.2.3\n"

#. type: Title -
#: en/git-merge.txt:231
#, no-wrap, priority:240
msgid "HOW CONFLICTS ARE PRESENTED"
msgstr "COMO OS CONFLITOS SÃO APRESENTADOS"

#. type: Plain text
#: en/git-merge.txt:240
#, priority:240
msgid "During a merge, the working tree files are updated to reflect the result of the merge.  Among the changes made to the common ancestor's version, non-overlapping ones (that is, you changed an area of the file while the other side left that area intact, or vice versa) are incorporated in the final result verbatim.  When both sides made changes to the same area, however, Git cannot randomly pick one side over the other, and asks you to resolve it by leaving what both sides did to that area."
msgstr "Durante uma mesclagem, os arquivos da árvore de trabalho são atualizados para refletir o resultado da mesclagem.  Entre as alterações feitas no ancestral da versão comum, as que não se sobrepõem (ou seja, você alterou uma área do arquivo enquanto o outro lado deixou a área intacta ou vice-versa) são incorporadas no resultado final, literalmente.  Quando os dois lados que fizeram as alterações na mesma área, porém, o Git não pode escolher aleatoriamente um lado sobre o outro e solicita que você o resolva, deixando intacto o que os dois lados fizeram nessa área."

#. type: Plain text
#: en/git-merge.txt:243
#, priority:240
msgid "By default, Git uses the same style as the one used by the \"merge\" program from the RCS suite to present such a conflicted hunk, like this:"
msgstr "É predefinido que o Git utilize o mesmo estilo que o utilizado pelo programa \"merge\" (mesclar) do conjunto RCS para apresentar um pedaço conflitante, como este:"

#. type: delimited block -
#: en/git-merge.txt:255
#, no-wrap, priority:240
msgid ""
"Here are lines that are either unchanged from the common\n"
"ancestor, or cleanly resolved because only one side changed,\n"
"or cleanly resolved because both sides changed the same way.\n"
"<<<<<<< yours:sample.txt\n"
"Conflict resolution is hard;\n"
"let's go shopping.\n"
"=======\n"
"Git makes conflict resolution easy.\n"
">>>>>>> theirs:sample.txt\n"
"And here is another line that is cleanly resolved or unmodified.\n"
msgstr ""
"Aqui estão as linhas que não são alteradas em relação ao ancestral\n"
"comum ou resolvido de maneira limpa porque apenas um lado foi alterado\n"
"ou foi resolvido de forma limpa porque ambos os lados foram igualmente alterados.\n"
"<<<<<<< yours:sample.txt\n"
"A resolução de conflitos é difícil;\n"
"vamos às compras.\n"
"=======\n"
"O Git facilita a resolução de conflitos.\n"
">>>>>>> theirs:sample.txt\n"
"E aqui está outra linha que foi claramente resolvida ou não foi modificada.\n"

#. type: Plain text
#: en/git-merge.txt:260
#, priority:240
msgid "The area where a pair of conflicting changes happened is marked with markers `<<<<<<<`, `=======`, and `>>>>>>>`.  The part before the `=======` is typically your side, and the part afterwards is typically their side."
msgstr "A área onde ocorreu um para de alterações conflitantes é marcada com os marcadores `<<<<<<<`, `=======` e `>>>>>>>`.  A parte anterior ao `=======` é tipicamente do seu lado e a parte posterior é tipicamente do lado deles."

#. type: Plain text
#: en/git-merge.txt:266
#, priority:240
msgid "The default format does not show what the original said in the conflicting area.  You cannot tell how many lines are deleted and replaced with Barbie's remark on your side.  The only thing you can tell is that your side wants to say it is hard and you'd prefer to go shopping, while the other side wants to claim it is easy."
msgstr "O formato predefinido não exibe o que o original disse na área conflitante.  Você não pode dizer quantas linhas foram excluídas e substituídas através das observações do seu lado.  A única coisa que é possível dizer é que o seu lado quer dizer que é difícil e você prefere ir às compras, enquanto o outro lado quer dizer que é fácil."

#. type: Plain text
#: en/git-merge.txt:270
#, priority:240
msgid "An alternative style can be used by setting the \"merge.conflictStyle\" configuration variable to either \"diff3\" or \"zdiff3\".  In \"diff3\" style, the above conflict may look like this:"
msgstr "Um estilo alternativo pode ser utilizado ao definir a variável de configuração \"merge.conflictStyle\" para \"diff3\" ou \"zdiff3\".  No estilo \"diff3\", o conflito acima pode ser assim:"

#. type: delimited block -
#: en/git-merge.txt:286
#, no-wrap, priority:240
msgid ""
"Here are lines that are either unchanged from the common\n"
"ancestor, or cleanly resolved because only one side changed,\n"
"<<<<<<< yours:sample.txt\n"
"or cleanly resolved because both sides changed the same way.\n"
"Conflict resolution is hard;\n"
"let's go shopping.\n"
"||||||| base:sample.txt\n"
"or cleanly resolved because both sides changed identically.\n"
"Conflict resolution is hard.\n"
"=======\n"
"or cleanly resolved because both sides changed the same way.\n"
"Git makes conflict resolution easy.\n"
">>>>>>> theirs:sample.txt\n"
"And here is another line that is cleanly resolved or unmodified.\n"
msgstr ""
"Aqui estão as linhas que não são alteradas em relação ao ancestral\n"
"comum ou foi resolvido de maneira limpa porque apenas um lado foi alterado.\n"
"<<<<<<< seu:sample.txt\n"
"ou resolvidos de forma limpa porque ambos os lados foram alterados igualmente.\n"
"A resolução de conflitos é difícil;\n"
"vamos às compras.\n"
"||||||| base:sample.txt\n"
"ou resolvidos de forma limpa porque ambos os lados foram igualmente alterados.\n"
"A resolução de conflitos é difícil.\n"
"=======\n"
"ou resolvidos de forma limpa porque ambos os lados foram alterados igualmente.\n"
"O git facilita a resolução de conflitos.\n"
">>>>>>> deles:sample.txt\n"
"E aqui está outra linha que foi resolvida ou não foi modificada.\n"

#. type: Plain text
#: en/git-merge.txt:289
#, priority:240
msgid "while in \"zdiff3\" style, it may look like this:"
msgstr "enquanto no estilo \"zdiff3\", por ficar assim:"

#. type: delimited block -
#: en/git-merge.txt:304
#, no-wrap, priority:240
msgid ""
"Here are lines that are either unchanged from the common\n"
"ancestor, or cleanly resolved because only one side changed,\n"
"or cleanly resolved because both sides changed the same way.\n"
"<<<<<<< yours:sample.txt\n"
"Conflict resolution is hard;\n"
"let's go shopping.\n"
"||||||| base:sample.txt\n"
"or cleanly resolved because both sides changed identically.\n"
"Conflict resolution is hard.\n"
"=======\n"
"Git makes conflict resolution easy.\n"
">>>>>>> theirs:sample.txt\n"
"And here is another line that is cleanly resolved or unmodified.\n"
msgstr ""
"Aqui estão as linhas que não são alteradas a partir do ancestral\n"
"comum ou foi resolvido de maneira limpa porque apenas um lado foi alterado,\n"
"ou foi resolvido de maneira limpa porque apenas um lado foi alterado.\n"
"<<<<<<< seu:sample.txt\n"
"A resolução de conflitos é difícil;\n"
"vamos às compras.\n"
"||||||| base:sample.txt\n"
"ou resolvidos de forma limpa porque ambos os lados foram igualmente alterados.\n"
"A resolução de conflitos é difícil;\n"
"=======\n"
"O Git facilita a resolução de conflitos.\n"
">>>>>>> deles:sample.txt\n"
"E aqui está outra linha que foi claramente resolvida ou não foi modificada.\n"

#. type: Plain text
#: en/git-merge.txt:312
#, priority:240
msgid "In addition to the `<<<<<<<`, `=======`, and `>>>>>>>` markers, it uses another `|||||||` marker that is followed by the original text.  You can tell that the original just stated a fact, and your side simply gave in to that statement and gave up, while the other side tried to have a more positive attitude.  You can sometimes come up with a better resolution by viewing the original."
msgstr "Além dos marcadores `<<<<<<<`, `=======` e `>>>>>>>` `, ele utiliza outro marcador `|||||||` que é seguido pelo texto original.  Você pode dizer que o original acabou de declarar um fato e o seu lado simplesmente cedeu a essa afirmação e desistiu, enquanto o outro lado tentou ter uma atitude mais positiva.  Às vezes, você pode ter uma resolução melhor visualizando o original."

#. type: Title -
#: en/git-merge.txt:315
#, no-wrap, priority:240
msgid "HOW TO RESOLVE CONFLICTS"
msgstr "COMO RESOLVER OS CONFLITOS"

#. type: Plain text
#: en/git-merge.txt:318
#, priority:240
msgid "After seeing a conflict, you can do two things:"
msgstr "Após encontrar um conflito, você pode fazer duas coisas:"

#. type: Plain text
#: en/git-merge.txt:323
#, priority:240
msgid "Decide not to merge.  The only clean-ups you need are to reset the index file to the `HEAD` commit to reverse 2. and to clean up working tree changes made by 2. and 3.; `git merge --abort` can be used for this."
msgstr "Decida não fazer a mesclagem.  As únicas limpezas necessárias são para redefinir o arquivo no índice para o commit `HEAD` para que '2' seja revertido. e para limpar as alterações na árvore de trabalho feitas por '2'. e o '3' .; O `git merge --abort` pode ser utilizado para isso."

#. type: Plain text
#: en/git-merge.txt:330
#, priority:240
msgid "Resolve the conflicts.  Git will mark the conflicts in the working tree.  Edit the files into shape and 'git add' them to the index.  Use 'git commit' or 'git merge --continue' to seal the deal. The latter command checks whether there is a (interrupted) merge in progress before calling 'git commit'."
msgstr "Resolva os conflitos.  O Git marcará os conflitos na árvore de trabalho.  Edite os arquivos em ordem e comando 'git add' adiciona eles ao índice.  Utilize o comando 'git commit' ou 'git merge --continue' para selar o acordo. O último comando verifica a existência de uma mesclagem (interrompida) em andamento antes de chamar o comando 'git commit'."

#. type: Plain text
#: en/git-merge.txt:332
#, priority:240
msgid "You can work through the conflict with a number of tools:"
msgstr "Você pode trabalhar o conflito com uma quantidade de ferramentas:"

#. type: Plain text
#: en/git-merge.txt:335
#, priority:240
msgid "Use a mergetool.  `git mergetool` to launch a graphical mergetool which will work you through the merge."
msgstr "Utilize uma ferramenta de mesclagem \"mergetool\".  `git mergetool` para iniciar uma ferramenta gráfica para lhe auxiliar através do processo de mesclagem."

#. type: Plain text
#: en/git-merge.txt:339
#, priority:240
msgid "Look at the diffs.  `git diff` will show a three-way diff, highlighting changes from both the `HEAD` and `MERGE_HEAD` versions."
msgstr "Veja as diferenças dos arquivos diff.  O `git diff` exibirá um diff de três vias, destacando as alterações das versões` HEAD` e `MERGE_HEAD`."

#. type: Plain text
#: en/git-merge.txt:343
#, priority:240
msgid "Look at the diffs from each branch. `git log --merge -p <path>` will show diffs first for the `HEAD` version and then the `MERGE_HEAD` version."
msgstr "Veja as diferenças de cada ramo. O comando `git log --merge -p <caminho>` exibirá as diferenças primeiro para a versão `HEAD` e depois para a versão `MERGE_HEAD`."

#. type: Plain text
#: en/git-merge.txt:348
#, priority:240
msgid "Look at the originals.  `git show :1:filename` shows the common ancestor, `git show :2:filename` shows the `HEAD` version, and `git show :3:filename` shows the `MERGE_HEAD` version."
msgstr "Consulte os originais.  O comando `git show :1:filename` exibe o ancestral comum, `git show :2:filename` exibe a versão do `HEAD` e o `git show :3:filename` exibe a versão do `MERGE_HEAD`."

#. type: Plain text
#: en/git-merge.txt:355
#, priority:240
msgid "Merge branches `fixes` and `enhancements` on top of the current branch, making an octopus merge:"
msgstr "Mescla as ramificações `fixes` e `enhancements` no cume do ramo atual, fazendo um conjunto de mesclagens:"

#. type: delimited block -
#: en/git-merge.txt:358
#, no-wrap, priority:240
msgid "$ git merge fixes enhancements\n"
msgstr "$ git merge fixes enhancements\n"

#. type: Plain text
#: en/git-merge.txt:362
#, priority:240
msgid "Merge branch `obsolete` into the current branch, using `ours` merge strategy:"
msgstr "Mescle o ramo `obsolete` (obsoleto) no ramo atual, utilizando a `nossa` estratégia de mesclagem:"

#. type: delimited block -
#: en/git-merge.txt:365
#, no-wrap, priority:240
msgid "$ git merge -s ours obsolete\n"
msgstr "$ git merge -s ours obsolete\n"

#. type: Plain text
#: en/git-merge.txt:369
#, priority:240
msgid "Merge branch `maint` into the current branch, but do not make a new commit automatically:"
msgstr "Mescla o ramo `maint` no ramo atual, porém não faça um novo commit de forma automática:"

#. type: delimited block -
#: en/git-merge.txt:372
#, no-wrap, priority:240
msgid "$ git merge --no-commit maint\n"
msgstr "$ git merge --no-commit maint\n"

#. type: Plain text
#: en/git-merge.txt:376
#, priority:240
msgid "This can be used when you want to include further changes to the merge, or want to write your own merge commit message."
msgstr "Isso pode ser utilizado quando você queira incluir outras alterações na mesclagem ou se deseja, grave a sua própria mensagem do commit na mesclagem."

#. type: Plain text
#: en/git-merge.txt:380
#, priority:240
msgid "You should refrain from abusing this option to sneak substantial changes into a merge commit.  Small fixups like bumping release/version name would be acceptable."
msgstr "Você deve evitar abusar dessa opção para ocultar as alterações substanciais numa mesclagem do commit.  Pequenos reparos, como o nome da versão/revisão são aceitáveis."

#. type: Labeled list
#: en/git-merge.txt:387
#, no-wrap, priority:240
msgid "branch.<name>.mergeOptions"
msgstr "branch.<nome>.mergeOptions"

#. type: Plain text
#: en/git-merge.txt:391
#, priority:240
msgid "Sets default options for merging into branch <name>. The syntax and supported options are the same as those of 'git merge', but option values containing whitespace characters are currently not supported."
msgstr "Define as opções predefinidas de mesclagem no ramo <nome>. A sintaxe e as opções que são compatíveis são iguais às do 'git merge', porém atualmente os valores das opções que contêm os caracteres de espaço não são compatíveis."

#. type: Plain text
#: en/git-merge.txt:404
#, ignore-same, priority:240
msgid "linkgit:git-fmt-merge-msg[1], linkgit:git-pull[1], linkgit:gitattributes[5], linkgit:git-reset[1], linkgit:git-diff[1], linkgit:git-ls-files[1], linkgit:git-add[1], linkgit:git-rm[1], linkgit:git-mergetool[1]"
msgstr "linkgit:git-fmt-merge-msg[1], linkgit:git-pull[1], linkgit:gitattributes[5], linkgit:git-reset[1], linkgit:git-diff[1], linkgit:git-ls-files[1], linkgit:git-add[1], linkgit:git-rm[1], linkgit:git-mergetool[1]"

#. type: Title =
#: en/git-mktag.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-mktag(1)"
msgstr "git-mktag(1)"

#. type: Plain text
#: en/git-mktag.txt:7
#, priority:100
msgid "git-mktag - Creates a tag object with extra validation"
msgstr "git-mktag - Cria um objeto tag com validação extra"

#. type: Plain text
#: en/git-mktag.txt:13
#, no-wrap, priority:100
msgid "'git mktag'\n"
msgstr "'git mktag'\n"

#. type: Plain text
#: en/git-mktag.txt:19
#, priority:100
msgid "Reads a tag contents on standard input and creates a tag object. The output is the new tag's <object> identifier."
msgstr "Lê o conteúdo de uma tag na entrada padrão e cria um objeto tag. A saída se torna o novo identificador do <objeto> da nova tag."

#. type: Plain text
#: en/git-mktag.txt:23
#, priority:100
msgid "This command is mostly equivalent to linkgit:git-hash-object[1] invoked with `-t tag -w --stdin`. I.e. both of these will create and write a tag found in `my-tag`:"
msgstr "Este comando é o equivalente ao linkgit:git-hash-object[1] invocado com o comando `-t tag -w --stdin`. Ou seja, ambos criarão e escreverão uma tag encontrada em `my-tag`:"

#. type: Plain text
#: en/git-mktag.txt:26
#, no-wrap, priority:100
msgid ""
"    git mktag <my-tag\n"
"    git hash-object -t tag -w --stdin <my-tag\n"
msgstr ""
"    git mktag <minha-tag\n"
"    git hash-object -t tag -w --stdin <minha-tag\n"

#. type: Plain text
#: en/git-mktag.txt:29
#, priority:100
msgid "The difference is that mktag will die before writing the tag if the tag doesn't pass a linkgit:git-fsck[1] check."
msgstr "A diferença é que mktag será encerrado antes de registrar a tag caso a tag não passe na verificação linkgit:git-fsck[1]."

#. type: Plain text
#: en/git-mktag.txt:33
#, priority:100
msgid "The \"fsck\" check done mktag is stricter than what linkgit:git-fsck[1] would run by default in that all `fsck.<msg-id>` messages are promoted from warnings to errors (so e.g. a missing \"tagger\" line is an error)."
msgstr "O \"fsck\" verifica se a mktag é mais estrita do que o linkgit:git-fsck[1] executaria por padrão onde todas as mensagens `fsck.<msg-id>` sejam promovidas a partir de avisos de erros (uma linha \"tagger\" ausente por exemplo, é um erro)."

#. type: Plain text
#: en/git-mktag.txt:37
#, priority:100
msgid "Extra headers in the object are also an error under mktag, but ignored by linkgit:git-fsck[1]. This extra check can be turned off by setting the appropriate `fsck.<msg-id>` varible:"
msgstr "Cabeçalhos extras no objeto também são um erro sob mktag, porém são ignorados pelo linkgit:git-fsck[1]. Esta verificação extra pode ser desativada ao configurar a variável `fsck. <msg-id>` de acordo:"

#. type: Plain text
#: en/git-mktag.txt:39
#, no-wrap, priority:100
msgid "    git -c fsck.extraHeaderEntry=ignore mktag <my-tag-with-headers\n"
msgstr "    git -c fsck.extraHeaderEntry=ignore mktag <minha-tag-com-cabeçalhos\n"

#. type: Plain text
#: en/git-mktag.txt:47
#, priority:100
msgid "By default mktag turns on the equivalent of linkgit:git-fsck[1] `--strict` mode. Use `--no-strict` to disable it."
msgstr "Por predefinição, o mktag ativa o que sria o equivalente ao modo linkgit:git-fsck[1] `--strict`. Use `--no-strict` para desativá-lo."

#. type: Title -
#: en/git-mktag.txt:49
#, no-wrap, priority:100
msgid "Tag Format"
msgstr "Formato da Tag"

#. type: Plain text
#: en/git-mktag.txt:52
#, priority:100
msgid "A tag signature file, to be fed to this command's standard input, has a very simple fixed format: four lines of"
msgstr "Um arquivo de assinatura da tag que será alimentado na entrada padrão deste comando, possui um formato fixo muito simples: quatro linhas de"

#. type: Plain text
#: en/git-mktag.txt:57
#, no-wrap, priority:100
msgid ""
"  object <hash>\n"
"  type <typename>\n"
"  tag <tagname>\n"
"  tagger <tagger>\n"
msgstr ""
"  object <hash>\n"
"  type <typename>\n"
"  tag <tagname>\n"
"  tagger <tagger>\n"

#. type: Plain text
#: en/git-mktag.txt:63
#, priority:100
msgid "followed by some 'optional' free-form message (some tags created by older Git may not have `tagger` line).  The message, when it exists, is separated by a blank line from the header.  The message part may contain a signature that Git itself doesn't care about, but that can be verified with gpg."
msgstr "seguido por alguma mensagem 'opcional' qualquer (algumas tags criadas pelo Git mais antigo podem não ter a linha `tagger`).  A mensagem, quando existe, é separada por uma linha em branco a partir do cabeçalho.  A parte da mensagem pode conter uma assinatura onde o próprio Git não se importa, porém pode ser verificada com o gpg."

#. type: Title =
#: en/git-mktree.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-mktree(1)"
msgstr "git-mktree(1)"

#. type: Plain text
#: en/git-mktree.txt:7
#, priority:100
msgid "git-mktree - Build a tree-object from ls-tree formatted text"
msgstr "git-mktree - Constrói um objeto árvore a partir do texto formatado em ls-tree"

#. type: Plain text
#: en/git-mktree.txt:13
#, no-wrap, priority:100
msgid "'git mktree' [-z] [--missing] [--batch]\n"
msgstr "'git mktree' [-z] [--missing] [--batch]\n"

#. type: Plain text
#: en/git-mktree.txt:20
#, priority:100
msgid "Reads standard input in non-recursive `ls-tree` output format, and creates a tree object.  The order of the tree entries is normalized by mktree so pre-sorting the input is not required.  The object name of the tree object built is written to the standard output."
msgstr "Lê a entrada padrão no formato de saída não-recursivo `ls-tree` e cria um objeto árvore.  A ordem das entradas da árvore é normalizada pelo 'mktree', portanto, a pré-classificação da entrada não é necessária.  O nome do objeto árvore construído é gravado na saída padrão."

#. type: Plain text
#: en/git-mktree.txt:25
#, priority:100
msgid "Read the NUL-terminated `ls-tree -z` output instead."
msgstr "Leia a saída `ls-tree -z` terminada com `NUL`."

#. type: Labeled list
#: en/git-mktree.txt:26
#, ignore-same, no-wrap, priority:100
msgid "--missing"
msgstr "--missing"

#. type: Plain text
#: en/git-mktree.txt:31
#, priority:100
msgid "Allow missing objects.  The default behaviour (without this option)  is to verify that each tree entry's sha1 identifies an existing object.  This option has no effect on the treatment of gitlink entries (aka \"submodules\") which are always allowed to be missing."
msgstr "Permite os objetos que estejam ausentes.  O comportamento predefinido (sem essa opção) é verificar se o sha1 de cada entrada na árvore consegue identificar um objeto existente.  Esta opção não tem efeito no tratamento de entradas do \"gitlink\" (também conhecidas como \"submódulos\") que sempre podem estar ausentes."

#. type: Plain text
#: en/git-mktree.txt:37
#, priority:100
msgid "Allow building of more than one tree object before exiting.  Each tree is separated by a single blank line. The final new-line is optional.  Note - if the `-z` option is used, lines are terminated with NUL."
msgstr "Permita a construção de mais de um objeto árvore antes de encerrar.  Cada árvore é separada por uma única linha em branco. A nova linha final é opcional.  Observação - caso a opção `-z` seja utilizada, as linhas serão terminadas com `NUL`."

#. type: Title =
#: en/git-mv.txt:2
#, ignore-same, no-wrap, priority:280
msgid "git-mv(1)"
msgstr "git-mv(1)"

#. type: Plain text
#: en/git-mv.txt:7
#, priority:280
msgid "git-mv - Move or rename a file, a directory, or a symlink"
msgstr "git-mv - Move ou renomeia um arquivo, um diretório ou um link simbólico"

#. type: Plain text
#: en/git-mv.txt:13
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git mv' <options>... <args>...\n"
msgstr "'git mv' <opções>... <args>...\n"

#. type: Plain text
#: en/git-mv.txt:17
#, priority:280
msgid "Move or rename a file, directory or symlink."
msgstr "Mova ou renomeie um arquivo, diretório ou link simbólico."

#. type: Plain text
#: en/git-mv.txt:20
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
" git mv [-v] [-f] [-n] [-k] <source> <destination>\n"
" git mv [-v] [-f] [-n] [-k] <source> ... <destination directory>\n"
msgstr ""
" git mv [-v] [-f] [-n] [-k] <origem> <destino>\n"
" git mv [-v] [-f] [-n] [-k] <origem> ... <diretório de destino>\n"

#. type: Plain text
#: en/git-mv.txt:25
#, priority:280
msgid "In the first form, it renames <source>, which must exist and be either a file, symlink or directory, to <destination>.  In the second form, the last argument has to be an existing directory; the given sources will be moved into this directory."
msgstr "No primeiro formulário, ele renomeia `<origem>`, que deve existir e ser um arquivo, link simbólico ou diretório, para <destino>.  Na segunda forma, o último argumento deve ser um diretório existente; as fontes informadas serão movidas para este diretório."

#. type: Plain text
#: en/git-mv.txt:28
#, priority:280
msgid "The index is updated after successful completion, but the change must still be committed."
msgstr "O índice é atualizado após a conclusão bem-sucedida, mas a alteração ainda deve ser confirmada."

#. type: Plain text
#: en/git-mv.txt:34
#, priority:280
msgid "Force renaming or moving of a file even if the target exists"
msgstr "Impor a renomeação ou a movimentação de um arquivo, mesmo que o destino exista"

#. type: Plain text
#: en/git-mv.txt:39
#, priority:280
msgid "Skip move or rename actions which would lead to an error condition. An error happens when a source is neither existing nor controlled by Git, or when it would overwrite an existing file unless `-f` is given."
msgstr "Ignorar um ato de mover ou renomear as ações que levariam a uma condição de erro. Um erro acontece quando uma fonte não existe nem é controlada pelo Git ou quando ela substituiria um arquivo existente a menos que `-f` seja utilizado."

#. type: Plain text
#: en/git-mv.txt:42
#, priority:280
msgid "Do nothing; only show what would happen"
msgstr "Não faça nada; apenas exiba o que aconteceria"

#. type: Plain text
#: en/git-mv.txt:46
#, priority:280
msgid "Report the names of files as they are moved."
msgstr "Relate os nomes dos arquivos conforme eles vão sendo movidos."

#. type: Plain text
#: en/git-mv.txt:54
#, priority:280
msgid "Moving a submodule using a gitfile (which means they were cloned with a Git version 1.7.8 or newer) will update the gitfile and core.worktree setting to make the submodule work in the new location.  It also will attempt to update the submodule.<name>.path setting in the linkgit:gitmodules[5] file and stage that file (unless -n is used)."
msgstr "Mover um submódulo utilizando um gitfile (o que significa que eles foram clonados com uma versão 1.7.8 ou mais recente do Git) atualizará a configuração `gitfile` e `core.worktree` para fazer com que o submódulo funcione no novo local.  Ele também tentará atualizar o `submodule.<nome>.path` no arquivo linkgit: gitmodules [5] e preparar este arquivo (a menos que a opção `-n` seja utilizada)."

#. type: Plain text
#: en/git-mv.txt:66
#, priority:280
msgid "Each time a superproject update moves a populated submodule (e.g. when switching between commits before and after the move) a stale submodule checkout will remain in the old location and an empty directory will appear in the new location. To populate the submodule again in the new location the user will have to run \"git submodule update\" afterwards. Removing the old directory is only safe when it uses a gitfile, as otherwise the history of the submodule will be deleted too. Both steps will be obsolete when recursive submodule update has been implemented."
msgstr "Sempre que uma atualização do `superproject` move um submódulo preenchido (por exemplo, ao alternar entre commits antes e depois da mudança), um `checkout` obsoleto do submódulo permanecerá no local antigo e um diretório vazio aparecerá no novo local. Para preencher o submódulo novamente no novo local, o usuário precisará depois, executar o comando `git submodule update`. A remoção do diretório antigo só é segura quando ele usa um `gitfile`; caso contrário, o histórico do submódulo também será excluído. Ambas as etapas ficarão obsoletas quando a atualização recursiva do submódulo for implementada."

#. type: Title =
#: en/git-name-rev.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-name-rev(1)"
msgstr "git-name-rev(1)"

#. type: Plain text
#: en/git-name-rev.txt:7
#, priority:100
msgid "git-name-rev - Find symbolic names for given revs"
msgstr "git-name-rev - Encontre os nomes simbólicos para determinadas \"revs\""

#. type: Plain text
#: en/git-name-rev.txt:14
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git name-rev' [--tags] [--refs=<pattern>]\n"
"\t       ( --all | --stdin | <commit-ish>... )\n"
msgstr ""
"'git name-rev' [--tags] [--refs=<padrão>]\n"
"\t       ( --all | --stdin | <commit-ish>... )\n"

#. type: Plain text
#: en/git-name-rev.txt:19
#, priority:100
msgid "Finds symbolic names suitable for human digestion for revisions given in any format parsable by 'git rev-parse'."
msgstr "Localiza os nomes simbólicos adequados para a revisão das pessoas através de qualquer formato analisável pelo comando 'git rev-parse'."

#. type: Plain text
#: en/git-name-rev.txt:26
#, priority:100
msgid "Do not use branch names, but only tags to name the commits"
msgstr "Não utilize os nomes dos ramos e sim apenas as tags para nomear os commits"

#. type: Labeled list
#: en/git-name-rev.txt:27
#, no-wrap, priority:100
msgid "--refs=<pattern>"
msgstr "--refs=<padrão>"

#. type: Plain text
#: en/git-name-rev.txt:32
#, priority:100
msgid "Only use refs whose names match a given shell pattern.  The pattern can be one of branch name, tag name or fully qualified ref name. If given multiple times, use refs whose names match any of the given shell patterns. Use `--no-refs` to clear any previous ref patterns given."
msgstr "Use apenas as refs cujos nomes coincidam com um determinado padrão shell.  O padrão pode ser um nome do ramo, nome da tag ou um nome de referência totalmente qualificado. Caso seja utilizado várias vezes, utilize as refs cujos nomes coincidam com qualquer um dos padrões shell informados. Utilize `--no-refs` para limpar quaisquer padrões \"ref\" anteriores."

#. type: Plain text
#: en/git-name-rev.txt:41
#, priority:100
msgid "Do not use any ref whose name matches a given shell pattern. The pattern can be one of branch name, tag name or fully qualified ref name. If given multiple times, a ref will be excluded when it matches any of the given patterns. When used together with --refs, a ref will be used as a match only when it matches at least one --refs pattern and does not match any --exclude patterns. Use `--no-exclude` to clear the list of exclude patterns."
msgstr "Não utilize nenhuma \"ref\" cujo nome coincida com um determinado padrão shell. O padrão pode ser um nome do ramo, nome da tag ou um nome de referência totalmente qualificado. Caso seja utilizado várias vezes, uma \"ref\" será excluída quando coincidir com qualquer um dos padrões informados. Quando utilizado junto com `--refs`, uma \"ref\" será utilizada como uma correspondência apenas quando coincidir com pelo menos um padrão `--refs` e não coincidir com nenhum padrão `--exclude`. Utilize `--no-exclude` para limpar a lista dos padrões de exclusão."

#. type: Plain text
#: en/git-name-rev.txt:44
#, priority:100
msgid "List all commits reachable from all refs"
msgstr "Liste todos os commits acessíveis de todas as \"ref\""

#. type: Labeled list
#: en/git-name-rev.txt:45
#, ignore-same, no-wrap, priority:100
msgid "--annotate-stdin"
msgstr "--annotate-stdin"

#. type: Plain text
#: en/git-name-rev.txt:50
#, priority:100
msgid "Transform stdin by substituting all the 40-character SHA-1 hexes (say $hex) with \"$hex ($rev_name)\".  When used with --name-only, substitute with \"$rev_name\", omitting $hex altogether."
msgstr "Transforme o `stdin` substituindo todos os 40 caracteres hexadecimais SHA-1 (digamos `$hex`) por \"$hex ($rev_name)\".  Quando usado apenas com `--name-only`, substitua por \"$rev_name\", omitindo o $hex completamente."

#. type: delimited block -
#: en/git-name-rev.txt:55
#, no-wrap, priority:100
msgid "$ cat sample.txt\n"
msgstr "$ cat sample.txt\n"

#. type: delimited block -
#: en/git-name-rev.txt:59
#, no-wrap, priority:100
msgid ""
"An abbreviated revision 2ae0a9cb82 will not be substituted.\n"
"The full name after substitution is 2ae0a9cb8298185a94e5998086f380a355dd8907,\n"
"while its tree object is 70d105cc79e63b81cfdcb08a15297c23e60b07ad\n"
msgstr ""
"Uma revisão abreviada 2ae0a9cb82 não será substituída.\n"
"O nome completo após a substituição é 2ae0a9cb8298185a94e5998086f380a355dd8907,\n"
"enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad\n"

#. type: delimited block -
#: en/git-name-rev.txt:61
#, no-wrap, priority:100
msgid "$ git name-rev --annotate-stdin <sample.txt\n"
msgstr "$ git name-rev --annotate-stdin <sample.txt\n"

#. type: delimited block -
#: en/git-name-rev.txt:65
#, no-wrap, priority:100
msgid ""
"An abbreviated revision 2ae0a9cb82 will not be substituted.\n"
"The full name after substitution is 2ae0a9cb8298185a94e5998086f380a355dd8907 (master),\n"
"while its tree object is 70d105cc79e63b81cfdcb08a15297c23e60b07ad\n"
msgstr ""
"Uma revisão abreviada 2ae0a9cb82 não será substituída.\n"
"O nome completo após a substituição é 2ae0a9cb8298185a94e5998086f380a355dd8907 (master),\n"
"enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad\n"

#. type: delimited block -
#: en/git-name-rev.txt:67
#, no-wrap, priority:100
msgid "$ git name-rev --name-only --annotate-stdin <sample.txt\n"
msgstr "$ git name-rev --name-only --annotate-stdin <sample.txt\n"

#. type: delimited block -
#: en/git-name-rev.txt:71
#, no-wrap, priority:100
msgid ""
"An abbreviated revision 2ae0a9cb82 will not be substituted.\n"
"The full name after substitution is master,\n"
"while its tree object is 70d105cc79e63b81cfdcb08a15297c23e60b07ad\n"
msgstr ""
"Uma revisão abreviada do 2ae0a9cb82 não será substituída.\n"
"O nome completo após a substituição é master,\n"
"enquanto o objeto da árvore é 70d105cc79e63b81cfdcb08a15297c23e60b07ad\n"

#. type: Plain text
#: en/git-name-rev.txt:76
#, priority:100
msgid "This option is deprecated in favor of 'git name-rev --annotate-stdin'.  They are functionally equivalent."
msgstr "Esta opção é depreciada em favor de `git name-rev --annotate-stdin`.  Eles são funcionalmente equivalentes."

#. type: Plain text
#: en/git-name-rev.txt:82
#, priority:100
msgid "Instead of printing both the SHA-1 and the name, print only the name.  If given with --tags the usual tag prefix of \"tags/\" is also omitted from the name, matching the output of `git-describe` more closely."
msgstr "Em vez de imprimir o SHA-1 e o nome, imprima apenas o nome.  Caso seja utilizado com `--tags`, o prefixo usual de \"tags/\" também é omitido do nome, coincidindo mais com a saída do `git-description`."

#. type: Labeled list
#: en/git-name-rev.txt:83
#, ignore-same, no-wrap, priority:100
msgid "--no-undefined"
msgstr "--no-undefined"

#. type: Plain text
#: en/git-name-rev.txt:86
#, priority:100
msgid "Die with error code != 0 when a reference is undefined, instead of printing `undefined`."
msgstr "Encerramento com um código de erro != 0 quando uma referência for indefinida, em vez de exibir `undefined`."

#. type: Plain text
#: en/git-name-rev.txt:97
#, priority:100
msgid "Given a commit, find out where it is relative to the local refs. Say somebody wrote you about that fantastic commit 33db5f4d9027a10e477ccf054b2c1ab94f74c85a.  Of course, you look into the commit, but that only tells you what happened, but not the context."
msgstr "Informado um commit, descubra onde ele é relativo às refs locais. Digamos que alguém tenha escrito sobre esse fantástico commit 33db5f4d9027a10e477ccf054b2c1ab94f74c85a.  Obviamente, você analisa o commit, porém isso apenas informa o que aconteceu e não o contexto."

#. type: Plain text
#: en/git-name-rev.txt:99
#, priority:100
msgid "Enter 'git name-rev':"
msgstr "Entra o 'git name-rev':"

#. type: delimited block -
#: en/git-name-rev.txt:103
#, no-wrap, priority:100
msgid ""
"% git name-rev 33db5f4d9027a10e477ccf054b2c1ab94f74c85a\n"
"33db5f4d9027a10e477ccf054b2c1ab94f74c85a tags/v0.99~940\n"
msgstr ""
"% git name-rev 33db5f4d9027a10e477ccf054b2c1ab94f74c85a\n"
"33db5f4d9027a10e477ccf054b2c1ab94f74c85a tags/v0.99~940\n"

#. type: Plain text
#: en/git-name-rev.txt:106
#, priority:100
msgid "Now you are wiser, because you know that it happened 940 revisions before v0.99."
msgstr "Agora você está mais esperto, pois sabe que ocorreram 940 revisões antes da versão v0.99."

#. type: Plain text
#: en/git-name-rev.txt:108
#, priority:100
msgid "Another nice thing you can do is:"
msgstr "Outra coisa legal que você pode fazer é:"

#. type: delimited block -
#: en/git-name-rev.txt:111
#, no-wrap, priority:100
msgid "% git log | git name-rev --stdin\n"
msgstr "% git log | git name-rev --stdin\n"

#. type: Title =
#: en/git-notes.txt:2
#, ignore-same, no-wrap, priority:280
msgid "git-notes(1)"
msgstr "git-notes(1)"

#. type: Plain text
#: en/git-notes.txt:7
#, priority:280
msgid "git-notes - Add or inspect object notes"
msgstr "git-notes - Adiciona ou inspeciona as anotações dos objeto"

#. type: Plain text
#: en/git-notes.txt:23
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"'git notes' [list [<object>]]\n"
"'git notes' add [-f] [--allow-empty] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]\n"
"'git notes' copy [-f] ( --stdin | <from-object> [<to-object>] )\n"
"'git notes' append [--allow-empty] [-F <file> | -m <msg> | (-c | -C) <object>] [<object>]\n"
"'git notes' edit [--allow-empty] [<object>]\n"
"'git notes' show [<object>]\n"
"'git notes' merge [-v | -q] [-s <strategy> ] <notes-ref>\n"
"'git notes' merge --commit [-v | -q]\n"
"'git notes' merge --abort [-v | -q]\n"
"'git notes' remove [--ignore-missing] [--stdin] [<object>...]\n"
"'git notes' prune [-n] [-v]\n"
"'git notes' get-ref\n"
msgstr ""
"'git notes' [list [<objeto>]]\n"
"'git notes' add [-f] [--allow-empty] [-F <arquivo> | -m <msg> | (-c | -C) <objeto>] [<objeto>]\n"
"'git notes' copy [-f] ( --stdin | <a-partir-do-objeto> [<para-o-objeto>] )\n"
"'git notes' append [--allow-empty] [-F <arquivo> | -m <msg> | (-c | -C) <objeto>] [<objeto>]\n"
"'git notes' edit [--allow-empty] [<objeto>]\n"
"'git notes' show [<objeto>]\n"
"'git notes' merge [-v | -q] [-s <estratégia> ] <notes-ref>\n"
"'git notes' merge --commit [-v | -q]\n"
"'git notes' merge --abort [-v | -q]\n"
"'git notes' remove [--ignore-missing] [--stdin] [<objeto>...]\n"
"'git notes' prune [-n] [-v]\n"
"'git notes' get-ref\n"

#. type: Plain text
#: en/git-notes.txt:29
#, priority:280
msgid "Adds, removes, or reads notes attached to objects, without touching the objects themselves."
msgstr "Adiciona, remove ou lê as anotações anexadas aos objetos, sem tocar nos próprios objetos."

#. type: Plain text
#: en/git-notes.txt:34
#, priority:280
msgid "By default, notes are saved to and read from `refs/notes/commits`, but this default can be overridden.  See the OPTIONS, CONFIGURATION, and ENVIRONMENT sections below.  If this ref does not exist, it will be quietly created when it is first needed to store a note."
msgstr "É predefinido que as anotações sejam salvas e lidas do `refs/notes/commits`, mas esta predefinição pode ser substituída.  Consulte as seções OPÇÕES, CONFIGURAÇÃO e AMBIENTE abaixo.  Caso esta referência não exista, ela será criada de forma silenciosa quando for necessário armazenar uma nota pela primeira vez."

#. type: Plain text
#: en/git-notes.txt:41
#, priority:280
msgid "A typical use of notes is to supplement a commit message without changing the commit itself. Notes can be shown by 'git log' along with the original commit message. To distinguish these notes from the message stored in the commit object, the notes are indented like the message, after an unindented line saying \"Notes (<refname>):\" (or \"Notes:\" for `refs/notes/commits`)."
msgstr "Uma utilização típica das anotações é complementar uma mensagem de um commit sem alterar o próprio commit. As anotações podem ser exibidas com o comando 'git log' junto com a mensagem do commit original. Para distinguir entre estas anotações da mensagem armazenada no commit do objeto, as anotações são recuadas como a mensagem, após uma linha não recolocada dizendo \"Notes (<refname>):\" (ou \"Notes:\" para `refs/notes/commits`) ."

#. type: Plain text
#: en/git-notes.txt:45
#, priority:280
msgid "Notes can also be added to patches prepared with `git format-patch` by using the `--notes` option. Such notes are added as a patch commentary after a three dash separator line."
msgstr "As anotações também podem ser adicionadas aos patches preparados com o comando `git format-patch` utilizando a opção `--notes`. Tais anotações são adicionadas como um comentário de um patch após uma linha separadora com três traços."

#. type: Plain text
#: en/git-notes.txt:48
#, fuzzy, priority:280
#| msgid "To change which notes are shown by 'git log', see the \"notes.displayRef\" configuration in linkgit:git-log[1]."
msgid "To change which notes are shown by 'git log', see the \"notes.displayRef\" discussion in <<CONFIGURATION>>."
msgstr "Para alterar quais as anotações são exibidas através do comando 'git log', consulte a configuração \"notes.displayRef\" no linkgit:git-log[1]."

#. type: Plain text
#: en/git-notes.txt:51
#, priority:280
msgid "See the \"notes.rewrite.<command>\" configuration for a way to carry notes across commands that rewrite commits."
msgstr "Consulte a configuração \"notes.rewrite.<comando>\" para conhecer uma maneira de transportar as anotações através dos comandos que reescrevem os commits."

#. type: Title -
#: en/git-notes.txt:54
#, no-wrap, priority:280
msgid "SUBCOMMANDS"
msgstr "SUBCOMANDOS"

#. type: Labeled list
#: en/git-notes.txt:56 en/git-worktree.txt:98
#, ignore-same, no-wrap, priority:280
msgid "list"
msgstr "list"

#. type: Plain text
#: en/git-notes.txt:61
#, priority:280
msgid "List the notes object for a given object. If no object is given, show a list of all note objects and the objects they annotate (in the format \"<note object> <annotated object>\").  This is the default subcommand if no subcommand is given."
msgstr "Liste as anotações do objeto para um determinado objeto. Caso nenhum objeto seja informado, exiba uma lista com todas as anotações dos objetos e os objetos que eles anotam (no formato \"<nota do objeto> <objeto anotado>\").  Este é o subcomando predefinido caso nenhum subcomando seja utilizado."

#. type: Labeled list
#: en/git-notes.txt:62
#, ignore-same, no-wrap, priority:280
msgid "add"
msgstr "add"

#. type: Plain text
#: en/git-notes.txt:69
#, priority:280
msgid "Add notes for a given object (defaults to HEAD). Abort if the object already has notes (use `-f` to overwrite existing notes).  However, if you're using `add` interactively (using an editor to supply the notes contents), then - instead of aborting - the existing notes will be opened in the editor (like the `edit` subcommand)."
msgstr "Adiciona anotações para um determinado objeto (a predefinição retorna para `HEAD`). Interrompa caso o objeto já tiver anotações (utilize `-f` para substituir as anotações já existentes).  No entanto, caso você esteja utilizando `add` de forma interativa (utilizando um editor para editar o conteúdo das notas), então - em vez de interromper - as anotações já existentes serão abertas no editor (como o subcomando `edit`)."

#. type: Labeled list
#: en/git-notes.txt:70
#, ignore-same, no-wrap, priority:280
msgid "copy"
msgstr "copy"

#. type: Plain text
#: en/git-notes.txt:76
#, priority:280
msgid "Copy the notes for the first object onto the second object (defaults to HEAD). Abort if the second object already has notes, or if the first object has none (use -f to overwrite existing notes to the second object). This subcommand is equivalent to: `git notes add [-f] -C $(git notes list <from-object>) <to-object>`"
msgstr "Copie as anotações para o primeiro objeto no segundo (a predefinição retorna para `HEAD`). Interrompa caso o segundo objeto já tenha as anotações ou caso o primeiro objeto não tiver nenhuma (utilize '-f' para substituir as anotações existentes no segundo objeto). Este subcomando se equivale a: `git notes add [-f] -C $(git notes list <do-objeto>) <para-o-objeto>`"

#. type: Plain text
#: en/git-notes.txt:78
#, priority:280
msgid "In `--stdin` mode, take lines in the format"
msgstr "No modo `--stdin`, pegue as linhas no formato"

#. type: delimited block -
#: en/git-notes.txt:81
#, no-wrap, priority:280
msgid "<from-object> SP <to-object> [ SP <rest> ] LF\n"
msgstr "<do-objeto> SP <para-o-objeto> [ SP <rest> ] LF\n"

#. type: Plain text
#: en/git-notes.txt:86
#, priority:280
msgid "on standard input, and copy the notes from each <from-object> to its corresponding <to-object>.  (The optional `<rest>` is ignored so that the command can read the input given to the `post-rewrite` hook.)"
msgstr "na entrada padrão e copie as anotações de cada <do-objeto> para o seu <para-o-objeto> correspondente.  (O `<rest>` opcional é ignorado para que o comando possa ler a entrada informada ao gancho `post-rewrite`.)"

#. type: Labeled list
#: en/git-notes.txt:87
#, ignore-same, no-wrap, priority:280
msgid "append"
msgstr "append"

#. type: Plain text
#: en/git-notes.txt:90
#, priority:280
msgid "Append to the notes of an existing object (defaults to HEAD).  Creates a new notes object if needed."
msgstr "Anexe às anotações de um objeto já existente (a predefinição retorna para `HEAD`).  Cria uma nova anotação no objeto, caso seja necessário."

#. type: Labeled list
#: en/git-notes.txt:91
#, ignore-same, no-wrap, priority:280
msgid "edit"
msgstr "edit"

#. type: Plain text
#: en/git-notes.txt:93
#, priority:280
msgid "Edit the notes for a given object (defaults to HEAD)."
msgstr "Edite as anotações para um determinado objeto (a predefinição retorna para `HEAD`)."

#. type: Labeled list
#: en/git-notes.txt:94
#, ignore-same, no-wrap, priority:280
msgid "show"
msgstr "show"

#. type: Plain text
#: en/git-notes.txt:96
#, priority:280
msgid "Show the notes for a given object (defaults to HEAD)."
msgstr "Mostrar as anotações para um determinado objeto (a predefinição retorna para `HEAD`)."

#. type: Labeled list
#: en/git-notes.txt:97 en/git-submodule.txt:160
#, ignore-same, no-wrap, priority:280
msgid "merge"
msgstr "merge"

#. type: Plain text
#: en/git-notes.txt:102
#, priority:280
msgid "Merge the given notes ref into the current notes ref.  This will try to merge the changes made by the given notes ref (called \"remote\") since the merge-base (if any) into the current notes ref (called \"local\")."
msgstr "Mescle as anotações \"ref\" informadas nas anotações \"ref\" atuais.  Será feita uma tentativa para mesclar as alterações feitas através das anotações \"ref\" informada (chamadas \"remotas\") desde a base de mesclagem (caso haja) nas anotações \"ref\" atuais (chamadas \"locais\")."

#. type: Plain text
#: en/git-notes.txt:111
#, priority:280
msgid "If conflicts arise and a strategy for automatically resolving conflicting notes (see the \"NOTES MERGE STRATEGIES\" section) is not given, the \"manual\" resolver is used. This resolver checks out the conflicting notes in a special worktree (`.git/NOTES_MERGE_WORKTREE`), and instructs the user to manually resolve the conflicts there.  When done, the user can either finalize the merge with 'git notes merge --commit', or abort the merge with 'git notes merge --abort'."
msgstr "Caso surjam conflitos e uma estratégia para resolver automaticamente as notas conflitantes (consulte a seção \"OBSERVAÇÕES SOBRE AS ESTRATÉGIAS DA MESCLAGEM\") não sejam utilizadas, o resolvedor \"manual\" será utilizado. Este resolvedor verifica se as notas conflitantes numa árvore de trabalho especial (`.git/NOTES_MERGE_WORKTREE`) instrui o usuário a resolver manualmente os conflitos lá.  Quando for concluído, o usuário pode finalizar a mesclagem com o comando 'git notes merge --commit' ou interromper a mesclagem com o comando 'git notes merge --abort'."

#. type: Labeled list
#: en/git-notes.txt:112 en/git-worktree.txt:125
#, ignore-same, no-wrap, priority:280
msgid "remove"
msgstr "remove"

#. type: Plain text
#: en/git-notes.txt:117
#, priority:280
msgid "Remove the notes for given objects (defaults to HEAD). When giving zero or one object from the command line, this is equivalent to specifying an empty note message to the `edit` subcommand."
msgstr "Remova as anotações para determinados objetos (a predefinição retorna para `HEAD`). Ao atribuir zero ou um objeto a partir da linha de comando, isso equivale a informar uma mensagem com anotação vazia para o subcomando `edit`."

#. type: Labeled list
#: en/git-notes.txt:118 en/git-worktree.txt:121
#, ignore-same, no-wrap, priority:280
msgid "prune"
msgstr "prune"

#. type: Plain text
#: en/git-notes.txt:120
#, priority:280
msgid "Remove all notes for non-existing/unreachable objects."
msgstr "Remova todas as anotações dos objetos inexistentes/inacessíveis."

#. type: Labeled list
#: en/git-notes.txt:121
#, ignore-same, no-wrap, priority:280
msgid "get-ref"
msgstr "get-ref"

#. type: Plain text
#: en/git-notes.txt:124
#, priority:280
msgid "Print the current notes ref. This provides an easy way to retrieve the current notes ref (e.g. from scripts)."
msgstr "Exiba as anotações \"ref\" atuais. Fornece uma maneira fácil de recuperar as anotações \"ref\" atuais (dos scripts por exemplo)."

#. type: Plain text
#: en/git-notes.txt:131
#, priority:280
msgid "When adding notes to an object that already has notes, overwrite the existing notes (instead of aborting)."
msgstr "Ao adicionar as anotações num objeto que já possa anotações, substitua as anotações existentes (em vez de abortar)."

#. type: Plain text
#: en/git-notes.txt:139
#, priority:280
msgid "Use the given note message (instead of prompting).  If multiple `-m` options are given, their values are concatenated as separate paragraphs.  Lines starting with `#` and empty lines other than a single line between paragraphs will be stripped out."
msgstr "Utilize uma mensagem da anotação informada (em vez de solicitar).  Caso várias opções `-m` seja informadas, os seus valores serão concatenados como parágrafos separados.  Serão removidas as linhas começando com `#` e as linhas vazias que não estejam numa única linha entre os parágrafos."

#. type: Plain text
#: en/git-notes.txt:146
#, priority:280
msgid "Take the note message from the given file.  Use '-' to read the note message from the standard input.  Lines starting with `#` and empty lines other than a single line between paragraphs will be stripped out."
msgstr "Pegue a mensagem da anotação do arquivo informado.  Utilize '-' para ler a mensagem da nota vindo da entrada padrão.  Serão removidas as linhas começando com `#` e as linhas vazias que não estejam numa única linha entre os parágrafos."

#. type: Labeled list
#: en/git-notes.txt:147
#, no-wrap, priority:280
msgid "-C <object>"
msgstr "-C <objeto>"

#. type: Labeled list
#: en/git-notes.txt:148
#, no-wrap, priority:280
msgid "--reuse-message=<object>"
msgstr "--reuse-message=<objeto>"

#. type: Plain text
#: en/git-notes.txt:152
#, priority:280
msgid "Take the given blob object (for example, another note) as the note message. (Use `git notes copy <object>` instead to copy notes between objects.)"
msgstr "Tome o objeto bolha informada (outra nota por exemplo) como uma mensagem da nota. (Utiliza `git notes copy <objeto>` em vez da copia das notas entre os objetos.)"

#. type: Labeled list
#: en/git-notes.txt:153
#, no-wrap, priority:280
msgid "-c <object>"
msgstr "-c <objeto>"

#. type: Labeled list
#: en/git-notes.txt:154
#, no-wrap, priority:280
msgid "--reedit-message=<object>"
msgstr "--reedit-message=<objeto>"

#. type: Plain text
#: en/git-notes.txt:157
#, priority:280
msgid "Like '-C', but with `-c` the editor is invoked, so that the user can further edit the note message."
msgstr "Assim como '-C', porém com `-c` o editor é invocado para que o usuário possa editar mais a mensagem da nota."

#. type: Plain text
#: en/git-notes.txt:161
#, priority:280
msgid "Allow an empty note object to be stored. The default behavior is to automatically remove empty notes."
msgstr "Permita que uma anotação vazia do objeto seja armazenado. O comportamento predefinido é remover automaticamente as anotações que estiverem vazias."

#. type: Labeled list
#: en/git-notes.txt:162
#, no-wrap, priority:280
msgid "--ref <ref>"
msgstr "--ref <ref>"

#. type: Plain text
#: en/git-notes.txt:168
#, priority:280
msgid "Manipulate the notes tree in <ref>.  This overrides `GIT_NOTES_REF` and the \"core.notesRef\" configuration.  The ref specifies the full refname when it begins with `refs/notes/`; when it begins with `notes/`, `refs/` and otherwise `refs/notes/` is prefixed to form a full name of the ref."
msgstr "Manipule as anotações da árvore na <ref>.  Sobrescreve o `GIT_NOTES_REF` e a configuração \"core.notesRef\".  A \"ref\" determina o nome completo quando começa com `refs/notes/`; quando começa com `notes/`, `refs/` e caso contrário `refs/notes/` é prefixado para formar um nome completo da \"ref\"."

#. type: Plain text
#: en/git-notes.txt:172
#, priority:280
msgid "Do not consider it an error to request removing notes from an object that does not have notes attached to it."
msgstr "Não considere um erro ao solicitar a remoção das anotações de um objeto que não possua anotações anexadas."

#. type: Plain text
#: en/git-notes.txt:177
#, priority:280
msgid "Also read the object names to remove notes from the standard input (there is no reason you cannot combine this with object names from the command line)."
msgstr "Leia também os nomes dos objetos para remover anotações da entrada padrão (não há motivo para não combinar isso com os nomes dos objetos na linha de comando)."

#. type: Plain text
#: en/git-notes.txt:182
#, priority:280
msgid "Do not remove anything; just report the object names whose notes would be removed."
msgstr "Não remova nada; apenas relate os nomes dos objetos cujas anotações seriam removidas."

#. type: Labeled list
#: en/git-notes.txt:183 en/git-rebase.txt:358 en/merge-options.txt:143
#, no-wrap, priority:280
msgid "-s <strategy>"
msgstr "-s <estratégia>"

#. type: Plain text
#: en/git-notes.txt:191
#, priority:280
msgid "When merging notes, resolve notes conflicts using the given strategy. The following strategies are recognized: \"manual\" (default), \"ours\", \"theirs\", \"union\" and \"cat_sort_uniq\".  This option overrides the \"notes.mergeStrategy\" configuration setting.  See the \"NOTES MERGE STRATEGIES\" section below for more information on each notes merge strategy."
msgstr "Ao mesclar as anotações, resolva os conflitos das anotações utilizando uma determinada estratégia. As seguintes estratégias são reconhecidas: \"manual\" (predefinido), \"ours\" (nosso), \"theirs\" (deles), \"union\" (união) e \"cat_sort_uniq\".  Esta opção substitui a configuração \"notes.mergeStrategy\".  Consulte a seção \"OBSERVAÇÕES SOBRE AS ESTRATÉGIAS DA MESCLAGEM\" abaixo para obter mais informações sobre a estratégia de mesclagem de cada nota."

#. type: Labeled list
#: en/git-notes.txt:192 en/merge-options.txt:1
#, ignore-same, no-wrap, priority:280
msgid "--commit"
msgstr "--commit"

#. type: Plain text
#: en/git-notes.txt:200
#, priority:280
msgid "Finalize an in-progress 'git notes merge'. Use this option when you have resolved the conflicts that 'git notes merge' stored in .git/NOTES_MERGE_WORKTREE. This amends the partial merge commit created by 'git notes merge' (stored in .git/NOTES_MERGE_PARTIAL) by adding the notes in .git/NOTES_MERGE_WORKTREE. The notes ref stored in the .git/NOTES_MERGE_REF symref is updated to the resulting commit."
msgstr "Finalize um 'git notes merge' em andamento. Utilize esta opção quando tiver resolvido os conflitos que o comando 'git notes merge' armazenou em `.git/NOTES_MERGE_WORKTREE`. Isso altera o commit parcial da mesclagem criado pelo comando 'git notes merge' (armazenado em `.git/NOTES_MERGE_PARTIAL`) adicionando as anotações em `.git/NOTES_MERGE_WORKTREE`. As notas \"ref\" armazenadas no 'symref' `.git/NOTES_MERGE_REF` são atualizadas no commit resultante."

#. type: Plain text
#: en/git-notes.txt:205
#, priority:280
msgid "Abort/reset an in-progress 'git notes merge', i.e. a notes merge with conflicts. This simply removes all files related to the notes merge."
msgstr "Interrompa/redefina um comando 'git notes merge' em andamento, ou seja, mesmo com conflitos, uma anotação será mesclada. Simplesmente remove todos os arquivos relacionados as anotações da mesclagem."

#. type: Plain text
#: en/git-notes.txt:209
#, priority:280
msgid "When merging notes, operate quietly."
msgstr "Quando mesclar as anotações, opere em silêncio."

#. type: Plain text
#: en/git-notes.txt:215
#, priority:280
msgid "When merging notes, be more verbose.  When pruning notes, report all object names whose notes are removed."
msgstr "Quando mesclar as anotações, seja loquaz.  Quando remover as anotações, relate todos os nomes dos objetos cujas notas foram removidas."

#. type: Plain text
#: en/git-notes.txt:229
#, ignore-ellipsis, priority:280
msgid "Commit notes are blobs containing extra information about an object (usually information to supplement a commit's message).  These blobs are taken from notes refs.  A notes ref is usually a branch which contains \"files\" whose paths are the object names for the objects they describe, with some directory separators included for performance reasons footnote:[Permitted pathnames have the form 'bf'`/`'fe'`/`'30'`/`'...'`/`'680d5a...': a sequence of directory names of two hexadecimal digits each followed by a filename with the rest of the object ID.]."
msgstr "As anotações dos commits são bolhas que contêm informações extras sobre um objeto (geralmente informações para complementar a mensagem de um commit).  Estas bolhas são retiradas das anotações refs.  Uma anotação \"ref\" geralmente é um ramo que contém \"arquivos\" cujos caminhos são os nomes dos objetos que o descrevem, com alguns separadores do diretório incluídos por motivos de desempenho, nota de rodapé: [Os nomes dos caminhos permitidos têm o formato `'bf'`/`'fe'`/`'30'`/`'...'`/`'680d5a...'`: uma sequência com os nomes dos diretórios com dois dígitos hexadecimais cada um, seguido por um nome do arquivo com o resto do ID do objeto.]."

#. type: Plain text
#: en/git-notes.txt:236
#, priority:280
msgid "Every notes change creates a new commit at the specified notes ref.  You can therefore inspect the history of the notes by invoking, e.g., `git log -p notes/commits`.  Currently the commit message only records which operation triggered the update, and the commit authorship is determined according to the usual rules (see linkgit:git-commit[1]).  These details may change in the future."
msgstr "Cada modificação nas anotações cria um novo commit nas anotações \"ref\" usadas.  Portanto, você pode inspecionar o histórico das notas invocando por exemplo o comando `git log -p notes/commits`.  Atualmente, a mensagem do commit registra apenas qual a operação acionou a atualização, já a autoria da confirmação é determinada de acordo com as regras usuais (consulte linkgit:git-commit[1]).  Estes detalhes podem mudar no futuro."

#. type: Plain text
#: en/git-notes.txt:240
#, priority:280
msgid "It is also permitted for a notes ref to point directly to a tree object, in which case the history of the notes can be read with `git log -p -g <refname>`."
msgstr "Também é permitido que uma anotação da \"ref\" aponte diretamente para um objeto na árvore, caso onde o histórico das anotações podem ser lidos com `git log -p -g <refname>`."

#. type: Title -
#: en/git-notes.txt:243
#, no-wrap, priority:280
msgid "NOTES MERGE STRATEGIES"
msgstr "OBSERVAÇÕES SOBRE AS ESTRATÉGIAS DA MESCLAGEM"

#. type: Plain text
#: en/git-notes.txt:252
#, priority:280
msgid "The default notes merge strategy is \"manual\", which checks out conflicting notes in a special work tree for resolving notes conflicts (`.git/NOTES_MERGE_WORKTREE`), and instructs the user to resolve the conflicts in that work tree.  When done, the user can either finalize the merge with 'git notes merge --commit', or abort the merge with 'git notes merge --abort'."
msgstr "The default notes merge strategy is \"manual\", which checks out conflicting notes in a special work tree for resolving notes conflicts (`.git/NOTES_MERGE_WORKTREE`), and instructs the user to resolve the conflicts in that work tree.  Quando for concluído, o usuário pode finalizar a mesclagem com o comando 'git notes merge --commit' ou interromper a mesclagem com o comando 'git notes merge --abort'."

#. type: Plain text
#: en/git-notes.txt:255
#, priority:280
msgid "Users may select an automated merge strategy from among the following using either -s/--strategy option or configuring notes.mergeStrategy accordingly:"
msgstr "Os usuários podem selecionar uma estratégia de mesclagem automatizada dentre as opções a seguir, utilizando a opção `-s/--strategy` ou configurando a opção `notes.mergeStrategy` de acordo:"

#. type: Plain text
#: en/git-notes.txt:258
#, priority:280
msgid "\"ours\" automatically resolves conflicting notes in favor of the local version (i.e. the current notes ref)."
msgstr "O \"ours\" (nosso) resolve automaticamente as anotações conflitantes em favor da versão local (ou seja, as anotações \"ref\" atuais)."

#. type: Plain text
#: en/git-notes.txt:262
#, priority:280
msgid "\"theirs\" automatically resolves notes conflicts in favor of the remote version (i.e. the given notes ref being merged into the current notes ref)."
msgstr "O \"deles\" resolve automaticamente os conflitos das anotações em favor da versão remota (ou seja, as anotações dadas ao \"ref\" são mescladas nas anotações atuais da \"ref\")."

#. type: Plain text
#: en/git-notes.txt:265
#, priority:280
msgid "\"union\" automatically resolves notes conflicts by concatenating the local and remote versions."
msgstr "O \"union\" resolve automaticamente os conflitos das anotações concatenando as versões locais e remotas."

#. type: Plain text
#: en/git-notes.txt:275
#, priority:280
msgid "\"cat_sort_uniq\" is similar to \"union\", but in addition to concatenating the local and remote versions, this strategy also sorts the resulting lines, and removes duplicate lines from the result. This is equivalent to applying the \"cat | sort | uniq\" shell pipeline to the local and remote versions. This strategy is useful if the notes follow a line-based format where one wants to avoid duplicated lines in the merge result.  Note that if either the local or remote version contain duplicate lines prior to the merge, these will also be removed by this notes merge strategy."
msgstr "O \"cat_sort_uniq\" é semelhante ao \"union\", porém, além de concatenar as versões locais e remotas, essa estratégia também classifica as linhas resultantes e remove as linhas que estiverem no resultado. Isso é equivalente ao aplicação do pipeline shell \"cat | sort | uniq\" nas versões locais e remotos. Essa estratégia é útil caso as notas sigam um formato com base nas linhas, onde se deseja evitar as linhas duplicadas no resultado da mesclagem.  Observe que, caso a versão local ou remota tiver linhas duplicadas antes da mesclagem, elas também serão removidas por esta anotação estratégica de mesclagem."

#. type: Plain text
#: en/git-notes.txt:282
#, priority:280
msgid "You can use notes to add annotations with information that was not available at the time a commit was written."
msgstr "Você pode utilizar notas para adicionar anotações com as informação do que não estava disponível no momento em que o commit foi feito."

#. type: delimited block -
#: en/git-notes.txt:288
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"$ git notes add -m 'Tested-by: Johannes Sixt <j6t@kdbg.org>' 72a144e2\n"
"$ git show -s 72a144e\n"
"[...]\n"
"    Signed-off-by: Junio C Hamano <gitster@pobox.com>\n"
msgstr ""
"$ git notes add -m 'Testado-por: Johannes Sixt <j6t@kdbg.org>' 72a144e2\n"
"$ git show -s 72a144e\n"
"[...]\n"
"    Assinado-por: Junio C Hamano <gitster@pobox.com>\n"

#. type: delimited block -
#: en/git-notes.txt:291
#, no-wrap, priority:280
msgid ""
"Notes:\n"
"    Tested-by: Johannes Sixt <j6t@kdbg.org>\n"
msgstr ""
"Anotações:\n"
"    Testado-por: Johannes Sixt <j6t@kdbg.org>\n"

#. type: Plain text
#: en/git-notes.txt:296
#, priority:280
msgid "In principle, a note is a regular Git blob, and any kind of (non-)format is accepted.  You can binary-safely create notes from arbitrary files using 'git hash-object':"
msgstr "Em princípio, uma anotação é uma bolha Git comum e qualquer outro tipo de formato (não) é aceito.  Você pode criar com segurança as anotações binárias a partir de arquivos arbitrários utilizando o comando 'git hash-object':"

#. type: delimited block -
#: en/git-notes.txt:301
#, no-wrap, priority:280
msgid ""
"$ cc *.c\n"
"$ blob=$(git hash-object -w a.out)\n"
"$ git notes --ref=built add --allow-empty -C \"$blob\" HEAD\n"
msgstr ""
"$ cc *.c\n"
"$ blob=$(git hash-object -w a.out)\n"
"$ git notes --ref=built add --allow-empty -C \"$blob\" HEAD\n"

#. type: Plain text
#: en/git-notes.txt:308
#, priority:280
msgid "(You cannot simply use `git notes --ref=built add -F a.out HEAD` because that is not binary-safe.)  Of course, it doesn't make much sense to display non-text-format notes with 'git log', so if you use such notes, you'll probably need to write some special-purpose tools to do something useful with them."
msgstr "(Você não pode simplesmente utilizar o comando `git notes --ref=built add -F a.out HEAD` porque isso não é seguro para os arquivos binários.) É claro que não faz muito sentido exibir as anotações que não foram formatadas com 'git log', portanto, caso utilize estas anotações, provavelmente precisará escrever algumas ferramentas com um propósito especial para fazer algo útil com elas."

#. type: Labeled list
#: en/git-notes.txt:314
#, ignore-same, no-wrap, priority:280
msgid "core.notesRef"
msgstr "core.notesRef"

#. type: Plain text
#: en/git-notes.txt:319
#, priority:280
msgid "Notes ref to read and manipulate instead of `refs/notes/commits`.  Must be an unabbreviated ref name.  This setting can be overridden through the environment and command line."
msgstr "Notas \"ref\" para ler e manipular em vez do `refs/notes/commits`.  Deve ser um nome \"ref\" sem abreviação.  Esta configuração pode ser substituída por uma variável de ambiente e através da linha de comando."

#. type: Labeled list
#: en/git-notes.txt:328
#, ignore-same, no-wrap, priority:280
msgid "`GIT_NOTES_REF`"
msgstr "`GIT_NOTES_REF`"

#. type: Plain text
#: en/git-notes.txt:331
#, priority:280
msgid "Which ref to manipulate notes from, instead of `refs/notes/commits`.  This overrides the `core.notesRef` setting."
msgstr "De qual \"ref\" manipular as anotações, em vez do `refs/notes/commits`.  Sobrescreve a configuração `core.notesRef`."

#. type: Labeled list
#: en/git-notes.txt:332
#, ignore-same, no-wrap, priority:280
msgid "`GIT_NOTES_DISPLAY_REF`"
msgstr "`GIT_NOTES_DISPLAY_REF`"

#. type: Plain text
#: en/git-notes.txt:338
#, priority:280
msgid "Colon-delimited list of refs or globs indicating which refs, in addition to the default from `core.notesRef` or `GIT_NOTES_REF`, to read notes from when showing commit messages.  This overrides the `notes.displayRef` setting."
msgstr "Uma lista delimitada por dois pontos das refs ou \"globs\" indicando quais as refs, além da predefinição do `core.notesRef` ou` GIT_NOTES_REF`, para ler as anotações ao exibir as mensagens dos commits.  Sobrescreve a configuração `notes.displayRef`."

#. type: Plain text
#: en/git-notes.txt:341
#, priority:280
msgid "A warning will be issued for refs that do not exist, but a glob that does not match any refs is silently ignored."
msgstr "Um aviso será emitido para as refs que não existam, porém um agrupamento \"glob\" que não corresponda a nenhuma referência é ignorada em silêncio."

#. type: Labeled list
#: en/git-notes.txt:342
#, ignore-same, no-wrap, priority:280
msgid "`GIT_NOTES_REWRITE_MODE`"
msgstr "`GIT_NOTES_REWRITE_MODE`"

#. type: Plain text
#: en/git-notes.txt:347
#, priority:280
msgid "When copying notes during a rewrite, what to do if the target commit already has a note.  Must be one of `overwrite`, `concatenate`, `cat_sort_uniq`, or `ignore`.  This overrides the `core.rewriteMode` setting."
msgstr "Ao copiar as anotações durante uma reescrita, o que fazer caso o commit de destino já tiver uma anotação.  Deve ser uma das opção `overwrite`,` concatenate`, `cat_sort_uniq` ou` ignore`.  Sobrescreve a configuração `core.rewriteMode`."

#. type: Labeled list
#: en/git-notes.txt:348
#, ignore-same, no-wrap, priority:280
msgid "`GIT_NOTES_REWRITE_REF`"
msgstr "`GIT_NOTES_REWRITE_REF`"

#. type: Plain text
#: en/git-notes.txt:352
#, priority:280
msgid "When rewriting commits, which notes to copy from the original to the rewritten commit.  Must be a colon-delimited list of refs or globs."
msgstr "Ao reescrever os commits, as anotações que serão copiadas do original para o commit que será reescrito.  Deve ser uma lista delimitada por dois pontos das refs ou globs."

#. type: Plain text
#: en/git-notes.txt:355
#, priority:280
msgid "If not set in the environment, the list of notes to copy depends on the `notes.rewrite.<command>` and `notes.rewriteRef` settings."
msgstr "Caso não esteja definido no ambiente, a lista das anotações que serão copiadas irá depender das configurações `notes.rewrite.<comando>` e `notes.rewriteRef`."

#. type: Title =
#: en/git-p4.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-p4(1)"
msgstr "git-p4(1)"

#. type: Plain text
#: en/git-p4.txt:7
#, priority:90
msgid "git-p4 - Import from and submit to Perforce repositories"
msgstr "git-p4 - Importe e envie para os repositórios Perforce"

#. type: Plain text
#: en/git-p4.txt:16
#, ignore-ellipsis, no-wrap, priority:90
msgid ""
"'git p4 clone' [<sync-options>] [<clone-options>] <p4-depot-path>...\n"
"'git p4 sync' [<sync-options>] [<p4-depot-path>...]\n"
"'git p4 rebase'\n"
"'git p4 submit' [<submit-options>] [<master-branch-name>]\n"
msgstr ""
"'git p4 clone' [<opções-de-sincronismo>] [<opções-da-clonagem>] <caminho-do-depósito-p4>...\n"
"'git p4 sync' [<opções-de-sincronismo>] [<caminho-do-depósito-p4>...]\n"
"'git p4 rebase'\n"
"'git p4 submit' [<opções-de-envio>] [<nome-do-ramo-master>]\n"

#. type: Plain text
#: en/git-p4.txt:22
#, priority:90
msgid "This command provides a way to interact with p4 repositories using Git."
msgstr "Este comando fornece uma maneira de interagir com os repositórios p4 utilizando o Git."

#. type: Plain text
#: en/git-p4.txt:30
#, priority:90
msgid "Create a new Git repository from an existing p4 repository using 'git p4 clone', giving it one or more p4 depot paths.  Incorporate new commits from p4 changes with 'git p4 sync'.  The 'sync' command is also used to include new branches from other p4 depot paths.  Submit Git changes back to p4 using 'git p4 submit'.  The command 'git p4 rebase' does a sync plus rebases the current branch onto the updated p4 remote branch."
msgstr "Crie um novo repositório Git a partir de um repositório p4 já existente utilizando o comando 'git p4 clone', informando  a ele um ou mais caminhos para o depósito p4.  Incorpore os novos commits das alterações do p4 com o comando 'git p4 sync'.  O comando 'sync' também é utilizado para incluir as novas ramificações vindas dos outros caminhos do depósito p4.  Envie as alterações do Git de volta para o p4 utilizando o comando 'git p4 submit'.  O comando 'git p4 rebase' faz uma sincronização a mais e reconstrói o ramo atual no ramo remoto p4 já atualizado."

#. type: Plain text
#: en/git-p4.txt:35
#, priority:90
msgid "Clone a repository:"
msgstr "Clone um repositório:"

#. type: delimited block -
#: en/git-p4.txt:38 en/git-p4.txt:71
#, no-wrap, priority:90
msgid "$ git p4 clone //depot/path/project\n"
msgstr "$ git p4 clone //depot/path/project\n"

#. type: Plain text
#: en/git-p4.txt:41
#, priority:90
msgid "Do some work in the newly created Git repository:"
msgstr "Faça algum trabalho no repositório Git recém-criado:"

#. type: delimited block -
#: en/git-p4.txt:46
#, no-wrap, priority:90
msgid ""
"$ cd project\n"
"$ vi foo.h\n"
"$ git commit -a -m \"edited foo.h\"\n"
msgstr ""
"$ cd project\n"
"$ vi foo.h\n"
"$ git commit -a -m \"foo.h editado\"\n"

#. type: Plain text
#: en/git-p4.txt:50
#, priority:90
msgid "Update the Git repository with recent changes from p4, rebasing your work on top:"
msgstr "Atualize o repositório Git com as alterações recentes vindos do 'p4', reorganizando o seu trabalho no topo:"

#. type: delimited block -
#: en/git-p4.txt:53 en/git-p4.txt:130
#, no-wrap, priority:90
msgid "$ git p4 rebase\n"
msgstr "$ git p4 rebase\n"

#. type: Plain text
#: en/git-p4.txt:56
#, priority:90
msgid "Submit your commits back to p4:"
msgstr "Envie os seus commits de volta para 'p4':"

#. type: delimited block -
#: en/git-p4.txt:59 en/git-p4.txt:145
#, no-wrap, priority:90
msgid "$ git p4 submit\n"
msgstr "$ git p4 submit\n"

#. type: Title ~
#: en/git-p4.txt:66
#, no-wrap, priority:90
msgid "Clone"
msgstr "Clone"

#. type: Plain text
#: en/git-p4.txt:69
#, priority:90
msgid "Generally, 'git p4 clone' is used to create a new Git directory from an existing p4 repository:"
msgstr "Geralmente, o comando 'git p4 clone' é utilizado para criar um novo diretório Git a partir de um repositório p4 já existente:"

#. type: Plain text
#: en/git-p4.txt:73
#, priority:90
msgid "This:"
msgstr "Este:"

#. type: Plain text
#: en/git-p4.txt:75
#, priority:90
msgid "Creates an empty Git repository in a subdirectory called 'project'."
msgstr "Cria um repositório Git vazio num subdiretório chamado 'project'."

#. type: Plain text
#: en/git-p4.txt:78
#, priority:90
msgid "Imports the full contents of the head revision from the given p4 depot path into a single commit in the Git branch 'refs/remotes/p4/master'."
msgstr "Importa todo o conteúdo da revisão principal do caminho do depósito p4 informado num único commit no ramo Git 'refs/remotes/p4/master'."

#. type: Plain text
#: en/git-p4.txt:80
#, priority:90
msgid "Creates a local branch, 'master' from this remote and checks it out."
msgstr "Cria um ramo local, 'master', deste ramo remoto e faz uma averiguação."

#. type: Plain text
#: en/git-p4.txt:83
#, priority:90
msgid "To reproduce the entire p4 history in Git, use the '@all' modifier on the depot path:"
msgstr "Para reproduzir todo o histórico p4 no Git, utilize o modificador '@all' no caminho do depósito:"

#. type: delimited block -
#: en/git-p4.txt:85
#, no-wrap, priority:90
msgid "$ git p4 clone //depot/path/project@all\n"
msgstr "$ git p4 clone //depot/path/project@all\n"

#. type: Title ~
#: en/git-p4.txt:89
#, no-wrap, priority:90
msgid "Sync"
msgstr "Sync"

#. type: Plain text
#: en/git-p4.txt:92
#, priority:90
msgid "As development continues in the p4 repository, those changes can be included in the Git repository using:"
msgstr "À medida que o desenvolvimento continua no repositório p4, estas alterações podem ser incluídas no repositório Git utilizando:"

#. type: delimited block -
#: en/git-p4.txt:94
#, no-wrap, priority:90
msgid "$ git p4 sync\n"
msgstr "$ git p4 sync\n"

#. type: Plain text
#: en/git-p4.txt:96
#, priority:90
msgid "This command finds new changes in p4 and imports them as Git commits."
msgstr "Este comando encontra as novas alterações no p4 e as importa conforme o Git realiza os commits."

#. type: Plain text
#: en/git-p4.txt:99
#, priority:90
msgid "P4 repositories can be added to an existing Git repository using 'git p4 sync' too:"
msgstr "Os repositórios P4 podem ser adicionados a um repositório Git já existente também utilizando o comando 'git p4 sync':"

#. type: delimited block -
#: en/git-p4.txt:104
#, no-wrap, priority:90
msgid ""
"$ mkdir repo-git\n"
"$ cd repo-git\n"
"$ git init\n"
"$ git p4 sync //path/in/your/perforce/depot\n"
msgstr ""
"$ mkdir repo-git\n"
"$ cd repo-git\n"
"$ git init\n"
"$ git p4 sync //path/in/your/perforce/depot\n"

#. type: Plain text
#: en/git-p4.txt:109
#, priority:90
msgid "This imports the specified depot into 'refs/remotes/p4/master' in an existing Git repository.  The `--branch` option can be used to specify a different branch to be used for the p4 content."
msgstr "Faz a importação do depósito informado para 'refs/remotes/p4/master' num repositório Git já existente.  A opção `--branch` pode ser utilizada para definir um ramo diferente que será utilizado no conteúdo do p4."

#. type: Plain text
#: en/git-p4.txt:114
#, priority:90
msgid "If a Git repository includes branches 'refs/remotes/origin/p4', these will be fetched and consulted first during a 'git p4 sync'.  Since importing directly from p4 is considerably slower than pulling changes from a Git remote, this can be useful in a multi-developer environment."
msgstr "Caso um repositório Git inclua as ramificações 'refs/remotes/origin/p4', elas serão buscadas e consultadas primeiro durante um comando 'git p4 sync'.  Como a importação direta do p4 é consideravelmente mais lento do que extrair as alterações de um ramo Git remoto, pode ser útil num ambiente com vários desenvolvedores."

#. type: Plain text
#: en/git-p4.txt:119
#, priority:90
msgid "If there are multiple branches, doing 'git p4 sync' will automatically use the \"BRANCH DETECTION\" algorithm to try to partition new changes into the right branch.  This can be overridden with the `--branch` option to specify just a single branch to update."
msgstr "Caso haja várias ramificações, ao executar o comando 'git p4 sync' utilizará de forma automática o algoritmo \"DETECÇÃO DO RAMO\" para tentar particionar as novas alterações na ramificação correta.  Pode ser substituído pela opção `--branch` para definir apenas um único ramo que será atualizado."

#. type: Title ~
#: en/git-p4.txt:122
#, no-wrap, priority:90
msgid "Rebase"
msgstr "Rebase"

#. type: Plain text
#: en/git-p4.txt:128
#, priority:90
msgid "A common working pattern is to fetch the latest changes from the p4 depot and merge them with local uncommitted changes.  Often, the p4 repository is the ultimate location for all code, thus a rebase workflow makes sense.  This command does 'git p4 sync' followed by 'git rebase' to move local commits on top of updated p4 changes."
msgstr "Um padrão de trabalho comum é buscar as alterações mais recentes do depósito p4 e mesclá-las com os commits que não foram alterados localmente.  Frequentemente, o repositório p4 é o local definitivo para todo o código, portanto, um fluxo de trabalho de reconstrução da fundação faz todo o sentido.  Este comando executa o comando 'git p4 sync' seguido do comando 'git rebase' para mover os commits locais no topo das alterações atualizadas do p4."

#. type: Title ~
#: en/git-p4.txt:134
#, no-wrap, priority:90
msgid "Submit"
msgstr "Envio"

#. type: Plain text
#: en/git-p4.txt:140
#, priority:90
msgid "Submitting changes from a Git repository back to the p4 repository requires a separate p4 client workspace.  This should be specified using the `P4CLIENT` environment variable or the Git configuration variable 'git-p4.client'.  The p4 client must exist, but the client root will be created and populated if it does not already exist."
msgstr "O envio das alterações de um repositório Git de volta para o repositório p4, requer um espaço de trabalho do cliente p4 separado.  Isso deve ser definido utilizando a variável de ambiente `P4CLIENT` ou a variável de configuração Git 'git-p4.client'.  O cliente p4 deve existir, porém a raiz do cliente será criada e preenchida caso ainda não exista."

#. type: Plain text
#: en/git-p4.txt:143
#, priority:90
msgid "To submit all changes that are in the current Git branch but not in the 'p4/master' branch, use:"
msgstr "Para enviar todas as alterações que estão no ramo Git atual, mas não no ramo 'p4/master', utilize:"

#. type: Plain text
#: en/git-p4.txt:148
#, priority:90
msgid "To specify a branch other than the current one, use:"
msgstr "Para definir um ramo diferente do atual, utilize:"

#. type: delimited block -
#: en/git-p4.txt:150
#, no-wrap, priority:90
msgid "$ git p4 submit topicbranch\n"
msgstr "$ git p4 submit topicbranch\n"

#. type: Plain text
#: en/git-p4.txt:153
#, priority:90
msgid "To specify a single commit or a range of commits, use:"
msgstr "Para definir um único commit ou um intervalo de commits, utilize:"

#. type: delimited block -
#: en/git-p4.txt:156
#, no-wrap, priority:90
msgid ""
"$ git p4 submit --commit <sha1>\n"
"$ git p4 submit --commit <sha1..sha1>\n"
msgstr ""
"$ git p4 submit --commit <sha1>\n"
"$ git p4 submit --commit <sha1..sha1>\n"

#. type: Plain text
#: en/git-p4.txt:160
#, priority:90
msgid "The upstream reference is generally 'refs/remotes/p4/master', but can be overridden using the `--origin=` command-line option."
msgstr "A referência upstream geralmente é 'refs/remotes/p4/master', mas pode ser substituída utilizando a opção da linha de comando `--origin=`."

#. type: Plain text
#: en/git-p4.txt:165
#, priority:90
msgid "The p4 changes will be created as the user invoking 'git p4 submit'. The `--preserve-user` option will cause ownership to be modified according to the author of the Git commit.  This option requires admin privileges in p4, which can be granted using 'p4 protect'."
msgstr "As alterações no p4 serão criadas à medida que o usuário utilize o comando 'git p4 submit'. A opção `--preserve-user` fará com que a propriedade seja modificada de acordo com o autor do commit.  Esta opção requer privilégios de administrador em p4, que podem ser concedidos utilizando 'p4 protect'."

#. type: Plain text
#: en/git-p4.txt:167
#, priority:90
msgid "To shelve changes instead of submitting, use `--shelve` and `--update-shelve`:"
msgstr "Para arquivar as alterações em vez de enviá-las, utilize `--shelve` e `--update-shelve`:"

#. type: delimited block -
#: en/git-p4.txt:171
#, no-wrap, priority:90
msgid ""
"$ git p4 submit --shelve\n"
"$ git p4 submit --update-shelve 1234 --update-shelve 2345\n"
msgstr ""
"$ git p4 submit --shelve\n"
"$ git p4 submit --update-shelve 1234 --update-shelve 2345\n"

#. type: Title ~
#: en/git-p4.txt:175
#, no-wrap, priority:90
msgid "Unshelve"
msgstr "Unshelve"

#. type: Plain text
#: en/git-p4.txt:178
#, priority:90
msgid "Unshelving will take a shelved P4 changelist, and produce the equivalent git commit in the branch refs/remotes/p4-unshelved/<changelist>."
msgstr "O desarquivamento pega uma lista de alterações P4 arquivada e produz o commit equivalente com o git no ramo refs/remotes/p4-unshelved/<changelist>."

#. type: Plain text
#: en/git-p4.txt:182
#, priority:90
msgid "The git commit is created relative to the current origin revision (HEAD by default).  A parent commit is created based on the origin, and then the unshelve commit is created based on that."
msgstr "O commit do git é criado com relação à revisão da origem atual (a predefinição retorna para HEAD).  Um parente de um commit é criado com base na origem e em seguida, o commit desarquivado é criado com base nisso."

#. type: Plain text
#: en/git-p4.txt:184
#, priority:90
msgid "The origin revision can be changed with the \"--origin\" option."
msgstr "A revisão da origem pode ser alterada com a opção \"--origin\"."

#. type: Plain text
#: en/git-p4.txt:187
#, priority:90
msgid "If the target branch in refs/remotes/p4-unshelved already exists, the old one will be renamed."
msgstr "Se o ramo de destino em `refs/remotes/p4-unshelved` já existir, o antigo será renomeado."

#. type: delimited block -
#: en/git-p4.txt:195
#, no-wrap, priority:90
msgid ""
"$ git p4 sync\n"
"$ git p4 unshelve 12345\n"
"$ git show p4-unshelved/12345\n"
"<submit more changes via p4 to the same files>\n"
"$ git p4 unshelve 12345\n"
"<refuses to unshelve until git is in sync with p4 again>\n"
msgstr ""
"$ git p4 sync\n"
"$ git p4 unshelve 12345\n"
"$ git show p4-unshelved/12345\n"
"<encaminha mais alterações através do p4 para os mesmos arquivos>\n"
"$ git p4 unshelve 12345\n"
"<se recusa a fazer o desarquivamento a menos que o git esteja em sincronia com o p4 novamente>\n"

#. type: Title ~
#: en/git-p4.txt:202
#, no-wrap, priority:90
msgid "General options"
msgstr "Opções gerais"

#. type: Plain text
#: en/git-p4.txt:204
#, priority:90
msgid "All commands except clone accept these options."
msgstr "Todos os comandos, exceto o clone, aceitam estas opções."

#. type: Labeled list
#: en/git-p4.txt:205
#, no-wrap, priority:90
msgid "--git-dir <dir>"
msgstr "--git-dir <dir>"

#. type: Plain text
#: en/git-p4.txt:207
#, priority:90
msgid "Set the `GIT_DIR` environment variable.  See linkgit:git[1]."
msgstr "Define a variável de ambiente `GIT_DIR`.  Consulte linkgit:git[1]."

#. type: Plain text
#: en/git-p4.txt:211
#, priority:90
msgid "Provide more progress information."
msgstr "Forneça mais informações sobre o progresso."

#. type: Title ~
#: en/git-p4.txt:213
#, no-wrap, priority:90
msgid "Sync options"
msgstr "Opções de sincronização"

#. type: Plain text
#: en/git-p4.txt:216
#, priority:90
msgid "These options can be used in the initial 'clone' as well as in subsequent 'sync' operations."
msgstr "Estas opções podem ser utilizadas no 'clone' inicial, bem como nas operações subsequentes de 'sincronização'."

#. type: Labeled list
#: en/git-p4.txt:217
#, no-wrap, priority:90
msgid "--branch <ref>"
msgstr "--branch <ref>"

#. type: Plain text
#: en/git-p4.txt:221
#, priority:90
msgid "Import changes into <ref> instead of refs/remotes/p4/master.  If <ref> starts with refs/, it is used as is.  Otherwise, if it does not start with p4/, that prefix is added."
msgstr "Importe as alterações para o <ref> em vez do 'refs/remotes/p4/master'.  Caso <ref> começar com 'refs/', será utilizado como está.  Caso contrário, se não iniciar com 'p4/', esse prefixo será adicionado."

#. type: Plain text
#: en/git-p4.txt:225
#, priority:90
msgid "By default a <ref> not starting with refs/ is treated as the name of a remote-tracking branch (under refs/remotes/).  This behavior can be modified using the --import-local option."
msgstr "É predefinido que um <ref> que não comece com 'refs/' seja tratado como o nome de um ramo monitorado remotamente (em 'refs/remotes/').  Esse comportamento pode ser alterado utilizando a opção `--import-local`."

#. type: Plain text
#: en/git-p4.txt:227
#, priority:90
msgid "The default <ref> is \"master\"."
msgstr "A predefinição do <ref> é \"master\"."

#. type: Plain text
#: en/git-p4.txt:230
#, priority:90
msgid "This example imports a new remote \"p4/proj2\" into an existing Git repository:"
msgstr "Este exemplo importa um novo \"p4/proj2\" remoto para um repositório Git já existente:"

#. type: delimited block -
#: en/git-p4.txt:234
#, no-wrap, priority:90
msgid ""
"    $ git init\n"
"    $ git p4 sync --branch=refs/remotes/p4/proj2 //depot/proj2\n"
msgstr ""
"    $ git init\n"
"    $ git p4 sync --branch=refs/remotes/p4/proj2 //depot/proj2\n"

#. type: Labeled list
#: en/git-p4.txt:236
#, ignore-same, no-wrap, priority:90
msgid "--detect-branches"
msgstr "--detect-branches"

#. type: Plain text
#: en/git-p4.txt:239
#, priority:90
msgid "Use the branch detection algorithm to find new paths in p4.  It is documented below in \"BRANCH DETECTION\"."
msgstr "Utilize o algoritmo de detecção do ramo para encontrar os novos caminhos no 'p4'.  Está documentado abaixo em \"DETECÇÃO DO RAMO\"."

#. type: Labeled list
#: en/git-p4.txt:240
#, no-wrap, priority:90
msgid "--changesfile <file>"
msgstr "--changesfile <arquivo>"

#. type: Plain text
#: en/git-p4.txt:244
#, priority:90
msgid "Import exactly the p4 change numbers listed in 'file', one per line.  Normally, 'git p4' inspects the current p4 repository state and detects the changes it should import."
msgstr "Importe exatamente os números da alteração p4 listados no 'arquivo', um por linha.  Normalmente, o 'git p4' inspeciona a condição atual do repositório p4 e detecta quais as alterações que ele deve importar."

#. type: Labeled list
#: en/git-p4.txt:245
#, ignore-same, no-wrap, priority:90
msgid "--silent"
msgstr "--silent"

#. type: Plain text
#: en/git-p4.txt:247
#, priority:90
msgid "Do not print any progress information."
msgstr "Não exiba nenhuma informação do progresso."

#. type: Labeled list
#: en/git-p4.txt:248
#, ignore-same, no-wrap, priority:90
msgid "--detect-labels"
msgstr "--detect-labels"

#. type: Plain text
#: en/git-p4.txt:252
#, priority:90
msgid "Query p4 for labels associated with the depot paths, and add them as tags in Git. Limited usefulness as only imports labels associated with new changelists. Deprecated."
msgstr "Consulte a página 'p4' para os rótulos associados aos caminhos do depósito e adicione-os como tags no Git. Utilidade limitada, pois importa apenas as etiquetas associadas a novas listas de alterações. Descontinuada."

#. type: Labeled list
#: en/git-p4.txt:253 en/git-p4.txt:430
#, ignore-same, no-wrap, priority:90
msgid "--import-labels"
msgstr "--import-labels"

#. type: Plain text
#: en/git-p4.txt:255
#, priority:90
msgid "Import labels from p4 into Git."
msgstr "Importe os rótulos do 'p4' para o Git."

#. type: Labeled list
#: en/git-p4.txt:256
#, ignore-same, no-wrap, priority:90
msgid "--import-local"
msgstr "--import-local"

#. type: Plain text
#: en/git-p4.txt:263
#, priority:90
msgid "By default, p4 branches are stored in 'refs/remotes/p4/', where they will be treated as remote-tracking branches by linkgit:git-branch[1] and other commands.  This option instead puts p4 branches in 'refs/heads/p4/'.  Note that future sync operations must specify `--import-local` as well so that they can find the p4 branches in refs/heads."
msgstr "É predefinido que os ramos 'p4' sejam armazenadas em 'refs/remotes/p4/', onde serão tratadas como ramificações monitoradas remotamente pelo linkgit:git-branch[1] e outros comandos.  Esta opção coloca as ramificações 'p4' no 'refs/heads/p4/'.  Observe que as futuras operações de sincronização tam bém devem especificar a opção `--import-local` para que eles possam encontrar as ramificações 'p4' em 'refs/heads'."

#. type: Labeled list
#: en/git-p4.txt:264
#, no-wrap, priority:90
msgid "--max-changes <n>"
msgstr "--max-changes <n>"

#. type: Plain text
#: en/git-p4.txt:270
#, priority:90
msgid "Import at most 'n' changes, rather than the entire range of changes included in the given revision specifier. A typical usage would be use '@all' as the revision specifier, but then to use '--max-changes 1000' to import only the last 1000 revisions rather than the entire revision history."
msgstr "Importe no máximo 'n' alterações, em vez de todo o intervalo de alterações incluído no especificador da revisão informado. Um uso comum seria utilizar '@all' como especificador da revisão, porém depois utilizar a opção '--max-changes 1000' para importar apenas as últimas 1000 revisões, em vez de todo o histórico."

#. type: Labeled list
#: en/git-p4.txt:271
#, no-wrap, priority:90
msgid "--changes-block-size <n>"
msgstr "--changes-block-size <n>"

#. type: Plain text
#: en/git-p4.txt:279
#, priority:90
msgid "The internal block size to use when converting a revision specifier such as '@all' into a list of specific change numbers. Instead of using a single call to 'p4 changes' to find the full list of changes for the conversion, there are a sequence of calls to 'p4 changes -m', each of which requests one block of changes of the given size. The default block size is 500, which should usually be suitable."
msgstr "O tamanho do bloco interno que será utilizado ao converter um especificador da revisão como '@all' numa lista com a quantidade específica de alteração. Em vez de utilizar uma única chamada para 'p4 changes' visando encontrar a lista completa das alterações para a conversão, há uma sequência de chamadas para 'p4 changes -m', cada uma das quais solicita um bloco de alterações com um tamanho definido. O tamanho padrão do bloco é 500, o que geralmente deve ser o suficiente."

#. type: Labeled list
#: en/git-p4.txt:280
#, ignore-same, no-wrap, priority:90
msgid "--keep-path"
msgstr "--keep-path"

#. type: Plain text
#: en/git-p4.txt:287
#, priority:90
msgid "The mapping of file names from the p4 depot path to Git, by default, involves removing the entire depot path.  With this option, the full p4 depot path is retained in Git.  For example, path '//depot/main/foo/bar.c', when imported from '//depot/main/', becomes 'foo/bar.c'.  With `--keep-path`, the Git path is instead 'depot/main/foo/bar.c'."
msgstr "É predefinido para o Git, que seja removido todo o caminho do depósito no mapeamento do caminho dos nomes dos arquivos do depósito p4.  Com esta opção, o caminho completo do depósito p4 é mantido no Git.  Por exemplo, o caminho '//depot/main/foo/bar.c', quando for importado de '//depot/main/', se torne 'foo/bar.c'.  Com `--keep-path`, o caminho do Git fica 'depot/main/foo/bar.c'."

#. type: Labeled list
#: en/git-p4.txt:288
#, ignore-same, no-wrap, priority:90
msgid "--use-client-spec"
msgstr "--use-client-spec"

#. type: Plain text
#: en/git-p4.txt:291
#, priority:90
msgid "Use a client spec to find the list of interesting files in p4.  See the \"CLIENT SPEC\" section below."
msgstr "Use uma especificação do cliente para encontrar a lista dos arquivos interessantes no p4.  Consulte a seção \"CLIENT SPEC\" abaixo."

#. type: Labeled list
#: en/git-p4.txt:292
#, no-wrap, priority:90
msgid "-/ <path>"
msgstr "-/ <caminho>"

#. type: Plain text
#: en/git-p4.txt:294
#, priority:90
msgid "Exclude selected depot paths when cloning or syncing."
msgstr "Exclua os caminhos selecionados do depósito durante a clonagem ou sincronização."

#. type: Title ~
#: en/git-p4.txt:296
#, no-wrap, priority:90
msgid "Clone options"
msgstr "Opções de clonagem"

#. type: Plain text
#: en/git-p4.txt:299
#, priority:90
msgid "These options can be used in an initial 'clone', along with the 'sync' options described above."
msgstr "Estas opções podem ser utilizadas num 'clone' inicial, juntamente com as opções de 'sincronização' descritas acima."

#. type: Labeled list
#: en/git-p4.txt:300
#, no-wrap, priority:90
msgid "--destination <directory>"
msgstr "--destination <diretório>"

#. type: Plain text
#: en/git-p4.txt:304
#, priority:90
msgid "Where to create the Git repository.  If not provided, the last component in the p4 depot path is used to create a new directory."
msgstr "Onde criar o repositório Git.  Caso não seja utilizado, o último componente  no depósito p4 é utilizado para criar um novo diretório."

#. type: Plain text
#: en/git-p4.txt:307
#, priority:90
msgid "Perform a bare clone.  See linkgit:git-clone[1]."
msgstr "Faça uma clonagem simples.  Consulte linkgit:git-clone[1]."

#. type: Title ~
#: en/git-p4.txt:309
#, no-wrap, priority:90
msgid "Submit options"
msgstr "Opções de envio"

#. type: Plain text
#: en/git-p4.txt:311
#, priority:90
msgid "These options can be used to modify 'git p4 submit' behavior."
msgstr "Estas opções podem ser utilizadas para modificar o comportamento do 'git p4 submit'."

#. type: Labeled list
#: en/git-p4.txt:312
#, no-wrap, priority:90
msgid "--origin <commit>"
msgstr "--origin <commit>"

#. type: Plain text
#: en/git-p4.txt:316
#, priority:90
msgid "Upstream location from which commits are identified to submit to p4.  By default, this is the most recent p4 commit reachable from `HEAD`."
msgstr "Localização upstream a partir de onde os commits são identificados para envio ao 'p4'.  É predefinido que este é o commit 'p4' mais recente acessível a partir do `HEAD`."

#. type: Plain text
#: en/git-p4.txt:322
#, priority:90
msgid "Detect renames.  See linkgit:git-diff[1].  Renames will be represented in p4 using explicit 'move' operations.  There is no corresponding option to detect copies, but there are variables for both moves and copies."
msgstr "Detecte as renomeações.  Consulte linkgit:git-diff[1].  As renomeações serão representadas em p4 utilizando operações 'move' de forma explicita.  Não há opção correspondente para detectar cópias, no entanto há variáveis tanto para mover como copiar."

#. type: Labeled list
#: en/git-p4.txt:323
#, ignore-same, no-wrap, priority:90
msgid "--preserve-user"
msgstr "--preserve-user"

#. type: Plain text
#: en/git-p4.txt:326
#, priority:90
msgid "Re-author p4 changes before submitting to p4.  This option requires p4 admin privileges."
msgstr "Re-escreva as alterações no 'p4' antes de enviá-lo ao 'p4'  Esta opção requer privilégios de administração 'p4'."

#. type: Labeled list
#: en/git-p4.txt:327
#, ignore-same, no-wrap, priority:90
msgid "--export-labels"
msgstr "--export-labels"

#. type: Plain text
#: en/git-p4.txt:330
#, priority:90
msgid "Export tags from Git as p4 labels. Tags found in Git are applied to the perforce working directory."
msgstr "Exporte as tags do Git como etiquetas 'p4'. As tags encontradas no Git são aplicadas ao diretório de trabalho do 'perforce'."

#. type: Plain text
#: en/git-p4.txt:335
#, priority:90
msgid "Show just what commits would be submitted to p4; do not change state in Git or p4."
msgstr "Mostre apenas quais os commits seriam enviados ao 'p4'; não mude de condição no Git ou no 'p4'."

#. type: Labeled list
#: en/git-p4.txt:336
#, ignore-same, no-wrap, priority:90
msgid "--prepare-p4-only"
msgstr "--prepare-p4-only"

#. type: Plain text
#: en/git-p4.txt:342
#, priority:90
msgid "Apply a commit to the p4 workspace, opening, adding and deleting files in p4 as for a normal submit operation.  Do not issue the final \"p4 submit\", but instead print a message about how to submit manually or revert.  This option always stops after the first (oldest) commit.  Git tags are not exported to p4."
msgstr "Aplique um commit ao espaço de trabalho 'p4', abrindo, adicionando e excluindo os arquivos no 'p4' como para uma operação normal de envio.  Não emita o \"p4 submit\" final, mas exiba uma mensagem sobre como enviar manualmente ou como reverter.  Esta opção sempre é interrompida após o primeiro commit (mais antigo).  As tags Git não são exportadas para o 'p4'."

#. type: Labeled list
#: en/git-p4.txt:343
#, ignore-same, no-wrap, priority:90
msgid "--shelve"
msgstr "--shelve"

#. type: Plain text
#: en/git-p4.txt:347
#, priority:90
msgid "Instead of submitting create a series of shelved changelists.  After creating each shelve, the relevant files are reverted/deleted.  If you have multiple commits pending multiple shelves will be created."
msgstr "Em vez de enviar, crie uma série de listas de alterações que foram arquivadas.  Depois de criar cada prateleira, os arquivos relevantes são revertidos/excluídos.  Caso tenha vários commits pendentes, várias prateleiras serão criadas."

#. type: Labeled list
#: en/git-p4.txt:348
#, no-wrap, priority:90
msgid "--update-shelve CHANGELIST"
msgstr "--update-shelve CHANGELIST"

#. type: Plain text
#: en/git-p4.txt:351
#, priority:90
msgid "Update an existing shelved changelist with this commit. Implies --shelve. Repeat for multiple shelved changelists."
msgstr "Atualize uma lista de alterações existentes que foram arquivadas com este commit. Implica no uso da opção `--shelve`. Repita o procedimento para as várias listas de alterações que foram arquivadas."

#. type: Labeled list
#: en/git-p4.txt:352
#, no-wrap, priority:90
msgid "--conflict=(ask|skip|quit)"
msgstr "--conflict=(ask|skip|quit)"

#. type: Plain text
#: en/git-p4.txt:358
#, priority:90
msgid "Conflicts can occur when applying a commit to p4.  When this happens, the default behavior (\"ask\") is to prompt whether to skip this commit and continue, or quit.  This option can be used to bypass the prompt, causing conflicting commits to be automatically skipped, or to quit trying to apply commits, without prompting."
msgstr "Podem ocorrer conflitos durante a aplicação de um commit ao 'p4'.  Quando isso acontece, o comportamento predefinido (\"ask\") é perguntar se você deve ignorar este commit e continuar ou encerrar.  Esta opção pode ser utilizada para ignorar o prompt, fazendo com que os commits conflitantes sejam ignorados automaticamente ou pare de tentar aplicar os commits sem nenhum alerta."

#. type: Labeled list
#: en/git-p4.txt:359 en/git-submodule.txt:285
#, no-wrap, priority:220
msgid "--branch <branch>"
msgstr "--branch <ramo>"

#. type: Plain text
#: en/git-p4.txt:363
#, priority:90
msgid "After submitting, sync this named branch instead of the default p4/master.  See the \"Sync options\" section above for more information."
msgstr "Após o envio, sincronize esta ramificação informada em vez da predefinição 'p4/master'.  Consulte a seção \"Opções de sincronização\" acima para obter mais informações."

#. type: Labeled list
#: en/git-p4.txt:364
#, no-wrap, priority:90
msgid "--commit (<sha1>|<sha1>..<sha1>)"
msgstr "--commit (<sha1>|<sha1>..<sha1>)"

#. type: Plain text
#: en/git-p4.txt:367
#, priority:90
msgid "Submit only the specified commit or range of commits, instead of the full list of changes that are in the current Git branch."
msgstr "Envie apenas o commit ou o intervalo dos commits informados, em vez da lista completa de alterações que estão no ramo Git atual."

#. type: Labeled list
#: en/git-p4.txt:368
#, ignore-same, no-wrap, priority:90
msgid "--disable-rebase"
msgstr "--disable-rebase"

#. type: Plain text
#: en/git-p4.txt:371
#, priority:90
msgid "Disable the automatic rebase after all commits have been successfully submitted. Can also be set with git-p4.disableRebase."
msgstr "Desative a nova reconstrução automática depois que todos os commits forem enviados com êxito. Também pode ser definido com git-p4.disableRebase."

#. type: Labeled list
#: en/git-p4.txt:372
#, ignore-same, no-wrap, priority:90
msgid "--disable-p4sync"
msgstr "--disable-p4sync"

#. type: Plain text
#: en/git-p4.txt:376
#, priority:90
msgid "Disable the automatic sync of p4/master from Perforce after commits have been submitted. Implies --disable-rebase. Can also be set with git-p4.disableP4Sync. Sync with origin/master still goes ahead if possible."
msgstr "Desative a sincronização automática do 'p4/master' do \"Perforce\" depois que os commits tenham sido enviados. Implica no uso da opção `--disable-rebase`. Também pode ser definido com git-p4.disableP4Sync. A sincronização com 'origin/master' se for possível ainda continua."

#. type: Title -
#: en/git-p4.txt:378
#, no-wrap, priority:90
msgid "Hooks for submit"
msgstr "Ganchos para envio"

#. type: Title ~
#: en/git-p4.txt:381
#, no-wrap, priority:90
msgid "p4-pre-submit"
msgstr "p4-pre-submit"

#. type: Plain text
#: en/git-p4.txt:387
#, priority:90
msgid "The `p4-pre-submit` hook is executed if it exists and is executable.  The hook takes no parameters and nothing from standard input. Exiting with non-zero status from this script prevents `git-p4 submit` from launching.  It can be bypassed with the `--no-verify` command line option."
msgstr "O gancho `p4-pre-submit` é executado caso exista e seja executável.  O gancho não aceita os parâmetros e nada da entrada padrão. Encerrando com uma condição diferente de zero deste script impede a execução do `git-p4 submit`.  Pode ser contornada com a opção da linha de comando `--no-verify`."

#. type: Plain text
#: en/git-p4.txt:389
#, priority:90
msgid "One usage scenario is to run unit tests in the hook."
msgstr "Um cenário para a sua utilização é executar os testes da unidade no gancho."

#. type: Title ~
#: en/git-p4.txt:391
#, no-wrap, priority:90
msgid "p4-prepare-changelist"
msgstr "p4-prepare-changelist"

#. type: Plain text
#: en/git-p4.txt:398
#, priority:90
msgid "The `p4-prepare-changelist` hook is executed right after preparing the default changelist message and before the editor is started.  It takes one parameter, the name of the file that contains the changelist text. Exiting with a non-zero status from the script will abort the process."
msgstr "O gancho `p4-prepare-changelist` é executado bem depois de preparar a mensagem da lista de alterações predefinida e antes que o editor seja iniciado.  É necessário um único parâmetro, o nome do arquivo que contenha o texto da lista das alterações. Encerrando com uma condição diferente de zero, faz com que o processo seja interrompido."

#. type: Plain text
#: en/git-p4.txt:402
#, priority:90
msgid "The purpose of the hook is to edit the message file in place, and it is not suppressed by the `--no-verify` option. This hook is called even if `--prepare-p4-only` is set."
msgstr "O objetivo do gancho é editar o arquivo de mensagem no local, não sendo suprimido pela opção `--no-verify`. Este gancho é chamado mesmo se a opção `--prepare-p4-only` estivesse definida."

#. type: Title ~
#: en/git-p4.txt:404
#, no-wrap, priority:90
msgid "p4-changelist"
msgstr "p4-changelist"

#. type: Plain text
#: en/git-p4.txt:411
#, priority:90
msgid "The `p4-changelist` hook is executed after the changelist message has been edited by the user. It can be bypassed with the `--no-verify` option. It takes a single parameter, the name of the file that holds the proposed changelist text. Exiting with a non-zero status causes the command to abort."
msgstr "O gancho `p4-changelist` é executado depois que mensagem da lista de alterações tenha sido editada pelo usuário. Pode ser ignorado com a opção `--no-check`. É necessário um único parâmetro, o nome do arquivo que contenha o texto da lista das alterações propostas. Encerre com uma condição diferente de zero, faz com que o comando seja cancelado."

#. type: Plain text
#: en/git-p4.txt:415
#, priority:90
msgid "The hook is allowed to edit the changelist file and can be used to normalize the text into some project standard format. It can also be used to refuse the Submit after inspect the message file."
msgstr "O gancho tem permissão para editar o arquivo da lista de alterações e pode ser utilizado para normalizar o texto em algum formato predefinido pelo projeto. Também pode ser utilizado para recusar o envio após a inspeção da mensagem do arquivo."

#. type: Title ~
#: en/git-p4.txt:417
#, no-wrap, priority:90
msgid "p4-post-changelist"
msgstr "p4-post-changelist"

#. type: Plain text
#: en/git-p4.txt:423
#, priority:90
msgid "The `p4-post-changelist` hook is invoked after the submit has successfully occurred in P4. It takes no parameters and is meant primarily for notification and cannot affect the outcome of the git p4 submit action."
msgstr "O gancho `p4-post-changelist` é executado depois que o envio tenha ocorrido com êxito no P4. Não precisa de quaisquer parâmetros e serve primeiramente para notificações e pode não afetar o resultado da ação do comando 'git p4 submit'."

#. type: Title ~
#: en/git-p4.txt:427
#, no-wrap, priority:90
msgid "Rebase options"
msgstr "Opções para a reconstrução da fundação"

#. type: Plain text
#: en/git-p4.txt:429
#, priority:90
msgid "These options can be used to modify 'git p4 rebase' behavior."
msgstr "Essas opções podem ser utilizadas para modificar o comportamento do 'git p4 rebase'."

#. type: Plain text
#: en/git-p4.txt:432
#, priority:90
msgid "Import p4 labels."
msgstr "Importe as etiquetas p4."

#. type: Title ~
#: en/git-p4.txt:434
#, no-wrap, priority:90
msgid "Unshelve options"
msgstr "Desfazer as opções"

#. type: Labeled list
#: en/git-p4.txt:436
#, ignore-same, no-wrap, priority:90
msgid "--origin"
msgstr "--origin"

#. type: Plain text
#: en/git-p4.txt:439
#, priority:90
msgid "Sets the git refspec against which the shelved P4 changelist is compared.  Defaults to p4/master."
msgstr "Define o 'git refspec' onde a lista de alterações 'P4' que foi arquivada é comparada.  A predefinição retorna para 'p4/master'."

#. type: Title -
#: en/git-p4.txt:441
#, no-wrap, priority:90
msgid "DEPOT PATH SYNTAX"
msgstr "SINTAXE DO CAMINHO DO DEPÓSITO"

#. type: Plain text
#: en/git-p4.txt:445
#, priority:90
msgid "The p4 depot path argument to 'git p4 sync' and 'git p4 clone' can be one or more space-separated p4 depot paths, with an optional p4 revision specifier on the end:"
msgstr "O argumento do caminho do depósito p4 para o comando 'git p4 sync' e o 'git p4 clone' pode ser um ou mais caminhos para o depósito p4 separados com espaço, com um especificador opcional da revisão p4 no final:"

#. type: Labeled list
#: en/git-p4.txt:446
#, no-wrap, priority:90
msgid "\"//depot/my/project\""
msgstr "\"//depot/my/project\""

#. type: Plain text
#: en/git-p4.txt:448
#, priority:90
msgid "Import one commit with all files in the '#head' change under that tree."
msgstr "Importe um commit com todos os arquivos na alteração '#head' sob essa árvore."

#. type: Labeled list
#: en/git-p4.txt:449
#, no-wrap, priority:90
msgid "\"//depot/my/project@all\""
msgstr "\"//depot/my/project@all\""

#. type: Plain text
#: en/git-p4.txt:451
#, priority:90
msgid "Import one commit for each change in the history of that depot path."
msgstr "Importe um commit para cada alteração no histórico desse caminho do depósito."

#. type: Labeled list
#: en/git-p4.txt:452
#, no-wrap, priority:90
msgid "\"//depot/my/project@1,6\""
msgstr "\"//depot/my/project@1,6\""

#. type: Plain text
#: en/git-p4.txt:454
#, priority:90
msgid "Import only changes 1 through 6."
msgstr "Importe apenas as alterações entre '1' a '6'."

#. type: Labeled list
#: en/git-p4.txt:455
#, no-wrap, priority:90
msgid "\"//depot/proj1@all //depot/proj2@all\""
msgstr "\"//depot/proj1@all //depot/proj2@all\""

#. type: Plain text
#: en/git-p4.txt:464
#, priority:90
msgid "Import all changes from both named depot paths into a single repository.  Only files below these directories are included.  There is not a subdirectory in Git for each \"proj1\" and \"proj2\".  You must use the `--destination` option when specifying more than one depot path.  The revision specifier must be specified identically on each depot path.  If there are files in the depot paths with the same name, the path with the most recently updated version of the file is the one that appears in Git."
msgstr "Importe todas as alterações dos dois caminhos do depósito informados para um único repositório.  Somente os arquivos abaixo destes diretórios estão incluídos.  Não há um subdiretório no Git para cada \"proj1\" e \"proj2\".  Você deve utilizar a opção `--destination` ao informar mais de um caminho do depósito.  O especificador de revisão deve ser definido de forma idêntica em cada caminho do depósito.  Caso haja os arquivos com o mesmo nome nos caminhos do depósito, o caminho com a versão atualizada mais recente do arquivo é o que irá aparecer no Git."

#. type: Plain text
#: en/git-p4.txt:466
#, priority:90
msgid "See 'p4 help revisions' for the full syntax of p4 revision specifiers."
msgstr "Consulte 'revisões de ajuda p4' para obter a sintaxe completa dos especificadores da revisão p4."

#. type: Title -
#: en/git-p4.txt:469
#, no-wrap, priority:90
msgid "CLIENT SPEC"
msgstr "ESPECIFICAÇÃO DO CLIENTE"

#. type: Plain text
#: en/git-p4.txt:479
#, priority:90
msgid "The p4 client specification is maintained with the 'p4 client' command and contains among other fields, a View that specifies how the depot is mapped into the client repository.  The 'clone' and 'sync' commands can consult the client spec when given the `--use-client-spec` option or when the useClientSpec variable is true.  After 'git p4 clone', the useClientSpec variable is automatically set in the repository configuration file.  This allows future 'git p4 submit' commands to work properly; the submit command looks only at the variable and does not have a command-line option."
msgstr "A definição do cliente p4 é mantida com o comando 'p4 client' e contém, entre os outros campos, uma visualização que define como o depósito é mapeado no repositório do cliente.  Os comandos 'clone' e 'sync' podem consultar a especificação do cliente quando receber a opção `--use-client-spec` ou quando a variável `useClientSpec` for verdadeira.  Após o 'git p4 clone', a variável `useClientSpec` é automaticamente definida no arquivo de configuração do repositório.  Isso permite que futuros comandos `git p4 submit` funcionem corretamente; o comando 'submit' examina apenas a variável e não possui uma opção na linha de comando."

#. type: Plain text
#: en/git-p4.txt:486
#, ignore-ellipsis, priority:90
msgid "The full syntax for a p4 view is documented in 'p4 help views'.  'git p4' knows only a subset of the view syntax.  It understands multi-line mappings, overlays with '+', exclusions with '-' and double-quotes around whitespace.  Of the possible wildcards, 'git p4' only handles '...', and only when it is at the end of the path.  'git p4' will complain if it encounters an unhandled wildcard."
msgstr "A sintaxe completa de uma visualização p4 está documentada em 'p4 help views'.  O comando 'git p4' conhece apenas um subconjunto da sintaxe de visualização.  Ele compreende os mapeamentos das várias linhas, sobreposições com '+', exclusões com '-' e as aspas duplas ao redor do espaço.  Dos possíveis curingas, o 'git p4' manipula apenas '...' e somente quando está no final do caminho.  O 'git p4' irá reclamará caso encontre um curinga sem tratamento."

#. type: Plain text
#: en/git-p4.txt:491
#, priority:90
msgid "Bugs in the implementation of overlap mappings exist.  If multiple depot paths map through overlays to the same location in the repository, 'git p4' can choose the wrong one.  This is hard to solve without dedicating a client spec just for 'git p4'."
msgstr "Existem bugs na implementação dos mapeamentos da sobreposição.  Caso vários caminhos do depósito mapearem as sobreposições para o mesmo local no repositório, 'git p4' poderá escolher o caminho errado.  Isso é difícil de resolver sem dedicar um cliente específico apenas ao 'git p4'."

#. type: Plain text
#: en/git-p4.txt:496
#, priority:90
msgid "The name of the client can be given to 'git p4' in multiple ways.  The variable 'git-p4.client' takes precedence if it exists.  Otherwise, normal p4 mechanisms of determining the client are used: environment variable `P4CLIENT`, a file referenced by `P4CONFIG`, or the local host name."
msgstr "O nome do cliente pode ser atribuído ao 'git p4' de várias maneiras.  A variável 'git-p4.client' tem precedência, caso exista.  Caso contrário, são utilizados os mecanismos p4 tradicionais para determinar o cliente utilizado: a variável de ambiente `P4CLIENT`, um arquivo referenciado por `P4CONFIG` ou o nome do host local."

#. type: Title -
#: en/git-p4.txt:499
#, no-wrap, priority:90
msgid "BRANCH DETECTION"
msgstr "DETECÇÃO DO RAMO"

#. type: Plain text
#: en/git-p4.txt:506
#, priority:90
msgid "P4 does not have the same concept of a branch as Git.  Instead, p4 organizes its content as a directory tree, where by convention different logical branches are in different locations in the tree.  The 'p4 branch' command is used to maintain mappings between different areas in the tree, and indicate related content.  'git p4' can use these mappings to determine branch relationships."
msgstr "O P4 não tem o mesmo conceito de ramificação que o Git.  Em vez disso, o p4 organiza o seu conteúdo como uma árvore de diretórios, onde por convenção de diferentes ramificações lógicas que ficam nos diferentes locais da árvore.  O comando 'p4 branch' é usado para manter os mapeamentos entre as diferentes áreas da árvore e indicar o conteúdo relacionado.  O 'git p4' pode utilizar esses mapeamentos para determinar os relacionamentos dos ramos."

#. type: Plain text
#: en/git-p4.txt:511
#, priority:90
msgid "If you have a repository where all the branches of interest exist as subdirectories of a single depot path, you can use `--detect-branches` when cloning or syncing to have 'git p4' automatically find subdirectories in p4, and to generate these as branches in Git."
msgstr "Caso você possua um repositório onde todas as ramificações de interesse existam como subdiretórios de um único caminho do depósito, é possível utilizar o comando `--detect-branches` durante a clonagem ou sincronização para que o comando 'git p4' encontre automaticamente os subdiretórios p4 e gere-os como os ramos no Git."

#. type: Plain text
#: en/git-p4.txt:513
#, priority:90
msgid "For example, if the P4 repository structure is:"
msgstr "Por exemplo, se a estrutura do repositório P4 for:"

#. type: delimited block -
#: en/git-p4.txt:516
#, ignore-ellipsis, no-wrap, priority:90
msgid ""
"//depot/main/...\n"
"//depot/branch1/...\n"
msgstr ""
"//depot/main/...\n"
"//depot/branch1/...\n"

#. type: Plain text
#: en/git-p4.txt:519
#, priority:90
msgid "And \"p4 branch -o branch1\" shows a View line that looks like:"
msgstr "E \"p4 branch -o branch1\" mostra uma linha View que se parece com:"

#. type: delimited block -
#: en/git-p4.txt:521
#, ignore-ellipsis, no-wrap, priority:90
msgid "//depot/main/... //depot/branch1/...\n"
msgstr "//depot/main/... //depot/branch1/...\n"

#. type: Plain text
#: en/git-p4.txt:524
#, priority:90
msgid "Then this 'git p4 clone' command:"
msgstr "Então este comando 'git p4 clone':"

#. type: delimited block -
#: en/git-p4.txt:526
#, no-wrap, priority:90
msgid "git p4 clone --detect-branches //depot@all\n"
msgstr "git p4 clone --detect-branches //depot@all\n"

#. type: Plain text
#: en/git-p4.txt:529
#, priority:90
msgid "produces a separate branch in 'refs/remotes/p4/' for //depot/main, called 'master', and one for //depot/branch1 called 'depot/branch1'."
msgstr "produz uma ramificação separada em 'refs/remotes/p4/' para '//depot/main', chamado 'master', e uma para '//depot/branch1' chamada 'depot/branch1'."

#. type: Plain text
#: en/git-p4.txt:539
#, priority:90
msgid "However, it is not necessary to create branches in p4 to be able to use them like branches.  Because it is difficult to infer branch relationships automatically, a Git configuration setting 'git-p4.branchList' can be used to explicitly identify branch relationships.  It is a list of \"source:destination\" pairs, like a simple p4 branch specification, where the \"source\" and \"destination\" are the path elements in the p4 repository.  The example above relied on the presence of the p4 branch.  Without p4 branches, the same result will occur with:"
msgstr "No entanto, não é necessário criar as ramificações p4 para poder utilizá-las como ramificações.  Como é difícil inferir nos relacionamentos da ramificação de forma automática, uma configuração Git 'git-p4.branchList' pode ser usada para identificar de forma explicita os relacionamentos da ramificação.  É uma lista de pares \"source:destination\", como uma especificação p4 simples do ramo onde \"origem\" e \"destino\" são os elementos do caminho no repositório p4.  O exemplo acima se baseou na presença do ramo p4.  Sem os ramos p4, o mesmo resultado ocorrerá com:"

#. type: delimited block -
#: en/git-p4.txt:544
#, no-wrap, priority:90
msgid ""
"git init depot\n"
"cd depot\n"
"git config git-p4.branchList main:branch1\n"
"git p4 clone --detect-branches //depot@all .\n"
msgstr ""
"git init depot\n"
"cd depot\n"
"git config git-p4.branchList main:branch1\n"
"git p4 clone --detect-branches //depot@all .\n"

#. type: Plain text
#: en/git-p4.txt:553
#, priority:90
msgid "The fast-import mechanism used by 'git p4' creates one pack file for each invocation of 'git p4 sync'.  Normally, Git garbage compression (linkgit:git-gc[1]) automatically compresses these to fewer pack files, but explicit invocation of 'git repack -adf' may improve performance."
msgstr "O mecanismo de importação rápida usado pelo 'git p4' cria um arquivo de pacote para cada chamada do 'git p4 sync'.  Normalmente, a compactação de lixo do Git (linkgit:git-gc[1]) as compacta de forma automática com menos arquivos no pacote, porém a chamada explícita do comando 'git repack -adf' pode ajudar a melhorar o desempenho."

#. type: Plain text
#: en/git-p4.txt:559
#, priority:90
msgid "The following config settings can be used to modify 'git p4' behavior.  They all are in the 'git-p4' section."
msgstr "As seguintes configurações podem ser usadas para alterar o comportamento do 'git p4'.  Todos eles estão na seção 'git-p4'."

#. type: Title ~
#: en/git-p4.txt:561
#, no-wrap, priority:90
msgid "General variables"
msgstr "Variáveis gerais"

#. type: Labeled list
#: en/git-p4.txt:562
#, ignore-same, no-wrap, priority:90
msgid "git-p4.user"
msgstr "git-p4.user"

#. type: Plain text
#: en/git-p4.txt:565
#, priority:90
msgid "User specified as an option to all p4 commands, with '-u <user>'.  The environment variable `P4USER` can be used instead."
msgstr "Usuário especificado como uma opção para todos os comandos p4, com '-u <usuário>'.  A variável de ambiente `P4USER` pode ser utilizada."

#. type: Labeled list
#: en/git-p4.txt:566
#, ignore-same, no-wrap, priority:90
msgid "git-p4.password"
msgstr "git-p4.password"

#. type: Plain text
#: en/git-p4.txt:570
#, priority:90
msgid "Password specified as an option to all p4 commands, with '-P <password>'.  The environment variable `P4PASS` can be used instead."
msgstr "Uma senha definida como uma opção para todos os comandos p4, com '-P <senha>'.  A variável de ambiente `P4PASS` pode ser utilizada."

#. type: Labeled list
#: en/git-p4.txt:571
#, ignore-same, no-wrap, priority:90
msgid "git-p4.port"
msgstr "git-p4.port"

#. type: Plain text
#: en/git-p4.txt:575
#, priority:90
msgid "Port specified as an option to all p4 commands, with '-p <port>'.  The environment variable `P4PORT` can be used instead."
msgstr "Uma porta definida como uma opção para todos os comandos p4, com '-p <porta>'.  A variável de ambiente `P4PORT` pode ser utilizada."

#. type: Labeled list
#: en/git-p4.txt:576
#, ignore-same, no-wrap, priority:90
msgid "git-p4.host"
msgstr "git-p4.host"

#. type: Plain text
#: en/git-p4.txt:580
#, priority:90
msgid "Host specified as an option to all p4 commands, with '-h <host>'.  The environment variable `P4HOST` can be used instead."
msgstr "O host definido como uma opção para todos os comandos p4, com '-h <host>'.  A variável de ambiente `P4HOST` pode ser utilizada."

#. type: Labeled list
#: en/git-p4.txt:581
#, ignore-same, no-wrap, priority:90
msgid "git-p4.client"
msgstr "git-p4.client"

#. type: Plain text
#: en/git-p4.txt:584
#, priority:90
msgid "Client specified as an option to all p4 commands, with '-c <client>', including the client spec."
msgstr "Específico do cliente como uma opção para todos os comandos p4, com '-c <cliente>', incluindo a definição do cliente."

#. type: Labeled list
#: en/git-p4.txt:585
#, ignore-same, no-wrap, priority:90
msgid "git-p4.retries"
msgstr "git-p4.retries"

#. type: Plain text
#: en/git-p4.txt:590
#, priority:90
msgid "Specifies the number of times to retry a p4 command (notably, 'p4 sync') if the network times out. The default value is 3.  Set the value to 0 to disable retries or if your p4 version does not support retries (pre 2012.2)."
msgstr "Define a quantidade de vezes para tentar novamente um comando p4 (principalmente, 'p4 sync') caso a rede atinja o tempo limite. O valor predefinido é 3.  Define o valor como 0 para desativar as tentativas ou se a sua versão 'p4' não for compatível com tentativas (anteriores a versão 2012.2)."

#. type: Title ~
#: en/git-p4.txt:592
#, no-wrap, priority:90
msgid "Clone and sync variables"
msgstr "Variáveis de clonagem e sincronização"

#. type: Labeled list
#: en/git-p4.txt:593
#, ignore-same, no-wrap, priority:90
msgid "git-p4.syncFromOrigin"
msgstr "git-p4.syncFromOrigin"

#. type: Plain text
#: en/git-p4.txt:599
#, priority:90
msgid "Because importing commits from other Git repositories is much faster than importing them from p4, a mechanism exists to find p4 changes first in Git remotes.  If branches exist under 'refs/remote/origin/p4', those will be fetched and used when syncing from p4.  This variable can be set to 'false' to disable this behavior."
msgstr "Como a importação dos commits dos outros repositórios Git é muito mais rápido do que a importação através do 'p4', existe um mecanismo para encontrar as alterações 'p4' primeiro nos ramos remotos do Git.  Caso existam ramos em 'refs/remote/origin/p4', elas serão buscadas e utilizada durante a sincronização a partir do 'p4'.  Para desativar esse comportamento, esta variável pode ser definida como 'false'."

#. type: Labeled list
#: en/git-p4.txt:600
#, ignore-same, no-wrap, priority:90
msgid "git-p4.branchUser"
msgstr "git-p4.branchUser"

#. type: Plain text
#: en/git-p4.txt:605
#, priority:90
msgid "One phase in branch detection involves looking at p4 branches to find new ones to import.  By default, all branches are inspected.  This option limits the search to just those owned by the single user named in the variable."
msgstr "Uma fase na detecção do ramo envolve olhar para os ramos 'p4' para encontrar os novos que serão importados.  É predefinido que todas as ramificações sejam inspecionadas.  Essa opção limita a pesquisa apenas àqueles pertencentes ao único usuário informado na variável."

#. type: Labeled list
#: en/git-p4.txt:606
#, ignore-same, no-wrap, priority:90
msgid "git-p4.branchList"
msgstr "git-p4.branchList"

#. type: Plain text
#: en/git-p4.txt:611
#, priority:90
msgid "List of branches to be imported when branch detection is enabled.  Each entry should be a pair of branch names separated by a colon (:).  This example declares that both branchA and branchB were created from main:"
msgstr "A lista dos ramos que serão importados quando a detecção da ramificação estiver ativo.  Cada entrada deve ser um par dos nomes das ramificações separados por dois pontos (:).  Este exemplo declara que 'branchA' e 'branchB' foram criados a partir de 'main':"

#. type: delimited block -
#: en/git-p4.txt:615
#, no-wrap, priority:90
msgid ""
"git config       git-p4.branchList main:branchA\n"
"git config --add git-p4.branchList main:branchB\n"
msgstr ""
"git config       git-p4.branchList main:branchA\n"
"git config --add git-p4.branchList main:branchB\n"

#. type: Labeled list
#: en/git-p4.txt:617
#, no-wrap, priority:90
msgid "git-p4.ignoredP4Labels"
msgstr "git-p4.ignoredP4Labels"

#. type: Plain text
#: en/git-p4.txt:620
#, priority:90
msgid "List of p4 labels to ignore. This is built automatically as unimportable labels are discovered."
msgstr "Lista das etiquetas p4 que serão ignoradas. Isso é criado automaticamente à medida que etiquetas não importantes forem descobertas."

#. type: Labeled list
#: en/git-p4.txt:621
#, ignore-same, no-wrap, priority:90
msgid "git-p4.importLabels"
msgstr "git-p4.importLabels"

#. type: Plain text
#: en/git-p4.txt:623
#, priority:90
msgid "Import p4 labels into git, as per --import-labels."
msgstr "Importe os rótulos p4 para o git, conforme --import-labels."

#. type: Labeled list
#: en/git-p4.txt:624
#, ignore-same, no-wrap, priority:90
msgid "git-p4.labelImportRegexp"
msgstr "git-p4.labelImportRegexp"

#. type: Plain text
#: en/git-p4.txt:627
#, priority:90
msgid "Only p4 labels matching this regular expression will be imported. The default value is '[a-zA-Z0-9_\\-.]+$'."
msgstr "Apenas os rótulos 'p4' coincidentes com esta expressão regular serão importados. O valor predefinido é '[a-zA-Z0-9_\\-.]+$'."

#. type: Labeled list
#: en/git-p4.txt:628
#, ignore-same, no-wrap, priority:90
msgid "git-p4.useClientSpec"
msgstr "git-p4.useClientSpec"

#. type: Plain text
#: en/git-p4.txt:633
#, priority:90
msgid "Specify that the p4 client spec should be used to identify p4 depot paths of interest.  This is equivalent to specifying the option `--use-client-spec`.  See the \"CLIENT SPEC\" section above.  This variable is a boolean, not the name of a p4 client."
msgstr "Define que a especificação do cliente p4 deve ser utilizada para identificar os caminhos de interesse do depósito 'p4'.  Isto é o mesmo que utilizar a opção `--use-client-spec`.  Consulte a seção \"ESPECIFICAÇÃO DO CLIENTE\" acima.  Essa variável é um booleano e não o nome de um cliente 'p4'."

#. type: Labeled list
#: en/git-p4.txt:634
#, ignore-same, no-wrap, priority:90
msgid "git-p4.pathEncoding"
msgstr "git-p4.pathEncoding"

#. type: Plain text
#: en/git-p4.txt:642
#, priority:90
msgid "Perforce keeps the encoding of a path as given by the originating OS.  Git expects paths encoded as UTF-8. Use this config to tell git-p4 what encoding Perforce had used for the paths. This encoding is used to transcode the paths to UTF-8. As an example, Perforce on Windows often uses \"cp1252\" to encode path names. If this option is passed into a p4 clone request, it is persisted in the resulting new git repo."
msgstr "O 'Perforce' mantém a codificação de um caminho conforme seja informado pelo sistema operacional da origem.  O Git espera que os caminhos sejam codificados como UTF-8. Utilize esta configuração para informar ao git-p4 qual a codificação que o Perforce utilizou para os caminhos. Essa codificação é utilizada para transcodificar os caminhos para UTF-8. Como exemplo, o \"Perforce\" no Windows geralmente utilizam \"cp1252\" para codificar os nomes dos caminhos. Se esta opção for passada para uma solicitação de clonagem p4, ela será mantida no novo repositório git resultante."

#. type: Labeled list
#: en/git-p4.txt:643
#, ignore-same, no-wrap, priority:90
msgid "git-p4.metadataDecodingStrategy"
msgstr "git-p4.metadataDecodingStrategy"

#. type: Plain text
#: en/git-p4.txt:667
#, priority:90
msgid "Perforce keeps the encoding of a changelist descriptions and user full names as stored by the client on a given OS. The p4v client uses the OS-local encoding, and so different users can end up storing different changelist descriptions or user full names in different encodings, in the same depot.  Git tolerates inconsistent/incorrect encodings in commit messages and author names, but expects them to be specified in utf-8.  git-p4 can use three different decoding strategies in handling the encoding uncertainty in Perforce: 'passthrough' simply passes the original bytes through from Perforce to git, creating usable but incorrectly-encoded data when the Perforce data is encoded as anything other than utf-8. 'strict' expects the Perforce data to be encoded as utf-8, and fails to import when this is not true.  'fallback' attempts to interpret the data as utf-8, and otherwise falls back to using a secondary encoding - by default the common windows encoding 'cp-1252' - with upper-range bytes escaped if decoding with the fallback encoding also fails.  Under python2 the default strategy is 'passthrough' for historical reasons, and under python3 the default is 'fallback'.  When 'strict' is selected and decoding fails, the error message will propose changing this config parameter as a workaround. If this option is passed into a p4 clone request, it is persisted into the resulting new git repo."
msgstr "O Perforce mantém a codificação das descrições de uma lista de alterações e os nomes completos dos usuários armazenados pelo cliente num determinado sistema operacional. O cliente p4v usa a codificação local do sistema operacional e, portanto, diferentes usuários podem acabar armazenando diferentes descrições da lista de alterações ou dos nomes completos dos usuários em diferentes codificações, no mesmo depósito. O Git tolera codificações inconsistentes/incorretas nas mensagens do commit e dos nomes dos autores, contudo que sejam definidos como utf-8. O git-p4 pode usar três estratégias de decodificação diferentes para lidar com a incerteza da codificação no Perforce: o 'passthrough' simplesmente passa os bytes originais do Perforce para o git, criando dados utilizáveis, mas codificados incorretamente, quando os dados do Perforce sejam codificados como algo diferente de utf- 8. O 'strict' espera que os dados do Perforce sejam codificados como utf-8 e falha na importação quando isso não for verdadeiro. O 'fallback' tenta interpretar os dados como utf-8 e, de outra forma, volta a usar uma codificação secundária - é predefinido que a codificação comum do Windows 'cp-1252' - com os maiores bytes de intervalo escapados caso a decodificação com a codificação substituta também falhe. Em python2 a estratégia predefinida é 'passthrough' por questões históricas, em python3 a predefinição é 'fallback'. Quando 'strict' for selecionado e a decodificação falhar, a mensagem de erro incentivará a alteração deste parâmetro de configuração como uma solução alternativa. Se esta opção for passada para uma solicitação de clonagem p4, ela será mantida no novo repositório git resultante."

#. type: Labeled list
#: en/git-p4.txt:668
#, ignore-same, no-wrap, priority:90
msgid "git-p4.metadataFallbackEncoding"
msgstr "git-p4.metadataFallbackEncoding"

#. type: Plain text
#: en/git-p4.txt:675
#, priority:90
msgid "Specify the fallback encoding to use when decoding Perforce author names and changelists descriptions using the 'fallback' strategy (see git-p4.metadataDecodingStrategy). The fallback encoding will only be used when decoding as utf-8 fails. This option defaults to cp1252, a common windows encoding. If this option is passed into a p4 clone request, it is persisted into the resulting new git repo."
msgstr "Especifique a codificação substituta que será utilizada ao decodificar os nomes dos autores e das descrições de listas das alterações do Perforce usando a estratégia 'fallback' (consulte git-p4.metadataDecodingStrategy). A codificação substituta só será usada quando a decodificação como utf-8 falhar. Essa opção é padronizada para cp1252, uma codificação comum do Windows. Se esta opção for passada para uma solicitação de clonagem p4, ela será mantida no novo repositório git resultante."

#. type: Labeled list
#: en/git-p4.txt:676
#, ignore-same, no-wrap, priority:90
msgid "git-p4.largeFileSystem"
msgstr "git-p4.largeFileSystem"

#. type: Plain text
#: en/git-p4.txt:682
#, priority:90
msgid "Specify the system that is used for large (binary) files. Please note that large file systems do not support the 'git p4 submit' command.  Only Git LFS is implemented right now (see https://git-lfs.github.com/ for more information). Download and install the Git LFS command line extension to use this option and configure it like this:"
msgstr "Especifique o sistema utilizado para os arquivos (binários) grandes. Observe que os sistemas dos arquivos grandes não são compatíveis o comando 'git p4 submit'.  Apenas o 'Git LFS' está implementado no momento (consulte https://git-lfs.github.com/ para obter mais informações). Baixe e instale a extensão da linha de comando do 'Git LFS' para utilizar esta opção e configurá-la da seguinte maneira:"

#. type: delimited block -
#: en/git-p4.txt:685
#, no-wrap, priority:90
msgid "git config       git-p4.largeFileSystem GitLFS\n"
msgstr "git config       git-p4.largeFileSystem GitLFS\n"

#. type: Labeled list
#: en/git-p4.txt:687
#, ignore-same, no-wrap, priority:90
msgid "git-p4.largeFileExtensions"
msgstr "git-p4.largeFileExtensions"

#. type: Plain text
#: en/git-p4.txt:690
#, priority:90
msgid "All files matching a file extension in the list will be processed by the large file system. Do not prefix the extensions with '.'."
msgstr "Todos os arquivos que coincidam com uma extensão do arquivo na lista serão processados pelo grande sistema de arquivos. Não prefixe as extensões com '.'."

#. type: Labeled list
#: en/git-p4.txt:691
#, ignore-same, no-wrap, priority:90
msgid "git-p4.largeFileThreshold"
msgstr "git-p4.largeFileThreshold"

#. type: Plain text
#: en/git-p4.txt:695
#, priority:90
msgid "All files with an uncompressed size exceeding the threshold will be processed by the large file system. By default the threshold is defined in bytes. Add the suffix k, m, or g to change the unit."
msgstr "Todos os arquivos onde seu tamanho descompactado exceda o limite, os maiores arquivos serão processados pelo sistema. A predefinição retorna para que o limite seja definido em bytes. Adicione o sufixo 'k', 'm' ou 'g' para alterar a unidade."

#. type: Labeled list
#: en/git-p4.txt:696
#, ignore-same, no-wrap, priority:90
msgid "git-p4.largeFileCompressedThreshold"
msgstr "git-p4.largeFileCompressedThreshold"

#. type: Plain text
#: en/git-p4.txt:701
#, priority:90
msgid "All files with a compressed size exceeding the threshold will be processed by the large file system. This option might slow down your clone/sync process. By default the threshold is defined in bytes. Add the suffix k, m, or g to change the unit."
msgstr "All files with a compressed size exceeding the threshold will be processed by the large file system. This option might slow down your clone/sync process. É predefinido que o limite seja definido em bytes. Adicione o sufixo 'k', 'm' ou 'g' para alterar a unidade."

#. type: Labeled list
#: en/git-p4.txt:702
#, ignore-same, no-wrap, priority:90
msgid "git-p4.largeFilePush"
msgstr "git-p4.largeFilePush"

#. type: Plain text
#: en/git-p4.txt:705
#, priority:90
msgid "Boolean variable which defines if large files are automatically pushed to a server."
msgstr "A variável booleana que define se arquivos grandes são automaticamente enviados para um servidor."

#. type: Labeled list
#: en/git-p4.txt:706
#, ignore-same, no-wrap, priority:90
msgid "git-p4.keepEmptyCommits"
msgstr "git-p4.keepEmptyCommits"

#. type: Plain text
#: en/git-p4.txt:709
#, priority:90
msgid "A changelist that contains only excluded files will be imported as an empty commit if this boolean option is set to true."
msgstr "Uma lista de alterações que contenha apenas com os arquivos que foram excluídos será importada como um commit vazia, caso esta opção estiver configurada como 'true'."

#. type: Labeled list
#: en/git-p4.txt:710
#, ignore-same, no-wrap, priority:90
msgid "git-p4.mapUser"
msgstr "git-p4.mapUser"

#. type: Plain text
#: en/git-p4.txt:713
#, priority:90
msgid "Map a P4 user to a name and email address in Git. Use a string with the following format to create a mapping:"
msgstr "Mapeie um usuário 'P4' para um nome e endereço de e-mail no Git. Para criar um mapeamento, utilize uma sequência com o seguinte formato:"

#. type: delimited block -
#: en/git-p4.txt:716
#, no-wrap, priority:90
msgid "git config --add git-p4.mapUser \"p4user = First Last <mail@address.com>\"\n"
msgstr "git config --add git-p4.mapUser \"p4user = Primeiro Último <mail@address.com>\"\n"

#. type: Plain text
#: en/git-p4.txt:720
#, priority:90
msgid "A mapping will override any user information from P4. Mappings for multiple P4 user can be defined."
msgstr "Um mapeamento substituirá quaisquer informações do usuário do 'P4'. Os mapeamentos para os vários usuários 'P4' podem ser definidos."

#. type: Title ~
#: en/git-p4.txt:722
#, no-wrap, priority:90
msgid "Submit variables"
msgstr "Envie as variáveis"

#. type: Labeled list
#: en/git-p4.txt:723
#, ignore-same, no-wrap, priority:90
msgid "git-p4.detectRenames"
msgstr "git-p4.detectRenames"

#. type: Plain text
#: en/git-p4.txt:726
#, priority:90
msgid "Detect renames.  See linkgit:git-diff[1].  This can be true, false, or a score as expected by 'git diff -M'."
msgstr "Detecte as renomeações.  Consulte linkgit:git-diff[1].  Pode ser 'true', 'false' ou uma pontuação conforme é o esperado pelo comando 'git diff -M'."

#. type: Labeled list
#: en/git-p4.txt:727
#, ignore-same, no-wrap, priority:90
msgid "git-p4.detectCopies"
msgstr "git-p4.detectCopies"

#. type: Plain text
#: en/git-p4.txt:730
#, priority:90
msgid "Detect copies.  See linkgit:git-diff[1].  This can be true, false, or a score as expected by 'git diff -C'."
msgstr "Detecta cópias.  Consulte linkgit:git-diff[1].  Pode ser 'true', 'false' ou uma pontuação conforme é o esperado pelo comando 'git diff -C'."

#. type: Labeled list
#: en/git-p4.txt:731
#, ignore-same, no-wrap, priority:90
msgid "git-p4.detectCopiesHarder"
msgstr "git-p4.detectCopiesHarder"

#. type: Plain text
#: en/git-p4.txt:733
#, priority:90
msgid "Detect copies harder.  See linkgit:git-diff[1].  A boolean."
msgstr "Detecte cópias com mais vigor.  Consulte linkgit:git-diff[1].  A boolean."

#. type: Labeled list
#: en/git-p4.txt:734
#, ignore-same, no-wrap, priority:90
msgid "git-p4.preserveUser"
msgstr "git-p4.preserveUser"

#. type: Plain text
#: en/git-p4.txt:737
#, priority:90
msgid "On submit, re-author changes to reflect the Git author, regardless of who invokes 'git p4 submit'."
msgstr "Ao enviar, recrie as alterações do usuário para refletir o autor do Git, independentemente de quem chame o comando 'git p4 submit'."

#. type: Labeled list
#: en/git-p4.txt:738
#, no-wrap, priority:90
msgid "git-p4.allowMissingP4Users"
msgstr "git-p4.allowMissingP4Users"

#. type: Plain text
#: en/git-p4.txt:742
#, priority:90
msgid "When 'preserveUser' is true, 'git p4' normally dies if it cannot find an author in the p4 user map.  This setting submits the change regardless."
msgstr "Quando 'preserveUser' for verdadeiro, o comando 'git p4' normalmente é encerrado caso não consiga encontrar um autor no mapa do usuário p4.  Esta configuração envia as alterações independentemente de qualquer coisa."

#. type: Labeled list
#: en/git-p4.txt:743
#, ignore-same, no-wrap, priority:90
msgid "git-p4.skipSubmitEdit"
msgstr "git-p4.skipSubmitEdit"

#. type: Plain text
#: en/git-p4.txt:747
#, priority:90
msgid "The submit process invokes the editor before each p4 change is submitted.  If this setting is true, though, the editing step is skipped."
msgstr "O processo de envio chama o editor antes de cada alteração no 'p4' que será enviado.  Caso esta configuração seja verdadeira, a etapa de edição será ignorada."

#. type: Labeled list
#: en/git-p4.txt:748
#, ignore-same, no-wrap, priority:90
msgid "git-p4.skipSubmitEditCheck"
msgstr "git-p4.skipSubmitEditCheck"

#. type: Plain text
#: en/git-p4.txt:752
#, priority:90
msgid "After editing the p4 change message, 'git p4' makes sure that the description really was changed by looking at the file modification time.  This option disables that test."
msgstr "Após editar a mensagem de alteração 'p4', o comando 'git p4' garante que a descrição realmente foi alterada observando a hora da modificação do arquivo.  Esta opção desativa este teste."

#. type: Labeled list
#: en/git-p4.txt:753
#, ignore-same, no-wrap, priority:90
msgid "git-p4.allowSubmit"
msgstr "git-p4.allowSubmit"

#. type: Plain text
#: en/git-p4.txt:759
#, priority:90
msgid "By default, any branch can be used as the source for a 'git p4 submit' operation.  This configuration variable, if set, permits only the named branches to be used as submit sources.  Branch names must be the short names (no \"refs/heads/\"), and should be separated by commas (\",\"), with no spaces."
msgstr "É predefinido que qualquer ramo possa ser utilizado como uma fonte para uma operação 'git p4 submit'.  Esta variável de configuração, se definida, permite que apenas os ramos informado sejam utilizados  como as fontes para envio.  Os nomes das ramificações devem ser os nomes abreviados (sem \"refs/heads/\") e devem ser separados por vírgulas (\",\") e sem espaços."

#. type: Labeled list
#: en/git-p4.txt:760
#, ignore-same, no-wrap, priority:90
msgid "git-p4.skipUserNameCheck"
msgstr "git-p4.skipUserNameCheck"

#. type: Plain text
#: en/git-p4.txt:764
#, priority:90
msgid "If the user running 'git p4 submit' does not exist in the p4 user map, 'git p4' exits.  This option can be used to force submission regardless."
msgstr "Caso o usuário executando o comando 'git p4 submit' não existir no mapa do usuário p4, o 'git p4' será encerrado.  Esta opção pode ser utilizada para impor o envio mesmo assim."

#. type: Labeled list
#: en/git-p4.txt:765
#, ignore-same, no-wrap, priority:90
msgid "git-p4.attemptRCSCleanup"
msgstr "git-p4.attemptRCSCleanup"

#. type: Plain text
#: en/git-p4.txt:770
#, priority:90
msgid "If enabled, 'git p4 submit' will attempt to cleanup RCS keywords ($Header$, etc). These would otherwise cause merge conflicts and prevent the submit going ahead. This option should be considered experimental at present."
msgstr "Caso seja ativado, o 'git p4 submit' tentará limpar as palavras-chave do RCS ($Header$, etc). Caso contrário, eles causariam conflitos na mesclagem e impediriam que o envio prossiga. no momento, esta opção deve ser considerada experimental."

#. type: Labeled list
#: en/git-p4.txt:771
#, ignore-same, no-wrap, priority:90
msgid "git-p4.exportLabels"
msgstr "git-p4.exportLabels"

#. type: Plain text
#: en/git-p4.txt:773
#, priority:90
msgid "Export Git tags to p4 labels, as per --export-labels."
msgstr "Exporte as tags Git para os rótulos p4, conforme a opção `--export-labels`."

#. type: Labeled list
#: en/git-p4.txt:774
#, ignore-same, no-wrap, priority:90
msgid "git-p4.labelExportRegexp"
msgstr "git-p4.labelExportRegexp"

#. type: Plain text
#: en/git-p4.txt:777
#, priority:90
msgid "Only p4 labels matching this regular expression will be exported. The default value is '[a-zA-Z0-9_\\-.]+$'."
msgstr "Somente rótulos p4 correspondentes a essa expressão regular serão exportados. O valor predefinido é '[a-zA-Z0-9_\\-.]+$'."

#. type: Labeled list
#: en/git-p4.txt:778
#, ignore-same, no-wrap, priority:90
msgid "git-p4.conflict"
msgstr "git-p4.conflict"

#. type: Plain text
#: en/git-p4.txt:781
#, priority:90
msgid "Specify submit behavior when a conflict with p4 is found, as per --conflict.  The default behavior is 'ask'."
msgstr "Determina o comportamento de envio quando um conflito com p4 for encontrado, conforme `--conflict`.  O comportamento predefinido é 'ask'."

#. type: Labeled list
#: en/git-p4.txt:782
#, ignore-same, no-wrap, priority:90
msgid "git-p4.disableRebase"
msgstr "git-p4.disableRebase"

#. type: Plain text
#: en/git-p4.txt:784
#, priority:90
msgid "Do not rebase the tree against p4/master following a submit."
msgstr "Não faça a reconstrução da árvore contra 'p4/master' após um envio."

#. type: Labeled list
#: en/git-p4.txt:785
#, no-wrap, priority:90
msgid "git-p4.disableP4Sync"
msgstr "git-p4.disableP4Sync"

#. type: Plain text
#: en/git-p4.txt:787
#, priority:90
msgid "Do not sync p4/master with Perforce following a submit. Implies git-p4.disableRebase."
msgstr "Não sincronize o 'p4/master' com o \"Perforce\" após o envio. Implies git-p4.disableRebase."

#. type: Title -
#: en/git-p4.txt:789
#, no-wrap, priority:90
msgid "IMPLEMENTATION DETAILS"
msgstr "DETALHES DA IMPLEMENTAÇÃO"

#. type: Plain text
#: en/git-p4.txt:791
#, priority:90
msgid "Changesets from p4 are imported using Git fast-import."
msgstr "Os conjuntos de alterações 'p4' são importados utilizando a importação rápida do Git."

#. type: Plain text
#: en/git-p4.txt:793
#, priority:90
msgid "Cloning or syncing does not require a p4 client; file contents are collected using 'p4 print'."
msgstr "A clonagem ou a sincronização não requer um cliente 'p4'; o conteúdo do arquivo é coletado utilizando 'p4 print'."

#. type: Plain text
#: en/git-p4.txt:796
#, priority:90
msgid "Submitting requires a p4 client, which is not in the same location as the Git repository.  Patches are applied, one at a time, to this p4 client and submitted from there."
msgstr "O envio requer um cliente 'p4', que não esteja no mesmo local que o repositório Git.  Os patches são aplicados, um de cada vez neste cliente 'p4' e enviados a partir daí."

#. type: Plain text
#: en/git-p4.txt:800
#, priority:90
msgid "Each commit imported by 'git p4' has a line at the end of the log message indicating the p4 depot location and change number.  This line is used by later 'git p4 sync' operations to know which p4 changes are new."
msgstr "Cada commit importado pelo 'git p4' possui uma linha no final da mensagem do registro log indicando a localização do depósito p4 e o número da alteração.  Esta linha é utilizada pelas operações posteriores do 'git p4 sync' para saber quais foram alterações do p4 são novas."

#. type: Title =
#: en/git-pack-objects.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-pack-objects(1)"
msgstr "git-pack-objects(1)"

#. type: Plain text
#: en/git-pack-objects.txt:7
#, priority:100
msgid "git-pack-objects - Create a packed archive of objects"
msgstr "git-pack-objects - Crie um arquivo compactado dos objetos"

#. type: Plain text
#: en/git-pack-objects.txt:19
#, no-wrap, priority:100
msgid ""
"'git pack-objects' [-q | --progress | --all-progress] [--all-progress-implied]\n"
"\t[--no-reuse-delta] [--delta-base-offset] [--non-empty]\n"
"\t[--local] [--incremental] [--window=<n>] [--depth=<n>]\n"
"\t[--revs [--unpacked | --all]] [--keep-pack=<pack-name>]\n"
"\t[--cruft] [--cruft-expiration=<time>]\n"
"\t[--stdout [--filter=<filter-spec>] | <base-name>]\n"
"\t[--shallow] [--keep-true-parents] [--[no-]sparse] < <object-list>\n"
msgstr ""
"'git pack-objects' [-q | --progress | --all-progress] [--all-progress-implied]\n"
"\t[--no-reuse-delta] [--delta-base-offset] [--non-empty]\n"
"\t[--local] [--incremental] [--window=<n>] [--depth=<n>]\n"
"\t[--revs [--unpacked | --all]] [--keep-pack=<nome-do-pacote>]\n"
"\t[--cruft] [--cruft-expiration=<tempo>]\n"
"\t[--stdout [--filter=<filter-spec>] | <nome-base>]\n"
"\t[--shallow] [--keep-true-parents] [--[no-]sparse] < <lista-do-objeto>\n"

#. type: Plain text
#: en/git-pack-objects.txt:26
#, priority:100
msgid "Reads list of objects from the standard input, and writes either one or more packed archives with the specified base-name to disk, or a packed archive to the standard output."
msgstr "Lê a lista dos objetos da entrada padrão e grava um ou mais arquivos compactados com o nome da base informada no disco ou num arquivo compactado na saída padrão."

#. type: Plain text
#: en/git-pack-objects.txt:32
#, priority:100
msgid "A packed archive is an efficient way to transfer a set of objects between two repositories as well as an access efficient archival format.  In a packed archive, an object is either stored as a compressed whole or as a difference from some other object.  The latter is often called a delta."
msgstr "Um arquivo compactado é uma maneira eficiente de transferir um conjunto de objetos entre dois repositórios, bem como um formato de arquivamento de acesso eficiente.  Em um arquivo compactado, ou um objeto é armazenado como um todo de forma compactada ou como uma diferença de um outro objeto.  O último é frequentemente chamado de delta."

#. type: Plain text
#: en/git-pack-objects.txt:36
#, priority:100
msgid "The packed archive format (.pack) is designed to be self-contained so that it can be unpacked without any further information. Therefore, each object that a delta depends upon must be present within the pack."
msgstr "O formato do arquivo compactado (.pack) foi projetado para ser independente, para que possa ser descompactado sem nenhuma informação adicional. Portanto, cada objeto onde um delta seja dependente, deve estar presente no pacote."

#. type: Plain text
#: en/git-pack-objects.txt:42
#, priority:100
msgid "A pack index file (.idx) is generated for fast, random access to the objects in the pack. Placing both the index file (.idx) and the packed archive (.pack) in the pack/ subdirectory of $GIT_OBJECT_DIRECTORY (or any of the directories on $GIT_ALTERNATE_OBJECT_DIRECTORIES)  enables Git to read from the pack archive."
msgstr "Um arquivo do índice do pacote (.idx) é gerado para ter um acesso rápido e aleatório aos objetos no pacote. Colocando ambos os arquivo do índice (.idx) e o arquivo compactado (.pack) no subdiretório do pack/ `$GIT_OBJECT_DIRECTORY` (ou qualquer um dos diretórios em `$GIT_ALTERNATE_OBJECT_DIRECTORIES`) permite que o Git leia o arquivo compactado."

#. type: Plain text
#: en/git-pack-objects.txt:48
#, priority:100
msgid "The 'git unpack-objects' command can read the packed archive and expand the objects contained in the pack into \"one-file one-object\" format; this is typically done by the smart-pull commands when a pack is created on-the-fly for efficient network transport by their peers."
msgstr "O comando 'git unpack-objects' pode ler o arquivo compactado e expandir os objetos existentes no pacote no formato \"um-arquivo, um-objeto\"; isso geralmente é feito pelos comandos 'smart-pull' quando um pacote é criado em tempo real por um transporte de rede eficiente pelos seus pares."

#. type: Labeled list
#: en/git-pack-objects.txt:52
#, no-wrap, priority:100
msgid "base-name"
msgstr "base-name"

#. type: Plain text
#: en/git-pack-objects.txt:59
#, priority:100
msgid "Write into pairs of files (.pack and .idx), using <base-name> to determine the name of the created file.  When this option is used, the two files in a pair are written in <base-name>-<SHA-1>.{pack,idx} files.  <SHA-1> is a hash based on the pack content and is written to the standard output of the command."
msgstr "Escreva em pares de arquivos (.pack e .idx), utilizando <nome-base> para determinar o nome do arquivo que foi criado.  Quando essa opção é utilizada, os dois arquivos num par são gravados nos arquivos <nome-base>-<SHA-1>.{pack,idx}.  O <SHA-1> é um hash baseado no conteúdo do pacote e é gravado na saída padrão do comando."

#. type: Plain text
#: en/git-pack-objects.txt:63
#, priority:100
msgid "Write the pack contents (what would have been written to .pack file) out to the standard output."
msgstr "Escreva o conteúdo do pacote (o que teria sido gravado no arquivo .pack) na saída padrão."

#. type: Labeled list
#: en/git-pack-objects.txt:64
#, ignore-same, no-wrap, priority:100
msgid "--revs"
msgstr "--revs"

#. type: Plain text
#: en/git-pack-objects.txt:72
#, priority:100
msgid "Read the revision arguments from the standard input, instead of individual object names.  The revision arguments are processed the same way as 'git rev-list' with the `--objects` flag uses its `commit` arguments to build the list of objects it outputs.  The objects on the resulting list are packed.  Besides revisions, `--not` or `--shallow <SHA-1>` lines are also accepted."
msgstr "Leia os argumentos da revisão da entrada padrão em vez dos nomes dos objetos individuais.  Os argumentos da revisão são processados da mesma maneira que o comando 'git rev-list' faz com o comando `--objects`, utiliza no seus argumentos `commit` para construir a lista dos objetos que ele gera.  Os objetos na lista resultante são compactados.  Além das revisões, as linhas `--not` ou `--shallow <SHA-1>` também são aceitas."

#. type: Labeled list
#: en/git-pack-objects.txt:73 en/rev-list-options.txt:909
#, ignore-same, no-wrap, priority:260
msgid "--unpacked"
msgstr "--unpacked"

#. type: Plain text
#: en/git-pack-objects.txt:77
#, priority:100
msgid "This implies `--revs`.  When processing the list of revision arguments read from the standard input, limit the objects packed to those that are not already packed."
msgstr "Implica no uso da opção `--revs`.  Ao processar a lista dos argumentos da revisão lidos a partir da entrada padrão, limite os objetos compactados àqueles que ainda não foram compactados."

#. type: Plain text
#: en/git-pack-objects.txt:83
#, priority:100
msgid "This implies `--revs`.  In addition to the list of revision arguments read from the standard input, pretend as if all refs under `refs/` are specified to be included."
msgstr "Implica no uso da opção `--revs`.  Além da lista de argumentos da revisão lidos na entrada padrão, finja que todas as refs em `refs/` estão definidas para serem incluídas."

#. type: Plain text
#: en/git-pack-objects.txt:88
#, priority:100
msgid "Include unasked-for annotated tags if the object they reference was included in the resulting packfile.  This can be useful to send new tags to native Git clients."
msgstr "Inclua as anotações das tags que não foram solicitadas caso o objeto a que se referirem tenha sido incluído no arquivo do pacote resultante.  Pode ser útil para enviar as novas tags para os clientes nativos do Git."

#. type: Labeled list
#: en/git-pack-objects.txt:89
#, ignore-same, no-wrap, priority:100
msgid "--stdin-packs"
msgstr "--stdin-packs"

#. type: Plain text
#: en/git-pack-objects.txt:95
#, priority:100
msgid "Read the basenames of packfiles (e.g., `pack-1234abcd.pack`)  from the standard input, instead of object names or revision arguments. The resulting pack contains all objects listed in the included packs (those not beginning with `^`), excluding any objects listed in the excluded packs (beginning with `^`)."
msgstr "Leia os nomes base dos \"packfiles\" (por exemplo, `pack-1234abcd.pack`) a partir da entrada predefinida, em vez de nomes dos objetos ou das opções da revisão. O pacote resultante contém todos os objetos listados nos pacotes incluídos (aqueles que não comecem com `^`), excluindo quaisquer objetos listados nos pacotes excluídos (que comecem com `^`)."

#. type: Plain text
#: en/git-pack-objects.txt:98
#, priority:100
msgid "Incompatible with `--revs`, or options that imply `--revs` (such as `--all`), with the exception of `--unpacked`, which is compatible."
msgstr "É incompatível com a opção `--revs`, ou opções que impliquem no uso de `--revs` (como `--all`), menos com a opção `--unpacked`, que é compatível."

#. type: Plain text
#: en/git-pack-objects.txt:109
#, priority:100
msgid "Packs unreachable objects into a separate \"cruft\" pack, denoted by the existence of a `.mtimes` file. Typically used by `git repack --cruft`. Callers provide a list of pack names and indicate which packs will remain in the repository, along with which packs will be deleted (indicated by the `-` prefix). The contents of the cruft pack are all objects not contained in the surviving packs which have not exceeded the grace period (see `--cruft-expiration` below), or which have exceeded the grace period, but are reachable from an other object which hasn't."
msgstr "Empacota objetos inacessíveis num pacote \"cruft\" (simples) separado, denotado pela existência de um arquivo `.mtimes`. É normalmente é utilizado por `git repack --cruft`. Aqueles que os invocam fornecem uma lista dos nomes dos pacotes e indicam quais os pacotes permanecerão no repositório, juntamente com quais pacotes serão excluídos (indicado pelo prefixo `-`). O conteúdo do pacote \"cruft\" são todos os objetos não contidos nos pacotes sobreviventes que não excederam o período de carência (consulte `--cruft-expiration` abaixo), ou que excederam o período de carência, mas são acessíveis a partir de um outro objeto que não o tem."

#. type: Plain text
#: en/git-pack-objects.txt:116
#, priority:100
msgid "When the input lists a pack containing all reachable objects (and lists all other packs as pending deletion), the corresponding cruft pack will contain all unreachable objects (with mtime newer than the `--cruft-expiration`) along with any unreachable objects whose mtime is older than the `--cruft-expiration`, but are reachable from an unreachable object whose mtime is newer than the `--cruft-expiration`)."
msgstr "Quando a entrada listar um pacote contendo todos os objetos alcançáveis (e listar todos os outros pacotes como exclusão pendente), o pacote \"cruft\" correspondente conterá todos os objetos inalcançáveis (com mtime mais recente que `--cruft-expiration`) junto com quaisquer objetos inalcançáveis cujos mtime seja mais antigo que o `--cruft-expiration`, e seja acessível a partir de um objeto inacessível cujo mtime seja mais recente que `--cruft-expiration`)."

#. type: Plain text
#: en/git-pack-objects.txt:122
#, priority:100
msgid "Incompatible with `--unpack-unreachable`, `--keep-unreachable`, `--pack-loose-unreachable`, `--stdin-packs`, as well as any other options which imply `--revs`. Also incompatible with `--max-pack-size`; when this option is set, the maximum pack size is not inferred from `pack.packSizeLimit`."
msgstr "É incompatível com as opções `--unpack-unreachable`, `--keep-unreachable`, `--pack-loose-unreachable`, `--stdin-packs`, bem como quaisquer outras opções que impliquem `--revs`. Também é incompatível com as opções `--max-pack-size`; quando esta opção é definida, o tamanho máximo do pacote não é inferido a partir de `pack.packSizeLimit`."

#. type: Labeled list
#: en/git-pack-objects.txt:123 en/git-repack.txt:72
#, no-wrap, priority:100
msgid "--cruft-expiration=<approxidate>"
msgstr "--cruft-expiration=<aproximado>"

#. type: Plain text
#: en/git-pack-objects.txt:127
#, priority:100
msgid "If specified, objects are eliminated from the cruft pack if they have an mtime older than `<approxidate>`. If unspecified (and given `--cruft`), then no objects are eliminated."
msgstr "Se definido, os objetos são eliminados do pacote \"cruft\" caso tenham um mtime mais antigo que `<aproximado>`. Se não for definido (e for usado `--cruft`), nenhum objeto será eliminado."

#. type: Labeled list
#: en/git-pack-objects.txt:128 en/git-repack.txt:101
#, no-wrap, priority:100
msgid "--window=<n>"
msgstr "--window=<n>"

#. type: Plain text
#: en/git-pack-objects.txt:139
#, priority:100
msgid "These two options affect how the objects contained in the pack are stored using delta compression.  The objects are first internally sorted by type, size and optionally names and compared against the other objects within --window to see if using delta compression saves space.  --depth limits the maximum delta depth; making it too deep affects the performance on the unpacker side, because delta data needs to be applied that many times to get to the necessary object."
msgstr "Essas duas opções afetam como os objetos existentes no pacote são armazenados utilizando a compactação delta.  Os objetos primeiro são classificados internamente pelo tipo, tamanho e opcionalmente os nomes e comparados com os outros objetos existentes da opção `--window` para ver se a utilização da compactação delta economiza espaço.  A opção --depth limita a profundidade máxima do delta; torná-lo muito profundo afeta o desempenho do lado do desempacotador, porque os dados delta precisam ser aplicados muitas vezes para chegar ao objeto necessário."

#. type: Plain text
#: en/git-pack-objects.txt:142 en/git-repack.txt:113
#, priority:100
msgid "The default value for --window is 10 and --depth is 50. The maximum depth is 4095."
msgstr "O valor predefinido para a opção `--window` é 10 e o `--thp` é 50. O valor da profundidade máxima é 4095."

#. type: Labeled list
#: en/git-pack-objects.txt:143 en/git-repack.txt:117
#, no-wrap, priority:100
msgid "--window-memory=<n>"
msgstr "--window-memory=<n>"

#. type: Plain text
#: en/git-pack-objects.txt:153
#, priority:100
msgid "This option provides an additional limit on top of `--window`; the window size will dynamically scale down so as to not take up more than '<n>' bytes in memory.  This is useful in repositories with a mix of large and small objects to not run out of memory with a large window, but still be able to take advantage of the large window for the smaller objects.  The size can be suffixed with \"k\", \"m\", or \"g\".  `--window-memory=0` makes memory usage unlimited.  The default is taken from the `pack.windowMemory` configuration variable."
msgstr "Esta opção fornece um limite adicional em cima da opção `--window`; o tamanho da janela será reduzido dinamicamente para não ocupar mais do que '<n>' bytes na memória.  É útil nos repositórios com uma mistura de objetos grandes e pequenos para não ficar sem memória com uma janela grande, mas ainda assim pode tirar proveito da janela grande para os objetos menores.  O tamanho pode ter o sufixo \"k\", \"m\" ou \"g\".  A opção `--window-memory=0` torna o uso da memória ilimitado.  A predefinição é obtido da variável de configuração `pack.windowMemory`."

#. type: Plain text
#: en/git-pack-objects.txt:165
#, priority:100
msgid "In unusual scenarios, you may not be able to create files larger than a certain size on your filesystem, and this option can be used to tell the command to split the output packfile into multiple independent packfiles, each not larger than the given size. The size can be suffixed with \"k\", \"m\", or \"g\". The minimum size allowed is limited to 1 MiB.  The default is unlimited, unless the config variable `pack.packSizeLimit` is set. Note that this option may result in a larger and slower repository; see the discussion in `pack.packSizeLimit`."
msgstr "Em cenários incomuns, talvez você não consiga criar arquivos maiores que um determinado tamanho no seu sistema de arquivos, esta opção pode ser utilizada para dizer ao comando para dividir o arquivo de pacotes que for gerado em vários outros arquivos de pacotes menores, cada um não maior que um tamanho determinado. O tamanho pode ter o sufixo \"k\", \"m\" ou \"g\". O tamanho mínimo permitido é limitado a 1 MiB.  A predefinição é ilimitada, a menos que a variável de configuração `pack.packSizeLimit` esteja definida. Observe que esta opção pode criar um repositório maior e mais lento; consulte a discussão em `pack.packSizeLimit`."

#. type: Labeled list
#: en/git-pack-objects.txt:166
#, ignore-same, no-wrap, priority:100
msgid "--honor-pack-keep"
msgstr "--honor-pack-keep"

#. type: Plain text
#: en/git-pack-objects.txt:170
#, priority:100
msgid "This flag causes an object already in a local pack that has a .keep file to be ignored, even if it would have otherwise been packed."
msgstr "Esta opção faz com que um objeto que já esteja num pacote local que possua um arquivo '.keep' seja ignorado, mesmo que já tivesse sido compactado."

#. type: Labeled list
#: en/git-pack-objects.txt:171 en/git-repack.txt:158
#, no-wrap, priority:100
msgid "--keep-pack=<pack-name>"
msgstr "--keep-pack=<nome-do-pacote>"

#. type: Plain text
#: en/git-pack-objects.txt:177
#, priority:100
msgid "This flag causes an object already in the given pack to be ignored, even if it would have otherwise been packed. `<pack-name>` is the pack file name without leading directory (e.g. `pack-123.pack`). The option could be specified multiple times to keep multiple packs."
msgstr "Esta opção faz com que um objeto que já esteja no pacote informado seja ignorado, mesmo que ele tivesse sido compactado. O `<nome-do-pacote>` é o nome do arquivo do pacote sem o diretório principal (por exemplo, `pack-123.pack`). A opção pode ser utilizada várias vezes para manter os vários pacotes."

#. type: Plain text
#: en/git-pack-objects.txt:181
#, priority:100
msgid "This flag causes an object already in a pack to be ignored even if it would have otherwise been packed."
msgstr "Esta opção faz com que um objeto que já esteja num pacote seja ignorado, mesmo que ele tenha sido compactado."

#. type: Plain text
#: en/git-pack-objects.txt:186
#, priority:100
msgid "This flag causes an object that is borrowed from an alternate object store to be ignored even if it would have otherwise been packed."
msgstr "Esta opção faz com que um objeto emprestado de um armazenamento de objetos alternativo seja ignorado, mesmo que já tivesse sido compactado."

#. type: Labeled list
#: en/git-pack-objects.txt:187
#, ignore-same, no-wrap, priority:100
msgid "--non-empty"
msgstr "--non-empty"

#. type: Plain text
#: en/git-pack-objects.txt:190
#, priority:100
msgid "Only create a packed archive if it would contain at least one object."
msgstr "Crie apenas um arquivo compactado caso ele contenha pelo menos um objeto."

#. type: Labeled list
#: en/git-pack-objects.txt:217
#, ignore-same, no-wrap, priority:100
msgid "--no-reuse-delta"
msgstr "--no-reuse-delta"

#. type: Plain text
#: en/git-pack-objects.txt:223
#, priority:100
msgid "When creating a packed archive in a repository that has existing packs, the command reuses existing deltas.  This sometimes results in a slightly suboptimal pack.  This flag tells the command not to reuse existing deltas but compute them from scratch."
msgstr "Ao criar um arquivo compactado num repositório que possua pacotes existentes, o comando reutiliza os deltas ja existentes.  Às vezes, isso resulta num pacote ligeiramente abaixo do ideal.  Esta opção informa ao comando para não reutilizar os deltas já existentes, mas calcule-os do zero."

#. type: Labeled list
#: en/git-pack-objects.txt:224
#, ignore-same, no-wrap, priority:100
msgid "--no-reuse-object"
msgstr "--no-reuse-object"

#. type: Plain text
#: en/git-pack-objects.txt:230
#, priority:100
msgid "This flag tells the command not to reuse existing object data at all, including non deltified object, forcing recompression of everything.  This implies --no-reuse-delta. Useful only in the obscure case where wholesale enforcement of a different compression level on the packed data is desired."
msgstr "Esta opção informa ao comando para não reutilizar os dados já existentes do objeto, incluindo os objetos não \"deltificados\", forçando a recompressão de tudo.  Implica no uso da opção `--no-reuse-delta`. Útil apenas no caso obscuro onde seja desejada a imposição de um nível de compactação seja diferente dos dados compactados."

#. type: Labeled list
#: en/git-pack-objects.txt:231
#, no-wrap, priority:100
msgid "--compression=<n>"
msgstr "--compression=<n>"

#. type: Plain text
#: en/git-pack-objects.txt:238
#, priority:100
msgid "Specifies compression level for newly-compressed data in the generated pack.  If not specified, pack compression level is determined first by pack.compression, then by core.compression, and defaults to -1, the zlib default, if neither is set.  Add --no-reuse-object if you want to force a uniform compression level on all data no matter the source."
msgstr "Define o nível de compactação para dados que foram recentemente compactados no pacote que foi gerado.  Caso não seja utilizado, o nível de compactação do pacote será determinado primeiro pelo `pack.compression`, depois pelo `core.compression` onde a predefinição retorna para -1, a predefinição do zlib, caso nenhum estiver definido.  Adicione `--no-reuse-object` quando quiser impor um nível de compactação uniforme em todos os dados, independentemente da origem."

#. type: Labeled list
#: en/git-pack-objects.txt:239
#, ignore-same, no-wrap, priority:100
msgid "--[no-]sparse"
msgstr "--[no-]sparse"

#. type: Plain text
#: en/git-pack-objects.txt:249
#, priority:100
msgid "Toggle the \"sparse\" algorithm to determine which objects to include in the pack, when combined with the \"--revs\" option. This algorithm only walks trees that appear in paths that introduce new objects.  This can have significant performance benefits when computing a pack to send a small change. However, it is possible that extra objects are added to the pack-file if the included commits contain certain types of direct renames. If this option is not included, it defaults to the value of `pack.useSparse`, which is true unless otherwise specified."
msgstr "Use o algoritmo \"esparso\" para determinar quais objetos incluir no pacote, quando combinado com a opção \"--revs\". Esse algoritmo apenas percorre as árvores que aparecem nos caminhos que introduzem os novos objetos.  Isso pode trazer benefícios significativos no desempenho para o cálculo do pacote para envio com uma pequena alteração. No entanto, é possível que os objetos extras sejam adicionados ao arquivo do pacote caso os commits inclusos contenham  certos tipos de renomeações diretas. Caso esta opção não esteja inclusa, retorna ao valor predefinido em `pack.useSparse`, que é verdadeiro a menos que se defina o contrário."

#. type: Plain text
#: en/git-pack-objects.txt:254
#, priority:100
msgid "Create a \"thin\" pack by omitting the common objects between a sender and a receiver in order to reduce network transfer. This option only makes sense in conjunction with --stdout."
msgstr "Crie um pacote \"magro\" ao omitir objetos comuns entre o remetente e o destinatário visando a redução do tráfego de rede. Esta opção só faz sentido se utilizado em conjunto com `--stdout`."

#. type: Plain text
#: en/git-pack-objects.txt:259
#, priority:100
msgid "Note: A thin pack violates the packed archive format by omitting required objects and is thus unusable by Git without making it self-contained. Use `git index-pack --fix-thin` (see linkgit:git-index-pack[1]) to restore the self-contained property."
msgstr "Observação: Um pacote leve viola o formato do arquivo compactado por omitir os objetos necessários e portanto, não pode ser utilizado pelo Git sem torná-lo independente. Para restaurar as propriedades deste pacote utilize o comando `git index-pack --fix-thin` (consulte linkgit:git-index-pack[1])."

#. type: Labeled list
#: en/git-pack-objects.txt:260
#, ignore-same, no-wrap, priority:100
msgid "--shallow"
msgstr "--shallow"

#. type: Plain text
#: en/git-pack-objects.txt:264
#, priority:100
msgid "Optimize a pack that will be provided to a client with a shallow repository.  This option, combined with --thin, can result in a smaller pack at the cost of speed."
msgstr "Otimize um pacote que será providenciado ao cliente com um repositório superficial.  Esta opção, combinada com `--thin`, pode resultar num pacote menor ao custo da velocidade."

#. type: Labeled list
#: en/git-pack-objects.txt:265
#, ignore-same, no-wrap, priority:100
msgid "--delta-base-offset"
msgstr "--delta-base-offset"

#. type: Plain text
#: en/git-pack-objects.txt:275
#, priority:100
msgid "A packed archive can express the base object of a delta as either a 20-byte object name or as an offset in the stream, but ancient versions of Git don't understand the latter.  By default, 'git pack-objects' only uses the former format for better compatibility.  This option allows the command to use the latter format for compactness.  Depending on the average delta chain length, this option typically shrinks the resulting packfile by 3-5 per-cent."
msgstr "Um arquivo compactado pode expressar o objeto base de um delta como um nome do objeto com 20 bytes ou como uma compensação no fluxo, porém as versões mais antigas do Git não entendem este último.  É predefinido que o comando 'git pack-objects' utilize apenas o formato anterior visando uma melhor compatibilidade.  Esta opção permite que o comando utilize o último formato para compactação.  Dependendo do comprimento médio da cadeia delta, esta opção normalmente reduz o pacote gerado em 3-5%."

#. type: Plain text
#: en/git-pack-objects.txt:280
#, priority:100
msgid "Note: Porcelain commands such as `git gc` (see linkgit:git-gc[1]), `git repack` (see linkgit:git-repack[1]) pass this option by default in modern Git when they put objects in your repository into pack files.  So does `git bundle` (see linkgit:git-bundle[1]) when it creates a bundle."
msgstr "Observação: É predefinido que os comandos porcelânicos como os `git gc` (consulte linkgit:git-gc[1]), `git repack` (consulte linkgit:git-repack[1]) encaminhem estas opções nas versões mais recentes do Git ao colocar os objetos em seu repositório dentro dos arquivos de pacotes.  O mesmo acontece com a opção `git bundle` (consulte linkgit:git-bundle[1]) quando é criado um pacote."

#. type: Plain text
#: en/git-pack-objects.txt:290
#, priority:100
msgid "Specifies the number of threads to spawn when searching for best delta matches.  This requires that pack-objects be compiled with pthreads otherwise this option is ignored with a warning.  This is meant to reduce packing time on multiprocessor machines.  The required amount of memory for the delta search window is however multiplied by the number of threads.  Specifying 0 will cause Git to auto-detect the number of CPU's and set the number of threads accordingly."
msgstr "Especifica a quantidade de threads a serem gerados durante a pesquisa das melhores correspondências delta.  Isso requer que os objetos do pacote sejam compilados com pthreads, caso contrário esta opção será ignorada e exibindo um aviso.  Isso visa reduzir o tempo do empacotamento em máquinas com multiprocessados.  A quantidade de memória necessária para a janela de pesquisa delta é multiplicada pela quantidade de threads.  Definindo como 0 faz com que o Git detecte automaticamente a quantidade de CPUs e defina a quantidade de threads proporcionalmente."

#. type: Labeled list
#: en/git-pack-objects.txt:296
#, ignore-same, no-wrap, priority:100
msgid "--keep-true-parents"
msgstr "--keep-true-parents"

#. type: Plain text
#: en/git-pack-objects.txt:299
#, priority:100
msgid "With this option, parents that are hidden by grafts are packed nevertheless."
msgstr "Com esta opção, as origens são ocultas pelos enxertos são embalados mesmo assim."

#. type: Plain text
#: en/git-pack-objects.txt:304
#, priority:100
msgid "Requires `--stdout`.  Omits certain objects (usually blobs) from the resulting packfile.  See linkgit:git-rev-list[1] for valid `<filter-spec>` forms."
msgstr "Requer `--stdout`.  Omite certos objetos (em geral, bolhas) do pacote resultante.  Para formas válidas de `<filter-spec>` consulte linkgit:git-rev-list[1]."

#. type: Labeled list
#: en/git-pack-objects.txt:305 en/rev-list-options.txt:973
#, ignore-same, no-wrap, priority:260
msgid "--no-filter"
msgstr "--no-filter"

#. type: Plain text
#: en/git-pack-objects.txt:307
#, priority:100
msgid "Turns off any previous `--filter=` argument."
msgstr "Desliga qualquer argumento `--filter=` anterior."

#. type: Labeled list
#: en/git-pack-objects.txt:308 en/rev-list-options.txt:985
#, no-wrap, priority:260
msgid "--missing=<missing-action>"
msgstr "--missing=<missing-action>"

#. type: Plain text
#: en/git-pack-objects.txt:311 en/rev-list-options.txt:988
#, priority:260
msgid "A debug option to help with future \"partial clone\" development.  This option specifies how missing objects are handled."
msgstr "Uma opção de depuração para ajudar no desenvolvimento futuro do \"clone parcial\".  Esta opção especifica como os objetos ausentes são manipulados."

#. type: Plain text
#: en/git-pack-objects.txt:316
#, priority:100
msgid "The form '--missing=error' requests that pack-objects stop with an error if a missing object is encountered.  If the repository is a partial clone, an attempt to fetch missing objects will be made before declaring them missing.  This is the default action."
msgstr "A opção `--missing=error` solicita que os objetos do pacote parem com um erro caso um objeto perdido seja encontrado.  Caso o repositório seja um clone parcial, uma tentativa será feita para buscar os objetos desaparecidos antes de declará-los como desaparecidos.  Esta é a ação predefinida."

#. type: Plain text
#: en/git-pack-objects.txt:320
#, priority:100
msgid "The form '--missing=allow-any' will allow object traversal to continue if a missing object is encountered.  No fetch of a missing object will occur.  Missing objects will silently be omitted from the results."
msgstr "O formulário '--missing=allow-any' permitirá que a travessia do objeto continue caso um objeto ausente seja encontrado.  Não ocorrerá nenhuma busca em um objeto ausente.  Os objetos ausentes serão omitidos silenciosamente dos resultados."

#. type: Plain text
#: en/git-pack-objects.txt:325
#, priority:100
msgid "The form '--missing=allow-promisor' is like 'allow-any', but will only allow object traversal to continue for EXPECTED promisor missing objects.  No fetch of a missing object will occur.  An unexpected missing object will raise an error."
msgstr "A opção '--missing=allow-promisor' é como um `allow-any`, porém só será permitido que a travessia dos objetos continue para os objetos ausentes que forem PREVISTOS. Não ocorrerá nenhuma busca em um objeto ausente. Um objeto que se perdeu de forma inesperada irão provocar um erro."

#. type: Labeled list
#: en/git-pack-objects.txt:326 en/rev-list-options.txt:1003
#, ignore-same, no-wrap, priority:260
msgid "--exclude-promisor-objects"
msgstr "--exclude-promisor-objects"

#. type: Plain text
#: en/git-pack-objects.txt:332
#, priority:100
msgid "Omit objects that are known to be in the promisor remote.  (This option has the purpose of operating only on locally created objects, so that when we repack, we still maintain a distinction between locally created objects [without .promisor] and objects from the promisor remote [with .promisor].)  This is used with partial clone."
msgstr "Omite os objetos que se sabe estar no ramo remoto.  (Esta opção tem o objetivo de operar apenas nos objetos criados localmente, para que, quando forem reempacotados, ainda mantenhamos uma distinção entre os objetos que foram criados localmente [sem .promisor] e os objetos \"promisor\" remoto [com .promisor].) Isso é utilizado com clone parcial."

#. type: Labeled list
#: en/git-pack-objects.txt:333 en/git-repack.txt:172
#, ignore-same, no-wrap, priority:100
msgid "--keep-unreachable"
msgstr "--keep-unreachable"

#. type: Plain text
#: en/git-pack-objects.txt:338
#, priority:100
msgid "Objects unreachable from the refs in packs named with --unpacked= option are added to the resulting pack, in addition to the reachable objects that are not in packs marked with *.keep files. This implies `--revs`."
msgstr "Os objetos inacessíveis das refs nos pacotes informado com a opção `--unpacked=` são adicionados ao pacote gerado, além dos objetos acessíveis que não estão nos pacotes marcados com arquivos '*.keep'. Implica no uso da opção `--revs`."

#. type: Labeled list
#: en/git-pack-objects.txt:339
#, ignore-same, no-wrap, priority:100
msgid "--pack-loose-unreachable"
msgstr "--pack-loose-unreachable"

#. type: Plain text
#: en/git-pack-objects.txt:342
#, priority:100
msgid "Pack unreachable loose objects (and their loose counterparts removed). This implies `--revs`."
msgstr "Embale os objetos soltos que estejam inacessíveis (e as suas contrapartes soltas que foram removidas). Implica no uso da opção `--revs`."

#. type: Labeled list
#: en/git-pack-objects.txt:343
#, ignore-same, no-wrap, priority:100
msgid "--unpack-unreachable"
msgstr "--unpack-unreachable"

#. type: Plain text
#: en/git-pack-objects.txt:345
#, priority:100
msgid "Keep unreachable objects in loose form. This implies `--revs`."
msgstr "Mantenha os objetos inacessíveis de forma solta. Implica no uso da opção `--revs`."

#. type: Labeled list
#: en/git-pack-objects.txt:346 en/git-repack.txt:179
#, ignore-same, no-wrap, priority:100
msgid "--delta-islands"
msgstr "--delta-islands"

#. type: Plain text
#: en/git-pack-objects.txt:349
#, priority:100
msgid "Restrict delta matches based on \"islands\". See DELTA ISLANDS below."
msgstr "Restrinja a coincidência delta com base nas \"ilhas\". Consulte ILHAS DELTA abaixo."

#. type: Title -
#: en/git-pack-objects.txt:352
#, no-wrap, priority:100
msgid "DELTA ISLANDS"
msgstr "ILHAS DELTA"

#. type: Plain text
#: en/git-pack-objects.txt:364
#, priority:100
msgid "When possible, `pack-objects` tries to reuse existing on-disk deltas to avoid having to search for new ones on the fly. This is an important optimization for serving fetches, because it means the server can avoid inflating most objects at all and just send the bytes directly from disk. This optimization can't work when an object is stored as a delta against a base which the receiver does not have (and which we are not already sending). In that case the server \"breaks\" the delta and has to find a new one, which has a high CPU cost. Therefore it's important for performance that the set of objects in on-disk delta relationships match what a client would fetch."
msgstr "Quando possível, o `pack-objects` tenta reutilizar os deltas existentes no disco para evitar ter que procurar por novos em tempo real. Esta é uma otimização importante a serviço das buscas (fetch), significa que o servidor pode evitar inflar a maioria dos objetos e enviar os bytes diretamente do disco. Esta otimização pode não funcionar quando um objeto é armazenado como um delta numa base onde o destinatário não o possua (e que não estamos enviando ainda). Nesse caso, o servidor \"quebra\" o delta e precisa encontrar um novo, ao custo de um alto processamento. Portanto, é importante para o desempenho que o conjunto dos objetos delta nos relacionamentos com o disco corresponda ao que um cliente buscaria."

#. type: Plain text
#: en/git-pack-objects.txt:369
#, priority:100
msgid "In a normal repository, this tends to work automatically. The objects are mostly reachable from the branches and tags, and that's what clients fetch. Any deltas we find on the server are likely to be between objects the client has or will have."
msgstr "Em um repositório normal, isso tende a funcionar de forma automática. Os objetos são acessíveis principalmente a partir dos ramos e tags e é isso que os clientes buscam. Qualquer delta que encontrarmos no servidor, provavelmente estará entre os objetos que o cliente possui ou terá."

#. type: Plain text
#: en/git-pack-objects.txt:379
#, priority:100
msgid "But in some repository setups, you may have several related but separate groups of ref tips, with clients tending to fetch those groups independently. For example, imagine that you are hosting several \"forks\" of a repository in a single shared object store, and letting clients view them as separate repositories through `GIT_NAMESPACE` or separate repos using the alternates mechanism. A naive repack may find that the optimal delta for an object is against a base that is only found in another fork. But when a client fetches, they will not have the base object, and we'll have to find a new delta on the fly."
msgstr "Porém em algumas configurações do repositório, é possível ter vários grupos relacionados, mas separados, das dicas de referência, com os clientes tendendo a buscar estes grupos de forma independente. Por exemplo, imagine que você esteja hospedando várias \"bifurcações\" de um repositório num único armazenamento dos objetos compartilhados e permitindo que os clientes os visualizem como repositórios separados por meio de `GIT_NAMESPACE` ou repositórios separados, utilizando o mecanismo alternativo. Um um simples reempacotamento pode achar que o delta ideal para um objeto está contra uma base que é encontrada apenas em outra bifurcação. Porém quando um cliente realiza uma busca, ele não terá o objeto base e teremos que encontrar um novo delta em tempo real."

#. type: Plain text
#: en/git-pack-objects.txt:385
#, priority:100
msgid "A similar situation may exist if you have many refs outside of `refs/heads/` and `refs/tags/` that point to related objects (e.g., `refs/pull` or `refs/changes` used by some hosting providers). By default, clients fetch only heads and tags, and deltas against objects found only in those other groups cannot be sent as-is."
msgstr "Uma situação semelhante pode existir caso você tenha muitos refs fora de `refs/heads/` e `refs/tags/` que apontam para os objetos relacionados (por exemplo, `refs/pull` ou `refs/changes` utilizados por alguns provedores de hospedagem). É predefinido que os clientes busquem apenas os cabeçalhos e tags, os deltas nos objetos encontrados apenas nesses outros grupos não podem ser enviados como estão."

#. type: Plain text
#: en/git-pack-objects.txt:393
#, priority:100
msgid "Delta islands solve this problem by allowing you to group your refs into distinct \"islands\". Pack-objects computes which objects are reachable from which islands, and refuses to make a delta from an object `A` against a base which is not present in all of `A`'s islands. This results in slightly larger packs (because we miss some delta opportunities), but guarantees that a fetch of one island will not have to recompute deltas on the fly due to crossing island boundaries."
msgstr "As ilhas Delta resolvem este problema, permitindo que você agrupe as suas refs em \"ilhas\" distintas. Os pacotes de objetos calcula quais os objetos estão acessíveis a partir das ilhas e recusando-se a fazer um delta de um objeto `A` contra uma base que não está presente em todas as ilhas `A`. Isso resulta em pacotes um pouco maiores (porque perdemos algumas oportunidades delta), mas garante que uma busca por uma ilha não tenha que recalcular os deltas em tempo real, devido ao cruzamento dos limites da ilha."

#. type: Plain text
#: en/git-pack-objects.txt:399
#, priority:100
msgid "When repacking with delta islands the delta window tends to get clogged with candidates that are forbidden by the config. Repacking with a big --window helps (and doesn't take as long as it otherwise might because we can reject some object pairs based on islands before doing any computation on the content)."
msgstr "Ao realizar um reempacotamento com ilhas delta, a janela delta tende a ficar entupida com os candidatos barrados pela configuração. O reempacotamento com uma grande `--window` ajuda (e não leva tanto tempo quanto poderia, porque podemos rejeitar alguns pares de objetos com base nas ilhas antes de realizar qualquer cálculo no conteúdo)."

#. type: Plain text
#: en/git-pack-objects.txt:403
#, priority:100
msgid "Islands are configured via the `pack.island` option, which can be specified multiple times. Each value is a left-anchored regular expressions matching refnames. For example:"
msgstr "As ilhas são configuradas através da opção `pack.island`, que pode ser utilizada várias vezes. Cada valor é uma expressão regular ancorada à esquerda que coincidam com \"refnames\". Por exemplo:"

#. type: delimited block -
#: en/git-pack-objects.txt:408
#, no-wrap, priority:100
msgid ""
"[pack]\n"
"island = refs/heads/\n"
"island = refs/tags/\n"
msgstr ""
"[pack]\n"
"island = refs/heads/\n"
"island = refs/tags/\n"

#. type: Plain text
#: en/git-pack-objects.txt:415
#, priority:100
msgid "puts heads and tags into an island (whose name is the empty string; see below for more on naming). Any refs which do not match those regular expressions (e.g., `refs/pull/123`) is not in any island. Any object which is reachable only from `refs/pull/` (but not heads or tags) is therefore not a candidate to be used as a base for `refs/heads/`."
msgstr "coloca os cabeçalhos e as tags numa ilha (cujo nome é um texto vazio; veja abaixo para conhecer mais nomenclaturas). Qualquer refs que não coincida com estas expressões regulares (`refs/pull/123` por exemplo) não está em nenhuma ilha. Qualquer objeto acessível apenas a partir do `refs/pull/` (mas não nos cabeçalhos ou nas tags) não é portanto, um candidato a ser utilizado como base para `refs/heads/`."

#. type: Plain text
#: en/git-pack-objects.txt:423
#, priority:100
msgid "Refs are grouped into islands based on their \"names\", and two regexes that produce the same name are considered to be in the same island. The names are computed from the regexes by concatenating any capture groups from the regex, with a '-' dash in between. (And if there are no capture groups, then the name is the empty string, as in the above example.) This allows you to create arbitrary numbers of islands. Only up to 14 such capture groups are supported though."
msgstr "Os árbitros são agrupados em ilhas com base nos seus \"nomes\" e duas expressões regulares que produzam o mesmo nome, são consideradas para estarem na mesma ilha. Os nomes são calculados a partir das expressões regulares concatenando quaisquer grupos de captura da expressão regular, com um traço '-' no meio. (E caso não haja grupos de captura, o nome será uma sequência de texto vazia, como no exemplo acima.) Isso permite criar números arbitrários das ilhas. Apenas até 14 desses grupos de captura são compatíveis."

#. type: Plain text
#: en/git-pack-objects.txt:427
#, priority:100
msgid "For example, imagine you store the refs for each fork in `refs/virtual/ID`, where `ID` is a numeric identifier. You might then configure:"
msgstr "Por exemplo, imagine que você armazene as refs para cada bifurcação em `refs/virtual/ID`, onde o `ID` é um identificador numérico. Você pode então configurar:"

#. type: delimited block -
#: en/git-pack-objects.txt:433
#, no-wrap, priority:100
msgid ""
"[pack]\n"
"island = refs/virtual/([0-9]+)/heads/\n"
"island = refs/virtual/([0-9]+)/tags/\n"
"island = refs/virtual/([0-9]+)/(pull)/\n"
msgstr ""
"[pack]\n"
"island = refs/virtual/([0-9]+)/heads/\n"
"island = refs/virtual/([0-9]+)/tags/\n"
"island = refs/virtual/([0-9]+)/(pull)/\n"

#. type: Plain text
#: en/git-pack-objects.txt:438
#, priority:100
msgid "That puts the heads and tags for each fork in their own island (named \"1234\" or similar), and the pull refs for each go into their own \"1234-pull\"."
msgstr "Coloca os cabeçalhos e as tags de cada bifurcação na sua própria ilha (chamada \"1234\" ou similar), e as refs do \"pull\" de cada um entram no seu próprio \"1234-pull\"."

#. type: Plain text
#: en/git-pack-objects.txt:442
#, priority:100
msgid "Note that we pick a single island for each regex to go into, using \"last one wins\" ordering (which allows repo-specific config to take precedence over user-wide config, and so forth)."
msgstr "Observe que escolhemos uma única ilha para cada regex, utilizando a ordem \"last one wins\" ou \"o último vence\" (que permite que determinada configuração do repo tenha precedência sobre a configuração do usuário e assim por diante)."

#. type: Plain text
#: en/git-pack-objects.txt:449 en/git-repack.txt:220
#, priority:100
msgid "Various configuration variables affect packing, see linkgit:git-config[1] (search for \"pack\" and \"delta\")."
msgstr "As várias variáveis de configuração afetam o empacotamento, consulte linkgit:git-config[1] (pesquise por \"pack\" e \"delta\")."

#. type: Plain text
#: en/git-pack-objects.txt:453
#, priority:100
msgid "Notably, delta compression is not used on objects larger than the `core.bigFileThreshold` configuration variable and on files with the attribute `delta` set to false."
msgstr "Notavelmente, a compressão delta não é usada nos objetos maiores que a variável de configuração `core.bigFileThreshold` e nos arquivos com o atributo` delta` definido como falso."

#. type: Plain text
#: en/git-pack-objects.txt:459
#, ignore-same, priority:100
msgid "linkgit:git-rev-list[1] linkgit:git-repack[1] linkgit:git-prune-packed[1]"
msgstr "linkgit:git-rev-list[1] linkgit:git-repack[1] linkgit:git-prune-packed[1]"

#. type: Title =
#: en/git-pack-redundant.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-pack-redundant(1)"
msgstr "git-pack-redundant(1)"

#. type: Plain text
#: en/git-pack-redundant.txt:7
#, priority:100
msgid "git-pack-redundant - Find redundant pack files"
msgstr "git-pack-redundant - Encontre os arquivos dos pacotes redundantes"

#. type: Plain text
#: en/git-pack-redundant.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git pack-redundant' [ --verbose ] [ --alt-odb ] ( --all | <pack-filename>... )\n"
msgstr "'git pack-redundant' [ --verbose ] [ --alt-odb ] ( --all | <nome-do-arquivo-pacote>... >\n"

#. type: Plain text
#: en/git-pack-redundant.txt:19
#, priority:100
msgid "This program computes which packs in your repository are redundant. The output is suitable for piping to `xargs rm` if you are in the root of the repository."
msgstr "Este programa calcula quais os pacotes no seu repositório são redundantes. A saída é adequada para canalizar para `xargs rm` caso esteja na raiz do repositório."

#. type: Plain text
#: en/git-pack-redundant.txt:24
#, priority:100
msgid "'git pack-redundant' accepts a list of objects on standard input. Any objects given will be ignored when checking which packs are required. This makes the following command useful when wanting to remove packs which contain unreachable objects."
msgstr "'git pack-redundant' aceita uma lista de objetos na entrada padrão. Quaisquer objetos informado serão ignorados durante a verificação de quais pacotes são necessários. Isso torna o comando a seguir útil quando se quer remover os pacotes que contenha objetos que estejam inacessíveis."

#. type: Plain text
#: en/git-pack-redundant.txt:27
#, priority:100
msgid "git fsck --full --unreachable | cut -d ' ' -f3 | \\ git pack-redundant --all | xargs rm"
msgstr "git fsck --full --unreachable | cut -d ' ' -f3 | \\ git pack-redundant --all | xargs rm"

#. type: Plain text
#: en/git-pack-redundant.txt:34
#, priority:100
msgid "Processes all packs. Any filenames on the command line are ignored."
msgstr "Processa todos os pacotes. Todos os nomes dos arquivos na linha de comando são ignorados."

#. type: Labeled list
#: en/git-pack-redundant.txt:35
#, ignore-same, no-wrap, priority:100
msgid "--alt-odb"
msgstr "--alt-odb"

#. type: Plain text
#: en/git-pack-redundant.txt:38
#, priority:100
msgid "Don't require objects present in packs from alternate object directories to be present in local packs."
msgstr "Não exija que objetos presentes nos pacotes dos diretórios dos objetos alternativos estejam presentes nos pacotes locais."

#. type: Plain text
#: en/git-pack-redundant.txt:41
#, priority:100
msgid "Outputs some statistics to stderr. Has a small performance penalty."
msgstr "Produz algumas estatísticas para o stderr. Tem uma pequena penalidade de desempenho."

#. type: Plain text
#: en/git-pack-redundant.txt:47
#, ignore-same, priority:100
msgid "linkgit:git-pack-objects[1] linkgit:git-repack[1] linkgit:git-prune-packed[1]"
msgstr "linkgit:git-pack-objects[1] linkgit:git-repack[1] linkgit:git-prune-packed[1]"

#. type: Title =
#: en/git-pack-refs.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-pack-refs(1)"
msgstr "git-pack-refs(1)"

#. type: Plain text
#: en/git-pack-refs.txt:7
#, priority:100
msgid "git-pack-refs - Pack heads and tags for efficient repository access"
msgstr "git-pack-refs - Embale os cabeçalhos e a tags do pacote para acesso eficiente ao repositório"

#. type: Plain text
#: en/git-pack-refs.txt:12
#, no-wrap, priority:100
msgid "'git pack-refs' [--all] [--no-prune]\n"
msgstr "'git pack-refs' [--all] [--no-prune]\n"

#. type: Plain text
#: en/git-pack-refs.txt:24
#, priority:100
msgid "Traditionally, tips of branches and tags (collectively known as 'refs') were stored one file per ref in a (sub)directory under `$GIT_DIR/refs` directory.  While many branch tips tend to be updated often, most tags and some branch tips are never updated.  When a repository has hundreds or thousands of tags, this one-file-per-ref format both wastes storage and hurts performance."
msgstr "Tradicionalmente, o cume dos ramos e as tags (coletivamente conhecidas como 'refs') eram armazenadas um arquivo por \"ref\" num diretório (sub) no diretório `$GIT_DIR/refs`.  Enquanto muitos cumes dos ramos tendem a ser atualizadas com frequência, a maioria das tags e alguns cumes dos ramos nunca são atualizadas.  Quando um repositório possui centenas ou milhares de tags, este formato de um arquivo por referência desperdiça armazenamento e prejudica o desempenho."

#. type: Plain text
#: en/git-pack-refs.txt:31
#, priority:100
msgid "This command is used to solve the storage and performance problem by storing the refs in a single file, `$GIT_DIR/packed-refs`.  When a ref is missing from the traditional `$GIT_DIR/refs` directory hierarchy, it is looked up in this file and used if found."
msgstr "Este comando é utilizado para resolver o problema de armazenamento e desempenho, armazenando as refs num único arquivo, `$GIT_DIR/compact-refs`.  Quando uma \"ref\" está ausente na hierarquia dos diretórios tradicionais `$GIT_DIR/refs`, ele é procurado neste arquivo e utilizado caso seja encontrado."

#. type: Plain text
#: en/git-pack-refs.txt:34
#, priority:100
msgid "Subsequent updates to branches always create new files under `$GIT_DIR/refs` directory hierarchy."
msgstr "Atualizações subsequentes nos ramos sempre criam novos arquivos na hierarquia de diretórios `$GIT_DIR/refs`."

#. type: Plain text
#: en/git-pack-refs.txt:43
#, priority:100
msgid "A recommended practice to deal with a repository with too many refs is to pack its refs with `--all` once, and occasionally run `git pack-refs`.  Tags are by definition stationary and are not expected to change.  Branch heads will be packed with the initial `pack-refs --all`, but only the currently active branch heads will become unpacked, and the next `pack-refs` (without `--all`) will leave them unpacked."
msgstr "Uma prática recomendada para lidar com um repositório com muitas refs é empacotar as suas refs com `--all` uma vez e ocasionalmente executar o comando `git pack-refs`.  As tags são estacionárias por definição e não devem mudar.  Os cabeçalhos da ramificação serão empacotadas com os `pack-refs --all` iniciais, mas apenas os cabeçalhos da ramificação atualmente ativas, serão descompactadas e as próximas `pack-refs` (sem a opção `--all`) as deixarão descompactadas."

#. type: Plain text
#: en/git-pack-refs.txt:56
#, priority:100
msgid "The command by default packs all tags and refs that are already packed, and leaves other refs alone.  This is because branches are expected to be actively developed and packing their tips does not help performance.  This option causes branch tips to be packed as well.  Useful for a repository with many branches of historical interests."
msgstr "É predefinido que o comando empacote todas as \"tags\" e refs que já estão empacotados e deixe as outras refs em paz.  Isso ocorre porque os ramos devem ser desenvolvidas ativamente e embalar as suas pontas não ajudam no desempenho.  Essa opção também faz com que os cumes dos ramos sejam compactadas.  Útil para um repositório com muitos ramos de interesses histórico."

#. type: Plain text
#: en/git-pack-refs.txt:61
#, priority:100
msgid "The command usually removes loose refs under `$GIT_DIR/refs` hierarchy after packing them.  This option tells it not to."
msgstr "O comando normalmente remove as refs soltas na hierarquia `$GIT_DIR/refs` após empacotá-los.  Esta opção diz para não fazê-lo."

#. type: Plain text
#: en/git-pack-refs.txt:69
#, priority:100
msgid "Older documentation written before the packed-refs mechanism was introduced may still say things like \".git/refs/heads/<branch> file exists\" when it means \"branch <branch> exists\"."
msgstr "A documentação mais antiga escrita antes da introdução do mecanismo \"packed-refs\" ainda pode dizer coisas como \"o arquivo .git/refs/heads/<ramo> existe\" quando significa \"o ramo <ramo> existe\"."

#. type: Title =
#: en/git-patch-id.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-patch-id(1)"
msgstr "git-patch-id(1)"

#. type: Plain text
#: en/git-patch-id.txt:7
#, priority:100
msgid "git-patch-id - Compute unique ID for a patch"
msgstr "git-patch-id - Calcula o ID exclusivo de um patch"

#. type: Plain text
#: en/git-patch-id.txt:12
#, no-wrap, priority:100
msgid "'git patch-id' [--stable | --unstable]\n"
msgstr "'git patch-id' [--stable | --unstable]\n"

#. type: Plain text
#: en/git-patch-id.txt:16
#, priority:100
msgid "Read a patch from the standard input and compute the patch ID for it."
msgstr "Carregue um patch da entrada padrão e calcule o ID para ele."

#. type: Plain text
#: en/git-patch-id.txt:21
#, priority:100
msgid "A \"patch ID\" is nothing but a sum of SHA-1 of the file diffs associated with a patch, with whitespace and line numbers ignored.  As such, it's \"reasonably stable\", but at the same time also reasonably unique, i.e., two patches that have the same \"patch ID\" are almost guaranteed to be the same thing."
msgstr "Um \"ID do patch\" nada mais é do que uma soma do SHA-1 das diferenças dos arquivos associados com um patch, com espaço e os números da linha ignorados.  Como tal, é \"razoavelmente estável\", porém ao mesmo tempo também é razoavelmente único, ou seja, dois patches que têm o mesmo \"ID de patch\" quase garantem que sejam o mesmo."

#. type: Plain text
#: en/git-patch-id.txt:23
#, priority:100
msgid "IOW, you can use this thing to look for likely duplicate commits."
msgstr "IOW, você pode utilizar isso para procurar prováveis commits duplicados."

#. type: Plain text
#: en/git-patch-id.txt:29
#, priority:100
msgid "When dealing with 'git diff-tree' output, it takes advantage of the fact that the patch is prefixed with the object name of the commit, and outputs two 40-byte hexadecimal strings.  The first string is the patch ID, and the second string is the commit ID.  This can be used to make a mapping from patch ID to commit ID."
msgstr "Ao lidar com a saída 'git diff-tree', tira proveito do fato que o patch é prefixado com o nome do objeto do commit e gera duas sequências hexadecimais com 40 bytes.  O primeira cadeia de caracteres é o ID do patch e a segundo é o ID do commit.  Isso pode ser utilizado para fazer um mapeamento do ID do patch para confirmar o ID."

#. type: Labeled list
#: en/git-patch-id.txt:33
#, ignore-same, no-wrap, priority:100
msgid "--stable"
msgstr "--stable"

#. type: Plain text
#: en/git-patch-id.txt:35
#, priority:100
msgid "Use a \"stable\" sum of hashes as the patch ID. With this option:"
msgstr "Use uma soma \"stable\" (estável) de hashes como o ID do patch. Com esta opção:"

#. type: Plain text
#: en/git-patch-id.txt:41
#, priority:100
msgid "Reordering file diffs that make up a patch does not affect the ID.  In particular, two patches produced by comparing the same two trees with two different settings for \"-O<orderfile>\" result in the same patch ID signature, thereby allowing the computed result to be used as a key to index some meta-information about the change between the two trees;"
msgstr "Reordene as diferenças do arquivo que compõem um patch não afetam o ID.  Em particular, os dois patches gerados pela comparação das mesmas duas árvores com as duas configurações diferentes para \"-O<ordem-do-arquivo>\" resultam na mesma assinatura ID do patch, permitindo que o resultado computado seja utilizado como uma chave para indexar algumas metainformações sobre as alterações entre as duas árvores;"

#. type: Plain text
#: en/git-patch-id.txt:47
#, priority:100
msgid "Result is different from the value produced by git 1.9 and older or produced when an \"unstable\" hash (see --unstable below) is configured - even when used on a diff output taken without any use of \"-O<orderfile>\", thereby making existing databases storing such \"unstable\" or historical patch-ids unusable."
msgstr "O resultado é diferente do valor produzido pelo git 1.9 e mais antigo ou produzido quando um hash \"instável\" (consulte `--unstable` abaixo) é configurado - mesmo quando utilizado com um diff gerado obtido sem o uso de \"-O<ordem-do-arquivo>\", tornando, assim, os bancos de dados existentes armazenando esses IDs \"instáveis\" ou os históricos com correções inúteis."

#. type: Plain text
#: en/git-patch-id.txt:49
#, no-wrap, priority:100
msgid "This is the default if patchid.stable is set to true.\n"
msgstr "Esta é a predefinição caso o `patchid.stable` estiver definido como 'true'.\n"

#. type: Labeled list
#: en/git-patch-id.txt:50
#, ignore-same, no-wrap, priority:100
msgid "--unstable"
msgstr "--unstable"

#. type: Plain text
#: en/git-patch-id.txt:56
#, priority:100
msgid "Use an \"unstable\" hash as the patch ID. With this option, the result produced is compatible with the patch-id value produced by git 1.9 and older.  Users with pre-existing databases storing patch-ids produced by git 1.9 and older (who do not deal with reordered patches) may want to use this option."
msgstr "Use um hash \"unstable\" (instável) como o ID do patch. Com esta opção, o resultado produzido é compatível com o valor da ID do patch produzido pelo git 1.9 e anterior.  Usuários com bancos de dados preexistentes que armazenam as IDs dos patches produzidos pelo git 1.9 e anteriores (que não lidam com os patches reordenados) podem querer usar esta opção."

#. type: Plain text
#: en/git-patch-id.txt:58
#, priority:100
msgid "This is the default."
msgstr "Esta é a predefinição."

#. type: Title =
#: en/git-prune-packed.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-prune-packed(1)"
msgstr "git-prune-packed(1)"

#. type: Plain text
#: en/git-prune-packed.txt:7
#, priority:100
msgid "git-prune-packed - Remove extra objects that are already in pack files"
msgstr "git-prune-embalado - Remove os objetos extras que já estão nos pacotes dos arquivos"

#. type: Plain text
#: en/git-prune-packed.txt:13
#, no-wrap, priority:100
msgid "'git prune-packed' [-n|--dry-run] [-q|--quiet]\n"
msgstr "'git prune-packed' [-n|--dry-run] [-q|--quiet]\n"

#. type: Plain text
#: en/git-prune-packed.txt:19
#, priority:100
msgid "This program searches the `$GIT_OBJECT_DIRECTORY` for all objects that currently exist in a pack file as well as the independent object directories."
msgstr "Este programa procura no `$GIT_OBJECT_DIRECTORY` todos os objetos que existem atualmente num pacote de arquivo, bem como os diretórios dos objetos independentes."

#. type: Plain text
#: en/git-prune-packed.txt:21
#, priority:100
msgid "All such extra objects are removed."
msgstr "Todos estes objetos extras são removidos."

#. type: Plain text
#: en/git-prune-packed.txt:24 en/git-repack.txt:24
#, priority:100
msgid "A pack is a collection of objects, individually compressed, with delta compression applied, stored in a single file, with an associated index file."
msgstr "Um pacote é uma coleção de objetos compactados de forma individual com a compactação delta aplicada, armazenados num único arquivo e com um arquivo do índice associado a ele."

#. type: Plain text
#: en/git-prune-packed.txt:27 en/git-repack.txt:27
#, priority:100
msgid "Packs are used to reduce the load on mirror systems, backup engines, disk storage, etc."
msgstr "Os pacotes são utilizados para reduzir a carga nos sistemas de espelho, mecanismos de backup, armazenamento em disco, etc."

#. type: Plain text
#: en/git-prune-packed.txt:35
#, priority:100
msgid "Don't actually remove any objects, only show those that would have been removed."
msgstr "Na verdade, não remova nenhum objeto, apenas exiba aqueles que teriam sido removidos."

#. type: Plain text
#: en/git-prune-packed.txt:39
#, priority:100
msgid "Squelch the progress indicator."
msgstr "Silencie o indicador de progresso."

#. type: Plain text
#: en/git-prune-packed.txt:44
#, ignore-same, priority:100
msgid "linkgit:git-pack-objects[1] linkgit:git-repack[1]"
msgstr "linkgit:git-pack-objects[1] linkgit:git-repack[1]"

#. type: Title =
#: en/git-prune.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-prune(1)"
msgstr "git-prune(1)"

#. type: Plain text
#: en/git-prune.txt:7
#, priority:100
msgid "git-prune - Prune all unreachable objects from the object database"
msgstr "git-prune - Remove todos os objetos inacessíveis do banco de dados de objetos"

#. type: Plain text
#: en/git-prune.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git prune' [-n] [-v] [--progress] [--expire <time>] [--] [<head>...]\n"
msgstr "'git prune' [-n] [-v] [--progress] [--expire <time>] [--] [<head>...]\n"

#. type: Plain text
#: en/git-prune.txt:19
#, priority:100
msgid "In most cases, users should run 'git gc', which calls 'git prune'. See the section \"NOTES\", below."
msgstr "Na maioria dos casos, os usuários devem executar 'git gc', que invoca o comando 'git prune'. Veja a seção \"OBSERVAÇÕES\", abaixo."

#. type: Plain text
#: en/git-prune.txt:29
#, priority:100
msgid "This runs 'git fsck --unreachable' using all the refs available in `refs/`, optionally with additional set of objects specified on the command line, and prunes all unpacked objects unreachable from any of these head objects from the object database.  In addition, it prunes the unpacked objects that are also found in packs by running 'git prune-packed'.  It also removes entries from .git/shallow that are not reachable by any ref."
msgstr "Executa o 'git fsck --unreachable' utilizando todas as refs disponíveis em `refs/`, opcionalmente com um conjunto adicional de objetos utilizados na linha de comando e remove todos os objetos descompactados inacessíveis de qualquer um destes objetos principais do banco de dados de objetos.  Além disso, remove os objetos descompactados que também são encontrados nos pacotes executando o comando 'git prune-packed'.  Também remove entradas do '.git/shallow' que não são acessíveis por nenhuma \"ref\"."

#. type: Plain text
#: en/git-prune.txt:32
#, priority:100
msgid "Note that unreachable, packed objects will remain.  If this is not desired, see linkgit:git-repack[1]."
msgstr "Observe que objetos compactados e inacessíveis, permanecerão.  Caso não seja isso, consulte linkgit:git-repack[1]."

#. type: Plain text
#: en/git-prune.txt:40
#, priority:100
msgid "Do not remove anything; just report what it would remove."
msgstr "Não remova nada; basta relatar o que removeria."

#. type: Plain text
#: en/git-prune.txt:44
#, priority:100
msgid "Report all removed objects."
msgstr "Relate todos os objetos que foram removidos."

#. type: Plain text
#: en/git-prune.txt:47
#, priority:100
msgid "Show progress."
msgstr "Exiba o progresso."

#. type: Labeled list
#: en/git-prune.txt:48 en/git-worktree.txt:246
#, no-wrap, priority:240
msgid "--expire <time>"
msgstr "--expire <tempo>"

#. type: Plain text
#: en/git-prune.txt:50
#, priority:100
msgid "Only expire loose objects older than <time>."
msgstr "Somente expire os objetos soltos com mais de <hora>."

#. type: Labeled list
#: en/git-prune.txt:54
#, ignore-ellipsis, no-wrap, priority:100
msgid "<head>..."
msgstr "<head>..."

#. type: Plain text
#: en/git-prune.txt:58
#, priority:100
msgid "In addition to objects reachable from any of our references, keep objects reachable from listed <head>s."
msgstr "Além dos objetos acessíveis a partir de qualquer uma das nossas referências, mantenha os objetos acessíveis a partir dos <cabeçalho>s listados."

#. type: Plain text
#: en/git-prune.txt:65
#, priority:100
msgid "To prune objects not used by your repository or another that borrows from your repository via its `.git/objects/info/alternates`:"
msgstr "Para remover os objetos que não foram utilizados pelo seu repositório ou outro que seja emprestado do seu repositório por meio de seu `.git/objects/info/alternates`:"

#. type: delimited block -
#: en/git-prune.txt:68
#, no-wrap, priority:100
msgid "$ git prune $(cd ../another && git rev-parse --all)\n"
msgstr "$ git prune $(cd ../another && git rev-parse --all)\n"

#. type: Plain text
#: en/git-prune.txt:76
#, priority:100
msgid "In most cases, users will not need to call 'git prune' directly, but should instead call 'git gc', which handles pruning along with many other housekeeping tasks."
msgstr "Na maioria dos casos, os usuários não precisarão chamar o comando 'git prune' diretamente, mas devem chamar o comando 'git gc' que lida com a remoção, juntamente com muitas outras tarefas de limpeza."

#. type: Plain text
#: en/git-prune.txt:79
#, priority:100
msgid "For a description of which objects are considered for pruning, see 'git fsck''s --unreachable option."
msgstr "Para obter uma descrição de quais objetos são considerados para a remoção, consulte a opção --unreachable de 'git fsck'."

#. type: Plain text
#: en/git-prune.txt:86
#, ignore-same, priority:100
msgid "linkgit:git-fsck[1], linkgit:git-gc[1], linkgit:git-reflog[1]"
msgstr "linkgit:git-fsck[1], linkgit:git-gc[1], linkgit:git-reflog[1]"

#. type: Title =
#: en/git-pull.txt:2
#, ignore-same, no-wrap, priority:220
msgid "git-pull(1)"
msgstr "git-pull(1)"

#. type: Plain text
#: en/git-pull.txt:7
#, priority:220
msgid "git-pull - Fetch from and integrate with another repository or a local branch"
msgstr "git-pull - Busque e integre-se a outro repositório ou num ramo local"

#. type: Plain text
#: en/git-pull.txt:13
#, ignore-ellipsis, no-wrap, priority:220
msgid "'git pull' [<options>] [<repository> [<refspec>...]]\n"
msgstr "'git pull' [<opções>] [<repositório> [<refspec>...]]\n"

#. type: Plain text
#: en/git-pull.txt:24
#, priority:220
msgid "Incorporates changes from a remote repository into the current branch.  If the current branch is behind the remote, then by default it will fast-forward the current branch to match the remote.  If the current branch and the remote have diverged, the user needs to specify how to reconcile the divergent branches with `--rebase` or `--no-rebase` (or the corresponding configuration option in `pull.rebase`)."
msgstr "Incorpora as alterações de um repositório remoto no ramo atual.  Caso o ramo atual esteja atrás do ramo remoto, então, é predefinido que ele avance rapidamente o ramo atual para corresponder ao ramo remoto.  Se o ramo atual e o ramo remoto divergirem, o usuário precisa definir como conciliar os ramos divergentes com `--rebase` ou `--no-rebase` (ou a opção de configuração correspondente em `pull.rebase`)."

#. type: Plain text
#: en/git-pull.txt:29
#, priority:220
msgid "More precisely, `git pull` runs `git fetch` with the given parameters and then depending on configuration options or command line flags, will call either `git rebase` or `git merge` to reconcile diverging branches."
msgstr "Mais precisamente, o comando `git pull` executa `git fetch` com os parâmetros determinados e em seguida, dependendo das opções de configuração ou das sinalizações da linha de comando, invocará o comando `git rebase` ou `git merge` para conciliar os ramos divergentes."

#. type: Plain text
#: en/git-pull.txt:36
#, priority:220
msgid "<repository> should be the name of a remote repository as passed to linkgit:git-fetch[1].  <refspec> can name an arbitrary remote ref (for example, the name of a tag) or even a collection of refs with corresponding remote-tracking branches (e.g., refs/heads/{asterisk}:refs/remotes/origin/{asterisk}), but usually it is the name of a branch in the remote repository."
msgstr "O <repositório> deve ser o nome de um repositório remoto, conforme passado para o linkgit:git-fetch[1].  O <refspec> pode nomear de forma arbitrária uma referência remota (por exemplo, o nome de uma tag) ou até mesmo uma coleção de referências com as ramificações dos ramos monitorados remotamente (`refs/heads/{asterisk}:refs/remotes/origin/{asterisk}` por exemplo), porém geralmente é o nome de uma ramificação no repositório remoto."

#. type: Plain text
#: en/git-pull.txt:40
#, priority:220
msgid "Default values for <repository> and <branch> are read from the \"remote\" and \"merge\" configuration for the current branch as set by linkgit:git-branch[1] `--track`."
msgstr "Os valores predefinidos para o <repositório> e o <ramo> eles são lidos na configuração \"remote\" e \"merge\" do ramo atual, conforme for definido pelo linkgit:git-branch[1] `--track`."

#. type: delimited block -
#: en/git-pull.txt:50
#, no-wrap, priority:220
msgid ""
"\t  A---B---C master on origin\n"
"\t /\n"
"    D---E---F---G master\n"
"\t^\n"
"\torigin/master in your repository\n"
msgstr ""
"\t  A---B---C master on origin\n"
"\t /\n"
"    D---E---F---G master\n"
"\t^\n"
"\torigin/master no seu repositório\n"

#. type: Plain text
#: en/git-pull.txt:57
#, priority:220
msgid "Then \"`git pull`\" will fetch and replay the changes from the remote `master` branch since it diverged from the local `master` (i.e., `E`)  until its current commit (`C`) on top of `master` and record the result in a new commit along with the names of the two parent commits and a log message from the user describing the changes."
msgstr "Então, o comando \"`git pull`\" fara a captura e a reprodução das alterações do ramo remoto `master` por ter se divergido do `master` local (ou seja, `E`) até o seu commit atual (`C`) no topo do `master` e registra o resultado num novo commit, juntamente com os nomes dos dois commits principais e uma mensagem do registro log do usuário, descrevendo quais forma as alterações que foram feitas."

#. type: delimited block -
#: en/git-pull.txt:62
#, no-wrap, priority:220
msgid ""
"\t  A---B---C origin/master\n"
"\t /         \\\n"
"    D---E---F---G---H master\n"
msgstr ""
"\t  A---B---C origin/master\n"
"\t /         \\\n"
"    D---E---F---G---H master\n"

#. type: Plain text
#: en/git-pull.txt:66
#, priority:220
msgid "See linkgit:git-merge[1] for details, including how conflicts are presented and handled."
msgstr "Para mais detalhes incluindo informações de como os conflitos são gerenciados e como eles são exibidos, consulte linkgit:git-merge[1]."

#. type: Plain text
#: en/git-pull.txt:71
#, priority:220
msgid "In Git 1.7.0 or later, to cancel a conflicting merge, use `git reset --merge`.  *Warning*: In older versions of Git, running 'git pull' with uncommitted changes is discouraged: while possible, it leaves you in a state that may be hard to back out of in the case of a conflict."
msgstr "No Git 1.7.0 ou posterior, para cancelar uma mesclagem conflitante, utilize o comando `git reset --merge`.  *Aviso*: Nas versões mais antigas do Git, a execução do 'git pull' com as alterações dos commits não realizados é desencorajado: enquanto for possível, deixa você numa condição onde a recuperação pode ser difícil no caso de um conflito."

#. type: Plain text
#: en/git-pull.txt:76
#, priority:220
msgid "If any of the remote changes overlap with local uncommitted changes, the merge will be automatically canceled and the work tree untouched.  It is generally best to get any local changes in working order before pulling or stash them away with linkgit:git-stash[1]."
msgstr "Caso alguma das alterações remotas se sobrepuserem às alterações dos commits locais que não foram realizados, a mesclagem será automaticamente cancelada e a árvore de trabalho se manterá intocada.  Geralmente é melhor obter as alterações locais na ordem de trabalho antes de obtê-las (pull) ou armazená-las (stash) com o linkgit:git-stash[1]."

#. type: Plain text
#: en/git-pull.txt:85
#, priority:220
msgid "This is passed to both underlying git-fetch to squelch reporting of during transfer, and underlying git-merge to squelch output during merging."
msgstr "Isso é passado para ambos os comandos subjacentes do `git-fetch` para abafar o relatório do processo durante a transferência assim como do git-merge silenciando sua saída durante a mesclagem."

#. type: Plain text
#: en/git-pull.txt:89
#, priority:220
msgid "Pass --verbose to git-fetch and git-merge."
msgstr "Encaminhe a opção --verbose para o 'git-fetch' e 'git-merge'."

#. type: Labeled list
#: en/git-pull.txt:90
#, no-wrap, priority:220
msgid "--[no-]recurse-submodules[=yes|on-demand|no]"
msgstr "--[no-]recurse-submodules[=yes|on-demand|no]"

#. type: Plain text
#: en/git-pull.txt:95
#, priority:220
msgid "This option controls if new commits of populated submodules should be fetched, and if the working trees of active submodules should be updated, too (see linkgit:git-fetch[1], linkgit:git-config[1] and linkgit:gitmodules[5])."
msgstr "Esta opção controla se os novos commits dos submódulos populados devem ser buscados ou não e se as árvore de trabalho dos submódulos ativos devem ser atualizados também (consulte linkgit:git-fetch[1], linkgit:git-config[1] e linkgit:gitmodules[5])."

#. type: Plain text
#: en/git-pull.txt:97
#, priority:220
msgid "If the checkout is done via rebase, local submodule commits are rebased as well."
msgstr "Caso a averiguação seja feita através da reconstrução \"rebase\", os commits do submódulo local também serão refeitas."

#. type: Plain text
#: en/git-pull.txt:99
#, priority:220
msgid "If the update is done via merge, the submodule conflicts are resolved and checked out."
msgstr "Caso a atualização seja feita através de uma mesclagem, os conflitos do sub-módulo serão resolvidos e retirados."

#. type: Title ~
#: en/git-pull.txt:101
#, no-wrap, priority:220
msgid "Options related to merging"
msgstr "Opções relacionadas a mesclagem"

#. type: Labeled list
#: en/git-pull.txt:108
#, no-wrap, priority:220
msgid "--rebase[=false|true|merges|interactive]"
msgstr "--rebase[=false|true|merges|interactive]"

#. type: Plain text
#: en/git-pull.txt:114
#, priority:220
msgid "When true, rebase the current branch on top of the upstream branch after fetching. If there is a remote-tracking branch corresponding to the upstream branch and the upstream branch was rebased since last fetched, the rebase uses that information to avoid rebasing non-local changes."
msgstr "Quando for verdadeiro, reorganize a fundação do ramo atual no topo da ramificação upstream após a busca. Caso haja uma ramificação monitorado remotamente correspondente à ramificação upstream e a ramificação upstream foi reconstruído desde a última busca, a reconstrução da fundação utilizará estas informações para evitar reconstruir as alterações que não fora locais."

#. type: Plain text
#: en/git-pull.txt:118
#, priority:220
msgid "When set to `merges`, rebase using `git rebase --rebase-merges` so that the local merge commits are included in the rebase (see linkgit:git-rebase[1] for details)."
msgstr "Quando definido como `merges`, a reconstrução da fundação (rebase) utilizando o comando `git rebase --rebase-merges` para que as mesclagem dos commits locais sejam incluídas na reconstrução (para mais detalhes, consulte linkgit:git-rebase[1])."

#. type: Plain text
#: en/git-pull.txt:120
#, priority:220
msgid "When false, merge the upstream branch into the current branch."
msgstr "Quando for falso, mescle a ramificação upstream na ramificação atual."

#. type: Plain text
#: en/git-pull.txt:122
#, priority:220
msgid "When `interactive`, enable the interactive mode of rebase."
msgstr "Quando `interactive` (interativo) , ative o modo interativo da reconstrução da fundação."

#. type: Plain text
#: en/git-pull.txt:126
#, priority:220
msgid "See `pull.rebase`, `branch.<name>.rebase` and `branch.autoSetupRebase` in linkgit:git-config[1] if you want to make `git pull` always use `--rebase` instead of merging."
msgstr "Consulte `pull.rebase`, `branch.<nome>.rebase` e `branch.autoSetupRebase` no linkgit:git-config[1] caso queira fazer o `git pull`, sempre utilize o comando `--rebase` em vez de mesclar ."

#. type: Plain text
#: en/git-pull.txt:132
#, priority:220
msgid "This is a potentially _dangerous_ mode of operation.  It rewrites history, which does not bode well when you published that history already.  Do *not* use this option unless you have read linkgit:git-rebase[1] carefully."
msgstr "Esse é um modo de operação potencialmente _perigoso_.  Ele reescreve o histórico, o que não é um bom presságio quando você já o publicou.  *Não* utilize esta opção, a menos que você leia o linkgit:git-rebase[1] com muita atenção."

#. type: Labeled list
#: en/git-pull.txt:133 en/git-svn.txt:261
#, ignore-same, no-wrap, priority:220
msgid "--no-rebase"
msgstr "--no-rebase"

#. type: Plain text
#: en/git-pull.txt:135
#, priority:220
msgid "This is shorthand for --rebase=false."
msgstr "Este é um atalho para a opção --rebase=false."

#. type: Title ~
#: en/git-pull.txt:137
#, no-wrap, priority:220
msgid "Options related to fetching"
msgstr "Opções relacionadas à busca"

#. type: Title -
#: en/git-pull.txt:148
#, no-wrap, priority:220
msgid "DEFAULT BEHAVIOUR"
msgstr "COMPORTAMENTO PREDEFINIDO"

#. type: Plain text
#: en/git-pull.txt:155
#, priority:220
msgid "Often people use `git pull` without giving any parameter.  Traditionally, this has been equivalent to saying `git pull origin`.  However, when configuration `branch.<name>.remote` is present while on branch `<name>`, that value is used instead of `origin`."
msgstr "Frequentemente, as pessoas utilizam o `git pull` sem informar qualquer parâmetro.  Tradicionalmente, é o mesmo que dizer `git pull origin`.  No entanto, quando a configuração `branch.<nome>.remote` está presente enquanto no ramo `<nome>`, esse valor é utilizado em vez de `origin`."

#. type: Plain text
#: en/git-pull.txt:160
#, priority:220
msgid "In order to determine what URL to use to fetch from, the value of the configuration `remote.<origin>.url` is consulted and if there is not any such variable, the value on the `URL:` line in `$GIT_DIR/remotes/<origin>` is used."
msgstr "Para determinar de qual URL usar, o valor da configuração `remote.<origin>.url` é consultado e caso não haja nenhuma variável, o valor na linha `URL:` em `$GIT_DIR/remotes/<origin>` é utilizado."

#. type: Plain text
#: en/git-pull.txt:169
#, priority:220
msgid "In order to determine what remote branches to fetch (and optionally store in the remote-tracking branches) when the command is run without any refspec parameters on the command line, values of the configuration variable `remote.<origin>.fetch` are consulted, and if there aren't any, `$GIT_DIR/remotes/<origin>` is consulted and its `Pull:` lines are used.  In addition to the refspec formats described in the OPTIONS section, you can have a globbing refspec that looks like this:"
msgstr "Para determinar quais ramificações remotas buscar (e opcionalmente armazenar nas ramificações monitoradas remotamente) quando o comando é executado sem nenhum parâmetro \"refspec\" na linha de comando, os valores da variável de configuração `remote.<origin>.fetch` são consultados e caso não exista nenhum, então `$GIT_DIR/remotes/<origin>` é consultado e as suas linhas `Pull:` são utilizadas.  Além dos formatos \"refspec\" descritos na seção OPÇÕES, você pode ter um englobamento do \"refspec\" parecido com este:"

#. type: delimited block -
#: en/git-pull.txt:172
#, no-wrap, priority:220
msgid "refs/heads/*:refs/remotes/origin/*\n"
msgstr "refs/heads/*:refs/remotes/origin/*\n"

#. type: Plain text
#: en/git-pull.txt:179
#, priority:220
msgid "A globbing refspec must have a non-empty RHS (i.e. must store what were fetched in remote-tracking branches), and its LHS and RHS must end with `/*`.  The above specifies that all remote branches are tracked using remote-tracking branches in `refs/remotes/origin/` hierarchy under the same name."
msgstr "Um englobamento do \"refspec\" deve ter um RHS que não não seja vazio (ou seja, deve armazenar o que foi buscado nas ramificações monitoradas remotamente) e o seu `LHS` e `RHS` devem terminar com `/*`.  A definição acima determina que todas as ramificações remotas sejam monitoradas utilizando os ramos monitorados remotamente em `refs/remotes/origin/` com o mesmo nome."

#. type: Plain text
#: en/git-pull.txt:183
#, priority:220
msgid "The rule to determine which remote branch to merge after fetching is a bit involved, in order not to break backward compatibility."
msgstr "A regra para determinar qual a ramificação remota deve ser mesclada após a captura é um pouco complexo, para que não prejudique a compatibilidade com as versões anteriores."

#. type: Plain text
#: en/git-pull.txt:186
#, priority:220
msgid "If explicit refspecs were given on the command line of `git pull`, they are all merged."
msgstr "Caso \"refspecs\" explícitos sejam informados para o comando `git pull`, todos eles são mesclados."

#. type: Plain text
#: en/git-pull.txt:191
#, priority:220
msgid "When no refspec was given on the command line, then `git pull` uses the refspec from the configuration or `$GIT_DIR/remotes/<origin>`.  In such cases, the following rules apply:"
msgstr "Quando nenhum \"refspec\" for informado na linha de comando, o `git pull` utiliza o \"refspec\" da configuração ou `$GIT_DIR/remotes/<origin>`.  Nestes casos, as seguintes regras se aplicam:"

#. type: Plain text
#: en/git-pull.txt:195
#, priority:220
msgid "If `branch.<name>.merge` configuration for the current branch `<name>` exists, that is the name of the branch at the remote site that is merged."
msgstr "Caso a configuração `branch.<nome>.merge` para o ramo atual `<nome>` exista, este é o nome do ramo no site remoto que é mesclado."

#. type: Plain text
#: en/git-pull.txt:197
#, priority:220
msgid "If the refspec is a globbing one, nothing is merged."
msgstr "Caso o refspec seja um caractere curinga, nada será mesclado."

#. type: Plain text
#: en/git-pull.txt:199
#, priority:220
msgid "Otherwise the remote branch of the first refspec is merged."
msgstr "Caso contrário, a ramificação remota do primeiro refspec será mesclada."

#. type: Plain text
#: en/git-pull.txt:207
#, priority:220
msgid "Update the remote-tracking branches for the repository you cloned from, then merge one of them into your current branch:"
msgstr "Atualize as ramificações monitoradas remotamente para o repositório onde a clonagem foi feita e em seguida, mescle uma delas na sua ramificação atual:"

#. type: delimited block -
#: en/git-pull.txt:211
#, no-wrap, priority:220
msgid ""
"$ git pull\n"
"$ git pull origin\n"
msgstr ""
"$ git pull\n"
"$ git pull origin\n"

#. type: Plain text
#: en/git-pull.txt:216
#, priority:220
msgid "Normally the branch merged in is the HEAD of the remote repository, but the choice is determined by the branch.<name>.remote and branch.<name>.merge options; see linkgit:git-config[1] for details."
msgstr "Normalmente o ramo mesclado fica no `HEAD` do repositório remoto, porém a escolha é determinada pelas opções `branch.<nome>.remote` e `branch.<nome>.merge`; para mais detalhes consulte linkgit:git-config[1]."

#. type: Plain text
#: en/git-pull.txt:218
#, priority:220
msgid "Merge into the current branch the remote branch `next`:"
msgstr "Mescle na ramificação atual o ramo remoto `next`:"

#. type: delimited block -
#: en/git-pull.txt:221
#, no-wrap, priority:220
msgid "$ git pull origin next\n"
msgstr "$ git pull origin next\n"

#. type: Plain text
#: en/git-pull.txt:226
#, priority:220
msgid "This leaves a copy of `next` temporarily in FETCH_HEAD, and updates the remote-tracking branch `origin/next`.  The same can be done by invoking fetch and merge:"
msgstr "Isto deixa uma cópia do `next` temporariamente no `FETCH_HEAD`, porém não atualiza nenhum outro ramo `origin/next` monitorado remotamente.  O mesmo pode ser feito ao executar o `fetch` e o `merge`:"

#. type: delimited block -
#: en/git-pull.txt:230
#, no-wrap, priority:220
msgid ""
"$ git fetch origin\n"
"$ git merge origin/next\n"
msgstr ""
"$ git fetch origin\n"
"$ git merge origin/next\n"

#. type: Plain text
#: en/git-pull.txt:235
#, priority:220
msgid "If you tried a pull which resulted in complex conflicts and would want to start over, you can recover with 'git reset'."
msgstr "Caso você tente fazer um \"pull\" que resultou em conflitos complexos e queira recomeçar, a recuperação pode ser feita com o comando 'git reset'."

#. type: Plain text
#: en/git-pull.txt:247
#, priority:220
msgid "Using --recurse-submodules can only fetch new commits in already checked out submodules right now. When e.g. upstream added a new submodule in the just fetched commits of the superproject the submodule itself cannot be fetched, making it impossible to check out that submodule later without having to do a fetch again. This is expected to be fixed in a future Git version."
msgstr "Com a opção `--recurse-submodules` só pode buscar novos commits nos submódulos que já foram averiguados no momento. Quando, por exemplo, a \"upstream\" adicionou um novo submódulo nos commits recém-buscados do superprojeto, o submódulo em si não pode ser buscado, tornando impossível verificar o submódulo sendo necessário fazer uma nova busca mais tarde. Espera-se que isso seja corrigido em uma versão futura do Git."

#. type: Plain text
#: en/git-pull.txt:251
#, ignore-same, priority:220
msgid "linkgit:git-fetch[1], linkgit:git-merge[1], linkgit:git-config[1]"
msgstr "linkgit:git-fetch[1], linkgit:git-merge[1], linkgit:git-config[1]"

#. type: Title =
#: en/git-push.txt:2
#, ignore-same, no-wrap, priority:220
msgid "git-push(1)"
msgstr "git-push(1)"

#. type: Plain text
#: en/git-push.txt:7
#, priority:220
msgid "git-push - Update remote refs along with associated objects"
msgstr "git-push - Atualiza as refs remotas junto com os objetos associados a ela"

#. type: Plain text
#: en/git-push.txt:18
#, ignore-ellipsis, no-wrap, priority:220
msgid ""
"'git push' [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>]\n"
"\t   [--repo=<repository>] [-f | --force] [-d | --delete] [--prune] [-v | --verbose]\n"
"\t   [-u | --set-upstream] [-o <string> | --push-option=<string>]\n"
"\t   [--[no-]signed|--signed=(true|false|if-asked)]\n"
"\t   [--force-with-lease[=<refname>[:<expect>]] [--force-if-includes]]\n"
"\t   [--no-verify] [<repository> [<refspec>...]]\n"
msgstr ""
"'git push' [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>]\n"
"\t   [--repo=<repositório>] [-f | --force] [-d | --delete] [--prune] [-v | --verbose]\n"
"\t   [-u | --set-upstream] [-o <texto> | --push-option=<texto>]\n"
"\t   [--[no-]signed|--signed=(true|false|if-asked)]\n"
"\t   [--force-with-lease[=<refname>[:<expect>]]] [--force-if-includes]]\n"
"\t   [--no-verify] [<repositório> [<refspec>...]]\n"

#. type: Plain text
#: en/git-push.txt:24
#, priority:220
msgid "Updates remote refs using local refs, while sending objects necessary to complete the given refs."
msgstr "Atualiza as refs remotas utilizando as refs locais, enquanto envia os objetos necessários para que seja concluída as refs informadas."

#. type: Plain text
#: en/git-push.txt:28
#, priority:220
msgid "You can make interesting things happen to a repository every time you push into it, by setting up 'hooks' there.  See documentation for linkgit:git-receive-pack[1]."
msgstr "Você pode fazer com que coisas que intereçam aconteçam com um repositório toda vez que você o adiciona, configurando os 'ganchos' lá.  Consulte a documentação para linkgit:git-receive-pack[1]."

#. type: Plain text
#: en/git-push.txt:33
#, priority:220
msgid "When the command line does not specify where to push with the `<repository>` argument, `branch.*.remote` configuration for the current branch is consulted to determine where to push.  If the configuration is missing, it defaults to 'origin'."
msgstr "Quando a linha de comando não informa para onde impulsionar (push) com a opção `<repositório>`, a configuração `branch.*.remote` é consultada para o ramo atual para determinar para onde o impulsionamento deve ser feito.  Caso a configuração esteja ausente, a predefinição retorna para 'origin'."

#. type: Plain text
#: en/git-push.txt:39
#, ignore-ellipsis, priority:220
msgid "When the command line does not specify what to push with `<refspec>...` arguments or `--all`, `--mirror`, `--tags` options, the command finds the default `<refspec>` by consulting `remote.*.push` configuration, and if it is not found, honors `push.default` configuration to decide what to push (See linkgit:git-config[1] for the meaning of `push.default`)."
msgstr "Quando a linha de comando não especifica o que impulsionar (push) com as opções `<refspec>...` ou com as opções `--all`, `--mirror`, `--tags`, o comando encontra a predefinição `<refspec>` consultando a configuração `remote.*.push` e caso ainda não tenha sido encontrado, honra a configuração do `push.default` para decidir o que enviar (para saber o significado de `push.default` consultelinkgit:git-config[1]."

#. type: Plain text
#: en/git-push.txt:46
#, priority:220
msgid "When neither the command-line nor the configuration specify what to push, the default behavior is used, which corresponds to the `simple` value for `push.default`: the current branch is pushed to the corresponding upstream branch, but as a safety measure, the push is aborted if the upstream branch does not have the same name as the local one."
msgstr "Quando nem a linha de comando nem a configuração informam o que enviar, o comportamento predefinido é utilizado, que corresponde ao valor `simple` para `push.default`: o ramo atual é enviado ao ramo upstream correspondente, porém como uma medida segurança, o envio será cancelado caso o ramo upstream não esteja com o mesmo nome que o ramo local."

#. type: Title -
#: en/git-push.txt:49
#, no-wrap, priority:220
msgid "OPTIONS[[OPTIONS]]"
msgstr "OPÇÕES[[OPÇÕES]]"

#. type: Plain text
#: en/git-push.txt:55
#, priority:220
msgid "The \"remote\" repository that is destination of a push operation.  This parameter can be either a URL (see the section <<URLS,GIT URLS>> below) or the name of a remote (see the section <<REMOTES,REMOTES>> below)."
msgstr "O repositório \"remoto\" que é o destino de uma operação de envio através de uma operação \"push\".  Este parâmetro pode ser uma URL (consulte a seção <<URLS, GIT URLS>> abaixo) ou o nome de um ramo remoto (consulte a seção <<REMOTES, REMOTES>> abaixo)."

#. type: Labeled list
#: en/git-push.txt:56
#, ignore-ellipsis, no-wrap, priority:220
msgid "<refspec>..."
msgstr "<refspec>..."

#. type: Plain text
#: en/git-push.txt:61
#, priority:220
msgid "Specify what destination ref to update with what source object.  The format of a <refspec> parameter is an optional plus `+`, followed by the source object <src>, followed by a colon `:`, followed by the destination ref <dst>."
msgstr "Defina qual a \"ref\" do destino para atualizar com qual objeto da origem.  O formato de um parâmetro `<refspec>` é um opcional mais `+`, seguido pelo objeto da origem `<src>`, seguido de dois pontos `:`, seguido pelo destino da ref `<dst>`."

#. type: Plain text
#: en/git-push.txt:65
#, priority:220
msgid "The <src> is often the name of the branch you would want to push, but it can be any arbitrary \"SHA-1 expression\", such as `master~4` or `HEAD` (see linkgit:gitrevisions[7])."
msgstr "Geralmente `<src>` é o nome do ramo que você deseja impulsionar, pode ser qualquer \"expressão SHA-1\" arbitrária, como `master~4` ou `HEAD` (consulte linkgit:gitrevisions[7])."

#. type: Plain text
#: en/git-push.txt:75
#, priority:220
msgid "The <dst> tells which ref on the remote side is updated with this push. Arbitrary expressions cannot be used here, an actual ref must be named.  If `git push [<repository>]` without any `<refspec>` argument is set to update some ref at the destination with `<src>` with `remote.<repository>.push` configuration variable, `:<dst>` part can be omitted--such a push will update a ref that `<src>` normally updates without any `<refspec>` on the command line.  Otherwise, missing `:<dst>` means to update the same ref as the `<src>`."
msgstr "O <dst> informa qual a \"ref\" no lado remoto será atualizado com este impulsionamento \"push\". Expressões arbitrárias não podem ser utilizadas aqui, uma \"ref\" real deve ser determinada.  Caso o comando `git push [<repositório>]` sem nenhum argumento `<refspec>` estiver definido para atualizar alguma \"ref\" no destino com `<src>` com a variável de configuração `remote.<repositório>.push`, a parte do comando `:<dst>` pode ser omitida, este empulsionamento \"push\" atualizará uma \"ref\" onde `<src>` normalmente atualiza sem qualquer `<refspec>` na linha de comando.  Caso contrário, a falta de `:<dst>` significa atualizar a mesma referência que o `<src>`."

#. type: Plain text
#: en/git-push.txt:80
#, priority:220
msgid "If <dst> doesn't start with `refs/` (e.g. `refs/heads/master`) we will try to infer where in `refs/*` on the destination <repository> it belongs based on the type of <src> being pushed and whether <dst> is ambiguous."
msgstr "Caso o <dst> não comece com `refs/` (como `refs/heads/master` por exemplo), tentaremos inferir onde em `refs/*` no <repositório> de destino, ele pertença com base no tipo da <src> sendo impulsionado e caso o <dst> seja ambíguo."

#. type: Plain text
#: en/git-push.txt:84
#, priority:220
msgid "If <dst> unambiguously refers to a ref on the <repository> remote, then push to that ref."
msgstr "Caso o <dst> se refira inequivocamente a uma \"ref\" no <repositório> do ramo remoto, então faça um impulsionamento \"push\" nesta ref."

#. type: Plain text
#: en/git-push.txt:87
#, priority:220
msgid "If <src> resolves to a ref starting with refs/heads/ or refs/tags/, then prepend that to <dst>."
msgstr "Caso o <src> seja resolvido para uma \"ref\" começando com `refs/heads/` ou `refs/tags/`, coloque um prefixo no <dst>."

#. type: Plain text
#: en/git-push.txt:93
#, priority:220
msgid "Other ambiguity resolutions might be added in the future, but for now any other cases will error out with an error indicating what we tried, and depending on the `advice.pushUnqualifiedRefname` configuration (see linkgit:git-config[1]) suggest what refs/ namespace you may have wanted to push to."
msgstr "Outras resoluções de ambiguidade podem ser adicionadas no futuro, mas, por enquanto, outros casos apresentarão um erro indicando o que tentamos e dependendo da configuração `advice.pushUnqualifiedRefname` (consulte linkgit:git-config[1]), sugere qual 'refs/ namespace' você possa querer impulsionar."

#. type: Plain text
#: en/git-push.txt:101
#, priority:220
msgid "The object referenced by <src> is used to update the <dst> reference on the remote side. Whether this is allowed depends on where in `refs/*` the <dst> reference lives as described in detail below, in those sections \"update\" means any modifications except deletes, which as noted after the next few sections are treated differently."
msgstr "O objeto referenciado por <src> é utilizado para atualizar a referência <dst> no lado remoto. Caso isso seja permitido, vai depender de onde em `refs/*` a referência <dst> vive como descrito com mais detalhes logo abaixo, nestas seções \"update\" indica que quaisquer modificações, exceto as exclusões, que serão descritos nas próximas seções, são tratadas de forma diferente."

#. type: Plain text
#: en/git-push.txt:104
#, priority:220
msgid "The `refs/heads/*` namespace will only accept commit objects, and updates only if they can be fast-forwarded."
msgstr "O espaço de nomes `refs/heads/*` aceitarão apenas os objetos commit e será atualizado apenas caso eles possam avançar de forma rápida."

#. type: Plain text
#: en/git-push.txt:108
#, priority:220
msgid "The `refs/tags/*` namespace will accept any kind of object (as commits, trees and blobs can be tagged), and any updates to them will be rejected."
msgstr "O espaço de nomes `refs/tags/*` aceitarão quaisquer tipos de objeto (como commits, árvores e bolhas que possam ser marcados) e quaisquer atualizações para eles serão rejeitadas."

#. type: Plain text
#: en/git-push.txt:113
#, priority:220
msgid "It's possible to push any type of object to any namespace outside of `refs/{tags,heads}/*`. In the case of tags and commits, these will be treated as if they were the commits inside `refs/heads/*` for the purposes of whether the update is allowed."
msgstr "É possível impulsionar qualquer tipo de objeto para qualquer espaço de nomes fora do `refs/{tags,heads}/*`. No caso das tags e dos commits, estes serão tratados como se fossem os commits dentro do `refs/heads/*` para os propósitos caso a atualização seja permitida."

#. type: Plain text
#: en/git-push.txt:122
#, priority:220
msgid "I.e. a fast-forward of commits and tags outside `refs/{tags,heads}/*` is allowed, even in cases where what's being fast-forwarded is not a commit, but a tag object which happens to point to a new commit which is a fast-forward of the commit the last tag (or commit) it's replacing. Replacing a tag with an entirely different tag is also allowed, if it points to the same commit, as well as pushing a peeled tag, i.e. pushing the commit that existing tag object points to, or a new tag object which an existing commit points to."
msgstr "Um avanço rápido dos commits e das tags fora do `refs/{tags,heads}/*` por exemplo, é permitido, mesmo nos casos onde o que está sendo acelerado não é um commit e sim um objeto da tag que aponte para um novo commit onde seja um avanço rápido do commit da última tag (ou commit) que está sendo substituindo. Também é permitida a reposição de uma tag por uma outra totalmente diferente, caso ela apontar para o mesmo commit, bem como ao impulsionar uma tag já descascada, ou seja, impulsionar o commit onde o objeto existente do tag aponte ou um novo objeto da tag onde o commit existente esteja apontando."

#. type: Plain text
#: en/git-push.txt:126
#, priority:220
msgid "Tree and blob objects outside of `refs/{tags,heads}/*` will be treated the same way as if they were inside `refs/tags/*`, any update of them will be rejected."
msgstr "Os objetos da árvore e da bolha fora do `refs{tags,heads}/*` serão tratados da mesma maneira como se estivessem dentro do `refs/tags/*`, qualquer outra atualização deles será rejeitada."

#. type: Plain text
#: en/git-push.txt:135
#, priority:220
msgid "All of the rules described above about what's not allowed as an update can be overridden by adding an the optional leading `+` to a refspec (or using `--force` command line option). The only exception to this is that no amount of forcing will make the `refs/heads/*` namespace accept a non-commit object. Hooks and configuration can also override or amend these rules, see e.g. `receive.denyNonFastForwards` in linkgit:git-config[1] and `pre-receive` and `update` in linkgit:githooks[5]."
msgstr "Todas as regras descritas acima sobre o que não é permitido como uma atualização, podem ser substituídas adicionando um sinal opcional `+` inicial num \"refspec\" (ou utilizando a opção da linha de comando `--force`). A única exceção a isso é que nenhuma quantidade de imposição fará com que o espaço de nomes `refs/heads/*` aceite um objeto que não seja um commit. Os ganchos e configurações também podem substituir ou alterar estas regras, consulte, por exemplo, `receive.denyNonFastForwards` no linkgit:git-config[1] e `pre-receive` e `update` no linkgit:githooks[5]."

#. type: Plain text
#: en/git-push.txt:141
#, priority:220
msgid "Pushing an empty <src> allows you to delete the <dst> ref from the remote repository. Deletions are always accepted without a leading `+` in the refspec (or `--force`), except when forbidden by configuration or hooks. See `receive.denyDeletes` in linkgit:git-config[1] and `pre-receive` and `update` in linkgit:githooks[5]."
msgstr "Fazer um impulsionamento \"push\" de um <src> vazio permite excluir o <dst> \"ref\" do repositório remoto. As exclusões sempre são aceitas sem um sinal `+` inicial no \"refspec\" (ou com a opção `--force`), exceto quando for proibido pela configuração ou pelos ganchos. Consulte `receive.denyDeletes` no linkgit:git-config[1] e `pre-receive` e `update` no linkgit:githooks[5]."

#. type: Plain text
#: en/git-push.txt:146
#, priority:220
msgid "The special refspec `:` (or `+:` to allow non-fast-forward updates)  directs Git to push \"matching\" branches: for every branch that exists on the local side, the remote side is updated if a branch of the same name already exists on the remote side."
msgstr "O \"refspec\" especial `:` (ou `+:` para permitir as atualizações sem avanço rápido) instrui o Git para enviar as ramificações \"coincidentes\": para cada ramificação que exista no lado local, o lado remoto é atualizado caso uma ramificação do o mesmo nome já exista."

#. type: Plain text
#: en/git-push.txt:148
#, priority:220
msgid "`tag <tag>` means the same as `refs/tags/<tag>:refs/tags/<tag>`."
msgstr "A `tag <tag>` significa o mesmo que `refs/tags/<tag>:refs/tags/<tag>`."

#. type: Plain text
#: en/git-push.txt:152
#, priority:220
msgid "Push all branches (i.e. refs under `refs/heads/`); cannot be used with other <refspec>."
msgstr "impulsione todos os ramos (ou seja, refs em `refs/heads/`); não pode ser utilizado com outro <refspec>."

#. type: Plain text
#: en/git-push.txt:160
#, priority:220
msgid "Remove remote branches that don't have a local counterpart. For example a remote branch `tmp` will be removed if a local branch with the same name doesn't exist any more. This also respects refspecs, e.g.  `git push --prune remote refs/heads/*:refs/tmp/*` would make sure that remote `refs/tmp/foo` will be removed if `refs/heads/foo` doesn't exist."
msgstr "Remova as ramificações remotas que não possuam uma contraparte local. Uma ramificação remota `tmp` será removida caso uma ramificação local com o mesmo nome não existir mais por exemplo. Isso também respeita os \"refespecs\", por exemplo O comando `git push --prune remote refs/heads/*:refs/tmp/*` garantiria que o `refs/tmp/foo` remoto seja removido caso o `refs/heads/foo` não exista."

#. type: Plain text
#: en/git-push.txt:171
#, priority:220
msgid "Instead of naming each ref to push, specifies that all refs under `refs/` (which includes but is not limited to `refs/heads/`, `refs/remotes/`, and `refs/tags/`)  be mirrored to the remote repository.  Newly created local refs will be pushed to the remote end, locally updated refs will be force updated on the remote end, and deleted refs will be removed from the remote end.  This is the default if the configuration option `remote.<remote>.mirror` is set."
msgstr "Em vez de nomear cada \"ref\" para fazer o impulsionamento, determine que todos os refs no `refs/` (que incluem, mas não se limitam a `refs/heads/`, `refs/remotes/` e `refs/tags/`) sejam espelhados para o repositório remoto.  As refs locais que foram recém-criadas serão enviadas para a extremidade remota, as refs que foram atualizadas localmente terão a sua atualização imposta no lado remoto e as refs que foram excluídas serão removidas remotamente.  Esta é a predefinição caso a opção de configuração `remote.<remoto>.mirror` esteja definido."

#. type: Plain text
#: en/git-push.txt:180
#, priority:220
msgid "Produce machine-readable output.  The output status line for each ref will be tab-separated and sent to stdout instead of stderr.  The full symbolic names of the refs will be given."
msgstr "Gere uma saída legível para uma máquina.  A linha da condição geral para cada \"ref\" será separada por tabulação e encaminhada para o stdout em vez de stderr.  Os nomes simbólicos completos das refs serão informados."

#. type: Plain text
#: en/git-push.txt:185
#, priority:220
msgid "All listed refs are deleted from the remote repository. This is the same as prefixing all refs with a colon."
msgstr "Todas as refs listadas são excluídas do repositório remoto. É o mesmo que prefixar todos as refs com dois pontos."

#. type: Plain text
#: en/git-push.txt:190
#, priority:220
msgid "All refs under `refs/tags` are pushed, in addition to refspecs explicitly listed on the command line."
msgstr "Todas as refs no `refs/tags` são impulsionadas, além das \"refspecs\" que forem explicitamente listados na linha de comando."

#. type: Labeled list
#: en/git-push.txt:191
#, ignore-same, no-wrap, priority:220
msgid "--follow-tags"
msgstr "--follow-tags"

#. type: Plain text
#: en/git-push.txt:198
#, priority:220
msgid "Push all the refs that would be pushed without this option, and also push annotated tags in `refs/tags` that are missing from the remote but are pointing at commit-ish that are reachable from the refs being pushed.  This can also be specified with configuration variable `push.followTags`.  For more information, see `push.followTags` in linkgit:git-config[1]."
msgstr "Impulsione todas as refs que seriam enviadas sem esta opção e também as tags anotadas no `refs/tags` que estão ausentes no ramo remoto, mas estão apontando para o \"commit-ish\" acessível a partir das referências sendo impulsionadas.  Também pode ser definido com a variável de configuração `push.followTags`.  Para mais informações, consulte `push.followTags` no linkgit:git-config[1]."

#. type: Labeled list
#: en/git-push.txt:199 en/git-send-pack.txt:73
#, ignore-same, no-wrap, priority:220
msgid "--[no-]signed"
msgstr "--[no-]signed"

#. type: Labeled list
#: en/git-push.txt:200 en/git-send-pack.txt:74
#, no-wrap, priority:220
msgid "--signed=(true|false|if-asked)"
msgstr "--signed=(true|false|if-asked)"

#. type: Plain text
#: en/git-push.txt:209 en/git-send-pack.txt:83
#, priority:220
msgid "GPG-sign the push request to update refs on the receiving side, to allow it to be checked by the hooks and/or be logged.  If `false` or `--no-signed`, no signing will be attempted.  If `true` or `--signed`, the push will fail if the server does not support signed pushes.  If set to `if-asked`, sign if and only if the server supports signed pushes.  The push will also fail if the actual call to `gpg --sign` fails.  See linkgit:git-receive-pack[1] for the details on the receiving end."
msgstr "O GPG assina a solicitação impulsionamento para atualizar os `refs` no lado do recebimento permitindo que ele seja verificado pelos ganchos ou seja catalogado nos registros.  Caso as opções `false` ou `--no-signed` sejam utilizadas, nenhuma tentativa de assinatura será feita.  Caso as opções  `true` ou `--signed` sejam utilizadas, o impulsionamento irá falhará caso o servidor não seja compatível com impulsionamentos assinados.  Caso seja definido com `if-asked`, a assinatura só será realizada caso o servidor seja compatível com impulsionamentos assinados.  O impulsionamento falhará caso a chamada atual para o comando `gpg --sign` falhe.  Para obter detalhes sobre o recebimento na parte final, consulte linkgit:git-receive-pack[1]."

#. type: Labeled list
#: en/git-push.txt:210
#, ignore-same, no-wrap, priority:220
msgid "--[no-]atomic"
msgstr "--[no-]atomic"

#. type: Plain text
#: en/git-push.txt:214
#, priority:220
msgid "Use an atomic transaction on the remote side if available.  Either all refs are updated, or on error, no refs are updated.  If the server does not support atomic pushes the push will fail."
msgstr "Utilize uma transação atômica no lado remoto, caso esteja disponível.  Ou todas as refs são atualizadas ou, por erro, nenhuma será.  Caso o servidor não seja compatível com impulsionamento atômico, o impulsionamento \"push\" irá falhar."

#. type: Labeled list
#: en/git-push.txt:216
#, no-wrap, priority:220
msgid "--push-option=<option>"
msgstr "--push-option=<opção>"

#. type: Plain text
#: en/git-push.txt:226
#, priority:220
msgid "Transmit the given string to the server, which passes them to the pre-receive as well as the post-receive hook. The given string must not contain a NUL or LF character.  When multiple `--push-option=<option>` are given, they are all sent to the other side in the order listed on the command line.  When no `--push-option=<option>` is given from the command line, the values of configuration variable `push.pushOption` are used instead."
msgstr "Transmita a sequência informada para o servidor, que o repassa ao gancho de pré recebimento assim como o de pré recebimento. A sequência informada não deve conter um caractere `NUL` ou `LF`.  Quando várias opções `--push-option=<opção>` são utilizadas, todas elas são enviadas ao outro lado para que sejam listadas na linha de comando.  Quando nenhum comando `--push-option=<option>` é utilizado, então os valores da configuração da variável `push.pushOption` passam a ser utilizados."

#. type: Labeled list
#: en/git-push.txt:227 en/git-send-pack.txt:28
#, no-wrap, priority:220
msgid "--receive-pack=<git-receive-pack>"
msgstr "--receive-pack=<git-recebe-pacote>"

#. type: Labeled list
#: en/git-push.txt:228 en/git-send-pack.txt:34
#, no-wrap, priority:220
msgid "--exec=<git-receive-pack>"
msgstr "--exec=<git-recebe-pacote>"

#. type: Plain text
#: en/git-push.txt:233 en/git-send-pack.txt:33
#, priority:220
msgid "Path to the 'git-receive-pack' program on the remote end.  Sometimes useful when pushing to a remote repository over ssh, and you do not have the program in a directory on the default $PATH."
msgstr "O caminho para o programa 'git-receive-pack' na extremidade remota.  Às vezes é útil ao enviar para um repositório remoto através do ssh e você não possui o programa no diretório no `$PATH` predefinido."

#. type: Labeled list
#: en/git-push.txt:234
#, ignore-same, no-wrap, priority:220
msgid "--[no-]force-with-lease"
msgstr "--[no-]force-with-lease"

#. type: Labeled list
#: en/git-push.txt:235
#, no-wrap, priority:220
msgid "--force-with-lease=<refname>"
msgstr "--force-with-lease=<refname>"

#. type: Labeled list
#: en/git-push.txt:236
#, no-wrap, priority:220
msgid "--force-with-lease=<refname>:<expect>"
msgstr "--force-with-lease=<refname>:<expect>"

#. type: Plain text
#: en/git-push.txt:239
#, priority:220
msgid "Usually, \"git push\" refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it."
msgstr "Normalmente, o comando \"git push\" se recusa a atualizar uma \"ref\" remota que não seja um ancestral da \"ref\" local utilizada para substituí-la."

#. type: Plain text
#: en/git-push.txt:242
#, priority:220
msgid "This option overrides this restriction if the current value of the remote ref is the expected value.  \"git push\" fails otherwise."
msgstr "Esta opção substitui esta restrição caso o valor atual da \"ref\" remota seja o valor esperado.  Caso contrário o \"git push\" vai falhar."

#. type: Plain text
#: en/git-push.txt:249
#, priority:220
msgid "Imagine that you have to rebase what you have already published.  You will have to bypass the \"must fast-forward\" rule in order to replace the history you originally published with the rebased history.  If somebody else built on top of your original history while you are rebasing, the tip of the branch at the remote may advance with their commit, and blindly pushing with `--force` will lose their work."
msgstr "Imagine que você precise refazer o que já foi publicado.  Você precisará ignorar a regra \"deve avançar rapidamente\" para substituir o histórico publicado originalmente através  histórico que foi reformulado.  Caso alguém construa no topo do seu histórico original enquanto você está fazendo um \"rebase\", o topo do ramo no ramo remoto pode avançar com o commit dela e impulsionar cegamente com o `--force` fará com que ela perca o trabalho dela."

#. type: Plain text
#: en/git-push.txt:256
#, priority:220
msgid "This option allows you to say that you expect the history you are updating is what you rebased and want to replace. If the remote ref still points at the commit you specified, you can be sure that no other people did anything to the ref. It is like taking a \"lease\" on the ref without explicitly locking it, and the remote ref is updated only if the \"lease\" is still valid."
msgstr "Esta opção permite que você diga que vai esperar que o histórico que está sendo atualizando seja o que você reconstruiu com o \"rebase\" e vai querer substituir. Casi uma \"ref\" remota ainda aponte para um commit específico, você pode ter certeza que outras pessoas não fizeram nada com a \"ref\". É como fazer uma \"concessão\" na ref sem bloqueá-la diretamente, a \"ref\" remota será atualizada apenas caso a \"concessão\" ainda seja válida."

#. type: Plain text
#: en/git-push.txt:261
#, priority:220
msgid "`--force-with-lease` alone, without specifying the details, will protect all remote refs that are going to be updated by requiring their current value to be the same as the remote-tracking branch we have for them."
msgstr "Somente a opção `--force-with-lease`, sem qualquer outra definição, protegerá todos as refs remotas que serão atualizadas, exigindo que o seu valor atual seja o mesmo que o ramo monitorado remotamente que temos para eles."

#. type: Plain text
#: en/git-push.txt:266
#, priority:220
msgid "`--force-with-lease=<refname>`, without specifying the expected value, will protect the named ref (alone), if it is going to be updated, by requiring its current value to be the same as the remote-tracking branch we have for it."
msgstr "A opção `--force-with-lease=<refname>`, sem qualquer outro valor esperado, protegerá a \"ref\" que foi informado (sozinho), caso seja atualizado, exigindo que o seu valor atual seja o mesmo que o ramo monitorado remotamente que temos para isso."

#. type: Plain text
#: en/git-push.txt:274
#, priority:220
msgid "`--force-with-lease=<refname>:<expect>` will protect the named ref (alone), if it is going to be updated, by requiring its current value to be the same as the specified value `<expect>` (which is allowed to be different from the remote-tracking branch we have for the refname, or we do not even have to have such a remote-tracking branch when this form is used).  If `<expect>` is the empty string, then the named ref must not already exist."
msgstr "`--force-with-lease=<refname>:<expect>` protegerá o ref informado (sozinho), caso seja atualizado, exigindo que o seu valor atual seja o mesmo que o valor definido `<expect >` (que pode ser diferente do ramo monitorado remotamente que temos para o refname ou nem precisamos ter esse ramo monitorado de forma remota quando este formulário é utilizado).  Caso `<expect>` esteja vazio, então a ref informada já não deve existir."

#. type: Plain text
#: en/git-push.txt:279
#, priority:220
msgid "Note that all forms other than `--force-with-lease=<refname>:<expect>` that specifies the expected current value of the ref explicitly are still experimental and their semantics may change as we gain experience with this feature."
msgstr "Observe que todas as formas diferentes da opção `--force-with-lease=<refname>:<expect>` que define o valor atual esperado para a \"ref\" de forma explicita, ainda são experimentais e sua semântica pode mudar à medida que adquiramos mais experiência com este recurso."

#. type: Plain text
#: en/git-push.txt:282
#, priority:220
msgid "\"--no-force-with-lease\" will cancel all the previous --force-with-lease on the command line."
msgstr "A opção `--no-force-with-lease` cancelará todos os `--force-with-lease` anteriores na linha de comando."

#. type: Plain text
#: en/git-push.txt:288
#, priority:220
msgid "A general note on safety: supplying this option without an expected value, i.e. as `--force-with-lease` or `--force-with-lease=<refname>` interacts very badly with anything that implicitly runs `git fetch` on the remote to be pushed to in the background, e.g. `git fetch origin` on your repository in a cronjob."
msgstr "Uma observação geral sobre a segurança: utilizar esta opção sem um valor esperado, por exemplo, `--force-with-lease` ou `--force-with-lease=<refname>` interage muito mal com qualquer coisa que execute de forma implícita o comando `git fetch` do ramo remoto que será encaminhado para um processo de segundo plano, como o comando `git fetch origin` no seu repositório para um trabalho agendado \"cronjob\" por exemplo."

#. type: Plain text
#: en/git-push.txt:295
#, priority:220
msgid "The protection it offers over `--force` is ensuring that subsequent changes your work wasn't based on aren't clobbered, but this is trivially defeated if some background process is updating refs in the background. We don't have anything except the remote tracking info to go by as a heuristic for refs you're expected to have seen & are willing to clobber."
msgstr "A proteção oferecida contra a opção `--force` é garantir que as subsequentes alterações onde a base do seu trabalho não sejam prejudicadas, porém isso será derrotado trivialmente caso algum processo em segundo plano estiver atualizando as refs em segundo plano. Não temos nada além das informações de monitoramento remoto, como uma heurística para as refs que você deve ter visto e está disposto a adotar."

#. type: Plain text
#: en/git-push.txt:299
#, priority:220
msgid "If your editor or some other system is running `git fetch` in the background for you a way to mitigate this is to simply set up another remote:"
msgstr "Caso o seu editor ou um outro sistema esteja executando o comando `git fetch` no segundo plano para você, uma maneira de atenuar isso é simplesmente configurar um outro ramo remoto:"

#. type: Plain text
#: en/git-push.txt:302
#, no-wrap, priority:220
msgid ""
"\tgit remote add origin-push $(git config remote.origin.url)\n"
"\tgit fetch origin-push\n"
msgstr ""
"\tgit remote add origin-push $(git config remote.origin.url)\n"
"\tgit fetch origin-push\n"

#. type: Plain text
#: en/git-push.txt:305
#, priority:220
msgid "Now when the background process runs `git fetch origin` the references on `origin-push` won't be updated, and thus commands like:"
msgstr "Agora, quando o processo em segundo plano executar o comando `git fetch origin`, as referências no `origin-push` não serão atualizadas e portanto, comandos como:"

#. type: Plain text
#: en/git-push.txt:307
#, no-wrap, priority:220
msgid "\tgit push --force-with-lease origin-push\n"
msgstr "\tgit push --force-with-lease origin-push\n"

#. type: Plain text
#: en/git-push.txt:312
#, priority:220
msgid "Will fail unless you manually run `git fetch origin-push`. This method is of course entirely defeated by something that runs `git fetch --all`, in that case you'd need to either disable it or do something more tedious like:"
msgstr "Irá falhar a menos que você execute manualmente o comando `git fetch origin-push`. É claro que esse método será totalmente derrotado por algo que execute o comando `git fetch --all`, neste caso, você precisa desativá-lo ou fazer algo mais tedioso como:"

#. type: Plain text
#: en/git-push.txt:317
#, no-wrap, priority:220
msgid ""
"\tgit fetch              # update 'master' from remote\n"
"\tgit tag base master    # mark our base point\n"
"\tgit rebase -i master   # rewrite some commits\n"
"\tgit push --force-with-lease=master:base master:master\n"
msgstr ""
"\tgit fetch              # atualiza o 'master' remotamente\n"
"\tgit tag base master    # marca o ponto da nossa base\n"
"\tgit rebase -i master   # reescreve alguns commits\n"
"\tgit push --force-with-lease=master:base master:master\n"

#. type: Plain text
#: en/git-push.txt:323
#, priority:220
msgid "I.e. create a `base` tag for versions of the upstream code that you've seen and are willing to overwrite, then rewrite history, and finally force push changes to `master` if the remote version is still at `base`, regardless of what your local `remotes/origin/master` has been updated to in the background."
msgstr "Crie uma tag `base` para as versões do código upstream que você viu e está disposto a sobrescrever por exemplo, depois reescreva o histórico e finalmente, imponha um impulsionamento \"push\" com as alterações para `master` caso a versão remota ainda esteja na `base`, independentemente se os seus ramos `remotes/origin/master` locais foram atualizados em segundo plano ou não."

#. type: Plain text
#: en/git-push.txt:331
#, priority:220
msgid "Alternatively, specifying `--force-if-includes` as an ancillary option along with `--force-with-lease[=<refname>]` (i.e., without saying what exact commit the ref on the remote side must be pointing at, or which refs on the remote side are being protected) at the time of \"push\" will verify if updates from the remote-tracking refs that may have been implicitly updated in the background are integrated locally before allowing a forced update."
msgstr "Alternativamente, ao usar a opção `--force-if-includes` como uma opção auxiliar em conjunto com `--force-with-lease[=<refname>]` (sem dizer qual o ref exato do commit remoto, ou quais os refs remotos que estão sendo protegidos por exemplo) no momento do \"push\", irá verificar se as atualizações a partir dos refs monitorados remotamente tenham sido atualizados de forma implicita em segundo plano e se estão sendo integrados localmente antes de permitir uma atualização forçada."

#. type: Plain text
#: en/git-push.txt:339
#, priority:220
msgid "Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.  Also, when `--force-with-lease` option is used, the command refuses to update a remote ref whose current value does not match what is expected."
msgstr "Normalmente, o comando se recusa a atualizar uma \"ref\" remota que não seja um ancestral da \"ref\" local utilizada para substituí-la.  Além disso, quando a opção `--force-with-lease` é utilizada, o comando se recusa a atualizar uma \"ref\" remota cujo valor atual não corresponda ao esperado."

#. type: Plain text
#: en/git-push.txt:342
#, priority:220
msgid "This flag disables these checks, and can cause the remote repository to lose commits; use it with care."
msgstr "Esta opção desativa estas verificações e pode causar a perda do commit no repositório remoto; utilize com cuidado."

#. type: Plain text
#: en/git-push.txt:351
#, ignore-ellipsis, priority:220
msgid "Note that `--force` applies to all the refs that are pushed, hence using it with `push.default` set to `matching` or with multiple push destinations configured with `remote.*.push` may overwrite refs other than the current branch (including local refs that are strictly behind their remote counterpart).  To force a push to only one branch, use a `+` in front of the refspec to push (e.g `git push origin +master` to force a push to the `master` branch). See the `<refspec>...` section above for details."
msgstr "Observe que a opção `--force` se aplica a todos os refs que são impulsionados, portanto, utilizá-lo com `push.default` definido como `matching` ou com os vários impulsionamentos nos destinos configurados com `remote.*.push`,  pode substituir as outras refs que não sejam o ramo atual (incluindo as refs locais que estão estritamente por trás de sua contraparte remota).  Para impor um impulsionamento \"push\" em apenas um ramo, utilize um `+` na frente do \"refspec\" que será impulsionado (como `git push origin +master` para impor um impulsionamento \"push\" no ramo `master` por exemplo). Consulte a seção `<refspec>...` acima para obter mais detalhes."

#. type: Labeled list
#: en/git-push.txt:352
#, ignore-same, no-wrap, priority:220
msgid "--[no-]force-if-includes"
msgstr "--[no-]force-if-includes"

#. type: Plain text
#: en/git-push.txt:355
#, priority:220
msgid "Force an update only if the tip of the remote-tracking ref has been integrated locally."
msgstr "Impõem uma atualização apenas se o topo da ref monitorada remotamente estiver integrada localmente."

#. type: Plain text
#: en/git-push.txt:361
#, priority:220
msgid "This option enables a check that verifies if the tip of the remote-tracking ref is reachable from one of the \"reflog\" entries of the local branch based in it for a rewrite. The check ensures that any updates from the remote have been incorporated locally by rejecting the forced update if that is not the case."
msgstr "Esta opção permite uma checagem que verifica se o topo da referência monitorada remotamente é alcançável a partir de uma das entradas \"reflog\" do ramo local e feita com base nela para uma reescrita. A verificação assegura que quaisquer atualizações do ramo remoto foram incorporadas localmente, rejeitando a atualização forçada se não for esse o caso."

#. type: Plain text
#: en/git-push.txt:365
#, priority:220
msgid "If the option is passed without specifying `--force-with-lease`, or specified along with `--force-with-lease=<refname>:<expect>`, it is a \"no-op\"."
msgstr "Nenhuma operação será feita caso a opção seja usada sem definir `--force-with-lease` ou se definir junto com `--force-with-lease=<refname>:<expect>`."

#. type: Plain text
#: en/git-push.txt:367
#, priority:220
msgid "Specifying `--no-force-if-includes` disables this behavior."
msgstr "Usando a opção `--no-force-if-includes` desativa este comportamento."

#. type: Labeled list
#: en/git-push.txt:368
#, no-wrap, priority:220
msgid "--repo=<repository>"
msgstr "--repo=<repositório>"

#. type: Plain text
#: en/git-push.txt:371
#, priority:220
msgid "This option is equivalent to the <repository> argument. If both are specified, the command-line argument takes precedence."
msgstr "Esta opção é equivalente ao argumento <repositório>. Caso ambos sejam utilizados, o argumento da linha de comandos terá a prioridade."

#. type: Plain text
#: en/git-push.txt:378
#, priority:220
msgid "For every branch that is up to date or successfully pushed, add upstream (tracking) reference, used by argument-less linkgit:git-pull[1] and other commands. For more information, see `branch.<name>.merge` in linkgit:git-config[1]."
msgstr "Para cada ramo atualizado ou impulsionada com êxito, adicione uma referência \"upstream\" (monitorado), utilizada sem argumento pelo linkgit:git-pull[1] e os outros comandos. Para mais informações, consulte `branch.<nome>.merge` no linkgit:git-config[1]."

#. type: Labeled list
#: en/git-push.txt:379
#, ignore-same, no-wrap, priority:220
msgid "--[no-]thin"
msgstr "--[no-]thin"

#. type: Plain text
#: en/git-push.txt:384
#, priority:220
msgid "These options are passed to linkgit:git-send-pack[1]. A thin transfer significantly reduces the amount of sent data when the sender and receiver share many of the same objects in common. The default is `--thin`."
msgstr "Estas opções são passadas para o linkgit:git-send-pack[1]. Uma pequena transferência \"thin\" reduz significativamente a quantidade dos dados enviados quando o remetente e o destinatário compartilham muito dos mesmos objetos em comum. A predefinição é `--thin`."

#. type: Plain text
#: en/git-push.txt:390
#, priority:220
msgid "Suppress all output, including the listing of updated refs, unless an error occurs. Progress is not reported to the standard error stream."
msgstr "Suprima tudo o que for gerado, incluindo a listagem das atualizações das refs, a menos que um erro aconteça. O progresso não é relatado para o fluxo de erro predefinido."

#. type: Labeled list
#: en/git-push.txt:402
#, no-wrap, priority:220
msgid "--recurse-submodules=check|on-demand|only|no"
msgstr "--recurse-submodules=check|on-demand|only|no"

#. type: Plain text
#: en/git-push.txt:416
#, priority:220
msgid "May be used to make sure all submodule commits used by the revisions to be pushed are available on a remote-tracking branch.  If 'check' is used Git will verify that all submodule commits that changed in the revisions to be pushed are available on at least one remote of the submodule. If any commits are missing the push will be aborted and exit with non-zero status. If 'on-demand' is used all submodules that changed in the revisions to be pushed will be pushed. If on-demand was not able to push all necessary revisions it will also be aborted and exit with non-zero status. If 'only' is used all submodules will be recursively pushed while the superproject is left unpushed. A value of 'no' or using `--no-recurse-submodules` can be used to override the push.recurseSubmodules configuration variable when no submodule recursion is required."
msgstr "Pode ser utilizado para garantir que todos os submódulo dos commits utilizadas pelas revisões que serão enviadas estejam disponíveis numa ramificação monitorada remotamente.  Caso 'check' seja utilizado, o Git verificará se todos os commit do submódulo que foram alterados nas revisões que serão enviadas estão disponíveis em pelo menos um ramo remoto do submódulo. Caso algum commit esteja ausente, o push será abortado e encerrará com uma condição diferente de zero. Caso 'on demand' seja utilizado, todos os submódulos que foram alterados nas revisões que serão impulsionadas, serão impulsionadas. Caso 'on demand' não puder enviar todas as revisões necessárias, ela também será abortada e sairá com uma condição diferente de zero. Caso 'only' seja utilizado, todos os submódulos serão impulsionados de forma recursiva enquanto o superprojeto não seja deixado sem impulsionamento. Um valor de 'no' ou utilizando a opção `--no-recurse-submodules` pode ser utilizado para substituir a variável de configuração `push.recurseSubmodules` quando nenhuma recursão do sub-módulo for necessária."

#. type: Plain text
#: en/git-push.txt:421
#, priority:220
msgid "Toggle the pre-push hook (see linkgit:githooks[5]).  The default is --verify, giving the hook a chance to prevent the push.  With --no-verify, the hook is bypassed completely."
msgstr "Alterna o gancho \"pre-push\" (consulte linkgit:githooks[5]).  A opção `--verify` é a predefinição, dando ao gancho a chance de impedir o impulsionamento.  Com a opção --no-verify, o gancho é completamente ignorado."

#. type: Plain text
#: en/git-push.txt:438
#, priority:220
msgid "The output of \"git push\" depends on the transport method used; this section describes the output when pushing over the Git protocol (either locally or via ssh)."
msgstr "O que é gerado através do \"git push\" depende do método de transporte utilizado; Esta seção descreve a saída gerada durante o impulsionamento através do protocolo Git (localmente ou através do ssh)."

#. type: Plain text
#: en/git-push.txt:441
#, priority:220
msgid "The status of the push is output in tabular form, with each line representing the status of a single ref. Each line is of the form:"
msgstr "Durante um \"push\" a condição é que seja gerado em formato de tabela, com cada linha representando a condição de um único \"ref\". Cada linha é uma forma de:"

#. type: delimited block -
#: en/git-push.txt:444
#, no-wrap, priority:220
msgid " <flag> <summary> <from> -> <to> (<reason>)\n"
msgstr " <flag> <resumo> <from> -> <to> (<reason>)\n"

#. type: Plain text
#: en/git-push.txt:447
#, priority:220
msgid "If --porcelain is used, then each line of the output is of the form:"
msgstr "Caso a opção `--porcelain` seja utilizado, cada linha da saída terá o formato:"

#. type: delimited block -
#: en/git-push.txt:450
#, no-wrap, priority:220
msgid " <flag> \\t <from>:<to> \\t <summary> (<reason>)\n"
msgstr " <flag> \\t <from>:<to> \\t <summary> (<reason>)\n"

#. type: Plain text
#: en/git-push.txt:454
#, priority:220
msgid "The status of up-to-date refs is shown only if --porcelain or --verbose option is used."
msgstr "A condição das referências atualizadas é exibido apenas caso a opção `--porcelain` ou `--verbose` seja utilizada."

#. type: Plain text
#: en/git-push.txt:458
#, priority:220
msgid "for a successfully pushed fast-forward;"
msgstr "para um push com avanço rápido bem sucedido;"

#. type: Plain text
#: en/git-push.txt:460
#, priority:220
msgid "for a successfully deleted ref;"
msgstr "para uma \"ref\" que foi excluída com sucesso;"

#. type: Plain text
#: en/git-push.txt:461
#, priority:220
msgid "for a successfully pushed new ref;"
msgstr "para uma nova \"ref\" enviada com sucesso;"

#. type: Plain text
#: en/git-push.txt:462
#, priority:220
msgid "for a ref that was rejected or failed to push; and"
msgstr "para uma \"ref\"que foi rejeitado ou não conseguiu realizar o impulsionamento \"push\"; e"

#. type: Plain text
#: en/git-push.txt:463
#, priority:220
msgid "for a ref that was up to date and did not need pushing."
msgstr "para uma \"ref\" que estava atualizada e não precisava do impulsionamento \"push\"."

#. type: Plain text
#: en/git-push.txt:469
#, ignore-ellipsis, priority:220
msgid "For a successfully pushed ref, the summary shows the old and new values of the ref in a form suitable for using as an argument to `git log` (this is `<old>..<new>` in most cases, and `<old>...<new>` for forced non-fast-forward updates)."
msgstr "Para uma \"ref\" impulsionada com sucesso, o resumo mostra os valores antigos e os novos da \"ref\" num formato adequado para a utilização como argumento para o comando `git log` (isso é `<antigo>..<novo>` na maioria dos casos, e `<antigo>...<novo>` para as atualizações impostas pelo avanço rápido)."

#. type: Plain text
#: en/git-push.txt:471
#, priority:220
msgid "For a failed update, more details are given:"
msgstr "Para uma atualização que falhou, mais detalhes serão dados:"

#. type: Labeled list
#: en/git-push.txt:473
#, no-wrap, priority:220
msgid "rejected"
msgstr "rejeitado"

#. type: Plain text
#: en/git-push.txt:476
#, priority:220
msgid "Git did not try to send the ref at all, typically because it is not a fast-forward and you did not force the update."
msgstr "O Git não tenta encaminhar a \"ref\" de forma alguma, geralmente porque não é um avanço rápido e você não impôs a atualização."

#. type: Labeled list
#: en/git-push.txt:477
#, no-wrap, priority:220
msgid "remote rejected"
msgstr "rejeitado remotamente"

#. type: Plain text
#: en/git-push.txt:485
#, priority:220
msgid "The remote end refused the update.  Usually caused by a hook on the remote side, or because the remote repository has one of the following safety options in effect: `receive.denyCurrentBranch` (for pushes to the checked out branch), `receive.denyNonFastForwards` (for forced non-fast-forward updates), `receive.denyDeletes` or `receive.denyDeleteCurrent`.  See linkgit:git-config[1]."
msgstr "Quando o lado remoto recusa a atualização.  Geralmente cautilizada por um gancho no lado remoto ou porque o repositório remoto possui uma das seguintes opções de segurança em vigor: `receive.denyCurrentBranch` (para um `push` feiro num ramo verificado), `receive.denyNonFastForwards` (para atualizações impostas ou rápidas), `receive.denyDeletes` ou `receive.denyDeleteCurrent`.  Consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/git-push.txt:486
#, no-wrap, priority:220
msgid "remote failure"
msgstr "falha remota"

#. type: Plain text
#: en/git-push.txt:490
#, priority:220
msgid "The remote end did not report the successful update of the ref, perhaps because of a temporary error on the remote side, a break in the network connection, or other transient error."
msgstr "O lado remoto não relatou a atualização bem-sucedida da \"ref\", talvez por causa de um erro temporário, uma interrupção na conexão da rede ou um outro erro transitório."

#. type: Plain text
#: en/git-push.txt:496
#, priority:220
msgid "The name of the local ref being pushed, minus its `refs/<type>/` prefix. In the case of deletion, the name of the local ref is omitted."
msgstr "O nome do \"ref\" local que está sendo impulsionado, menos o seu prefixo `refs/<tipo>/`. No caso de exclusão, o nome do \"ref\" local é omitido."

#. type: Plain text
#: en/git-push.txt:500
#, priority:220
msgid "The name of the remote ref being updated, minus its `refs/<type>/` prefix."
msgstr "O nome ref remoto sendo atualizado, menos o seu prefixo `refs/<tipo>/`."

#. type: Plain text
#: en/git-push.txt:505
#, priority:220
msgid "A human-readable explanation. In the case of successfully pushed refs, no explanation is needed. For a failed ref, the reason for failure is described."
msgstr "Uma explicação legível para pessoas. No caso dos refs que forem enviados com sucesso, nenhuma explicação é necessária. Para um \"ref\" que falhou, o motivo do fracasso então é descrito."

#. type: Title -
#: en/git-push.txt:507
#, no-wrap, priority:220
msgid "NOTE ABOUT FAST-FORWARDS"
msgstr "NOTA SOBRE AVANÇOS RÁPIDOS"

#. type: Plain text
#: en/git-push.txt:512
#, priority:220
msgid "When an update changes a branch (or more in general, a ref) that used to point at commit A to point at another commit B, it is called a fast-forward update if and only if B is a descendant of A."
msgstr "Quando uma atualização altera um ramo (ou geralmente uma \"ref\") que costumava apontar para o commit 'A' que aponta para outro commit 'B', é chamado de atualização de avanço rápido apenas e somente se 'B' for descendente de 'A'."

#. type: Plain text
#: en/git-push.txt:516
#, priority:220
msgid "In a fast-forward update from A to B, the set of commits that the original commit A built on top of is a subset of the commits the new commit B builds on top of.  Hence, it does not lose any history."
msgstr "Em uma atualização de avanço rápido de A para B, o conjunto dos commits que o commit original A que construiu sobre ela é um subconjunto dos commits que o novo commit B constrói sobre ela.  Portanto, não perde nenhum histórico."

#. type: Plain text
#: en/git-push.txt:521
#, priority:220
msgid "In contrast, a non-fast-forward update will lose history.  For example, suppose you and somebody else started at the same commit X, and you built a history leading to commit B while the other person built a history leading to commit A.  The history looks like this:"
msgstr "Por outro lado, uma atualização sem avanço rápido perderá o histórico.  Por exemplo, suponha que você e uma outra pessoa tenham iniciado o mesmo commit 'X' e você construiu um histórico que leva ao commit 'B', enquanto a outra pessoa construiu um histórico que leva ao commit 'A'.  O histórico ficaria assim:"

#. type: delimited block -
#: en/git-push.txt:527
#, no-wrap, priority:220
msgid ""
"      B\n"
"     /\n"
" ---X---A\n"
msgstr ""
"      B\n"
"     /\n"
" ---X---A\n"

#. type: Plain text
#: en/git-push.txt:533
#, priority:220
msgid "Further suppose that the other person already pushed changes leading to A back to the original repository from which you two obtained the original commit X."
msgstr "Além disso, suponha que a outra pessoa já tenha enviado as alterações que levam \"A\" de volta ao repositório original, a partir do qual vocês dois obtiveram o commit \"X\" original."

#. type: Plain text
#: en/git-push.txt:536
#, priority:220
msgid "The push done by the other person updated the branch that used to point at commit X to point at commit A.  It is a fast-forward."
msgstr "O impulsionamento feito pela outra pessoa atualizou o ramo que costumava apontar no commit 'X' para apontar no commit 'A'. É um avanço rápido."

#. type: Plain text
#: en/git-push.txt:541
#, priority:220
msgid "But if you try to push, you will attempt to update the branch (that now points at A) with commit B.  This does _not_ fast-forward.  If you did so, the changes introduced by commit A will be lost, because everybody will now start building on top of B."
msgstr "Porém caso você tente impulsionar, você tentará atualizar o ramo (que agora aponta para 'A') com o commit 'B'. Isso _não_ fa o avanço rapido.  Se você fez isso, as alterações introduzidas pelo commit 'A' serão perdidas, porque todo mundo começará a construir em cima do 'B'."

#. type: Plain text
#: en/git-push.txt:544
#, priority:220
msgid "The command by default does not allow an update that is not a fast-forward to prevent such loss of history."
msgstr "É predefinido que o comando não permita uma atualização que não seja um avanço rápido para impedir esta perda do histórico."

#. type: Plain text
#: en/git-push.txt:549
#, priority:220
msgid "If you do not want to lose your work (history from X to B) or the work by the other person (history from X to A), you would need to first fetch the history from the repository, create a history that contains changes done by both parties, and push the result back."
msgstr "Caso não queira perder o seu trabalho (histórico 'X' para 'B') ou o trabalho da outra pessoa (histórico de 'X' para 'A'), é necessário primeiro buscar o histórico no repositório, criar um histórico que contenha as alterações feitas por ambas as partes e que impulsione o resultado de volta."

#. type: Plain text
#: en/git-push.txt:553
#, priority:220
msgid "You can perform \"git pull\", resolve potential conflicts, and \"git push\" the result.  A \"git pull\" will create a merge commit C between commits A and B."
msgstr "É possível executar o comando \"git pull\", para resolver os possíveis conflitos e comando \"git push\" o resultado.  Um comando \"git pull\" criará um commit da mesclagem 'C' entre os commits 'A' e 'B'."

#. type: delimited block -
#: en/git-push.txt:559
#, no-wrap, priority:220
msgid ""
"      B---C\n"
"     /   /\n"
" ---X---A\n"
msgstr ""
"      B---C\n"
"     /   /\n"
" ---X---A\n"

#. type: Plain text
#: en/git-push.txt:564
#, priority:220
msgid "Updating A with the resulting merge commit will fast-forward and your push will be accepted."
msgstr "A atualização de \"A\" com a consolidação resultante da mesclagem, avançará rapidamente e o seu envio será aceito."

#. type: Plain text
#: en/git-push.txt:569
#, priority:220
msgid "Alternatively, you can rebase your change between X and B on top of A, with \"git pull --rebase\", and push the result back.  The rebase will create a new commit D that builds the change between X and B on top of A."
msgstr "Como alternativa, você pode reconstruir a sua alteração entre 'X' e o 'B' no topo de 'A', com o comando \"git pull --rebase\", e fazer o impulsionamento do resultado de volta.  Uma reconstrução da fundação \"rebase\" criará um novo commit 'D' que gera a alteração entre 'X' e 'B' em cima de 'A'."

#. type: delimited block -
#: en/git-push.txt:575
#, no-wrap, priority:220
msgid ""
"      B   D\n"
"     /   /\n"
" ---X---A\n"
msgstr ""
"      B   D\n"
"     /   /\n"
" ---X---A\n"

#. type: Plain text
#: en/git-push.txt:580
#, priority:220
msgid "Again, updating A with this commit will fast-forward and your push will be accepted."
msgstr "Novamente, a atualização de 'A' com este commit avançará rapidamente e o seu envio será aceito."

#. type: Plain text
#: en/git-push.txt:591
#, priority:220
msgid "There is another common situation where you may encounter non-fast-forward rejection when you try to push, and it is possible even when you are pushing into a repository nobody else pushes into. After you push commit A yourself (in the first picture in this section), replace it with \"git commit --amend\" to produce commit B, and you try to push it out, because forgot that you have pushed A out already. In such a case, and only if you are certain that nobody in the meantime fetched your earlier commit A (and started building on top of it), you can run \"git push --force\" to overwrite it. In other words, \"git push --force\" is a method reserved for a case where you do mean to lose history."
msgstr "Há uma outra situação comum onde é possível encontrar uma rejeição sem avanço rápido ao tentar enviar através do \"push\", e é possível mesmo quando você está impulsionando para um repositório que ninguém mais faz impulsionamentos. Depois de enviar o commit 'A' (na primeira foto desta seção), substitua-o pelo comando \"git commit --amend\" para produzir o commit 'B' e tente realizar o \"push\", porque foi esquecido que já foi feito um push para 'A'. Neste caso e somente caso tenha certeza que ninguém fez a busca pelo seu commit 'A' anterior (e começou a construir em cima ele), execute o comando \"git push --force\" para substituí-lo. Em outras palavras, o comando \"git push --force\" é um método reservado para o caso onde você queira perder o histórico."

#. type: Labeled list
#: en/git-push.txt:596
#, no-wrap, priority:220
msgid "`git push`"
msgstr "`git push`"

#. type: Plain text
#: en/git-push.txt:600
#, priority:220
msgid "Works like `git push <remote>`, where <remote> is the current branch's remote (or `origin`, if no remote is configured for the current branch)."
msgstr "Funciona como `git push <remoto>`, onde <remoto> é o ramo remoto da ramificação atual (ou `origin` (origem), caso nenhum ramo remoto estiver configurado para a ramificação atual)."

#. type: Labeled list
#: en/git-push.txt:601
#, no-wrap, priority:220
msgid "`git push origin`"
msgstr "`git push origin`"

#. type: Plain text
#: en/git-push.txt:606
#, priority:220
msgid "Without additional configuration, pushes the current branch to the configured upstream (`branch.<name>.merge` configuration variable) if it has the same name as the current branch, and errors out without pushing otherwise."
msgstr "Sem uma configuração adicional, envia a ramificação atual para a upstream configurada (a variável de configuração `branch.<name>.merge`) caso ela tenha o mesmo nome que o ramo atual e os erros ocorrerem sem qualquer outro impulsionamento."

#. type: Plain text
#: en/git-push.txt:610
#, priority:220
msgid "The default behavior of this command when no <refspec> is given can be configured by setting the `push` option of the remote, or the `push.default` configuration variable."
msgstr "O comportamento predefinido deste comando quando nenhum <refspec> for informado, pode ser configurado definindo a opção `push` do ramo remoto ou a variável de configuração `push.default`."

#. type: Plain text
#: en/git-push.txt:615
#, priority:220
msgid "For example, to default to pushing only the current branch to `origin` use `git config remote.origin.push HEAD`.  Any valid <refspec> (like the ones in the examples below) can be configured as the default for `git push origin`."
msgstr "Por exemplo, para utilizar como predefinido apenas no ramo atual para `origin`, utilize `git config remote.origin.push HEAD`.  Qualquer <refspec> válido (como os exemplos abaixo) pode ser configurado como a predefinição para `git push origin`."

#. type: Labeled list
#: en/git-push.txt:616
#, no-wrap, priority:220
msgid "`git push origin :`"
msgstr "`git push origin :`"

#. type: Plain text
#: en/git-push.txt:620
#, priority:220
msgid "Push \"matching\" branches to `origin`. See <refspec> in the <<OPTIONS,OPTIONS>> section above for a description of \"matching\" branches."
msgstr "Impulsiona (push) as ramificações \"que coincidam\" para `origin`. Consulte o <refspec> na seção <<OPTIONS,OPTIONS>> acima para obter uma descrição dos ramos \"coincidentes\"."

#. type: Labeled list
#: en/git-push.txt:621
#, no-wrap, priority:220
msgid "`git push origin master`"
msgstr "`git push origin master`"

#. type: Plain text
#: en/git-push.txt:627
#, priority:220
msgid "Find a ref that matches `master` in the source repository (most likely, it would find `refs/heads/master`), and update the same ref (e.g. `refs/heads/master`) in `origin` repository with it.  If `master` did not exist remotely, it would be created."
msgstr "Encontre uma \"ref\" que coincida com o `master` no repositório da origem (provavelmente encontrará `refs/heads/master`) e atualize a mesma \"ref\" (`refs/heads/master` por exemplo) no repositório `origin` com ela .  Caso o `master` não existisse remotamente, ele seria criado."

#. type: Labeled list
#: en/git-push.txt:628
#, no-wrap, priority:220
msgid "`git push origin HEAD`"
msgstr "`git push origin HEAD`"

#. type: Plain text
#: en/git-push.txt:631
#, priority:220
msgid "A handy way to push the current branch to the same name on the remote."
msgstr "Uma maneira prática de enviar a ramificação atual com o mesmo nome no ramo remoto."

#. type: Labeled list
#: en/git-push.txt:632
#, no-wrap, priority:220
msgid "`git push mothership master:satellite/master dev:satellite/dev`"
msgstr "`git push mothership master:satellite/master dev:satellite/dev`"

#. type: Plain text
#: en/git-push.txt:637
#, priority:220
msgid "Use the source ref that matches `master` (e.g. `refs/heads/master`)  to update the ref that matches `satellite/master` (most probably `refs/remotes/satellite/master`) in the `mothership` repository; do the same for `dev` and `satellite/dev`."
msgstr "Utilize a fonte \"ref\" que coincida com `master` (`refs/heads/ master` por exemplo) para atualizar a \"ref\" que coincida com `satellite/master` (provavelmente `refs/remotes/satellite/master`) no repositório `mothership`; faça o mesmo para `dev` e `satellite/dev`."

#. type: Plain text
#: en/git-push.txt:640
#, ignore-ellipsis, priority:220
msgid "See the section describing `<refspec>...` above for a discussion of the matching semantics."
msgstr "Consulte a seção que descreve `<refspec> ...` acima para uma discussão sobre a combinação semântica."

#. type: Plain text
#: en/git-push.txt:647
#, priority:220
msgid "This is to emulate `git fetch` run on the `mothership` using `git push` that is run in the opposite direction in order to integrate the work done on `satellite`, and is often necessary when you can only make connection in one way (i.e. satellite can ssh into mothership but mothership cannot initiate connection to satellite because the latter is behind a firewall or does not run sshd)."
msgstr "Isto serve para emular o comando `git fetch` executado na `mothership` utilizando o `git push` que é executado na direção oposta para integrar o trabalho realizado no `satellite` e geralmente é necessário quando só é possível fazer a conexão num sentido (ou seja, o satélite pode fazer uma conexão ssh com a nave mãe \"mothership\" mas a nave mãe não pode iniciar a conexão com o satélite porque este está atrás de um firewall ou não está executando o sshd (servidor ssh))."

#. type: Plain text
#: en/git-push.txt:652
#, priority:220
msgid "After running this `git push` on the `satellite` machine, you would ssh into the `mothership` and run `git merge` there to complete the emulation of `git pull` that were run on `mothership` to pull changes made on `satellite`."
msgstr "Depois de executar o comando `git push` na máquina do `satellite`, você entraria na `mothership` e executaria o comando `git merge` lá para concluir a emulação do comando `git pull` executada na `mothership` para obter as alterações feitas no \"satellite\"."

#. type: Labeled list
#: en/git-push.txt:653
#, no-wrap, priority:220
msgid "`git push origin HEAD:master`"
msgstr "`git push origin HEAD: master`"

#. type: Plain text
#: en/git-push.txt:657
#, priority:220
msgid "Push the current branch to the remote ref matching `master` in the `origin` repository. This form is convenient to push the current branch without thinking about its local name."
msgstr "Envie o ramo atual para a referência remota que coincida com `master` no repositório `origin`. Este formulário é conveniente para impulsionar o ramo atual sem pensar no nome local."

#. type: Labeled list
#: en/git-push.txt:658
#, no-wrap, priority:220
msgid "`git push origin master:refs/heads/experimental`"
msgstr "`git push origin master:refs/heads/experimental`"

#. type: Plain text
#: en/git-push.txt:664
#, priority:220
msgid "Create the branch `experimental` in the `origin` repository by copying the current `master` branch.  This form is only needed to create a new branch or tag in the remote repository when the local name and the remote name are different; otherwise, the ref name on its own will work."
msgstr "Crie o ramo `experimental` no repositório `origin` copiando o ramo `master` atual.  Este formulário é necessário apenas para criar um novo ramo ou a tag no repositório remoto quando o nome local e o nome remoto forem diferentes; caso contrário, o nome da \"ref\" por si só funcionará."

#. type: Labeled list
#: en/git-push.txt:665
#, no-wrap, priority:220
msgid "`git push origin :experimental`"
msgstr "`git push origin :experimental`"

#. type: Plain text
#: en/git-push.txt:668
#, priority:220
msgid "Find a ref that matches `experimental` in the `origin` repository (e.g. `refs/heads/experimental`), and delete it."
msgstr "Encontre uma \"ref\" que coincida com `experimental` no repositório `origin` (`refs/heads/experimental` por exemplo) e exclua-a."

#. type: Labeled list
#: en/git-push.txt:669
#, no-wrap, priority:220
msgid "`git push origin +dev:master`"
msgstr "`git push origin +dev:master`"

#. type: Plain text
#: en/git-push.txt:674
#, priority:220
msgid "Update the origin repository's master branch with the dev branch, allowing non-fast-forward updates.  *This can leave unreferenced commits dangling in the origin repository.* Consider the following situation, where a fast-forward is not possible:"
msgstr "Atualize o ramo principal na origem do repositório com o ramo 'dev', permitindo atualizações sem o avanço rápido.  *Isso pode deixar os commits sem referência pendentes no repositório de origem.* Considere a seguinte situação, onde um avanço rápido não seja possível:"

#. type: delimited block -
#: en/git-push.txt:679
#, no-wrap, priority:220
msgid ""
"\t    o---o---o---A---B  origin/master\n"
"\t\t     \\\n"
"\t\t      X---Y---Z  dev\n"
msgstr ""
"\t    o---o---o---A---B  origin/master\n"
"\t\t     \\\n"
"\t\t      X---Y---Z  dev\n"

#. type: Plain text
#: en/git-push.txt:682
#, priority:220
msgid "The above command would change the origin repository to"
msgstr "O comando acima alteraria o repositório de origem para"

#. type: delimited block -
#: en/git-push.txt:687
#, no-wrap, priority:220
msgid ""
"\t\t      A---B  (unnamed branch)\n"
"\t\t     /\n"
"\t    o---o---o---X---Y---Z  master\n"
msgstr ""
"\t\t      A---B  (ramo sem nome)\n"
"\t\t     /\n"
"\t    o---o---o---X---Y---Z  master\n"

#. type: Plain text
#: en/git-push.txt:692
#, priority:220
msgid "Commits A and B would no longer belong to a branch with a symbolic name, and so would be unreachable.  As such, these commits would be removed by a `git gc` command on the origin repository."
msgstr "Os commits 'A' e 'B' não pertenceriam mais a um ramo com um nome simbólico, portanto, seriam inacessíveis.  Como tal, estes commits seriam removidos por um comando `git gc` no repositório de origem."

#. type: Title =
#: en/git-quiltimport.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-quiltimport(1)"
msgstr "git-quiltimport(1)"

#. type: Plain text
#: en/git-quiltimport.txt:7
#, priority:100
msgid "git-quiltimport - Applies a quilt patchset onto the current branch"
msgstr "git-quiltimport - Aplica um conjunto de patches no ramo atual"

#. type: Plain text
#: en/git-quiltimport.txt:14
#, no-wrap, priority:100
msgid ""
"'git quiltimport' [--dry-run | -n] [--author <author>] [--patches <dir>]\n"
"\t\t[--series <file>] [--keep-non-patch]\n"
msgstr ""
"'git quiltimport' [--dry-run | -n] [--author <autor>] [--patches <dir>]\n"
"\t\t[--series <arquivo>] [--keep-non-patch]\n"

#. type: Plain text
#: en/git-quiltimport.txt:21
#, priority:100
msgid "Applies a quilt patchset onto the current Git branch, preserving the patch boundaries, patch order, and patch descriptions present in the quilt patchset."
msgstr "Aplica um conjunto de patches no ramo Git atual, preservando os limites, a ordem e as suas descrições."

#. type: Plain text
#: en/git-quiltimport.txt:27
#, priority:100
msgid "For each patch the code attempts to extract the author from the patch description.  If that fails it falls back to the author specified with --author.  If the --author flag was not given the patch description is displayed and the user is asked to interactively enter the author of the patch."
msgstr "Para cada patch, o código tenta extrair o autor da descrição do patch.  Caso falhe, ele retornará ao autor definido com --author.  Se o a opção `--author` não seja informado, a descrição do patch é exibida e o usuário é solicitado a inserir interativamente o autor do patch."

#. type: Plain text
#: en/git-quiltimport.txt:30
#, priority:100
msgid "If a subject is not found in the patch description the patch name is preserved as the 1 line subject in the Git description."
msgstr "Caso um assunto não seja encontrado na descrição do patch, o nome do patch será preservado como o assunto com 1 linha na descrição do Git."

#. type: Plain text
#: en/git-quiltimport.txt:40
#, priority:100
msgid "Walk through the patches in the series and warn if we cannot find all of the necessary information to commit a patch.  At the time of this writing only missing author information is warned about."
msgstr "Percorra os patches da série e avise caso não consigamos encontrar todas as informações necessárias para fazer o commit de um patch.  No momento da redação deste artigo, apenas as informações ausentes do autor são alertadas."

#. type: Labeled list
#: en/git-quiltimport.txt:41
#, no-wrap, priority:100
msgid "--author Author Name <Author Email>"
msgstr "--author Nome do Autor <E-Mail do Autor>"

#. type: Plain text
#: en/git-quiltimport.txt:44
#, priority:100
msgid "The author name and email address to use when no author information can be found in the patch description."
msgstr "O nome do autor e o endereço de e-mail que serão utilizados quando nenhuma informação do autor puder ser encontrada na descrição do patch."

#. type: Labeled list
#: en/git-quiltimport.txt:45
#, no-wrap, priority:100
msgid "--patches <dir>"
msgstr "--patches <dir>"

#. type: Plain text
#: en/git-quiltimport.txt:47
#, priority:100
msgid "The directory to find the quilt patches."
msgstr "O diretório para encontrar a colcha de retalhos dos patches."

#. type: Plain text
#: en/git-quiltimport.txt:51
#, priority:100
msgid "The default for the patch directory is patches or the value of the `$QUILT_PATCHES` environment variable."
msgstr "A predefinição para o diretório de patches é \"patches\" ou o valor da variável de ambiente `$QUILT_PATCHES`."

#. type: Labeled list
#: en/git-quiltimport.txt:52
#, no-wrap, priority:100
msgid "--series <file>"
msgstr "--series <arquivo>"

#. type: Plain text
#: en/git-quiltimport.txt:54
#, priority:100
msgid "The quilt series file."
msgstr "O arquivo da série colcha de retalhos \"quilt\"."

#. type: Plain text
#: en/git-quiltimport.txt:58
#, priority:100
msgid "The default for the series file is <patches>/series or the value of the `$QUILT_SERIES` environment variable."
msgstr "O padrão para o arquivo da série são <patches>/series ou o valor da variável de ambiente `$QUILT_SERIES`."

#. type: Title =
#: en/git-range-diff.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-range-diff(1)"
msgstr "git-range-diff(1)"

#. type: Plain text
#: en/git-range-diff.txt:7
#, priority:100
msgid "git-range-diff - Compare two commit ranges (e.g. two versions of a branch)"
msgstr "git-range-diff - Compara os dois intervalos de um commit (as duas versões de um ramo por exemplo)"

#. type: Plain text
#: en/git-range-diff.txt:16
#, fuzzy, ignore-ellipsis, no-wrap, priority:100
#| msgid ""
#| "'git range-diff' [--color=[<when>]] [--no-color] [<diff-options>]\n"
#| "\t[--no-dual-color] [--creation-factor=<factor>]\n"
#| "\t[--left-only | --right-only]\n"
#| "\t( <range1> <range2> | <rev1>...<rev2> | <base> <rev1> <rev2> )\n"
msgid ""
"'git range-diff' [--color=[<when>]] [--no-color] [<diff-options>]\n"
"\t[--no-dual-color] [--creation-factor=<factor>]\n"
"\t[--left-only | --right-only]\n"
"\t( <range1> <range2> | <rev1>...<rev2> | <base> <rev1> <rev2> )\n"
"\t[[--] <path>...]\n"
msgstr ""
"'git range-diff' [--color=[<quando>]] [--no-color] [<diff-options>]\n"
"\t[--no-dual-color] [--creation-factor=<fator>]\n"
"\t[--left-only | --right-only]\n"
"\t( <intervalo1> <intervalo2> | <rev1>...<rev2> | <base> <rev1> <rev2> )\n"

#. type: Plain text
#: en/git-range-diff.txt:22
#, priority:100
msgid "This command shows the differences between two versions of a patch series, or more generally, two commit ranges (ignoring merge commits)."
msgstr "Este comando mostra as diferenças entre as duas versões de uma série de correções (patchs) ou de forma geral, dois intervalos entre os commits (ignorando as confirmações de mesclagem)."

#. type: Plain text
#: en/git-range-diff.txt:25
#, priority:100
msgid "In the presence of `<path>` arguments, these commit ranges are limited accordingly."
msgstr ""

#. type: Plain text
#: en/git-range-diff.txt:31
#, priority:100
msgid "To that end, it first finds pairs of commits from both commit ranges that correspond with each other. Two commits are said to correspond when the diff between their patches (i.e. the author information, the commit message and the commit diff) is reasonably small compared to the patches' size. See ``Algorithm`` below for details."
msgstr "Para esse fim, ele primeiro encontra os pares dos commits a partir de ambos os intervalos entre os commits onde um corresponda ao outro. Sabe-se que dois commits se correspondem quando a diferença entre os patchs das suas correções (ou seja, a informação do autor, a mensagem do commit e a diferença deste commit) seja razoavelmente pequena comparada ao tamanho dos patches de correções. Consulte ``Algoritmo`` abaixo para obter mais detalhes."

#. type: Plain text
#: en/git-range-diff.txt:35
#, priority:100
msgid "Finally, the list of matching commits is shown in the order of the second commit range, with unmatched commits being inserted just after all of their ancestors have been shown."
msgstr "Finalmente, a lista de correspondência dos commits é mostrada na ordem do intervalo do segundo commit, com commits sem correspondência sendo inseridos logo depois que todos os seus ancestrais tenham sido mostrados."

#. type: Plain text
#: en/git-range-diff.txt:37
#, priority:100
msgid "There are three ways to specify the commit ranges:"
msgstr "Existem três maneiras de definir os intervalos do commit:"

#. type: Plain text
#: en/git-range-diff.txt:41
#, priority:100
msgid "`<range1> <range2>`: Either commit range can be of the form `<base>..<rev>`, `<rev>^!` or `<rev>^-<n>`. See `SPECIFYING RANGES` in linkgit:gitrevisions[7] for more details."
msgstr "`<intervalo1> <intervalo2>`: Qualquer intervalo do commit pode ter o formato `<base>..<rev>`, `<rev>^!` ou `<rev>^-<n>`. Para mais detalhes consulte `ESPECIFICANDO OS INTERVALOS` em linkgit:gitrevisions[7]."

#. type: Plain text
#: en/git-range-diff.txt:44
#, ignore-ellipsis, priority:100
msgid "`<rev1>...<rev2>`. This is equivalent to `<rev2>..<rev1> <rev1>..<rev2>`."
msgstr "`<rev1>...<rev2>`. É equivalente a `<rev2>..<rev1> <rev1>..<rev2>`."

#. type: Plain text
#: en/git-range-diff.txt:47
#, priority:100
msgid "`<base> <rev1> <rev2>`: This is equivalent to `<base>..<rev1> <base>..<rev2>`."
msgstr "`<base> <rev1> <rev2>`: É equivalente a `<base>..<rev1> <base>..<rev2>`."

#. type: Labeled list
#: en/git-range-diff.txt:50
#, ignore-same, no-wrap, priority:100
msgid "--no-dual-color"
msgstr "--no-dual-color"

#. type: Plain text
#: en/git-range-diff.txt:55
#, priority:100
msgid "When the commit diffs differ, `git range-diff` recreates the original diffs' coloring, and adds outer -/+ diff markers with the *background* being red/green to make it easier to see e.g.  when there was a change in what exact lines were added."
msgstr "Quando as diferenças entre os commits não batem, o comando `git range-diff` recria a coloração das diferenças originais e adiciona marcações -/+ ao diff externo com o *fundo* sendo vermelho/verde tornando mais fácil a sua visualização, por exemplo, mostrando exatamente quando houve uma alteração nas linhas que foram adicionadas."

#. type: Plain text
#: en/git-range-diff.txt:63
#, priority:100
msgid "Additionally, the commit diff lines that are only present in the first commit range are shown \"dimmed\" (this can be overridden using the `color.diff.<slot>` config setting where `<slot>` is one of `contextDimmed`, `oldDimmed` and `newDimmed`), and the commit diff lines that are only present in the second commit range are shown in bold (which can be overridden using the config settings `color.diff.<slot>` with `<slot>` being one of `contextBold`, `oldBold` or `newBold`)."
msgstr "Além disso, as linhas de diferenças de confirmação que estão presentes apenas no primeiro intervalo de confirmação são mostradas \"esmaecidas\" (isso pode ser alterado usando a configuração `color.diff.<slot>` onde `<slot>` será `contextDimmed` , `oldDimmed` e `newDimmed`), as linhas das diferenças do commit que estão presentes apenas no segundo intervalo do commit são mostradas em negrito (podendo ser substituídas usando as configurações `color.diff.<slot>` com `<slot > `sendo `contextBold`, `oldBold` ou `newBold`)."

#. type: Plain text
#: en/git-range-diff.txt:67
#, priority:100
msgid "This is known to `range-diff` as \"dual coloring\". Use `--no-dual-color` to revert to color all lines according to the outer diff markers (and completely ignore the inner diff when it comes to color)."
msgstr "Isso é conhecido por `range-diff` como \"coloração dupla\". Use a opção `--no-dual-color` para reverter a cor de todas as linhas de acordo com os marcações diff externos (e ignorar completamente o diff interno quando se tratar de cor)."

#. type: Plain text
#: en/git-range-diff.txt:75
#, priority:100
msgid "Set the creation/deletion cost fudge factor to `<percent>`.  Defaults to 60. Try a larger value if `git range-diff` erroneously considers a large change a total rewrite (deletion of one commit and addition of another), and a smaller one in the reverse case.  See the ``Algorithm`` section below for an explanation why this is needed."
msgstr "Defina o fator de correção do custo de criação/exclusão para `<percentual>`.  A predefinição retorna para 60. Tente um valor maior caso o comando `git range-diff` considere erroneamente uma grande alteração como uma reformulação completa (a exclusão de um commit e a adição de um outro), e um menor no caso inverso.  Consulte a seção ``Algoritmo`` abaixo para uma explicação pois isso é necessário."

#. type: Labeled list
#: en/git-range-diff.txt:76 en/rev-list-options.txt:274
#, ignore-same, no-wrap, priority:260
msgid "--left-only"
msgstr "--left-only"

#. type: Plain text
#: en/git-range-diff.txt:79
#, ignore-ellipsis, priority:100
msgid "Suppress commits that are missing from the first specified range (or the \"left range\" when using the `<rev1>...<rev2>` format)."
msgstr "Suprime os commits que estão faltando no primeiro intervalo informado (ou o \"intervalo esquerdo\" ao usar o formato `<rev1>...<rev2>`)."

#. type: Labeled list
#: en/git-range-diff.txt:80 en/rev-list-options.txt:275
#, ignore-same, no-wrap, priority:260
msgid "--right-only"
msgstr "--right-only"

#. type: Plain text
#: en/git-range-diff.txt:83
#, ignore-ellipsis, priority:100
msgid "Suppress commits that are missing from the second specified range (or the \"right range\" when using the `<rev1>...<rev2>` format)."
msgstr "Suprime os commits que estão faltando no segundo intervalo informado (ou o \"intervalo direito\" ao usar o formato `<rev1>...<rev2>`)."

#. type: Labeled list
#: en/git-range-diff.txt:84
#, no-wrap, priority:100
msgid "--[no-]notes[=<ref>]"
msgstr "--[no-]notes[=<ref>]"

#. type: Plain text
#: en/git-range-diff.txt:87
#, priority:100
msgid "This flag is passed to the `git log` program (see linkgit:git-log[1]) that generates the patches."
msgstr "Esta opção é repassada para o comando `git apply` que aplica as correções (patch) (consulte linkgit:git-log[1])."

#. type: Labeled list
#: en/git-range-diff.txt:88
#, no-wrap, priority:100
msgid "<range1> <range2>"
msgstr "<intervalo da revisão1> <intervalo da revisão2>"

#. type: Plain text
#: en/git-range-diff.txt:91
#, priority:100
msgid "Compare the commits specified by the two ranges, where `<range1>` is considered an older version of `<range2>`."
msgstr "Compare os commits através dos dois intervalos, onde `<intervalo1>` é considerado uma versão mais antiga de `<intervalo1>`."

#. type: Labeled list
#: en/git-range-diff.txt:92
#, ignore-ellipsis, no-wrap, priority:100
msgid "<rev1>...<rev2>"
msgstr "<rev1>...<rev2>"

#. type: Plain text
#: en/git-range-diff.txt:94
#, priority:100
msgid "Equivalent to passing `<rev2>..<rev1>` and `<rev1>..<rev2>`."
msgstr "É o mesmo que passar `<rev2>..<rev1>` e `<rev1>..<rev2>`."

#. type: Labeled list
#: en/git-range-diff.txt:95
#, no-wrap, priority:100
msgid "<base> <rev1> <rev2>"
msgstr "<base> <rev1> <rev2>"

#. type: Plain text
#: en/git-range-diff.txt:101
#, priority:100
msgid "Equivalent to passing `<base>..<rev1>` and `<base>..<rev2>`.  Note that `<base>` does not need to be the exact branch point of the branches. Example: after rebasing a branch `my-topic`, `git range-diff my-topic@{u} my-topic@{1} my-topic` would show the differences introduced by the rebase."
msgstr "É o mesmo que passar `<base> ..<rev1>` e `<base> ..<rev2>`.  Observe que `<base>` não precisa ser o ponto de ramificação exato das ramificações. Exemplo: após fazer o rebase de um branch `my-topic`, o comando `git range-diff my-topic@{u} my-topic@{1} my-topic` mostraria as diferenças introduzidas pelo rebase."

#. type: Plain text
#: en/git-range-diff.txt:108
#, priority:100
msgid "`git range-diff` also accepts the regular diff options (see linkgit:git-diff[1]), most notably the `--color=[<when>]` and `--no-color` options. These options are used when generating the \"diff between patches\", i.e. to compare the author, commit message and diff of corresponding old/new commits. There is currently no means to tweak most of the diff options passed to `git log` when generating those patches."
msgstr "O comando `git range-diff` também aceita as opções normais do diff (consulte linkgit:git-diff[1]), mais notavelmente as opções `--color=[<quando>]` e `--no-color`. Estas opções são usadas ao criar a \"diferença entre as correções\", ou seja, para comparar o autor, a mensagem do commit e o diff correspondente dos commits antigos/novos. Atualmente não há meios de ajustar a maioria das opções do diff passadas para o `git log` ao gerar esses patches."

#. type: Title -
#: en/git-range-diff.txt:110
#, no-wrap, priority:100
msgid "OUTPUT STABILITY"
msgstr "ESTABILIDADE DA SAÍDA"

#. type: Plain text
#: en/git-range-diff.txt:119
#, priority:100
msgid "The output of the `range-diff` command is subject to change. It is intended to be human-readable porcelain output, not something that can be used across versions of Git to get a textually stable `range-diff` (as opposed to something like the `--stable` option to linkgit:git-patch-id[1]). There's also no equivalent of linkgit:git-apply[1] for `range-diff`, the output is not intended to be machine-readable."
msgstr "A saída do comando `range-diff` está sujeita a alterações. Pretende-se que seja uma saída porcelana legível para as pessoas, não algo que possa ser usado nas versões do Git para obter um `range-diff` textualmente estável (em oposição a opção `--stable` com linkgit:git-patch-id[1]). Também não há um equivalente ao linkgit:git-apply[1] para o `range-diff`, a saída não se destina a ser legível para máquina."

#. type: Plain text
#: en/git-range-diff.txt:126
#, priority:100
msgid "This is particularly true when passing in diff options. Currently some options like `--stat` can, as an emergent effect, produce output that's quite useless in the context of `range-diff`. Future versions of `range-diff` may learn to interpret such options in a manner specific to `range-diff` (e.g. for `--stat` producing human-readable output which summarizes how the diffstat changed)."
msgstr "Isso é particularmente verdadeiro ao passar opções diff. Atualmente, algumas opções como `--stat` podem, como um efeito emergente, produzir uma saída bastante inútil no contexto do comando `range-diff`. Versões futuras do comando `range-diff` podem aprender a interpretar tais opções de uma maneira específica (para `--stat` produzindo uma saída legível que resume como o diffstat mudou por exemplo)."

#. type: Plain text
#: en/git-range-diff.txt:132
#, priority:100
msgid "This command uses the `diff.color.*` and `pager.range-diff` settings (the latter is on by default).  See linkgit:git-config[1]."
msgstr "Este comando usa as configurações `diff.color.*` e `pager.range-diff` (o último já vem ativado).  Consulte linkgit:git-config[1]."

#. type: Plain text
#: en/git-range-diff.txt:139
#, priority:100
msgid "When a rebase required merge conflicts to be resolved, compare the changes introduced by the rebase directly afterwards using:"
msgstr "Quando um rebase requer que os conflitos da mesclagem sejam resolvidos, compare as alterações introduzidas através do rebase diretamente depois usando:"

#. type: delimited block -
#: en/git-range-diff.txt:142
#, no-wrap, priority:100
msgid "$ git range-diff @{u} @{1} @\n"
msgstr "$ git range-diff @{u} @{1} @\n"

#. type: Plain text
#: en/git-range-diff.txt:146
#, priority:100
msgid "A typical output of `git range-diff` would look like this:"
msgstr "Uma típica saída do comando `git range-diff` ficaria assim:"

#. type: delimited block -
#: en/git-range-diff.txt:153
#, no-wrap, priority:100
msgid ""
"-:  ------- > 1:  0ddba11 Prepare for the inevitable!\n"
"1:  c0debee = 2:  cab005e Add a helpful message at the start\n"
"2:  f00dbal ! 3:  decafe1 Describe a bug\n"
"    @@ -1,3 +1,3 @@\n"
"     Author: A U Thor <author@example.com>\n"
msgstr ""
"-:  ------- > 1:  0ddba11 Se prepare para o inevitável!\n"
"1:  c0debee = 2:  cab005e Adicione uma mensagem de ajuda no início\n"
"2:  f00dbal ! 3:  decafe1 Descreva o problema\n"
"    @@ -1,3 +1,3 @@\n"
"     Autor: A U Thor <author@example.com>\n"

#. type: delimited block -
#: en/git-range-diff.txt:158
#, no-wrap, priority:100
msgid ""
"    -TODO: Describe a bug\n"
"    +Describe a bug\n"
"    @@ -324,5 +324,6\n"
"      This is expected.\n"
msgstr ""
"    -TODO: Descreva um problema\n"
"    +Descreva um problema\n"
"    @@ -324,5 +324,6\n"
"      Já era esperado.\n"

#. type: delimited block -
#: en/git-range-diff.txt:162
#, no-wrap, priority:100
msgid ""
"    -+What is unexpected is that it will also crash.\n"
"    ++Unexpectedly, it also crashes. This is a bug, and the jury is\n"
"    ++still out there how to fix it best. See ticket #314 for details.\n"
msgstr ""
"    -+O que é inesperado é que também irá travar.\n"
"    ++Inesperadamente, ele também trava. Este é um bug, e o júri é\n"
"    ++ainda está no ar a maneira de como melhor consertar. Consulte o tíquete #314 para obter mais detalhes.\n"

#. type: delimited block -
#: en/git-range-diff.txt:165
#, no-wrap, priority:100
msgid ""
"      Contact\n"
"3:  bedead < -:  ------- TO-UNDO\n"
msgstr ""
"      Contato\n"
"3: bedhead <-: ------- PARA DESFAZER\n"

#. type: Plain text
#: en/git-range-diff.txt:170
#, priority:100
msgid "In this example, there are 3 old and 3 new commits, where the developer removed the 3rd, added a new one before the first two, and modified the commit message of the 2nd commit as well its diff."
msgstr "Neste exemplo, existem 3 commits antigos e 3 novos onde o desenvolvedor removeu o terceiro, adicionou um novo antes dos dois primeiros, e alterou a mensagem do commit do segundo commit, bem como o seu diff."

#. type: Plain text
#: en/git-range-diff.txt:177
#, priority:100
msgid "When the output goes to a terminal, it is color-coded by default, just like regular `git diff`'s output. In addition, the first line (adding a commit) is green, the last line (deleting a commit) is red, the second line (with a perfect match) is yellow like the commit header of `git show`'s output, and the third line colors the old commit red, the new one green and the rest like `git show`'s commit header."
msgstr "Quando a saída vai para um terminal, ela é codificada em cores , assim como a saída normal do comando `git diff`. Além disso, a primeira linha (adicionando um commit) é verde, a última linha (excluindo um commit) é vermelha, a segunda linha (com uma correspondência perfeita) é amarela como o cabeçalho do commit gerado pelo `git show`, a terceira linha colore o commit antigo de vermelho, o novo como verde e o resto como o cabeçalho do commit do comando `git show`."

#. type: Plain text
#: en/git-range-diff.txt:182
#, priority:100
msgid "A naive color-coded diff of diffs is actually a bit hard to read, though, as it colors the entire lines red or green. The line that added \"What is unexpected\" in the old commit, for example, is completely red, even if the intent of the old commit was to add something."
msgstr "Uma diferença ingênua dos diffs codificada por cores é na verdade um pouco difícil de ler, pois pinta todas as linhas de vermelho ou de verde. A linha que adicionou \"O que é inesperado\" ao commit antigo, por exemplo, é toda vermelha, mesmo se a intenção do commit antigo fosse adicionar algo."

#. type: Plain text
#: en/git-range-diff.txt:188
#, priority:100
msgid "To help with that, `range` uses the `--dual-color` mode by default. In this mode, the diff of diffs will retain the original diff colors, and prefix the lines with -/+ markers that have their *background* red or green, to make it more obvious that they describe how the diff itself changed."
msgstr "Para auxiliar na questão, é predefinido que o `range` use o modo `--dual-color`. Neste modo, o diff das diffs irá reter as cores diff originais e prefixar as linhas com marcações -/+ que têm o seu *fundo* vermelho ou verde, para tornar mais óbvio que eles descrevem como o próprio diff mudou."

#. type: Title -
#: en/git-range-diff.txt:191
#, no-wrap, priority:100
msgid "Algorithm"
msgstr "Algoritmo"

#. type: Plain text
#: en/git-range-diff.txt:195
#, priority:100
msgid "The general idea is this: we generate a cost matrix between the commits in both commit ranges, then solve the least-cost assignment."
msgstr "A ideia geral é esta: geramos uma matriz de custo entre os commits no intervalor de ambos os commits e em seguida, resolvemos a atribuição com o menor custo."

#. type: Plain text
#: en/git-range-diff.txt:199
#, priority:100
msgid "The cost matrix is populated thusly: for each pair of commits, both diffs are generated and the \"diff of diffs\" is generated, with 3 context lines, then the number of lines in that diff is used as cost."
msgstr "A matriz de custo é populada assim: para cada par de commits, ambos os diffs são gerados, o \"diff dos diffs\" é gerado com 3 linhas de contexto, então a quantidade das linhas naquele diff é usado como custo."

#. type: Plain text
#: en/git-range-diff.txt:204
#, priority:100
msgid "To avoid false positives (e.g. when a patch has been removed, and an unrelated patch has been added between two iterations of the same patch series), the cost matrix is extended to allow for that, by adding fixed-cost entries for wholesale deletes/adds."
msgstr "Para evitar falsos positivos (quando um patch foi removido e um patch não relacionado foi adicionado entre as duas iterações da mesma série de patches por exemplo), a matriz de custo é estendida para que isso seja permitido, adicionando as entradas de custo fixo para o que foi excluído/adicionado."

#. type: Plain text
#: en/git-range-diff.txt:209
#, priority:100
msgid "Example: Let commits `1--2` be the first iteration of a patch series and `A--C` the second iteration. Let's assume that `A` is a cherry-pick of `2,` and `C` is a cherry-pick of `1` but with a small modification (say, a fixed typo). Visualize the commits as a bipartite graph:"
msgstr "Exemplo: Deixe que os commits `1--2` sejam a primeira iteração de uma série de patches e `A--C` a segunda iteração. Vamos supor que `A` é uma escolha seletiva de `2,` e `C` é uma escolha seletiva de `1` porém com uma pequena modificação (digamos, um erro de digitação que foi corrigido). Visualize os commits como um gráfico bipartido:"

#. type: delimited block -
#: en/git-range-diff.txt:212
#, no-wrap, priority:100
msgid "    1            A\n"
msgstr "    1            A\n"

#. type: delimited block -
#: en/git-range-diff.txt:214
#, no-wrap, priority:100
msgid "    2            B\n"
msgstr "    2            B\n"

#. type: delimited block -
#: en/git-range-diff.txt:216 en/git-range-diff.txt:228
#, no-wrap, priority:100
msgid "\t\t C\n"
msgstr "\t\t C\n"

#. type: Plain text
#: en/git-range-diff.txt:220
#, priority:100
msgid "We are looking for a \"best\" explanation of the new series in terms of the old one. We can represent an \"explanation\" as an edge in the graph:"
msgstr "Estamos procurando uma \"melhor\" explicação para a nova série em comparação com a antiga. Podemos representar uma \"explicação\" como uma borda no gráfico:"

#. type: delimited block -
#: en/git-range-diff.txt:226
#, no-wrap, priority:100
msgid ""
"    1            A\n"
"\t       /\n"
"    2 --------'  B\n"
msgstr ""
"    1            A\n"
"\t       /\n"
"    2 --------'  B\n"

#. type: Plain text
#: en/git-range-diff.txt:233
#, priority:100
msgid "This explanation comes for \"free\" because there was no change. Similarly `C` could be explained using `1`, but that comes at some cost c>0 because of the modification:"
msgstr "Essa explicação vem \"de graça\" porque não houve alteração. Da mesma forma, `C` pode ser explicado usando `1`, mas isso tem algum custo c>0 por causa da modificação:"

#. type: delimited block -
#: en/git-range-diff.txt:241
#, no-wrap, priority:100
msgid ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"\t  |\n"
"\t  `----- C\n"
"\t  c>0\n"
msgstr ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"\t  |\n"
"\t  `----- C\n"
"\t  c>0\n"

#. type: Plain text
#: en/git-range-diff.txt:249
#, priority:100
msgid "In mathematical terms, what we are looking for is some sort of a minimum cost bipartite matching; `1` is matched to `C` at some cost, etc. The underlying graph is in fact a complete bipartite graph; the cost we associate with every edge is the size of the diff between the two commits' patches. To explain also new commits, we introduce dummy nodes on both sides:"
msgstr "Em termos matemáticos, o que estamos procurando é algum tipo de correspondência bipartida com um custo mínimo; `1` coincidiu com `C` custando alguma coisa, etc. O gráfico subjacente é, na verdade, um gráfico bipartido completo; o custo que associamos com cada borda é o tamanho do diff entre os patches dos dois commits. Para também explicar os novos commits, introduzimos nós fictícios dos dois lados:"

#. type: delimited block -
#: en/git-range-diff.txt:258
#, no-wrap, priority:100
msgid ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"\t  |\n"
"    o     `----- C\n"
"\t  c>0\n"
"    o            o\n"
msgstr ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"\t  |\n"
"    o     `----- C\n"
"\t  c>0\n"
"    o            o\n"

#. type: delimited block -
#: en/git-range-diff.txt:260
#, no-wrap, priority:100
msgid "    o            o\n"
msgstr "    o            o\n"

#. type: Plain text
#: en/git-range-diff.txt:270
#, priority:100
msgid "The cost of an edge `o--C` is the size of `C`'s diff, modified by a fudge factor that should be smaller than 100%. The cost of an edge `o--o` is free. The fudge factor is necessary because even if `1` and `C` have nothing in common, they may still share a few empty lines and such, possibly making the assignment `1--C`, `o--o` slightly cheaper than `1--o`, `o--C` even if `1` and `C` have nothing in common. With the fudge factor we require a much larger common part to consider patches as corresponding."
msgstr "O custo de uma borda `o--C` é o tamanho do diff em `C`, modificado por um fator de correção que deve ser menor que 100%. O custo de uma borda `o--o` é de graça. O fator de correção é necessário porque mesmo que `1` e `C` não tenham nada em comum, eles ainda podem compartilhar algumas linhas vazias, possivelmente tornando a atribuição `1--C`, `o--o` ligeiramente mais barata do que `1--o`, `o--C` ainda que `1` e `C` não tenham nada em comum. Com o fator de correção, exigimos uma parte comum muito maior para considerar os patches como correspondentes."

#. type: Plain text
#: en/git-range-diff.txt:277
#, priority:100
msgid "The overall time needed to compute this algorithm is the time needed to compute n+m commit diffs and then n*m diffs of patches, plus the time needed to compute the least-cost assignment between n and m diffs. Git uses an implementation of the Jonker-Volgenant algorithm to solve the assignment problem, which has cubic runtime complexity. The matching found in this case will look like this:"
msgstr "O tempo total necessário para calcular este algoritmo é o mesmo tempo necessário para calcular o diff de n+m commit e então os diffs de n*m patches, mais o tempo necessário para calcular a atribuição com o menor custo entre os diffs n e m. Git usa uma implementação do algoritmo de Jonker-Volgenant para resolver o problema da atribuição que tem complexidade de tempo de execução cúbica. A correspondência encontrada neste caso será semelhante a esta:"

#. type: delimited block -
#: en/git-range-diff.txt:286
#, no-wrap, priority:100
msgid ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"       .--+-----'\n"
"    o -'  `----- C\n"
"\t  c>0\n"
"    o ---------- o\n"
msgstr ""
"    1 ----.      A\n"
"\t  |    /\n"
"    2 ----+---'  B\n"
"       .--+-----'\n"
"    o -'  `----- C\n"
"\t  c>0\n"
"    o ---------- o\n"

#. type: delimited block -
#: en/git-range-diff.txt:288
#, no-wrap, priority:100
msgid "    o ---------- o\n"
msgstr "    o ---------- o\n"

#. type: Title =
#: en/git-read-tree.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-read-tree(1)"
msgstr "git-read-tree(1)"

#. type: Plain text
#: en/git-read-tree.txt:7
#, priority:80
msgid "git-read-tree - Reads tree information into the index"
msgstr "git-read-tree - Lê as informações da árvore no índice"

#. type: Plain text
#: en/git-read-tree.txt:15
#, no-wrap, priority:80
msgid ""
"'git read-tree' [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefix>]\n"
"\t\t[-u | -i]] [--index-output=<file>] [--no-sparse-checkout]\n"
"\t\t(--empty | <tree-ish1> [<tree-ish2> [<tree-ish3>]])\n"
msgstr ""
"'git read-tree' [[-m [--trivial] [--aggressive] | --reset | --prefix=<prefixo>]\n"
"\t\t[-u | -i]] [--index-output=<arquivo>] [--no-sparse-checkout]\n"
"\t\t(--empty | <tree-ish1> [<tree-ish2> [<tree-ish3>]])\n"

#. type: Plain text
#: en/git-read-tree.txt:22
#, priority:80
msgid "Reads the tree information given by <tree-ish> into the index, but does not actually *update* any of the files it \"caches\". (see: linkgit:git-checkout-index[1])"
msgstr "Lê as informações da árvore informada através da `<árvore>` no índice, mas na verdade não *atualize* nenhum dos arquivos que ele \"armazena em cache\". (consulte: linkgit:git-checkout-index[1])"

#. type: Plain text
#: en/git-read-tree.txt:27
#, priority:80
msgid "Optionally, it can merge a tree into the index, perform a fast-forward (i.e. 2-way) merge, or a 3-way merge, with the `-m` flag.  When used with `-m`, the `-u` flag causes it to also update the files in the work tree with the result of the merge."
msgstr "Opcionalmente, ele pode mesclar uma árvore no índice, executar uma mesclagem de avanço rápido (isto é, bidirecional) ou uma mesclagem de três vias, com a opção `-m`.  Quando utilizado com a opção `-m`, a opção `-u` faz com que ele também atualize os arquivos na árvore de trabalho com o resultado do que foi mesclado."

#. type: Plain text
#: en/git-read-tree.txt:30
#, priority:80
msgid "Trivial merges are done by 'git read-tree' itself.  Only conflicting paths will be in unmerged state when 'git read-tree' returns."
msgstr "Mesclagens triviais são feitas através do próprio comando 'git read-tree'.  Somente os caminhos conflitantes estarão com a sua condição inalterada quando o comando 'git read-tree' retornar."

#. type: Plain text
#: en/git-read-tree.txt:38
#, priority:80
msgid "Perform a merge, not just a read.  The command will refuse to run if your index file has unmerged entries, indicating that you have not finished previous merge you started."
msgstr "Faça uma mesclagem e não apenas uma leitura.  O comando se recusará a executar caso o arquivo do índice tiver entradas que não foram mescladas, indicando que você não concluiu a mesclagem anterior iniciada anteriormente."

#. type: Labeled list
#: en/git-read-tree.txt:39
#, ignore-same, no-wrap, priority:80
msgid "--reset"
msgstr "--reset"

#. type: Plain text
#: en/git-read-tree.txt:44
#, priority:80
msgid "Same as -m, except that unmerged entries are discarded instead of failing.  When used with `-u`, updates leading to loss of working tree changes or untracked files or directories will not abort the operation."
msgstr "O mesmo que `-m`, exceto que as entradas não imersas são descartadas em vez de falharem. Quando utilizadas com a opção `-u`, as atualizações que levam à perda das alterações na árvore de trabalho ou nos arquivos ou diretório sem rastreamento, não interrompem a operação."

#. type: Plain text
#: en/git-read-tree.txt:48
#, priority:80
msgid "After a successful merge, update the files in the work tree with the result of the merge."
msgstr "Após uma mesclagem bem-sucedida, atualize os arquivos na árvore de trabalho com o resultado da mesclagem."

#. type: Plain text
#: en/git-read-tree.txt:57
#, priority:80
msgid "Usually a merge requires the index file as well as the files in the working tree to be up to date with the current head commit, in order not to lose local changes.  This flag disables the check with the working tree and is meant to be used when creating a merge of trees that are not directly related to the current working tree status into a temporary index file."
msgstr "Geralmente, uma mesclagem exige que o arquivo do índice e os arquivos da árvore de trabalho estejam atualizados com o commit principal atualizado, para que não se perca as alterações locais.  Esta opção desativa a verificação com a árvore de trabalho e deve ser utilizado ao criar uma mesclagem das árvores que não estão diretamente relacionadas a condição atual da árvore de trabalho num arquivo do índice temporário."

#. type: Plain text
#: en/git-read-tree.txt:62
#, priority:80
msgid "Check if the command would error out, without updating the index or the files in the working tree for real."
msgstr "Verifique se o comando gera algum erro, sem atualizar de verdade, o índice ou os arquivos na árvore de trabalho."

#. type: Plain text
#: en/git-read-tree.txt:65
#, priority:80
msgid "Show the progress of checking files out."
msgstr "Exiba o progresso da averiguação dos arquivos."

#. type: Labeled list
#: en/git-read-tree.txt:66
#, ignore-same, no-wrap, priority:80
msgid "--trivial"
msgstr "--trivial"

#. type: Plain text
#: en/git-read-tree.txt:71
#, priority:80
msgid "Restrict three-way merge by 'git read-tree' to happen only if there is no file-level merging required, instead of resolving merge for trivial cases and leaving conflicting files unresolved in the index."
msgstr "Restrinja a mesclagem de três vias através do comando 'git read-tree' para que aconteça apenas caso não seja necessário a mesclagem no nível do arquivo, em vez de resolver a mesclagem para casos triviais e deixar os arquivos conflitantes não resolvidos no índice."

#. type: Plain text
#: en/git-read-tree.txt:78
#, priority:80
msgid "Usually a three-way merge by 'git read-tree' resolves the merge for really trivial cases and leaves other cases unresolved in the index, so that porcelains can implement different merge policies.  This flag makes the command resolve a few more cases internally:"
msgstr "Normalmente, uma mesclagem de três vias deita através do comando 'git read-tree' resolve a mesclagem para os casos realmente triviais e deixa os outros casos que não foram resolvidos no índice, para que as porcelanas possam implementar diferentes políticas de mesclagem.  Esta opção faz com que o comando resolva mais alguns casos internamente:"

#. type: Plain text
#: en/git-read-tree.txt:81
#, priority:80
msgid "when one side removes a path and the other side leaves the path unmodified.  The resolution is to remove that path."
msgstr "quando um lado remove um caminho e o outro lado não o altera.  A solução é remover este caminho."

#. type: Plain text
#: en/git-read-tree.txt:82
#, priority:80
msgid "when both sides remove a path.  The resolution is to remove that path."
msgstr "quando ambos os lados removernum caminho.  A solução é remover este caminho."

#. type: Plain text
#: en/git-read-tree.txt:84
#, priority:80
msgid "when both sides add a path identically.  The resolution is to add that path."
msgstr "quando os dois lados adicionarem um caminho idêntico.  A resolução é adicionar este caminho."

#. type: Labeled list
#: en/git-read-tree.txt:85 en/git-svn.txt:75
#, no-wrap, priority:100
msgid "--prefix=<prefix>"
msgstr "--prefix=<prefixo>"

#. type: Plain text
#: en/git-read-tree.txt:90
#, priority:80
msgid "Keep the current index contents, and read the contents of the named tree-ish under the directory at `<prefix>`.  The command will refuse to overwrite entries that already existed in the original index file."
msgstr "Mantenha o conteúdo do índice atual e leia o conteúdo do 'tree-ish' informado no diretório `<prefixo>`.  O comando se recusará a substituir as entradas que já existiam no arquivo do índice original."

#. type: Labeled list
#: en/git-read-tree.txt:91
#, no-wrap, priority:80
msgid "--index-output=<file>"
msgstr "--index-output=<arquivo>"

#. type: Plain text
#: en/git-read-tree.txt:102
#, priority:80
msgid "Instead of writing the results out to `$GIT_INDEX_FILE`, write the resulting index in the named file.  While the command is operating, the original index file is locked with the same mechanism as usual.  The file must allow to be rename(2)ed into from a temporary file that is created next to the usual index file; typically this means it needs to be on the same filesystem as the index file itself, and you need write permission to the directories the index file and index output file are located in."
msgstr "Em vez de escrever os resultados em `$GIT_INDEX_FILE`, escreva o índice resultante no arquivo informado.  Enquanto o comando está em operação, o arquivo do índice original é bloqueado com o mesmo mecanismo de sempre.  O arquivo deve permitir que seja rename(2)ed (renomeado) de um arquivo temporário criado ao lado do arquivo do índice tradicional; normalmente, significa que ele precisa estar no mesmo sistema de arquivos que o próprio arquivo do índice e é necessário ter permissão de gravação nos diretórios onde o arquivo de índice e o arquivo gerado do índice estejam localizados."

#. type: Labeled list
#: en/git-read-tree.txt:103 en/git-reset.txt:92
#, ignore-same, no-wrap, priority:280
msgid "--[no-]recurse-submodules"
msgstr "--[no-]recurse-submodules"

#. type: Plain text
#: en/git-read-tree.txt:108
#, priority:80
msgid "Using --recurse-submodules will update the content of all active submodules according to the commit recorded in the superproject by calling read-tree recursively, also setting the submodules' HEAD to be detached at that commit."
msgstr "A utilização do --recurse-submodules atualizará o conteúdo de todos os submódulos ativos de acordo com o commit registrado no superprojeto ao chamar de forma recursiva o \"read-tree\" e também ao definir os submódulos para ser desanexados naquele commit."

#. type: Labeled list
#: en/git-read-tree.txt:109
#, ignore-same, no-wrap, priority:80
msgid "--no-sparse-checkout"
msgstr "--no-sparse-checkout"

#. type: Plain text
#: en/git-read-tree.txt:112
#, priority:80
msgid "Disable sparse checkout support even if `core.sparseCheckout` is true."
msgstr "Desative a compatibilidade com a verificação esparsa, mesmo que o `core.sparseCheckout` seja verdadeiro."

#. type: Labeled list
#: en/git-read-tree.txt:113
#, ignore-same, no-wrap, priority:80
msgid "--empty"
msgstr "--empty"

#. type: Plain text
#: en/git-read-tree.txt:116
#, priority:80
msgid "Instead of reading tree object(s) into the index, just empty it."
msgstr "Em vez de ler o(s) objeto(s) da árvore no índice, apenas esvazie-a."

#. type: Labeled list
#: en/git-read-tree.txt:121
#, no-wrap, priority:80
msgid "<tree-ish#>"
msgstr "<tree-ish#>"

#. type: Plain text
#: en/git-read-tree.txt:123
#, priority:80
msgid "The id of the tree object(s) to be read/merged."
msgstr "O ID do(s) objeto(s) da árvore que será lido/mesclado."

#. type: Title -
#: en/git-read-tree.txt:126
#, no-wrap, priority:80
msgid "MERGING"
msgstr "MESCLANDO"

#. type: Plain text
#: en/git-read-tree.txt:131
#, priority:80
msgid "If `-m` is specified, 'git read-tree' can perform 3 kinds of merge, a single tree merge if only 1 tree is given, a fast-forward merge with 2 trees, or a 3-way merge if 3 or more trees are provided."
msgstr "Se `-m` seja utilizado, o comando 'git read-tree' pode executar 3 tipos de mesclagem, uma única mesclagem na árvore caso apenas uma árvore seja informada, uma mesclagem de avanço rápido nas 2 árvores ou uma mesclagem de 3 vias caso 3 ou mais árvores sejam informadas."

#. type: Title ~
#: en/git-read-tree.txt:134
#, no-wrap, priority:80
msgid "Single Tree Merge"
msgstr "Mesclagem Única da Árvore"

#. type: Plain text
#: en/git-read-tree.txt:140
#, priority:80
msgid "If only 1 tree is specified, 'git read-tree' operates as if the user did not specify `-m`, except that if the original index has an entry for a given pathname, and the contents of the path match with the tree being read, the stat info from the index is used. (In other words, the index's stat()s take precedence over the merged tree's)."
msgstr "Caso apenas 1 árvore seja informada, 'git read-tree' funcionará como se o usuário não a tivesse informado `-m`, exceto quando o índice original tiver uma entrada para um determinado nome do caminho e o conteúdo do caminho corresponder à árvore sendo lida, as estatísticas das informações do índice são utilizadas. (Em outras palavras, os 'stat()' do índice têm precedência sobre os da árvore mesclada)."

#. type: Plain text
#: en/git-read-tree.txt:144
#, priority:80
msgid "That means that if you do a `git read-tree -m <newtree>` followed by a `git checkout-index -f -u -a`, the 'git checkout-index' only checks out the stuff that really changed."
msgstr "Significa que se você fizer um `git read-tree -m <newtree>` seguido de um `git checkout-index -f -u -a`, o comando 'git checkout-index' verificará apenas o que realmente mudou."

#. type: Plain text
#: en/git-read-tree.txt:147
#, priority:80
msgid "This is used to avoid unnecessary false hits when 'git diff-files' is run after 'git read-tree'."
msgstr "É utilizado para evitar acertos falsos desnecessários quando 'git diff-files' é executado após 'git read-tree'."

#. type: Title ~
#: en/git-read-tree.txt:150
#, no-wrap, priority:80
msgid "Two Tree Merge"
msgstr "Mesclagem de duas, três árvores"

#. type: Plain text
#: en/git-read-tree.txt:156
#, priority:80
msgid "Typically, this is invoked as `git read-tree -m $H $M`, where $H is the head commit of the current repository, and $M is the head of a foreign tree, which is simply ahead of $H (i.e. we are in a fast-forward situation)."
msgstr "Normalmente, isso é invocado como `git read-tree -m $H $M`, onde '$H' é o commit principal do repositório atual e o '$M' é o cabeçalho de uma árvore estrangeira, que está simplesmente à frente de '$H' ( ou seja, estamos numa situação de avanço rápido)."

#. type: Plain text
#: en/git-read-tree.txt:159
#, priority:80
msgid "When two trees are specified, the user is telling 'git read-tree' the following:"
msgstr "Quando duas árvores são definidas, o usuário informa ao 'git read-tree' o seguinte:"

#. type: Plain text
#: en/git-read-tree.txt:161
#, priority:80
msgid "The current index and work tree is derived from $H, but"
msgstr "O índice atual e a árvore de trabalho são derivadas de '$H', mas"

#. type: Plain text
#: en/git-read-tree.txt:162
#, priority:80
msgid "the user may have local changes in them since $H."
msgstr "o usuário pode ter alterações locais desde '$H'."

#. type: Plain text
#: en/git-read-tree.txt:164
#, priority:80
msgid "The user wants to fast-forward to $M."
msgstr "O usuário deseja avançar rapidamente para '$M'."

#. type: Plain text
#: en/git-read-tree.txt:170
#, priority:80
msgid "In this case, the `git read-tree -m $H $M` command makes sure that no local change is lost as the result of this \"merge\".  Here are the \"carry forward\" rules, where \"I\" denotes the index, \"clean\" means that index and work tree coincide, and \"exists\"/\"nothing\" refer to the presence of a path in the specified commit:"
msgstr "Nesse caso, o comando `git read-tree -m $H $M` garante que nenhuma mudança local seja perdida como resultado desta \"mesclagem\".  Aqui estão as regras \"carry forward\", onde \"I\" denota o índice, \"clean\" significa que o índice e a árvore de trabalho coincidem e \"existe\"/\"nothing\" se refere à presença de um caminho no commit informado:"

#. type: delimited block .
#: en/git-read-tree.txt:181
#, no-wrap, priority:80
msgid ""
"\tI                   H        M        Result\n"
"       -------------------------------------------------------\n"
"     0  nothing             nothing  nothing  (does not happen)\n"
"     1  nothing             nothing  exists   use M\n"
"     2  nothing             exists   nothing  remove path from index\n"
"     3  nothing             exists   exists,  use M if \"initial checkout\",\n"
"\t\t\t\t     H == M   keep index otherwise\n"
"\t\t\t\t     exists,  fail\n"
"\t\t\t\t     H != M\n"
msgstr ""
"\tI                   H        M        Result\n"
"       -------------------------------------------------------\n"
"     0  nada                nada     nada     (não acontece)\n"
"     1  nada                nada     existe   usa M\n"
"     2  nada                existe   nada     remove o caminho do índice\n"
"     3  nada                existe   existe,  usa M caso \"averiguação inicial\",\n"
"\t\t\t\t     H == M   caso contrário, mantenha o índice\n"
"\t\t\t\t     existe,  falha\n"
"\t\t\t\t     H != M\n"

#. type: delimited block .
#: en/git-read-tree.txt:186
#, no-wrap, priority:80
msgid ""
"        clean I==H  I==M\n"
"       ------------------\n"
"     4  yes   N/A   N/A     nothing  nothing  keep index\n"
"     5  no    N/A   N/A     nothing  nothing  keep index\n"
msgstr ""
"        clean I==H  I==M\n"
"       ------------------\n"
"     4  sim  N/A   N/A     nada  nada  mantenha o índice\n"
"     5  não  N/A   N/A     nada  nada  mantenha o índice\n"

#. type: delimited block .
#: en/git-read-tree.txt:191
#, no-wrap, priority:80
msgid ""
"     6  yes   N/A   yes     nothing  exists   keep index\n"
"     7  no    N/A   yes     nothing  exists   keep index\n"
"     8  yes   N/A   no      nothing  exists   fail\n"
"     9  no    N/A   no      nothing  exists   fail\n"
msgstr ""
"     6  sim   N/A   sim     nada     existe   mantenha o índice\n"
"     7  não   N/A   sim     nada     existe   mantenha o índice\n"
"     8  sim   N/A   não     nada     existe   falha\n"
"     9  não   N/A   não     nada     existe   falha\n"

#. type: delimited block .
#: en/git-read-tree.txt:196
#, no-wrap, priority:80
msgid ""
"     10 yes   yes   N/A     exists   nothing  remove path from index\n"
"     11 no    yes   N/A     exists   nothing  fail\n"
"     12 yes   no    N/A     exists   nothing  fail\n"
"     13 no    no    N/A     exists   nothing  fail\n"
msgstr ""
"     10 sim   sim   N/A     existe   nada     remove o caminho a partir do índice\n"
"     11 não   sim   N/A     existe   nada     falha\n"
"     12 sim   não   N/A     existe   nada     falha\n"
"     13 não   não   N/A     existe   nada     falha\n"

#. type: delimited block .
#: en/git-read-tree.txt:201
#, no-wrap, priority:80
msgid ""
"\tclean (H==M)\n"
"       ------\n"
"     14 yes                 exists   exists   keep index\n"
"     15 no                  exists   exists   keep index\n"
msgstr ""
"\tlimpa (H==M)\n"
"       ------\n"
"     14 sim                 existe   existe   mantenha o índice\n"
"     15 não                 existe   existe   mantenha o índice\n"

#. type: delimited block .
#: en/git-read-tree.txt:210
#, no-wrap, priority:80
msgid ""
"        clean I==H  I==M (H!=M)\n"
"       ------------------\n"
"     16 yes   no    no      exists   exists   fail\n"
"     17 no    no    no      exists   exists   fail\n"
"     18 yes   no    yes     exists   exists   keep index\n"
"     19 no    no    yes     exists   exists   keep index\n"
"     20 yes   yes   no      exists   exists   use M\n"
"     21 no    yes   no      exists   exists   fail\n"
msgstr ""
"        clean I==H  I==M (H!=M)\n"
"       ------------------\n"
"     16 sim   não   não      existe   existe   falha\n"
"     17 não   não   não      existe   existe   falha\n"
"     18 sim   não   sim      existe   existe   mantenha o índice\n"
"     19 não   não   sim      existe   existe   mantenha o índice\n"
"     20 sim   sim   não      existe   existe   use M\n"
"     21 não   sim   não      existe   existe   falha\n"

#. type: Plain text
#: en/git-read-tree.txt:216
#, priority:80
msgid "In all \"keep index\" cases, the index entry stays as in the original index file.  If the entry is not up to date, 'git read-tree' keeps the copy in the work tree intact when operating under the -u flag."
msgstr "Em todos os casos \"manter índice\", a a entrada do índice permanece como no arquivo do índice original.  Caso a entrada não esteja atualizada, o comando 'git read-tree' mantém intacta a cópia na árvore de trabalho ao operar sob a opção `-u`."

#. type: Plain text
#: en/git-read-tree.txt:227
#, priority:80
msgid "When this form of 'git read-tree' returns successfully, you can see which of the \"local changes\" that you made were carried forward by running `git diff-index --cached $M`.  Note that this does not necessarily match what `git diff-index --cached $H` would have produced before such a two tree merge.  This is because of cases 18 and 19 --- if you already had the changes in $M (e.g. maybe you picked it up via e-mail in a patch form), `git diff-index --cached $H` would have told you about the change before this merge, but it would not show in `git diff-index --cached $M` output after the two-tree merge."
msgstr "Quando esta forma do comando 'git read-tree' retorna com sucesso, é possível ver quais das \"alterações locais\" feitas foram executadas com o comando `git diff-index --cached $M`.  Observe que isso não corresponde necessariamente ao que o comando `git diff-index --cached $H` teria produzido antes de uma fusão de duas árvores.  Isto ocorre devido aos casos 18 e 19 --- caso já tenha as alterações em '$M' (talvez você tenha recebido por e-mail num formulário para um patch por exemplo), o comando `git diff-index --cached $H` teria retornado uma mudança antes desta mesclagem, porém não teria sido exibida na saída do comando `git diff-index --cached $M` após a mesclagem das duas árvores."

#. type: Plain text
#: en/git-read-tree.txt:234
#, priority:80
msgid "Case 3 is slightly tricky and needs explanation.  The result from this rule logically should be to remove the path if the user staged the removal of the path and then switching to a new branch.  That however will prevent the initial checkout from happening, so the rule is modified to use M (new tree) only when the content of the index is empty.  Otherwise the removal of the path is kept as long as $H and $M are the same."
msgstr "O caso 3 é um pouco complicado e precisa de explicação.  O resultado desta regra, logicamente deve ser remover o caminho caso o usuário tenha realizado a remoção do caminho e depois mude para uma nova ramificação.  Isso, no entanto, impedirá que a averiguação inicial aconteça, portanto, a regra é modificada para utilizar 'M' (nova árvore) somente quando o conteúdo do índice estiver vazio.  Caso contrário, a remoção do caminho será mantida desde que '$H' e '$'M' sejam os mesmos."

#. type: Title ~
#: en/git-read-tree.txt:236
#, no-wrap, priority:80
msgid "3-Way Merge"
msgstr "Mesclagem de 3 vias"

#. type: Plain text
#: en/git-read-tree.txt:239
#, priority:80
msgid "Each \"index\" entry has two bits worth of \"stage\" state. stage 0 is the normal one, and is the only one you'd see in any kind of normal use."
msgstr "Cada entrada no \"índice\" possui dois bits na condição \"stage\". o estágio 0 é o normal e é o único que você veria em qualquer tipo de uso normal."

#. type: Plain text
#: en/git-read-tree.txt:242
#, priority:80
msgid "However, when you do 'git read-tree' with three trees, the \"stage\" starts out at 1."
msgstr "No entanto, quando você executar o comando 'git read-tree' com três árvores, o \"estágio\" começa em 1."

#. type: Plain text
#: en/git-read-tree.txt:244
#, priority:80
msgid "This means that you can do"
msgstr "Isso significa que você pode fazer"

#. type: delimited block -
#: en/git-read-tree.txt:247
#, no-wrap, priority:80
msgid "$ git read-tree -m <tree1> <tree2> <tree3>\n"
msgstr "$ git read-tree -m <tree1> <tree2> <tree3>\n"

#. type: Plain text
#: en/git-read-tree.txt:255
#, priority:80
msgid "and you will end up with an index with all of the <tree1> entries in \"stage1\", all of the <tree2> entries in \"stage2\" and all of the <tree3> entries in \"stage3\".  When performing a merge of another branch into the current branch, we use the common ancestor tree as <tree1>, the current branch head as <tree2>, and the other branch head as <tree3>."
msgstr "e você terminará com um índice com todas as entradas <tree1> em \"stage1\", todas as entradas <tree2> em \"stage2\" e todas as entradas <tree3> no \"stage3\".  Ao fazer uma mesclagem de um outro ramo no ramo atual, utilizamos a árvore ancestral comum como <tree1>, o cabeçalho da ramificação atual como <tree2> e o outro cabeçalho do ramo como <tree3>."

#. type: Plain text
#: en/git-read-tree.txt:259
#, priority:80
msgid "Furthermore, 'git read-tree' has special-case logic that says: if you see a file that matches in all respects in the following states, it \"collapses\" back to \"stage0\":"
msgstr "Além disso, o comando 'git read-tree' possui uma lógica para caso especial que diz: caso você veja um arquivo que coincida em todos os aspectos nos seguintes condições, ele irá \"retornar\" novamente para \"stage0\":"

#. type: Plain text
#: en/git-read-tree.txt:263
#, priority:80
msgid "stage 2 and 3 are the same; take one or the other (it makes no difference - the same work has been done on our branch in stage 2 and their branch in stage 3)"
msgstr "Os estágios 2 e 3 são os mesmos; pegue um ou outro (não faz diferença, o mesmo trabalho foi feito em nosso ramo no estágio 2 e em seu ramo da fase 3)"

#. type: Plain text
#: en/git-read-tree.txt:268
#, priority:80
msgid "stage 1 and stage 2 are the same and stage 3 is different; take stage 3 (our branch in stage 2 did not do anything since the ancestor in stage 1 while their branch in stage 3 worked on it)"
msgstr "o estágio 1 e o estágio 2 são iguais, o estágio 3 é diferente; pegue o estágio 3 (o nosso ramo no estágio 2 não fez nada desde no seu ancestral do estágio 1, enquanto o ramo no estágio 3 trabalhou nele)"

#. type: Plain text
#: en/git-read-tree.txt:271
#, priority:80
msgid "stage 1 and stage 3 are the same and stage 2 is different take stage 2 (we did something while they did nothing)"
msgstr "os estágios 1 e 3 são iguais e o estágio 2 é diferente, tomamos o estágio 2 (fizemos algo enquanto eles não fizeram nada)"

#. type: Plain text
#: en/git-read-tree.txt:275
#, priority:80
msgid "The 'git write-tree' command refuses to write a nonsensical tree, and it will complain about unmerged entries if it sees a single entry that is not stage 0."
msgstr "O comando 'git write-tree' se recusa a escrever numa árvore sem sentido e irá reclamar das entradas que não foram mescladas caso veja uma única entrada que não seja o estágio 0."

#. type: Plain text
#: en/git-read-tree.txt:281
#, priority:80
msgid "OK, this all sounds like a collection of totally nonsensical rules, but it's actually exactly what you want in order to do a fast merge. The different stages represent the \"result tree\" (stage 0, aka \"merged\"), the original tree (stage 1, aka \"orig\"), and the two trees you are trying to merge (stage 2 and 3 respectively)."
msgstr "OK, tudo isso soa como uma coleção de regras totalmente sem sentido, mas na verdade é exatamente o que você quer para fazer uma fusão rápida. Os diferentes estágios representam a \"árvore de resultados\" (estágio 0, também informado como \"mesclado\"), a árvore original (estágio 1, também informado como \"orig\") e as duas árvores que você está tentando mesclar (estágio 2 e 3, respectivamente)."

#. type: Plain text
#: en/git-read-tree.txt:286
#, priority:80
msgid "The order of stages 1, 2 and 3 (hence the order of three <tree-ish> command-line arguments) are significant when you start a 3-way merge with an index file that is already populated.  Here is an outline of how the algorithm works:"
msgstr "A ordem dos estágios 1, 2 e 3 (portanto a ordem dos três argumentos da linha de comando <árvore>) tem importância quando você inicia uma mesclagem de três vias com um arquivo do índice que já esteja preenchido.  Aqui está um resumo de como o algoritmo funciona:"

#. type: Plain text
#: en/git-read-tree.txt:289
#, priority:80
msgid "if a file exists in identical format in all three trees, it will automatically collapse to \"merged\" state by 'git read-tree'."
msgstr "se um arquivo existir no formato idêntico em todas as três árvores, ele retornará automaticamente para a condição de \"mesclado\" através do comando 'git read-tree'."

#. type: Plain text
#: en/git-read-tree.txt:294
#, priority:80
msgid "a file that has _any_ difference what-so-ever in the three trees will stay as separate entries in the index. It's up to \"porcelain policy\" to determine how to remove the non-0 stages, and insert a merged version."
msgstr "um arquivo que tenha qualquer diferença entre as três árvores permanecerá como lançamentos separados no índice. Cabe à \"política da porcelana\" determinar como remover os diferentes estágios não zerados e inserir uma versão mesclada."

#. type: Plain text
#: en/git-read-tree.txt:299
#, priority:80
msgid "the index file saves and restores with all this information, so you can merge things incrementally, but as long as it has entries in stages 1/2/3 (i.e., \"unmerged entries\") you can't write the result. So now the merge algorithm ends up being really simple:"
msgstr "o arquivo do índice salva e restaura com todas estas informações, para que você possa mesclar as coisas de maneira incremental, mas contanto que tenha as entradas nos estágios 1/2/3 (ou seja, \"os lançamentos que não foram mesclados\"), não será possível gravar o resultado. Então agora o algoritmo da mesclagem acaba sendo realmente simples:"

#. type: Plain text
#: en/git-read-tree.txt:302
#, priority:80
msgid "you walk the index in order, and ignore all entries of stage 0, since they've already been done."
msgstr "você percorre o índice em ordem e ignora todas as entradas do estágio 0, pois elas já foram feitas."

#. type: Plain text
#: en/git-read-tree.txt:306
#, priority:80
msgid "if you find a \"stage1\", but no matching \"stage2\" or \"stage3\", you know it's been removed from both trees (it only existed in the original tree), and you remove that entry."
msgstr "caso encontre um \"estágio1\", que não coincida com o \"estágio2\" ou \"estágio3\", você sabe que ele foi removido das duas árvores (existia apenas na árvore original) e você remove essa entrada."

#. type: Plain text
#: en/git-read-tree.txt:311
#, priority:80
msgid "if you find a matching \"stage2\" and \"stage3\" tree, you remove one of them, and turn the other into a \"stage0\" entry. Remove any matching \"stage1\" entry if it exists too.  .. all the normal trivial rules .."
msgstr "caso encontre uma árvore que coincida com \"stage2\" e \"stage3\", remova um deles e transforme o outro num lançamento no \"stage0\". Remova qualquer entrada que coincida com o \"stage1\", caso ela também exista.  .. todas as regras triviais normais .."

#. type: Plain text
#: en/git-read-tree.txt:316
#, priority:80
msgid "You would normally use 'git merge-index' with supplied 'git merge-one-file' to do this last step.  The script updates the files in the working tree as it merges each path and at the end of a successful merge."
msgstr "Normalmente seria utilizado o comando 'git merge-index' com o comando 'git merge-one-file' informado para executar esta última etapa.  O script atualiza os arquivos na árvore de trabalho à medida que mescla cada caminho e no final de uma mesclagem bem-sucedida."

#. type: Plain text
#: en/git-read-tree.txt:324
#, priority:80
msgid "When you start a 3-way merge with an index file that is already populated, it is assumed that it represents the state of the files in your work tree, and you can even have files with changes unrecorded in the index file.  It is further assumed that this state is \"derived\" from the stage 2 tree.  The 3-way merge refuses to run if it finds an entry in the original index file that does not match stage 2."
msgstr "Quando você inicia uma mesclagem de três vias com um índice do arquivo já preenchido, supõe-se que ele represente o a condição geral dos arquivos na sua árvore de trabalho e você pode até ter arquivos com alterações não registradas no índice do arquivo.  Supõe-se ainda que esta condição geral seja \"derivado\" da árvore do estágio 2.  A mesclagem de três vias se recusa a executar caso encontre uma entrada no arquivo do índice original que não coincida com o estágio 2."

#. type: Plain text
#: en/git-read-tree.txt:329
#, priority:80
msgid "This is done to prevent you from losing your work-in-progress changes, and mixing your random changes in an unrelated merge commit.  To illustrate, suppose you start from what has been committed last to your repository:"
msgstr "Isso é feito para impedir que você perca as alterações do trabalho ainda em andamento e misture as alterações aleatórias numa consolidação de uma mesclagem não relacionada.  Para ilustrar, suponha que você comece de um commit que foi feito por último no seu repositório:"

#. type: delimited block -
#: en/git-read-tree.txt:333
#, no-wrap, priority:80
msgid ""
"$ JC=`git rev-parse --verify \"HEAD^0\"`\n"
"$ git checkout-index -f -u -a $JC\n"
msgstr ""
"$ JC=`git rev-parse --verify \"HEAD^0\"`\n"
"$ git checkout-index -f -u -a $JC\n"

#. type: Plain text
#: en/git-read-tree.txt:338
#, priority:80
msgid "You do random edits, without running 'git update-index'.  And then you notice that the tip of your \"upstream\" tree has advanced since you pulled from him:"
msgstr "Você faz edições aleatórias, sem executar o 'git update-index'.  E então percebe que o cume da sua árvore \"upstream\" avançou desde que você fez o \"pull\" dele:"

#. type: delimited block -
#: en/git-read-tree.txt:342
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"$ git fetch git://.... linus\n"
"$ LT=`git rev-parse FETCH_HEAD`\n"
msgstr ""
"$ git fetch git://.... linus\n"
"$ LT=`git rev-parse FETCH_HEAD`\n"

#. type: Plain text
#: en/git-read-tree.txt:348
#, priority:80
msgid "Your work tree is still based on your HEAD ($JC), but you have some edits since.  Three-way merge makes sure that you have not added or modified index entries since $JC, and if you haven't, then does the right thing.  So with the following sequence:"
msgstr "A sua árvore de trabalho ainda tem como base no seu HEAD ($ JC), mas você tem algumas edições desde então.  A mesclagem de três vias garante que você não tenha adicionado ou modificado as entradas no índice desde $JC e, se não tiver, faz a coisa certa.  Então, com a seguinte sequência:"

#. type: delimited block -
#: en/git-read-tree.txt:354
#, no-wrap, priority:80
msgid ""
"$ git read-tree -m -u `git merge-base $JC $LT` $JC $LT\n"
"$ git merge-index git-merge-one-file -a\n"
"$ echo \"Merge with Linus\" | \\\n"
"  git commit-tree `git write-tree` -p $JC -p $LT\n"
msgstr ""
"$ git read-tree -m -u `git merge-base $JC $LT` $JC $LT\n"
"$ git merge-index git-merge-one-file -a\n"
"$ echo \"Merge with Linus\" | \\\n"
"  git commit-tree `git write-tree` -p $JC -p $LT\n"

#. type: Plain text
#: en/git-read-tree.txt:359
#, priority:80
msgid "what you would commit is a pure merge between $JC and $LT without your work-in-progress changes, and your work tree would be updated to the result of the merge."
msgstr "o commit que seria feito é uma mesclagem direta entre $JC e $LT sem as alterações em andamento e a sua árvore de trabalho seria atualizada para o resultado desta mesclagem."

#. type: Plain text
#: en/git-read-tree.txt:363
#, priority:80
msgid "However, if you have local changes in the working tree that would be overwritten by this merge, 'git read-tree' will refuse to run to prevent your changes from being lost."
msgstr "No entanto, caso tenha alterações locais na árvore de trabalho que seriam substituídas através desta mesclagem, o comando 'git read-tree' se recusará a executar evitando que as suas alterações sejam perdidas."

#. type: Plain text
#: en/git-read-tree.txt:373
#, priority:80
msgid "In other words, there is no need to worry about what exists only in the working tree.  When you have local changes in a part of the project that is not involved in the merge, your changes do not interfere with the merge, and are kept intact.  When they *do* interfere, the merge does not even start ('git read-tree' complains loudly and fails without modifying anything).  In such a case, you can simply continue doing what you were in the middle of doing, and when your working tree is ready (i.e. you have finished your work-in-progress), attempt the merge again."
msgstr "Em outras palavras, não há a necessidade de se preocupar com o que apenas exista na árvore de trabalho.  Quando houver alterações locais numa parte do projeto que não está envolvida com a mesclagem, as suas alterações não interferem na mesclagem e são mantidas intactas.  Quando há *interferência*, a mesclagem nem é iniciada (o comando 'git read-tree' faz o alerta e encerra sem alterar nada).  Nesse caso, é possível continuar simplesmente fazendo o que estava fazendo no meio e quando a sua árvore de trabalho estiver pronta (ou seja, você concluiu o seu trabalho em andamento), tente mesclar novamente."

#. type: Title -
#: en/git-read-tree.txt:376
#, no-wrap, priority:80
msgid "SPARSE CHECKOUT"
msgstr "AVERIGUAÇÃO ESPARSA"

#. type: Plain text
#: en/git-read-tree.txt:385
#, priority:80
msgid "Note: The skip-worktree capabilities in linkgit:git-update-index[1] and `read-tree` predated the introduction of linkgit:git-sparse-checkout[1].  Users are encouraged to use the `sparse-checkout` command in preference to these plumbing commands for sparse-checkout/skip-worktree related needs.  However, the information below might be useful to users trying to understand the pattern style used in non-cone mode of the `sparse-checkout` command."
msgstr "Observação: Os recursos `skip-worktree` em linkgit:git-update-index[1] e `read-tree` antecederam a introdução do linkgit:git-sparse-checkout[1]. Os usuários são encorajados a usar o comando `sparse-checkout` de preferência em vez destes comandos para necessidades relacionadas ao sparse-checkout/skip-worktree. No entanto, as informações abaixo podem ser úteis para os usuários que estejam tentando entender o estilo do padrão usado no modo não cônico do comando `sparse-checkout`."

#. type: Plain text
#: en/git-read-tree.txt:389
#, priority:80
msgid "\"Sparse checkout\" allows populating the working directory sparsely.  It uses the skip-worktree bit (see linkgit:git-update-index[1]) to tell Git whether a file in the working directory is worth looking at."
msgstr "A averiguação esparsa permite preencher minimamente o diretório de trabalho.  Utiliza o bit \"skip-worktree\" (consulte linkgit:git-update-index[1]) para informar ao Git se vale a pena examinar um arquivo no diretório de trabalho."

#. type: Plain text
#: en/git-read-tree.txt:399
#, ignore-ellipsis, priority:80
msgid "'git read-tree' and other merge-based commands ('git merge', 'git checkout'...) can help maintaining the skip-worktree bitmap and working directory update. `$GIT_DIR/info/sparse-checkout` is used to define the skip-worktree reference bitmap. When 'git read-tree' needs to update the working directory, it resets the skip-worktree bit in the index based on this file, which uses the same syntax as .gitignore files.  If an entry matches a pattern in this file, or the entry corresponds to a file present in the working tree, then skip-worktree will not be set on that entry. Otherwise, skip-worktree will be set."
msgstr "O coamndo 'git read-tree' e outros comandos com base na mesclagem ('git merge', 'git checkout' ...) podem ajudar a manter o bitmap 'skip-worktree' e a atualização do diretório de trabalho. O `$GIT_DIR/info/sparse-checkout` é utilizado para definir o bitmap da referência 'skip-worktree'. Quando o 'git read-tree' precisa atualizar o diretório de trabalho, ele redefine o bit 'skip-worktree' no índice com a base neste arquivo, que utiliza a mesma sintaxe dos arquivos '.gitignore'.  Caso uma entrada coincida a um padrão neste arquivo, ou a entrada que corresponda com um arquivo presente na árvore de trabalho, então o 'skip-worktree' não será definido para esta entrada. Caso contrário, o 'skip-worktree' será definido."

#. type: Plain text
#: en/git-read-tree.txt:403
#, priority:80
msgid "Then it compares the new skip-worktree value with the previous one. If skip-worktree turns from set to unset, it will add the corresponding file back. If it turns from unset to set, that file will be removed."
msgstr "Em seguida, ele compara o novo valor 'skip-worktree' com o anterior. Caso o 'skip-worktree' mude de definido para não definido, ele adicionará o arquivo correspondente novamente. Caso passe de não definido para definido, esse arquivo será removido."

#. type: Plain text
#: en/git-read-tree.txt:407
#, priority:80
msgid "While `$GIT_DIR/info/sparse-checkout` is usually used to specify what files are in, you can also specify what files are _not_ in, using negate patterns. For example, to remove the file `unwanted`:"
msgstr "Enquanto o `$GIT_DIR/info/sparse-checkout` é normalmente utilizado para definir quais arquivos estão nele, também é possível definir quais arquivos _não_ estão, utilizando padrões de negação. Como por exemplo, para remover o arquivo `indesejado`:"

#. type: delimited block -
#: en/git-read-tree.txt:411
#, no-wrap, priority:80
msgid ""
"/*\n"
"!unwanted\n"
msgstr ""
"/*\n"
"!unwanted\n"

#. type: Plain text
#: en/git-read-tree.txt:419
#, priority:80
msgid "Another tricky thing is fully repopulating the working directory when you no longer want sparse checkout. You cannot just disable \"sparse checkout\" because skip-worktree bits are still in the index and your working directory is still sparsely populated. You should re-populate the working directory with the `$GIT_DIR/info/sparse-checkout` file content as follows:"
msgstr "Outra coisa complicada é repovoar totalmente o diretório ativo quando você não quiser mais uma verificação esparsa. Você não pode simplesmente desativar a \"verificação esparsa\" porque os bits 'skip-worktree' ainda estão no índice e o seu diretório de trabalho ainda for escassamente preenchido. Você deve preencher novamente o diretório de trabalho com o conteúdo do arquivo `$GIT_DIR/info/sparse-checkout` da seguinte maneira:"

#. type: delimited block -
#: en/git-read-tree.txt:422
#, no-wrap, priority:80
msgid "/*\n"
msgstr "/*\n"

#. type: Plain text
#: en/git-read-tree.txt:428
#, priority:80
msgid "Then you can disable sparse checkout. Sparse checkout support in 'git read-tree' and similar commands is disabled by default. You need to turn `core.sparseCheckout` on in order to have sparse checkout support."
msgstr "Em seguida você pode desativar a averiguação esparsa. A predefinição da compatibilidade à averiguação esparsa no 'git read-tree' e comandos similares é desativada. Você precisa ativar o `core.sparseCheckout` para ter uma compatibilidade escassa da averiguação."

#. type: Plain text
#: en/git-read-tree.txt:434
#, ignore-same, priority:80
msgid "linkgit:git-write-tree[1], linkgit:git-ls-files[1], linkgit:gitignore[5], linkgit:git-sparse-checkout[1]"
msgstr "linkgit:git-write-tree[1], linkgit:git-ls-files[1], linkgit:gitignore[5], linkgit:git-sparse-checkout[1]"

#. type: Title =
#: en/git-rebase.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-rebase(1)"
msgstr "git-rebase(1)"

#. type: Plain text
#: en/git-rebase.txt:7
#, priority:100
msgid "git-rebase - Reapply commits on top of another base tip"
msgstr "git-rebase - Reaplique os commits em cima do topo de outra base"

#. type: Plain text
#: en/git-rebase.txt:16
#, no-wrap, priority:100
msgid ""
"'git rebase' [-i | --interactive] [<options>] [--exec <cmd>]\n"
"\t[--onto <newbase> | --keep-base] [<upstream> [<branch>]]\n"
"'git rebase' [-i | --interactive] [<options>] [--exec <cmd>] [--onto <newbase>]\n"
"\t--root [<branch>]\n"
"'git rebase' (--continue | --skip | --abort | --quit | --edit-todo | --show-current-patch)\n"
msgstr ""
"'git rebase' [-i | --interactive] [<opções>] [--exec <cmd>]\n"
"\t[--onto <nova-base> | --keep-base] [<upstream> [<ramo>]]\n"
"'git rebase' [-i | --interactive] [<opções>] [--exec <cmd>] [--onto <nova-base>]\n"
"\t--root [<ramo>]\n"
"'git rebase' (--continue | --skip | --abort | --quit | --edit-todo | --show-current-patch)\n"

#. type: Plain text
#: en/git-rebase.txt:22
#, fuzzy, priority:100
#| msgid "If <branch> is specified, 'git rebase' will perform an automatic `git switch <branch>` before doing anything else.  Otherwise it remains on the current branch."
msgid "If `<branch>` is specified, `git rebase` will perform an automatic `git switch <branch>` before doing anything else.  Otherwise it remains on the current branch."
msgstr "Caso o <ramo> seja utilizado, o comando 'git rebase' executará um `git switch <ramo>` automaticamente antes de fazer qualquer outra coisa.  Caso contrário, ele permanecerá no ramo atual."

#. type: Plain text
#: en/git-rebase.txt:28
#, fuzzy, priority:100
#| msgid "If <upstream> is not specified, the upstream configured in branch.<name>.remote and branch.<name>.merge options will be used (see linkgit:git-config[1] for details) and the `--fork-point` option is assumed.  If you are currently not on any branch or if the current branch does not have a configured upstream, the rebase will abort."
msgid "If `<upstream>` is not specified, the upstream configured in `branch.<name>.remote` and `branch.<name>.merge` options will be used (see linkgit:git-config[1] for details) and the `--fork-point` option is assumed.  If you are currently not on any branch or if the current branch does not have a configured upstream, the rebase will abort."
msgstr "Caso o `<upstream>` não seja definido, as opções \"upstream\" configuradas em `branch.<nome>.remote` e no `branch.<nome>.merge` serão utilizadas (para mais detalhes consulte linkgit:git-config[1]), assim como será assumida a opção `--fork-point`.  Caso você não esteja atualmente em nenhuma ramificação ou se a ramificação atual não tiver um \"upstream\" configurado, o \"rebase\" será cancelado."

#. type: Plain text
#: en/git-rebase.txt:35
#, fuzzy, priority:100
#| msgid "All changes made by commits in the current branch but that are not in <upstream> are saved to a temporary area.  This is the same set of commits that would be shown by `git log <upstream>..HEAD`; or by `git log 'fork_point'..HEAD`, if `--fork-point` is active (see the description on `--fork-point` below); or by `git log HEAD`, if the `--root` option is specified."
msgid "All changes made by commits in the current branch but that are not in `<upstream>` are saved to a temporary area.  This is the same set of commits that would be shown by `git log <upstream>..HEAD`; or by `git log 'fork_point'..HEAD`, if `--fork-point` is active (see the description on `--fork-point` below); or by `git log HEAD`, if the `--root` option is specified."
msgstr "Todas as alterações feitas através de commits no ramo atual, mas que não estão na <upstream>, são salvas numa área temporária.  Este é o mesmo conjunto dos commits que seriam exibidos por `git log <upstream>..HEAD`; ou pelo comando `git log 'fork_point'..HEAD`, caso `--fork-point` esteja ativo (veja a descrição em `--fork-point` abaixo); ou através do `git log HEAD`, caso a opção `--root` for seja utilizada."

#. type: Plain text
#: en/git-rebase.txt:40
#, fuzzy, priority:100
#| msgid "The current branch is reset to <upstream>, or <newbase> if the --onto option was supplied.  This has the exact same effect as `git reset --hard <upstream>` (or <newbase>).  ORIG_HEAD is set to point at the tip of the branch before the reset."
msgid "The current branch is reset to `<upstream>` or `<newbase>` if the `--onto` option was supplied.  This has the exact same effect as `git reset --hard <upstream>` (or `<newbase>`). `ORIG_HEAD` is set to point at the tip of the branch before the reset."
msgstr "A ramificação atual é redefinida para <upstream> ou <newbase> caso a opção `--onto` seja utilizada.  Isso tem exatamente o mesmo efeito que `git reset --hard <upstream>` (ou <newbase>).  O `ORIG_HEAD` está definido para apontar no cume do ramo antes da redefinição."

#. type: Plain text
#: en/git-rebase.txt:46
#, fuzzy, priority:100
#| msgid "The commits that were previously saved into the temporary area are then reapplied to the current branch, one by one, in order. Note that any commits in HEAD which introduce the same textual changes as a commit in HEAD..<upstream> are omitted (i.e., a patch already accepted upstream with a different commit message or timestamp will be skipped)."
msgid "The commits that were previously saved into the temporary area are then reapplied to the current branch, one by one, in order. Note that any commits in `HEAD` which introduce the same textual changes as a commit in `HEAD..<upstream>` are omitted (i.e., a patch already accepted upstream with a different commit message or timestamp will be skipped)."
msgstr "Os commits que foram salvos anteriormente na área temporária são reaplicadas no ramo atual, uma por uma e em ordem. Observe que quaisquer commits no `HEAD` que introduzam as mesmas alterações textuais que um commit no `HEAD`.. `<upstream>` são omitidas (ou seja, um patch já aceito na inicial com uma mensagem de commit ou carimbo de data e hora diferente, serão ignorados)."

#. type: Plain text
#: en/git-rebase.txt:53
#, fuzzy, priority:100
#| msgid "It is possible that a merge failure will prevent this process from being completely automatic.  You will have to resolve any such merge failure and run `git rebase --continue`.  Another option is to bypass the commit that caused the merge failure with `git rebase --skip`.  To check out the original <branch> and remove the .git/rebase-apply working files, use the command `git rebase --abort` instead."
msgid "It is possible that a merge failure will prevent this process from being completely automatic.  You will have to resolve any such merge failure and run `git rebase --continue`.  Another option is to bypass the commit that caused the merge failure with `git rebase --skip`.  To check out the original `<branch>` and remove the `.git/rebase-apply` working files, use the command `git rebase --abort` instead."
msgstr "É possível que uma falha da mesclagem impeça que este processo seja completamente automático.  Você terá que resolver qualquer falha da mesclagem e executar o comando `git rebase --continue`.  Outra opção é ignorar o commit que causou a falha da mesclagem com o comando `git rebase --skip`.  Para verificar o <ramo> original e remover os arquivos de trabalho '.git/rebase-apply', utilize o comando `git rebase --abort`."

#. type: Plain text
#: en/git-rebase.txt:55
#, priority:100
msgid "Assume the following history exists and the current branch is \"topic\":"
msgstr "Suponha que o seguinte histórico exista e que o ramo atual seja \"topic\":"

#. type: delimited block -
#: en/git-rebase.txt:60
#, no-wrap, priority:100
msgid ""
"          A---B---C topic\n"
"         /\n"
"    D---E---F---G master\n"
msgstr ""
"          A---B---C topic\n"
"         /\n"
"    D---E---F---G master\n"

#. type: Plain text
#: en/git-rebase.txt:63
#, priority:100
msgid "From this point, the result of either of the following commands:"
msgstr "A partir deste ponto, o resultado de um dos seguintes comandos:"

#. type: Plain text
#: en/git-rebase.txt:67
#, no-wrap, priority:100
msgid ""
"    git rebase master\n"
"    git rebase master topic\n"
msgstr ""
"    git rebase master\n"
"    git rebase master topic\n"

#. type: Plain text
#: en/git-rebase.txt:69
#, priority:100
msgid "would be:"
msgstr "seria:"

#. type: delimited block -
#: en/git-rebase.txt:74
#, no-wrap, priority:100
msgid ""
"                  A'--B'--C' topic\n"
"                 /\n"
"    D---E---F---G master\n"
msgstr ""
"                  A'--B'--C' topic\n"
"                 /\n"
"    D---E---F---G master\n"

#. type: Plain text
#: en/git-rebase.txt:79
#, no-wrap, priority:100
msgid ""
"*NOTE:* The latter form is just a short-hand of `git checkout topic`\n"
"followed by `git rebase master`. When rebase exits `topic` will\n"
"remain the checked-out branch.\n"
msgstr ""
"*OBSERVAÇÃO:* Este último formulário é apenas uma abreviação de `git checkout topic`\n"
"seguido por `git rebase master`. Quando a reconstrução (rebase) sair do `topic` será\n"
"mantido o ramo que foi averiguado.\n"

#. type: Plain text
#: en/git-rebase.txt:86
#, fuzzy, priority:100
#| msgid "If the upstream branch already contains a change you have made (e.g., because you mailed a patch which was applied upstream), then that commit will be skipped and warnings will be issued (if the `merge` backend is used).  For example, running `git rebase master` on the following history (in which `A'` and `A` introduce the same set of changes, but have different committer information):"
msgid "If the upstream branch already contains a change you have made (e.g., because you mailed a patch which was applied upstream), then that commit will be skipped and warnings will be issued (if the 'merge' backend is used).  For example, running `git rebase master` on the following history (in which `A'` and `A` introduce the same set of changes, but have different committer information):"
msgstr "Caso a ramificação upstream já contiver uma alteração que você fez (porque você enviou um patch que foi aplicado na upstream por exemplo), então este commit será ignorado e avisos serão emitidos (caso `merge` seja utilizado). Por exemplo, executando o comando `git rebase master` no histórico a seguir (onde `A'` e `A` introduzem o mesmo conjunto de alterações, mas possuem informações diferentes de quem fez o commit):"

#. type: delimited block -
#: en/git-rebase.txt:91
#, no-wrap, priority:100
msgid ""
"          A---B---C topic\n"
"         /\n"
"    D---E---A'---F master\n"
msgstr ""
"          A---B---C topic\n"
"         /\n"
"    D---E---A'---F master\n"

#. type: Plain text
#: en/git-rebase.txt:94
#, priority:100
msgid "will result in:"
msgstr "vai resultar em:"

#. type: delimited block -
#: en/git-rebase.txt:99
#, no-wrap, priority:100
msgid ""
"                   B'---C' topic\n"
"                  /\n"
"    D---E---A'---F master\n"
msgstr ""
"                   B'---C' topic\n"
"                  /\n"
"    D---E---A'---F master\n"

#. type: Plain text
#: en/git-rebase.txt:104
#, priority:100
msgid "Here is how you would transplant a topic branch based on one branch to another, to pretend that you forked the topic branch from the latter branch, using `rebase --onto`."
msgstr "Aqui está como você transplantaria um ramo do tópico com base num ramo para outro, para fingir que você bifurcou o ramo do tópico deste último ramo, utilizando `rebase --onto`."

#. type: Plain text
#: en/git-rebase.txt:108
#, priority:100
msgid "First let's assume your 'topic' is based on branch 'next'.  For example, a feature developed in 'topic' depends on some functionality which is found in 'next'."
msgstr "Primeiro, vamos supor que o seu 'tópico' seja baseado no ramo 'next'.  Por exemplo, um recurso desenvolvido em 'topic' depende de algumas funcionalidades encontradas em 'next'."

#. type: delimited block -
#: en/git-rebase.txt:115
#, no-wrap, priority:100
msgid ""
"    o---o---o---o---o  master\n"
"         \\\n"
"          o---o---o---o---o  next\n"
"                           \\\n"
"                            o---o---o  topic\n"
msgstr ""
"    o---o---o---o---o  master\n"
"         \\\n"
"          o---o---o---o---o  next\n"
"                           \\\n"
"                            o---o---o  topic\n"

#. type: Plain text
#: en/git-rebase.txt:120
#, priority:100
msgid "We want to make 'topic' forked from branch 'master'; for example, because the functionality on which 'topic' depends was merged into the more stable 'master' branch. We want our tree to look like this:"
msgstr "Queremos criar um 'tópico' bifurcado no ramo 'master'; porque a funcionalidade da qual o 'tópico' depende foi mesclado na ramificação 'master' mais estável. Queremos que a nossa árvore fique assim:"

#. type: delimited block -
#: en/git-rebase.txt:127
#, no-wrap, priority:100
msgid ""
"    o---o---o---o---o  master\n"
"        |            \\\n"
"        |             o'--o'--o'  topic\n"
"         \\\n"
"          o---o---o---o---o  next\n"
msgstr ""
"    o---o---o---o---o  master\n"
"        |            \\\n"
"        |             o'--o'--o'  topic\n"
"         \\\n"
"          o---o---o---o---o  next\n"

#. type: Plain text
#: en/git-rebase.txt:130
#, priority:100
msgid "We can get this using the following command:"
msgstr "Podemos conseguir isso utilizando o seguinte comando:"

#. type: Plain text
#: en/git-rebase.txt:132
#, no-wrap, priority:100
msgid "    git rebase --onto master next topic\n"
msgstr "    git rebase --onto master next topic\n"

#. type: Plain text
#: en/git-rebase.txt:136
#, priority:100
msgid "Another example of --onto option is to rebase part of a branch.  If we have the following situation:"
msgstr "Um outro exemplo da opção `--onto` é reconstruir a fundação da parte de uma ramificação.  Se tivermos a seguinte situação:"

#. type: delimited block -
#: en/git-rebase.txt:143
#, no-wrap, priority:100
msgid ""
"                            H---I---J topicB\n"
"                           /\n"
"                  E---F---G  topicA\n"
"                 /\n"
"    A---B---C---D  master\n"
msgstr ""
"                            H---I---J topicB\n"
"                           /\n"
"                  E---F---G  topicA\n"
"                 /\n"
"    A---B---C---D  master\n"

#. type: Plain text
#: en/git-rebase.txt:146 en/git-rebase.txt:169
#, priority:100
msgid "then the command"
msgstr "então o comando"

#. type: Plain text
#: en/git-rebase.txt:148
#, no-wrap, priority:100
msgid "    git rebase --onto master topicA topicB\n"
msgstr "    git rebase --onto master topicA topicB\n"

#. type: Plain text
#: en/git-rebase.txt:150
#, priority:100
msgid "would result in:"
msgstr "resultaria em:"

#. type: delimited block -
#: en/git-rebase.txt:157
#, no-wrap, priority:100
msgid ""
"                 H'--I'--J'  topicB\n"
"                /\n"
"                | E---F---G  topicA\n"
"                |/\n"
"    A---B---C---D  master\n"
msgstr ""
"                 H'--I'--J'  topicB\n"
"                /\n"
"                | E---F---G  topicA\n"
"                |/\n"
"    A---B---C---D  master\n"

#. type: Plain text
#: en/git-rebase.txt:160
#, priority:100
msgid "This is useful when topicB does not depend on topicA."
msgstr "É útil quando o 'topicB' não depender do 'topicA'."

#. type: Plain text
#: en/git-rebase.txt:163
#, priority:100
msgid "A range of commits could also be removed with rebase.  If we have the following situation:"
msgstr "Um intervalo dos commits também pode ser removido com a reconstrução 'rebase'.  Se tivermos a seguinte situação:"

#. type: delimited block -
#: en/git-rebase.txt:166
#, no-wrap, priority:100
msgid "    E---F---G---H---I---J  topicA\n"
msgstr "    E---F---G---H---I---J  topicA\n"

#. type: Plain text
#: en/git-rebase.txt:171
#, no-wrap, priority:100
msgid "    git rebase --onto topicA~5 topicA~3 topicA\n"
msgstr "    git rebase --onto topicA~5 topicA~3 topicA\n"

#. type: Plain text
#: en/git-rebase.txt:173
#, priority:100
msgid "would result in the removal of commits F and G:"
msgstr "resultaria na remoção dos commits 'F' e 'G':"

#. type: delimited block -
#: en/git-rebase.txt:176
#, no-wrap, priority:100
msgid "    E---H'---I'---J'  topicA\n"
msgstr "    E---H'---I'---J'  topicA\n"

#. type: Plain text
#: en/git-rebase.txt:181
#, fuzzy, priority:100
#| msgid "This is useful if F and G were flawed in some way, or should not be part of topicA.  Note that the argument to --onto and the <upstream> parameter can be any valid commit-ish."
msgid "This is useful if F and G were flawed in some way, or should not be part of topicA.  Note that the argument to `--onto` and the `<upstream>` parameter can be any valid commit-ish."
msgstr "É útil caso 'F' e 'G' estejam de alguma forma com defeitos ou não deveriam fazer parte do 'topicA'.  Observe que o argumento para '--onto' e o parâmetro '<upstream>' podem ser qualquer 'commit-ish' válido."

#. type: Plain text
#: en/git-rebase.txt:187
#, fuzzy, priority:100
#| msgid "In case of conflict, 'git rebase' will stop at the first problematic commit and leave conflict markers in the tree.  You can use 'git diff' to locate the markers (<<<<<<) and make edits to resolve the conflict.  For each file you edit, you need to tell Git that the conflict has been resolved, typically this would be done with"
msgid "In case of conflict, `git rebase` will stop at the first problematic commit and leave conflict markers in the tree.  You can use `git diff` to locate the markers (<<<<<<) and make edits to resolve the conflict.  For each file you edit, you need to tell Git that the conflict has been resolved, typically this would be done with"
msgstr "Em caso de conflito, o 'git rebase' irá parar no primeiro commit problemático e deixar os marcadores de conflito na árvore.  Você pode utilizar o 'git diff' para localizar os marcadores (<<<<<<) e fazer edições para resolver o conflito.  Para cada arquivo que você edita, é necessário informar ao Git que o conflito foi resolvido, normalmente isso seria feito com"

#. type: Plain text
#: en/git-rebase.txt:190
#, no-wrap, priority:100
msgid "    git add <filename>\n"
msgstr "    git add <nome-do-arquivo>\n"

#. type: Plain text
#: en/git-rebase.txt:194
#, priority:100
msgid "After resolving the conflict manually and updating the index with the desired resolution, you can continue the rebasing process with"
msgstr "Depois de resolver o conflito manualmente e atualizar o índice com a resolução desejada, você pode continuar o processo de reconstrução com o comando"

#. type: Plain text
#: en/git-rebase.txt:197
#, no-wrap, priority:100
msgid "    git rebase --continue\n"
msgstr "    git rebase --continue\n"

#. type: Plain text
#: en/git-rebase.txt:200
#, priority:100
msgid "Alternatively, you can undo the 'git rebase' with"
msgstr "Como alternativa, você pode desfazer o 'git rebase' com"

#. type: Plain text
#: en/git-rebase.txt:203
#, no-wrap, priority:100
msgid "    git rebase --abort\n"
msgstr "    git rebase --abort\n"

#. type: Labeled list
#: en/git-rebase.txt:206
#, no-wrap, priority:100
msgid "--onto <newbase>"
msgstr "--onto <nova-base>"

#. type: Plain text
#: en/git-rebase.txt:211
#, fuzzy, priority:100
#| msgid "Starting point at which to create the new commits. If the --onto option is not specified, the starting point is <upstream>.  May be any valid commit, and not just an existing branch name."
msgid "Starting point at which to create the new commits. If the `--onto` option is not specified, the starting point is `<upstream>`.  May be any valid commit, and not just an existing branch name."
msgstr "Ponto de partida onde criar os novos commits. Caso a opção '--onto' não seja utilizada, o ponto inicial é <upstream>.  Pode ser qualquer commit válido e não apenas um nome de um ramo já existente."

#. type: Plain text
#: en/git-rebase.txt:215
#, ignore-ellipsis, priority:100
msgid "As a special case, you may use \"A\\...B\" as a shortcut for the merge base of A and B if there is exactly one merge base. You can leave out at most one of A and B, in which case it defaults to HEAD."
msgstr "Como um caso especial, você pode utilizar \"A\\...B\" como um atalho para a base de mesclagem 'A' e 'B' caso haja exatamente uma base para mesclagem. Você pode deixar de fora no máximo um de 'A' e 'B'; nesse caso, a predefinição retorna para `HEAD`."

#. type: Labeled list
#: en/git-rebase.txt:216
#, ignore-same, no-wrap, priority:100
msgid "--keep-base"
msgstr "--keep-base"

#. type: Plain text
#: en/git-rebase.txt:222
#, fuzzy, ignore-ellipsis, priority:100
#| msgid "Set the starting point at which to create the new commits to the merge base of <upstream> and <branch>. Running 'git rebase --keep-base <upstream> <branch>' is equivalent to running 'git rebase --onto <upstream>...<branch> <upstream> <branch>'."
msgid "Set the starting point at which to create the new commits to the merge base of `<upstream>` and `<branch>`. Running `git rebase --keep-base <upstream> <branch>` is equivalent to running `git rebase --onto <upstream>...<branch> <upstream> <branch>`."
msgstr "Defina o ponto de partida para criar os novos commits para a mesclagem base do <upstream> e <ramo>. Executando o comando 'git rebase --keep-base <upstream> <ramo>' é o mesmo que executar o comando 'git rebase --onto <upstream>...<ramo> <upstream> <ramo>'."

#. type: Plain text
#: en/git-rebase.txt:227
#, priority:100
msgid "This option is useful in the case where one is developing a feature on top of an upstream branch. While the feature is being worked on, the upstream branch may advance and it may not be the best idea to keep rebasing on top of the upstream but to keep the base commit as-is."
msgstr "Esta opção é útil no caso onde se está desenvolvendo um recurso em cima de um ramo 'upstream'. Enquanto o recurso está sendo trabalhado, o ramo 'upstream' pode avançar e talvez não seja a melhor ideia continuar reconstruindo no topo do 'upstream', porém manter a base do commit como está."

#. type: Plain text
#: en/git-rebase.txt:232
#, fuzzy, priority:100
#| msgid "Although both this option and --fork-point find the merge base between <upstream> and <branch>, this option uses the merge base as the _starting point_ on which new commits will be created, whereas --fork-point uses the merge base to determine the _set of commits_ which will be rebased."
msgid "Although both this option and `--fork-point` find the merge base between `<upstream>` and `<branch>`, this option uses the merge base as the _starting point_ on which new commits will be created, whereas `--fork-point` uses the merge base to determine the _set of commits_ which will be rebased."
msgstr "Embora esta opção e o `--fork-point` encontrem a base da mesclagem entre <upstream> e <ramo>, esta opção utiliza a base da mesclagem como o _ponto inicial_ onde os novos commits serão criados, enquanto `--fork-point` utiliza a mesclagem da base para determinar o _conjunto dos commits_ que serão reconstruídos."

#. type: Plain text
#: en/git-rebase.txt:234 en/git-rebase.txt:265 en/git-rebase.txt:284 en/git-rebase.txt:305 en/git-rebase.txt:326 en/git-rebase.txt:334 en/git-rebase.txt:357 en/git-rebase.txt:369 en/git-rebase.txt:378 en/git-rebase.txt:420 en/git-rebase.txt:455 en/git-rebase.txt:480 en/git-rebase.txt:493 en/git-rebase.txt:500 en/git-rebase.txt:512 en/git-rebase.txt:560 en/git-rebase.txt:570 en/git-rebase.txt:590
#, priority:100
msgid "See also INCOMPATIBLE OPTIONS below."
msgstr "Consulte também a seção \"OPÇÕES INCOMPATÍVEIS\" logo abaixo."

#. type: Plain text
#: en/git-rebase.txt:239
#, priority:100
msgid "Upstream branch to compare against.  May be any valid commit, not just an existing branch name. Defaults to the configured upstream for the current branch."
msgstr "Ramo upstream para fazer a comparação.  Pode ser qualquer commit válido, não apenas um nome de uma ramo já existente. A predefinição retorna para \"upstream\" configurada para o ramo atual."

#. type: Plain text
#: en/git-rebase.txt:242
#, fuzzy, priority:100
#| msgid "Working branch; defaults to HEAD."
msgid "Working branch; defaults to `HEAD`."
msgstr "Ramo de trabalho; A predefinição retorna para `HEAD`."

#. type: Plain text
#: en/git-rebase.txt:245
#, priority:100
msgid "Restart the rebasing process after having resolved a merge conflict."
msgstr "Reinicie o processo de reformulação após resolver um conflito de mesclagem."

#. type: Plain text
#: en/git-rebase.txt:252
#, fuzzy, priority:100
#| msgid "Abort the rebase operation and reset HEAD to the original branch. If <branch> was provided when the rebase operation was started, then HEAD will be reset to <branch>. Otherwise HEAD will be reset to where it was when the rebase operation was started."
msgid "Abort the rebase operation and reset HEAD to the original branch. If `<branch>` was provided when the rebase operation was started, then `HEAD` will be reset to `<branch>`. Otherwise `HEAD` will be reset to where it was when the rebase operation was started."
msgstr "Interrompa a operação de reconstrução da fundação e redefina o `HEAD` para o ramo original. Caso <ramo> seja informado quando a operação de reconstrução da fundação seja iniciada, o `HEAD` será redefinido para <ramo>. Caso contrário, o HEAD será redefinido para onde estava quando a operação de reconstrução foi iniciada."

#. type: Plain text
#: en/git-rebase.txt:258
#, fuzzy, priority:100
#| msgid "Abort the rebase operation but HEAD is not reset back to the original branch. The index and working tree are also left unchanged as a result. If a temporary stash entry was created using --autostash, it will be saved to the stash list."
msgid "Abort the rebase operation but `HEAD` is not reset back to the original branch. The index and working tree are also left unchanged as a result. If a temporary stash entry was created using `--autostash`, it will be saved to the stash list."
msgstr "Interrompa a operação de reconstrução, porém o `HEAD` não será redefinido para o ramo original. Como resultado, o índice e a árvore de trabalho também permanecem inalterados. Caso uma entrada temporária \"stash\" seja criada utilizando `--autostash`, ela será salva na lista \"stash\"."

#. type: Plain text
#: en/git-rebase.txt:263
#, priority:100
msgid "Use applying strategies to rebase (calling `git-am` internally).  This option may become a no-op in the future once the merge backend handles everything the apply one does."
msgstr "Utilize estratégias para aplicar a reestruturação da base \"rebase\" (invocando `git-am` internamente).  Esta opção poderá se tornar não operacional no futuro uma vez que o processo interno da mesclagem processe tudo o que a opção '--apply' fizer."

#. type: Labeled list
#: en/git-rebase.txt:266
#, no-wrap, priority:100
msgid "--empty={drop,keep,ask}"
msgstr "--empty={drop,keep,ask}"

#. type: Plain text
#: en/git-rebase.txt:277
#, fuzzy, priority:100
#| msgid "How to handle commits that are not empty to start and are not clean cherry-picks of any upstream commit, but which become empty after rebasing (because they contain a subset of already upstream changes).  With drop (the default), commits that become empty are dropped.  With keep, such commits are kept.  With ask (implied by --interactive), the rebase will halt when an empty commit is applied allowing you to choose whether to drop it, edit files more, or just commit the empty changes.  Other options, like --exec, will use the default of drop unless -i/--interactive is explicitly specified."
msgid "How to handle commits that are not empty to start and are not clean cherry-picks of any upstream commit, but which become empty after rebasing (because they contain a subset of already upstream changes).  With drop (the default), commits that become empty are dropped.  With keep, such commits are kept.  With ask (implied by `--interactive`), the rebase will halt when an empty commit is applied allowing you to choose whether to drop it, edit files more, or just commit the empty changes.  Other options, like `--exec`, will use the default of drop unless `-i`/`--interactive` is explicitly specified."
msgstr "Como lidar com commits que não estão vazias para iniciar e não são escolhas seletivas limpas de nenhum commit upstream, mas que ficam vazias após a reconstrução (porque elas já contêm um subconjunto de alterações na upstream).  Com drop (a predefinição), os commits que ficam vazias são descartadas.  Com keep, estes commits são mantidos.  Com o comando 'ask' (implícito através da opção `--interactive`), uma reconstrução 'rebase' será interrompida quando um commit vazia for aplicado, permitindo que você escolha se elimina, edita mais arquivos ou apenas faça o commit das alterações vazias.  Outras opções, como `--exec`, utilizarão a predefinição 'drop', a menos que a opção `-i/--interactive` seja informado de forma explicita."

#. type: Plain text
#: en/git-rebase.txt:282
#, fuzzy, ignore-ellipsis, priority:100
#| msgid "Note that commits which start empty are kept (unless --no-keep-empty is specified), and commits which are clean cherry-picks (as determined by `git log --cherry-mark ...`) are detected and dropped as a preliminary step (unless --reapply-cherry-picks is passed)."
msgid "Note that commits which start empty are kept (unless `--no-keep-empty` is specified), and commits which are clean cherry-picks (as determined by `git log --cherry-mark ...`) are detected and dropped as a preliminary step (unless `--reapply-cherry-picks` is passed)."
msgstr "Observe que, os commits que começam vazios são mantidos (a menos que a opção `--no-keep-empty` seja utilizado) e os commits que são escolhas limpas (conforme determinado pelo comando `git log --cherry-mark ...`) são detectados e descartados como uma etapa preliminar (a menos que a opção `--reapply-cherry-picks seja utilizado)."

#. type: Plain text
#: en/git-rebase.txt:285 en/git-rebase.txt:641
#, ignore-same, no-wrap, priority:100
msgid "--no-keep-empty"
msgstr "--no-keep-empty"

#. type: Labeled list
#: en/git-rebase.txt:286
#, ignore-same, no-wrap, priority:100
msgid "--keep-empty"
msgstr "--keep-empty"

#. type: Plain text
#: en/git-rebase.txt:294
#, fuzzy, priority:100
#| msgid "Do not keep commits that start empty before the rebase (i.e. that do not change anything from its parent) in the result.  The default is to keep commits which start empty, since creating such commits requires passing the --allow-empty override flag to `git commit`, signifying that a user is very intentionally creating such a commit and thus wants to keep it."
msgid "Do not keep commits that start empty before the rebase (i.e. that do not change anything from its parent) in the result.  The default is to keep commits which start empty, since creating such commits requires passing the `--allow-empty` override flag to `git commit`, signifying that a user is very intentionally creating such a commit and thus wants to keep it."
msgstr "Não mantenha os commits que começam vazios antes da reconstrução (ou seja, que não alteram em nada a origem) no resultado.  A predefinição é manter os commits que começam vazios, pois a criação destes commits requer o encaminhamento da opção `--allow-empty override` para o comando `git commit`, significa que um usuário está criando intencionalmente tal commit e portanto, deseja mantê-lo."

#. type: Plain text
#: en/git-rebase.txt:300
#, priority:100
msgid "Usage of this flag will probably be rare, since you can get rid of commits that start empty by just firing up an interactive rebase and removing the lines corresponding to the commits you don't want.  This flag exists as a convenient shortcut, such as for cases where external tools generate many empty commits and you want them all removed."
msgstr "A utilização desta opção é bem rara, já que você pode se livrar dos commits que iniciam vazios simplesmente executando uma reconstrução interativa e removendo as linhas correspondentes ao commit que você não quer.  Está opção existe como um atalho por mera conveniência, para casos onde as ferramentas externas gerem muitos commits vazios e você que todos eles sejam removidos."

#. type: Plain text
#: en/git-rebase.txt:303
#, fuzzy, priority:100
#| msgid "For commits which do not start empty but become empty after rebasing, see the --empty flag."
msgid "For commits which do not start empty but become empty after rebasing, see the `--empty` flag."
msgstr "Para os commits que não começam vazios, mas ficam vazios após a reconstrução ('rebase'), consulte a opção `--empty`."

#. type: Plain text
#: en/git-rebase.txt:306 en/git-rebase.txt:643
#, ignore-same, no-wrap, priority:100
msgid "--reapply-cherry-picks"
msgstr "--reapply-cherry-picks"

#. type: Labeled list
#: en/git-rebase.txt:307
#, ignore-same, no-wrap, priority:100
msgid "--no-reapply-cherry-picks"
msgstr "--no-reapply-cherry-picks"

#. type: Plain text
#: en/git-rebase.txt:313
#, priority:100
msgid "Reapply all clean cherry-picks of any upstream commit instead of preemptively dropping them. (If these commits then become empty after rebasing, because they contain a subset of already upstream changes, the behavior towards them is controlled by the `--empty` flag.)"
msgstr "Reaplique todas as escolhas seletivas que estejam limpas de qualquer commit \"upstream\" em vez inviabilizá-los por completo. (Então, caso estes commits se tornem vazios depois da reconstrução, por conter um subconjunto de alterações da \"upstream\", o comportamento em direção à eles é controlado através da opção `--empty`.)"

#. type: Plain text
#: en/git-rebase.txt:321
#, fuzzy, priority:100
#| msgid "By default (or if `--no-reapply-cherry-picks` is given), these commits will be automatically dropped.  Because this necessitates reading all upstream commits, this can be expensive in repos with a large number of upstream commits that need to be read.  When using the `merge` backend, warnings will be issued for each dropped commit (unless `--quiet` is given). Advice will also be issued unless `advice.skippedCherryPicks` is set to false (see linkgit:git-config[1])."
msgid "By default (or if `--no-reapply-cherry-picks` is given), these commits will be automatically dropped.  Because this necessitates reading all upstream commits, this can be expensive in repos with a large number of upstream commits that need to be read.  When using the 'merge' backend, warnings will be issued for each dropped commit (unless `--quiet` is given). Advice will also be issued unless `advice.skippedCherryPicks` is set to false (see linkgit:git-config[1])."
msgstr "É predefinido que (ou se `--no-reapply-cherry-picks 'for fornecido), estes commits serão automaticamente eliminados.  Como isso requer a leitura de todos os commits upstream, isso pode custar caro nos repositórios com uma grande quantidade de commits na upstream que precisam ser lidos.  Ao utilizar `merge`, avisos serão emitidos para cada commit abandonado (a menos que `--quiet` seja usado). Os avisos também serão emitidos a menos que a variável `advice.skippedCherryPicks` seja definida como falso (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-rebase.txt:324
#, priority:100
msgid "`--reapply-cherry-picks` allows rebase to forgo reading all upstream commits, potentially improving performance."
msgstr "A opção `--reapply-cherry-picks` permite que a reconstrução anteceda a leitura de todos os commits \"upstream\", melhorando muito o desempenho."

#. type: Plain text
#: en/git-rebase.txt:332
#, priority:100
msgid "No-op.  Rebasing commits with an empty message used to fail and this option would override that behavior, allowing commits with empty messages to be rebased.  Now commits with an empty message do not cause rebasing to halt."
msgstr "No-op.  A reconstrução dos commits com uma mensagem vazia costumava falhar, esta opção substitui este comportamento, permitindo que os commits com mensagens vazias sejam refeitas.  Agora os commits com uma mensagem vazia não causam mais a interrupção do \"rebasing\"."

#. type: Plain text
#: en/git-rebase.txt:337
#, priority:100
msgid "Restart the rebasing process by skipping the current patch."
msgstr "Reinicie o processo de reconstrução da fundação ignorando o patch atual."

#. type: Plain text
#: en/git-rebase.txt:338 en/git-rebase.txt:644
#, ignore-same, no-wrap, priority:100
msgid "--edit-todo"
msgstr "--edit-todo"

#. type: Plain text
#: en/git-rebase.txt:340
#, priority:100
msgid "Edit the todo list during an interactive rebase."
msgstr "Edite a lista de tarefas durante uma nova reconstrução interativa."

#. type: Labeled list
#: en/git-rebase.txt:341
#, ignore-same, no-wrap, priority:100
msgid "--show-current-patch"
msgstr "--show-current-patch"

#. type: Plain text
#: en/git-rebase.txt:345
#, priority:100
msgid "Show the current patch in an interactive rebase or when rebase is stopped because of conflicts. This is the equivalent of `git show REBASE_HEAD`."
msgstr "Exiba o patch atual numa nova recuperação interativa ou quando a nova recuperação for interrompida por causa de conflitos. É o equivalente ao `git show REBASE_HEAD`."

#. type: Plain text
#: en/git-rebase.txt:349
#, priority:100
msgid "Using merging strategies to rebase (default)."
msgstr "Usando estratégias de mesclagem para o rebase (padrão)."

#. type: Plain text
#: en/git-rebase.txt:355
#, fuzzy, priority:100
#| msgid "Note that a rebase merge works by replaying each commit from the working branch on top of the <upstream> branch.  Because of this, when a merge conflict happens, the side reported as 'ours' is the so-far rebased series, starting with <upstream>, and 'theirs' is the working branch.  In other words, the sides are swapped."
msgid "Note that a rebase merge works by replaying each commit from the working branch on top of the `<upstream>` branch.  Because of this, when a merge conflict happens, the side reported as 'ours' is the so-far rebased series, starting with `<upstream>`, and 'theirs' is the working branch.  In other words, the sides are swapped."
msgstr "Observe que uma mesclagem de reconstrução (rebase) funciona repetindo cada commit da ramificação de trabalho na parte do topo <upstream>.  Por esse motivo, quando ocorre um conflito na mesclagem, o lado relatado como 'nosso' é a série até agora reformulada, começando com <upstream> e 'deles' é o ramo de trabalho.  Em outras palavras, os lados são trocados."

#. type: Plain text
#: en/git-rebase.txt:362
#, priority:100
msgid "Use the given merge strategy, instead of the default `ort`.  This implies `--merge`."
msgstr "Use a estratégia de mesclagem informada, em vez do padrão `ort`.  Isso implica no uso da opção `--merge`."

#. type: Plain text
#: en/git-rebase.txt:367
#, fuzzy, priority:100
#| msgid "Because 'git rebase' replays each commit from the working branch on top of the <upstream> branch using the given strategy, using the 'ours' strategy simply empties all patches from the <branch>, which makes little sense."
msgid "Because `git rebase` replays each commit from the working branch on top of the `<upstream>` branch using the given strategy, using the `ours` strategy simply empties all patches from the `<branch>`, which makes little sense."
msgstr "Como o 'git rebase' repete cada commit do ramo de trabalho no cume do ramo <upstream> utilizando a estratégia informada, o uso da estratégia 'our' simplesmente esvazia todos os patches do <ramo>, que faz pouco sentido."

#. type: Labeled list
#: en/git-rebase.txt:370
#, no-wrap, priority:100
msgid "-X <strategy-option>"
msgstr "-X <opção-da-estratégia>"

#. type: Labeled list
#: en/git-rebase.txt:371
#, no-wrap, priority:100
msgid "--strategy-option=<strategy-option>"
msgstr "--strategy-option=<opção-da-estratégia>"

#. type: Plain text
#: en/git-rebase.txt:376
#, priority:100
msgid "Pass the <strategy-option> through to the merge strategy.  This implies `--merge` and, if no strategy has been specified, `-s ort`.  Note the reversal of 'ours' and 'theirs' as noted above for the `-m` option."
msgstr "Encaminhe a <opção-de-estratégia> para a estratégia da mesclagem.  implica no uso da opção `--merge` e caso nenhuma estratégia tenha sido definida, `-s ort`.  Observe a reversão do 'ours' (nossos) e 'theirs' (deles), conforme observado acima para a opção `-m`."

#. type: Plain text
#: en/git-rebase.txt:393
#, fuzzy, priority:100
#| msgid "Be quiet. Implies --no-stat."
msgid "Be quiet. Implies `--no-stat`."
msgstr "Fique em silêncio Implies --no-stat."

#. type: Plain text
#: en/git-rebase.txt:397
#, fuzzy, priority:100
#| msgid "Be verbose. Implies --stat."
msgid "Be verbose. Implies `--stat`."
msgstr "Seja loquaz. Implica no uso de `--stat`."

#. type: Plain text
#: en/git-rebase.txt:401
#, priority:100
msgid "Show a diffstat of what changed upstream since the last rebase. The diffstat is also controlled by the configuration option rebase.stat."
msgstr "Exiba uma descrição do que mudou na upstream desde a última reconstrução (rebase). O diffstat também é controlado pela opção de configuração `rebase.stat`."

#. type: Plain text
#: en/git-rebase.txt:405
#, priority:100
msgid "Do not show a diffstat as part of the rebase process."
msgstr "Não mostre um \"diffstat\" como parte do processo de reconstrução da fundação (rebase)."

#. type: Labeled list
#: en/git-rebase.txt:406
#, ignore-same, no-wrap, priority:100
msgid "--no-verify"
msgstr "--no-verify"

#. type: Plain text
#: en/git-rebase.txt:408
#, priority:100
msgid "This option bypasses the pre-rebase hook.  See also linkgit:githooks[5]."
msgstr "Este comando ignora o gancho \"pre-rebase\".  Consulte também linkgit:githooks[5]."

#. type: Labeled list
#: en/git-rebase.txt:409 en/git-rev-parse.txt:98 en/git-show-ref.txt:59 en/git-tag.txt:88
#, ignore-same, no-wrap, priority:240
msgid "--verify"
msgstr "--verify"

#. type: Plain text
#: en/git-rebase.txt:412
#, fuzzy, priority:100
#| msgid "Allows the pre-rebase hook to run, which is the default.  This option can be used to override --no-verify.  See also linkgit:githooks[5]."
msgid "Allows the pre-rebase hook to run, which is the default.  This option can be used to override `--no-verify`.  See also linkgit:githooks[5]."
msgstr "É predefinido que seja permitido que o gancho \"pre-rebase\" seja executado.  Esta opção pode ser usada para substituir o comando ` --no-verify`.  Consulte também linkgit:githooks[5]."

#. type: Plain text
#: en/git-rebase.txt:418
#, fuzzy, priority:100
#| msgid "Ensure at least <n> lines of surrounding context match before and after each change.  When fewer lines of surrounding context exist they all must match.  By default no context is ever ignored.  Implies --apply."
msgid "Ensure at least `<n>` lines of surrounding context match before and after each change.  When fewer lines of surrounding context exist they all must match.  By default no context is ever ignored.  Implies `--apply`."
msgstr "Assegure que pelo menos `<n>` linhas ao redor do contexto coincidente antes e após cada alteração.  Quando há menos linhas de contexto ao redor, todas elas devem coincidir.  É predefinido que nenhum contexto seja ignorado.  Implica no uso da opção --apply."

#. type: Labeled list
#: en/git-rebase.txt:421 en/merge-options.txt:47 en/merge-options.txt:62
#, ignore-same, no-wrap, priority:240
msgid "--no-ff"
msgstr "--no-ff"

#. type: Labeled list
#: en/git-rebase.txt:422
#, ignore-same, no-wrap, priority:100
msgid "--force-rebase"
msgstr "--force-rebase"

#. type: Plain text
#: en/git-rebase.txt:427
#, priority:100
msgid "Individually replay all rebased commits instead of fast-forwarding over the unchanged ones.  This ensures that the entire history of the rebased branch is composed of new commits."
msgstr "Reproduza individualmente todos os commits reconstruídos em vez de avançar rapidamente sobre os que estejam inalterados.  Isso garante que todo o histórico do ramo reconstruído seja composto por novos commits."

#. type: Plain text
#: en/git-rebase.txt:433
#, priority:100
msgid "You may find this helpful after reverting a topic branch merge, as this option recreates the topic branch with fresh commits so it can be remerged successfully without needing to \"revert the reversion\" (see the link:howto/revert-a-faulty-merge.html[revert-a-faulty-merge How-To] for details)."
msgstr "Pode ser útil após reverter uma mesclagem do ramo \"topic\", pois esta opção recria o ramo \"topic\" com os novos commits, para que possa ser recuperado com êxito sem precisar \"reverter a reversão\" (para mais detalhes, consulte o link: howto/revert-a-fafe-merge.html [Como reverter uma falha da mesclagem])."

#. type: Labeled list
#: en/git-rebase.txt:435
#, ignore-same, no-wrap, priority:100
msgid "--no-fork-point"
msgstr "--no-fork-point"

#. type: Plain text
#: en/git-rebase.txt:439
#, fuzzy, priority:100
#| msgid "Use reflog to find a better common ancestor between <upstream> and <branch> when calculating which commits have been introduced by <branch>."
msgid "Use reflog to find a better common ancestor between `<upstream>` and `<branch>` when calculating which commits have been introduced by `<branch>`."
msgstr "Utilize reflog para encontrar um ancestral comum melhor entre a <upstream> e o <ramo> ao calcular quais os commits foram introduzidos pelo <ramo>."

#. type: Plain text
#: en/git-rebase.txt:445
#, fuzzy, priority:100
#| msgid "When --fork-point is active, 'fork_point' will be used instead of <upstream> to calculate the set of commits to rebase, where 'fork_point' is the result of `git merge-base --fork-point <upstream> <branch>` command (see linkgit:git-merge-base[1]).  If 'fork_point' ends up being empty, the <upstream> will be used as a fallback."
msgid "When `--fork-point` is active, 'fork_point' will be used instead of `<upstream>` to calculate the set of commits to rebase, where 'fork_point' is the result of `git merge-base --fork-point <upstream> <branch>` command (see linkgit:git-merge-base[1]).  If 'fork_point' ends up being empty, the `<upstream>` will be used as a fallback."
msgstr "Quando \"--fork-point\" está ativo o 'fork_point' será utilizado em vez do `<upstream>` calcular o conjunto dos commits para fazer o \"rebase\" onde 'fork_point' é o resultado do comando `git merge-base --fork-point <upstream> <ramo>` (consulte linkgit:git-merge-base[1]).  Caso o 'fork_point' termine vazio, o `<upstream>` será utilizado como substituto."

#. type: Plain text
#: en/git-rebase.txt:449
#, fuzzy, priority:100
#| msgid "If <upstream> is given on the command line, then the default is `--no-fork-point`, otherwise the default is `--fork-point`. See also `rebase.forkpoint` in linkgit:git-config[1]."
msgid "If `<upstream>` is given on the command line, then the default is `--no-fork-point`, otherwise the default is `--fork-point`. See also `rebase.forkpoint` in linkgit:git-config[1]."
msgstr "Caso a <upstream> seja utilizada na linha de comando, a predefinição será `--no-fork-point`, caso contrário, a predefinição será `--fork-point`. Consulte também `rebase.forkpoint` em linkgit:git-config[1]."

#. type: Plain text
#: en/git-rebase.txt:453
#, fuzzy, priority:100
#| msgid "If your branch was based on <upstream> but <upstream> was rewound and your branch contains commits which were dropped, this option can be used with `--keep-base` in order to drop those commits from your branch."
msgid "If your branch was based on `<upstream>` but `<upstream>` was rewound and your branch contains commits which were dropped, this option can be used with `--keep-base` in order to drop those commits from your branch."
msgstr "Caso o seu ramo teve como base no <upstream>, porém <upstream> foi retrocedido e o seu ramo contém commits que foram eliminados, esta opção pode ser utilizada com a opção `--keep-base` para eliminar estes commits do seu ramo."

#. type: Plain text
#: en/git-rebase.txt:460
#, priority:100
msgid "Ignore whitespace differences when trying to reconcile differences. Currently, each backend implements an approximation of this behavior:"
msgstr "Ignore as diferenças dos espaços ao tentar reconciliar as diferenças. Atualmente, cada estrutura implementa uma aproximação deste comportamento:"

#. type: Labeled list
#: en/git-rebase.txt:461
#, no-wrap, priority:100
msgid "apply backend"
msgstr ""

#. type: Plain text
#: en/git-rebase.txt:467
#, fuzzy, priority:100
#| msgid "apply backend: When applying a patch, ignore changes in whitespace in context lines. Unfortunately, this means that if the \"old\" lines being replaced by the patch differ only in whitespace from the existing file, you will get a merge conflict instead of a successful patch application."
msgid "When applying a patch, ignore changes in whitespace in context lines. Unfortunately, this means that if the \"old\" lines being replaced by the patch differ only in whitespace from the existing file, you will get a merge conflict instead of a successful patch application."
msgstr "aplica o backend: Ao aplicar um patch, ignore as alterações no espaço das linhas do contexto. Infelizmente, isto significa que caso as linhas \"antigas\" sendo substituídas pelo patch difiram apenas pelo espaço do arquivo existente haverá um conflito de integração em vez da aplicação bem sucedida do patch."

#. type: Labeled list
#: en/git-rebase.txt:468
#, fuzzy, no-wrap, priority:100
#| msgid "--merge-base"
msgid "merge backend"
msgstr "--merge-base"

#. type: Plain text
#: en/git-rebase.txt:473
#, fuzzy, priority:100
#| msgid "merge backend: Treat lines with only whitespace changes as unchanged when merging. Unfortunately, this means that any patch hunks that were intended to modify whitespace and nothing else will be dropped, even if the other side had no changes that conflicted."
msgid "Treat lines with only whitespace changes as unchanged when merging.  Unfortunately, this means that any patch hunks that were intended to modify whitespace and nothing else will be dropped, even if the other side had no changes that conflicted."
msgstr "mesclagem do backend: Trate apenas as linhas com alterações no espaço como inalteradas durante a mesclagem. Infelizmente, isto significa que quaisquer pedaços do patch que se destinavam a alterar o espaço, nada mais será descartado, mesmo que o outro lado não tivesse alterações conflitantes."

#. type: Plain text
#: en/git-rebase.txt:478
#, fuzzy, priority:100
#| msgid "This flag is passed to the 'git apply' program (see linkgit:git-apply[1]) that applies the patch.  Implies --apply."
msgid "This flag is passed to the `git apply` program (see linkgit:git-apply[1]) that applies the patch.  Implies `--apply`."
msgstr "Esta opção é repassada para o comando 'git apply' que aplica o patch (consulte  linkgit:git-apply[1]).  Implica no uso da opção --apply."

#. type: Plain text
#: en/git-rebase.txt:485
#, priority:100
msgid "Instead of using the current time as the committer date, use the author date of the commit being rebased as the committer date. This option implies `--force-rebase`."
msgstr "Em vez de usar a hora atual como a data de quem fez o commit, utilize a data do autor que fez o rebase do commit como a data do commit. Esta opção implica no uso de `--force-rebase`."

#. type: Labeled list
#: en/git-rebase.txt:487
#, ignore-same, no-wrap, priority:100
msgid "--reset-author-date"
msgstr "--reset-author-date"

#. type: Plain text
#: en/git-rebase.txt:491
#, priority:100
msgid "Instead of using the author date of the original commit, use the current time as the\tauthor date of the rebased commit.  This option implies `--force-rebase`."
msgstr "Em vez de usar a data de autor do commit original, use a hora atual como a data de autor que fez o rebase do commit.  Esta opção implica no uso da opção `--force-rebase'."

#. type: Plain text
#: en/git-rebase.txt:498
#, priority:100
msgid "Add a `Signed-off-by` trailer to all the rebased commits. Note that if `--interactive` is given then only commits marked to be picked, edited or reworded will have the trailer added."
msgstr "Adicione uma resposta `Assinado-por` em todos os commits que tiveram a sua fundação reconstruída. Observe que caso a opção `--interactive` seja utilizada, apenas os commit marcados para serem selecionados, editados ou reformulados terão um caracteres de resposta adicionado."

#. type: Plain text
#: en/git-rebase.txt:506
#, priority:100
msgid "Make a list of the commits which are about to be rebased.  Let the user edit that list before rebasing.  This mode can also be used to split commits (see SPLITTING COMMITS below)."
msgstr "Faça uma lista dos commits que estão prestes a serem reconstruídos.  Deixe que o usuário edite esta lista antes da reconstrução.  Este modo também pode ser utilizado para dividir os commits (consulte 'DIVIDINDO OS COMMITS' abaixo)."

#. type: Plain text
#: en/git-rebase.txt:510
#, priority:100
msgid "The commit list format can be changed by setting the configuration option rebase.instructionFormat.  A customized instruction format will automatically have the long commit hash prepended to the format."
msgstr "O formato da lista dos commits pode ser alterado definindo a opção de configuração `rebase.instructionFormat`.  Um formato de instrução personalizado terá automaticamente o hash longo do commit anexado ao formato."

#. type: Labeled list
#: en/git-rebase.txt:514
#, no-wrap, priority:100
msgid "--rebase-merges[=(rebase-cousins|no-rebase-cousins)]"
msgstr "--rebase-merges[=(rebase-cousins|no-rebase-cousins)]"

#. type: Plain text
#: en/git-rebase.txt:522
#, priority:100
msgid "By default, a rebase will simply drop merge commits from the todo list, and put the rebased commits into a single, linear branch.  With `--rebase-merges`, the rebase will instead try to preserve the branching structure within the commits that are to be rebased, by recreating the merge commits. Any resolved merge conflicts or manual amendments in these merge commits will have to be resolved/re-applied manually."
msgstr "É predefinido que uma reconstrução simplesmente remova os commits mesclados da lista de tarefas e as coloca numa única ramificação linear.  Com a opção `--rebase-merges`, a reconstrução tentará preservar a estrutura da ramificação dentro dos commits que serão reexaminadas, recriando a mesclagem dos commits. Quaisquer conflitos na mesclagem que forem resolvidos ou nas alterações manuais destes commits mesclados terão que ser resolvidos/reaplicados manualmente."

#. type: Plain text
#: en/git-rebase.txt:529
#, priority:100
msgid "By default, or when `no-rebase-cousins` was specified, commits which do not have `<upstream>` as direct ancestor will keep their original branch point, i.e. commits that would be excluded by linkgit:git-log[1]'s `--ancestry-path` option will keep their original ancestry by default. If the `rebase-cousins` mode is turned on, such commits are instead rebased onto `<upstream>` (or `<onto>`, if specified)."
msgstr "É predefinido que ou quando `no-rebase-cousins` seja utilizado, os commits que não possuam `<upstream>` como ancestral direto, manterão o seu ponto do ramo original, ou seja, os commits que seriam excluídos pela opção linkgit:git-log[1] `--ancestry-path`, por predefinição manterá a sua ancestralidade original. Caso o modo `rebase-cousins` esteja ativo, estes commits serão reconstruídos para a `<upstream>` (ou `<onto>`, caso seja utilizado)."

#. type: Plain text
#: en/git-rebase.txt:533
#, ignore-ellipsis, priority:100
msgid "It is currently only possible to recreate the merge commits using the `ort` merge strategy; different merge strategies can be used only via explicit `exec git merge -s <strategy> [...]` commands."
msgstr "Atualmente, só é possível recriar a mesclagem dos commits utilizando a estratégia de mesclagem `ort`; diferentes estratégias de mesclagem podem ser utilizadas somente através dos comandos explícitos como `exec git merge -s <strategy> [...]`."

#. type: Plain text
#: en/git-rebase.txt:535
#, priority:100
msgid "See also REBASING MERGES and INCOMPATIBLE OPTIONS below."
msgstr "Consulte também 'RECONSTRUINDO AS MESCLAGENS' e 'OPÇÕES INCOMPATÍVEIS' abaixo."

#. type: Labeled list
#: en/git-rebase.txt:536
#, no-wrap, priority:100
msgid "-x <cmd>"
msgstr "-x <cmd>"

#. type: Labeled list
#: en/git-rebase.txt:537
#, no-wrap, priority:100
msgid "--exec <cmd>"
msgstr "--exec <cmd>"

#. type: Plain text
#: en/git-rebase.txt:542
#, fuzzy, priority:100
#| msgid "Append \"exec <cmd>\" after each line creating a commit in the final history. <cmd> will be interpreted as one or more shell commands. Any command that fails will interrupt the rebase, with exit code 1."
msgid "Append \"exec <cmd>\" after each line creating a commit in the final history. `<cmd>` will be interpreted as one or more shell commands. Any command that fails will interrupt the rebase, with exit code 1."
msgstr "Anexe \"exec <cmd>\" após cada linha, criando um commit no final do histórico. O `<cmd>` será interpretado como um ou mais comandos do shell. Qualquer comando que falhar interromperá a reconstrução da fundação, com o código de encerramento igual a 1."

#. type: Plain text
#: en/git-rebase.txt:545
#, priority:100
msgid "You may execute several commands by either using one instance of `--exec` with several commands:"
msgstr "É possível executar vários comandos utilizando uma instância da opção `--exec` com vários comandos:"

#. type: Plain text
#: en/git-rebase.txt:547
#, ignore-ellipsis, no-wrap, priority:100
msgid "\tgit rebase -i --exec \"cmd1 && cmd2 && ...\"\n"
msgstr "\tgit rebase -i --exec \"cmd1 && cmd2 && ...\"\n"

#. type: Plain text
#: en/git-rebase.txt:549
#, priority:100
msgid "or by giving more than one `--exec`:"
msgstr "ou utilizando mais de um `--exec`:"

#. type: Plain text
#: en/git-rebase.txt:551
#, ignore-ellipsis, no-wrap, priority:100
msgid "\tgit rebase -i --exec \"cmd1\" --exec \"cmd2\" --exec ...\n"
msgstr "\tgit rebase -i --exec \"cmd1\" --exec \"cmd2\" --exec ...\n"

#. type: Plain text
#: en/git-rebase.txt:555
#, fuzzy, priority:100
#| msgid "If `--autosquash` is used, \"exec\" lines will not be appended for the intermediate commits, and will only appear at the end of each squash/fixup series."
msgid "If `--autosquash` is used, `exec` lines will not be appended for the intermediate commits, and will only appear at the end of each squash/fixup series."
msgstr "Caso a opção `--autosquash` seja utilizado, as linhas \"exec\" não serão anexadas aos commits intermediários e aparecerão apenas no final de cada série de compressão/correção."

#. type: Plain text
#: en/git-rebase.txt:558
#, priority:100
msgid "This uses the `--interactive` machinery internally, but it can be run without an explicit `--interactive`."
msgstr "Utiliza o mecanismo `--interactive` internamente, porém pode ser executado sem a opção `--interactive` de forma explicita."

#. type: Plain text
#: en/git-rebase.txt:568
#, fuzzy, priority:100
#| msgid "Rebase all commits reachable from <branch>, instead of limiting them with an <upstream>.  This allows you to rebase the root commit(s) on a branch.  When used with --onto, it will skip changes already contained in <newbase> (instead of <upstream>) whereas without --onto it will operate on every change."
msgid "Rebase all commits reachable from `<branch>`, instead of limiting them with an `<upstream>`.  This allows you to rebase the root commit(s) on a branch.  When used with `--onto`, it will skip changes already contained in `<newbase>` (instead of `<upstream>`) whereas without `--onto` it will operate on every change."
msgstr "Reconstrói todos os commits acessíveis a partir do <ramo>, em vez de limitá-los com a <upstream>.  Permite a reestruturação dos commit da raiz em um ramo.  Quando utilizado com a opção `--onto`, será ignorado as alterações já contidas em <newbase> (em vez de <upstream>) enquanto que sem a opção `--onto` a operação ocorrerá em todas as alterações."

#. type: Labeled list
#: en/git-rebase.txt:571
#, ignore-same, no-wrap, priority:100
msgid "--autosquash"
msgstr "--autosquash"

#. type: Labeled list
#: en/git-rebase.txt:572
#, ignore-same, no-wrap, priority:100
msgid "--no-autosquash"
msgstr "--no-autosquash"

#. type: Plain text
#: en/git-rebase.txt:584
#, ignore-ellipsis, priority:100
msgid "When the commit log message begins with \"squash! ...\" or \"fixup! ...\" or \"amend! ...\", and there is already a commit in the todo list that matches the same `...`, automatically modify the todo list of `rebase -i`, so that the commit marked for squashing comes right after the commit to be modified, and change the action of the moved commit from `pick` to `squash` or `fixup` or `fixup -C` respectively. A commit matches the `...` if the commit subject matches, or if the `...` refers to the commit's hash. As a fall-back, partial matches of the commit subject work, too. The recommended way to create fixup/amend/squash commits is by using the `--fixup`, `--fixup=amend:` or `--fixup=reword:` and `--squash` options respectively of linkgit:git-commit[1]."
msgstr "Quando a mensagem do registro log do commit começar com \"squash! ...\" ou \"fixup! ...\", já existe um commit na lista de tarefas que coincidem com o mesmo `...`, altera a lista de tarefas automaticamente do `rebase -i` para que o commit marcado para ser comprimido venha logo após o commit que será modificado e altere a ação do commit movido de `pick` para `squash`, `fixup` ou `fixup -C` respectivamente. Um commit coincide com `...` caso haja a coincidência do assunto do commit ou se o `...` se referir ao hash do commit. Como alternativa, as coincidências que forem parciais ao assunto do commit, também funcionam. A maneira recomendada para se criar os commits para fixup/amend/squash é utilizando as opções `--fixup`, `--fixup=amend:` ou `--fixup=reword:` e `--squash` respectivamente do comando linkgit:git-commit[1]."

#. type: Plain text
#: en/git-rebase.txt:588
#, priority:100
msgid "If the `--autosquash` option is enabled by default using the configuration variable `rebase.autoSquash`, this option can be used to override and disable this setting."
msgstr "Caso a opção `--autosquash` esteja predefinitivamente ativada utilizando a variável de configuração `rebase.autoSquash`, esta opção poderá ser utilizada para substituir e desativar esta configuração."

#. type: Labeled list
#: en/git-rebase.txt:591 en/merge-options.txt:191
#, ignore-same, no-wrap, priority:240
msgid "--autostash"
msgstr "--autostash"

#. type: Labeled list
#: en/git-rebase.txt:592 en/merge-options.txt:192
#, ignore-same, no-wrap, priority:240
msgid "--no-autostash"
msgstr "--no-autostash"

#. type: Plain text
#: en/git-rebase.txt:598
#, priority:100
msgid "Automatically create a temporary stash entry before the operation begins, and apply it after the operation ends.  This means that you can run rebase on a dirty worktree.  However, use with care: the final stash application after a successful rebase might result in non-trivial conflicts."
msgstr "Crie automaticamente uma entrada \"stash\" temporária antes do início da operação e as aplique ao finalizar.  Isso significa que é possível executar uma reconstrução (rebase) numa árvore de trabalho suja.  No entanto, use com cuidado: a aplicação \"stash\" final após uma nova reconstrução bem-sucedida pode acabar em conflitos não triviais."

#. type: Labeled list
#: en/git-rebase.txt:599
#, ignore-same, no-wrap, priority:100
msgid "--reschedule-failed-exec"
msgstr "--reschedule-failed-exec"

#. type: Labeled list
#: en/git-rebase.txt:600
#, ignore-same, no-wrap, priority:100
msgid "--no-reschedule-failed-exec"
msgstr "--no-reschedule-failed-exec"

#. type: Plain text
#: en/git-rebase.txt:603
#, priority:100
msgid "Automatically reschedule `exec` commands that failed. This only makes sense in interactive mode (or when an `--exec` option was provided)."
msgstr "Reagende automaticamente os comandos `exec` que falharam. Isso só faz sentido no modo interativo (ou quando uma opção `--exec` for utilizada)."

#. type: Plain text
#: en/git-rebase.txt:611
#, priority:100
msgid "Even though this option applies once a rebase is started, it's set for the whole rebase at the start based on either the `rebase.rescheduleFailedExec` configuration (see linkgit:git-config[1] or \"CONFIGURATION\" below) or whether this option is provided. Otherwise an explicit `--no-reschedule-failed-exec` at the start would be overridden by the presence of `rebase.rescheduleFailedExec=true` configuration."
msgstr "Ainda que esta opção se aplique quando uma reconstrução for iniciada, é definido para que toda a reconstrução no início, tenha como base a configuração `rebase.rescheduleFailedExec` (consulte linkgit:git-config[1] ou a \"CONFIGURAÇÃO\" abaixo) ou se esta opção é oferecida. Caso contrário, uma opção explícita `--no-reschedule-failed-exec` no início no início seria sobrescrito pela presença da configuração `rebase.rescheduleFailedExec=true`."

#. type: Plain text
#: en/git-rebase.txt:612 en/git-rebase.txt:645
#, ignore-same, no-wrap, priority:100
msgid "--update-refs"
msgstr "--update-refs"

#. type: Labeled list
#: en/git-rebase.txt:613
#, ignore-same, no-wrap, priority:100
msgid "--no-update-refs"
msgstr "--no-update-refs"

#. type: Plain text
#: en/git-rebase.txt:617
#, priority:100
msgid "Automatically force-update any branches that point to commits that are being rebased. Any branches that are checked out in a worktree are not updated in this way."
msgstr ""

#. type: Plain text
#: en/git-rebase.txt:620
#, fuzzy, priority:100
#| msgid "If the `--autosquash` option is enabled by default using the configuration variable `rebase.autoSquash`, this option can be used to override and disable this setting."
msgid "If the configuration variable `rebase.updateRefs` is set, then this option can be used to override and disable this setting."
msgstr "Caso a opção `--autosquash` esteja predefinitivamente ativada utilizando a variável de configuração `rebase.autoSquash`, esta opção poderá ser utilizada para substituir e desativar esta configuração."

#. type: Title -
#: en/git-rebase.txt:622
#, no-wrap, priority:100
msgid "INCOMPATIBLE OPTIONS"
msgstr "OPÇÕES INCOMPATÍVEIS"

#. type: Plain text
#: en/git-rebase.txt:625
#, priority:100
msgid "The following options:"
msgstr "As seguintes opções:"

#. type: Plain text
#: en/git-rebase.txt:628
#, ignore-same, priority:100
msgid "--whitespace"
msgstr "--whitespace"

#. type: Plain text
#: en/git-rebase.txt:631
#, priority:100
msgid "are incompatible with the following options:"
msgstr "são incompatíveis com as seguintes opções:"

#. type: Plain text
#: en/git-rebase.txt:634
#, ignore-same, priority:100
msgid "--strategy"
msgstr "--strategy"

#. type: Plain text
#: en/git-rebase.txt:635
#, ignore-same, priority:100
msgid "--strategy-option"
msgstr "--strategy-option"

#. type: Plain text
#: en/git-rebase.txt:637
#, ignore-same, priority:100
msgid "--[no-]autosquash"
msgstr "--[no-]autosquash"

#. type: Labeled list
#: en/git-rebase.txt:638 en/git-svn.txt:680
#, ignore-same, no-wrap, priority:100
msgid "--rebase-merges"
msgstr "--rebase-merges"

#. type: Plain text
#: en/git-rebase.txt:640
#, ignore-same, priority:100
msgid "--exec"
msgstr "--exec"

#. type: Plain text
#: en/git-rebase.txt:642
#, priority:100
msgid "--empty="
msgstr "--empty="

#. type: Plain text
#: en/git-rebase.txt:646
#, priority:100
msgid "--root when used in combination with --onto"
msgstr "--root quando utilizado em conjunto com --onto"

#. type: Plain text
#: en/git-rebase.txt:648
#, priority:100
msgid "In addition, the following pairs of options are incompatible:"
msgstr "Além disso, os seguintes pares de opções são incompatíveis:"

#. type: Plain text
#: en/git-rebase.txt:650
#, priority:100
msgid "--keep-base and --onto"
msgstr "--keep-base e --onto"

#. type: Plain text
#: en/git-rebase.txt:651
#, priority:100
msgid "--keep-base and --root"
msgstr "--keep-base e --root"

#. type: Plain text
#: en/git-rebase.txt:652
#, priority:100
msgid "--fork-point and --root"
msgstr "--fork-point e --root"

#. type: Title -
#: en/git-rebase.txt:654
#, no-wrap, priority:100
msgid "BEHAVIORAL DIFFERENCES"
msgstr "DIFERENÇAS COMPORTAMENTAIS"

#. type: Plain text
#: en/git-rebase.txt:663
#, fuzzy, priority:100
#| msgid "git rebase has two primary backends: apply and merge.  (The apply backend used to be known as the 'am' backend, but the name led to confusion as it looks like a verb instead of a noun.  Also, the merge backend used to be known as the interactive backend, but it is now used for non-interactive cases as well.  Both were renamed based on lower-level functionality that underpinned each.) There are some subtle differences in how these two backends behave:"
msgid "`git rebase` has two primary backends: 'apply' and 'merge'.  (The 'apply' backend used to be known as the 'am' backend, but the name led to confusion as it looks like a verb instead of a noun.  Also, the 'merge' backend used to be known as the interactive backend, but it is now used for non-interactive cases as well.  Both were renamed based on lower-level functionality that underpinned each.) There are some subtle differences in how these two backends behave:"
msgstr "O git rebase possui duas estruturas primárias: `apply` e `merge`.  (A aplicação da estrutura era conhecido como 'am', porém o nome causava confusão já que parecia um verbo em vez de um substantivo.  Além disso, a estrutura `merge` era informada como uma estrutura interativa, porém agora também é usado para casos não interativos.  Ambos foram renomeados com base na funcionalidade de baixo nível que sustentava cada um.) Há algumas diferenças sutis em como estes dois processos internos se comportam:"

#. type: Title ~
#: en/git-rebase.txt:665
#, no-wrap, priority:100
msgid "Empty commits"
msgstr "Os commits vazios"

#. type: Plain text
#: en/git-rebase.txt:671
#, fuzzy, priority:100
#| msgid "The apply backend unfortunately drops intentionally empty commits, i.e.  commits that started empty, though these are rare in practice.  It also drops commits that become empty and has no option for controlling this behavior."
msgid "The 'apply' backend unfortunately drops intentionally empty commits, i.e.  commits that started empty, though these are rare in practice.  It also drops commits that become empty and has no option for controlling this behavior."
msgstr "A estrutura aplicada infelizmente descarta os commits vazios de forma intencional, ou seja, os commits que começaram vazios, contudo na prática é algo raro.  Também descarta os commits que se tornam vazios e não há uma opção para controlar este comportamento."

#. type: Plain text
#: en/git-rebase.txt:675
#, fuzzy, priority:100
#| msgid "The merge backend keeps intentionally empty commits by default (though with -i they are marked as empty in the todo list editor, or they can be dropped automatically with --no-keep-empty)."
msgid "The 'merge' backend keeps intentionally empty commits by default (though with `-i` they are marked as empty in the todo list editor, or they can be dropped automatically with `--no-keep-empty`)."
msgstr "É predefinido que a estrutura da mesclagem mantenha os commits intencionalmente vazios (com `-i` são marcados como vazio no editor da lista de tarefas ou podem ser descartados automaticamente com a opção `--no-keep-empty`)."

#. type: Plain text
#: en/git-rebase.txt:681
#, fuzzy, priority:100
#| msgid "Similar to the apply backend, by default the merge backend drops commits that become empty unless -i/--interactive is specified (in which case it stops and asks the user what to do).  The merge backend also has an --empty={drop,keep,ask} option for changing the behavior of handling commits that become empty."
msgid "Similar to the apply backend, by default the merge backend drops commits that become empty unless `-i`/`--interactive` is specified (in which case it stops and asks the user what to do).  The merge backend also has an `--empty={drop,keep,ask}` option for changing the behavior of handling commits that become empty."
msgstr "Semelhante à estrutura aplicada, é predefinido que a estrutura da mesclagem derrube os commits que se tornaram vazios a menos que as opções `-i` ou `--interactive` sejam utilizadas (nesse caso o comando para e pergunta ao usuário o que fazer).  A estrutura da mesclagem também possui uma opção --empty={drop,keep,ask} para alterar o comportamento da manipulação dos commits que ficam vazios."

#. type: Title ~
#: en/git-rebase.txt:683
#, no-wrap, priority:100
msgid "Directory rename detection"
msgstr "Detecção da renomeação do diretório"

#. type: Plain text
#: en/git-rebase.txt:693
#, fuzzy, priority:100
#| msgid "Due to the lack of accurate tree information (arising from constructing fake ancestors with the limited information available in patches), directory rename detection is disabled in the apply backend.  Disabled directory rename detection means that if one side of history renames a directory and the other adds new files to the old directory, then the new files will be left behind in the old directory without any warning at the time of rebasing that you may want to move these files into the new directory."
msgid "Due to the lack of accurate tree information (arising from constructing fake ancestors with the limited information available in patches), directory rename detection is disabled in the 'apply' backend.  Disabled directory rename detection means that if one side of history renames a directory and the other adds new files to the old directory, then the new files will be left behind in the old directory without any warning at the time of rebasing that you may want to move these files into the new directory."
msgstr "Devido à falta de informações precisas sobre as árvores (que surge das construções dos ancestrais falsos com informações limitadas disponíveis nos patches), a detecção da renomeação do diretório é desativado na estrutura da aplicação.  A desativação da detecção da renomeação do diretório, significa que se um lado do histórico renomear um diretório e o outro adicionar novos arquivos no diretório antigo, então os novos arquivos serão deixados para trás no diretório antigo sem qualquer aviso durante a reconstrução onde você talvez queira mover estes arquivos para o novo diretório."

#. type: Plain text
#: en/git-rebase.txt:696
#, fuzzy, priority:100
#| msgid "Directory rename detection works with the merge backend to provide you warnings in such cases."
msgid "Directory rename detection works with the 'merge' backend to provide you warnings in such cases."
msgstr "A detecção da renomeação do diretório funciona com a estrutura da mesclagem, neste caso, fornecendo informações para você."

#. type: Title ~
#: en/git-rebase.txt:698
#, no-wrap, priority:100
msgid "Context"
msgstr "Contexto"

#. type: Plain text
#: en/git-rebase.txt:714
#, fuzzy, priority:100
#| msgid "The apply backend works by creating a sequence of patches (by calling `format-patch` internally), and then applying the patches in sequence (calling `am` internally).  Patches are composed of multiple hunks, each with line numbers, a context region, and the actual changes.  The line numbers have to be taken with some fuzz, since the other side will likely have inserted or deleted lines earlier in the file.  The context region is meant to help find how to adjust the line numbers in order to apply the changes to the right lines.  However, if multiple areas of the code have the same surrounding lines of context, the wrong one can be picked.  There are real-world cases where this has caused commits to be reapplied incorrectly with no conflicts reported.  Setting diff.context to a larger value may prevent such types of problems, but increases the chance of spurious conflicts (since it will require more lines of matching context to apply)."
msgid "The 'apply' backend works by creating a sequence of patches (by calling `format-patch` internally), and then applying the patches in sequence (calling `am` internally).  Patches are composed of multiple hunks, each with line numbers, a context region, and the actual changes.  The line numbers have to be taken with some fuzz, since the other side will likely have inserted or deleted lines earlier in the file.  The context region is meant to help find how to adjust the line numbers in order to apply the changes to the right lines.  However, if multiple areas of the code have the same surrounding lines of context, the wrong one can be picked.  There are real-world cases where this has caused commits to be reapplied incorrectly with no conflicts reported.  Setting `diff.context` to a larger value may prevent such types of problems, but increases the chance of spurious conflicts (since it will require more lines of matching context to apply)."
msgstr "A aplicação da estrutura funciona durante a criação de uma sequencia de patches (chamando o `format-patch` internalmente), então os patches são aplicados em sequência (invocando o `am` internamente).  Os patches são compostos de vários pedaços, cada um com linhas numeradas, o contexto da região e as alterações atuais.  As linhas numeradas devem ser tomadas com alguma imprecisão já que antes o outro lado provavelmente terá inserido ou terá excluído as linhas no arquivo.  O contexto da região destina-se no auxílio para encontrar como ajustar as linhas numeradas na ordem para aplicar as alterações nas linhas corretas.  No entanto, caso ao redor das várias áreas do código tenham as mesmas linhas de contexto, um código errado pode ser selecionado.  Existem casos no mundo real onde isso fez com que os commits fossem reaplicados de forma incorreta e nenhum conflito foi relatado.  Definindo o `diff.context` para um valor maior, isso pode impedir que estes tipos de problemas ocorram, porém aumenta a chance de conflitos espúrios (uma vez que exigirá mais linhas que coincidam com o contexto para serem aplicados)."

#. type: Plain text
#: en/git-rebase.txt:717
#, fuzzy, priority:100
#| msgid "The merge backend works with a full copy of each relevant file, insulating it from these types of problems."
msgid "The 'merge' backend works with a full copy of each relevant file, insulating it from these types of problems."
msgstr "A estrutura da mesclagem trabalha com a cópia completa de casa arquivo relevante isolando-os destes tipos de problemas."

#. type: Title ~
#: en/git-rebase.txt:719
#, no-wrap, priority:100
msgid "Labelling of conflicts markers"
msgstr "A rotulagem dos marcadores de conflitos"

#. type: Plain text
#: en/git-rebase.txt:731
#, fuzzy, priority:100
#| msgid "When there are content conflicts, the merge machinery tries to annotate each side's conflict markers with the commits where the content came from.  Since the apply backend drops the original information about the rebased commits and their parents (and instead generates new fake commits based off limited information in the generated patches), those commits cannot be identified; instead it has to fall back to a commit summary.  Also, when merge.conflictStyle is set to diff3 or zdiff3, the apply backend will use \"constructed merge base\" to label the content from the merge base, and thus provide no information about the merge base commit whatsoever."
msgid "When there are content conflicts, the merge machinery tries to annotate each side's conflict markers with the commits where the content came from.  Since the 'apply' backend drops the original information about the rebased commits and their parents (and instead generates new fake commits based off limited information in the generated patches), those commits cannot be identified; instead it has to fall back to a commit summary.  Also, when `merge.conflictStyle` is set to `diff3` or `zdiff3`, the 'apply' backend will use \"constructed merge base\" to label the content from the merge base, and thus provide no information about the merge base commit whatsoever."
msgstr "Quando há conteúdos conflitantes o mecanismo da mesclagem tenta anotar os marcadores de conflito de cada lado com os commits de onde o conteúdo veio.  Como a estrutura descarta o original, as informações sobre os commits reconstruídos e seus pais (em vez disso, gera novos commits falsos com base nas informações limitadas no patches que foram gerados), estes commits não podem ser identificados; em vez disso tem que retornar para um resumo do commit.  Além disso, quando `merge.conflictStyle` é definido para 'diff3' ou 'zdiff3', a estrutura aplicada utilizará uma \"mesclagem reconstruída da base\" para rotular o conteúdo da base mesclada e portanto, não fornece qualquer informações sobre o commit da base mesclada."

#. type: Plain text
#: en/git-rebase.txt:734
#, fuzzy, priority:100
#| msgid "The merge backend works with the full commits on both sides of history and thus has no such limitations."
msgid "The 'merge' backend works with the full commits on both sides of history and thus has no such limitations."
msgstr "A estrutura da mesclagem funciona com commits completos nos dois lados da história e portanto não possuem tais limitações."

#. type: Title ~
#: en/git-rebase.txt:736
#, no-wrap, priority:100
msgid "Hooks"
msgstr "Ganchos"

#. type: Plain text
#: en/git-rebase.txt:750
#, fuzzy, priority:100
#| msgid "The apply backend has not traditionally called the post-commit hook, while the merge backend has.  Both have called the post-checkout hook, though the merge backend has squelched its output.  Further, both backends only call the post-checkout hook with the starting point commit of the rebase, not the intermediate commits nor the final commit.  In each case, the calling of these hooks was by accident of implementation rather than by design (both backends were originally implemented as shell scripts and happened to invoke other commands like 'git checkout' or 'git commit' that would call the hooks).  Both backends should have the same behavior, though it is not entirely clear which, if any, is correct.  We will likely make rebase stop calling either of these hooks in the future."
msgid "The 'apply' backend has not traditionally called the post-commit hook, while the 'merge' backend has.  Both have called the post-checkout hook, though the 'merge' backend has squelched its output.  Further, both backends only call the post-checkout hook with the starting point commit of the rebase, not the intermediate commits nor the final commit.  In each case, the calling of these hooks was by accident of implementation rather than by design (both backends were originally implemented as shell scripts and happened to invoke other commands like `git checkout` or `git commit` that would call the hooks).  Both backends should have the same behavior, though it is not entirely clear which, if any, is correct.  We will likely make rebase stop calling either of these hooks in the future."
msgstr "A estrutura da aplicação não chama tradicionalmente o gancho pós-commit, enquanto a estrutura da mesclagem chama.  Ambos chamaram o gancho pós-averiguação, embora a estrutura da mesclagem reduza a sua saída.  Além disso, ambas as estruturas chamam apenas o gancho pós-averiguação com o ponto de partida para fazer o commit da reconstrução da fundação (rebase), nem o commit intermediário, nem o commit final.  Em cada caso, o chamado desses ganchos foi por acidente de implementação em vez de design (os dois processos internos eram originalmente implementados como scripts shell e passaram a chamar outros comandos como o 'git checkout' ou o 'git commit' que seriam chamados de ganchos).  Ambos os processos internos devem ter o mesmo comportamento, embora não seja totalmente claro qual (caso existam), está correto.  Provavelmente faremos o rebase parar chamando um destes ganchos no futuro."

#. type: Title ~
#: en/git-rebase.txt:752
#, no-wrap, priority:100
msgid "Interruptability"
msgstr "Interruptabilidade"

#. type: Plain text
#: en/git-rebase.txt:761
#, fuzzy, priority:100
#| msgid "The apply backend has safety problems with an ill-timed interrupt; if the user presses Ctrl-C at the wrong time to try to abort the rebase, the rebase can enter a state where it cannot be aborted with a subsequent `git rebase --abort`.  The merge backend does not appear to suffer from the same shortcoming.  (See https://lore.kernel.org/git/20200207132152.GC2868@szeder.dev/ for details.)"
msgid "The 'apply' backend has safety problems with an ill-timed interrupt; if the user presses Ctrl-C at the wrong time to try to abort the rebase, the rebase can enter a state where it cannot be aborted with a subsequent `git rebase --abort`.  The 'merge' backend does not appear to suffer from the same shortcoming.  (See https://lore.kernel.org/git/20200207132152.GC2868@szeder.dev/ for details.)"
msgstr "A aplicação da estrutura possui problemas de segurança relacionada com interrupção de tempo; caso o usuário pressione Ctrl+C no momento errado ao tentar interromper o processo rebase, o processo então pode entrar em uma condição ele não pode ser parado posteriormente com um comando `git rebase --abort`.  A estrutura da mesclagem não parece sofrer da mesma deficiência.  (Consulte https://lore.kernel.org/git/20200207132152.GC2868@szeder.dev/ para obter mais detalhes.)"

#. type: Title ~
#: en/git-rebase.txt:763
#, no-wrap, priority:100
msgid "Commit Rewording"
msgstr "Reescrevendo os Commits"

#. type: Plain text
#: en/git-rebase.txt:771
#, fuzzy, priority:100
#| msgid "When a conflict occurs while rebasing, rebase stops and asks the user to resolve.  Since the user may need to make notable changes while resolving conflicts, after conflicts are resolved and the user has run `git rebase --continue`, the rebase should open an editor and ask the user to update the commit message.  The merge backend does this, while the apply backend blindly applies the original commit message."
msgid "When a conflict occurs while rebasing, rebase stops and asks the user to resolve.  Since the user may need to make notable changes while resolving conflicts, after conflicts are resolved and the user has run `git rebase --continue`, the rebase should open an editor and ask the user to update the commit message.  The 'merge' backend does this, while the 'apply' backend blindly applies the original commit message."
msgstr "Quando ocorre um conflito durante o processo 'rebase', o processo para e pergunta ao usuário para resolver o problema.  Como o usuário pode precisar fazer muitas alterações enquanto resolve os conflitos, depois que os conflitos forem resolvidos e o usuário tenha executado o comando `git rebase --continue`, o 'rebase' deverá abrir o editor e perguntar ao usuário para atualizar a mensagem do commit.  A estrutura da mesclagem faz isso, enquanto a estrutura aplica cegamente a mensagem do commit original."

#. type: Title ~
#: en/git-rebase.txt:773
#, no-wrap, priority:100
msgid "Miscellaneous differences"
msgstr "Diferenças diversas"

#. type: Plain text
#: en/git-rebase.txt:778
#, priority:100
msgid "There are a few more behavioral differences that most folks would probably consider inconsequential but which are mentioned for completeness:"
msgstr "Existem mais algumas diferenças comportamentais que a maioria das pessoas considerariam fazer de forma inconsequente, porém são mencionadas por questões de integridade:"

#. type: Plain text
#: en/git-rebase.txt:782
#, priority:100
msgid "Reflog: The two backends will use different wording when describing the changes made in the reflog, though both will make use of the word \"rebase\"."
msgstr "Reflog: As duas estruturas que utilizarão palavras diferentes durante a descrição das alterações feitas no reflog, embora ambos façam a utilização da palavra \"rebase\"."

#. type: Plain text
#: en/git-rebase.txt:788
#, ignore-ellipsis, priority:100
msgid "Progress, informational, and error messages: The two backends provide slightly different progress and informational messages.  Also, the apply backend writes error messages (such as \"Your files would be overwritten...\") to stdout, while the merge backend writes them to stderr."
msgstr "As mensagens de progresso, informacionais e de erro: As duas estruturas fornecem um progresso ligeiramente diferente das mensagens de informação.  Além disso, a estrutura aplicada grava uma mensagens de erro (como \"Os seus arquivos serão substituídos...\") para o stdout, enquanto a mesclagem da estrutura escrevem eles no stderr."

#. type: Plain text
#: en/git-rebase.txt:791
#, fuzzy, priority:100
#| msgid "State directories: The two backends keep their state in different directories under .git/"
msgid "State directories: The two backends keep their state in different directories under `.git/`"
msgstr "Diretórios de estado: As duas estruturas mantêm a sua condição em diferentes diretórios dentro do `.git/`"

#. type: Plain text
#: en/git-rebase.txt:800
#, fuzzy, priority:100
#| msgid "You should understand the implications of using 'git rebase' on a repository that you share.  See also RECOVERING FROM UPSTREAM REBASE below."
msgid "You should understand the implications of using `git rebase` on a repository that you share.  See also RECOVERING FROM UPSTREAM REBASE below."
msgstr "Você deve compreender as implicações da utilização do comando 'git rebase' num repositório que você compartilha.  Consulte também SE RECUPERANDO DA RECONSTRUÇÃO DA FUNDAÇÃO INICIAL (UPSTREM REBASE) abaixo."

#. type: Plain text
#: en/git-rebase.txt:805
#, fuzzy, priority:100
#| msgid "When the git-rebase command is run, it will first execute a \"pre-rebase\" hook if one exists.  You can use this hook to do sanity checks and reject the rebase if it isn't appropriate.  Please see the template pre-rebase hook script for an example."
msgid "When the rebase is run, it will first execute a `pre-rebase` hook if one exists.  You can use this hook to do sanity checks and reject the rebase if it isn't appropriate.  Please see the template `pre-rebase` hook script for an example."
msgstr "Quando o comando 'git rebase' é executado, ele primeiro executa um gancho \"pre-rebase\", caso exista.  Você pode usar este gancho para fazer as verificações de sanidade e rejeitar a nova reconstrução, caso não seja apropriado.  Consulte o modelo do script do gancho 'pre-rebase' para ter um exemplo."

#. type: Plain text
#: en/git-rebase.txt:807
#, fuzzy, priority:100
#| msgid "Upon completion, <branch> will be the current branch."
msgid "Upon completion, `<branch>` will be the current branch."
msgstr "Após a conclusão, o <ramo> será o ramo atual."

#. type: Plain text
#: en/git-rebase.txt:814
#, priority:100
msgid "Rebasing interactively means that you have a chance to edit the commits which are rebased.  You can reorder the commits, and you can remove them (weeding out bad or otherwise unwanted patches)."
msgstr "Reconstruir de forma interativa significa ter a chance de editar os commits que são reconstruídos.  É possível reordenar os commits e removê-los (eliminando os patches ruins ou indesejados)."

#. type: Plain text
#: en/git-rebase.txt:816
#, priority:100
msgid "The interactive mode is meant for this type of workflow:"
msgstr "O modo interativo é destinado para este tipo de fluxo de trabalho:"

#. type: Plain text
#: en/git-rebase.txt:818
#, priority:100
msgid "have a wonderful idea"
msgstr "tenho uma ideia maravilhosa"

#. type: Plain text
#: en/git-rebase.txt:819
#, priority:100
msgid "hack on the code"
msgstr "hackear o código"

#. type: Plain text
#: en/git-rebase.txt:820
#, priority:100
msgid "prepare a series for submission"
msgstr "preparar uma série para envio"

#. type: Plain text
#: en/git-rebase.txt:821
#, priority:100
msgid "submit"
msgstr "enviar"

#. type: Plain text
#: en/git-rebase.txt:823
#, priority:100
msgid "where point 2. consists of several instances of"
msgstr "onde o ponto 2. consiste em várias instâncias do"

#. type: Plain text
#: en/git-rebase.txt:825
#, priority:100
msgid "regular use"
msgstr "uso regular"

#. type: Plain text
#: en/git-rebase.txt:827
#, priority:100
msgid "finish something worthy of a commit"
msgstr "termine algo digno de um commit"

#. type: Labeled list
#: en/git-rebase.txt:828 en/git-update-ref.txt:136
#, no-wrap, priority:100
msgid "commit"
msgstr "commit"

#. type: Plain text
#: en/git-rebase.txt:830
#, priority:100
msgid "independent fixup"
msgstr "correção independente"

#. type: Plain text
#: en/git-rebase.txt:832
#, priority:100
msgid "realize that something does not work"
msgstr "perceber que algo não funciona"

#. type: Plain text
#: en/git-rebase.txt:833
#, priority:100
msgid "fix that"
msgstr "conserte isso"

#. type: Plain text
#: en/git-rebase.txt:834
#, priority:100
msgid "commit it"
msgstr "faça o commit"

#. type: Plain text
#: en/git-rebase.txt:840
#, priority:100
msgid "Sometimes the thing fixed in b.2. cannot be amended to the not-quite perfect commit it fixes, because that commit is buried deeply in a patch series.  That is exactly what interactive rebase is for: use it after plenty of \"a\"s and \"b\"s, by rearranging and editing commits, and squashing multiple commits into one."
msgstr "Às vezes, a coisa fixada em b.2. não pode ser alterado para o commit nem tão perfeito que ele corrige, porque este commit está enterrado profundamente numa série de correções.  É exatamente para isso que a reconstrução interativa serve: use-o após muitos \"a\" e \"b\", reorganizando e editando os commits e comprimindo vários commits num."

#. type: Plain text
#: en/git-rebase.txt:842
#, priority:100
msgid "Start it with the last commit you want to retain as-is:"
msgstr "Inicie-o com o último commit que você quer manter como está:"

#. type: Plain text
#: en/git-rebase.txt:844
#, no-wrap, priority:100
msgid "\tgit rebase -i <after-this-commit>\n"
msgstr "\tgit rebase -i <após-este-commit>\n"

#. type: Plain text
#: en/git-rebase.txt:849
#, priority:100
msgid "An editor will be fired up with all the commits in your current branch (ignoring merge commits), which come after the given commit.  You can reorder the commits in this list to your heart's content, and you can remove them.  The list looks more or less like this:"
msgstr "Um editor será acionado com todos os commits no seu ramo atual (ignorando a mesclagem dos commits), que vêm após o commit informado.  Você pode reordenar os commits nesta lista para o conteúdo do seu coração e pode removê-los.  A lista é mais ou menos assim:"

#. type: delimited block -
#: en/git-rebase.txt:854
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"pick deadbee The oneline of this commit\n"
"pick fa1afe1 The oneline of the next commit\n"
"...\n"
msgstr ""
"pick deadbee Uma linha deste commit\n"
"pick fa1afe1 Uma linha do próximo commit\n"
"...\n"

#. type: Plain text
#: en/git-rebase.txt:859
#, priority:100
msgid "The oneline descriptions are purely for your pleasure; 'git rebase' will not look at them but at the commit names (\"deadbee\" and \"fa1afe1\" in this example), so do not delete or edit the names."
msgstr "As descrições on-line são puramente para o seu prazer; o comando 'git rebase' não examinará eles, porém os nomes dos commits (\"deadbee\" e \"fa1afe1\" neste exemplo), portanto, não exclua ou edite os nomes."

#. type: Plain text
#: en/git-rebase.txt:864
#, fuzzy, priority:100
#| msgid "By replacing the command \"pick\" with the command \"edit\", you can tell 'git rebase' to stop after applying that commit, so that you can edit the files and/or the commit message, amend the commit, and continue rebasing."
msgid "By replacing the command \"pick\" with the command \"edit\", you can tell `git rebase` to stop after applying that commit, so that you can edit the files and/or the commit message, amend the commit, and continue rebasing."
msgstr "Ao substituir o comando \"pick\" pelo comando \"edit\", é possível dizer ao comando 'git rebase' para parar após aplicar este commit, para que seja possível editar os arquivos e/ou a mensagem do commit, alterar o commit e continuar com a reconstrução."

#. type: Plain text
#: en/git-rebase.txt:867
#, priority:100
msgid "To interrupt the rebase (just like an \"edit\" command would do, but without cherry-picking any commit first), use the \"break\" command."
msgstr "Para interromper um \"rebase\" (exatamente como um comando \"edit\" faria, mas sem fazer uma escolha seletiva de nenhum commit primeiro), use o comando \"break\"."

#. type: Plain text
#: en/git-rebase.txt:870
#, priority:100
msgid "If you just want to edit the commit message for a commit, replace the command \"pick\" with the command \"reword\"."
msgstr "Caso apenas queira editar a mensagem do commit para um commit, substitua o comando `pick` pelo comando `reword`."

#. type: Plain text
#: en/git-rebase.txt:873
#, priority:100
msgid "To drop a commit, replace the command \"pick\" with \"drop\", or just delete the matching line."
msgstr "Para eliminar um commit, substitua o comando \"pick\" por \"drop\" ou apenas exclua a linha coincidente."

#. type: Plain text
#: en/git-rebase.txt:888
#, priority:100
msgid "If you want to fold two or more commits into one, replace the command \"pick\" for the second and subsequent commits with \"squash\" or \"fixup\".  If the commits had different authors, the folded commit will be attributed to the author of the first commit.  The suggested commit message for the folded commit is the concatenation of the first commit's message with those identified by \"squash\" commands, omitting the messages of commits identified by \"fixup\" commands, unless \"fixup -c\" is used.  In that case the suggested commit message is only the message of the \"fixup -c\" commit, and an editor is opened allowing you to edit the message.  The contents (patch) of the \"fixup -c\" commit are still incorporated into the folded commit. If there is more than one \"fixup -c\" commit, the message from the final one is used.  You can also use \"fixup -C\" to get the same behavior as \"fixup -c\" except without opening an editor."
msgstr "Caso queira juntar dois ou mais commits em um, substitua o comando \"pick\" para o segundo commit e os commits subsequentes por \"squash\" ou \"fixup\".  Caso os commits tenham diferentes autores, o commit que foi juntado será atribuído ao autor do primeiro commit.  A mensagem sugerida do commit para o commit que foi juntado, é a concatenação da mensagem do primeiro commit com aquelas identificadas pelos comandos \"squash\", omitindo as mensagens dos commits identificados pelos comandos \"fixup\", a menos que a opção `fixup -c` seja utilizado.  Nesse caso, a mensagem do commit sugerido é apenas a mensagem do commit `fixup -c` onde um editor é aberto permitindo que você edite a mensagem.  O conteúdo (patch) do commit `fixup -c` ainda está incorporado ao commit que foi juntado. Caso haja mais de um commit `fixup -c`, a mensagem do último será usada.  Você também pode usar a opção `fixup -C` para obter o mesmo comportamento que a opção `fixup -c`, sem a opção de abrir um editor."

#. type: Plain text
#: en/git-rebase.txt:892
#, fuzzy, priority:100
#| msgid "'git rebase' will stop when \"pick\" has been replaced with \"edit\" or when a command fails due to merge errors. When you are done editing and/or resolving conflicts you can continue with `git rebase --continue`."
msgid "`git rebase` will stop when \"pick\" has been replaced with \"edit\" or when a command fails due to merge errors. When you are done editing and/or resolving conflicts you can continue with `git rebase --continue`."
msgstr "O comando 'git rebase' será interrompido quando o \"pick\" for substituído por \"edit\" ou quando um comando falhar devido aos erros da mesclagem. Quando você terminar de editar e/ou resolver os conflitos, será possível continuar utilizando `git rebase --continue`."

#. type: Plain text
#: en/git-rebase.txt:896
#, fuzzy, priority:100
#| msgid "For example, if you want to reorder the last 5 commits, such that what was HEAD~4 becomes the new HEAD. To achieve that, you would call 'git rebase' like this:"
msgid "For example, if you want to reorder the last 5 commits, such that what was `HEAD~4` becomes the new `HEAD`. To achieve that, you would call `git rebase` like this:"
msgstr "Como por exemplo, caso você queira reordenar os últimos 5 commits de maneira onde o que era `HEAD~4` se torne o novo `HEAD`. Para conseguir isso, você chamaria o comando 'git rebase' assim:"

#. type: delimited block -
#: en/git-rebase.txt:899
#, no-wrap, priority:100
msgid "$ git rebase -i HEAD~5\n"
msgstr "$ git rebase -i HEAD~5\n"

#. type: Plain text
#: en/git-rebase.txt:902
#, priority:100
msgid "And move the first patch to the end of the list."
msgstr "E mova o primeiro patch para o ramo da lista."

#. type: Plain text
#: en/git-rebase.txt:905
#, priority:100
msgid "You might want to recreate merge commits, e.g. if you have a history like this:"
msgstr "Convém recriar a mesclagem dos commits, por exemplo, caso tenha um histórico como este:"

#. type: delimited block -
#: en/git-rebase.txt:912
#, no-wrap, priority:100
msgid ""
"           X\n"
"            \\\n"
"         A---M---B\n"
"        /\n"
"---o---O---P---Q\n"
msgstr ""
"           X\n"
"            \\\n"
"         A---M---B\n"
"        /\n"
"---o---O---P---Q\n"

#. type: Plain text
#: en/git-rebase.txt:916
#, fuzzy, priority:100
#| msgid "Suppose you want to rebase the side branch starting at \"A\" to \"Q\". Make sure that the current HEAD is \"B\", and call"
msgid "Suppose you want to rebase the side branch starting at \"A\" to \"Q\". Make sure that the current `HEAD` is \"B\", and call"
msgstr "Suponha que queira reconstruir o lado do ramo ao lado começando em \"A\" para \"Q\". Verifique se o `HEAD` atual é \"B\" e chame"

#. type: delimited block -
#: en/git-rebase.txt:919
#, no-wrap, priority:100
msgid "$ git rebase -i -r --onto Q O\n"
msgstr "$ git rebase -i -r --onto Q O\n"

#. type: Plain text
#: en/git-rebase.txt:926
#, priority:100
msgid "Reordering and editing commits usually creates untested intermediate steps.  You may want to check that your history editing did not break anything by running a test, or at least recompiling at intermediate points in history by using the \"exec\" command (shortcut \"x\").  You may do so by creating a todo list like this one:"
msgstr "Reordenando e editando os commits geralmente cria etapas intermediárias não testadas.  Convém verificar se a edição do seu histórico não quebrou nada durante a execução de um teste ou, pelo menos, recompilando em pontos intermediários do histórico utilizando o comando \"exec\" (atalho \"x\").  Você pode fazer isso criando uma lista de tarefas como esta:"

#. type: delimited block -
#: en/git-rebase.txt:935
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"pick deadbee Implement feature XXX\n"
"fixup f1a5c00 Fix to feature XXX\n"
"exec make\n"
"pick c0ffeee The oneline of the next commit\n"
"edit deadbab The oneline of the commit after\n"
"exec cd subdir; make test\n"
"...\n"
msgstr ""
"pick deadbee Implement feature XXX\n"
"fixup f1a5c00 Fix to feature XXX\n"
"exec make\n"
"pick c0ffeee The oneline of the next commit\n"
"edit deadbab The oneline of the commit after\n"
"exec cd subdir; make test\n"
"...\n"

#. type: Plain text
#: en/git-rebase.txt:940
#, priority:100
msgid "The interactive rebase will stop when a command fails (i.e. exits with non-0 status) to give you an opportunity to fix the problem. You can continue with `git rebase --continue`."
msgstr "A reconstrução interativa será interrompida quando um comando falhar (ou seja, encerra com uma condição diferente de 0) oferecendo uma oportunidade para a correção do problema. Você pode continuar com o comando `git rebase --continue`."

#. type: Plain text
#: en/git-rebase.txt:945
#, ignore-ellipsis, priority:100
msgid "The \"exec\" command launches the command in a shell (the one specified in `$SHELL`, or the default shell if `$SHELL` is not set), so you can use shell features (like \"cd\", \">\", \";\" ...). The command is run from the root of the working tree."
msgstr "O comando \"exec\" inicia o comando num shell (aquele definido em `$SHELL`, ou o shell predefinido caso `$SHELL` não esteja definido), para que você possa utilizar os recursos do shell (como \"cd\", \">\", \";\" ...). O comando é executado a partir da raiz da árvore de trabalho."

#. type: delimited block -
#: en/git-rebase.txt:948
#, no-wrap, priority:100
msgid "$ git rebase -i --exec \"make test\"\n"
msgstr "$ git rebase -i --exec \"make test\"\n"

#. type: Plain text
#: en/git-rebase.txt:952
#, priority:100
msgid "This command lets you check that intermediate commits are compilable.  The todo list becomes like that:"
msgstr "Este comando permite verificar se os commits intermediários são compiláveis.  A lista de tarefas fica assim:"

#. type: delimited block -
#: en/git-rebase.txt:962
#, no-wrap, priority:100
msgid ""
"pick 5928aea one\n"
"exec make test\n"
"pick 04d0fda two\n"
"exec make test\n"
"pick ba46169 three\n"
"exec make test\n"
"pick f4593f9 four\n"
"exec make test\n"
msgstr ""
"pick 5928aea one\n"
"exec make test\n"
"pick 04d0fda two\n"
"exec make test\n"
"pick ba46169 three\n"
"exec make test\n"
"pick f4593f9 four\n"
"exec make test\n"

#. type: Title -
#: en/git-rebase.txt:965
#, no-wrap, priority:100
msgid "SPLITTING COMMITS"
msgstr "DIVIDINDO OS COMMITS\t"

#. type: Plain text
#: en/git-rebase.txt:971
#, fuzzy, priority:100
#| msgid "In interactive mode, you can mark commits with the action \"edit\".  However, this does not necessarily mean that 'git rebase' expects the result of this edit to be exactly one commit.  Indeed, you can undo the commit, or you can add other commits.  This can be used to split a commit into two:"
msgid "In interactive mode, you can mark commits with the action \"edit\".  However, this does not necessarily mean that `git rebase` expects the result of this edit to be exactly one commit.  Indeed, you can undo the commit, or you can add other commits.  This can be used to split a commit into two:"
msgstr "No modo interativo, é possível marcar os commits com a ação \"editar\".  No entanto, isso não significa necessariamente que o comando 'git rebase' espere que o resultado dessa edição seja exatamente um commit.  Na verdade, é possível desfazer o commit ou adicionar outros.  Isso pode ser utilizado para dividir um commit em dois:"

#. type: Plain text
#: en/git-rebase.txt:975
#, fuzzy, priority:100
#| msgid "Start an interactive rebase with `git rebase -i <commit>^`, where <commit> is the commit you want to split.  In fact, any commit range will do, as long as it contains that commit."
msgid "Start an interactive rebase with `git rebase -i <commit>^`, where `<commit>` is the commit you want to split.  In fact, any commit range will do, as long as it contains that commit."
msgstr "Inicie uma reconstrução interativa com `git rebase -i <commit>^`, onde <commit> é o que você quer dividir.  De fato, qualquer intervalo do commit serve, desde que contenha aquele commit."

#. type: Plain text
#: en/git-rebase.txt:977
#, priority:100
msgid "Mark the commit you want to split with the action \"edit\"."
msgstr "Marque o commit que deseja dividir com a ação \"edit\"."

#. type: Plain text
#: en/git-rebase.txt:981
#, fuzzy, priority:100
#| msgid "When it comes to editing that commit, execute `git reset HEAD^`.  The effect is that the HEAD is rewound by one, and the index follows suit.  However, the working tree stays the same."
msgid "When it comes to editing that commit, execute `git reset HEAD^`.  The effect is that the `HEAD` is rewound by one, and the index follows suit.  However, the working tree stays the same."
msgstr "Quando se trata de editar este commit, execute o comando `git reset HEAD^`.  O efeito é que o `HEAD` é retrocedido por um e o índice segue o conjunto.  No entanto, a árvore de trabalho permanece a mesma."

#. type: Plain text
#: en/git-rebase.txt:985
#, fuzzy, priority:100
#| msgid "Now add the changes to the index that you want to have in the first commit.  You can use `git add` (possibly interactively) or 'git gui' (or both) to do that."
msgid "Now add the changes to the index that you want to have in the first commit.  You can use `git add` (possibly interactively) or `git gui` (or both) to do that."
msgstr "Agora adicione as alterações ao índice que você queira ter no primeiro commit.  Você pode utilizar o comando `git add` (possivelmente de forma interativa) ou o comando 'git gui' (ou ambos) para fazer isso."

#. type: Plain text
#: en/git-rebase.txt:988
#, priority:100
msgid "Commit the now-current index with whatever commit message is appropriate now."
msgstr "Faça o commit do índice agora atual com qualquer mensagem do commit que seja apropriada."

#. type: Plain text
#: en/git-rebase.txt:990
#, priority:100
msgid "Repeat the last two steps until your working tree is clean."
msgstr "Repita as duas últimas etapas até que a sua árvore de trabalho esteja limpa."

#. type: Plain text
#: en/git-rebase.txt:992
#, priority:100
msgid "Continue the rebase with `git rebase --continue`."
msgstr "Continue a reconstrução com `git rebase --continue`."

#. type: Plain text
#: en/git-rebase.txt:997
#, fuzzy, priority:100
#| msgid "If you are not absolutely sure that the intermediate revisions are consistent (they compile, pass the testsuite, etc.) you should use 'git stash' to stash away the not-yet-committed changes after each commit, test, and amend the commit if fixes are necessary."
msgid "If you are not absolutely sure that the intermediate revisions are consistent (they compile, pass the testsuite, etc.) you should use `git stash` to stash away the not-yet-committed changes after each commit, test, and amend the commit if fixes are necessary."
msgstr "Caso não tenha certeza absoluta que as revisões intermediárias são consistentes (elas compilam, passam no conjunto de testes, etc.), você deve usar o `git stash` para armazenar o commit das alterações que ainda não foram feitas após cada commit, teste e corrija o commit caso correções sejam necessárias."

#. type: Title -
#: en/git-rebase.txt:1000
#, no-wrap, priority:100
msgid "RECOVERING FROM UPSTREAM REBASE"
msgstr "SE RECUPERANDO DA RECONSTRUÇÃO DA FUNDAÇÃO INICIAL (UPSTREM REBASE)"

#. type: Plain text
#: en/git-rebase.txt:1007
#, priority:100
msgid "Rebasing (or any other form of rewriting) a branch that others have based work on is a bad idea: anyone downstream of it is forced to manually fix their history.  This section explains how to do the fix from the downstream's point of view.  The real fix, however, would be to avoid rebasing the upstream in the first place."
msgstr "Fazer a reconstrução da fundação (ou qualquer outra forma de reescrita) de um ramo onde outras pessoas tem a base de trabalho é uma péssima ideia: qualquer um que baixe dela é forçado a corrigir manualmente o seu histórico.  Esta seção explica como fazer a correção do ponto de vista de quem baixou.  A solução real, no entanto em primeiro lugar, seria evitar fazer a reconstrução da fundação de quem subiu (upstream)."

#. type: Plain text
#: en/git-rebase.txt:1012
#, priority:100
msgid "To illustrate, suppose you are in a situation where someone develops a 'subsystem' branch, and you are working on a 'topic' that is dependent on this 'subsystem'.  You might end up with a history like the following:"
msgstr "Para ilustrar, suponha que esteja em uma situação onde alguém desenvolva um ramo de um 'subsystem' e esteja trabalhando em um 'topic' que depende desse 'subsistema'.  Você pode acabar com um histórico como este:"

#. type: delimited block -
#: en/git-rebase.txt:1019
#, no-wrap, priority:100
msgid ""
"    o---o---o---o---o---o---o---o  master\n"
"\t \\\n"
"\t  o---o---o---o---o  subsystem\n"
"\t\t\t   \\\n"
"\t\t\t    *---*---*  topic\n"
msgstr ""
"    o---o---o---o---o---o---o---o  master\n"
"\t \\\n"
"\t  o---o---o---o---o  subsystem\n"
"\t\t\t   \\\n"
"\t\t\t    *---*---*  topic\n"

#. type: Plain text
#: en/git-rebase.txt:1022
#, priority:100
msgid "If 'subsystem' is rebased against 'master', the following happens:"
msgstr "Caso a reconstrução da fundação do 'subsystem' seja realizada contra o 'master', o seguinte acontece:"

#. type: delimited block -
#: en/git-rebase.txt:1029
#, no-wrap, priority:100
msgid ""
"    o---o---o---o---o---o---o---o  master\n"
"\t \\\t\t\t \\\n"
"\t  o---o---o---o---o\t  o'--o'--o'--o'--o'  subsystem\n"
"\t\t\t   \\\n"
"\t\t\t    *---*---*  topic\n"
msgstr ""
"    o---o---o---o---o---o---o---o  master\n"
"\t \\\t\t\t \\\n"
"\t  o---o---o---o---o\t  o'--o'--o'--o'--o'  subsystem\n"
"\t\t\t   \\\n"
"\t\t\t    *---*---*  topic\n"

#. type: Plain text
#: en/git-rebase.txt:1033
#, priority:100
msgid "If you now continue development as usual, and eventually merge 'topic' to 'subsystem', the commits from 'subsystem' will remain duplicated forever:"
msgstr "Caso agora continue o desenvolvimento normalmente e eventualmente mescle o 'topic' para 'subsystem', os commits do 'subsystem' permanecerão duplicados para sempre:"

#. type: delimited block -
#: en/git-rebase.txt:1040
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"    o---o---o---o---o---o---o---o  master\n"
"\t \\\t\t\t \\\n"
"\t  o---o---o---o---o\t  o'--o'--o'--o'--o'--M\t subsystem\n"
"\t\t\t   \\\t\t\t     /\n"
"\t\t\t    *---*---*-..........-*--*  topic\n"
msgstr ""
"    o---o---o---o---o---o---o---o  master\n"
"\t \\\t\t\t \\\n"
"\t  o---o---o---o---o\t  o'--o'--o'--o'--o'--M\t subsystem\n"
"\t\t\t   \\\t\t\t     /\n"
"\t\t\t    *---*---*-..........-*--*  topic\n"

#. type: Plain text
#: en/git-rebase.txt:1047
#, priority:100
msgid "Such duplicates are generally frowned upon because they clutter up history, making it harder to follow.  To clean things up, you need to transplant the commits on 'topic' to the new 'subsystem' tip, i.e., rebase 'topic'.  This becomes a ripple effect: anyone downstream from 'topic' is forced to rebase too, and so on!"
msgstr "Geralmente, essas duplicatas são desaprovadas porque desordenam a história, dificultando o acompanhamento.  Para organizar as coisas, é necessário transplantar os commits no 'topic' para o novo cume do 'subsystem', ou seja, reconstruir (rebase) o 'topic'.  Isso se torna um efeito cascata: qualquer um que baixe do 'topic' é forçado a reconstruir (rebase) também e por aí vai!"

#. type: Plain text
#: en/git-rebase.txt:1049
#, priority:100
msgid "There are two kinds of fixes, discussed in the following subsections:"
msgstr "Existem dois tipos de correções, discutidos nas seguintes subseções:"

#. type: Labeled list
#: en/git-rebase.txt:1050
#, no-wrap, priority:100
msgid "Easy case: The changes are literally the same."
msgstr "Caso fácil: as alterações são literalmente as mesmas."

#. type: Plain text
#: en/git-rebase.txt:1054
#, priority:100
msgid "This happens if the 'subsystem' rebase was a simple rebase and had no conflicts."
msgstr "Isso acontece caso a reconstrução do 'subsystem' foi uma reconstrução simples e não houve conflitos."

#. type: Labeled list
#: en/git-rebase.txt:1055
#, no-wrap, priority:100
msgid "Hard case: The changes are not the same."
msgstr "Caso difícil: as alterações não são as mesmas."

#. type: Plain text
#: en/git-rebase.txt:1062
#, priority:100
msgid "This happens if the 'subsystem' rebase had conflicts, or used `--interactive` to omit, edit, squash, or fixup commits; or if the upstream used one of `commit --amend`, `reset`, or a full history rewriting command like https://github.com/newren/git-filter-repo[`filter-repo`]."
msgstr "Isso acontece caso a reconstrução da fundação (rebase) do 'subsistema' tiver conflitos ou utilizar o `--interactive` para omitir, editar, esmagar ou consertar consertos; ou se a inicial utilizou um dos comandos `commit --amend`, `reset` ou um histórico completo da reescrita como https://github.com/newren/git-filter-repo[`filter-repo`]."

#. type: Title ~
#: en/git-rebase.txt:1065
#, no-wrap, priority:100
msgid "The easy case"
msgstr "O caso fácil"

#. type: Plain text
#: en/git-rebase.txt:1070
#, priority:100
msgid "Only works if the changes (patch IDs based on the diff contents) on 'subsystem' are literally the same before and after the rebase 'subsystem' did."
msgstr "Funciona apenas se as alterações (IDs do patch com base no conteúdo do diff) no 'subsystem' que forem literalmente as mesmas antes e depois da reconstrução do 'subsystem'."

#. type: Plain text
#: en/git-rebase.txt:1075
#, priority:100
msgid "In that case, the fix is easy because 'git rebase' knows to skip changes that are already present in the new upstream (unless `--reapply-cherry-picks` is given). So if you say (assuming you're on 'topic')"
msgstr "Nesse caso, a correção é fácil porque o comando 'git rebase' sabe ignorar as alterações que já estão presentes no novo 'upstream' (a menos que `--reapply-cherry-picks` seja utilizada). Então, se você diz (supondo que você esteja no 'topic')"

#. type: delimited block -
#: en/git-rebase.txt:1077
#, no-wrap, priority:100
msgid "    $ git rebase subsystem\n"
msgstr "    $ git rebase subsystem\n"

#. type: Plain text
#: en/git-rebase.txt:1079
#, priority:100
msgid "you will end up with the fixed history"
msgstr "você vai acabar com o histórico fixo"

#. type: delimited block -
#: en/git-rebase.txt:1085
#, no-wrap, priority:100
msgid ""
"    o---o---o---o---o---o---o---o  master\n"
"\t\t\t\t \\\n"
"\t\t\t\t  o'--o'--o'--o'--o'  subsystem\n"
"\t\t\t\t\t\t   \\\n"
"\t\t\t\t\t\t    *---*---*  topic\n"
msgstr ""
"    o---o---o---o---o---o---o---o  master\n"
"\t\t\t\t \\\n"
"\t\t\t\t  o'--o'--o'--o'--o'  subsystem\n"
"\t\t\t\t\t\t   \\\n"
"\t\t\t\t\t\t    *---*---*  topic\n"

#. type: Title ~
#: en/git-rebase.txt:1089
#, no-wrap, priority:100
msgid "The hard case"
msgstr "O caso difícil"

#. type: Plain text
#: en/git-rebase.txt:1093
#, priority:100
msgid "Things get more complicated if the 'subsystem' changes do not exactly correspond to the ones before the rebase."
msgstr "As coisas ficam mais complicadas caso as alterações do \"subsistema\" não coincidam de forma exata aquelas antes da reconstrução."

#. type: Plain text
#: en/git-rebase.txt:1098
#, no-wrap, priority:100
msgid ""
"While an \"easy case recovery\" sometimes appears to be successful\n"
"      even in the hard case, it may have unintended consequences.  For\n"
"      example, a commit that was removed via `git rebase\n"
"      --interactive` will be **resurrected**!\n"
msgstr ""
"Embora uma \"recuperação fácil dos casos\" às vezes pareça ser bem-sucedida\n"
"      mesmo no caso difícil, pode haver consequências não intencionais.  Para\n"
"      Por exemplo, um commit que foi removido através do comando `git rebase\n"
"      --interactive` será **ressuscitado**!\n"

#. type: Plain text
#: en/git-rebase.txt:1103
#, fuzzy, priority:100
#| msgid "The idea is to manually tell 'git rebase' \"where the old 'subsystem' ended and your 'topic' began\", that is, what the old merge base between them was.  You will have to find a way to name the last commit of the old 'subsystem', for example:"
msgid "The idea is to manually tell `git rebase` \"where the old 'subsystem' ended and your 'topic' began\", that is, what the old merge base between them was.  You will have to find a way to name the last commit of the old 'subsystem', for example:"
msgstr "A ideia é dizer manualmente ao comando 'git rebase' \"onde o 'subsistema' antigo terminou e o seu 'tópico' começou\", ou seja, qual era a base da mesclagem antiga entre eles.  Você precisará encontrar uma maneira de nomear o último commit do antigo 'subsistema', por exemplo:"

#. type: Plain text
#: en/git-rebase.txt:1107
#, fuzzy, priority:100
#| msgid "With the 'subsystem' reflog: after 'git fetch', the old tip of 'subsystem' is at `subsystem@{1}`.  Subsequent fetches will increase the number.  (See linkgit:git-reflog[1].)"
msgid "With the 'subsystem' reflog: after `git fetch`, the old tip of 'subsystem' is at `subsystem@{1}`.  Subsequent fetches will increase the number.  (See linkgit:git-reflog[1].)"
msgstr "Com o 'subsistema' reflog: após 'git fetch', o antigo cume do 'subsistema' fica em `subsystem@{1}`.  As capturas subsequentes aumentarão este número.  (Consulte linkgit:git-reflog[1].)"

#. type: Plain text
#: en/git-rebase.txt:1110
#, priority:100
msgid "Relative to the tip of 'topic': knowing that your 'topic' has three commits, the old tip of 'subsystem' must be `topic~3`."
msgstr "Em relação ao cume do 'topic': sabendo que o seu 'topic' tem três commits, o cume antigo do 'subsystem' deve ser `topic~3`."

#. type: Plain text
#: en/git-rebase.txt:1113
#, priority:100
msgid "You can then transplant the old `subsystem..topic` to the new tip by saying (for the reflog case, and assuming you are on 'topic' already):"
msgstr "Você pode então transplantar o antigo `subsystem..topic` para o novo cume dizendo (para o caso do reflog e supondo que você já esteja no 'topic'):"

#. type: delimited block -
#: en/git-rebase.txt:1115
#, no-wrap, priority:100
msgid "    $ git rebase --onto subsystem subsystem@{1}\n"
msgstr "    $ git rebase --onto subsystem subsystem@{1}\n"

#. type: Plain text
#: en/git-rebase.txt:1120
#, priority:100
msgid "The ripple effect of a \"hard case\" recovery is especially bad: 'everyone' downstream from 'topic' will now have to perform a \"hard case\" recovery too!"
msgstr "O efeito cascata de uma recuperação \"difícil\" (hard case) é especialmente ruim: 'todos' baixaram do 'topic' e agora terão que executar também uma reconstrução \"difícil\"!"

#. type: Title -
#: en/git-rebase.txt:1122
#, no-wrap, priority:100
msgid "REBASING MERGES"
msgstr "RECONSTRUINDO AS MESCLAGENS"

#. type: Plain text
#: en/git-rebase.txt:1130
#, priority:100
msgid "The interactive rebase command was originally designed to handle individual patch series. As such, it makes sense to exclude merge commits from the todo list, as the developer may have merged the then-current `master` while working on the branch, only to rebase all the commits onto `master` eventually (skipping the merge commits)."
msgstr "O comando de reconstrução interativa foi originalmente projetado para lidar com séries de patches individuais. Como tal, faz sentido excluir a mesclagem dos commits da lista de tarefas, pois o desenvolvedor pode ter mesclado o `master` atual enquanto trabalhava no ramo, apenas para redefinir todos os commits para `master` eventualmente (ignorando a mesclagem dos commits)."

#. type: Plain text
#: en/git-rebase.txt:1134
#, priority:100
msgid "However, there are legitimate reasons why a developer may want to recreate merge commits: to keep the branch structure (or \"commit topology\") when working on multiple, inter-related branches."
msgstr "No entanto, existem razões legítimas pelas quais um desenvolvedor pode querer recriar as mesclagens dos commits: para manter a estrutura do ramo (ou a \"topologia do commit\") ao trabalhar em diversos ramos inter-relacionadas."

#. type: Plain text
#: en/git-rebase.txt:1139
#, priority:100
msgid "In the following example, the developer works on a topic branch that refactors the way buttons are defined, and on another topic branch that uses that refactoring to implement a \"Report a bug\" button. The output of `git log --graph --format=%s -5` may look like this:"
msgstr "No exemplo a seguir, o desenvolvedor trabalha em um tópico no ramo que refatora a maneira como os botões são definidos, em outro tópico do ramo que utilize esta refatoração para implementar um botão \"Relatar um bug\". A saída do `git log --graph --format=%s -5` pode ficar assim:"

#. type: delimited block -
#: en/git-rebase.txt:1149
#, no-wrap, priority:100
msgid ""
"*   Merge branch 'report-a-bug'\n"
"|\\\n"
"| * Add the feedback button\n"
"* | Merge branch 'refactor-button'\n"
"|\\ \\\n"
"| |/\n"
"| * Use the Button class for all buttons\n"
"| * Extract a generic Button class from the DownloadButton one\n"
msgstr ""
"*   Mescla o ramo 'report-a-bug'\n"
"|\\\n"
"| * Adiciona o botão de feedback\n"
"* | Mescla o ramo 'refactor-button'\n"
"|\\ \\\n"
"| |/\n"
"| * Utiliza a classe do Botão para todos os botões\n"
"| * Extrai o botão genérico do DownloadButton\n"

#. type: Plain text
#: en/git-rebase.txt:1156
#, priority:100
msgid "The developer might want to rebase those commits to a newer `master` while keeping the branch topology, for example when the first topic branch is expected to be integrated into `master` much earlier than the second one, say, to resolve merge conflicts with changes to the DownloadButton class that made it into `master`."
msgstr "O desenvolvedor pode querer redefinir estes commits para um novo `master` enquanto mantém a topologia da ramificação. Quando se espera que o primeiro tópico do ramo que seja integrado ao` master` muito antes do segundo por exemplo. Para resolver os conflitos da mesclagem com as alterações para a classe `DownloadButton` que a transformou em `master` por exemplo."

#. type: Plain text
#: en/git-rebase.txt:1159
#, priority:100
msgid "This rebase can be performed using the `--rebase-merges` option.  It will generate a todo list looking like this:"
msgstr "Esta reconstrução pode ser realizada utilizando a opção `--rebase-merges`.  Ele irá gerar uma lista de tarefas, assim:"

#. type: delimited block -
#: en/git-rebase.txt:1162 en/git-rebase.txt:1243
#, no-wrap, priority:100
msgid "label onto\n"
msgstr "rotular para\n"

#. type: delimited block -
#: en/git-rebase.txt:1168
#, no-wrap, priority:100
msgid ""
"# Branch: refactor-button\n"
"reset onto\n"
"pick 123456 Extract a generic Button class from the DownloadButton one\n"
"pick 654321 Use the Button class for all buttons\n"
"label refactor-button\n"
msgstr ""
"# Branch: refactor-button\n"
"reset onto\n"
"pick 123456 Extrai o botão genérico do DownloadButton\n"
"pick 654321 Utiliza a classe do Botão para todos os botões\n"
"label refactor-button\n"

#. type: delimited block -
#: en/git-rebase.txt:1173
#, no-wrap, priority:100
msgid ""
"# Branch: report-a-bug\n"
"reset refactor-button # Use the Button class for all buttons\n"
"pick abcdef Add the feedback button\n"
"label report-a-bug\n"
msgstr ""
"# Branch: report-a-bug\n"
"reset refactor-button # Utiliza a classe do Botão para todos os botões\n"
"pick abcdef Adiciona o botão de feedback\n"
"label report-a-bug\n"

#. type: delimited block -
#: en/git-rebase.txt:1177
#, no-wrap, priority:100
msgid ""
"reset onto\n"
"merge -C a1b2c3 refactor-button # Merge 'refactor-button'\n"
"merge -C 6f5e4d report-a-bug # Merge 'report-a-bug'\n"
msgstr ""
"reset onto\n"
"merge -C a1b2c3 refactor-button # Mescla o 'refactor-button'\n"
"merge -C 6f5e4d report-a-bug # Mescla o 'report-a-bug'\n"

#. type: Plain text
#: en/git-rebase.txt:1181
#, priority:100
msgid "In contrast to a regular interactive rebase, there are `label`, `reset` and `merge` commands in addition to `pick` ones."
msgstr "Ao contrário de uma reconstrução interativa regular, existem os comandos `label`, `reset` e `merge` além dos comandos `pick`."

#. type: Plain text
#: en/git-rebase.txt:1189
#, priority:100
msgid "The `label` command associates a label with the current HEAD when that command is executed. These labels are created as worktree-local refs (`refs/rewritten/<label>`) that will be deleted when the rebase finishes. That way, rebase operations in multiple worktrees linked to the same repository do not interfere with one another. If the `label` command fails, it is rescheduled immediately, with a helpful message how to proceed."
msgstr "O comando `label` associa um rótulo ao `HEAD` atual quando este comando for executado. Estes rótulos são criados como refs locais da árvore de trabalho (`refs/rewritten/<label>`) que serão excluídos quando a reconstrução terminar. Dessa forma, as operações da reconstrução em várias árvores de trabalho vinculadas ao mesmo repositório não interferem entre si. Caso o comando `label` falhe, este é imediatamente reagendado, com uma mensagem útil sobre como proceder."

#. type: Plain text
#: en/git-rebase.txt:1196
#, priority:100
msgid "The `reset` command resets the HEAD, index and worktree to the specified revision. It is similar to an `exec git reset --hard <label>`, but refuses to overwrite untracked files. If the `reset` command fails, it is rescheduled immediately, with a helpful message how to edit the todo list (this typically happens when a `reset` command was inserted into the todo list manually and contains a typo)."
msgstr "O comando `reset` redefine o `HEAD`, o índice e a árvore de trabalho para a revisão específica. É semelhante a um comando `exec git reset --hard <label>`, porém se recusa a sobrescrever os arquivos que não sejam monitorados. Se o comando `reset` falhar, ele será imediatamente reagendado, com uma mensagem útil sobre como editar a lista de tarefas (normalmente acontece quando um comando `reset` foi inserido manualmente na lista de tarefas e contém um erro de digitação)."

#. type: Plain text
#: en/git-rebase.txt:1202
#, priority:100
msgid "The `merge` command will merge the specified revision(s) into whatever is HEAD at that time. With `-C <original-commit>`, the commit message of the specified merge commit will be used. When the `-C` is changed to a lower-case `-c`, the message will be opened in an editor after a successful merge so that the user can edit the message."
msgstr "O comando `merge` mesclará revisões usadas no que seja `HEAD` naquele momento. Com `-C <original-commit>`, a mensagem do commit de um determinada mesclagem será usada. Quando o `C` é alterado para minúsculo `-c`, a mensagem será aberta num editor após uma mesclagem bem-sucedida, para que o usuário possa edita-lá."

#. type: Plain text
#: en/git-rebase.txt:1205
#, priority:100
msgid "If a `merge` command fails for any reason other than merge conflicts (i.e.  when the merge operation did not even start), it is rescheduled immediately."
msgstr "Caso um comando `merge` falhar por qualquer motivo que não seja um conflito da mesclagem (ou seja, quando a operação da mesclagem sequer iniciou), ele será reagendado imediatamente."

#. type: Plain text
#: en/git-rebase.txt:1216
#, priority:100
msgid "By default, the `merge` command will use the `ort` merge strategy for regular merges, and `octopus` for octopus merges.  One can specify a default strategy for all merges using the `--strategy` argument when invoking rebase, or can override specific merges in the interactive list of commands by using an `exec` command to call `git merge` explicitly with a `--strategy` argument.  Note that when calling `git merge` explicitly like this, you can make use of the fact that the labels are worktree-local refs (the ref `refs/rewritten/onto` would correspond to the label `onto`, for example) in order to refer to the branches you want to merge."
msgstr "É predefinido que o comando `merge` utiliza a estratégia `ort` para mesclagens regulares e `octopus` para fusões \"octopus\" (polvo).  É possível especificar uma estratégia padrão para todas as mesclagens utilizando a opção `--strategy` ao invocar um \"rebase\" ou é possível substituir mesclagens específicas na lista interativa dos comandos utilizando um comando `exec` para invocar explicitamente o comando `git merge` com a opção `--strategy`.  Note que ao invocar explicitamente o comando `git merge`, é possível fazer uso do fato que as etiquetas são refs das árvores de trabalho locais (o ref `refs/rewritten/onto' corresponderiam à etiqueta `onto`, por exemplo) para se referir aos ramos que você deseja mesclar."

#. type: Plain text
#: en/git-rebase.txt:1220
#, priority:100
msgid "Note: the first command (`label onto`) labels the revision onto which the commits are rebased; The name `onto` is just a convention, as a nod to the `--onto` option."
msgstr "Observação: o primeiro comando (`label onto`) rotula a revisão onde os commits são refeitos; O nome `onto` é apenas uma convenção, como um aceno para a opção `--onto`."

#. type: Plain text
#: en/git-rebase.txt:1227
#, priority:100
msgid "It is also possible to introduce completely new merge commits from scratch by adding a command of the form `merge <merge-head>`. This form will generate a tentative commit message and always open an editor to let the user edit it. This can be useful e.g. when a topic branch turns out to address more than a single concern and wants to be split into two or even more topic branches. Consider this todo list:"
msgstr "Também é possível introduzir commits para mesclagem completamente novos, adicionando um comando no formato `merge <merge-head>`. Este formulário gera uma mensagem de commit provisória e sempre abre um editor para permitir que o usuário a edite. Pode ser útil quando por exemplo, um ramo de um tópico acaba resolvendo mais de um problema e quer ser dividido em dois ou mais ramos de tópico. Considere esta lista de tarefas:"

#. type: delimited block -
#: en/git-rebase.txt:1234
#, no-wrap, priority:100
msgid ""
"pick 192837 Switch from GNU Makefiles to CMake\n"
"pick 5a6c7e Document the switch to CMake\n"
"pick 918273 Fix detection of OpenSSL in CMake\n"
"pick afbecd http: add support for TLS v1.3\n"
"pick fdbaec Fix detection of cURL in CMake on Windows\n"
msgstr ""
"pick 192837 Alterna do GNU Makefiles para o CMake\n"
"pick 5a6c7e Documente a alteração para o CMake\n"
"pick 918273 Corrija a detecção do OpenSSL no CMake\n"
"pick afbecd http: adicione a compatibilidade com o TLS v1.3\n"
"pick fdbaec Corrija a detecção da cURL no CMake no Windows\n"

#. type: Plain text
#: en/git-rebase.txt:1240
#, priority:100
msgid "The one commit in this list that is not related to CMake may very well have been motivated by working on fixing all those bugs introduced by switching to CMake, but it addresses a different concern. To split this branch into two topic branches, the todo list could be edited like this:"
msgstr "O único commit nesta lista que não está relacionado ao CMake pode muito bem ter sido motivado ao trabalhar na correção de todos os erros introduzidos durante a mudança para o CMake, porém ele lida com um interesse diferente. Para dividir esse ramo em dois tópicos, a lista de tarefas pode ser editada desta maneira:"

#. type: delimited block -
#: en/git-rebase.txt:1246
#, no-wrap, priority:100
msgid ""
"pick afbecd http: add support for TLS v1.3\n"
"label tlsv1.3\n"
msgstr ""
"escolha afbecd http: adicione a compatibilidade para o TLS v1.3\n"
"label tlsv1.3\n"

#. type: delimited block -
#: en/git-rebase.txt:1253
#, no-wrap, priority:100
msgid ""
"reset onto\n"
"pick 192837 Switch from GNU Makefiles to CMake\n"
"pick 918273 Fix detection of OpenSSL in CMake\n"
"pick fdbaec Fix detection of cURL in CMake on Windows\n"
"pick 5a6c7e Document the switch to CMake\n"
"label cmake\n"
msgstr ""
"redefinir para\n"
"pick 192837 Alterna do GNU Makefiles para o CMake\n"
"pick 918273 Corrija a detecção do OpenSSL no CMake\n"
"pick fdbaec Corrija a detecção da cURL no CMake no Windows\n"
"pick 5a6c7e Documente a alteração para o CMake\n"
"label cmake\n"

#. type: delimited block -
#: en/git-rebase.txt:1257
#, no-wrap, priority:100
msgid ""
"reset onto\n"
"merge tlsv1.3\n"
"merge cmake\n"
msgstr ""
"reset onto\n"
"merge tlsv1.3\n"
"merge cmake\n"

#. type: Title =
#: en/git-receive-pack.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-receive-pack(1)"
msgstr "git-receive-pack(1)"

#. type: Plain text
#: en/git-receive-pack.txt:7
#, priority:90
msgid "git-receive-pack - Receive what is pushed into the repository"
msgstr "git-receive-pack - Recebe o que for impulsionado para o repositório"

#. type: Plain text
#: en/git-receive-pack.txt:13
#, no-wrap, priority:90
msgid "'git-receive-pack' <directory>\n"
msgstr "'git-receive-pack' <diretório>\n"

#. type: Plain text
#: en/git-receive-pack.txt:18
#, priority:90
msgid "Invoked by 'git send-pack' and updates the repository with the information fed from the remote end."
msgstr "Chamado através do comando 'git send-pack' e atualiza o repositório com as informações fornecidas pelo terminal remoto."

#. type: Plain text
#: en/git-receive-pack.txt:23
#, priority:90
msgid "This command is usually not invoked directly by the end user.  The UI for the protocol is on the 'git send-pack' side, and the program pair is meant to be used to push updates to remote repository.  For pull operations, see linkgit:git-fetch-pack[1]."
msgstr "Este comando geralmente não é invocado diretamente pelo usuário final.  O protocolo da interface do usuário está no lado 'git send pack', e o par de programas deve ser utilizado para enviar atualizações para o repositório remoto.  Para as operações \"pull\", veja see linkgit:git-fetch-pack[1]."

#. type: Plain text
#: en/git-receive-pack.txt:28
#, priority:90
msgid "The command allows for creation and fast-forwarding of sha1 refs (heads/tags) on the remote end (strictly speaking, it is the local end 'git-receive-pack' runs, but to the user who is sitting at the send-pack end, it is updating the remote.  Confused?)"
msgstr "O comando permite a criação e o encaminhamento rápido dos sha1 das refs (heads/tags) na extremidade remota (falando estritamente, é a extremidade local do comando 'git receive pack' executado, porém, para o usuário que está sentado na outra extremidade do pacote de envio, é atualizando o ramo remoto.  Confundiu?)"

#. type: Plain text
#: en/git-receive-pack.txt:31
#, priority:90
msgid "There are other real-world examples of using update and post-update hooks found in the Documentation/howto directory."
msgstr "Existem outros exemplos no mundo real da utilização dos ganchos de atualização e pós-atualização encontrados no diretório 'Documentation/howto'."

#. type: Plain text
#: en/git-receive-pack.txt:35
#, priority:90
msgid "'git-receive-pack' honours the receive.denyNonFastForwards config option, which tells it if updates to a ref should be denied if they are not fast-forwards."
msgstr "O coamndo 'git-receive-pack' respeita a opção de configuração `receive.denyNonFastForwards`, que informa se as atualizações de uma \"ref\" devem ser negadas caso não sejam rápidas."

#. type: Plain text
#: en/git-receive-pack.txt:38
#, priority:90
msgid "A number of other receive.* config options are available to tweak its behavior, see linkgit:git-config[1]."
msgstr "Uma quantidade de outras opções de configurações receive.* estão disponíveis para ajustar o seu comportamento, consulte linkgit:git-config[1]."

#. type: Plain text
#: en/git-receive-pack.txt:43
#, priority:90
msgid "The repository to sync into."
msgstr "O repositório para sincronizar."

#. type: Labeled list
#: en/git-receive-pack.txt:44 en/git-upload-pack.txt:39
#, ignore-same, no-wrap, priority:100
msgid "--http-backend-info-refs"
msgstr "--http-backend-info-refs"

#. type: Plain text
#: en/git-receive-pack.txt:48
#, priority:90
msgid "Used by linkgit:git-http-backend[1] to serve up `$GIT_URL/info/refs?service=git-receive-pack` requests. See `--http-backend-info-refs` in linkgit:git-upload-pack[1]."
msgstr "Utilizado por linkgit:git-http-backend[1] para servir até os pedido `$GIT_URL/info/refs?service=git-receive-pack`. Consulte `--http-backend-info-refs` em linkgit:git-upload-pack[1]."

#. type: Title -
#: en/git-receive-pack.txt:50
#, no-wrap, priority:90
msgid "PRE-RECEIVE HOOK"
msgstr "O GANCHO DE PRÉ-RECEBIMENTO"

#. type: Plain text
#: en/git-receive-pack.txt:54
#, priority:90
msgid "Before any ref is updated, if $GIT_DIR/hooks/pre-receive file exists and is executable, it will be invoked once with no parameters.  The standard input of the hook will be one line per ref to be updated:"
msgstr "Antes de qualquer \"ref\" ser atualizada, caso o arquivo '$GIT_DIR/hooks/pre-receive' existir e for executável, ele será chamado uma vez e sem parâmetros.  A entrada predefinido do gancho será uma linha por referência que será atualizada:"

#. type: Plain text
#: en/git-receive-pack.txt:56 en/git-receive-pack.txt:155
#, no-wrap, priority:90
msgid "       sha1-old SP sha1-new SP refname LF\n"
msgstr "       sha1-old SP sha1-new SP refname LF\n"

#. type: Plain text
#: en/git-receive-pack.txt:63
#, priority:90
msgid "The refname value is relative to $GIT_DIR; e.g. for the master head this is \"refs/heads/master\".  The two sha1 values before each refname are the object names for the refname before and after the update.  Refs to be created will have sha1-old equal to 0\\{40}, while refs to be deleted will have sha1-new equal to 0\\{40}, otherwise sha1-old and sha1-new should be valid objects in the repository."
msgstr "O valor do 'refname' é relativo ao `$GIT_DIR`; por exemplo, para a cabeçalho principal, isto é \"refs/heads/master\".  Os dois valores sha1 antes de cada 'refname' são os nomes dos objetos para o 'refname' antes e depois da atualização.  As refs que serão criadas terão um sha1 antigo igual a '0\\{40}', enquanto as refs que serão excluídas terão um sha1 novo igual a 0\\{40}, caso contrário, tanto o sha1 novo quanto o sha1 antigo devem ser objetos válidos no repositório."

#. type: Plain text
#: en/git-receive-pack.txt:70
#, priority:90
msgid "When accepting a signed push (see linkgit:git-push[1]), the signed push certificate is stored in a blob and an environment variable `GIT_PUSH_CERT` can be consulted for its object name.  See the description of `post-receive` hook for an example.  In addition, the certificate is verified using GPG and the result is exported with the following environment variables:"
msgstr "Ao aceitar um impulsionamento assinado (consulte linkgit:git-push[1]), o certificado deste impulsionamento assinado é armazenado numa bolha e numa variável `GIT_PUSH_CERT` do ambiente onde o seu nome do objeto pode ser consultado.  Um exemplo pode ser visto consultando a descrição do gancho `post-receive`.  Além disso, o certificado é verificado utilizando o GPG e seu resultado é exportado com as seguintes variáveis de ambiente:"

#. type: Labeled list
#: en/git-receive-pack.txt:71
#, ignore-same, no-wrap, priority:90
msgid "`GIT_PUSH_CERT_SIGNER`"
msgstr "`GIT_PUSH_CERT_SIGNER`"

#. type: Plain text
#: en/git-receive-pack.txt:74
#, priority:90
msgid "The name and the e-mail address of the owner of the key that signed the push certificate."
msgstr "O nome e o endereço do e-mail do proprietário da chave que assinou o certificado push."

#. type: Labeled list
#: en/git-receive-pack.txt:75
#, ignore-same, no-wrap, priority:90
msgid "`GIT_PUSH_CERT_KEY`"
msgstr "`GIT_PUSH_CERT_KEY`"

#. type: Plain text
#: en/git-receive-pack.txt:77
#, priority:90
msgid "The GPG key ID of the key that signed the push certificate."
msgstr "O ID da chave GPG da chave que assinou o certificado \"push\"."

#. type: Labeled list
#: en/git-receive-pack.txt:78
#, ignore-same, no-wrap, priority:90
msgid "`GIT_PUSH_CERT_STATUS`"
msgstr "`GIT_PUSH_CERT_STATUS`"

#. type: Plain text
#: en/git-receive-pack.txt:82
#, priority:90
msgid "The status of GPG verification of the push certificate, using the same mnemonic as used in `%G?` format of `git log` family of commands (see linkgit:git-log[1])."
msgstr "A condição da verificação do certificado GPG do impulsionamento utiliza o mesmo processo mnemônico de como é utilizado em `%G?`, formato da família de comandos `git log` (consulte linkgit:git-log[1])."

#. type: Labeled list
#: en/git-receive-pack.txt:83
#, ignore-same, no-wrap, priority:90
msgid "`GIT_PUSH_CERT_NONCE`"
msgstr "`GIT_PUSH_CERT_NONCE`"

#. type: Plain text
#: en/git-receive-pack.txt:89
#, priority:90
msgid "The nonce string the process asked the signer to include in the push certificate.  If this does not match the value recorded on the \"nonce\" header in the push certificate, it may indicate that the certificate is a valid one that is being replayed from a separate \"git push\" session."
msgstr "A sequência nonce que o processo solicitou ao assinante para incluir no certificado \"push\".  Caso isso não corresponda ao valor registrado no cabeçalho \"nonce\" no certificado \"push\", isso pode indicar que o certificado é válido e está sendo reproduzido numa sessão separada do comando \"git push\"."

#. type: Labeled list
#: en/git-receive-pack.txt:90
#, ignore-same, no-wrap, priority:90
msgid "`GIT_PUSH_CERT_NONCE_STATUS`"
msgstr "`GIT_PUSH_CERT_NONCE_STATUS`"

#. type: Labeled list
#: en/git-receive-pack.txt:91
#, ignore-same, no-wrap, priority:90
msgid "`UNSOLICITED`"
msgstr "`UNSOLICITED`"

#. type: Plain text
#: en/git-receive-pack.txt:94
#, priority:90
msgid "\"git push --signed\" sent a nonce when we did not ask it to send one."
msgstr "O comando \"git push --signed\" enviou um nonce quando não pedimos para enviar um."

#. type: Labeled list
#: en/git-receive-pack.txt:94
#, ignore-same, no-wrap, priority:90
msgid "`MISSING`"
msgstr "`MISSING`"

#. type: Plain text
#: en/git-receive-pack.txt:96
#, priority:90
msgid "\"git push --signed\" did not send any nonce header."
msgstr "O comando \"git push --signed\" não enviou nenhum cabeçalho nonce."

#. type: Labeled list
#: en/git-receive-pack.txt:96
#, ignore-same, no-wrap, priority:90
msgid "`BAD`"
msgstr "`BAD`"

#. type: Plain text
#: en/git-receive-pack.txt:98
#, priority:90
msgid "\"git push --signed\" sent a bogus nonce."
msgstr "O comando \"git push --signed\" enviou um falso nonce."

#. type: Labeled list
#: en/git-receive-pack.txt:98
#, ignore-same, no-wrap, priority:90
msgid "`OK`"
msgstr "`OK`"

#. type: Plain text
#: en/git-receive-pack.txt:100
#, priority:90
msgid "\"git push --signed\" sent the nonce we asked it to send."
msgstr "O comando \"git push --signed\" enviou o nonce que pedimos para ser enviado."

#. type: Labeled list
#: en/git-receive-pack.txt:100
#, ignore-same, no-wrap, priority:90
msgid "`SLOP`"
msgstr "`SLOP`"

#. type: Plain text
#: en/git-receive-pack.txt:104
#, priority:90
msgid "\"git push --signed\" sent a nonce different from what we asked it to send now, but in a previous session.  See `GIT_PUSH_CERT_NONCE_SLOP` environment variable."
msgstr "O comando \"git push --signed\" enviou um nonce diferente do que foi pedido para enviar agora, porém numa sessão anterior.  Consulte a variável de ambiente `GIT_PUSH_CERT_NONCE_SLOP`."

#. type: Labeled list
#: en/git-receive-pack.txt:105
#, ignore-same, no-wrap, priority:90
msgid "`GIT_PUSH_CERT_NONCE_SLOP`"
msgstr "`GIT_PUSH_CERT_NONCE_SLOP`"

#. type: Plain text
#: en/git-receive-pack.txt:113
#, priority:90
msgid "\"git push --signed\" sent a nonce different from what we asked it to send now, but in a different session whose starting time is different by this many seconds from the current session.  Only meaningful when `GIT_PUSH_CERT_NONCE_STATUS` says `SLOP`.  Also read about `receive.certNonceSlop` variable in linkgit:git-config[1]."
msgstr "O comando \"git push --signed\" enviou um nonce diferente do que foi pedido agora, porém numa sessão diferente, cujo horário do início e é diferente em muitos segundos da sessão atual.  So faz sentido quando `GIT_PUSH_CERT_NONCE_STATUS` diz `SLOP`.  Leia também sobre a variável `receive.certNonceSlop` no linkgit:git-config[1]."

#. type: Plain text
#: en/git-receive-pack.txt:116
#, priority:90
msgid "This hook is called before any refname is updated and before any fast-forward checks are performed."
msgstr "Este gancho é chamado antes que qualquer \"refname\" seja atualizado e antes que qualquer verificação de avanço rápido seja executada."

#. type: Plain text
#: en/git-receive-pack.txt:121
#, priority:90
msgid "If the pre-receive hook exits with a non-zero exit status no updates will be performed, and the update, post-receive and post-update hooks will not be invoked either.  This can be useful to quickly bail out if the update is not to be supported."
msgstr "Caso o gancho 'pre-receive' termine com uma condição diferente de zero, nenhuma atualização será executada, a atualização, os ganchos 'pre-receive' e 'post-update' também não serão invocados.  Isso pode ser útil para o resgate rápido caso a atualização não seja compatível."

#. type: Plain text
#: en/git-receive-pack.txt:123
#, priority:90
msgid "See the notes on the quarantine environment below."
msgstr "Veja as notas sobre o ambiente de quarentena abaixo."

#. type: Title -
#: en/git-receive-pack.txt:125
#, no-wrap, priority:90
msgid "UPDATE HOOK"
msgstr "GANCHO DE ATUALIZAÇÃO"

#. type: Plain text
#: en/git-receive-pack.txt:128
#, priority:90
msgid "Before each ref is updated, if $GIT_DIR/hooks/update file exists and is executable, it is invoked once per ref, with three parameters:"
msgstr "Antes de cada \"ref\" que será atualizada, caso o arquivo '$GIT_DIR/hooks/update' existir e for executável, ele será chamado uma vez por referência, com três parâmetros:"

#. type: Plain text
#: en/git-receive-pack.txt:130
#, no-wrap, priority:90
msgid "       $GIT_DIR/hooks/update refname sha1-old sha1-new\n"
msgstr "       $GIT_DIR/hooks/update refname sha1-old sha1-new\n"

#. type: Plain text
#: en/git-receive-pack.txt:137
#, priority:90
msgid "The refname parameter is relative to $GIT_DIR; e.g. for the master head this is \"refs/heads/master\".  The two sha1 arguments are the object names for the refname before and after the update.  Note that the hook is called before the refname is updated, so either sha1-old is 0\\{40} (meaning there is no such ref yet), or it should match what is recorded in refname."
msgstr "O parâmetro \"refname\" é relativo ao `$GIT_DIR`; por exemplo, para a cabeçalho principal, isto é \"refs/heads/master\".  Os dois argumentos sha1 são os nomes dos objetos para o \"refname\" antes e depois da atualização.  Observe que o gancho é chamado antes que o \"refname\" seja atualizado; portanto, o sha1 antigo é 0\\{40} (o que significa que essa \"ref\" ainda não existe) ou deve coincidir ao que está registrado no \"refname\"."

#. type: Plain text
#: en/git-receive-pack.txt:140
#, priority:90
msgid "The hook should exit with non-zero status if it wants to disallow updating the named ref.  Otherwise it should exit with zero."
msgstr "O gancho deve encerrar com uma condição diferente de zero caso queira impedir a atualização da \"ref\" informada.  Caso contrário, ele deve encerrar com zero."

#. type: Plain text
#: en/git-receive-pack.txt:145
#, priority:90
msgid "Successful execution (a zero exit status) of this hook does not ensure the ref will actually be updated, it is only a prerequisite.  As such it is not a good idea to send notices (e.g. email) from this hook.  Consider using the post-receive hook instead."
msgstr "Uma execução bem-sucedida (uma condição de encerramento com zero) deste gancho não garante que a \"ref\" seja realmente atualizada; é apenas um pré-requisito.  Como tal, não é uma boa ideia enviar avisos (por email por exemplo) deste gancho.  Em vez disso, considere utilizar o gancho pós-recebimento."

#. type: Title -
#: en/git-receive-pack.txt:147
#, no-wrap, priority:90
msgid "POST-RECEIVE HOOK"
msgstr "O GANCHO DO PÓS-RECEBIMENTO"

#. type: Plain text
#: en/git-receive-pack.txt:153
#, priority:90
msgid "After all refs were updated (or attempted to be updated), if any ref update was successful, and if $GIT_DIR/hooks/post-receive file exists and is executable, it will be invoked once with no parameters.  The standard input of the hook will be one line for each successfully updated ref:"
msgstr "Depois da atualização de todas as refs (ou que tentaram ser atualizadas), caso alguma atualização seja bem-sucedida e se o arquivo '$GIT_DIR/hooks/post-receive' existir e for executável, ele será chamado uma vez sem parâmetros.  A entrada padrão do gancho será uma linha para cada 'ref' atualizada com êxito:"

#. type: Plain text
#: en/git-receive-pack.txt:163
#, priority:90
msgid "The refname value is relative to $GIT_DIR; e.g. for the master head this is \"refs/heads/master\".  The two sha1 values before each refname are the object names for the refname before and after the update.  Refs that were created will have sha1-old equal to 0\\{40}, while refs that were deleted will have sha1-new equal to 0\\{40}, otherwise sha1-old and sha1-new should be valid objects in the repository."
msgstr "O valor do 'refname' é relativo ao `$GIT_DIR`; por exemplo, para a cabeçalho principal, isto é \"refs/heads/master\".  Os dois valores sha1 antes de cada 'refname' são os nomes dos objetos para o 'refname' antes e depois da atualização.  As refs que serão criadas terão um sha1 antigo igual a '0\\{40}', enquanto as refs que serão excluídas terão um sha1 novo igual a 0\\{40}, caso contrário, tanto o sha1 novo quanto o sha1 antigo devem ser objetos válidos no repositório."

#. type: Plain text
#: en/git-receive-pack.txt:166
#, priority:90
msgid "The `GIT_PUSH_CERT*` environment variables can be inspected, just as in `pre-receive` hook, after accepting a signed push."
msgstr "As variáveis de ambiente `GIT_PUSH_CERT*` podem ser inspecionadas, assim como no gancho de `pré-recebimento`, após aceitar um \"push\" assinado."

#. type: Plain text
#: en/git-receive-pack.txt:172
#, priority:90
msgid "Using this hook, it is easy to generate mails describing the updates to the repository.  This example script sends one mail message per ref listing the commits pushed to the repository, and logs the push certificates of signed pushes with good signatures to a logger service:"
msgstr "Com a utilização deste gancho, é fácil gerar e-mails descrevendo as atualizações no repositório.  Este script de demonstração envia uma mensagem de e-mail listando cada \"ref\" dos commits impulsionados ao repositório e faz o registro dos certificados dos impulsionamentos assinados com boas assinaturas num serviço para o registro dos eventos:"

#. type: delimited block -
#: en/git-receive-pack.txt:197
#, no-wrap, priority:90
msgid ""
"#!/bin/sh\n"
"# mail out commit update information.\n"
"while read oval nval ref\n"
"do\n"
"\tif expr \"$oval\" : '0*$' >/dev/null\n"
"\tthen\n"
"\t\techo \"Created a new ref, with the following commits:\"\n"
"\t\tgit rev-list --pretty \"$nval\"\n"
"\telse\n"
"\t\techo \"New commits:\"\n"
"\t\tgit rev-list --pretty \"$nval\" \"^$oval\"\n"
"\tfi |\n"
"\tmail -s \"Changes to ref $ref\" commit-list@mydomain\n"
"done\n"
"# log signed push certificate, if any\n"
"if test -n \"${GIT_PUSH_CERT-}\" && test ${GIT_PUSH_CERT_STATUS} = G\n"
"then\n"
"\t(\n"
"\t\techo expected nonce is ${GIT_PUSH_NONCE}\n"
"\t\tgit cat-file blob ${GIT_PUSH_CERT}\n"
"\t) | mail -s \"push certificate from $GIT_PUSH_CERT_SIGNER\" push-log@mydomain\n"
"fi\n"
"exit 0\n"
msgstr ""
"#!/bin/sh\n"
"# envie as informações das atualizações dos commits por e-mail.\n"
"while read oval nval ref\n"
"do\n"
"\tif expr \"$oval\" : '0*$' >/dev/null\n"
"\tthen\n"
"\t\techo \"Foi criado uma nova ref, com os seguintes commits:\"\n"
"\t\tgit rev-list --pretty \"$nval\"\n"
"\telse\n"
"\t\techo \"Novos commits:\"\n"
"\t\tgit rev-list --pretty \"$nval\" \"^$oval\"\n"
"\tfi |\n"
"\tmail -s \"As alterações para a ref $ref\" commit-list@mydomain\n"
"done\n"
"# registre o certificado da assinatura push, caso exista\n"
"if test -n \"${GIT_PUSH_CERT-}\" && test ${GIT_PUSH_CERT_STATUS} = G\n"
"then\n"
"\t(\n"
"\t\techo expected nonce is ${GIT_PUSH_NONCE}\n"
"\t\tgit cat-file blob ${GIT_PUSH_CERT}\n"
"\t) | mail -s \"certificado push do $GIT_PUSH_CERT_SIGNER\" push-log@mydomain\n"
"fi\n"
"exit 0\n"

#. type: Plain text
#: en/git-receive-pack.txt:201
#, priority:90
msgid "The exit code from this hook invocation is ignored, however a non-zero exit code will generate an error message."
msgstr "O código de encerramento vindo desta invocação do gancho é ignorado; no entanto, um código de encerramento diferente de zero gera uma mensagem de erro."

#. type: Plain text
#: en/git-receive-pack.txt:207
#, priority:90
msgid "Note that it is possible for refname to not have sha1-new when this hook runs.  This can easily occur if another user modifies the ref after it was updated by 'git-receive-pack', but before the hook was able to evaluate it.  It is recommended that hooks rely on sha1-new rather than the current value of refname."
msgstr "Observe que é possível para o \"refname\" não ter um sha1 novo durante a execução deste gancho.  Isso pode ocorrer facilmente caso outro usuário modifique a \"ref\" após a atualização do 'git receive pack', porém antes que o gancho possa avaliá-lo.  Recomenda-se que os ganchos confiem no sha1 novo ao invés do valor atual do \"refname\"."

#. type: Title -
#: en/git-receive-pack.txt:209
#, no-wrap, priority:90
msgid "POST-UPDATE HOOK"
msgstr "O GANCHO DE PÓS-ATUALIZAÇÃO"

#. type: Plain text
#: en/git-receive-pack.txt:214
#, priority:90
msgid "After all other processing, if at least one ref was updated, and if $GIT_DIR/hooks/post-update file exists and is executable, then post-update will be called with the list of refs that have been updated.  This can be used to implement any repository wide cleanup tasks."
msgstr "Após todos os outros processamentos, se pelo menos uma 'ref' foi atualizada e caso o arquivo '$GIT_DIR/hooks/post-update' existe e é executável, então o \"post-update\" (pós-atualização) será chamada com a lista das 'refs' que foram atualizadas.  Isso pode ser utilizado para implementar qualquer outra tarefa de limpeza em todo o repositório."

#. type: Plain text
#: en/git-receive-pack.txt:218
#, priority:90
msgid "The exit code from this hook invocation is ignored; the only thing left for 'git-receive-pack' to do at that point is to exit itself anyway."
msgstr "O código de saída deste gancho de chamada é ignorado; a única coisa que resta para o 'git receive pack' nesse ponto é encerrar de qualquer maneira."

#. type: Plain text
#: en/git-receive-pack.txt:221
#, priority:90
msgid "This hook can be used, for example, to run `git update-server-info` if the repository is packed and is served via a dumb transport."
msgstr "Este gancho pode ser utilizado, por exemplo, para executar `git update server info` caso o repositório esteja empacotado e seja servido através de um transporte burro."

#. type: delimited block -
#: en/git-receive-pack.txt:225
#, no-wrap, priority:90
msgid ""
"#!/bin/sh\n"
"exec git update-server-info\n"
msgstr ""
"#!/bin/sh\n"
"exec git update-server-info\n"

#. type: Title -
#: en/git-receive-pack.txt:229
#, no-wrap, priority:90
msgid "QUARANTINE ENVIRONMENT"
msgstr "AMBIENTE DE QUARENTENA"

#. type: Plain text
#: en/git-receive-pack.txt:236
#, priority:90
msgid "When `receive-pack` takes in objects, they are placed into a temporary \"quarantine\" directory within the `$GIT_DIR/objects` directory and migrated into the main object store only after the `pre-receive` hook has completed. If the push fails before then, the temporary directory is removed entirely."
msgstr "Quando o `receive-pack` recebe os objetos, eles são colocados num diretório temporário de \"quarentena\" dentro do diretório `$GIT_DIR/objects` e migrados para o armazenamento dos objetos principais somente após a conclusão do gancho `pré-recebimento`. Caso o envio falhe antes, o diretório temporário será removido completamente."

#. type: Plain text
#: en/git-receive-pack.txt:238
#, priority:90
msgid "This has a few user-visible effects and caveats:"
msgstr "Isso tem alguns efeitos e advertências visíveis ao usuário:"

#. type: Plain text
#: en/git-receive-pack.txt:244
#, priority:90
msgid "Pushes which fail due to problems with the incoming pack, missing objects, or due to the `pre-receive` hook will not leave any on-disk data. This is usually helpful to prevent repeated failed pushes from filling up your disk, but can make debugging more challenging."
msgstr "Os impulsionamentos que falharem devido aos problemas com o pacote recebido, os objetos ausentes ou devido ao gancho do `pré-recebimento` não deixarão nenhum dado no disco. Geralmente é útil para impedir que impulsionamentos sem sucesso e de forma repetida preencham o seu disco, porém podem tornar a depuração muito mais desafiadora."

#. type: Plain text
#: en/git-receive-pack.txt:247
#, priority:90
msgid "Any objects created by the `pre-receive` hook will be created in the quarantine directory (and migrated only if it succeeds)."
msgstr "Quaisquer objetos criados pelo gancho `pre-receive` (recebimento prévio) serão criados no diretório de quarentena (e migrados apenas caso sejam bem-sucedidos)."

#. type: Plain text
#: en/git-receive-pack.txt:253
#, priority:90
msgid "The `pre-receive` hook MUST NOT update any refs to point to quarantined objects. Other programs accessing the repository will not be able to see the objects (and if the pre-receive hook fails, those refs would become corrupted). For safety, any ref updates from within `pre-receive` are automatically rejected."
msgstr "O gancho `pre-receive` NÃO DEVE atualizar nenhuma refs para apontar para os objetos em quarentena. Outros programas que acessam o repositório não poderão ver os objetos (e se o gancho do \"pre-receive\" falhar, estes refs serão corrompidos). Por questões de segurança, qualquer atualização do \"ref\" dento do `pre-receive` são rejeitadas automaticamente."

#. type: Plain text
#: en/git-receive-pack.txt:258
#, ignore-same, priority:90
msgid "linkgit:git-send-pack[1], linkgit:gitnamespaces[7]"
msgstr "linkgit:git-send-pack[1], linkgit:gitnamespaces[7]"

#. type: Title =
#: en/git-reflog.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-reflog(1)"
msgstr "git-reflog(1)"

#. type: Plain text
#: en/git-reflog.txt:7
#, priority:100
msgid "git-reflog - Manage reflog information"
msgstr "git-reflog - Gerencie informações do reflog"

#. type: Plain text
#: en/git-reflog.txt:13
#, no-wrap, priority:100
msgid "'git reflog' <subcommand> <options>\n"
msgstr "'git reflog' <subcomando> <opções>\n"

#. type: Plain text
#: en/git-reflog.txt:27
#, fuzzy, ignore-ellipsis, no-wrap, priority:100
#| msgid ""
#| "'git reflog' ['show'] [<log-options>] [<ref>]\n"
#| "'git reflog expire' [--expire=<time>] [--expire-unreachable=<time>]\n"
#| "\t[--rewrite] [--updateref] [--stale-fix]\n"
#| "\t[--dry-run | -n] [--verbose] [--all [--single-worktree] | <refs>...]\n"
#| "'git reflog delete' [--rewrite] [--updateref]\n"
#| "\t[--dry-run | -n] [--verbose] <ref>@\\{<specifier>\\}...\n"
#| "'git reflog exists' <ref>\n"
msgid ""
"'git reflog' ['show'] [<log-options>] [<ref>]\n"
"'git reflog expire' [--expire=<time>] [--expire-unreachable=<time>]\n"
"\t[--rewrite] [--updateref] [--stale-fix]\n"
"\t[--dry-run | -n] [--verbose] [--all [--single-worktree] | <refs>...]\n"
"'git reflog delete' [--rewrite] [--updateref]\n"
"\t[--dry-run | -n] [--verbose] <ref>@{<specifier>}...\n"
"'git reflog exists' <ref>\n"
msgstr ""
"'git reflog' ['show'] [<log-options>] [<ref>]\n"
"'git reflog expire' [--expire=<tempo>] [--expire-unreachable=<tempo>]\n"
"\t[--rewrite] [--updateref] [--stale-fix]\n"
"\t[--dry-run | -n] [--verbose] [--all [--single-worktree] | <refs>...]\n"
"'git reflog delete' [--rewrite] [--updateref]\n"
"\t[--dry-run | -n] [--verbose] <ref>@\\{<especificador>\\}...\n"
"'git reflog exists' <ref>\n"

#. type: Plain text
#: en/git-reflog.txt:35
#, priority:100
msgid "Reference logs, or \"reflogs\", record when the tips of branches and other references were updated in the local repository. Reflogs are useful in various Git commands, to specify the old value of a reference. For example, `HEAD@{2}` means \"where HEAD used to be two moves ago\", `master@{one.week.ago}` means \"where master used to point to one week ago in this local repository\", and so on. See linkgit:gitrevisions[7] for more details."
msgstr "Os registros log de referência ou \"reflogs\", registram quando o cume dos ramos, assim como, quais as outras referências que foram atualizadas no repositório local. Os \"reflogs\" são úteis para especificar o valor antigo de uma referência em vários comandos Git. Por exemplo, `HEAD@{2}` quer dizer \"para onde HEAD costumava estar há dois movimentos atrás\", `master@{one.week.ago}` quer dizer \"para onde o \"master\" costumava apontar uma semana atrás neste repositório local\" e assim por diante. Para mais detalhes consulte linkgit:gitrevisions[7]."

#. type: Plain text
#: en/git-reflog.txt:37
#, priority:100
msgid "This command manages the information recorded in the reflogs."
msgstr "Este comando gerencia as informações registradas nos \"reflogs\"."

#. type: Plain text
#: en/git-reflog.txt:44
#, priority:100
msgid "The \"show\" subcommand (which is also the default, in the absence of any subcommands) shows the log of the reference provided in the command-line (or `HEAD`, by default). The reflog covers all recent actions, and in addition the `HEAD` reflog records branch switching.  `git reflog show` is an alias for `git log -g --abbrev-commit --pretty=oneline`; see linkgit:git-log[1] for more information."
msgstr "O subcomando \"show\" (que também é o valor predefinido na ausência dos subcomandos) exibe o registro log da referência informada através da linha de comando (ou pela predefinição, `HEAD`). O \"reflog\" cobre todas as ações recentes assim como, o reflog `HEAD` registra a alternância do ramo.  O comando `git reflog show` é um apelido para `git log -g --abbrev-commit --pretty=oneline`; Para mais informações consulte linkgit:git-log[1]."

#. type: Plain text
#: en/git-reflog.txt:50
#, priority:100
msgid "The \"expire\" subcommand prunes older reflog entries. Entries older than `expire` time, or entries older than `expire-unreachable` time and not reachable from the current tip, are removed from the reflog.  This is typically not used directly by end users -- instead, see linkgit:git-gc[1]."
msgstr "O subcomando \"expire\" remove as entradas mais antigas do \"reflog\". As entradas serão removidas do \"reflog\" caso tenham o tempo anterior ao 'expire' ou `expire-unreachable`, assim como aquelas que estiverem inacessíveis.  Normalmente, isso não é utilizado de forma direta pelos usuários finais -- em vez disso, consulte linkgit:git-gc[1]."

#. type: Plain text
#: en/git-reflog.txt:55
#, priority:100
msgid "The \"delete\" subcommand deletes single entries from the reflog. Its argument must be an _exact_ entry (e.g. \"`git reflog delete master@{2}`\"). This subcommand is also typically not used directly by end users."
msgstr "O subcomando \"delete\" exclui as entradas únicas do reflog. O seu argumento deve ser uma entrada _exata_ (por exemplo, \"`git reflog delete master@{2}`\"). Este subcomando também não é utilizado diretamente pelos usuários finais."

#. type: Plain text
#: en/git-reflog.txt:59
#, priority:100
msgid "The \"exists\" subcommand checks whether a ref has a reflog.  It exits with zero status if the reflog exists, and non-zero status if it does not."
msgstr "O subcomando \"existe\" verifica se uma \"ref\" tem um reflog.  Encerra com a condição zero, caso o \"reflog\" exista, e a condição seja diferente de zero caso não exista."

#. type: Title ~
#: en/git-reflog.txt:64
#, no-wrap, priority:100
msgid "Options for `show`"
msgstr "Opções para `show`"

#. type: Plain text
#: en/git-reflog.txt:67
#, priority:100
msgid "`git reflog show` accepts any of the options accepted by `git log`."
msgstr "O `git reflog show` aceita qualquer uma das opções aceitas pelo comando `git log`."

#. type: Title ~
#: en/git-reflog.txt:70
#, no-wrap, priority:100
msgid "Options for `expire`"
msgstr "Opções para `expire`"

#. type: Plain text
#: en/git-reflog.txt:74
#, priority:100
msgid "Process the reflogs of all references."
msgstr "Processe os reflogs de todas as referências."

#. type: Labeled list
#: en/git-reflog.txt:75 en/rev-list-options.txt:210
#, ignore-same, no-wrap, priority:260
msgid "--single-worktree"
msgstr "--single-worktree"

#. type: Plain text
#: en/git-reflog.txt:79
#, priority:100
msgid "By default when `--all` is specified, reflogs from all working trees are processed. This option limits the processing to reflogs from the current working tree only."
msgstr "É predefinido que quando `--all` seja utilizado, os reflogs de todas as árvores de trabalho sejam processadas. Esta opção limita o processamento da reflogs apenas na árvore de trabalho atual."

#. type: Labeled list
#: en/git-reflog.txt:80
#, no-wrap, priority:100
msgid "--expire=<time>"
msgstr "--expire=<tempo>"

#. type: Plain text
#: en/git-reflog.txt:87
#, priority:100
msgid "Prune entries older than the specified time. If this option is not specified, the expiration time is taken from the configuration setting `gc.reflogExpire`, which in turn defaults to 90 days. `--expire=all` prunes entries regardless of their age; `--expire=never` turns off pruning of reachable entries (but see `--expire-unreachable`)."
msgstr "Remova os lançamentos mais antigos que o tempo informado. Caso esta opção não seja definida, o tempo da expiração será obtido com a opção de configuração `gc.reflogExpire`, que por sua vez a sua predefinição retorna para 90 dias. A opção `--expire=all` remove as entradas independentemente da idade; `--expire=never` desativa a remoção dos lançamentos acessíveis (porém consulte `--expire-unreachable`)."

#. type: Labeled list
#: en/git-reflog.txt:88
#, no-wrap, priority:100
msgid "--expire-unreachable=<time>"
msgstr "--expire-unreachable=<tempo>"

#. type: Plain text
#: en/git-reflog.txt:97
#, priority:100
msgid "Prune entries older than `<time>` that are not reachable from the current tip of the branch. If this option is not specified, the expiration time is taken from the configuration setting `gc.reflogExpireUnreachable`, which in turn defaults to 30 days. `--expire-unreachable=all` prunes unreachable entries regardless of their age; `--expire-unreachable=never` turns off early pruning of unreachable entries (but see `--expire`)."
msgstr "Remova os lançamentos mais antigos que o `<tempo>` que não sejam acessíveis através do cume atual do ramo. Caso esta opção não seja definida, o tempo da expiração será obtido com a opção de configuração `gc.reflogExpire`, que por sua vez a sua predefinição retorna para 90 dias. A opção `--expire-unreachable=all` remove as entradas não acessíveis independentemente da sua idade; `--expire-unreachable=never` desativa a remoção prévia dos lançamentos não acessíveis (porém consulte `--expire`)."

#. type: Labeled list
#: en/git-reflog.txt:98
#, ignore-same, no-wrap, priority:100
msgid "--updateref"
msgstr "--updateref"

#. type: Plain text
#: en/git-reflog.txt:102
#, priority:100
msgid "Update the reference to the value of the top reflog entry (i.e.  <ref>@\\{0\\}) if the previous top entry was pruned.  (This option is ignored for symbolic references.)"
msgstr "Atualize a referência ao valor da entrada do topo do \"reflog\" (por exemplo, <ref>@\\{0\\}) caso o topo do lançamento anterior tenha sido removido.  (Esta opção é ignorada para referências simbólicas.)"

#. type: Labeled list
#: en/git-reflog.txt:103
#, ignore-same, no-wrap, priority:100
msgid "--rewrite"
msgstr "--rewrite"

#. type: Plain text
#: en/git-reflog.txt:107
#, priority:100
msgid "If a reflog entry's predecessor is pruned, adjust its \"old\" SHA-1 to be equal to the \"new\" SHA-1 field of the entry that now precedes it."
msgstr "Caso o antecessor de uma entrada reflog seja removido, ajuste o seu SHA-1 \"antigo\" para ser igual ao \"novo\" campo SHA-1 da entrada que agora o precede."

#. type: Labeled list
#: en/git-reflog.txt:108
#, ignore-same, no-wrap, priority:100
msgid "--stale-fix"
msgstr "--stale-fix"

#. type: Plain text
#: en/git-reflog.txt:113
#, priority:100
msgid "Prune any reflog entries that point to \"broken commits\". A broken commit is a commit that is not reachable from any of the reference tips and that refers, directly or indirectly, to a missing commit, tree, or blob object."
msgstr "Elimine qualquer entradas no reflog que apontem para \"commits com problemas\". Um commit com problema (broken commit) é um commit que não pode ser acessado por nenhum topo de referência e que se tenha referência, direta ou indiretamente, a um objeto commit, árvore ou bolha ausente."

#. type: Plain text
#: en/git-reflog.txt:118
#, priority:100
msgid "This computation involves traversing all the reachable objects, i.e. it has the same cost as 'git prune'.  It is primarily intended to fix corruption caused by garbage collecting using older versions of Git, which didn't protect objects referred to by reflogs."
msgstr "Este cálculo envolve percorrer todos os objetos acessíveis, ou seja, tem o mesmo custo que o comando 'git prune'.  Ele se destina principalmente para corrigir a corrupção causada pela coleta de lixo usando as versões mais antigas do Git, que não protegiam os objetos referidos através dos \"reflogs\"."

#. type: Plain text
#: en/git-reflog.txt:123
#, priority:100
msgid "Do not actually prune any entries; just show what would have been pruned."
msgstr "Na verdade, não faça a poda de nenhuma entrada; apenas exiba o que teria sido podado."

#. type: Plain text
#: en/git-reflog.txt:126
#, priority:100
msgid "Print extra information on screen."
msgstr "Imprima informações extras na tela."

#. type: Title ~
#: en/git-reflog.txt:129
#, no-wrap, priority:100
msgid "Options for `delete`"
msgstr "Opções para o `delete`"

#. type: Plain text
#: en/git-reflog.txt:134
#, priority:100
msgid "`git reflog delete` accepts options `--updateref`, `--rewrite`, `-n`, `--dry-run`, and `--verbose`, with the same meanings as when they are used with `expire`."
msgstr "O `git reflog delete` aceita as opções `--updateref`, `--rewrite`, `-n`, `--dry-run`, e `--verbose`, com os mesmos significados de quando são utilizadas com `expirar`."

#. type: Title =
#: en/git-remote-ext.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-remote-ext(1)"
msgstr "git-remote-ext(1)"

#. type: Plain text
#: en/git-remote-ext.txt:7
#, priority:90
msgid "git-remote-ext - Bridge smart transport to external command."
msgstr "git-remote-ext - Ponte de transporte inteligente para um comando externo."

#. type: Plain text
#: en/git-remote-ext.txt:12
#, ignore-ellipsis, no-wrap, priority:90
msgid "git remote add <nick> \"ext::<command>[ <arguments>...]\"\n"
msgstr "git remote e <nick> \"ext::<comando>[ <argumentos>...]\"\n"

#. type: Plain text
#: en/git-remote-ext.txt:17
#, priority:90
msgid "This remote helper uses the specified '<command>' to connect to a remote Git server."
msgstr "Este auxiliar remoto utiliza o '<comando>' informado para se conectar num servidor Git remoto."

#. type: Plain text
#: en/git-remote-ext.txt:23
#, priority:90
msgid "Data written to stdin of the specified '<command>' is assumed to be sent to a git:// server, git-upload-pack, git-receive-pack or git-upload-archive (depending on situation), and data read from stdout of <command> is assumed to be received from the same service."
msgstr "Assume-se que os dados gravados no stdin do '<comando>' informado sejam encaminhados para um servidor `git://`, `git-upload-pack`, `git-receive-pack` ou `git-upload-archive` (dependendo da situação) e os dados lidos do stdout do <comando> assume-se ter sido recebido do mesmo serviço."

#. type: Plain text
#: en/git-remote-ext.txt:25
#, priority:90
msgid "Command and arguments are separated by an unescaped space."
msgstr "O comando e os argumentos são separados por um espaço sem escape."

#. type: Plain text
#: en/git-remote-ext.txt:27
#, priority:90
msgid "The following sequences have a special meaning:"
msgstr "As seguintes sequências têm um significado especial:"

#. type: Labeled list
#: en/git-remote-ext.txt:28
#, no-wrap, priority:90
msgid "'% '"
msgstr "'% '"

#. type: Plain text
#: en/git-remote-ext.txt:30
#, priority:90
msgid "Literal space in command or argument."
msgstr "Espaço literal em comando ou argumento."

#. type: Labeled list
#: en/git-remote-ext.txt:31 en/pretty-formats.txt:124
#, no-wrap, priority:260
msgid "'%%'"
msgstr "'%%'"

#. type: Plain text
#: en/git-remote-ext.txt:33
#, priority:90
msgid "Literal percent sign."
msgstr "Sinal de porcentagem literal."

#. type: Labeled list
#: en/git-remote-ext.txt:34 en/pretty-formats.txt:237
#, ignore-same, no-wrap, priority:260
msgid "'%s'"
msgstr "'%s'"

#. type: Plain text
#: en/git-remote-ext.txt:37
#, priority:90
msgid "Replaced with name (receive-pack, upload-pack, or upload-archive) of the service Git wants to invoke."
msgstr "Substituído pelo nome (`receive-pack` (pacote de recebimento), `upload-pack` (pacote de upload), ou `upload-archive` (arquivo de upload)) do serviço que o Git deseja invocar."

#. type: Labeled list
#: en/git-remote-ext.txt:38 en/pretty-formats.txt:234
#, ignore-same, no-wrap, priority:260
msgid "'%S'"
msgstr "'%S'"

#. type: Plain text
#: en/git-remote-ext.txt:42
#, priority:90
msgid "Replaced with long name (git-receive-pack, git-upload-pack, or git-upload-archive) of the service Git wants to invoke."
msgstr "Substituído pelo longo nome (`git-receive-pack`, `git-upload-pack`, ou `git-upload-archive`) do serviço que o Git deseja invocar."

#. type: Labeled list
#: en/git-remote-ext.txt:43
#, no-wrap, priority:90
msgid "'%G' (must be the first characters in an argument)"
msgstr "'%G' (devem ser os primeiros caracteres num argumento)"

#. type: Plain text
#: en/git-remote-ext.txt:49
#, priority:90
msgid "This argument will not be passed to '<command>'. Instead, it will cause the helper to start by sending git:// service requests to the remote side with the service field set to an appropriate value and the repository field set to rest of the argument. Default is not to send such a request."
msgstr "Este argumento não será encaminhado para '<comando>'. Instead, it will cause the helper to start by sending git:// service requests to the remote side with the service field set to an appropriate value and the repository field set to rest of the argument. Default is not to send such a request."

#. type: Plain text
#: en/git-remote-ext.txt:52
#, priority:90
msgid "This is useful if remote side is git:// server accessed over some tunnel."
msgstr "É útil caso o lado remoto seja um servidor git:// acessado por algum túnel."

#. type: Labeled list
#: en/git-remote-ext.txt:53
#, no-wrap, priority:90
msgid "'%V' (must be first characters in argument)"
msgstr "'%V' (deve ser o primeiro caractere no argumento)"

#. type: Plain text
#: en/git-remote-ext.txt:57
#, priority:90
msgid "This argument will not be passed to '<command>'. Instead it sets the vhost field in the git:// service request (to rest of the argument).  Default is not to send vhost in such request (if sent)."
msgstr "Este argumento não será encaminhado para '<comando>'. Em vez disso, define o campo vhost na solicitação do serviço 'git://' (para o restante do argumento).  A predefinição é não enviar o vhost em tal solicitação (caso seja enviada)."

#. type: Title -
#: en/git-remote-ext.txt:59 en/git-remote-fd.txt:32
#, no-wrap, priority:90
msgid "ENVIRONMENT VARIABLES"
msgstr "VARIÁVEIS DO AMBIENTE"

#. type: Labeled list
#: en/git-remote-ext.txt:61 en/git-remote-fd.txt:33
#, ignore-same, no-wrap, priority:90
msgid "GIT_TRANSLOOP_DEBUG"
msgstr "GIT_TRANSLOOP_DEBUG"

#. type: Plain text
#: en/git-remote-ext.txt:63 en/git-remote-fd.txt:35
#, priority:90
msgid "If set, prints debugging information about various reads/writes."
msgstr "Se definido, imprime as informações de depuração sobre várias leituras/gravações."

#. type: Title -
#: en/git-remote-ext.txt:65
#, no-wrap, priority:90
msgid "ENVIRONMENT VARIABLES PASSED TO COMMAND"
msgstr "VARIÁVEIS DO AMBIENTE ENCAMINHADA AO COMANDO"

#. type: Labeled list
#: en/git-remote-ext.txt:67
#, ignore-same, no-wrap, priority:90
msgid "GIT_EXT_SERVICE"
msgstr "GIT_EXT_SERVICE"

#. type: Plain text
#: en/git-remote-ext.txt:70
#, ignore-ellipsis, priority:90
msgid "Set to long name (git-upload-pack, etc...) of service helper needs to invoke."
msgstr "Defina como um nome longo (git-upload-pack, etc...) do assistente de serviço que precisa ser invocado."

#. type: Labeled list
#: en/git-remote-ext.txt:71
#, ignore-same, no-wrap, priority:90
msgid "GIT_EXT_SERVICE_NOPREFIX"
msgstr "GIT_EXT_SERVICE_NOPREFIX"

#. type: Plain text
#: en/git-remote-ext.txt:74
#, ignore-ellipsis, priority:90
msgid "Set to long name (upload-pack, etc...) of service helper needs to invoke."
msgstr "Defina como um nome longo (upload-pack, etc...) do assistente de serviço que precisa ser invocado."

#. type: Plain text
#: en/git-remote-ext.txt:82
#, priority:90
msgid "This remote helper is transparently used by Git when you use commands such as \"git fetch <URL>\", \"git clone <URL>\", , \"git push <URL>\" or \"git remote add <nick> <URL>\", where <URL> begins with `ext::`.  Examples:"
msgstr "Este ajudante remoto é usado de forma transparente pelo Git quando você usa comandos como \"git fetch <URL>\", \"git clone <URL>\", \"git push <URL>\" ou \"git remote add <nick><URL>\", onde <URL>começa com `ext::`.  Exemplos:"

#. type: Labeled list
#: en/git-remote-ext.txt:83
#, no-wrap, priority:90
msgid "\"ext::ssh -i /home/foo/.ssh/somekey user&#64;host.example %S 'foo/repo'\""
msgstr "\"ext::ssh -i /home/foo/.ssh/somekey user&#64;host.example %S 'foo/repo'\""

#. type: Plain text
#: en/git-remote-ext.txt:87
#, priority:90
msgid "Like host.example:foo/repo, but use /home/foo/.ssh/somekey as keypair and user as user on remote side. This avoids needing to edit .ssh/config."
msgstr "Como 'host.example:foo/repo', porém utilize '/home/foo/.ssh/somekey' como um par de chaves e usuário como usuário no lado remoto. Isso evita a necessidade de se editar o '.ssh/config'."

#. type: Labeled list
#: en/git-remote-ext.txt:88
#, no-wrap, priority:90
msgid "\"ext::socat -t3600 - ABSTRACT-CONNECT:/git-server %G/somerepo\""
msgstr "\"ext::socat -t3600 - ABSTRACT-CONNECT:/git-server %G/somerepo\""

#. type: Plain text
#: en/git-remote-ext.txt:91
#, priority:90
msgid "Represents repository with path /somerepo accessible over git protocol at abstract namespace address /git-server."
msgstr "Representa o repositório com o caminho '/algumrepo' acessível através do protocolo git no endereço do espaço de nomes abstrato '/git-server'."

#. type: Labeled list
#: en/git-remote-ext.txt:92
#, no-wrap, priority:90
msgid "\"ext::git-server-alias foo %G/repo\""
msgstr "\"ext::git-server-alias foo %G/repo\""

#. type: Plain text
#: en/git-remote-ext.txt:98
#, priority:90
msgid "Represents a repository with path /repo accessed using the helper program \"git-server-alias foo\".  The path to the repository and type of request are not passed on the command line but as part of the protocol stream, as usual with git:// protocol."
msgstr "Representa um repositório com o caminho '/repo' acessado utilizando o programa auxiliar \"git-server-alias foo\".  O caminho para o repositório e o tipo da solicitação que não são encaminhados na linha de comando, porém como parte do fluxo do protocolo, como de costume, com o protocolo git://."

#. type: Labeled list
#: en/git-remote-ext.txt:99
#, no-wrap, priority:90
msgid "\"ext::git-server-alias foo %G/repo %Vfoo\""
msgstr "\"ext::git-server-alias foo %G/repo %Vfoo\""

#. type: Plain text
#: en/git-remote-ext.txt:105
#, priority:90
msgid "Represents a repository with path /repo accessed using the helper program \"git-server-alias foo\".  The hostname for the remote server passed in the protocol stream will be \"foo\" (this allows multiple virtual Git servers to share a link-level address)."
msgstr "Represents a repository with path /repo accessed using the helper program \"git-server-alias foo\".  O nome do host do servidor remoto passado no fluxo do protocolo será \"foo\" (permite que vários servidores Git virtuais compartilhem um endereço no nível do link)."

#. type: Labeled list
#: en/git-remote-ext.txt:106
#, no-wrap, priority:90
msgid "\"ext::git-server-alias foo %G/repo% with% spaces %Vfoo\""
msgstr "\"ext::git-server-alias foo %G/repo% with% spaces %Vfoo\""

#. type: Plain text
#: en/git-remote-ext.txt:112
#, priority:90
msgid "Represents a repository with path `/repo with spaces` accessed using the helper program \"git-server-alias foo\".  The hostname for the remote server passed in the protocol stream will be \"foo\" (this allows multiple virtual Git servers to share a link-level address)."
msgstr "Representa um repositório com o caminho `/repo com espaços` acessado utilizando o programa auxiliar \"git-server-alias foo\".  O nome do host do servidor remoto passado no fluxo do protocolo será \"foo\" (permite que vários servidores Git virtuais compartilhem um endereço no nível do link)."

#. type: Labeled list
#: en/git-remote-ext.txt:113
#, no-wrap, priority:90
msgid "\"ext::git-ssl foo.example /bar\""
msgstr "\"ext::git-ssl foo.examplo /bar\""

#. type: Plain text
#: en/git-remote-ext.txt:118
#, priority:90
msgid "Represents a repository accessed using the helper program \"git-ssl foo.example /bar\".  The type of request can be determined by the helper using environment variables (see above)."
msgstr "Representa um repositório acessado utilizando o programa auxiliar \"git-ssl foo.example /bar\".  O tipo de solicitação pode ser determinado através do auxiliar utilizando as variáveis do ambiente (veja acima)."

#. type: Title =
#: en/git-remote-fd.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-remote-fd(1)"
msgstr "git-remote-fd(1)"

#. type: Plain text
#: en/git-remote-fd.txt:7
#, priority:90
msgid "git-remote-fd - Reflect smart transport stream back to caller"
msgstr "git remote-fd - Reflita o fluxo de transporte inteligente de volta para quem chamou"

#. type: Plain text
#: en/git-remote-fd.txt:11
#, priority:90
msgid "\"fd::<infd>[,<outfd>][/<anything>]\" (as URL)"
msgstr "\"fd::<infd>[,<outfd>][/<anything>]\" (as URL)"

#. type: Plain text
#: en/git-remote-fd.txt:17
#, priority:90
msgid "This helper uses specified file descriptors to connect to a remote Git server.  This is not meant for end users but for programs and scripts calling git fetch, push or archive."
msgstr "Este auxiliar utiliza os descritores do arquivo definidos para se conectar num servidor Git remoto.  Isso não é para usuários finais, porém para programas e scripts que chamam `git fetch`, `push` ou `archive`."

#. type: Plain text
#: en/git-remote-fd.txt:23
#, priority:90
msgid "If only <infd> is given, it is assumed to be a bidirectional socket connected to remote Git server (git-upload-pack, git-receive-pack or git-upload-archive). If both <infd> and <outfd> are given, they are assumed to be pipes connected to a remote Git server (<infd> being the inbound pipe and <outfd> being the outbound pipe."
msgstr "Caso apenas o <infd> seja informado, será considerado um soquete bidirecional conectado com o servidor Git remoto (`git-upload-pack`, `git-receive-pack` ou `git-receive-pack` ou `git-upload-archive`). Caso ambos os <infd> e o <outfd> sejam informados, eles serão pipes conectados num servidor Git remoto (o <infd> sendo o pipe da entrada e o <outfd> sendo o da saída."

#. type: Plain text
#: en/git-remote-fd.txt:26
#, priority:90
msgid "It is assumed that any handshaking procedures have already been completed (such as sending service request for git://) before this helper is started."
msgstr "Supõe-se que qualquer procedimento de acordo (handshake) que já tenha sido concluído (como o envio da solicitação do serviço para o 'git://') antes da inicialização deste assistente."

#. type: Plain text
#: en/git-remote-fd.txt:30
#, priority:90
msgid "<anything> can be any string. It is ignored. It is meant for providing information to user in the URL in case that URL is displayed in some context."
msgstr "<anything> pode ser qualquer texto. É ignorado. Destina-se a prover informações ao usuário na URL, caso esta URL seja exibida em algum contexto."

#. type: Labeled list
#: en/git-remote-fd.txt:38
#, no-wrap, priority:90
msgid "`git fetch fd::17 master`"
msgstr "`git fetch fd::17 master`"

#. type: Plain text
#: en/git-remote-fd.txt:41
#, priority:90
msgid "Fetch master, using file descriptor #17 to communicate with git-upload-pack."
msgstr "Busque o mestre, utilizando o descritor do arquivo nº 17 para se comunicar com o 'git-upload-pack'."

#. type: Labeled list
#: en/git-remote-fd.txt:42
#, no-wrap, priority:90
msgid "`git fetch fd::17/foo master`"
msgstr "`git fetch fd::17/foo master`"

#. type: Labeled list
#: en/git-remote-fd.txt:45
#, no-wrap, priority:90
msgid "`git push fd::7,8 master (as URL)`"
msgstr "`git push fd::7,8 master (as URL)`"

#. type: Plain text
#: en/git-remote-fd.txt:49
#, priority:90
msgid "Push master, using file descriptor #7 to read data from git-receive-pack and file descriptor #8 to write data to same service."
msgstr "O 'push master', usando o descritor do arquivo #7 para ler os dados do 'git-receive-pack' e o descritor de arquivo #8 para gravar os dados no mesmo serviço."

#. type: Labeled list
#: en/git-remote-fd.txt:50
#, no-wrap, priority:90
msgid "`git push fd::7,8/bar master`"
msgstr "`git push fd::7,8/bar master`"

#. type: Title =
#: en/git-remote.txt:2
#, ignore-same, no-wrap, priority:220
msgid "git-remote(1)"
msgstr "git-remote(1)"

#. type: Plain text
#: en/git-remote.txt:7
#, priority:220
msgid "git-remote - Manage set of tracked repositories"
msgstr "git-remote - Gerencie o conjunto dos repositórios monitorados"

#. type: Plain text
#: en/git-remote.txt:25
#, ignore-ellipsis, no-wrap, priority:220
msgid ""
"'git remote' [-v | --verbose]\n"
"'git remote add' [-t <branch>] [-m <master>] [-f] [--[no-]tags] [--mirror=(fetch|push)] <name> <URL>\n"
"'git remote rename' [--[no-]progress] <old> <new>\n"
"'git remote remove' <name>\n"
"'git remote set-head' <name> (-a | --auto | -d | --delete | <branch>)\n"
"'git remote set-branches' [--add] <name> <branch>...\n"
"'git remote get-url' [--push] [--all] <name>\n"
"'git remote set-url' [--push] <name> <newurl> [<oldurl>]\n"
"'git remote set-url --add' [--push] <name> <newurl>\n"
"'git remote set-url --delete' [--push] <name> <URL>\n"
"'git remote' [-v | --verbose] 'show' [-n] <name>...\n"
"'git remote prune' [-n | --dry-run] <name>...\n"
"'git remote' [-v | --verbose] 'update' [-p | --prune] [(<group> | <remote>)...]\n"
msgstr ""
"'git remote' [-v | --verbose]\n"
"'git remote add' [-t <branch>] [-m <master>] [-f] [--[no-]tags] [--mirror=(fetch|push)] <name> <URL>\n"
"'git remote rename' [--[no-]progress] <antigo> <novo>\n"
"'git remote remove' <nome>\n"
"'git remote set-head' <nome> (-a | --auto | -d | --delete | <ramo>)\n"
"'git remote set-branches' [--add] <nome> <ramo>...\n"
"'git remote get-url' [--push] [--all] <nome>\n"
"'git remote set-url' [--push] <nome> <newurl> [<oldurl>]\n"
"'git remote set-url --add' [--push] <nome> <newurl>\n"
"'git remote set-url --delete' [--push] <nome> <URL>\n"
"'git remote' [-v | --verbose] 'show' [-n] <nome>...\n"
"'git remote prune' [-n | --dry-run] <nome>...\n"
"'git remote' [-v | --verbose] 'update' [-p | --prune] [(<grupo> | <remoto>)...]\n"

#. type: Plain text
#: en/git-remote.txt:30
#, priority:220
msgid "Manage the set of repositories (\"remotes\") whose branches you track."
msgstr "Gerencie o conjunto de repositórios (\"remotos\") cujos ramos você monitora."

#. type: Plain text
#: en/git-remote.txt:41
#, priority:220
msgid "Be a little more verbose and show remote url after name.  For promisor remotes, also show which filter (`blob:none` etc.)  are configured.  NOTE: This must be placed between `remote` and subcommand."
msgstr "Seja um pouco mais detalhado e exiba o endereço URL remoto após o nome.  Para repositórios remotos promissores, mostre também qual filtro (`blob:none` etc.) está configurado.  OBSERVAÇÃO: Este deve ser colocado entre `remote` e subcommand."

#. type: Plain text
#: en/git-remote.txt:48
#, priority:220
msgid "With no arguments, shows a list of existing remotes.  Several subcommands are available to perform operations on the remotes."
msgstr "Sem argumentos, exibe uma lista dos ramos remotos existentes.  Vários subcomandos estão disponíveis para executar as operações nos ramos remotos."

#. type: Labeled list
#: en/git-remote.txt:49
#, no-wrap, priority:220
msgid "'add'"
msgstr "'add'"

#. type: Plain text
#: en/git-remote.txt:54
#, priority:220
msgid "Add a remote named <name> for the repository at <URL>.  The command `git fetch <name>` can then be used to create and update remote-tracking branches <name>/<branch>."
msgstr "Adiciona um ramo remoto chamado <nome> para o repositório na <URL>.  O comando `git fetch <nome>` pode ser utilizado para criar e atualizar os ramos monitorados remotamente <nome>/<ramo>."

#. type: Plain text
#: en/git-remote.txt:57
#, priority:220
msgid "With `-f` option, `git fetch <name>` is run immediately after the remote information is set up."
msgstr "Com a opção `-f`, o comando `git fetch <nome>` é executado imediatamente a informação remota seja configurada."

#. type: Plain text
#: en/git-remote.txt:60
#, priority:220
msgid "With `--tags` option, `git fetch <name>` imports every tag from the remote repository."
msgstr "Com a opção `--tags`, o `git fetch <nome>` importa cada tag do repositório remoto."

#. type: Plain text
#: en/git-remote.txt:63
#, priority:220
msgid "With `--no-tags` option, `git fetch <name>` does not import tags from the remote repository."
msgstr "Com a opção `--no-tags`, o `git fetch <nome>` não importa as tags do repositório remoto."

#. type: Plain text
#: en/git-remote.txt:66
#, priority:220
msgid "By default, only tags on fetched branches are imported (see linkgit:git-fetch[1])."
msgstr "É predefinido que apenas as tags recolhidas dos ramos são importadas (consulte linkgit:git-fetch[1])."

#. type: Plain text
#: en/git-remote.txt:72
#, priority:220
msgid "With `-t <branch>` option, instead of the default glob refspec for the remote to track all branches under the `refs/remotes/<name>/` namespace, a refspec to track only `<branch>` is created.  You can give more than one `-t <branch>` to track multiple branches without grabbing all branches."
msgstr "Com a opção `-t <ramo>`, em vez do 'glob refspec' predefinido para que o ramo remoto monitore todos os ramos sob o espaço de nomes `refs/remotes/<nome>/`, um \"refspec\" para monitorar apenas o `<ramo>` que foi criado.  Você pode utilizar mais de um `-t <ramo>` para monitorar várias ramificações sem monitorar todas."

#. type: Plain text
#: en/git-remote.txt:75
#, priority:220
msgid "With `-m <master>` option, a symbolic-ref `refs/remotes/<name>/HEAD` is set up to point at remote's `<master>` branch. See also the set-head command."
msgstr "Com a opção `-m <master>`, uma \"ref\" simbólica `refs/remotes/<nome>/HEAD` é configurado para apontar para o ramo `<master>` do ramo remoto. Veja também o comando `set-head`."

#. type: Plain text
#: en/git-remote.txt:81
#, priority:220
msgid "When a fetch mirror is created with `--mirror=fetch`, the refs will not be stored in the 'refs/remotes/' namespace, but rather everything in 'refs/' on the remote will be directly mirrored into 'refs/' in the local repository. This option only makes sense in bare repositories, because a fetch would overwrite any local commits."
msgstr "Quando um espelho de busca é criado com a opção `--mirror=fetch`, as refs não serão armazenados no espaço de nomes 'refs/remotes/', porém tudo nas 'refs/' no ramo remoto será espelhado diretamente na 'refs/' em o repositório local. Esta opção faz sentido apenas nos repositórios vazios, porque uma busca substituirá quaisquer commits locais."

#. type: Plain text
#: en/git-remote.txt:84
#, priority:220
msgid "When a push mirror is created with `--mirror=push`, then `git push` will always behave as if `--mirror` was passed."
msgstr "Quando um espelho \"push\" é criado com a opção `--mirror=push`, então o comando `git push` sempre se comportará como se o `--mirror` fosse utilizado."

#. type: Labeled list
#: en/git-remote.txt:85
#, no-wrap, priority:220
msgid "'rename'"
msgstr "'rename'"

#. type: Plain text
#: en/git-remote.txt:89
#, priority:220
msgid "Rename the remote named <old> to <new>. All remote-tracking branches and configuration settings for the remote are updated."
msgstr "Renomeie o ramo remoto chamado `<old>` para `<novo>`. Todos os ramos monitorados remotamente e as suas definições de configuração para o ramo remoto são atualizados."

#. type: Plain text
#: en/git-remote.txt:93
#, priority:220
msgid "In case <old> and <new> are the same, and <old> is a file under `$GIT_DIR/remotes` or `$GIT_DIR/branches`, the remote is converted to the configuration file format."
msgstr "Caso <antigo> e <novo> sejam iguais, e <old> seja um arquivo existente no `$GIT_DIR/remotes` ou `$GIT_DIR/branches`, o ramo remoto será convertido para o formato do arquivo de configuração."

#. type: Labeled list
#: en/git-remote.txt:94
#, no-wrap, priority:220
msgid "'remove'"
msgstr "'remove'"

#. type: Labeled list
#: en/git-remote.txt:95
#, no-wrap, priority:220
msgid "'rm'"
msgstr "'rm'"

#. type: Plain text
#: en/git-remote.txt:99
#, priority:220
msgid "Remove the remote named <name>. All remote-tracking branches and configuration settings for the remote are removed."
msgstr "Remova o ramo remoto chamado `<nome>`. Todos os ramos monitorados remotamente e as suas definições de configuração para o ramo remoto são atualizados."

#. type: Labeled list
#: en/git-remote.txt:100
#, no-wrap, priority:220
msgid "'set-head'"
msgstr "'set-head'"

#. type: Plain text
#: en/git-remote.txt:109
#, priority:220
msgid "Sets or deletes the default branch (i.e. the target of the symbolic-ref `refs/remotes/<name>/HEAD`) for the named remote. Having a default branch for a remote is not required, but allows the name of the remote to be specified in lieu of a specific branch. For example, if the default branch for `origin` is set to `master`, then `origin` may be specified wherever you would normally specify `origin/master`."
msgstr "Define ou exclui o ramo predefinido (ou seja, o destino da ref simbólica `refs/remotes/<nome>/HEAD`) do ramo remoto informado. Não é necessário ter um ramo remoto predefinido para o ramo remoto, porém permite que o nome do ramo remoto seja utilizado no lugar de um ramo específico. Como por exemplo, caso o ramo predefinido para `origin` estiver definido como `master`, então `origin` poderá ser definido onde quer que você normalmente definiria `origin/master`."

#. type: Plain text
#: en/git-remote.txt:111
#, priority:220
msgid "With `-d` or `--delete`, the symbolic ref `refs/remotes/<name>/HEAD` is deleted."
msgstr "Com `-d` ou `--delete`, a referência simbólica `refs/remotes/<nome>/HEAD` é excluída."

#. type: Plain text
#: en/git-remote.txt:118
#, priority:220
msgid "With `-a` or `--auto`, the remote is queried to determine its `HEAD`, then the symbolic-ref `refs/remotes/<name>/HEAD` is set to the same branch. e.g., if the remote `HEAD` is pointed at `next`, `git remote set-head origin -a` will set the symbolic-ref `refs/remotes/origin/HEAD` to `refs/remotes/origin/next`. This will only work if `refs/remotes/origin/next` already exists; if not it must be fetched first."
msgstr "Com `-a` ou `--auto`, o ramo remoto é consultado para determinar o seu `HEAD`, então a referência simbólica `refs/remotes/<nome>/HEAD` é definida no mesmo ramo. Como por exemplo, caso o `HEAD` remoto aponte para `next`, o comando `git remote set-head origin -a` definirá a referência remota `refs/remotes/origin/HEAD` para `refs/remotes/origin/next`. Isso só funcionará caso o `refs/remotes/origin/next` já existir; caso contrário, deve ser buscado (fetched) primeiro."

#. type: Plain text
#: en/git-remote.txt:123
#, priority:220
msgid "Use `<branch>` to set the symbolic-ref `refs/remotes/<name>/HEAD` explicitly. e.g., `git remote set-head origin master` will set the symbolic-ref `refs/remotes/origin/HEAD` to `refs/remotes/origin/master`. This will only work if `refs/remotes/origin/master` already exists; if not it must be fetched first."
msgstr "Utilize o `<ramo>` para definir explicitamente a referência simbólica `refs/remotes/<nome>/HEAD`. Como por exemplo, o comando `git remote set-head origin master` definirá a referência remota `refs/remotes/origin/HEAD` para `refs/remotes/origin/master`. Isso só funcionará caso o `refs/remotes/origin/master` já existir; caso contrário, deve ser buscado (fetched) primeiro."

#. type: Labeled list
#: en/git-remote.txt:125
#, no-wrap, priority:220
msgid "'set-branches'"
msgstr "'set-branches'"

#. type: Plain text
#: en/git-remote.txt:130
#, priority:220
msgid "Changes the list of branches tracked by the named remote.  This can be used to track a subset of the available remote branches after the initial setup for a remote."
msgstr "Altera a lista das ramificações monitoradas pelo ramo remoto informado.  Pode ser utilizado para monitorar um subconjunto das ramificações remotas disponíveis após a configuração inicial de um ramo remoto."

#. type: Plain text
#: en/git-remote.txt:133
#, priority:220
msgid "The named branches will be interpreted as if specified with the `-t` option on the `git remote add` command line."
msgstr "Os ramos informados serão interpretados como se fossem definidos com a opção `-t` na linha de comando `git remote add`."

#. type: Plain text
#: en/git-remote.txt:136
#, priority:220
msgid "With `--add`, instead of replacing the list of currently tracked branches, adds to that list."
msgstr "Com `--add`, em vez de substituir a lista das ramificações monitoradas no momento, será adicionada a lista."

#. type: Labeled list
#: en/git-remote.txt:137
#, no-wrap, priority:220
msgid "'get-url'"
msgstr "'get-url'"

#. type: Plain text
#: en/git-remote.txt:141
#, priority:220
msgid "Retrieves the URLs for a remote. Configurations for `insteadOf` and `pushInsteadOf` are expanded here. By default, only the first URL is listed."
msgstr "Recupera as URLs para um ramo remoto. As configurações para o `ratherOf` e `pushInsteadOf` são expandidas aqui. É predefinido que, apenas a primeira URL é listada."

#. type: Plain text
#: en/git-remote.txt:143
#, priority:220
msgid "With `--push`, push URLs are queried rather than fetch URLs."
msgstr "Com o `--push`, as URLs 'push' são apenas consultadas em vez de buscar as URLs."

#. type: Plain text
#: en/git-remote.txt:145
#, priority:220
msgid "With `--all`, all URLs for the remote will be listed."
msgstr "Com `--all`, todas as URLs para o ramo remoto serão listadas."

#. type: Labeled list
#: en/git-remote.txt:146
#, no-wrap, priority:220
msgid "'set-url'"
msgstr "'set-url'"

#. type: Plain text
#: en/git-remote.txt:151
#, priority:220
msgid "Changes URLs for the remote. Sets first URL for remote <name> that matches regex <oldurl> (first URL if no <oldurl> is given) to <newurl>. If <oldurl> doesn't match any URL, an error occurs and nothing is changed."
msgstr "Altera as URLs para o ramo remoto. Define a primeira URL para o <nome> remoto que coincida com à regex <oldurl> (primeira URL caso nenhuma <oldurl> seja informada) como <newurl>. Caso <oldurl> não coincida com nenhuma URL, ocorrerá um erro e nada será alterado."

#. type: Plain text
#: en/git-remote.txt:153
#, priority:220
msgid "With `--push`, push URLs are manipulated instead of fetch URLs."
msgstr "Com o `--push`, as URLs 'push' são manipuladas em vez de buscar as URLs."

#. type: Plain text
#: en/git-remote.txt:155
#, priority:220
msgid "With `--add`, instead of changing existing URLs, new URL is added."
msgstr "Com `--add`, em vez de alterar as URLs existentes, uma nova URL é adicionada."

#. type: Plain text
#: en/git-remote.txt:159
#, priority:220
msgid "With `--delete`, instead of changing existing URLs, all URLs matching regex <URL> are deleted for remote <name>.  Trying to delete all non-push URLs is an error."
msgstr "Com `--delete`, em vez de alterar as URLs existentes, todas as URLs coincidentes à expressão regular <URL> são excluídas para o ramo remoto <nome>.  Tentar excluir todas as URLs onde um push não foi feito é um erro."

#. type: Plain text
#: en/git-remote.txt:166
#, priority:220
msgid "Note that the push URL and the fetch URL, even though they can be set differently, must still refer to the same place.  What you pushed to the push URL should be what you would see if you immediately fetched from the fetch URL.  If you are trying to fetch from one place (e.g. your upstream) and push to another (e.g.  your publishing repository), use two separate remotes."
msgstr "Observe que a URL de envio e a URL de busca, mesmo que possam ser definidos de maneira diferente, ainda devem se referir ao mesmo local.  O que você impulsionou para a URL de envio deve ser o que você veria se buscasse imediatamente a URL de busca.  Caso esteja tentando buscar de um lugar (por exemplo, a sua \"upstream\") e enviar para outro (por exemplo, o seu repositório de publicação), utilize dois ramos remotos separados."

#. type: Labeled list
#: en/git-remote.txt:168
#, no-wrap, priority:220
msgid "'show'"
msgstr "'show'"

#. type: Plain text
#: en/git-remote.txt:171
#, priority:220
msgid "Gives some information about the remote <name>."
msgstr "Fornece algumas informações sobre o ramo remoto <nome>."

#. type: Plain text
#: en/git-remote.txt:174
#, priority:220
msgid "With `-n` option, the remote heads are not queried first with `git ls-remote <name>`; cached information is used instead."
msgstr "Com a opção `-n`, os cabeçalhos remotos não são consultadas primeiro com o comando `git ls remote`; as informações em cache são utilizadas em vez disso."

#. type: Labeled list
#: en/git-remote.txt:175
#, no-wrap, priority:220
msgid "'prune'"
msgstr "'prune'"

#. type: Plain text
#: en/git-remote.txt:182
#, priority:220
msgid "Deletes stale references associated with <name>. By default, stale remote-tracking branches under <name> are deleted, but depending on global configuration and the configuration of the remote we might even prune local tags that haven't been pushed there. Equivalent to `git fetch --prune <name>`, except that no new references will be fetched."
msgstr "Exclui as referências antigas associadas com <nome>. É predefinido que as ramificações antigas monitoradas remotamente sob <nome> são excluídas, porém, dependendo da configuração global e da configuração do ramo remoto, podemos até remover as tags locais que não foram enviadas para lá. É o equivalente ao comando `git fetch --prune <nome>`, exceto que nenhuma nova referência será buscada."

#. type: Plain text
#: en/git-remote.txt:185
#, priority:220
msgid "See the PRUNING section of linkgit:git-fetch[1] for what it'll prune depending on various configuration."
msgstr "Veja a seção 'PRUNING' do linkgit:git-fetch[1] para saber o que será removido dependendo das várias configurações."

#. type: Plain text
#: en/git-remote.txt:188
#, priority:220
msgid "With `--dry-run` option, report what branches would be pruned, but do not actually prune them."
msgstr "Com a opção `--dry-run`, relate quais os ramos poderão ser eliminados, mas na verdade não os eliminem."

#. type: Labeled list
#: en/git-remote.txt:189
#, no-wrap, priority:220
msgid "'update'"
msgstr "'update'"

#. type: Plain text
#: en/git-remote.txt:197
#, priority:220
msgid "Fetch updates for remotes or remote groups in the repository as defined by `remotes.<group>`. If neither group nor remote is specified on the command line, the configuration parameter remotes.default will be used; if remotes.default is not defined, all remotes which do not have the configuration parameter `remote.<name>.skipDefaultUpdate` set to true will be updated.  (See linkgit:git-config[1])."
msgstr "A captura das atualizações remoras ou em grupos remotos no repositório como definido em `remotes.<grupo>`.  Caso nenhum grupo local ou remoto seja especificado na linha de comandos, o parâmetro `remotes.default` será utilizado; caso `remotes.default` não esteja definido, todos os remotos que não possuem o parâmetro da configuração `remote.<nome>.skipDefaultUpdate` definido como `true` serão atualizados.  (Consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-remote.txt:199
#, priority:220
msgid "With `--prune` option, run pruning against all the remotes that are updated."
msgstr "Com a opção `--prune`, execute a poda em todos os ramos remotos que estão atualizados."

#. type: Plain text
#: en/git-remote.txt:207
#, priority:220
msgid "The remote configuration is achieved using the `remote.origin.url` and `remote.origin.fetch` configuration variables.  (See linkgit:git-config[1])."
msgstr "A configuração remota é arquivada utilizando as configurações das variáveis `remote.origin.url` e `remote.origin.fetch`. (Consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-remote.txt:212
#, priority:220
msgid "On success, the exit status is `0`."
msgstr "Em casos bem sucedidos o estatus de saída é `0`."

#. type: Plain text
#: en/git-remote.txt:216
#, priority:220
msgid "When subcommands such as 'add', 'rename', and 'remove' can't find the remote in question, the exit status is `2`. When the remote already exists, the exit status is `3`."
msgstr "Quando subcomandos como 'add', 'rename', e 'remove' não conseguem encontrar o ramo remoto em questão, o status encerra com `2`. Quando o ramo remoto já existir, encerra com `3`."

#. type: Plain text
#: en/git-remote.txt:218
#, priority:220
msgid "On any other error, the exit status may be any other non-zero value."
msgstr "Com qualquer outro erro, o estado da saída pode ser qualquer outro valor diferente de zero."

#. type: Plain text
#: en/git-remote.txt:223
#, priority:220
msgid "Add a new remote, fetch, and check out a branch from it"
msgstr "Adicione um novo ramo remoto, busque e averigue um ramo dele"

#. type: delimited block -
#: en/git-remote.txt:248
#, ignore-ellipsis, no-wrap, priority:220
msgid ""
"$ git remote\n"
"origin\n"
"$ git branch -r\n"
"  origin/HEAD -> origin/master\n"
"  origin/master\n"
"$ git remote add staging git://git.kernel.org/.../gregkh/staging.git\n"
"$ git remote\n"
"origin\n"
"staging\n"
"$ git fetch staging\n"
"...\n"
"From git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n"
" * [new branch]      master     -> staging/master\n"
" * [new branch]      staging-linus -> staging/staging-linus\n"
" * [new branch]      staging-next -> staging/staging-next\n"
"$ git branch -r\n"
"  origin/HEAD -> origin/master\n"
"  origin/master\n"
"  staging/master\n"
"  staging/staging-linus\n"
"  staging/staging-next\n"
"$ git switch -c staging staging/master\n"
"...\n"
msgstr ""
"$ git remote\n"
"origin\n"
"$ git branch -r\n"
"  origin/HEAD -> origin/master\n"
"  origin/master\n"
"$ git remote add staging git://git.kernel.org/.../gregkh/staging.git\n"
"$ git remote\n"
"origin\n"
"staging\n"
"$ git fetch staging\n"
"...\n"
"Do git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging\n"
" * [new branch]      master     -> staging/master\n"
" * [new branch]      staging-linus -> staging/staging-linus\n"
" * [new branch]      staging-next -> staging/staging-next\n"
"$ git branch -r\n"
"  origin/HEAD -> origin/master\n"
"  origin/master\n"
"  staging/master\n"
"  staging/staging-linus\n"
"  staging/staging-next\n"
"$ git switch -c staging staging/master\n"
"...\n"

#. type: Plain text
#: en/git-remote.txt:251
#, priority:220
msgid "Imitate 'git clone' but track only selected branches"
msgstr "Imite o comando `git clone`, porém monitore apenas os ramos selecionados"

#. type: delimited block -
#: en/git-remote.txt:258
#, no-wrap, priority:220
msgid ""
"$ mkdir project.git\n"
"$ cd project.git\n"
"$ git init\n"
"$ git remote add -f -t master -m master origin git://example.com/git.git/\n"
"$ git merge origin\n"
msgstr ""
"$ mkdir project.git\n"
"$ cd project.git\n"
"$ git init\n"
"$ git remote add -f -t master -m master origin git://example.com/git.git/\n"
"$ git merge origin\n"

#. type: Plain text
#: en/git-remote.txt:266
#, ignore-same, priority:220
msgid "linkgit:git-fetch[1] linkgit:git-branch[1] linkgit:git-config[1]"
msgstr "linkgit:git-fetch[1] linkgit:git-branch[1] linkgit:git-config[1]"

#. type: Title =
#: en/git-repack.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-repack(1)"
msgstr "git-repack(1)"

#. type: Plain text
#: en/git-repack.txt:7
#, priority:100
msgid "git-repack - Pack unpacked objects in a repository"
msgstr "git-repack - Empacota os objetos descompactados num repositório"

#. type: Plain text
#: en/git-repack.txt:13
#, no-wrap, priority:100
msgid "'git repack' [-a] [-A] [-d] [-f] [-F] [-l] [-n] [-q] [-b] [-m] [--window=<n>] [--depth=<n>] [--threads=<n>] [--keep-pack=<pack-name>] [--write-midx]\n"
msgstr "'git repack' [-a] [-A] [-d] [-f] [-F] [-l] [-n] [-q] [-b] [-m] [--window=<n>] [--depth=<n>] [--threads=<n>] [--keep-pack=<nome-do-pacote>] [--write-midx]\n"

#. type: Plain text
#: en/git-repack.txt:20
#, priority:100
msgid "This command is used to combine all objects that do not currently reside in a \"pack\", into a pack.  It can also be used to re-organize existing packs into a single, more efficient pack."
msgstr "Este comando é utilizado para combinar todos os objetos que atualmente não residem num \"pacote\" dentro de um pacote.  Também pode ser utilizado para reorganizar os pacotes já existentes, num único pacote mais eficiente."

#. type: Plain text
#: en/git-repack.txt:39
#, priority:100
msgid "Instead of incrementally packing the unpacked objects, pack everything referenced into a single pack.  Especially useful when packing a repository that is used for private development. Use with `-d`.  This will clean up the objects that `git prune` leaves behind, but `git fsck --full --dangling` shows as dangling."
msgstr "Em vez de empacotar de forma incremental os objetos que foram descompactados, empacote tudo num único pacote.  É especialmente útil ao compactar um repositório utilizado para o desenvolvimento privado. Utilize com `-d`.  Isso limpará os objetos que o `git prune` deixa para trás, porém o `git fsck --full --dangling` será exibido como se estivesse pendurado."

#. type: Plain text
#: en/git-repack.txt:43
#, priority:100
msgid "Note that users fetching over dumb protocols will have to fetch the whole new pack in order to get any contained object, no matter how many other objects in that pack they already have locally."
msgstr "Observe que os usuários que buscam protocolos \"burros\" terão que buscar todo o novo pacote para obter o conteúdo de qualquer objeto, não importa quantos outros objetos nesse pacote eles já tenham localmente."

#. type: Plain text
#: en/git-repack.txt:48
#, priority:100
msgid "Promisor packfiles are repacked separately: if there are packfiles that have an associated \".promisor\" file, these packfiles will be repacked into another separate pack, and an empty \".promisor\" file corresponding to the new separate pack will be written."
msgstr "Os arquivos de pacotes \"promisor\" são empacotados separadamente, caso haja arquivos de pacote que tenham um arquivo \".promisor\" associado, estes arquivos de pacote serão reempacotados em outro pacote separado e um arquivo \".promisor\" vazio correspondente será gravado num novo pacote separado."

#. type: Plain text
#: en/git-repack.txt:59
#, priority:100
msgid "Same as `-a`, unless `-d` is used.  Then any unreachable objects in a previous pack become loose, unpacked objects, instead of being left in the old pack.  Unreachable objects are never intentionally added to a pack, even when repacking.  This option prevents unreachable objects from being immediately deleted by way of being left in the old pack and then removed.  Instead, the loose unreachable objects will be pruned according to normal expiry rules with the next 'git gc' invocation. See linkgit:git-gc[1]."
msgstr "O mesmo que `-a`, a menos que`-d` seja utilizado.  Em seguida todos os objetos inacessíveis num pacote anterior tornam-se objetos soltos e descompactados em vez de serem deixados no pacote antigo.  Objetos inacessíveis nunca são adicionados intencionalmente a um pacote, mesmo quando reempacotados.  Essa opção previne que os objetos inacessíveis sejam excluídos imediatamente por terem sido deixados no pacote antigo e então removidos.  Em vez disso, os objetos inacessíveis soltos serão removidos de acordo com as regras normais de expiração com a próxima invocação 'git gc'. Consulte linkgit:git-gc[1]."

#. type: Plain text
#: en/git-repack.txt:65
#, priority:100
msgid "After packing, if the newly created packs make some existing packs redundant, remove the redundant packs.  Also run 'git prune-packed' to remove redundant loose object files."
msgstr "Após o empacotamento, caso os pacotes recém-criados recriem pacotes redundantes dos pacotes já existentes, remova os pacotes redundantes.  Execute também o comando 'git prune-packed' para remover os arquivos redundantes dos objetos soltos."

#. type: Plain text
#: en/git-repack.txt:71
#, priority:100
msgid "Same as `-a`, unless `-d` is used. Then any unreachable objects are packed into a separate cruft pack. Unreachable objects can be pruned using the normal expiry rules with the next `git gc` invocation (see linkgit:git-gc[1]). Incompatible with `-k`."
msgstr "O mesmo que `-a`, a menos que `-d` seja usado. Em seguida, quaisquer objetos inacessíveis são embalados num pacote simples (cruft) separado. Os objetos inacessíveis podem ser removidos usando as regras normais de expiração com a próxima invocação do `git gc` (consulte linkgit:git-gc[1]). É incompatível com `-k`."

#. type: Plain text
#: en/git-repack.txt:76
#, priority:100
msgid "Expire unreachable objects older than `<approxidate>` immediately instead of waiting for the next `git gc` invocation.  Only useful with `--cruft -d`."
msgstr "Expira imediatamente os objetos inacessíveis que sejam mais antigos que `<aproximado>` em vez de esperar pela próxima chamada do `git gc`. Útil apenas com `--cruft -d`."

#. type: Plain text
#: en/git-repack.txt:80
#, priority:100
msgid "Pass the `--local` option to 'git pack-objects'. See linkgit:git-pack-objects[1]."
msgstr "Encaminha a opção `--local` para 'git pack-objects'. Consulte linkgit:git-pack-objects[1]."

#. type: Plain text
#: en/git-repack.txt:84
#, priority:100
msgid "Pass the `--no-reuse-delta` option to `git-pack-objects`, see linkgit:git-pack-objects[1]."
msgstr "Encaminha a opção `--no-reuse-delta` para `git-pack-objects`, consulte linkgit:git-pack-objects[1]."

#. type: Plain text
#: en/git-repack.txt:88
#, priority:100
msgid "Pass the `--no-reuse-object` option to `git-pack-objects`, see linkgit:git-pack-objects[1]."
msgstr "Encaminha a opção `--no-reuse-object` para `git-pack-objects`, consulte linkgit:git-pack-objects[1]."

#. type: Plain text
#: en/git-repack.txt:93
#, priority:100
msgid "Show no progress over the standard error stream and pass the `-q` option to 'git pack-objects'. See linkgit:git-pack-objects[1]."
msgstr "Não mostre nenhum progresso sobre o fluxo de erro padrão e repasse a opção `-q` para o comando 'git pack-objects'. Consulte linkgit:git-pack-objects[1]."

#. type: Plain text
#: en/git-repack.txt:100
#, priority:100
msgid "Do not update the server information with 'git update-server-info'.  This option skips updating local catalog files needed to publish this repository (or a direct copy of it)  over HTTP or FTP.  See linkgit:git-update-server-info[1]."
msgstr "Não atualize a informação do servidor com 'git update-server-info'.  Esta opção ignora a atualização dos arquivos de catálogo local necessários para publicar neste repositório (ou uma cópia direta do mesmo) por HTTP ou FTP.  Consulte linkgit:git-update-server-info[1]."

#. type: Plain text
#: en/git-repack.txt:110
#, priority:100
msgid "These two options affect how the objects contained in the pack are stored using delta compression. The objects are first internally sorted by type, size and optionally names and compared against the other objects within `--window` to see if using delta compression saves space. `--depth` limits the maximum delta depth; making it too deep affects the performance on the unpacker side, because delta data needs to be applied that many times to get to the necessary object."
msgstr "Essas duas opções afetam como os objetos existentes no pacote são armazenados utilizando a compactação delta. Primeiramente os objetos são classificados internamente pelo tipo, tamanho e opcionalmente pelos nomes e comparados com os outros objetos existentes na opção `--window` para ver se a utilização da compactação delta economiza espaço. A opção `--depth` limita a profundidade delta máxima; torná-la muito profunda afeta o desempenho do lado do desempacotador, porque os dados delta precisam ser aplicados várias vezes para chegar ao objeto necessário."

#. type: Plain text
#: en/git-repack.txt:116
#, priority:100
msgid "This option is passed through to `git pack-objects`."
msgstr "Esta opção é encaminhada para o comando `git pack-objects`."

#. type: Plain text
#: en/git-repack.txt:129
#, priority:100
msgid "This option provides an additional limit on top of `--window`; the window size will dynamically scale down so as to not take up more than '<n>' bytes in memory.  This is useful in repositories with a mix of large and small objects to not run out of memory with a large window, but still be able to take advantage of the large window for the smaller objects.  The size can be suffixed with \"k\", \"m\", or \"g\".  `--window-memory=0` makes memory usage unlimited.  The default is taken from the `pack.windowMemory` configuration variable.  Note that the actual memory usage will be the limit multiplied by the number of threads used by linkgit:git-pack-objects[1]."
msgstr "Esta opção oferece um limite adicional em cima da opção `--window`; o tamanho da janela será reduzido dinamicamente para não ocupar mais do que '<n>' bytes na memória.  É útil nos repositórios com uma mistura de objetos grandes e pequenos para não ficar sem memória com uma janela grande, mas ainda assim pode tirar proveito da janela grande para os objetos menores.  O tamanho pode ter o sufixo \"k\", \"m\" ou \"g\".  A opção `--window-memory=0` torna o uso da memória ilimitado.  A predefinição é obtido da variável de configuração `pack.windowMemory`.  Observe que a utilização atual da memória será o limite multiplicado pela quantidade de threads utilizados pelo linkgit:git-pack-objects[1]."

#. type: Plain text
#: en/git-repack.txt:139
#, priority:100
msgid "Maximum size of each output pack file. The size can be suffixed with \"k\", \"m\", or \"g\". The minimum size allowed is limited to 1 MiB.  If specified, multiple packfiles may be created, which also prevents the creation of a bitmap index.  The default is unlimited, unless the config variable `pack.packSizeLimit` is set. Note that this option may result in a larger and slower repository; see the discussion in `pack.packSizeLimit`."
msgstr "O Tamanho máximo de cada arquivo do pacote que foi gerado. O tamanho pode ter o sufixo \"k\", \"m\" ou \"g\". O tamanho mínimo permitido é limitado a 1 MiB.  Caso seja definido, vários pacotes poderão ser criados, o que também previne a criação de um índice do bitmap.  A predefinição é ilimitada, a menos que a variável de configuração `pack.packSizeLimit` esteja definida. Observe que esta opção pode criar um repositório maior e mais lento; consulte a discussão em `pack.packSizeLimit'."

#. type: Labeled list
#: en/git-repack.txt:141
#, ignore-same, no-wrap, priority:100
msgid "--write-bitmap-index"
msgstr "--write-bitmap-index"

#. type: Plain text
#: en/git-repack.txt:148
#, priority:100
msgid "Write a reachability bitmap index as part of the repack. This only makes sense when used with `-a`, `-A` or `-m`, as the bitmaps must be able to refer to all reachable objects. This option overrides the setting of `repack.writeBitmaps`. This option has no effect if multiple packfiles are created, unless writing a MIDX (in which case a multi-pack bitmap is created)."
msgstr "Escreva um índice bitmap de acessibilidade como parte do reempacotamento. Isso só faz sentido quando utilizado com `-a`, `-A` ou `-m`, pois os bitmaps devem poder se referir para todos os objetos que sejam acessíveis. Esta opção substitui a configuração da variável de ambiente `GIT_CURL_VERBOSE`. Esta opção não tem efeito caso vários arquivos de pacotes sejam criados. a não ser que seja escrito um MIDX (neste caso é criado um bitmap multi-pack)."

#. type: Labeled list
#: en/git-repack.txt:149
#, ignore-same, no-wrap, priority:100
msgid "--pack-kept-objects"
msgstr "--pack-kept-objects"

#. type: Plain text
#: en/git-repack.txt:157
#, priority:100
msgid "Include objects in `.keep` files when repacking.  Note that we still do not delete `.keep` packs after `pack-objects` finishes.  This means that we may duplicate objects, but this makes the option safe to use when there are concurrent pushes or fetches.  This option is generally only useful if you are writing bitmaps with `-b` or `repack.writeBitmaps`, as it ensures that the bitmapped packfile has the necessary objects."
msgstr "Inclua os objetos no arquivo `.keep` durante o reempacotamento.  Observe que nós anda não excluímos os pacotes `.keep` depois da finalização dos objetos empacotados (`pack-objects`).  Significa que podemos duplicar os objetos, porém isso torna a opção segura para ser utilizada quando existem impulsionamentos ou buscas simultâneos.  Esta opção geralmente é útil apenas caso esteja escrevendo bitmaps com `-b` ou `repack.writeBitmaps`, pois garante que o pacote de bitmap tenha os objetos necessários."

#. type: Plain text
#: en/git-repack.txt:164
#, priority:100
msgid "Exclude the given pack from repacking. This is the equivalent of having `.keep` file on the pack. `<pack-name>` is the pack file name without leading directory (e.g. `pack-123.pack`).  The option could be specified multiple times to keep multiple packs."
msgstr "Exclua o pacote informado do reempacotamento. Isso equivale a ter o arquivo `.keep` no pacote. O `<nome-do-pacote>` é o nome do arquivo do pacote sem o diretório principal (por exemplo, `pack-123.pack`).  A opção pode ser utilizada várias vezes para manter os vários pacotes."

#. type: Labeled list
#: en/git-repack.txt:165
#, no-wrap, priority:100
msgid "--unpack-unreachable=<when>"
msgstr "--unpack-unreachable=<quando>"

#. type: Plain text
#: en/git-repack.txt:170
#, priority:100
msgid "When loosening unreachable objects, do not bother loosening any objects older than `<when>`. This can be used to optimize out the write of any objects that would be immediately pruned by a follow-up `git prune`."
msgstr "Ao afrouxar os objetos inacessíveis, não se preocupe em afrouxar os objetos anteriores a `<quando>`. Pode ser utilizado para otimizar a gravação de quaisquer objetos que seriam removidos imediatamente através de um comando de acompanhamento `git prune`."

#. type: Plain text
#: en/git-repack.txt:177
#, priority:100
msgid "When used with `-ad`, any unreachable objects from existing packs will be appended to the end of the packfile instead of being removed. In addition, any unreachable loose objects will be packed (and their loose counterparts removed)."
msgstr "Quando utilizado com `-ad`, todos os objetos inacessíveis dos pacotes existentes serão anexados ao final do arquivo de pacotes em vez de serem removidos. Além disso, todos os objetos soltos inacessíveis serão empacotados (e as suas contrapartes soltas removidas)."

#. type: Plain text
#: en/git-repack.txt:182
#, priority:100
msgid "Pass the `--delta-islands` option to `git-pack-objects`, see linkgit:git-pack-objects[1]."
msgstr "Encaminha a opção `--delta-islands` para `git-pack-objects`, consulte linkgit:git-pack-objects[1]."

#. type: Labeled list
#: en/git-repack.txt:183
#, no-wrap, priority:100
msgid "-g=<factor>"
msgstr "-g=<fator>"

#. type: Labeled list
#: en/git-repack.txt:184
#, no-wrap, priority:100
msgid "--geometric=<factor>"
msgstr "--geometric=<fator>"

#. type: Plain text
#: en/git-repack.txt:188
#, priority:100
msgid "Arrange resulting pack structure so that each successive pack contains at least `<factor>` times the number of objects as the next-largest pack."
msgstr "Organize a estrutura do pacote resultante de modo que cada sucessivo pacote contenha ao menos o `<fator>` vezes a quantidade de objetos como o próximo maior pacote."

#. type: Plain text
#: en/git-repack.txt:194
#, priority:100
msgid "`git repack` ensures this by determining a \"cut\" of packfiles that need to be repacked into one in order to ensure a geometric progression. It picks the smallest set of packfiles such that as many of the larger packfiles (by count of objects contained in that pack) may be left intact."
msgstr "O comando `git repack` garante isso determinando um \"corte\" dos packfiles que precisam ser reembalados em um para garantir uma progressão geométrica. Será escolhido o menor conjunto dos packfiles de forma que muitos dos maiores packfiles (pela contagem de objetos contidos naquele pacote) podem ser deixados intactos."

#. type: Plain text
#: en/git-repack.txt:199
#, priority:100
msgid "Unlike other repack modes, the set of objects to pack is determined uniquely by the set of packs being \"rolled-up\"; in other words, the packs determined to need to be combined in order to restore a geometric progression."
msgstr "Ao contrário dos outros modos de reembalagem, o conjunto dos objetos que serão embalados é determinado exclusivamente pelo conjunto dos pacotes sendo \"juntados\"; em outras palavras, os pacotes determinados precisam ser combinados para restaurar uma progressão geométrica."

#. type: Plain text
#: en/git-repack.txt:205
#, priority:100
msgid "When `--unpacked` is specified, loose objects are implicitly included in this \"roll-up\", without respect to their reachability. This is subject to change in the future. This option (implying a drastically different repack mode) is not guaranteed to work with all other combinations of option to `git repack`."
msgstr "Quando a opção `--unpacked` é usada, os objetos soltos são implicitamente incluídos neste \"ajuntamento\", sem respeito à sua acessibilidade. Isso está sujeito a alterações no futuro. Esta opção (que implica num modo de repack drasticamente diferente) não tem garantia de funcionar com todas as outras combinações de opções para o comando `git repack`."

#. type: Plain text
#: en/git-repack.txt:209
#, priority:100
msgid "When writing a multi-pack bitmap, `git repack` selects the largest resulting pack as the preferred pack for object selection by the MIDX (see linkgit:git-multi-pack-index[1])."
msgstr "Ao escrever um bitmap multi-pack, o comando `git repack` seleciona o maior pacote resultante como o pacote preferido para a seleção dos objetos pelo MIDX (consulte linkgit:git-multi-pack-index[1])."

#. type: Labeled list
#: en/git-repack.txt:211
#, ignore-same, no-wrap, priority:100
msgid "--write-midx"
msgstr "--write-midx"

#. type: Plain text
#: en/git-repack.txt:214
#, priority:100
msgid "Write a multi-pack index (see linkgit:git-multi-pack-index[1])  containing the non-redundant packs."
msgstr "Escreva um índice multi-pack (consulte linkgit:git-multi-pack-index[1]) contendo pacotes não redundantes."

#. type: Plain text
#: en/git-repack.txt:230
#, priority:100
msgid "By default, the command passes `--delta-base-offset` option to 'git pack-objects'; this typically results in slightly smaller packs, but the generated packs are incompatible with versions of Git older than version 1.4.4. If you need to share your repository with such ancient Git versions, either directly or via the dumb http protocol, then you need to set the configuration variable `repack.UseDeltaBaseOffset` to \"false\" and repack. Access from old Git versions over the native protocol is unaffected by this option as the conversion is performed on the fly as needed in that case."
msgstr "É predefinido que o comando passe a opção `--delta-base-offset` para o comando 'git pack-objects'; isso normalmente resulta em pacotes um pouco menores, porém os pacotes gerados são incompatíveis com as versões do Git anteriores à versão 1.4.4. Caso precise compartilhar o seu repositório com as versões mais antigas do Git de forma direta ou através do protocolo http burro, será necessário definir a variável de configuração `repack.UseDeltaBaseOffset` como 'false' e fazer o reempacotamento. O acesso das versões antigas do Git pelo protocolo nativo não é afetado por esta opção, pois a conversão é realizada em tempo real, conforme seja necessário."

#. type: Plain text
#: en/git-repack.txt:234
#, priority:100
msgid "Delta compression is not used on objects larger than the `core.bigFileThreshold` configuration variable and on files with the attribute `delta` set to false."
msgstr "A compressão delta não é usada em objetos maiores do que a variável de configuração `core.bigFileThreshold` e nos arquivos com o atributo `delta` definido como falso."

#. type: Plain text
#: en/git-repack.txt:239
#, ignore-same, priority:100
msgid "linkgit:git-pack-objects[1] linkgit:git-prune-packed[1]"
msgstr "linkgit:git-pack-objects[1] linkgit:git-prune-packed[1]"

#. type: Title =
#: en/git-replace.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-replace(1)"
msgstr "git-replace(1)"

#. type: Plain text
#: en/git-replace.txt:7
#, priority:100
msgid "git-replace - Create, list, delete refs to replace objects"
msgstr "git-replace - Crie, liste, exclua as refs para substituir os objetos"

#. type: Plain text
#: en/git-replace.txt:17
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git replace' [-f] <object> <replacement>\n"
"'git replace' [-f] --edit <object>\n"
"'git replace' [-f] --graft <commit> [<parent>...]\n"
"'git replace' [-f] --convert-graft-file\n"
"'git replace' -d <object>...\n"
"'git replace' [--format=<format>] [-l [<pattern>]]\n"
msgstr ""
"'git replace' [-f] <objeto> <rearranjo>\n"
"'git replace' [-f] --edit <objeto>\n"
"'git replace' [-f] --graft <commit> [<origem >...]\n"
"'git replace' [-f] --convert-graft-file\n"
"'git replace' -d <objeto>...\n"
"'git replace' [--format=<formato>] [-l [<padrão>]]\n"

#. type: Plain text
#: en/git-replace.txt:21
#, priority:100
msgid "Adds a 'replace' reference in `refs/replace/` namespace."
msgstr "Adiciona uma referência 'replace' (substituir) no espaço de nomes `refs/replace/`."

#. type: Plain text
#: en/git-replace.txt:25
#, priority:100
msgid "The name of the 'replace' reference is the SHA-1 of the object that is replaced. The content of the 'replace' reference is the SHA-1 of the replacement object."
msgstr "O nome da referência 'replace' é o SHA-1 do objeto que é substituído. O conteúdo da referência 'replace' é o SHA-1 do objeto de reposição."

#. type: Plain text
#: en/git-replace.txt:28
#, priority:100
msgid "The replaced object and the replacement object must be of the same type.  This restriction can be bypassed using `-f`."
msgstr "O objeto substituído e o objeto de reposição devem ser do mesmo tipo.  Esta restrição pode ser contornada utilizando a opção `-f`."

#. type: Plain text
#: en/git-replace.txt:30
#, priority:100
msgid "Unless `-f` is given, the 'replace' reference must not yet exist."
msgstr "A menos que '-f' seja utilizado, a referência 'replace' ainda não deve existir."

#. type: Plain text
#: en/git-replace.txt:33
#, priority:100
msgid "There is no other restriction on the replaced and replacement objects.  Merge commits can be replaced by non-merge commits and vice versa."
msgstr "Não há outra restrição nos objetos substituídos e os objetos de reposição.  Os commits mesclados podem ser substituídos por commits sem mesclagem e vice-versa."

#. type: Plain text
#: en/git-replace.txt:37
#, priority:100
msgid "Replacement references will be used by default by all Git commands except those doing reachability traversal (prune, pack transfer and fsck)."
msgstr "É predefinido que as referências de reposição seja utilizadas por todos os comandos do Git, exceto aqueles que executem o percurso de acessibilidade (remoção \"prune\", transferência de pacotes \"pack transfer\" e \"fsck\")."

#. type: Plain text
#: en/git-replace.txt:40
#, priority:100
msgid "It is possible to disable use of replacement references for any command using the `--no-replace-objects` option just after 'git'."
msgstr "É possível desativar o uso do rearranjo das referências para qualquer comando utilizando a opção `--no-replace-objects` logo após o 'git'."

#. type: Plain text
#: en/git-replace.txt:42
#, priority:100
msgid "For example if commit 'foo' has been replaced by commit 'bar':"
msgstr "Como por exemplo, caso o commit 'foo' foi substituído pelo commit 'bar':"

#. type: delimited block -
#: en/git-replace.txt:45
#, no-wrap, priority:100
msgid "$ git --no-replace-objects cat-file commit foo\n"
msgstr "$ git --no-replace-objects cat-file commit foo\n"

#. type: Plain text
#: en/git-replace.txt:48
#, priority:100
msgid "shows information about commit 'foo', while:"
msgstr "exibe as informações sobre o commit 'foo', enquanto:"

#. type: delimited block -
#: en/git-replace.txt:51
#, no-wrap, priority:100
msgid "$ git cat-file commit foo\n"
msgstr "$ git cat-file commit foo\n"

#. type: Plain text
#: en/git-replace.txt:54
#, priority:100
msgid "shows information about commit 'bar'."
msgstr "exibe as informações sobre o commit 'bar'."

#. type: Plain text
#: en/git-replace.txt:57
#, priority:100
msgid "The `GIT_NO_REPLACE_OBJECTS` environment variable can be set to achieve the same effect as the `--no-replace-objects` option."
msgstr "A variável de ambiente `GIT_NO_REPLACE_OBJECTS` pode ser configurada para obter o mesmo efeito que a opção `--no-replace-objects`."

#. type: Plain text
#: en/git-replace.txt:64
#, priority:100
msgid "If an existing replace ref for the same object exists, it will be overwritten (instead of failing)."
msgstr "Caso exista uma \"ref\" de reposição existente para o mesmo objeto, ela será substituída (em vez de falhar)."

#. type: Plain text
#: en/git-replace.txt:68
#, priority:100
msgid "Delete existing replace refs for the given objects."
msgstr "Exclua as refs de reposição existentes para os objetos informados."

#. type: Labeled list
#: en/git-replace.txt:69
#, no-wrap, priority:100
msgid "--edit <object>"
msgstr "--edit <objeto>"

#. type: Plain text
#: en/git-replace.txt:77
#, priority:100
msgid "Edit an object's content interactively. The existing content for <object> is pretty-printed into a temporary file, an editor is launched on the file, and the result is parsed to create a new object of the same type as <object>. A replacement ref is then created to replace <object> with the newly created object. See linkgit:git-var[1] for details about how the editor will be chosen."
msgstr "Edita o conteúdo de um objeto interativamente. O conteúdo existente para `<objeto>` é impresso num arquivo temporário, um editor é iniciado no arquivo e o resultado é analisado para criar um novo objeto do mesmo tipo que `<objeto>`. Um `ref` de reposição é criado para substituir `<objeto>` com um objeto recém-criado. Para mais detalhes de como o editor será selecionado, consulte linkgit:git-var[1]."

#. type: Plain text
#: en/git-replace.txt:85
#, priority:100
msgid "When editing, provide the raw object contents rather than pretty-printed ones. Currently this only affects trees, which will be shown in their binary form. This is harder to work with, but can help when repairing a tree that is so corrupted it cannot be pretty-printed. Note that you may need to configure your editor to cleanly read and write binary data."
msgstr "Ao editar, forneça o conteúdo do objeto bruto, em vez do impresso bonito. Atualmente afeta apenas as árvores que serão exibidas na sua forma binária. É mais difícil trabalhar com isso, porém pode ajudar durante o reparo de uma árvore que está tão corrompida que não pode ser bem impressa. Observe que pode ser necessário configurar o seu editor para ler e gravar os dados binários de forma limpa."

#. type: Labeled list
#: en/git-replace.txt:86
#, ignore-ellipsis, no-wrap, priority:100
msgid "--graft <commit> [<parent>...]"
msgstr "--graft <commit> [<origem>...]"

#. type: Plain text
#: en/git-replace.txt:93
#, ignore-ellipsis, priority:100
msgid "Create a graft commit. A new commit is created with the same content as <commit> except that its parents will be [<parent>...] instead of <commit>'s parents. A replacement ref is then created to replace <commit> with the newly created commit. Use `--convert-graft-file` to convert a `$GIT_DIR/info/grafts` file and use replace refs instead."
msgstr "Cria um commit com enxerto. Um novo commit é criado com o mesmo conteúdo de `<commit>` exceto que as suas origens serão [<origem>...] em vez do <commit> das origens. Uma ref de reposição é então criada para substituir o `<commit>` pelo commit recém-criado. Utilize `--convert-graft-file` para converter um arquivo `$GIT_DIR/info/grafts` e utilize as refs de reposição em seu lugar."

#. type: Labeled list
#: en/git-replace.txt:94
#, ignore-same, no-wrap, priority:100
msgid "--convert-graft-file"
msgstr "--convert-graft-file"

#. type: Plain text
#: en/git-replace.txt:98
#, priority:100
msgid "Creates graft commits for all entries in `$GIT_DIR/info/grafts` and deletes that file upon success. The purpose is to help users with transitioning off of the now-deprecated graft file."
msgstr "Cria commits com enxertos para todas as entradas em `$GIT_DIR/info/grafts` e exclui este arquivo quando for bem sucedido. O objetivo é ajudar os usuários a fazer a transição do arquivo de enxerto agora, obsoleto."

#. type: Labeled list
#: en/git-replace.txt:99
#, no-wrap, priority:100
msgid "-l <pattern>"
msgstr "-l <padrão>"

#. type: Labeled list
#: en/git-replace.txt:100
#, no-wrap, priority:100
msgid "--list <pattern>"
msgstr "--list <padrão>"

#. type: Plain text
#: en/git-replace.txt:105
#, priority:100
msgid "List replace refs for objects that match the given pattern (or all if no pattern is given).  Typing \"git replace\" without arguments, also lists all replace refs."
msgstr "A lista substitui as refs para os objetos que coincidam ao padrão informado (ou todos caso nenhum seja informado).  Digitar \"git replace\" sem argumentos, também lista todos as refs de reposição."

#. type: Plain text
#: en/git-replace.txt:110
#, priority:100
msgid "When listing, use the specified <format>, which can be one of 'short', 'medium' and 'long'. When omitted, the format defaults to 'short'."
msgstr "Ao listar, utilize o <formato> informado, que pode ser 'short' (curto), 'medium' (médio) e 'long' (longo). Quando omitido, a predefinição retorna para o formato 'short'."

#. type: Title -
#: en/git-replace.txt:112
#, no-wrap, priority:100
msgid "FORMATS"
msgstr "FORMATOS"

#. type: Plain text
#: en/git-replace.txt:115
#, priority:100
msgid "The following format are available:"
msgstr "O seguinte formato está disponível:"

#. type: Plain text
#: en/git-replace.txt:117
#, priority:100
msgid "'short':"
msgstr "'short':"

#. type: Plain text
#: en/git-replace.txt:118
#, priority:100
msgid "<replaced sha1>"
msgstr "<replaced sha1>"

#. type: Plain text
#: en/git-replace.txt:119
#, priority:100
msgid "'medium':"
msgstr "'medium':"

#. type: Plain text
#: en/git-replace.txt:120
#, priority:100
msgid "<replaced sha1> -> <replacement sha1>"
msgstr "<replaced sha1> -> <replacement sha1>"

#. type: Plain text
#: en/git-replace.txt:121
#, priority:100
msgid "'long':"
msgstr "'long':"

#. type: Plain text
#: en/git-replace.txt:122
#, priority:100
msgid "<replaced sha1> (<replaced type>) -> <replacement sha1> (<replacement type>)"
msgstr "<sha1 substituído> (<tipo substituído>) -> <sha1 substituído> (<tipo substituído>)"

#. type: Title -
#: en/git-replace.txt:124
#, no-wrap, priority:100
msgid "CREATING REPLACEMENT OBJECTS"
msgstr "CRIANDO OBJETOS DE SUBSTITUIÇÃO"

#. type: Plain text
#: en/git-replace.txt:131
#, priority:100
msgid "linkgit:git-hash-object[1], linkgit:git-rebase[1], and https://github.com/newren/git-filter-repo[git-filter-repo], among other git commands, can be used to create replacement objects from existing objects. The `--edit` option can also be used with 'git replace' to create a replacement object by editing an existing object."
msgstr "O linkgit:git-hash-object[1], linkgit:git-rebase[1], e https://github.com/newren/git-filter-repo[git-filter-repo], dentre outros comandos git podem ser utilizados para criar a reposição dos objetos a partir dos objetos já existentes. A opção `--edit` também pode ser usada com 'git replace' para criar a reposição de um objeto editando um objeto já existente."

#. type: Plain text
#: en/git-replace.txt:137
#, priority:100
msgid "If you want to replace many blobs, trees or commits that are part of a string of commits, you may just want to create a replacement string of commits and then only replace the commit at the tip of the target string of commits with the commit at the tip of the replacement string of commits."
msgstr "Caso queira substituir várias bolhas, árvores ou commits que fazem parte de uma cadência de commits, você pode apenas criar uma cadência de reposição dos commits e então substituir apenas o commit no topo da cadeia alvo dos commits pelos commits do topo da cadência de substituições dos commits."

#. type: Plain text
#: en/git-replace.txt:144
#, priority:100
msgid "Comparing blobs or trees that have been replaced with those that replace them will not work properly. And using `git reset --hard` to go back to a replaced commit will move the branch to the replacement commit instead of the replaced commit."
msgstr "Comparando as bolhas ou as árvores que foram substituídos por aqueles que os substituem, não funcionará de forma correta. E utilizar o comando `git reset --hard` para voltar para um commit que foi reposto, moverá o ramo para o commit que foi substituído em vez do commit que foi resposto."

#. type: Plain text
#: en/git-replace.txt:147
#, priority:100
msgid "There may be other problems when using 'git rev-list' related to pending objects."
msgstr "Pode haver outros problemas durante a utilização do comando 'git rev-list' relacionadas com objetos pendentes."

#. type: Plain text
#: en/git-replace.txt:158
#, priority:100
msgid "linkgit:git-hash-object[1] linkgit:git-rebase[1] linkgit:git-tag[1] linkgit:git-branch[1] linkgit:git-commit[1] linkgit:git-var[1] linkgit:git[1] https://github.com/newren/git-filter-repo[git-filter-repo]"
msgstr "linkgit:git-hash-object[1] linkgit:git-rebase[1] linkgit:git-tag[1] linkgit:git-branch[1] linkgit:git-commit[1] linkgit:git-var[1] linkgit:git[1] https://github.com/newren/git-filter-repo[git-filter-repo]"

#. type: Title =
#: en/git-request-pull.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-request-pull(1)"
msgstr "git-request-pull(1)"

#. type: Plain text
#: en/git-request-pull.txt:7
#, priority:100
msgid "git-request-pull - Generates a summary of pending changes"
msgstr "git-request-pull - Gera um resumo das alterações que ainda estão pendentes"

#. type: Plain text
#: en/git-request-pull.txt:12
#, no-wrap, priority:100
msgid "'git request-pull' [-p] <start> <URL> [<end>]\n"
msgstr "'git request-pull' [-p] <início> <URL> [<fim>]\n"

#. type: Plain text
#: en/git-request-pull.txt:20
#, priority:100
msgid "Generate a request asking your upstream project to pull changes into their tree.  The request, printed to the standard output, begins with the branch description, summarizes the changes and indicates from where they can be pulled."
msgstr "Gere um pedido solicitando ao seu projeto na upstream que capture as alterações na árvore deles.  A solicitação, é impressa na saída padrão, começa com o descritivo do ramo, resume as alterações e indica de onde elas podem ser extraídas."

#. type: Plain text
#: en/git-request-pull.txt:25
#, priority:100
msgid "The upstream project is expected to have the commit named by `<start>` and the output asks it to integrate the changes you made since that commit, up to the commit named by `<end>`, by visiting the repository named by `<URL>`."
msgstr "Espera-se que o projeto \"upstream\" tenha o commit nomeado pelo `<inicio>` e a saída solicite a integração das alterações feitas até este commit, até o commit nomeado por `<fim>`, visitando o repositório nomeado por `<URL>`."

#. type: Plain text
#: en/git-request-pull.txt:31
#, priority:100
msgid "Include patch text in the output."
msgstr "Inclua o texto do patch na saída."

#. type: Labeled list
#: en/git-request-pull.txt:32
#, no-wrap, priority:100
msgid "<start>"
msgstr "<inicio>"

#. type: Plain text
#: en/git-request-pull.txt:35
#, priority:100
msgid "Commit to start at.  This names a commit that is already in the upstream history."
msgstr "Faça o commit para iniciar em.  Isso informa um commit que já está no histórico upstream."

#. type: Labeled list
#: en/git-request-pull.txt:36
#, no-wrap, priority:100
msgid "<URL>"
msgstr "<URL>"

#. type: Plain text
#: en/git-request-pull.txt:38
#, priority:100
msgid "The repository URL to be pulled from."
msgstr "A URL do repositório a ser extraída."

#. type: Labeled list
#: en/git-request-pull.txt:39
#, no-wrap, priority:100
msgid "<end>"
msgstr "<fim>"

#. type: Plain text
#: en/git-request-pull.txt:42
#, priority:100
msgid "Commit to end at (defaults to HEAD).  This names the commit at the tip of the history you are asking to be pulled."
msgstr "Faça o commit para terminar em (a predefinição retorna para `HEAD`).  Isso informa o commit no topo do histórico que você está pedindo para ser capturado."

#. type: Plain text
#: en/git-request-pull.txt:47
#, priority:100
msgid "When the repository named by `<URL>` has the commit at a tip of a ref that is different from the ref you have locally, you can use the `<local>:<remote>` syntax, to have its local name, a colon `:`, and its remote name."
msgstr "Quando o repositório nomeado por `<URL>` tem o commit no cume de uma \"ref\" diferente da \"ref\" que você possui localmente, é possível utilizar a sintaxe `<local>:<remoto>`, para ter o seu nome local, dois pontos `:` e o nome do seu ramo remoto."

#. type: Plain text
#: en/git-request-pull.txt:56
#, priority:100
msgid "Imagine that you built your work on your `master` branch on top of the `v1.0` release, and want it to be integrated to the project.  First you push that change to your public repository for others to see:"
msgstr "Imagine que você construiu o seu trabalho no seu ramo `master` em cima da versão `v1.0` e queira que ele seja integrado ao projeto.  Primeiro, você envia esta alteração ao seu repositório público para que as outras pessoas vejam:"

#. type: Plain text
#: en/git-request-pull.txt:58
#, no-wrap, priority:100
msgid "\tgit push https://git.ko.xz/project master\n"
msgstr "\tgit push https://git.ko.xz/project master\n"

#. type: Plain text
#: en/git-request-pull.txt:60
#, priority:100
msgid "Then, you run this command:"
msgstr "Então, execute este comando:"

#. type: Plain text
#: en/git-request-pull.txt:62
#, no-wrap, priority:100
msgid "\tgit request-pull v1.0 https://git.ko.xz/project master\n"
msgstr "\tgit request-pull v1.0 https://git.ko.xz/project master\n"

#. type: Plain text
#: en/git-request-pull.txt:66
#, priority:100
msgid "which will produce a request to the upstream, summarizing the changes between the `v1.0` release and your `master`, to pull it from your public repository."
msgstr "que produzirá uma solicitação para o \"upstream\", resumindo as alterações entre o \"release\" `v1.0` e o seu `master`, para retirá-lo do seu repositório público."

#. type: Plain text
#: en/git-request-pull.txt:69
#, priority:100
msgid "If you pushed your change to a branch whose name is different from the one you have locally, e.g."
msgstr "Caso impulsione a sua alteração para um ramo cujo nome seja diferente daquele que você possui localmente, por exemplo."

#. type: Plain text
#: en/git-request-pull.txt:71
#, no-wrap, priority:100
msgid "\tgit push https://git.ko.xz/project master:for-linus\n"
msgstr "\tgit push https://git.ko.xz/project master:for-linus\n"

#. type: Plain text
#: en/git-request-pull.txt:73
#, priority:100
msgid "then you can ask that to be pulled with"
msgstr "então é possível pedir para ser capturado com"

#. type: Plain text
#: en/git-request-pull.txt:75
#, no-wrap, priority:100
msgid "\tgit request-pull v1.0 https://git.ko.xz/project master:for-linus\n"
msgstr "\tgit request-pull v1.0 https://git.ko.xz/project master:for-linus\n"

#. type: Title =
#: en/git-rerere.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-rerere(1)"
msgstr "git-rerere(1)"

#. type: Plain text
#: en/git-rerere.txt:7
#, priority:100
msgid "git-rerere - Reuse recorded resolution of conflicted merges"
msgstr "git-rerere - Reutilize a resolução registrada das mesclagens conflitantes"

#. type: Plain text
#: en/git-rerere.txt:12
#, no-wrap, priority:100
msgid "'git rerere' ['clear'|'forget' <pathspec>|'diff'|'remaining'|'status'|'gc']\n"
msgstr "'git rerere' ['clear'|'forget' <pathspec>|'diff'|'remaining'|'status'|'gc']\n"

#. type: Plain text
#: en/git-rerere.txt:20
#, priority:100
msgid "In a workflow employing relatively long lived topic branches, the developer sometimes needs to resolve the same conflicts over and over again until the topic branches are done (either merged to the \"release\" branch, or sent out and accepted upstream)."
msgstr "Em um fluxo de trabalho que utiliza ramificações do tópico com vida útil relativamente longa, o desenvolvedor às vezes precisa resolver os mesmos conflitos de forma repetida até que o tópico das ramificações sejam concluídas (entre mesclagem no ramo \"release\" ou enviadas e aceitas na upstream)."

#. type: Plain text
#: en/git-rerere.txt:25
#, priority:100
msgid "This command assists the developer in this process by recording conflicted automerge results and corresponding hand resolve results on the initial manual merge, and applying previously recorded hand resolutions to their corresponding automerge results."
msgstr "Este comando auxilia o desenvolvedor neste processo, registrando os resultados conflitantes do \"automerge\" e os resultados correspondentes da resolução manual na mesclagem manual inicial e aplicando as resoluções práticas gravadas anteriormente aos resultados correspondentes do \"automerge\"."

#. type: Plain text
#: en/git-rerere.txt:29
#, priority:100
msgid "You need to set the configuration variable `rerere.enabled` in order to enable this command."
msgstr "Você precisa definir a variável de configuração `rerere.enabled` para ativar este comando."

#. type: Plain text
#: en/git-rerere.txt:37
#, priority:100
msgid "Normally, 'git rerere' is run without arguments or user-intervention.  However, it has several commands that allow it to interact with its working state."
msgstr "Normalmente, o comando 'git rerere' é executado sem argumentos ou sem a intervenção do usuário.  No entanto, ele possui vários comandos que permitem interagir com a sua condição de trabalho."

#. type: Labeled list
#: en/git-rerere.txt:38
#, no-wrap, priority:100
msgid "'clear'"
msgstr "'clear'"

#. type: Plain text
#: en/git-rerere.txt:43
#, priority:100
msgid "Reset the metadata used by rerere if a merge resolution is to be aborted.  Calling 'git am [--skip|--abort]' or 'git rebase [--skip|--abort]' will automatically invoke this command."
msgstr "Redefina os metadados utilizados pela \"rerere\" caso uma resolução da mesclagem seja interrompida.  Executando o comando 'git am [--skip|--abort]' ou 'git rebase [--skip|--abort]' automaticamente invocará este comando."

#. type: Labeled list
#: en/git-rerere.txt:44
#, no-wrap, priority:100
msgid "'forget' <pathspec>"
msgstr "'forget' <pathspec>"

#. type: Plain text
#: en/git-rerere.txt:48
#, priority:100
msgid "Reset the conflict resolutions which rerere has recorded for the current conflict in <pathspec>."
msgstr "Redefina as resoluções de conflito que a rerere registrou para o conflito atual em <pathspec>."

#. type: Labeled list
#: en/git-rerere.txt:49
#, no-wrap, priority:100
msgid "'diff'"
msgstr "'diff'"

#. type: Plain text
#: en/git-rerere.txt:55
#, priority:100
msgid "Display diffs for the current state of the resolution.  It is useful for tracking what has changed while the user is resolving conflicts.  Additional arguments are passed directly to the system 'diff' command installed in PATH."
msgstr "Exibe os diffs para a condição atual da resolução.  É útil para monitorar o que mudou enquanto o usuário está resolvendo os conflitos.  Os argumentos adicionais são passados diretamente para o comando 'diff' do sistema instalado no PATH."

#. type: Labeled list
#: en/git-rerere.txt:56
#, no-wrap, priority:100
msgid "'status'"
msgstr "'status'"

#. type: Plain text
#: en/git-rerere.txt:59
#, priority:100
msgid "Print paths with conflicts whose merge resolution rerere will record."
msgstr "Imprima os caminhos com conflitos cuja resolução da mesclagem \"rerere\" será registrada novamente."

#. type: Labeled list
#: en/git-rerere.txt:60
#, no-wrap, priority:100
msgid "'remaining'"
msgstr "'remaining'"

#. type: Plain text
#: en/git-rerere.txt:65
#, priority:100
msgid "Print paths with conflicts that have not been autoresolved by rerere.  This includes paths whose resolutions cannot be tracked by rerere, such as conflicting submodules."
msgstr "Imprima os caminhos com conflitos que ainda não foram resolvidos automaticamente pela \"rerere\".  Isso inclui os caminhos cujas resoluções não podem ser rastreadas por \"rerere\", como os submódulos conflitantes."

#. type: Labeled list
#: en/git-rerere.txt:66 en/git-svn.txt:511
#, no-wrap, priority:100
msgid "'gc'"
msgstr "'gc'"

#. type: Plain text
#: en/git-rerere.txt:74
#, priority:100
msgid "Prune records of conflicted merges that occurred a long time ago.  By default, unresolved conflicts older than 15 days and resolved conflicts older than 60 days are pruned.  These defaults are controlled via the `gc.rerereUnresolved` and `gc.rerereResolved` configuration variables respectively."
msgstr "Remova os registros das mesclagens conflitantes que ocorreram há muito tempo.  É predefinido que, serão removidos todos os conflitos não resolvidos com mais que 15 dias e os conflitos que já foram resolvidos com mais de 60 dias.  Estas predefinições são controlados pelas variáveis de configuração `gc.rerereUnresolved` e `gc.rerereResolved`, respectivamente."

#. type: Plain text
#: en/git-rerere.txt:83
#, priority:100
msgid "When your topic branch modifies an overlapping area that your master branch (or upstream) touched since your topic branch forked from it, you may want to test it with the latest master, even before your topic branch is ready to be pushed upstream:"
msgstr "Quando o tópico do seu ramo altera uma área sobreposta onde o ramo principal (ou \"upstream\") tocou desde que o tópico do ramo foi extraído, é possível testá-lo com o \"master\" mais recente, mesmo antes do tópico do ramo estar pronto para ser impulsionado na \"upstream\":"

#. type: delimited block -
#: en/git-rerere.txt:88
#, no-wrap, priority:100
msgid ""
"              o---*---o topic\n"
"             /\n"
"    o---o---o---*---o---o master\n"
msgstr ""
"              o---*---o topic\n"
"             /\n"
"    o---o---o---*---o---o master\n"

#. type: Plain text
#: en/git-rerere.txt:92
#, priority:100
msgid "For such a test, you need to merge master and topic somehow.  One way to do it is to pull master into the topic branch:"
msgstr "Para tal teste, é necessário mesclar o 'master' (mestre) e o 'topic' (tópico) de alguma maneira.  Uma maneira de fazer isso é capturar o 'master' para o ramo 'topic':"

#. type: delimited block -
#: en/git-rerere.txt:96
#, no-wrap, priority:100
msgid ""
"\t$ git switch topic\n"
"\t$ git merge master\n"
msgstr ""
"\t$ git switch topic\n"
"\t$ git merge master\n"

#. type: delimited block -
#: en/git-rerere.txt:100
#, no-wrap, priority:100
msgid ""
"              o---*---o---+ topic\n"
"             /           /\n"
"    o---o---o---*---o---o master\n"
msgstr ""
"              o---*---o---+ topic\n"
"             /           /\n"
"    o---o---o---*---o---o master\n"

#. type: Plain text
#: en/git-rerere.txt:106
#, priority:100
msgid "The commits marked with `*` touch the same area in the same file; you need to resolve the conflicts when creating the commit marked with `+`.  Then you can test the result to make sure your work-in-progress still works with what is in the latest master."
msgstr "Os commits marcados com `*` tocam na mesma área no mesmo arquivo; é preciso resolver os conflitos durante a criação do commit marcado com `+`.  Em seguida, é possível testar o resultado garantindo que o seu trabalho em andamento ainda funcione com o que está no \"master\" mais recente."

#. type: Plain text
#: en/git-rerere.txt:114
#, priority:100
msgid "After this test merge, there are two ways to continue your work on the topic.  The easiest is to build on top of the test merge commit `+`, and when your work in the topic branch is finally ready, pull the topic branch into master, and/or ask the upstream to pull from you.  By that time, however, the master or the upstream might have been advanced since the test merge `+`, in which case the final commit graph would look like this:"
msgstr "Após a mesclagem deste teste, há duas maneiras de continuar o tópico do seu trabalho.  A mais fácil é construir sobre o commit da mesclagem de teste `+`, quando o seu trabalho no ramo dos tópicos estiver finalmente pronto, capture o tópico do ramo no 'master' e/ou solicite que a upstream retire você.  Naquele momento no entanto, o 'master' ou a upstream poderiam ter sido avançadas desde a mesclagem do teste `+`; nesse caso, o grafo do commit final ficaria assim:"

#. type: delimited block -
#: en/git-rerere.txt:121
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"\t$ git switch topic\n"
"\t$ git merge master\n"
"\t$ ... work on both topic and master branches\n"
"\t$ git switch master\n"
"\t$ git merge topic\n"
msgstr ""
"\t$ git switch topic\n"
"\t$ git merge master\n"
"\t$ ... trabalha ambos os ramos topic e master\n"
"\t$ git switch master\n"
"\t$ git merge topic\n"

#. type: delimited block -
#: en/git-rerere.txt:125
#, no-wrap, priority:100
msgid ""
"              o---*---o---+---o---o topic\n"
"             /           /         \\\n"
"    o---o---o---*---o---o---o---o---+ master\n"
msgstr ""
"              o---*---o---+---o---o topic\n"
"             /           /         \\\n"
"    o---o---o---*---o---o---o---o---+ master\n"

#. type: Plain text
#: en/git-rerere.txt:133
#, priority:100
msgid "When your topic branch is long-lived, however, your topic branch would end up having many such \"Merge from master\" commits on it, which would unnecessarily clutter the development history.  Readers of the Linux kernel mailing list may remember that Linus complained about such too frequent test merges when a subsystem maintainer asked to pull from a branch full of \"useless merges\"."
msgstr "Quando o tópico do ramo é longo, no entanto, o seu tópico do ramo acabaria com muitos commits como \"Mesclar do mestre\" nele, o que desorganizaria de forma desnecessária o histórico de desenvolvimento.  Os leitores da lista de discussão do kernel do Linux podem se lembrar que Linus se queixou das mesclagens de teste tão frequentes quando um mantenedor do subsistema pediu para capturar de um ramo cheio de \"mesclagens inúteis\"."

#. type: Plain text
#: en/git-rerere.txt:137
#, priority:100
msgid "As an alternative, to keep the topic branch clean of test merges, you could blow away the test merge, and keep building on top of the tip before the test merge:"
msgstr "Como uma alternativa, para manter o tópico do ramo limpo das mesclagens de teste, você pode afastar a mesclagem de teste e continuar construindo sobre o cume antes da mesclagem de teste:"

#. type: delimited block -
#: en/git-rerere.txt:145
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"\t$ git switch topic\n"
"\t$ git merge master\n"
"\t$ git reset --hard HEAD^ ;# rewind the test merge\n"
"\t$ ... work on both topic and master branches\n"
"\t$ git switch master\n"
"\t$ git merge topic\n"
msgstr ""
"\t$ git switch topic\n"
"\t$ git merge master\n"
"\t$ git reset --hard HEAD^ ;# retrocede a mesclagem test\n"
"\t$ ... trabalha ambos os ramos topic e master\n"
"\t$ git switch master\n"
"\t$ git merge topic\n"

#. type: delimited block -
#: en/git-rerere.txt:149
#, no-wrap, priority:100
msgid ""
"              o---*---o-------o---o topic\n"
"             /                     \\\n"
"    o---o---o---*---o---o---o---o---+ master\n"
msgstr ""
"              o---*---o-------o---o topic\n"
"             /                     \\\n"
"    o---o---o---*---o---o---o---o---+ master\n"

#. type: Plain text
#: en/git-rerere.txt:159
#, priority:100
msgid "This would leave only one merge commit when your topic branch is finally ready and merged into the master branch.  This merge would require you to resolve the conflict, introduced by the commits marked with `*`.  However, this conflict is often the same conflict you resolved when you created the test merge you blew away.  'git rerere' helps you resolve this final conflicted merge using the information from your earlier hand resolve."
msgstr "Isso deixaria apenas um commit mesclado quando o ramo do tópico estiver finalmente pronto e mesclado no ramo \"master\".  Esta mesclagem exigiria que você resolvesse o conflito, introduzido pelos commits marcados com `*`.  No entanto, este conflito geralmente é o mesmo que você resolveu quando criou a mesclagem de teste que desapareceu.  O comando 'git rerere' ajuda a resolver esta mesclagem conflitante final usando as informações da sua resolução manual anterior."

#. type: Plain text
#: en/git-rerere.txt:167
#, priority:100
msgid "Running the 'git rerere' command immediately after a conflicted automerge records the conflicted working tree files, with the usual conflict markers `<<<<<<<`, `=======`, and `>>>>>>>` in them.  Later, after you are done resolving the conflicts, running 'git rerere' again will record the resolved state of these files.  Suppose you did this when you created the test merge of master into the topic branch."
msgstr "A execução do comando 'git rerere' imediatamente após um conflito de mesclagem automática, registra os arquivos da árvore de trabalho em conflito, com os marcadores de conflito usuais `<<<<<<<`, `=======`, e `>>>>>>>` neles.  Mais tarde, após ter terminado de resolver os conflitos, executando o comando 'git rerere' novamente registrará o a condição resolvida destes arquivos.  Suponha que tenha sido feito isso ao criar o teste de mesclagem do \"master\" no tópico do ramo."

#. type: Plain text
#: en/git-rerere.txt:177
#, priority:100
msgid "Next time, after seeing the same conflicted automerge, running 'git rerere' will perform a three-way merge between the earlier conflicted automerge, the earlier manual resolution, and the current conflicted automerge.  If this three-way merge resolves cleanly, the result is written out to your working tree file, so you do not have to manually resolve it.  Note that 'git rerere' leaves the index file alone, so you still need to do the final sanity checks with `git diff` (or `git diff -c`) and 'git add' when you are satisfied."
msgstr "Da próxima vez, após ver o mesmo surgimento automático dos conflitos, a execução do comando 'git rerere' executará uma mesclagem de três vias entre o surgimento automático dos conflitos anterior, a resolução manual anterior e o surgimento dos conflitos atuais.  Caso essa mesclagem de três vias for resolvida corretamente, o resultado será gravado no arquivo da árvore de trabalho, para que você não precise resolvê-lo manualmente.  Note que o comando 'git rerere' não altera o arquivo do índice, então ainda é preciso fazer as verificações finais de sanidade com o comando `git diff` (ou `git diff -c`) e o 'git add' quando estiver satisfeito."

#. type: Plain text
#: en/git-rerere.txt:185
#, priority:100
msgid "As a convenience measure, 'git merge' automatically invokes 'git rerere' upon exiting with a failed automerge and 'git rerere' records the hand resolve when it is a new conflict, or reuses the earlier hand resolve when it is not.  'git commit' also invokes 'git rerere' when committing a merge result.  What this means is that you do not have to do anything special yourself (besides enabling the rerere.enabled config variable)."
msgstr "Como medida de pura conveniência, o comando 'git merge' invoca automaticamente o 'git rerere' ao encerrar com uma falha automática e o 'git rerere' registra a solução quando se trata de um novo conflito ou reutiliza a solução anterior quando não for.  O comando 'git commit' também invoca o 'git rerere' quando o commit feito resultar numa mesclagem.  Isso significa que você não precisa fazer nada de especial (além de ativar a variável de configuração `rerere.enabled`)."

#. type: Plain text
#: en/git-rerere.txt:190
#, priority:100
msgid "In our example, when you do the test merge, the manual resolution is recorded, and it will be reused when you do the actual merge later with the updated master and topic branch, as long as the recorded resolution is still applicable."
msgstr "No nosso exemplo, quando você faz a mesclagem de teste, a resolução manual é gravada e será reutilizada quando fizer a mesclagem real posteriormente com 'master' e o tópico do ramo atualizados, desde que a resolução gravada ainda seja aplicável."

#. type: Plain text
#: en/git-rerere.txt:194
#, priority:100
msgid "The information 'git rerere' records is also used when running 'git rebase'.  After blowing away the test merge and continuing development on the topic branch:"
msgstr "As informações 'git rerere' também são usadas ao executar 'git rebase'.  Depois de acabar com a mesclagem de teste e o desenvolvimento contínuo no ramo do tópico:"

#. type: delimited block -
#: en/git-rerere.txt:199
#, no-wrap, priority:100
msgid ""
"              o---*---o-------o---o topic\n"
"             /\n"
"    o---o---o---*---o---o---o---o   master\n"
msgstr ""
"              o---*---o-------o---o topic\n"
"             /\n"
"    o---o---o---*---o---o---o---o   master\n"

#. type: delimited block -
#: en/git-rerere.txt:201
#, no-wrap, priority:100
msgid "\t$ git rebase master topic\n"
msgstr "\t$ git rebase master topic\n"

#. type: delimited block -
#: en/git-rerere.txt:205
#, no-wrap, priority:100
msgid ""
"\t\t\t\t  o---*---o-------o---o topic\n"
"\t\t\t\t /\n"
"    o---o---o---*---o---o---o---o   master\n"
msgstr ""
"\t\t\t\t  o---*---o-------o---o topic\n"
"\t\t\t\t /\n"
"    o---o---o---*---o---o---o---o   master\n"

#. type: Plain text
#: en/git-rerere.txt:213
#, priority:100
msgid "you could run `git rebase master topic`, to bring yourself up to date before your topic is ready to be sent upstream.  This would result in falling back to a three-way merge, and it would conflict the same way as the test merge you resolved earlier.  'git rerere' will be run by 'git rebase' to help you resolve this conflict."
msgstr "você pode executar o comando `git rebase master topic`, para se atualizar antes que o seu tópico esteja pronto para ser enviado para a upstream.  Isso resultaria no retorno para uma mesclagem de três vias e entraria em conflito da mesma maneira que o teste de mesclagem que você resolveu anteriormente.  O comando 'git rerere' será executado através do 'git rebase' para ajudá-lo a resolver este conflito."

#. type: Plain text
#: en/git-rerere.txt:219
#, priority:100
msgid "[NOTE] 'git rerere' relies on the conflict markers in the file to detect the conflict.  If the file already contains lines that look the same as lines with conflict markers, 'git rerere' may fail to record a conflict resolution.  To work around this, the `conflict-marker-size` setting in linkgit:gitattributes[5] can be used."
msgstr "[Observação] o comando 'git rerere' conta com os marcadores de conflito no arquivo para detectar o conflito.  Caso o arquivo já contenha as linhas que parecem iguais às linhas dos marcadores de conflito, o comando 'git rerere' pode falhar durante o registro de uma resolução de conflito.  Para contornar isso, a configuração `conflict-marker-size` no linkgit:gitattributes[5] pode ser utilizada."

#. type: Title =
#: en/git-reset.txt:2
#, ignore-same, no-wrap, priority:280
msgid "git-reset(1)"
msgstr "git-reset(1)"

#. type: Plain text
#: en/git-reset.txt:7
#, priority:280
msgid "git-reset - Reset current HEAD to the specified state"
msgstr "git-reset - Redefine o `HEAD` atual para a condição usada"

#. type: Plain text
#: en/git-reset.txt:15
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"'git reset' [-q] [<tree-ish>] [--] <pathspec>...\n"
"'git reset' [-q] [--pathspec-from-file=<file> [--pathspec-file-nul]] [<tree-ish>]\n"
"'git reset' (--patch | -p) [<tree-ish>] [--] [<pathspec>...]\n"
"'git reset' [--soft | --mixed [-N] | --hard | --merge | --keep] [-q] [<commit>]\n"
msgstr ""
"'git reset' [-q] [<árvore>] [--] <pathspec>...\n"
"'git reset' [-q] [--pathspec-from-file=<arquivo> [--pathspec-file-nul]] [<árvore>]\n"
"'git reset' (--patch | -p) [<árvore>] [--] [<pathspec>...]\n"
"'git reset' [--soft | --mixed [-N] | --hard | --merge | --keep] [-q] [<commit>]\n"

#. type: Plain text
#: en/git-reset.txt:22
#, priority:280
msgid "In the first three forms, copy entries from `<tree-ish>` to the index.  In the last form, set the current branch head (`HEAD`) to `<commit>`, optionally modifying index and working tree to match.  The `<tree-ish>`/`<commit>` defaults to `HEAD` in all forms."
msgstr "Nos três primeiros formulários, copie as entradas da `<árvore>` para o índice.  No último formulário, defina o cabeçalho do ramo atual (`HEAD`) como `<commit>`, opcionalmente modificando o índice e a árvore de trabalho para que coincidam.  A predefinição da `<árvore>`/`<commit>` retorna para `HEAD` em todas as formas."

#. type: Labeled list
#: en/git-reset.txt:23
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git reset' [-q] [<tree-ish>] [--] <pathspec>..."
msgstr "'git reset' [-q] [<árvore>] [--] <pathspec>..."

#. type: Labeled list
#: en/git-reset.txt:24
#, no-wrap, priority:280
msgid "'git reset' [-q] [--pathspec-from-file=<file> [--pathspec-file-nul]] [<tree-ish>]"
msgstr "'git reset' [-q] [--pathspec-from-file=<arquivo> [--pathspec-file-nul]] [<árvore>]"

#. type: Plain text
#: en/git-reset.txt:28
#, priority:280
msgid "These forms reset the index entries for all paths that match the `<pathspec>` to their state at `<tree-ish>`.  (It does not affect the working tree or the current branch.)"
msgstr "Esses formulários redefinem as entradas do índice para todos os caminhos correspondentes ao `<pathspec>` à sua condição na `<tree-ish>`.  (Isso não afeta a árvore de trabalho ou a ramificação atual.)"

#. type: Plain text
#: en/git-reset.txt:32
#, ignore-ellipsis, priority:280
msgid "This means that `git reset <pathspec>` is the opposite of `git add <pathspec>`. This command is equivalent to `git restore [--source=<tree-ish>] --staged <pathspec>...`."
msgstr "Isto significa que `git reset <pathspec>` é o oposto de `git add <pathspec>`. Este comando é equivalente a `git restore [--source=<árvore>] --staged <pathspec>...`."

#. type: Plain text
#: en/git-reset.txt:39
#, priority:280
msgid "After running `git reset <pathspec>` to update the index entry, you can use linkgit:git-restore[1] to check the contents out of the index to the working tree. Alternatively, using linkgit:git-restore[1] and specifying a commit with `--source`, you can copy the contents of a path out of a commit to the index and to the working tree in one go."
msgstr "Depois de executar o `git reset <pathspec>` para atualizar a entrada do índice, você pode usar o linkgit:git-restore[1] para verificar o conteúdo do índice para a árvore de trabalho. Como alternativa, utilizando linkgit:git-restore[1] e especificando um commit com `--source`, você pode copiar o conteúdo de um caminho de um commit para o índice e a árvore de trabalho de uma vez só."

#. type: Labeled list
#: en/git-reset.txt:40
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git reset' (--patch | -p) [<tree-ish>] [--] [<pathspec>...]"
msgstr "'git reset' (--patch | -p) [<árvore>] [--] [<pathspec>...]"

#. type: Plain text
#: en/git-reset.txt:44
#, priority:280
msgid "Interactively select hunks in the difference between the index and `<tree-ish>` (defaults to `HEAD`).  The chosen hunks are applied in reverse to the index."
msgstr "Interativamente, selecione os pedaços na diferença entre o índice e a `<árvore>` (a predefinição retorna para `HEAD`).  Os pedaços selecionados são aplicados no sentido inverso ao índice."

#. type: Plain text
#: en/git-reset.txt:48
#, priority:280
msgid "This means that `git reset -p` is the opposite of `git add -p`, i.e.  you can use it to selectively reset hunks. See the ``Interactive Mode'' section of linkgit:git-add[1] to learn how to operate the `--patch` mode."
msgstr "Isso significa que `git reset -p` é o oposto de `git add -p`, ou seja, você pode usá-lo para redefinir seletivamente os blocos. Consulte a seção ``Modo Interativo'' do linkgit:git-add[1] para aprender como operar o modo `--patch`."

#. type: Labeled list
#: en/git-reset.txt:49
#, no-wrap, priority:280
msgid "'git reset' [<mode>] [<commit>]"
msgstr "'git reset' [<modo>] [<commit>]"

#. type: Plain text
#: en/git-reset.txt:54
#, priority:280
msgid "This form resets the current branch head to `<commit>` and possibly updates the index (resetting it to the tree of `<commit>`) and the working tree depending on `<mode>`. If `<mode>` is omitted, defaults to `--mixed`. The `<mode>` must be one of the following:"
msgstr "Esse formulário redefine o cabeçalho de ramificação atual para `<commit>` e possivelmente atualiza o índice (redefinindo-o para a árvore de `<commit>`) e a árvore de trabalho, dependendo do `<modo>`. Caso o `<modo>` seja omitido, a predefinição retorna para a opção `--mixed`. O `<modo>` deve ser um dos seguintes:"

#. type: Labeled list
#: en/git-reset.txt:56
#, ignore-same, no-wrap, priority:280
msgid "--soft"
msgstr "--soft"

#. type: Plain text
#: en/git-reset.txt:61
#, priority:280
msgid "Does not touch the index file or the working tree at all (but resets the head to `<commit>`, just like all modes do). This leaves all your changed files \"Changes to be committed\", as `git status` would put it."
msgstr "Não toca no arquivo de índice ou na árvore de trabalho (mas redefine o cabeçalho para `<commit>`, assim como todos os modos fazem). Isso deixa todos os seus arquivos alterados como \"Changes to be committed\" (Alterações que serão adicionadas ao commit), como o `git status` colocaria."

#. type: Labeled list
#: en/git-reset.txt:62
#, ignore-same, no-wrap, priority:280
msgid "--mixed"
msgstr "--mixed"

#. type: Plain text
#: en/git-reset.txt:66
#, priority:280
msgid "Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit) and reports what has not been updated. This is the default action."
msgstr "Redefine o índice, mas não a árvore de trabalho (ou seja, os arquivos alterados são preservados, mas não marcados para um commit) e relata o que não foi atualizado. Esta é a ação predefinida."

#. type: Plain text
#: en/git-reset.txt:69
#, priority:280
msgid "If `-N` is specified, removed paths are marked as intent-to-add (see linkgit:git-add[1])."
msgstr "Caso `-N` seja especificado, os caminhos removidos serão marcados como uma intenção de adicionar (consulte linkgit:git-add[1])."

#. type: Labeled list
#: en/git-reset.txt:70
#, ignore-same, no-wrap, priority:280
msgid "--hard"
msgstr "--hard"

#. type: Plain text
#: en/git-reset.txt:74
#, priority:280
msgid "Resets the index and working tree. Any changes to tracked files in the working tree since `<commit>` are discarded.  Any untracked files or directories in the way of writing any tracked files are simply deleted."
msgstr "Redefine o índice e a árvore de trabalho. Quaisquer alterações nos arquivos rastreados na árvore de trabalho desde `<commit>` serão descartados.  Os arquivo são simplesmente excluídos quando quaisquer arquivos ou diretórios não estejam rastreados no modo de escrita."

#. type: Plain text
#: en/git-reset.txt:82
#, priority:280
msgid "Resets the index and updates the files in the working tree that are different between `<commit>` and `HEAD`, but keeps those which are different between the index and working tree (i.e. which have changes which have not been added).  If a file that is different between `<commit>` and the index has unstaged changes, reset is aborted."
msgstr "Redefine o índice e atualiza os arquivos na árvore de trabalho que sejam diferentes entre o `<commit>` e o `HEAD`, mas mantém aqueles que são diferentes entre o índice e a árvore de trabalho (ou seja, que têm alterações que não foram adicionadas).  Caso haja um arquivo diferente entre `<commit>` e o índice tiver alterações sem etapas, a redefinição será abortada."

#. type: Plain text
#: en/git-reset.txt:85
#, priority:280
msgid "In other words, `--merge` does something like a `git read-tree -u -m <commit>`, but carries forward unmerged index entries."
msgstr "Em outras palavras, `--merge` faz algo como um `git read-tree -u -m <commit>`, mas carrega as entradas do índice não mescladas adiante."

#. type: Plain text
#: en/git-reset.txt:91
#, priority:280
msgid "Resets index entries and updates files in the working tree that are different between `<commit>` and `HEAD`.  If a file that is different between `<commit>` and `HEAD` has local changes, reset is aborted."
msgstr "Redefine as entradas do índice e atualiza os arquivos na árvore de trabalho que sejam diferentes entre `<commit>` e `HEAD`.  Caso haja uma diferença entre `<commit>` e `HEAD`, assim como houver alterações locais, a redefinição será abortada."

#. type: Plain text
#: en/git-reset.txt:97
#, priority:280
msgid "When the working tree is updated, using --recurse-submodules will also recursively reset the working tree of all active submodules according to the commit recorded in the superproject, also setting the submodules' HEAD to be detached at that commit."
msgstr "Quando a árvore de trabalho é atualizada, utilizando a opção `--recurse-submodules` também redefinirá recursivamente a árvore de trabalho de todos os submódulos ativos de acordo com o commit registrado no superprojeto, também configurando o `HEAD` do submódulo a ser desanexado neste commit."

#. type: Plain text
#: en/git-reset.txt:101 en/git-restore.txt:30 en/git-revert.txt:33
#, priority:280
msgid "See \"Reset, restore and revert\" in linkgit:git[1] for the differences between the three commands."
msgstr "Para as diferenças entre os três comandos consulte \"Redefinir, restaurar e reverter\" em linkgit:git[1]."

#. type: Plain text
#: en/git-reset.txt:109
#, priority:280
msgid "Be quiet, only report errors."
msgstr "Fique em silêncio, reporte apenas as mensagens de erro."

#. type: Labeled list
#: en/git-reset.txt:111
#, ignore-same, no-wrap, priority:280
msgid "--no-refresh"
msgstr "--no-refresh"

#. type: Plain text
#: en/git-reset.txt:113
#, priority:280
msgid "Refresh the index after a mixed reset. Enabled by default."
msgstr "Atualize o índice após uma redefinição mista. Ativado por padrão."

#. type: Labeled list
#: en/git-reset.txt:138
#, no-wrap, priority:280
msgid "Undo add"
msgstr "Desfazendo um \"add\" (adicionar)"

#. type: delimited block -
#: en/git-reset.txt:146
#, no-wrap, priority:280
msgid ""
"$ edit                                     <1>\n"
"$ git add frotz.c filfre.c\n"
"$ mailx                                    <2>\n"
"$ git reset                                <3>\n"
"$ git pull git://info.example.com/ nitfol  <4>\n"
msgstr ""
"$ edit                                     <1>\n"
"$ git add frotz.c filfre.c\n"
"$ mailx                                    <2>\n"
"$ git reset                                <3>\n"
"$ git pull git://info.exemplo.com/ nitfol  <4>\n"

#. type: Plain text
#: en/git-reset.txt:152
#, priority:280
msgid "You are happily working on something, and find the changes in these files are in good order.  You do not want to see them when you run `git diff`, because you plan to work on other files and changes with these files are distracting."
msgstr "Você está trabalhando alegre e feliz em algo e encontra as alterações nesses arquivos em boas condições.  Você não deseja vê-los quando executar o comando `git diff`, porque planeja trabalhar em outros arquivos e as alterações nesses arquivos são uma distração."

#. type: Plain text
#: en/git-reset.txt:153
#, priority:280
msgid "Somebody asks you to pull, and the changes sound worthy of merging."
msgstr "Alguém pede para você fazer um `pull`, e as mudanças parecem dignas de serem mescladas."

#. type: Plain text
#: en/git-reset.txt:158
#, priority:280
msgid "However, you already dirtied the index (i.e. your index does not match the `HEAD` commit).  But you know the pull you are going to make does not affect `frotz.c` or `filfre.c`, so you revert the index changes for these two files.  Your changes in working tree remain there."
msgstr "No entanto, você já sujou o índice (ou seja, o seu índice não corresponde ao commit `HEAD`).  Mas você sabe que o `pull` que você fará não afeta o arquivo `frotz.c` ou o arquivo `filfre.c`, portanto, você reverte as alterações no índice destes dois arquivos.  As suas alterações na árvore de trabalho permanecem lá."

#. type: Plain text
#: en/git-reset.txt:160
#, priority:280
msgid "Then you can pull and merge, leaving `frotz.c` and `filfre.c` changes still in the working tree."
msgstr "Então você pode fazer o `pull` e mesclar deixando as alterações nos arquivo `frotz.c` e` filfre.c` ainda na árvore de trabalho."

#. type: Labeled list
#: en/git-reset.txt:161
#, no-wrap, priority:280
msgid "Undo a commit and redo"
msgstr "Desfazer um commit e refazendo-o"

#. type: delimited block -
#: en/git-reset.txt:168
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"$ git commit ...\n"
"$ git reset --soft HEAD^      <1>\n"
"$ edit                        <2>\n"
"$ git commit -a -c ORIG_HEAD  <3>\n"
msgstr ""
"$ git commit ...\n"
"$ git reset --soft HEAD^      <1>\n"
"$ edit                        <2>\n"
"$ git commit -a -c ORIG_HEAD  <3>\n"

#. type: Plain text
#: en/git-reset.txt:173
#, priority:280
msgid "This is most often done when you remembered what you just committed is incomplete, or you misspelled your commit message, or both.  Leaves working tree as it was before \"reset\"."
msgstr "Isso geralmente é feito quando você se lembra que o commit que acabou de fazer está incorreto ou errou algo na sua mensagem do commit, ou ambos.  Deixa a árvore de trabalho como estava antes de \"redefinir\"."

#. type: Plain text
#: en/git-reset.txt:174
#, priority:280
msgid "Make corrections to working tree files."
msgstr "Faça as correções nos arquivos da árvore de trabalho."

#. type: Plain text
#: en/git-reset.txt:177
#, priority:280
msgid "\"reset\" copies the old head to `.git/ORIG_HEAD`; redo the commit by starting with its log message.  If you do not need to edit the message further, you can give `-C` option instead."
msgstr "\"reset\" copia o cabeçalho antigo para `.git/ORIG_HEAD`; refaça o commit iniciando com sua a mensagem de registro log.  Caso você não precise editar mais a mensagem, em vez disso poderá usar a opção `-C`."

#. type: Plain text
#: en/git-reset.txt:179
#, priority:280
msgid "See also the `--amend` option to linkgit:git-commit[1]."
msgstr "Consulte também a opção `--amend` para linkgit:git-commit[1]."

#. type: Labeled list
#: en/git-reset.txt:180
#, no-wrap, priority:280
msgid "Undo a commit, making it a topic branch"
msgstr "Desfazendo um commit, tornando-o uma ramificação do tópico"

#. type: delimited block -
#: en/git-reset.txt:186
#, no-wrap, priority:280
msgid ""
"$ git branch topic/wip          <1>\n"
"$ git reset --hard HEAD~3       <2>\n"
"$ git switch topic/wip          <3>\n"
msgstr ""
"$ git branch topic/wip          <1>\n"
"$ git reset --hard HEAD~3       <2>\n"
"$ git switch topic/wip          <3>\n"

#. type: Plain text
#: en/git-reset.txt:192
#, priority:280
msgid "You have made some commits, but realize they were premature to be in the `master` branch.  You want to continue polishing them in a topic branch, so create `topic/wip` branch off of the current `HEAD`."
msgstr "Você fez alguns commits, mas percebe que eles eram prematuros para estar no ramo `master`.  Você deseja continuar dando polimento neles numa ramificação de tópico, portanto, crie a ramificação `topic/wip` fora do `HEAD` atual."

#. type: Plain text
#: en/git-reset.txt:193
#, priority:280
msgid "Rewind the master branch to get rid of those three commits."
msgstr "Rebobine o ramo principal para se livrar destes três commits."

#. type: Plain text
#: en/git-reset.txt:194
#, priority:280
msgid "Switch to `topic/wip` branch and keep working."
msgstr "Mude para o ramo `topic/wip` e continue trabalhando."

#. type: Labeled list
#: en/git-reset.txt:195
#, no-wrap, priority:280
msgid "Undo commits permanently"
msgstr "Desfaça-se dos commits permanentemente"

#. type: delimited block -
#: en/git-reset.txt:200
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"$ git commit ...\n"
"$ git reset --hard HEAD~3   <1>\n"
msgstr ""
"$ git commit ...\n"
"$ git reset --hard HEAD~3   <1>\n"

#. type: Plain text
#: en/git-reset.txt:207
#, priority:280
msgid "The last three commits (`HEAD`, `HEAD^`, and `HEAD~2`) were bad and you do not want to ever see them again.  Do *not* do this if you have already given these commits to somebody else.  (See the \"RECOVERING FROM UPSTREAM REBASE\" section in linkgit:git-rebase[1] for the implications of doing so.)"
msgstr "Os últimos três commits (`HEAD`, `HEAD^` e`HEAD~2`) foram ruins e você não deseja mais vê-los novamente.  *Não* faça isso caso já tenha repassado estes commits para outra pessoa.  (Para saber mais sobre as implicações desta ação, consulte a seção \"RECUPERANDO DO UPSTREAM REBASE\" no linkgit:git-rebase[1].)"

#. type: Labeled list
#: en/git-reset.txt:208
#, no-wrap, priority:280
msgid "Undo a merge or pull"
msgstr "Desfazendo uma mesclagem ou `pull`"

#. type: delimited block -
#: en/git-reset.txt:220
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"$ git pull                         <1>\n"
"Auto-merging nitfol\n"
"CONFLICT (content): Merge conflict in nitfol\n"
"Automatic merge failed; fix conflicts and then commit the result.\n"
"$ git reset --hard                 <2>\n"
"$ git pull . topic/branch          <3>\n"
"Updating from 41223... to 13134...\n"
"Fast-forward\n"
"$ git reset --hard ORIG_HEAD       <4>\n"
msgstr ""
"$ git pull                         <1>\n"
"Mesclagem automática do nitfol\n"
"CONFLITO (conteúdo): Houve um conflito durante a mesclagem com nitfol\n"
"A mesclagem automática falhou; arrume os conflitos e faça um novo commit.\n"
"$ git reset --hard                 <2>\n"
"$ git pull . $ git pull . topic/branch          <3>\n"
"Atualizando de 41223... para 13134...\n"
"Fast-forward\n"
"$ git reset --hard ORIG_HEAD       <4>\n"

#. type: Plain text
#: en/git-reset.txt:225
#, priority:280
msgid "Try to update from the upstream resulted in a lot of conflicts; you were not ready to spend a lot of time merging right now, so you decide to do that later."
msgstr "Tente atualizar a partir do upstream responsável pelos diversos conflitos; você não estava pronto para perder muito tempo mesclando agora, então decide fazer isso mais tarde."

#. type: Plain text
#: en/git-reset.txt:228
#, priority:280
msgid "\"pull\" has not made merge commit, so `git reset --hard` which is a synonym for `git reset --hard HEAD` clears the mess from the index file and the working tree."
msgstr "O \"pull\" não fez a consolidação de mesclagem, portanto, `git reset --hard`, que é um sinônimo de `git reset --hard HEAD`, limpa a bagunça do arquivo do índice e da árvore de trabalho."

#. type: Plain text
#: en/git-reset.txt:230
#, priority:280
msgid "Merge a topic branch into the current branch, which resulted in a fast-forward."
msgstr "Mescle uma ramificação de tópico na ramificação atual, o que resultou num avanço rápido."

#. type: Plain text
#: en/git-reset.txt:235
#, priority:280
msgid "But you decided that the topic branch is not ready for public consumption yet.  \"pull\" or \"merge\" always leaves the original tip of the current branch in `ORIG_HEAD`, so resetting hard to it brings your index file and the working tree back to that state, and resets the tip of the branch to that commit."
msgstr "Mas você decidiu que o ramo de tópicos ainda não está pronto para consumo público.  O \"pull\" ou \"merge\" sempre deixa o cume original do ramo atual em `ORIG_HEAD`, portanto, a redefinição forçada traz o seu arquivo do índice e a árvore de trabalho de volta para esta condição e redefine o cume do ramo para este commit."

#. type: Labeled list
#: en/git-reset.txt:236
#, no-wrap, priority:280
msgid "Undo a merge or pull inside a dirty working tree"
msgstr "Desfaça uma mesclagem ou `pull` dentro de uma árvore de trabalho suja"

#. type: delimited block -
#: en/git-reset.txt:245
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"$ git pull                         <1>\n"
"Auto-merging nitfol\n"
"Merge made by recursive.\n"
" nitfol                |   20 +++++----\n"
" ...\n"
"$ git reset --merge ORIG_HEAD      <2>\n"
msgstr ""
"$ git pull                         <1>\n"
"Auto-merging nitfol\n"
"Merge made by recursive.\n"
" nitfol                |   20 +++++----\n"
" ...\n"
"$ git reset --merge ORIG_HEAD      <2>\n"

#. type: Plain text
#: en/git-reset.txt:251
#, priority:280
msgid "Even if you may have local modifications in your working tree, you can safely say `git pull` when you know that the change in the other branch does not overlap with them."
msgstr "Mesmo que você tenha modificações locais em sua árvore de trabalho, você pode usar com segurança `git pull` quando souber que a alteração no outro ramo não se sobrepõe a elas."

#. type: Plain text
#: en/git-reset.txt:256
#, priority:280
msgid "After inspecting the result of the merge, you may find that the change in the other branch is unsatisfactory.  Running `git reset --hard ORIG_HEAD` will let you go back to where you were, but it will discard your local changes, which you do not want.  `git reset --merge` keeps your local changes."
msgstr "Após inspecionar o resultado da mesclagem, você pode achar que a alteração na outra ramificação não é satisfatória.  Se executar o `git reset --hard ORIG_HEAD` permitirá que você volte para onde estava, mas descartará as alterações locais que você não quer.  O `git reset --merge` mantém suas alterações locais."

#. type: Labeled list
#: en/git-reset.txt:258 en/git-stash.txt:306
#, no-wrap, priority:280
msgid "Interrupted workflow"
msgstr "Fluxo de trabalho interrompido"

#. type: Plain text
#: en/git-reset.txt:264
#, priority:280
msgid "Suppose you are interrupted by an urgent fix request while you are in the middle of a large change.  The files in your working tree are not in any shape to be committed yet, but you need to get to the other branch for a quick bugfix."
msgstr "Suponha que você seja interrompido por uma solicitação de correção urgente enquanto estiver no meio de uma grande alteração.  Os arquivos em sua árvore de trabalho ainda não estão em condições para um commit, mas você precisa acessar uma outra ramificação para obter uma correção rápida."

#. type: delimited block -
#: en/git-reset.txt:275
#, no-wrap, priority:280
msgid ""
"$ git switch feature  ;# you were working in \"feature\" branch and\n"
"$ work work work      ;# got interrupted\n"
"$ git commit -a -m \"snapshot WIP\"                 <1>\n"
"$ git switch master\n"
"$ fix fix fix\n"
"$ git commit ;# commit with real log\n"
"$ git switch feature\n"
"$ git reset --soft HEAD^ ;# go back to WIP state  <2>\n"
"$ git reset                                       <3>\n"
msgstr ""
"$ git switch feature  ;# você estava trabalhando no ramo \"feature\" e\n"
"$ work work work      ;# foi interrompido\n"
"$ git commit -a -m \"snapshot WIP\"                 <1>\n"
"$ git switch master\n"
"$ fix fix fix\n"
"$ git commit ;# faz o commit com um registro log real\n"
"$ git switch feature\n"
"$ git reset --soft HEAD^ ;# retorna para a condição WIP <2>\n"
"$ git reset                                       <3>\n"

#. type: Plain text
#: en/git-reset.txt:278
#, priority:280
msgid "This commit will get blown away so a throw-away log message is OK."
msgstr "Este commit será desfeito de modo que o descarte de uma mensagem de registro log seja OK."

#. type: Plain text
#: en/git-reset.txt:280
#, priority:280
msgid "This removes the 'WIP' commit from the commit history, and sets your working tree to the state just before you made that snapshot."
msgstr "Isso remove o commit 'WIP' do histórico e define a sua árvore de trabalho para a condição anterior antes de você fazer este instantâneo."

#. type: Plain text
#: en/git-reset.txt:283
#, priority:280
msgid "At this point the index file still has all the WIP changes you committed as 'snapshot WIP'.  This updates the index to show your WIP files as uncommitted."
msgstr "Neste ponto o arquivo do índice ainda possui todas as alterações do `WIP` que você fez o commit como 'instantâneo WIP'.  Isso faz a atualização do índice para demonstrar que os seus arquivos WIP estão inalterados."

#. type: Plain text
#: en/git-reset.txt:285
#, priority:280
msgid "See also linkgit:git-stash[1]."
msgstr "Consulte também linkgit:git-stash[1]."

#. type: Labeled list
#: en/git-reset.txt:286
#, no-wrap, priority:280
msgid "Reset a single file in the index"
msgstr "Redefine um único arquivo no índice"

#. type: Plain text
#: en/git-reset.txt:291
#, priority:280
msgid "Suppose you have added a file to your index, but later decide you do not want to add it to your commit. You can remove the file from the index while keeping your changes with git reset."
msgstr "Suponha que você tenha adicionado um arquivo ao seu índice mas depois decida que você não quer mais adicioná-lo ao seu commit. Você pode remover o arquivo do índice enquanto mantém suas alterações com o `git reset`."

#. type: delimited block -
#: en/git-reset.txt:296
#, no-wrap, priority:280
msgid ""
"$ git reset -- frotz.c                      <1>\n"
"$ git commit -m \"Commit files in index\"     <2>\n"
"$ git add frotz.c                           <3>\n"
msgstr ""
"$ git reset -- frotz.c                      <1>\n"
"$ git commit -m \"Faz o commit dos arquivos no índice\"     <2>\n"
"$ git add frotz.c                           <3>\n"

#. type: Plain text
#: en/git-reset.txt:300
#, priority:280
msgid "This removes the file from the index while keeping it in the working directory."
msgstr "Isso remove o arquivo do índice enquanto o mantém no diretório de trabalho."

#. type: Plain text
#: en/git-reset.txt:301
#, priority:280
msgid "This commits all other changes in the index."
msgstr "Isso faz o commit de todas as outras modificações no índice."

#. type: Plain text
#: en/git-reset.txt:302
#, priority:280
msgid "Adds the file to the index again."
msgstr "Adiciona o arquivo ao índice novamente."

#. type: Labeled list
#: en/git-reset.txt:303
#, no-wrap, priority:280
msgid "Keep changes in working tree while discarding some previous commits"
msgstr "Mantenha as alterações na árvore de trabalho ao descartar alguns commits anteriores"

#. type: Plain text
#: en/git-reset.txt:310
#, priority:280
msgid "Suppose you are working on something and you commit it, and then you continue working a bit more, but now you think that what you have in your working tree should be in another branch that has nothing to do with what you committed previously. You can start a new branch and reset it while keeping the changes in your working tree."
msgstr "Suponha que você esteja trabalhando em algo e faz o commit, você continua trabalhando mais um pouco, porém agora você acha que o que tem na sua árvore de trabalho deve estar em outro ramo que não tem nada a ver com o commit que você fez anteriormente. Você pode iniciar um novo ramo e redefini-lo, mantendo as alterações na sua árvore de trabalho."

#. type: delimited block -
#: en/git-reset.txt:319
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"$ git tag start\n"
"$ git switch -c branch1\n"
"$ edit\n"
"$ git commit ...                            <1>\n"
"$ edit\n"
"$ git switch -c branch2                     <2>\n"
"$ git reset --keep start                    <3>\n"
msgstr ""
"$ git tag start\n"
"$ git switch -c branch1\n"
"$ edit\n"
"$ git commit ...                            <1>\n"
"$ edit\n"
"$ git switch -c branch2                     <2>\n"
"$ git reset --keep start                    <3>\n"

#. type: Plain text
#: en/git-reset.txt:322
#, priority:280
msgid "This commits your first edits in `branch1`."
msgstr "Isso faz o commit das suas primeiras edições em `branch1`."

#. type: Plain text
#: en/git-reset.txt:326
#, priority:280
msgid "In the ideal world, you could have realized that the earlier commit did not belong to the new topic when you created and switched to `branch2` (i.e. `git switch -c branch2 start`), but nobody is perfect."
msgstr "Em um mundo ideal você poderia ter percebido que o commit anterior não pertencia ao novo tópico quando você criou e alternou para o \"branch2\" (i.e. \"switch -c branch2 start\"), mas ninguém é perfeito."

#. type: Plain text
#: en/git-reset.txt:328
#, priority:280
msgid "But you can use `reset --keep` to remove the unwanted commit after you switched to `branch2`."
msgstr "Porém é possível´ usar a opção `reset --keep` para remover o commit indesejado após alternar para `branch2`."

#. type: Labeled list
#: en/git-reset.txt:329
#, no-wrap, priority:280
msgid "Split a commit apart into a sequence of commits"
msgstr "Divida um commit numa sequência de commits"

#. type: Plain text
#: en/git-reset.txt:337
#, priority:280
msgid "Suppose that you have created lots of logically separate changes and committed them together. Then, later you decide that it might be better to have each logical chunk associated with its own commit. You can use git reset to rewind history without changing the contents of your local files, and then successively use `git add -p` to interactively select which hunks to include into each commit, using `git commit -c` to pre-populate the commit message."
msgstr "Suponha que você tenha criado muitas alterações logicamente separadas e tenha feito o commit deles juntos. Depois, você decide que seria melhor ter cada pedaço lógico associado ao seu próprio commit. É possível utilizar o `git reset` para retroceder o histórico sem alterar o conteúdo dos seus arquivos locais e sucessivamente utilizar o comando `git add -p` para selecionar interativamente quais os blocos que deseja incluir em cada commit utilizando o comando `git commit -c` para preencher previamente a mensagem do commit."

#. type: delimited block -
#: en/git-reset.txt:347
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"$ git reset -N HEAD^                        <1>\n"
"$ git add -p                                <2>\n"
"$ git diff --cached                         <3>\n"
"$ git commit -c HEAD@{1}                    <4>\n"
"...                                         <5>\n"
"$ git add ...                               <6>\n"
"$ git diff --cached                         <7>\n"
"$ git commit ...                            <8>\n"
msgstr ""
"$ git reset -N HEAD^                        <1>\n"
"$ git add -p                                <2>\n"
"$ git diff --cached                         <3>\n"
"$ git commit -c HEAD@{1}                    <4>\n"
"...                                         <5>\n"
"$ git add ...                               <6>\n"
"$ git diff --cached                         <7>\n"
"$ git commit ...                            <8>\n"

#. type: Plain text
#: en/git-reset.txt:353
#, priority:280
msgid "First, reset the history back one commit so that we remove the original commit, but leave the working tree with all the changes. The -N ensures that any new files added with `HEAD` are still marked so that `git add -p` will find them."
msgstr "Primeiro, faz o reset do histórico um commit para trás para que possamos remover o commit original, porém, deixe a árvore de trabalho com todas as alterações. O `-N` garante que quaisquer novos arquivos adicionados com `HEAD`, ainda sejam marcados para que o `git add -p` os encontre."

#. type: Plain text
#: en/git-reset.txt:357
#, priority:280
msgid "Next, we interactively select diff hunks to add using the `git add -p` facility. This will ask you about each diff hunk in sequence and you can use simple commands such as \"yes, include this\", \"No don't include this\" or even the very powerful \"edit\" facility."
msgstr "Em seguida, selecionamos interativamente os blocos das diferenças para serem adicionas utilizando o recurso `git add -p`. Isso lhe perguntará sobre cada pedaço diff em sequência, assim você poderá usar de comandos simples como \"yes, include this\" (sim, inclua isso), \"no don't include this\" (não, não inclua isso) ou mesmo o poderoso recurso \"edit\" (editar)."

#. type: Plain text
#: en/git-reset.txt:361
#, priority:280
msgid "Once satisfied with the hunks you want to include, you should verify what has been prepared for the first commit by using `git diff --cached`. This shows all the changes that have been moved into the index and are about to be committed."
msgstr "Uma vez satisfeito com os blocos que deseja incluir, você deve verificar o que foi preparado para o primeiro commit utilizando a opção `git diff --cached`. Isso exibe todas as alterações que foram movidas para o índice e que estão prontas para o commit."

#. type: Plain text
#: en/git-reset.txt:368
#, priority:280
msgid "Next, commit the changes stored in the index. The `-c` option specifies to pre-populate the commit message from the original message that you started with in the first commit. This is helpful to avoid retyping it. The `HEAD@{1}` is a special notation for the commit that `HEAD` used to be at prior to the original reset commit (1 change ago).  See linkgit:git-reflog[1] for more details. You may also use any other valid commit reference."
msgstr "Em seguida, faça o commit das alterações armazenadas no índice. A opção `-c` especifica para ser feito o preenchimento prévio da mensagem original do commit iniciado com o primeiro commit. É útil para evitar ter que digitá-la novamente. O `HEAD@{1}` é uma notação especial para o commit onde o `HEAD` estava antes da redefinição (reset) do commit original (1 alteração atrás).  Para mais detalhes consulte linkgit:git-reflog[1]. Você também pode utilizar qualquer outro commit válido como referência."

#. type: Plain text
#: en/git-reset.txt:370
#, priority:280
msgid "You can repeat steps 2-4 multiple times to break the original code into any number of commits."
msgstr "Você pode repetir os passos 2-4 diversas vezes para quebrar o código original em diversos commits."

#. type: Plain text
#: en/git-reset.txt:373
#, priority:280
msgid "Now you've split out many of the changes into their own commits, and might no longer use the patch mode of `git add`, in order to select all remaining uncommitted changes."
msgstr "Agora que você dividiu diversas alterações em seus próprios commits e pode não mais usar o modo patch do `git add`, para que possa selecionar todas os commits restantes que não foram alterados."

#. type: Plain text
#: en/git-reset.txt:376
#, priority:280
msgid "Once again, check to verify that you've included what you want to. You may also wish to verify that git diff doesn't show any remaining changes to be committed later."
msgstr "Novamente, verifique se você incluiu o que deseja. Você também deve verificar se o `git diff` não exibe nenhuma outra alteração restante nos commits que serão realizados depois."

#. type: Plain text
#: en/git-reset.txt:377
#, priority:280
msgid "And finally create the final commit."
msgstr "E finalmente, crie o commit final."

#. type: Plain text
#: en/git-reset.txt:383
#, priority:280
msgid "The tables below show what happens when running:"
msgstr "As tabelas abaixo demonstram o que acontece durante a execução:"

#. type: delimited block -
#: en/git-reset.txt:386
#, no-wrap, priority:280
msgid "git reset --option target\n"
msgstr "git reset --option target\n"

#. type: Plain text
#: en/git-reset.txt:390
#, priority:280
msgid "to reset the `HEAD` to another commit (`target`) with the different reset options depending on the state of the files."
msgstr "para redefinir o `HEAD` para outro commit (` target`) com as diferentes opções de redefinição, dependendo do estado dos arquivos."

#. type: Plain text
#: en/git-reset.txt:399
#, priority:280
msgid "In these tables, `A`, `B`, `C` and `D` are some different states of a file. For example, the first line of the first table means that if a file is in state `A` in the working tree, in state `B` in the index, in state `C` in `HEAD` and in state `D` in the target, then `git reset --soft target` will leave the file in the working tree in state `A` and in the index in state `B`.  It resets (i.e. moves) the `HEAD` (i.e. the tip of the current branch, if you are on one) to `target` (which has the file in state `D`)."
msgstr "Nas tabelas, `A`, `B`, `C` e `D` são algumas diferenças entre as condições de um arquivo. Por exemplo, a primeira linha da primeira tabela significa que caso um arquivo esteja no estado `A` na árvore de trabalho, no estado` B` no índice, no estado `C` em `HEAD` e no estado `D` no alvo, o `git reset --soft target` deixará o arquivo na árvore de trabalho no estado `A` e o índice no estado `B`.  Ele redefine (ou seja, move) o `HEAD` (ou seja, o cume do ramo atual, caso tenha um) para `target` (que tem o arquivo no estado `D`)."

#. type: delimited block .
#: en/git-reset.txt:408
#, no-wrap, priority:280
msgid ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" A       B     C    D     --soft   A       B     D\n"
"\t\t\t  --mixed  A       D     D\n"
"\t\t\t  --hard   D       D     D\n"
"\t\t\t  --merge (disallowed)\n"
"\t\t\t  --keep  (disallowed)\n"
msgstr ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" A       B     C    D     --soft   A       B     D\n"
"\t\t\t  --mixed  A       D     D\n"
"\t\t\t  --hard   D       D     D\n"
"\t\t\t  --merge (desaprovado)\n"
"\t\t\t  --keep  (desaprovado)\n"

#. type: delimited block .
#: en/git-reset.txt:418
#, no-wrap, priority:280
msgid ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" A       B     C    C     --soft   A       B     C\n"
"\t\t\t  --mixed  A       C     C\n"
"\t\t\t  --hard   C       C     C\n"
"\t\t\t  --merge (disallowed)\n"
"\t\t\t  --keep   A       C     C\n"
msgstr ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" A       B     C    C     --soft   A       B     C\n"
"\t\t\t  --mixed  A       C     C\n"
"\t\t\t  --hard   C       C     C\n"
"\t\t\t  --merge (desaprovado)\n"
"\t\t\t  --keep   A       C     C\n"

#. type: delimited block .
#: en/git-reset.txt:428
#, no-wrap, priority:280
msgid ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" B       B     C    D     --soft   B       B     D\n"
"\t\t\t  --mixed  B       D     D\n"
"\t\t\t  --hard   D       D     D\n"
"\t\t\t  --merge  D       D     D\n"
"\t\t\t  --keep  (disallowed)\n"
msgstr ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" B       B     C    D     --soft   B       B     D\n"
"\t\t\t  --mixed  B       D     D\n"
"\t\t\t  --hard   D       D     D\n"
"\t\t\t  --merge  D       D     D\n"
"\t\t\t  --keep  (desaprovado)\n"

#. type: delimited block .
#: en/git-reset.txt:438
#, no-wrap, priority:280
msgid ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" B       B     C    C     --soft   B       B     C\n"
"\t\t\t  --mixed  B       C     C\n"
"\t\t\t  --hard   C       C     C\n"
"\t\t\t  --merge  C       C     C\n"
"\t\t\t  --keep   B       C     C\n"
msgstr ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" B       B     C    C     --soft   B       B     C\n"
"\t\t\t  --mixed  B       C     C\n"
"\t\t\t  --hard   C       C     C\n"
"\t\t\t  --merge  C       C     C\n"
"\t\t\t  --keep   B       C     C\n"

#. type: delimited block .
#: en/git-reset.txt:448
#, no-wrap, priority:280
msgid ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" B       C     C    D     --soft   B       C     D\n"
"\t\t\t  --mixed  B       D     D\n"
"\t\t\t  --hard   D       D     D\n"
"\t\t\t  --merge (disallowed)\n"
"\t\t\t  --keep  (disallowed)\n"
msgstr ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" B       C     C    D     --soft   B       C     D\n"
"\t\t\t  --mixed  B       D     D\n"
"\t\t\t  --hard   D       D     D\n"
"\t\t\t  --merge (desaprovado)\n"
"\t\t\t  --keep  (desaprovado)\n"

#. type: delimited block .
#: en/git-reset.txt:458
#, no-wrap, priority:280
msgid ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" B       C     C    C     --soft   B       C     C\n"
"\t\t\t  --mixed  B       C     C\n"
"\t\t\t  --hard   C       C     C\n"
"\t\t\t  --merge  B       C     C\n"
"\t\t\t  --keep   B       C     C\n"
msgstr ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" B       C     C    C     --soft   B       C     C\n"
"\t\t\t  --mixed  B       C     C\n"
"\t\t\t  --hard   C       C     C\n"
"\t\t\t  --merge  B       C     C\n"
"\t\t\t  --keep   B       C     C\n"

#. type: Plain text
#: en/git-reset.txt:468
#, priority:280
msgid "`reset --merge` is meant to be used when resetting out of a conflicted merge. Any mergy operation guarantees that the working tree file that is involved in the merge does not have a local change with respect to the index before it starts, and that it writes the result out to the working tree. So if we see some difference between the index and the target and also between the index and the working tree, then it means that we are not resetting out from a state that a mergy operation left after failing with a conflict. That is why we disallow `--merge` option in this case."
msgstr "A opção `reset --merge` deve ser utilizada durante a redefinição de uma mesclagem em conflito. Qualquer operação de mesclagem garante que o arquivo da árvore de trabalho envolvido na mesclagem não tenha uma alteração local em relação ao índice antes do inicio e que grave o resultado na árvore de trabalho. Portanto, se observarmos alguma diferença entre o índice e o destino, assim como entre o índice e a árvore de trabalho, significa que não estamos redefinindo a partir de um estado que uma operação de mesclagem deixou após falhar com um conflito. É por isso que não permitimos a opção `--merge` nesse caso."

#. type: Plain text
#: en/git-reset.txt:477
#, priority:280
msgid "`reset --keep` is meant to be used when removing some of the last commits in the current branch while keeping changes in the working tree. If there could be conflicts between the changes in the commit we want to remove and the changes in the working tree we want to keep, the reset is disallowed. That's why it is disallowed if there are both changes between the working tree and `HEAD`, and between `HEAD` and the target. To be safe, it is also disallowed when there are unmerged entries."
msgstr "O comando `reset --keep` deve ser utilizado para remover alguns dos últimos commits no ramo atual mantendo as alterações na árvore de trabalho. Caso haja conflitos entre as alterações no commit que queremos remover e as mudanças na árvore de trabalho que desejamos manter, a redefinição será desativada. É por isso que não é permitido caso haja duas mudanças entre a árvore de trabalho, o `HEAD` e entre o` HEAD` e o destino. Por segurança, também não é permitido quando há entradas não imersas."

#. type: Plain text
#: en/git-reset.txt:480
#, priority:280
msgid "The following tables show what happens when there are unmerged entries:"
msgstr "As tabelas a seguir demonstram o que acontece quando há entradas que não foram mescladas:"

#. type: delimited block .
#: en/git-reset.txt:489
#, no-wrap, priority:280
msgid ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" X       U     A    B     --soft  (disallowed)\n"
"\t\t\t  --mixed  X       B     B\n"
"\t\t\t  --hard   B       B     B\n"
"\t\t\t  --merge  B       B     B\n"
"\t\t\t  --keep  (disallowed)\n"
msgstr ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" X       U     A    B     --soft  (disallowed)\n"
"\t\t\t  --mixed  X       B     B\n"
"\t\t\t  --hard   B       B     B\n"
"\t\t\t  --merge  B       B     B\n"
"\t\t\t  --keep  (desaprovado)\n"

#. type: delimited block .
#: en/git-reset.txt:499
#, no-wrap, priority:280
msgid ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" X       U     A    A     --soft  (disallowed)\n"
"\t\t\t  --mixed  X       A     A\n"
"\t\t\t  --hard   A       A     A\n"
"\t\t\t  --merge  A       A     A\n"
"\t\t\t  --keep  (disallowed)\n"
msgstr ""
"working index HEAD target         working index HEAD\n"
"----------------------------------------------------\n"
" X       U     A    A     --soft  (disallowed)\n"
"\t\t\t  --mixed  X       A     A\n"
"\t\t\t  --hard   A       A     A\n"
"\t\t\t  --merge  A       A     A\n"
"\t\t\t  --keep  (desaprovado)\n"

#. type: Plain text
#: en/git-reset.txt:502
#, priority:280
msgid "`X` means any state and `U` means an unmerged index."
msgstr "O `X` significa qualquer condição e `U` significa um índice não mesclado."

#. type: Title =
#: en/git-restore.txt:2
#, ignore-same, no-wrap, priority:280
msgid "git-restore(1)"
msgstr "git-restore(1)"

#. type: Plain text
#: en/git-restore.txt:7
#, priority:280
msgid "git-restore - Restore working tree files"
msgstr "git-restore - Restaura os arquivos das árvores de trabalho"

#. type: Plain text
#: en/git-restore.txt:14
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"'git restore' [<options>] [--source=<tree>] [--staged] [--worktree] [--] <pathspec>...\n"
"'git restore' [<options>] [--source=<tree>] [--staged] [--worktree] --pathspec-from-file=<file> [--pathspec-file-nul]\n"
"'git restore' (-p|--patch) [<options>] [--source=<tree>] [--staged] [--worktree] [--] [<pathspec>...]\n"
msgstr ""
"'git restore' [<opções>] [--source=<árvore>] [--staged] [--worktree] [--] <pathspec>...\n"
"'git restore' [<opções>] [--source=<árvore>] [--staged] [--worktree] --pathspec-from-file=<arquivo> [--pathspec-file-nul]\n"
"'git restore' (-p|--patch) [<opções>] [--source=<árvore>] [--staged] [--worktree] [--] [<pathspec>...]\n"

#. type: Plain text
#: en/git-restore.txt:20
#, priority:280
msgid "Restore specified paths in the working tree with some contents from a restore source. If a path is tracked but does not exist in the restore source, it will be removed to match the source."
msgstr "Restaure os caminhos definidos na árvore de trabalho com algum conteúdo de uma fonte de restauração. Se um caminho for monitorado, porém não existir na fonte de restauração, ele será removido para coincidir com a fonte."

#. type: Plain text
#: en/git-restore.txt:24
#, priority:280
msgid "The command can also be used to restore the content in the index with `--staged`, or restore both the working tree and the index with `--staged --worktree`."
msgstr "O comando também pode ser usado para restaurar o conteúdo no índice com a opção `--staged`, ou para restaurar a árvore de trabalho e o índice com `--staged --worktree`."

#. type: Plain text
#: en/git-restore.txt:27
#, priority:280
msgid "By default, if `--staged` is given, the contents are restored from `HEAD`, otherwise from the index. Use `--source` to restore from a different commit."
msgstr "É predefinido que caso `--staged` seja utilizado, o conteúdo será restaurado a partir do `HEAD`, caso contrário, a partir do índice. Utilize a opção `--source` para restaurar a partir de um commit diferente."

#. type: Plain text
#: en/git-restore.txt:32 en/git-switch.txt:33
#, priority:280
msgid "THIS COMMAND IS EXPERIMENTAL. THE BEHAVIOR MAY CHANGE."
msgstr "ESTE COMANDO É EXPERIMENTAL. O SEU COMPORTAMENTO PODE MUDAR."

#. type: Labeled list
#: en/git-restore.txt:35
#, no-wrap, priority:280
msgid "-s <tree>"
msgstr "-s <árvore>"

#. type: Labeled list
#: en/git-restore.txt:36
#, no-wrap, priority:280
msgid "--source=<tree>"
msgstr "--source=<árvore>"

#. type: Plain text
#: en/git-restore.txt:40
#, priority:280
msgid "Restore the working tree files with the content from the given tree. It is common to specify the source tree by naming a commit, branch or tag associated with it."
msgstr "Restaure arquivos da árvore de trabalho com o conteúdo da árvore informada. É comum especificar a árvore de origem nomeando um commit, ramo ou tag associado com ela."

#. type: Plain text
#: en/git-restore.txt:43
#, priority:280
msgid "If not specified, the contents are restored from `HEAD` if `--staged` is given, otherwise from the index."
msgstr "Caso não seja definido, o conteúdo será restaurado a partir de `HEAD` caso `--staged` seja informado, caso contrário, a restauração será a partir do índice."

#. type: Plain text
#: en/git-restore.txt:54
#, priority:280
msgid "Interactively select hunks in the difference between the restore source and the restore location. See the ``Interactive Mode'' section of linkgit:git-add[1] to learn how to operate the `--patch` mode."
msgstr "Selecione a diferença entre os blocos interativamente entre a origem da restauração e o local da restauração. Consulte a seção ``Modo Interativo'' do linkgit:git-add[1] para aprender como operar o modo `--patch`."

#. type: Plain text
#: en/git-restore.txt:57
#, priority:280
msgid "Note that `--patch` can accept no pathspec and will prompt to restore all modified paths."
msgstr "Note que o comando `--patch` pode não aceitar nenhum `pathspec` e solicitará a restauração de todos os caminhos modificados."

#. type: Labeled list
#: en/git-restore.txt:60 en/git-stash.txt:208
#, no-wrap, priority:280
msgid "-S"
msgstr "-S"

#. type: Labeled list
#: en/git-restore.txt:61 en/git-stash.txt:209
#, ignore-same, no-wrap, priority:280
msgid "--staged"
msgstr "--staged"

#. type: Plain text
#: en/git-restore.txt:65
#, priority:280
msgid "Specify the restore location. If neither option is specified, by default the working tree is restored. Specifying `--staged` will only restore the index. Specifying both restores both."
msgstr "Especifica o local da restauração. É predefinido que caso nenhuma opção seja utilizada a árvore de trabalho será restaurada. Ao usar a opção `--staged` apenas a índice será restaurado. A utilização de ambas as opções faz a restauração de ambos."

#. type: Plain text
#: en/git-restore.txt:69
#, priority:280
msgid "Quiet, suppress feedback messages. Implies `--no-progress`."
msgstr "Silencioso, suprima as mensagens de feedback. Implies `--no-progress`."

#. type: Plain text
#: en/git-restore.txt:81
#, priority:280
msgid "When restoring files in the working tree from the index, use stage #2 ('ours') or #3 ('theirs') for unmerged paths."
msgstr "Ao restaurar os arquivos no índice da árvore de trabalho, utilize o estágio #2 ('nosso') ou #3 ('deles') para os caminhos que não foram mesclados."

#. type: Plain text
#: en/git-restore.txt:85
#, priority:280
msgid "Note that during `git rebase` and `git pull --rebase`, 'ours' and 'theirs' may appear swapped. See the explanation of the same options in linkgit:git-checkout[1] for details."
msgstr "Note que durante o `git rebase` e o `git pull --rebase`, o 'nosso' e o 'deles' podem aparecer trocados. Para mais detalhes, consulte a explicação das mesmas opções em linkgit:git-checkout[1]."

#. type: Plain text
#: en/git-restore.txt:90
#, priority:280
msgid "When restoring files on the working tree from the index, recreate the conflicted merge in the unmerged paths."
msgstr "Ao restaurar os arquivos no índice da árvore de trabalho, recrie a mesclagem conflitante nos caminhos que ainda não foram mesclados."

#. type: Labeled list
#: en/git-restore.txt:97
#, ignore-same, no-wrap, priority:280
msgid "--ignore-unmerged"
msgstr "--ignore-unmerged"

#. type: Plain text
#: en/git-restore.txt:102
#, priority:280
msgid "When restoring files on the working tree from the index, do not abort the operation if there are unmerged entries and neither `--ours`, `--theirs`, `--merge` or `--conflict` is specified. Unmerged paths on the working tree are left alone."
msgstr "Não aborte a operação ao restaurar os arquivos no índice da árvore de trabalho caso existam entradas que não foram mescladas e tão pouco as opções `--ours`, `--theirs`, `--merge` ou `--conflict` tenham sido utilizadas. Nada acontece com os caminhos das árvores de trabalho caso eles não tenham sido mesclados."

#. type: Plain text
#: en/git-restore.txt:109
#, priority:280
msgid "In sparse checkout mode, by default is to only update entries matched by `<pathspec>` and sparse patterns in $GIT_DIR/info/sparse-checkout. This option ignores the sparse patterns and unconditionally restores any files in `<pathspec>`."
msgstr "É predefinido que no modo de averiguação esparsa, apenas atualize as entradas que coincidam com `<pathspec>` e os padrões esparsos no `$GIT_DIR/info/sparse-checkout`. Esta opção ignora os padrões esparsos e restaura incondicionalmente todos os arquivos que estejam no `<pathspec>`."

#. type: Plain text
#: en/git-restore.txt:120
#, priority:280
msgid "If `<pathspec>` names an active submodule and the restore location includes the working tree, the submodule will only be updated if this option is given, in which case its working tree will be restored to the commit recorded in the superproject, and any local modifications overwritten. If nothing (or `--no-recurse-submodules`) is used, submodules working trees will not be updated. Just like linkgit:git-checkout[1], this will detach `HEAD` of the submodule."
msgstr "Caso o `<pathspec>` nomeie um submódulo ativo e o local da restauração incluir a árvore de trabalho, o submódulo será atualizado apenas caso esta opção seja utilizada. Neste caso, a sua árvore de trabalho será restaurada para o commit registrado no superprojeto e quaisquer alterações locais serão substituídas. Caso nada (ou a opção `--no-recurse-submodules`) seja utilizado, os submódulos que trabalham nas árvores não serão atualizados. Assim como linkgit:git-submodule[1], isso faz com que o `HEAD` seja desanexando do submódulo."

#. type: Plain text
#: en/git-restore.txt:127
#, priority:280
msgid "In overlay mode, the command never removes files when restoring. In no-overlay mode, tracked files that do not appear in the `--source` tree are removed, to make them match `<tree>` exactly. The default is no-overlay mode."
msgstr "No modo de sobreposição, o comando nunca remove os arquivos durante a restauração. No modo sem sobreposição, os arquivos rastreados que não aparecem na árvore `--source` são removidos para fazê-los coincidir exatamente com a `<árvore>`. A predefinição é sem sobreposição."

#. type: Plain text
#: en/git-restore.txt:155
#, priority:280
msgid "The following sequence switches to the `master` branch, reverts the `Makefile` to two revisions back, deletes hello.c by mistake, and gets it back from the index."
msgstr "A sequência a seguir muda para o ramo `master`, reverte o` Makefile` para duas revisões anteriores, apaga o hello.c por engano e o recupera do índice."

#. type: delimited block -
#: en/git-restore.txt:161
#, no-wrap, priority:280
msgid ""
"$ git switch master\n"
"$ git restore --source master~2 Makefile  <1>\n"
"$ rm -f hello.c\n"
"$ git restore hello.c                     <2>\n"
msgstr ""
"$ git switch master\n"
"$ git restore --source master~2 Makefile  <1>\n"
"$ rm -f hello.c\n"
"$ git restore hello.c                     <2>\n"

#. type: Plain text
#: en/git-restore.txt:165
#, priority:280
msgid "restore hello.c from the index"
msgstr "restaurar o hello.c do índice"

#. type: Plain text
#: en/git-restore.txt:168
#, priority:280
msgid "If you want to restore _all_ C source files to match the version in the index, you can say"
msgstr "Caso queira restaurar _TODOS_ os arquivos do código fonte C para que coincidam com a versão do índice, você pode usar"

#. type: delimited block -
#: en/git-restore.txt:171
#, no-wrap, priority:280
msgid "$ git restore '*.c'\n"
msgstr "$ git restore '*.c'\n"

#. type: Plain text
#: en/git-restore.txt:177
#, priority:280
msgid "Note the quotes around `*.c`.  The file `hello.c` will also be restored, even though it is no longer in the working tree, because the file globbing is used to match entries in the index (not in the working tree by the shell)."
msgstr "Observe as aspas em torno de `* .c`.  O arquivo `hello.c` também será restaurado ainda que não esteja mais na árvore de trabalho, pois o agrupamento dos arquivos é utilizado para coincidir com as entradas do índice (não na árvore de trabalho pelo shell)."

#. type: Plain text
#: en/git-restore.txt:179
#, priority:280
msgid "To restore all files in the current directory"
msgstr "Para restaurar todos os arquivos no diretório atual"

#. type: delimited block -
#: en/git-restore.txt:182
#, no-wrap, priority:280
msgid "$ git restore .\n"
msgstr "$ git restore .\n"

#. type: Plain text
#: en/git-restore.txt:186
#, priority:280
msgid "or to restore all working tree files with 'top' pathspec magic (see linkgit:gitglossary[7])"
msgstr "ou para restaurar todos os arquivos do cume da árvore de trabalho com a mágica do \"pathspec\" (consulte linkgit:gitglossary[7])"

#. type: delimited block -
#: en/git-restore.txt:189
#, no-wrap, priority:280
msgid "$ git restore :/\n"
msgstr "$ git restore :/\n"

#. type: Plain text
#: en/git-restore.txt:193
#, priority:280
msgid "To restore a file in the index to match the version in `HEAD` (this is the same as using linkgit:git-reset[1])"
msgstr "Para restaurar um arquivo no índice que coincida com a versão em `HEAD` (é o mesmo que usar linkgit:git-reset[1])"

#. type: delimited block -
#: en/git-restore.txt:196
#, no-wrap, priority:280
msgid "$ git restore --staged hello.c\n"
msgstr "$ git restore --staged hello.c\n"

#. type: Plain text
#: en/git-restore.txt:200
#, priority:280
msgid "or you can restore both the index and the working tree (this the same as using linkgit:git-checkout[1])"
msgstr "ou você pode restaurar o índice e a árvore de trabalho (é o mesmo que usar linkgit:git-checkout[1])"

#. type: delimited block -
#: en/git-restore.txt:203
#, no-wrap, priority:280
msgid "$ git restore --source=HEAD --staged --worktree hello.c\n"
msgstr "$ git restore --source=HEAD --staged --worktree hello.c\n"

#. type: Plain text
#: en/git-restore.txt:206
#, priority:280
msgid "or the short form which is more practical but less readable:"
msgstr "ou a forma abreviada que é mais prática, mas menos legível:"

#. type: delimited block -
#: en/git-restore.txt:209
#, no-wrap, priority:280
msgid "$ git restore -s@ -SW hello.c\n"
msgstr "$ git restore -s@ -SW hello.c\n"

#. type: Plain text
#: en/git-restore.txt:215
#, ignore-same, priority:280
msgid "linkgit:git-checkout[1], linkgit:git-reset[1]"
msgstr "linkgit:git-checkout[1], linkgit:git-reset[1]"

#. type: Title =
#: en/git-revert.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-revert(1)"
msgstr "git-revert(1)"

#. type: Plain text
#: en/git-revert.txt:7
#, priority:100
msgid "git-revert - Revert some existing commits"
msgstr "git-revert - Reverte alguns commits existentes"

#. type: Plain text
#: en/git-revert.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git revert' [--[no-]edit] [-n] [-m parent-number] [-s] [-S[<keyid>]] <commit>...\n"
"'git revert' (--continue | --skip | --abort | --quit)\n"
msgstr ""
"'git revert' [--[no-]edit] [-n] [-m parent-number] [-s] [-S[<keyid>]] <commit>...\n"
"'git revert' (--continue | --skip | --abort | --quit)\n"

#. type: Plain text
#: en/git-revert.txt:21
#, priority:100
msgid "Given one or more existing commits, revert the changes that the related patches introduce, and record some new commits that record them.  This requires your working tree to be clean (no modifications from the HEAD commit)."
msgstr "Dado um ou mais commits já existentes, reverta as alterações introduzidas pelos patches relacionados e registre alguns novos commits que registram neles.  Isso requer que a sua árvore de trabalho esteja limpa (nenhuma alteração a partir do commit `HEAD`)."

#. type: Plain text
#: en/git-revert.txt:30
#, priority:100
msgid "Note: 'git revert' is used to record some new commits to reverse the effect of some earlier commits (often only a faulty one).  If you want to throw away all uncommitted changes in your working directory, you should see linkgit:git-reset[1], particularly the `--hard` option.  If you want to extract specific files as they were in another commit, you should see linkgit:git-restore[1], specifically the `--source` option. Take care with these alternatives as both will discard uncommitted changes in your working directory."
msgstr "Nota: 'git revert' é utilizado para registrar alguns commits novos para reverter o efeito de alguns commits anteriores (geralmente apenas um com problema).  Caso queira descartar todos os commits das alterações que não foram aplicados no seu diretório de trabalho, você deve consultar linkgit:git-reset[1], em particular a opção `--hard`.  Caso queira extrair arquivos específicos da maneira que eles estavam em um outro commit, você deve consutar linkgit:git-restore[1], principalmente a opção `--source`. Tenha cuidado com ambas alternativas pois elas descartam qualquer modificação não aplicada no seu diretório de trabalho."

#. type: Plain text
#: en/git-revert.txt:43
#, priority:100
msgid "Commits to revert.  For a more complete list of ways to spell commit names, see linkgit:gitrevisions[7].  Sets of commits can also be given but no traversal is done by default, see linkgit:git-rev-list[1] and its `--no-walk` option."
msgstr "Commits que serão revertidos.  Para obter uma lista mais completa das maneiras de como soletrar os nomes dos commits, consulte linkgit:gitrevisions[7]  Um conjunto de commits também podem ser informados porém nenhuma travessia é feita por padrão, consulte linkgit:git-rev-list[1] e a sua opção `--no-walk`."

#. type: Plain text
#: en/git-revert.txt:49
#, priority:100
msgid "With this option, 'git revert' will let you edit the commit message prior to committing the revert. This is the default if you run the command from a terminal."
msgstr "Com esta opção, o comando 'git revert' permitirá a edição da mensagem do commit antes de fazer a reversão do commit. Esta é a predefinição caso execute o comando num terminal."

#. type: Labeled list
#: en/git-revert.txt:50
#, no-wrap, priority:100
msgid "-m parent-number"
msgstr "-m parent-number"

#. type: Labeled list
#: en/git-revert.txt:51
#, no-wrap, priority:100
msgid "--mainline parent-number"
msgstr "--mainline parent-number"

#. type: Plain text
#: en/git-revert.txt:57
#, priority:100
msgid "Usually you cannot revert a merge because you do not know which side of the merge should be considered the mainline.  This option specifies the parent number (starting from 1) of the mainline and allows revert to reverse the change relative to the specified parent."
msgstr "Geralmente, você não pode reverter uma mesclagem porque não sabe qual o lado da mesclagem deve ser considerado a linha principal.  Esta opção determina o número do pai (começando em 1) da linha principal e permite que a reversão reverta a alteração em relação ao pai informado."

#. type: Plain text
#: en/git-revert.txt:62
#, priority:100
msgid "Reverting a merge commit declares that you will never want the tree changes brought in by the merge.  As a result, later merges will only bring in tree changes introduced by commits that are not ancestors of the previously reverted merge.  This may or may not be what you want."
msgstr "A reversão da mesclagem de um commit declara que você nunca vai querer que as alterações na árvore sejam trazidas pela mesclagem.  Como resultado, as mesclagens posteriores trarão apenas as alterações na árvore introduzidas pelos commits que não sejam os ancestrais da mesclagem revertida anteriormente.  Isso pode ou não ser o que você queira."

#. type: Plain text
#: en/git-revert.txt:65
#, priority:100
msgid "See the link:howto/revert-a-faulty-merge.html[revert-a-faulty-merge How-To] for more details."
msgstr "Consulte o link:howto/revert-a-faulty-merge.html[Como fazer um 'revert-a-faulty-merge'] para mais detalhes."

#. type: Plain text
#: en/git-revert.txt:69
#, priority:100
msgid "With this option, 'git revert' will not start the commit message editor."
msgstr "Com esta opção, o comando 'git revert' não iniciará o editor das mensagens do commit."

#. type: Plain text
#: en/git-revert.txt:87
#, priority:100
msgid "Usually the command automatically creates some commits with commit log messages stating which commits were reverted.  This flag applies the changes necessary to revert the named commits to your working tree and the index, but does not make the commits.  In addition, when this option is used, your index does not have to match the HEAD commit.  The revert is done against the beginning state of your index."
msgstr "Geralmente, o comando cria automaticamente alguns commits com mensagens no registro log informando quais commits foram revertidos.  Esta opção aplica as alterações necessárias para reverter os commits informados para a sua árvore de trabalho e o índice, mas não faz os commits.  Além disso, quando esta opção é utilizada, o seu índice não precisa coincidir ao HEAD do commit.  A reversão é feita na condição inicial do seu índice."

#. type: Plain text
#: en/git-revert.txt:90
#, priority:100
msgid "This is useful when reverting more than one commits' effect to your index in a row."
msgstr "Isso é útil durante ao reverter o efeito de um ou mais commits no seu índice, numa linha."

#. type: Labeled list
#: en/git-revert.txt:117
#, ignore-same, no-wrap, priority:100
msgid "--reference"
msgstr "--reference"

#. type: Plain text
#: en/git-revert.txt:124
#, priority:100
msgid "Instead of starting the body of the log message with \"This reverts <full object name of the commit being reverted>.\", refer to the commit using \"--pretty=reference\" format (cf. linkgit:git-log[1]).  The `revert.reference` configuration variable can be used to enable this option by default."
msgstr ""

#. type: Labeled list
#: en/git-revert.txt:132
#, no-wrap, priority:100
msgid "`git revert HEAD~3`"
msgstr "`git revert HEAD~3`"

#. type: Plain text
#: en/git-revert.txt:136
#, priority:100
msgid "Revert the changes specified by the fourth last commit in HEAD and create a new commit with the reverted changes."
msgstr "Reverta as alterações informadas pelo quarto último commit no HEAD e crie um novo commit com as alterações revertidas."

#. type: Labeled list
#: en/git-revert.txt:137
#, no-wrap, priority:100
msgid "`git revert -n master~5..master~2`"
msgstr "`git revert -n master~5..master~2`"

#. type: Plain text
#: en/git-revert.txt:144
#, priority:100
msgid "Revert the changes done by commits from the fifth last commit in master (included) to the third last commit in master (included), but do not create any commit with the reverted changes. The revert only modifies the working tree and the index."
msgstr "Reverta as alterações feitas pelos commits do quinto último commit no master (incluso) para o terceiro último commit no master (incluso), porém não crie nenhum commit com as alterações revertidas. A reversão altera apenas a árvore de trabalho e o índice."

#. type: Title =
#: en/git-rev-list.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-rev-list(1)"
msgstr "git-rev-list(1)"

#. type: Plain text
#: en/git-rev-list.txt:7
#, priority:80
msgid "git-rev-list - Lists commit objects in reverse chronological order"
msgstr "git-rev-list - Lista os objetos commits em ordem reversa cronologicamente"

#. type: Plain text
#: en/git-rev-list.txt:13
#, ignore-ellipsis, no-wrap, priority:80
msgid "'git rev-list' [<options>] <commit>... [[--] <path>...]\n"
msgstr "'git rev-list' [<opções>] <commit>... [[--] <caminho>...]\n"

#. type: Plain text
#: en/git-rev-list.txt:25
#, priority:80
msgid "'rev-list' is a very essential Git command, since it provides the ability to build and traverse commit ancestry graphs. For this reason, it has a lot of different options that enables it to be used by commands as different as 'git bisect' and 'git repack'."
msgstr "O 'rev-list' é um comando Git muito essencial, pois fornece a capacidade de construir e transpor os grafos de ancestralidade de um commit. Por este motivo, ele possui muitas opções diferentes que permitem a sua utilização por comandos tão diferentes como 'git bisect' e 'git repack'."

#. type: Plain text
#: en/git-rev-list.txt:38
#, priority:80
msgid "Print the list of commits reachable from the current branch."
msgstr "Imprime a lista dos commits acessíveis a partir do ramo atual."

#. type: delimited block -
#: en/git-rev-list.txt:41
#, no-wrap, priority:80
msgid "git rev-list HEAD\n"
msgstr "git rev-list HEAD\n"

#. type: Plain text
#: en/git-rev-list.txt:45
#, priority:80
msgid "Print the list of commits on this branch, but not present in the upstream branch."
msgstr "Imprime a lista de commits neste ramo, mas não está presente no ramo upstream."

#. type: delimited block -
#: en/git-rev-list.txt:48
#, no-wrap, priority:80
msgid "git rev-list @{upstream}..HEAD\n"
msgstr "git rev-list @{upstream}..HEAD\n"

#. type: Plain text
#: en/git-rev-list.txt:52
#, priority:80
msgid "Format commits with their author and commit message (see also the porcelain linkgit:git-log[1])."
msgstr "Formate os commits com o autor e a mensagem de commit (consulte também a porcelana linkgit:git-log[1])."

#. type: delimited block -
#: en/git-rev-list.txt:55
#, no-wrap, priority:80
msgid "git rev-list --format=medium HEAD\n"
msgstr "git rev-list --format=medium HEAD\n"

#. type: Plain text
#: en/git-rev-list.txt:59
#, priority:80
msgid "Format commits along with their diffs (see also the porcelain linkgit:git-log[1], which can do this in a single process)."
msgstr "Formate os commits junto com os seus diffs (consulte também a porcelana linkgit:git-log[1], que pode fazer isso em um único processo)."

#. type: delimited block -
#: en/git-rev-list.txt:63
#, no-wrap, priority:80
msgid ""
"git rev-list HEAD |\n"
"git diff-tree --stdin --format=medium -p\n"
msgstr ""
"git rev-list HEAD |\n"
"git diff-tree --stdin --format=medium -p\n"

#. type: Plain text
#: en/git-rev-list.txt:67
#, priority:80
msgid "Print the list of commits on the current branch that touched any file in the `Documentation` directory."
msgstr "Imprime a lista dos commits no ramo atual que tenha tocado em qualquer arquivo no diretório `Documentação`."

#. type: delimited block -
#: en/git-rev-list.txt:70
#, no-wrap, priority:80
msgid "git rev-list HEAD -- Documentation/\n"
msgstr "git rev-list HEAD -- Documentação/\n"

#. type: Plain text
#: en/git-rev-list.txt:74
#, priority:80
msgid "Print the list of commits authored by you in the past year, on any branch, tag, or other ref."
msgstr "Imprima a lista dos commits da sua autoria no ano passado, em qualquer ramo, tag ou outra ref."

#. type: delimited block -
#: en/git-rev-list.txt:77
#, no-wrap, priority:80
msgid "git rev-list --author=you@example.com --since=1.year.ago --all\n"
msgstr "git rev-list --author=you@example.com --since=1.year.ago --all\n"

#. type: Plain text
#: en/git-rev-list.txt:81
#, priority:80
msgid "Print the list of objects reachable from the current branch (i.e., all commits and the blobs and trees they contain)."
msgstr "Imprima a lista dos objetos alcançáveis a partir do ramo atual (ou seja, todos os commits que contenha todos os objetos bolha e as árvores)."

#. type: delimited block -
#: en/git-rev-list.txt:84
#, no-wrap, priority:80
msgid "git rev-list --objects HEAD\n"
msgstr "git rev-list --objects HEAD\n"

#. type: Plain text
#: en/git-rev-list.txt:91
#, priority:80
msgid "Compare the disk size of all reachable objects, versus those reachable from reflogs, versus the total packed size. This can tell you whether running `git repack -ad` might reduce the repository size (by dropping unreachable objects), and whether expiring reflogs might help."
msgstr "Compare o tamanho do disco de todos os objetos alcançáveis, versus aqueles alcançáveis a partir dos reflogs, versus o tamanho compactado total. Isso pode informar se a execução do comando `git repack -ad` pode reduzir o tamanho do repositório (eliminando objetos inacessíveis) e se os reflogs que estão para expirar podem servir de alguma assistência."

#. type: delimited block -
#: en/git-rev-list.txt:101
#, no-wrap, priority:80
msgid ""
"# reachable objects\n"
"git rev-list --disk-usage --objects --all\n"
"# plus reflogs\n"
"git rev-list --disk-usage --objects --all --reflog\n"
"# total disk size used\n"
"du -c .git/objects/pack/*.pack .git/objects/??/*\n"
"# alternative to du: add up \"size\" and \"size-pack\" fields\n"
"git count-objects -v\n"
msgstr ""
"# objetos acessíveis\n"
"git rev-list --disk-usage --objects --all\n"
"# mais os reflogs\n"
"git rev-list --disk-usage --objects --all --reflog\n"
"# tamanho total da utilização do disco\n"
"du -c .git/objects/pack/*.pack .git/objects/??/*\n"
"# é uma alternativa para du: add up \"size\" e os campos \"size-pack\"\n"
"git count-objects -v\n"

#. type: Plain text
#: en/git-rev-list.txt:107
#, priority:80
msgid "Report the disk size of each branch, not including objects used by the current branch. This can find outliers that are contributing to a bloated repository size (e.g., because somebody accidentally committed large build artifacts)."
msgstr "Relata o tamanho do disco de cada ramificação, não incluindo os objetos usados pela ramificação atual. Isso pode descobrir valores atípicos que estão contribuindo para um repositório inchado (porque alguém por acidente enviou um commit de algo muito grande por exemplo)."

#. type: delimited block -
#: en/git-rev-list.txt:116
#, no-wrap, priority:80
msgid ""
"git for-each-ref --format='%(refname)' |\n"
"while read branch\n"
"do\n"
"\tsize=$(git rev-list --disk-usage --objects HEAD..$branch)\n"
"\techo \"$size $branch\"\n"
"done |\n"
"sort -n\n"
msgstr ""
"git for-each-ref --format='%(refname)' |\n"
"while read branch\n"
"do\n"
"\tsize=$(git rev-list --disk-usage --objects HEAD..$branch)\n"
"\techo \"$size $branch\"\n"
"done |\n"
"sort -n\n"

#. type: Plain text
#: en/git-rev-list.txt:122
#, priority:80
msgid "Compare the on-disk size of branches in one group of refs, excluding another. If you co-mingle objects from multiple remotes in a single repository, this can show which remotes are contributing to the repository size (taking the size of `origin` as a baseline)."
msgstr "Compare o tamanho das ramificações no disco em um conjunto de refs, excluindo outro. Caso misture objetos de vários repositórios remotos em um único repositório, isso pode mostrar quais deles estão contribuindo para o aumento do tamanho do repositório (tomando o tamanho de `origin` como base)."

#. type: delimited block -
#: en/git-rev-list.txt:125
#, no-wrap, priority:80
msgid "git rev-list --disk-usage --objects --remotes=$suspect --not --remotes=origin\n"
msgstr "git rev-list --disk-usage --objects --remotes=$suspect --not --remotes=origin\n"

#. type: Title =
#: en/git-rev-parse.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-rev-parse(1)"
msgstr "git-rev-parse(1)"

#. type: Plain text
#: en/git-rev-parse.txt:7
#, priority:80
msgid "git-rev-parse - Pick out and massage parameters"
msgstr "git-rev-parse - Escolha e trabalhe os parâmetros"

#. type: Plain text
#: en/git-rev-parse.txt:13
#, ignore-ellipsis, no-wrap, priority:80
msgid "'git rev-parse' [<options>] <args>...\n"
msgstr "'git rev-parse' [<opções>] <args>...\n"

#. type: Plain text
#: en/git-rev-parse.txt:23
#, priority:80
msgid "Many Git porcelainish commands take mixture of flags (i.e. parameters that begin with a dash '-') and parameters meant for the underlying 'git rev-list' command they use internally and flags and parameters for the other commands they use downstream of 'git rev-list'.  This command is used to distinguish between them."
msgstr "Muitos comandos porcelana do Git utilizam uma mistura de opções (ou seja, parâmetros que começam com um traço '-') e os parâmetros destinados ao comando 'git rev-list' subjacente que eles utilizam internamente, as opções e os parâmetros para os outros comandos que utilizam na produção final do 'git rev-list '.  Este comando é utilizado para se distinguir entre eles."

#. type: Title ~
#: en/git-rev-parse.txt:29
#, no-wrap, priority:80
msgid "Operation Modes"
msgstr "Modos de Operação"

#. type: Plain text
#: en/git-rev-parse.txt:32
#, priority:80
msgid "Each of these options must appear first on the command line."
msgstr "Cada uma destas opções deve aparecer primeiro na linha de comando."

#. type: Labeled list
#: en/git-rev-parse.txt:33
#, ignore-same, no-wrap, priority:80
msgid "--parseopt"
msgstr "--parseopt"

#. type: Plain text
#: en/git-rev-parse.txt:35
#, priority:80
msgid "Use 'git rev-parse' in option parsing mode (see PARSEOPT section below)."
msgstr "Utilize o comando 'git rev-parse' no modo de análise de opções (consulte a seção \"PARSEOPT\" abaixo)."

#. type: Labeled list
#: en/git-rev-parse.txt:36
#, ignore-same, no-wrap, priority:80
msgid "--sq-quote"
msgstr "--sq-quote"

#. type: Plain text
#: en/git-rev-parse.txt:40
#, priority:80
msgid "Use 'git rev-parse' in shell quoting mode (see SQ-QUOTE section below). In contrast to the `--sq` option below, this mode does only quoting. Nothing else is done to command input."
msgstr "Utilize o comando 'git rev-parse' em modo de citação shell (consulte a seção \"SQ-QUOTE\" abaixo). Ao contrário da opção `--sq` abaixo, este modo apenas cita. Nada mais é feito para comandar a entrada."

#. type: Title ~
#: en/git-rev-parse.txt:42
#, no-wrap, priority:80
msgid "Options for --parseopt"
msgstr "As opções para `--parseopt`"

#. type: Labeled list
#: en/git-rev-parse.txt:44
#, ignore-same, no-wrap, priority:80
msgid "--keep-dashdash"
msgstr "--keep-dashdash"

#. type: Plain text
#: en/git-rev-parse.txt:47
#, priority:80
msgid "Only meaningful in `--parseopt` mode. Tells the option parser to echo out the first `--` met instead of skipping it."
msgstr "Apenas faz sentido no modo `--parseopt`. Informa ao analisador das opções para ecoar o primeiro `--` encontrado em vez de ignorá-lo."

#. type: Labeled list
#: en/git-rev-parse.txt:48
#, ignore-same, no-wrap, priority:80
msgid "--stop-at-non-option"
msgstr "--stop-at-non-option"

#. type: Plain text
#: en/git-rev-parse.txt:52
#, priority:80
msgid "Only meaningful in `--parseopt` mode.  Lets the option parser stop at the first non-option argument.  This can be used to parse sub-commands that take options themselves."
msgstr "Apenas faz sentido no modo `--parseopt`.  Permite que o analisador de opções pare no primeiro argumento sem opção.  Pode ser usado para analisar os subcomandos que aceitam essas opções."

#. type: Labeled list
#: en/git-rev-parse.txt:53
#, ignore-same, no-wrap, priority:80
msgid "--stuck-long"
msgstr "--stuck-long"

#. type: Plain text
#: en/git-rev-parse.txt:56
#, priority:80
msgid "Only meaningful in `--parseopt` mode. Output the options in their long form if available, and with their arguments stuck."
msgstr "Apenas faz sentido no modo `--parseopt`. Gere as opções em sua forma longa, caso estejam disponíveis, e com os seus argumentos bloqueados."

#. type: Title ~
#: en/git-rev-parse.txt:58
#, no-wrap, priority:80
msgid "Options for Filtering"
msgstr "Opções para a filtragem"

#. type: Labeled list
#: en/git-rev-parse.txt:60
#, ignore-same, no-wrap, priority:80
msgid "--revs-only"
msgstr "--revs-only"

#. type: Plain text
#: en/git-rev-parse.txt:63
#, priority:80
msgid "Do not output flags and parameters not meant for 'git rev-list' command."
msgstr "Não produza opções e parâmetros não destinados ao comando 'git rev-list'."

#. type: Labeled list
#: en/git-rev-parse.txt:64
#, ignore-same, no-wrap, priority:80
msgid "--no-revs"
msgstr "--no-revs"

#. type: Plain text
#: en/git-rev-parse.txt:67
#, priority:80
msgid "Do not output flags and parameters meant for 'git rev-list' command."
msgstr "Não produza opções e parâmetros destinados ao comando 'git rev-list'."

#. type: Labeled list
#: en/git-rev-parse.txt:68
#, ignore-same, no-wrap, priority:80
msgid "--flags"
msgstr "--flags"

#. type: Plain text
#: en/git-rev-parse.txt:70
#, priority:80
msgid "Do not output non-flag parameters."
msgstr "Não produza parâmetros que não sejam opções."

#. type: Labeled list
#: en/git-rev-parse.txt:71
#, ignore-same, no-wrap, priority:80
msgid "--no-flags"
msgstr "--no-flags"

#. type: Plain text
#: en/git-rev-parse.txt:73
#, priority:80
msgid "Do not output flag parameters."
msgstr "Não gere parâmetros para opções."

#. type: Title ~
#: en/git-rev-parse.txt:75
#, no-wrap, priority:80
msgid "Options for Output"
msgstr "Opções para a Saída"

#. type: Labeled list
#: en/git-rev-parse.txt:77
#, no-wrap, priority:80
msgid "--default <arg>"
msgstr "--default <arg>"

#. type: Plain text
#: en/git-rev-parse.txt:80
#, priority:80
msgid "If there is no parameter given by the user, use `<arg>` instead."
msgstr "Caso não haja nenhum parâmetro informado pelo usuário, em vez disso utilize `<arg>`."

#. type: Labeled list
#: en/git-rev-parse.txt:81
#, no-wrap, priority:80
msgid "--prefix <arg>"
msgstr "--prefix <arg>"

#. type: Plain text
#: en/git-rev-parse.txt:86
#, priority:80
msgid "Behave as if 'git rev-parse' was invoked from the `<arg>` subdirectory of the working tree.  Any relative filenames are resolved as if they are prefixed by `<arg>` and will be printed in that form."
msgstr "Comporte-se como se o comando 'git rev-parse' fosse invocado no subdiretório `<arg>` da árvore de trabalho.  Quaisquer nomes dos arquivos relativos são resolvidos como se fossem prefixados através do `<arg>` e serão impressos neste formulário."

#. type: Plain text
#: en/git-rev-parse.txt:90
#, priority:80
msgid "This can be used to convert arguments to a command run in a subdirectory so that they can still be used after moving to the top-level of the repository.  For example:"
msgstr "Pode ser utilizado para converter os argumentos num comando executado-o num subdiretório para que eles ainda possam ser utilizados após a mudança para o nível mais alto do repositório.  Por exemplo:"

#. type: delimited block -
#: en/git-rev-parse.txt:96
#, no-wrap, priority:80
msgid ""
"prefix=$(git rev-parse --show-prefix)\n"
"cd \"$(git rev-parse --show-toplevel)\"\n"
"# rev-parse provides the -- needed for 'set'\n"
"eval \"set $(git rev-parse --sq --prefix \"$prefix\" -- \"$@\")\"\n"
msgstr ""
"prefix=$(git rev-parse --show-prefix)\n"
"cd \"$(git rev-parse --show-toplevel)\"\n"
"# rev-parse provides the -- needed for 'set'\n"
"eval \"set $(git rev-parse --sq --prefix \"$prefix\" -- \"$@\")\"\n"

#. type: Plain text
#: en/git-rev-parse.txt:103
#, priority:80
msgid "Verify that exactly one parameter is provided, and that it can be turned into a raw 20-byte SHA-1 that can be used to access the object database. If so, emit it to the standard output; otherwise, error out."
msgstr "Verifique que exatamente um parâmetro seja informado e se pode ser transformado num SHA-1 com 20 bytes brutos, que possa ser utilizado para acessar o banco de dados do objeto. Em caso positivo, emita-o para a saída padrão; caso contrário, gere um erro."

#. type: Plain text
#: en/git-rev-parse.txt:112
#, priority:80
msgid "If you want to make sure that the output actually names an object in your object database and/or can be used as a specific type of object you require, you can add the `^{type}` peeling operator to the parameter.  For example, `git rev-parse \"$VAR^{commit}\"` will make sure `$VAR` names an existing object that is a commit-ish (i.e. a commit, or an annotated tag that points at a commit).  To make sure that `$VAR` names an existing object of any type, `git rev-parse \"$VAR^{object}\"` can be used."
msgstr "Caso queira garantir que a saída realmente nomeie um objeto no banco de dados dos objetos e/ou possam ser utilizados como um tipo específico que você precisa, é possível adicionar o operador de remoção `^{type}` ao parâmetro.  Por exemplo, `git rev-parse\" $VAR^{commit}\"` garantirá que `$VAR` nomeie um objeto já existente que seja um \"commit-ish\" (ou seja, um commit ou uma tag anotada que aponte para um commit).  Para garantir que o '$VAR` nomeie um objeto já existente de qualquer tipo, `git rev-parse \"$VAR^{object}\"` pode ser utilizado."

#. type: Plain text
#: en/git-rev-parse.txt:116
#, priority:80
msgid "Note that if you are verifying a name from an untrusted source, it is wise to use `--end-of-options` so that the name argument is not mistaken for another option."
msgstr "Note que se você estiver verificando um nome de uma fonte não confiável, é prudente usar a opção `--end-of-options` para que o argumento relacionado ao nome não seja confundido com uma outra opção."

#. type: Plain text
#: en/git-rev-parse.txt:123
#, priority:80
msgid "Only meaningful in `--verify` mode. Do not output an error message if the first argument is not a valid object name; instead exit with non-zero status silently.  SHA-1s for valid object names are printed to stdout on success."
msgstr "Apenas faz sentido no modo `--verify`. Não produza uma mensagem de erro caso o primeiro argumento não for um nome válido do objeto; em vez disso, encerre com uma condição diferente de zero silenciosamente.  O SHA-1 para os objetos com nomes válidos que são impressos com êxito no stdout."

#. type: Labeled list
#: en/git-rev-parse.txt:124
#, ignore-same, no-wrap, priority:80
msgid "--sq"
msgstr "--sq"

#. type: Plain text
#: en/git-rev-parse.txt:132
#, priority:80
msgid "Usually the output is made one line per flag and parameter.  This option makes output a single line, properly quoted for consumption by shell.  Useful when you expect your parameter to contain whitespaces and newlines (e.g. when using pickaxe `-S` with 'git diff-{asterisk}'). In contrast to the `--sq-quote` option, the command input is still interpreted as usual."
msgstr "Normalmente, a saída é feita uma linha por opção e parâmetro.  Esta opção gera a saída numa única linha, devidamente citada para utilização do shell.  Útil quando você espera que o seu parâmetro contenha espaços e novas linhas (por exemplo, ao utilizar a picareta `S` com 'git diff-{asterisk}'). Ao contrário da opção `--sq-quote`, a entrada do comando ainda é interpretada como de costume."

#. type: Labeled list
#: en/git-rev-parse.txt:133
#, no-wrap, priority:80
msgid "--short[=length]"
msgstr "--short[=comprimento]"

#. type: Plain text
#: en/git-rev-parse.txt:138
#, priority:80
msgid "Same as `--verify` but shortens the object name to a unique prefix with at least `length` characters. The minimum length is 4, the default is the effective value of the `core.abbrev` configuration variable (see linkgit:git-config[1])."
msgstr "O mesmo que `--verify` porém encurta o nome do objeto para um prefixo único com pelo menos um`comprimento` determinado de caracteres. A quantidade mínima é de 4 caracteres, o valor é predefinido na variável de configuração `core.abbrev` (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-rev-parse.txt:143
#, priority:80
msgid "When showing object names, prefix them with '{caret}' and strip '{caret}' prefix from the object names that already have one."
msgstr "Ao exibir os nomes dos objetos, prefixe-os com '{caret}' e retire o prefixo '{caret}' dos nomes dos objetos que já possuam um."

#. type: Labeled list
#: en/git-rev-parse.txt:144
#, no-wrap, priority:80
msgid "--abbrev-ref[=(strict|loose)]"
msgstr "--abbrev-ref[=(strict|loose)]"

#. type: Plain text
#: en/git-rev-parse.txt:148
#, priority:80
msgid "A non-ambiguous short name of the objects name.  The option core.warnAmbiguousRefs is used to select the strict abbreviation mode."
msgstr "Para um nome abreviado não ambíguo dos nomes dos objetos.  A opção `core.warnAmbiguousRefs` é utilizada para selecionar o modo estrito da abreviação."

#. type: Labeled list
#: en/git-rev-parse.txt:149
#, ignore-same, no-wrap, priority:80
msgid "--symbolic"
msgstr "--symbolic"

#. type: Plain text
#: en/git-rev-parse.txt:153
#, priority:80
msgid "Usually the object names are output in SHA-1 form (with possible '{caret}' prefix); this option makes them output in a form as close to the original input as possible."
msgstr "Normalmente, os nomes dos objetos são emitidos em formato SHA-1 (com possível prefixo '{caret}'); essa opção faz com que eles sejam impressos o mais próximo possíveis da entrada original."

#. type: Labeled list
#: en/git-rev-parse.txt:154
#, ignore-same, no-wrap, priority:80
msgid "--symbolic-full-name"
msgstr "--symbolic-full-name"

#. type: Plain text
#: en/git-rev-parse.txt:161
#, priority:80
msgid "This is similar to --symbolic, but it omits input that are not refs (i.e. branch or tag names; or more explicitly disambiguating \"heads/master\" form, when you want to name the \"master\" branch when there is an unfortunately named tag \"master\"), and show them as full refnames (e.g. \"refs/heads/master\")."
msgstr "É semelhante ao `--symbolic`, porém omite a entrada que não seja uma refs (por exemplo, os nomes dos ramos ou tags; ou de uma forma explicitamente desambiguante \"heads/master\", quando você quer nomear a o ramo \"master\" quando houver uma tag com o nome \"master\") e mostre-os como \"refnames\" completos (por exemplo, \"refs/heads/master\")."

#. type: Title ~
#: en/git-rev-parse.txt:163
#, no-wrap, priority:80
msgid "Options for Objects"
msgstr "Opções para os Objetos"

#. type: Plain text
#: en/git-rev-parse.txt:167
#, priority:80
msgid "Show all refs found in `refs/`."
msgstr "Exibe todas as refs encontradas em `refs/`."

#. type: Labeled list
#: en/git-rev-parse.txt:168
#, no-wrap, priority:80
msgid "--branches[=pattern]"
msgstr "--branches[=pattern]"

#. type: Labeled list
#: en/git-rev-parse.txt:169
#, no-wrap, priority:80
msgid "--tags[=pattern]"
msgstr "--tags[=padrão]"

#. type: Labeled list
#: en/git-rev-parse.txt:170
#, no-wrap, priority:80
msgid "--remotes[=pattern]"
msgstr "--remotes[=padrão]"

#. type: Plain text
#: en/git-rev-parse.txt:174
#, priority:80
msgid "Show all branches, tags, or remote-tracking branches, respectively (i.e., refs found in `refs/heads`, `refs/tags`, or `refs/remotes`, respectively)."
msgstr "Exibe todos as ramificações, tags ou ramificações monitoradas remotamente, respectivamente (ou seja, as refs encontradas respectivamente em `refs/heads`, `refs/tags` ou `refs/remotes`)."

#. type: Plain text
#: en/git-rev-parse.txt:178
#, priority:80
msgid "If a `pattern` is given, only refs matching the given shell glob are shown.  If the pattern does not contain a globbing character (`?`, `*`, or `[`), it is turned into a prefix match by appending `/*`."
msgstr "Caso um `padrão` seja informado, apenas as refs coincidentes com o \"shell glob\" são exibidos.  Caso o padrão não contenha um caractere curinga (`?`, `*` ou `[`), este será transformado num prefixo correspondente ao acrescentar `/*`."

#. type: Labeled list
#: en/git-rev-parse.txt:179
#, no-wrap, priority:80
msgid "--glob=pattern"
msgstr "--glob=pattern"

#. type: Plain text
#: en/git-rev-parse.txt:185
#, priority:80
msgid "Show all refs matching the shell glob pattern `pattern`. If the pattern does not start with `refs/`, this is automatically prepended.  If the pattern does not contain a globbing character (`?`, `*`, or `[`), it is turned into a prefix match by appending `/*`."
msgstr "Exiba todos os árbitros que coincidam com o `padrão` (pattern) do \"glob\". Caso o padrão não comece com `refs /`, isto será anexado automaticamente.  Caso o padrão não contenha um caractere curinga (`?`, `*` ou `[`), este será transformado num prefixo correspondente ao acrescentar `/*`."

#. type: Labeled list
#: en/git-rev-parse.txt:186 en/rev-list-options.txt:183
#, no-wrap, priority:260
msgid "--exclude=<glob-pattern>"
msgstr "--exclude=<glob-pattern>"

#. type: Plain text
#: en/git-rev-parse.txt:193 en/rev-list-options.txt:191
#, priority:260
msgid "Do not include refs matching '<glob-pattern>' that the next `--all`, `--branches`, `--tags`, `--remotes`, or `--glob` would otherwise consider. Repetitions of this option accumulate exclusion patterns up to the next `--all`, `--branches`, `--tags`, `--remotes`, or `--glob` option (other options or arguments do not clear accumulated patterns)."
msgstr "Não inclua as refs que coincidam com `<glob-pattern>` em que as próximas opções `--all`, `--branches`, `--tags`, `--remotes` ou `--glob` considerariam de outra forma. As repetições destas opções acumulam padrões de exclusão até a próxima opção `--all`, `--branches`, `--tags`, `--remotes` ou `--glob` (outras opções ou argumentos não limpam os padrões acumulados)."

#. type: Plain text
#: en/git-rev-parse.txt:199 en/rev-list-options.txt:197
#, priority:260
msgid "The patterns given should not begin with `refs/heads`, `refs/tags`, or `refs/remotes` when applied to `--branches`, `--tags`, or `--remotes`, respectively, and they must begin with `refs/` when applied to `--glob` or `--all`. If a trailing '/{asterisk}' is intended, it must be given explicitly."
msgstr "Os padrões informados não devem começar com `refs/heads`, `refs/tags`, ou `refs/remotes` quando aplicadas as opções `--branches`, `--tags`, ou `--remotes` respectivamente, e devem começar com `refs/` quando for aplicado ao `--glob` ou `--all`. Se a intenção for um delimitador '/{asterisco}', este deve ser utilizado de forma explicita."

#. type: Labeled list
#: en/git-rev-parse.txt:200
#, no-wrap, priority:80
msgid "--disambiguate=<prefix>"
msgstr "--disambiguate=<prefixo>"

#. type: Plain text
#: en/git-rev-parse.txt:205
#, priority:80
msgid "Show every object whose name begins with the given prefix.  The <prefix> must be at least 4 hexadecimal digits long to avoid listing each and every object in the repository by mistake."
msgstr "Exiba todos os objetos cujo nome começa com o prefixo informado.  O `<prefixo>` deve ter pelo menos 4 dígitos hexadecimais para evitar ter que listar por engano todos os objetos no repositório."

#. type: Title ~
#: en/git-rev-parse.txt:207
#, no-wrap, priority:80
msgid "Options for Files"
msgstr "Opções para os Arquivos"

#. type: Labeled list
#: en/git-rev-parse.txt:209
#, ignore-same, no-wrap, priority:80
msgid "--local-env-vars"
msgstr "--local-env-vars"

#. type: Plain text
#: en/git-rev-parse.txt:214
#, priority:80
msgid "List the GIT_* environment variables that are local to the repository (e.g. GIT_DIR or GIT_WORK_TREE, but not GIT_EDITOR).  Only the names of the variables are listed, not their value, even if they are set."
msgstr "Liste as variável de ambiente do GIT_* que são locais no repositório (`GIT_DIR` ou `GIT_WORK_TREE`, mas não o `GIT_EDITOR` por exemplo).  Somente os nomes das variáveis são listadas, não o seu valor, mesmo que estejam definidos."

#. type: Labeled list
#: en/git-rev-parse.txt:215
#, no-wrap, priority:80
msgid "--path-format=(absolute|relative)"
msgstr "--path-format=(absolute|relative)"

#. type: Plain text
#: en/git-rev-parse.txt:220
#, priority:80
msgid "Controls the behavior of certain other options. If specified as absolute, the paths printed by those options will be absolute and canonical. If specified as relative, the paths will be relative to the current working directory if that is possible.  The default is option specific."
msgstr "Controla o comportamento de algumas outras opções. Caso seja definido como absoluto, os caminhos impressos por estas opções serão absolutas e canônicas. Caso seja definido como relativo, os caminhos serão relativos ao diretório de trabalho atual, caso seja possível.  A predefinição é opção específica."

#. type: Plain text
#: en/git-rev-parse.txt:224
#, priority:80
msgid "This option may be specified multiple times and affects only the arguments that follow it on the command line, either to the end of the command line or the next instance of this option."
msgstr "Esta opção pode ser usada várias vezes e afeta apenas os argumentos seguintes na linha de comando, seja no final da linha de comando ou na próxima instância desta opção."

#. type: Plain text
#: en/git-rev-parse.txt:226
#, priority:80
msgid "The following options are modified by `--path-format`:"
msgstr "As seguintes opções são modificadas pela opção `--path-format`:"

#. type: Labeled list
#: en/git-rev-parse.txt:227
#, ignore-same, no-wrap, priority:80
msgid "--git-dir"
msgstr "--git-dir"

#. type: Plain text
#: en/git-rev-parse.txt:231
#, priority:80
msgid "Show `$GIT_DIR` if defined. Otherwise show the path to the .git directory. The path shown, when relative, is relative to the current working directory."
msgstr "Exibe o `$GIT_DIR` caso seja definido. Caso contrário, exibe o caminho para o diretório .git. O caminho exibido, quando relativo, é relativo ao diretório de trabalho atual."

#. type: Plain text
#: en/git-rev-parse.txt:235
#, priority:80
msgid "If `$GIT_DIR` is not defined and the current directory is not detected to lie in a Git repository or work tree print a message to stderr and exit with nonzero status."
msgstr "Caso o `$GIT_DIR` não esteja definido e o diretório atual não for detectado como estando num repositório Git ou na árvore de trabalho, imprima uma mensagem para stderr e encere com uma condição diferente de zero."

#. type: Labeled list
#: en/git-rev-parse.txt:236
#, ignore-same, no-wrap, priority:80
msgid "--git-common-dir"
msgstr "--git-common-dir"

#. type: Plain text
#: en/git-rev-parse.txt:238
#, priority:80
msgid "Show `$GIT_COMMON_DIR` if defined, else `$GIT_DIR`."
msgstr "Exibe o `$GIT_COMMON_DIR` caso seja definido, senão `$GIT_DIR`."

#. type: Labeled list
#: en/git-rev-parse.txt:239
#, no-wrap, priority:80
msgid "--resolve-git-dir <path>"
msgstr "--resolve-git-dir <caminho>"

#. type: Plain text
#: en/git-rev-parse.txt:244
#, priority:80
msgid "Check if <path> is a valid repository or a gitfile that points at a valid repository, and print the location of the repository.  If <path> is a gitfile then the resolved path to the real repository is printed."
msgstr "Verifique se o <caminho> é um repositório válido ou um 'gitfile' que aponte para um repositório válido e imprima o local do repositório.  Caso o <caminho> seja um gitfile, o caminho resolvido para o repositório real será impresso."

#. type: Labeled list
#: en/git-rev-parse.txt:245
#, no-wrap, priority:80
msgid "--git-path <path>"
msgstr "--git-path <caminho>"

#. type: Plain text
#: en/git-rev-parse.txt:251
#, ignore-ellipsis, priority:80
msgid "Resolve \"$GIT_DIR/<path>\" and takes other path relocation variables such as $GIT_OBJECT_DIRECTORY, $GIT_INDEX_FILE... into account. For example, if $GIT_OBJECT_DIRECTORY is set to /foo/bar then \"git rev-parse --git-path objects/abc\" returns /foo/bar/abc."
msgstr "Resolva \"$GIT_DIR/<caminho>\" e leve em consideração as outras variáveis de realocação do caminho, como `$GIT_OBJECT_DIRECTORY`, `$GIT_INDEX_FILE`, etc. Caso `$GIT_OBJECT_DIRECTORY` seja definido para '/foo/bar' por exemplo, então o comando \"git rev-parse --git-path objects/abc\" returna '/foo/bar/abc'."

#. type: Labeled list
#: en/git-rev-parse.txt:252
#, ignore-same, no-wrap, priority:80
msgid "--show-toplevel"
msgstr "--show-toplevel"

#. type: Plain text
#: en/git-rev-parse.txt:255
#, priority:80
msgid "Show the (by default, absolute) path of the top-level directory of the working tree. If there is no working tree, report an error."
msgstr "Mostra o caminho (absoluto) do cume do diretório da árvore de trabalho. Caso não haja uma árvore de trabalho, relate um erro."

#. type: Labeled list
#: en/git-rev-parse.txt:256
#, ignore-same, no-wrap, priority:80
msgid "--show-superproject-working-tree"
msgstr "--show-superproject-working-tree"

#. type: Plain text
#: en/git-rev-parse.txt:261
#, priority:80
msgid "Show the absolute path of the root of the superproject's working tree (if exists) that uses the current repository as its submodule.  Outputs nothing if the current repository is not used as a submodule by any project."
msgstr "Exibe o caminho absoluto da raiz da árvore de trabalho do superprojeto (caso exista) que usa o repositório atual como sendo o seu submódulo.  Não produz nada caso o repositório atual não eja usado como um submódulo por nenhum projeto."

#. type: Labeled list
#: en/git-rev-parse.txt:262
#, ignore-same, no-wrap, priority:80
msgid "--shared-index-path"
msgstr "--shared-index-path"

#. type: Plain text
#: en/git-rev-parse.txt:265
#, priority:80
msgid "Show the path to the shared index file in split index mode, or empty if not in split-index mode."
msgstr "Exibe o caminho para o arquivo do índice compartilhado no modo de índice dividido ou vazio caso não esteja no modo do índice dividido."

#. type: Plain text
#: en/git-rev-parse.txt:267
#, priority:80
msgid "The following options are unaffected by `--path-format`:"
msgstr "As seguintes opções não são afetadas pela opção `--path-format`:"

#. type: Labeled list
#: en/git-rev-parse.txt:268
#, ignore-same, no-wrap, priority:80
msgid "--absolute-git-dir"
msgstr "--absolute-git-dir"

#. type: Plain text
#: en/git-rev-parse.txt:271
#, priority:80
msgid "Like `--git-dir`, but its output is always the canonicalized absolute path."
msgstr "Como `--git-dir`, porém sua saída é sempre o caminho absoluto canonizado."

#. type: Labeled list
#: en/git-rev-parse.txt:272
#, ignore-same, no-wrap, priority:80
msgid "--is-inside-git-dir"
msgstr "--is-inside-git-dir"

#. type: Plain text
#: en/git-rev-parse.txt:275
#, priority:80
msgid "When the current working directory is below the repository directory print \"true\", otherwise \"false\"."
msgstr "Quando o diretório de trabalho atual estiver abaixo do diretório do repositório, imprima 'true', caso contrário, 'false'."

#. type: Labeled list
#: en/git-rev-parse.txt:276
#, ignore-same, no-wrap, priority:80
msgid "--is-inside-work-tree"
msgstr "--is-inside-work-tree"

#. type: Plain text
#: en/git-rev-parse.txt:279
#, priority:80
msgid "When the current working directory is inside the work tree of the repository print \"true\", otherwise \"false\"."
msgstr "Quando o diretório de trabalho atual estiver dentro da árvore de trabalho do repositório, imprima 'true', caso contrário, 'false'."

#. type: Labeled list
#: en/git-rev-parse.txt:280
#, ignore-same, no-wrap, priority:80
msgid "--is-bare-repository"
msgstr "--is-bare-repository"

#. type: Plain text
#: en/git-rev-parse.txt:282
#, priority:80
msgid "When the repository is bare print \"true\", otherwise \"false\"."
msgstr "Quando o repositório for simples imprima 'true', caso contrário 'false'."

#. type: Labeled list
#: en/git-rev-parse.txt:283
#, ignore-same, no-wrap, priority:80
msgid "--is-shallow-repository"
msgstr "--is-shallow-repository"

#. type: Plain text
#: en/git-rev-parse.txt:285
#, priority:80
msgid "When the repository is shallow print \"true\", otherwise \"false\"."
msgstr "Quando o repositório é raso, imprima 'true', caso contrário, 'false'."

#. type: Labeled list
#: en/git-rev-parse.txt:286
#, ignore-same, no-wrap, priority:80
msgid "--show-cdup"
msgstr "--show-cdup"

#. type: Plain text
#: en/git-rev-parse.txt:290
#, priority:80
msgid "When the command is invoked from a subdirectory, show the path of the top-level directory relative to the current directory (typically a sequence of \"../\", or an empty string)."
msgstr "Quando o comando é chamado a partir de um subdiretório, exiba o caminho do diretório do nível mais alto em relação ao diretório atual (geralmente uma sequência de \"../\" ou uma sequência vazia)."

#. type: Labeled list
#: en/git-rev-parse.txt:291
#, ignore-same, no-wrap, priority:80
msgid "--show-prefix"
msgstr "--show-prefix"

#. type: Plain text
#: en/git-rev-parse.txt:295
#, priority:80
msgid "When the command is invoked from a subdirectory, show the path of the current directory relative to the top-level directory."
msgstr "Quando o comando é invocado a partir de um subdiretório, exiba o caminho do diretório atual em relação ao nível mais alto do diretório."

#. type: Labeled list
#: en/git-rev-parse.txt:296
#, no-wrap, priority:80
msgid "--show-object-format[=(storage|input|output)]"
msgstr "--show-object-format[=(storage|input|output)]"

#. type: Plain text
#: en/git-rev-parse.txt:301
#, priority:80
msgid "Show the object format (hash algorithm) used for the repository for storage inside the `.git` directory, input, or output. For input, multiple algorithms may be printed, space-separated.  If not specified, the default is \"storage\"."
msgstr "Exiba o formato do objeto (algoritmo hash) usado no repositório para o armazenamento dentro do diretório `.git`, entrada ou saída. Para a entrada, vários algoritmos podem ser impressos, separados por espaço.  Caso não seja definido, a predefinição retorna para \"storage\"."

#. type: Title ~
#: en/git-rev-parse.txt:304
#, no-wrap, priority:80
msgid "Other Options"
msgstr "Outras Opções"

#. type: Labeled list
#: en/git-rev-parse.txt:306
#, no-wrap, priority:80
msgid "--since=datestring"
msgstr "--since=datestring"

#. type: Labeled list
#: en/git-rev-parse.txt:307
#, no-wrap, priority:80
msgid "--after=datestring"
msgstr "--after=datestring"

#. type: Plain text
#: en/git-rev-parse.txt:310
#, priority:80
msgid "Parse the date string, and output the corresponding --max-age= parameter for 'git rev-list'."
msgstr "Analise a cadeia de caracteres da data e exiba o parâmetro --max-age= correspondente para 'git rev-list'."

#. type: Labeled list
#: en/git-rev-parse.txt:311
#, no-wrap, priority:80
msgid "--until=datestring"
msgstr "--until=datestring"

#. type: Labeled list
#: en/git-rev-parse.txt:312
#, no-wrap, priority:80
msgid "--before=datestring"
msgstr "--before=datestring"

#. type: Plain text
#: en/git-rev-parse.txt:315
#, priority:80
msgid "Parse the date string, and output the corresponding --min-age= parameter for 'git rev-list'."
msgstr "Analise a cadeia de caracteres da data e exiba o parâmetro `--max-age=` que corresponda para o 'git rev-list'."

#. type: Labeled list
#: en/git-rev-parse.txt:316
#, ignore-ellipsis, no-wrap, priority:80
msgid "<args>..."
msgstr "<args>..."

#. type: Plain text
#: en/git-rev-parse.txt:318
#, priority:80
msgid "Flags and parameters to be parsed."
msgstr "As opções e os parâmetros que serão analisados."

#. type: Title -
#: en/git-rev-parse.txt:323
#, no-wrap, priority:80
msgid "PARSEOPT"
msgstr "PARSEOPT"

#. type: Plain text
#: en/git-rev-parse.txt:328
#, priority:80
msgid "In `--parseopt` mode, 'git rev-parse' helps massaging options to bring to shell scripts the same facilities C builtins have. It works as an option normalizer (e.g. splits single switches aggregate values), a bit like `getopt(1)` does."
msgstr "No modo `--parseopt`, o comando 'git rev-parse' ajuda no processamento das opções trazendo aos scripts shell as mesmas facilidades integradas que o 'C' possuí. Funciona como um normalizador das opções (por exemplo, divide trocas únicas com valores agregados), quase como o que o `getopt(1)` faz."

#. type: Plain text
#: en/git-rev-parse.txt:333
#, priority:80
msgid "It takes on the standard input the specification of the options to parse and understand, and echoes on the standard output a string suitable for `sh(1)` `eval` to replace the arguments with normalized ones.  In case of error, it outputs usage on the standard error stream, and exits with code 129."
msgstr "Ele assume na entrada padrão a definição das opções para analisar e entender, e ecoa na saída uma sequência adequada para o `sh(1)` `eval` para substituir os argumentos por argumentos normalizados.  Em caso de erro, ele gera a utilização do fluxo de erros predefinidos e encerra com o código 129."

#. type: Plain text
#: en/git-rev-parse.txt:336
#, priority:80
msgid "Note: Make sure you quote the result when passing it to `eval`.  See below for an example."
msgstr "Observação: Certifique-se de citar o resultado ao encaminhá-lo para o `eval`.  Consulte um exemplo abaixo."

#. type: Title ~
#: en/git-rev-parse.txt:338
#, no-wrap, priority:80
msgid "Input Format"
msgstr "Formato de Entrada"

#. type: Plain text
#: en/git-rev-parse.txt:344
#, priority:80
msgid "'git rev-parse --parseopt' input format is fully text based. It has two parts, separated by a line that contains only `--`. The lines before the separator (should be one or more) are used for the usage.  The lines after the separator describe the options."
msgstr "O formato da entrada do comando 'git rev-parse --parseopt' é texto puro. Possui duas partes, separadas por uma linha que contém apenas `--`. As linhas antes do separador (devem ser uma ou mais) são utilizadas para o uso.  As linhas após o separador definem as opções."

#. type: Plain text
#: en/git-rev-parse.txt:346
#, priority:80
msgid "Each line of options has this format:"
msgstr "As opções de cada linha possui este formato:"

#. type: delimited block -
#: en/git-rev-parse.txt:349
#, no-wrap, priority:80
msgid "<opt-spec><flags>*<arg-hint>? SP+ help LF\n"
msgstr "<opt-spec><flags>*<arg-hint>? SP+ help LF\n"

#. type: Labeled list
#: en/git-rev-parse.txt:351
#, no-wrap, priority:80
msgid "`<opt-spec>`"
msgstr "`<opt-spec>`"

#. type: Plain text
#: en/git-rev-parse.txt:356
#, priority:80
msgid "its format is the short option character, then the long option name separated by a comma. Both parts are not required, though at least one is necessary. May not contain any of the `<flags>` characters.  `h,help`, `dry-run` and `f` are examples of correct `<opt-spec>`."
msgstr "o seu formato é o caractere curto da opção e, em seguida, o nome da opção longa, separado por vírgula. Ambas as partes não são necessárias, embora pelo menos uma seja necessária. Não pode conter nenhum dos caracteres `<flags>`.  `h,help`, `dry-run` e `f` são exemplos corretos do `<opt-spec>`."

#. type: Labeled list
#: en/git-rev-parse.txt:357
#, no-wrap, priority:80
msgid "`<flags>`"
msgstr "`<flags>`"

#. type: Plain text
#: en/git-rev-parse.txt:359
#, priority:80
msgid "`<flags>` are of `*`, `=`, `?` or `!`."
msgstr "`<flags>` são do `*`, `=`, `?` ou `!`."

#. type: Plain text
#: en/git-rev-parse.txt:360
#, priority:80
msgid "Use `=` if the option takes an argument."
msgstr "Utilize `=` caso a opção receba um argumento."

#. type: Plain text
#: en/git-rev-parse.txt:364
#, priority:80
msgid "Use `?` to mean that the option takes an optional argument. You probably want to use the `--stuck-long` mode to be able to unambiguously parse the optional argument."
msgstr "Utilize `?` para dar sentido que a opção aceita um argumento opcional. Você provavelmente quer utilzar o modo `--stuck-long` para poder analisar de forma inequívoca o argumento opcional."

#. type: Plain text
#: en/git-rev-parse.txt:368
#, priority:80
msgid "Use `*` to mean that this option should not be listed in the usage generated for the `-h` argument. It's shown for `--help-all` as documented in linkgit:gitcli[7]."
msgstr "Utilize `*` para indicar que esta opção não deve ser listada no uso gerado para a opção `-h`. É exibido para `--help-all` conforme documentado em linkgit:gitcli[7]."

#. type: Plain text
#: en/git-rev-parse.txt:370
#, priority:80
msgid "Use `!` to not make the corresponding negated long option available."
msgstr "Utilize `!` para não fazer com que a opção longa que foi negada esteja disponível."

#. type: Labeled list
#: en/git-rev-parse.txt:371
#, no-wrap, priority:80
msgid "`<arg-hint>`"
msgstr "`<arg-hint>`"

#. type: Plain text
#: en/git-rev-parse.txt:376
#, priority:80
msgid "`<arg-hint>`, if specified, is used as a name of the argument in the help output, for options that take arguments. `<arg-hint>` is terminated by the first whitespace.  It is customary to use a dash to separate words in a multi-word argument hint."
msgstr "Caso `<arg-hint>` seja definido, é usado como um nome do argumento na saída da ajuda, para as opções que aceitem os argumentos. O `<arg-hint>` é finalizado através do primeiro espaço.  É habitual utilizar um traço para separar as palavras numa dica de um argumento com várias palavras."

#. type: Plain text
#: en/git-rev-parse.txt:379
#, priority:80
msgid "The remainder of the line, after stripping the spaces, is used as the help associated to the option."
msgstr "O restante da linha, depois dos espaços removidos, é usado como ajuda associada à opção."

#. type: Plain text
#: en/git-rev-parse.txt:383
#, priority:80
msgid "Blank lines are ignored, and lines that don't match this specification are used as option group headers (start the line with a space to create such lines on purpose)."
msgstr "As linhas em branco são ignoradas e as linhas que não coincidam com esta especificação são utilizadas como cabeçalhos dos grupos das opções (inicie a linha com um espaço para criar essas linhas de propósito)."

#. type: delimited block -
#: en/git-rev-parse.txt:390
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"OPTS_SPEC=\"\\\n"
"some-command [<options>] <args>...\n"
msgstr ""
"OPTS_SPEC=\"\\\n"
"algum-comando [<opções>] <args>...\n"

#. type: delimited block -
#: en/git-rev-parse.txt:392
#, no-wrap, priority:80
msgid ""
"some-command does foo and bar!\n"
"--\n"
msgstr ""
"algum-comando faz 'foo' e 'bar'!\n"
"--\n"

#. type: delimited block -
#: en/git-rev-parse.txt:394
#, no-wrap, priority:80
msgid "h,help    show the help\n"
msgstr "h,help    exibe a ajuda\n"

#. type: delimited block -
#: en/git-rev-parse.txt:399
#, no-wrap, priority:80
msgid ""
"foo       some nifty option --foo\n"
"bar=      some cool option --bar with an argument\n"
"baz=arg   another cool option --baz with a named argument\n"
"qux?path  qux may take a path argument but has meaning by itself\n"
msgstr ""
"foo       alguma opção bonita --foo\n"
"bar=      alguma opção bacana --bar com um argumento\n"
"baz=arg   outra opção bacana --baz com um argumento definido\n"
"qux?path  qux talvez tenha um caminho como argumento porém significa ele mesmo\n"

#. type: delimited block -
#: en/git-rev-parse.txt:402
#, no-wrap, priority:80
msgid ""
"  An option group Header\n"
"C?        option C with an optional argument\"\n"
msgstr ""
"  Um cabeçalho do grupo de opções\n"
"C?        opção 'C' com um argumento opcional\"\n"

#. type: delimited block -
#: en/git-rev-parse.txt:404
#, no-wrap, priority:80
msgid "eval \"$(echo \"$OPTS_SPEC\" | git rev-parse --parseopt -- \"$@\" || echo exit $?)\"\n"
msgstr "eval \"$(echo \"$OPTS_SPEC\" | git rev-parse --parseopt -- \"$@\" || echo exit $?)\"\n"

#. type: Title ~
#: en/git-rev-parse.txt:408
#, no-wrap, priority:80
msgid "Usage text"
msgstr "Texto de uso"

#. type: Plain text
#: en/git-rev-parse.txt:412
#, priority:80
msgid "When `\"$@\"` is `-h` or `--help` in the above example, the following usage text would be shown:"
msgstr "Quando `\"$@\"` is `-h` ou `--help` no exemplo acima, o seguinte texto de utilização será exibido:"

#. type: delimited block -
#: en/git-rev-parse.txt:415
#, ignore-ellipsis, no-wrap, priority:80
msgid "usage: some-command [<options>] <args>...\n"
msgstr "utilização: algum-comando [<opções>] <args>...\n"

#. type: delimited block -
#: en/git-rev-parse.txt:417
#, no-wrap, priority:80
msgid "    some-command does foo and bar!\n"
msgstr "    algum-comando faz 'foo' e 'bar'!\n"

#. type: delimited block -
#: en/git-rev-parse.txt:423
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"    -h, --help            show the help\n"
"    --foo                 some nifty option --foo\n"
"    --bar ...             some cool option --bar with an argument\n"
"    --baz <arg>           another cool option --baz with a named argument\n"
"    --qux[=<path>]        qux may take a path argument but has meaning by itself\n"
msgstr ""
"    -h, --help            exibe a ajuda\n"
"    --foo                 alguma opção bacana --foo\n"
"    --bar ...             alguma opção legal --bar com um argumento\n"
"    --baz <arg>           outra opção legal --baz com um determinado argumento\n"
"    --qux[=<caminho>]     o qux pode utilizar um argumento para o caminho mas significa ele mesmo\n"

#. type: delimited block -
#: en/git-rev-parse.txt:426
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"An option group Header\n"
"    -C[...]               option C with an optional argument\n"
msgstr ""
"Um cabeçalho do grupo de opções\n"
"    -C[...]               opção C com um argumento opcional\n"

#. type: Title -
#: en/git-rev-parse.txt:429
#, no-wrap, priority:80
msgid "SQ-QUOTE"
msgstr "SQ-QUOTE"

#. type: Plain text
#: en/git-rev-parse.txt:435
#, priority:80
msgid "In `--sq-quote` mode, 'git rev-parse' echoes on the standard output a single line suitable for `sh(1)` `eval`. This line is made by normalizing the arguments following `--sq-quote`. Nothing other than quoting the arguments is done."
msgstr "No modo `--sq-quote`, o comando 'git rev-parse' ecoa na saída padrão uma única linha adequada para `sh (1)` `eval`. Esta linha é feita normalizando os argumentos após a opção `--sq-quote`. Nada mais é feito além de citar os argumentos."

#. type: Plain text
#: en/git-rev-parse.txt:439
#, priority:80
msgid "If you want command input to still be interpreted as usual by 'git rev-parse' before the output is shell quoted, see the `--sq` option."
msgstr "Caso queira que o comando de entrada ainda seja interpretada como de costume pelo comando `git rev-parse` antes da saída ser citada pela shell, consulte a opção `--sq`."

#. type: delimited block -
#: en/git-rev-parse.txt:451
#, no-wrap, priority:80
msgid ""
"$ cat >your-git-script.sh <<\\EOF\n"
"#!/bin/sh\n"
"args=$(git rev-parse --sq-quote \"$@\")   # quote user-supplied arguments\n"
"command=\"git frotz -n24 $args\"          # and use it inside a handcrafted\n"
"\t\t\t\t\t# command line\n"
"eval \"$command\"\n"
"EOF\n"
msgstr ""
"$ cat >your-git-script.sh <<\\EOF\n"
"#!/bin/sh\n"
"args=$(git rev-parse --sq-quote \"$@\")   # cita os argumentos utilizados pelo usuário\n"
"command=\"git frotz -n24 $args\"          # e utilize-o dentro de uma\n"
"\t\t\t\t\t# linha de comando artesanal\n"
"eval \"$command\"\n"
"EOF\n"

#. type: delimited block -
#: en/git-rev-parse.txt:453
#, no-wrap, priority:80
msgid "$ sh your-git-script.sh \"a b'c\"\n"
msgstr "$ sh your-git-script.sh \"a b'c\"\n"

#. type: Plain text
#: en/git-rev-parse.txt:459
#, priority:80
msgid "Print the object name of the current commit:"
msgstr "Imprima o nome do objeto do commit atual:"

#. type: delimited block -
#: en/git-rev-parse.txt:462
#, no-wrap, priority:80
msgid "$ git rev-parse --verify HEAD\n"
msgstr "$ git rev-parse --verify HEAD\n"

#. type: Plain text
#: en/git-rev-parse.txt:465
#, priority:80
msgid "Print the commit object name from the revision in the $REV shell variable:"
msgstr "Imprima o nome do objeto do commit a partir da revisão na variável shell '$REV':"

#. type: delimited block -
#: en/git-rev-parse.txt:468
#, no-wrap, priority:80
msgid "$ git rev-parse --verify --end-of-options $REV^{commit}\n"
msgstr "$ git rev-parse --verify --end-of-options $REV^{commit}\n"

#. type: Plain text
#: en/git-rev-parse.txt:471
#, priority:80
msgid "This will error out if $REV is empty or not a valid revision."
msgstr "Isso causará um erro caso '$REV' esteja vazio ou não seja uma revisão válida."

#. type: Plain text
#: en/git-rev-parse.txt:473
#, priority:80
msgid "Similar to above:"
msgstr "Semelhante ao acima:"

#. type: delimited block -
#: en/git-rev-parse.txt:476
#, no-wrap, priority:80
msgid "$ git rev-parse --default master --verify --end-of-options $REV\n"
msgstr "$ git rev-parse --default master --verify --end-of-options $REV\n"

#. type: Plain text
#: en/git-rev-parse.txt:479
#, priority:80
msgid "but if $REV is empty, the commit object name from master will be printed."
msgstr "porém caso '$REV' esteja vazia, o nome do objeto do commit vindo do \"master\" será impresso."

#. type: Title =
#: en/git-rm.txt:2
#, ignore-same, no-wrap, priority:280
msgid "git-rm(1)"
msgstr "git-rm(1)"

#. type: Plain text
#: en/git-rm.txt:7
#, priority:280
msgid "git-rm - Remove files from the working tree and from the index"
msgstr "git-rm - Remove os arquivos da árvore de trabalho e do índice"

#. type: Plain text
#: en/git-rm.txt:14
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"'git rm' [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch]\n"
"\t  [--quiet] [--pathspec-from-file=<file> [--pathspec-file-nul]]\n"
"\t  [--] [<pathspec>...]\n"
msgstr ""
"'git rm' [-f | --force] [-n] [-r] [--cached] [--ignore-unmatch]\n"
"\t  [--quiet] [--pathspec-from-file=<arquivo> [--pathspec-file-nul]]\n"
"\t  [--] [<pathspec>...]\n"

#. type: Plain text
#: en/git-rm.txt:29
#, priority:280
msgid "Remove files matching pathspec from the index, or from the working tree and the index. `git rm` will not remove a file from just your working directory. (There is no option to remove a file only from the working tree and yet keep it in the index; use `/bin/rm` if you want to do that.) The files being removed have to be identical to the tip of the branch, and no updates to their contents can be staged in the index, though that default behavior can be overridden with the `-f` option.  When `--cached` is given, the staged content has to match either the tip of the branch or the file on disk, allowing the file to be removed from just the index. When sparse-checkouts are in use (see linkgit:git-sparse-checkout[1]), `git rm` will only remove paths within the sparse-checkout patterns."
msgstr "Exclui os arquivos correspondentes ao pathspec do índice ou da árvore de trabalho e do índice. O comando `git rm` não irá remover um arquivo apenas do seu diretório de trabalho. (Não há opção para remover um arquivo apenas da árvore de trabalho e ainda mantê-lo no índice; use `/bin/rm` caso queira fazer isso.) Os arquivos que estão sendo removidos devem ser idênticos ao topo do ramo, assim como, nenhuma atualização de seu conteúdo pode ser testada no índice, embora este comportamento predefinido possa ser alterado ao usar a opção `-f`.  Quando `--cached` é usado, o conteúdo testado deve corresponder ao topo do ramo ou ao arquivo no disco, permitindo que o arquivo seja removido apenas do índice. Quando \"sparse-checkouts\" estão em uso (consulte linkgit:git-sparse-checkout[1]), o comando `git rm` apenas removerá os caminhos que estiverem dentro dos padrões do \"sparse-checkout\"."

#. type: Plain text
#: en/git-rm.txt:38
#, priority:280
msgid "Files to remove.  A leading directory name (e.g. `dir` to remove `dir/file1` and `dir/file2`) can be given to remove all files in the directory, and recursively all sub-directories, but this requires the `-r` option to be explicitly given."
msgstr "Arquivos para serem removidos.  Um nome do diretório principal (por exemplo, `dir` para remover `dir/arquivo1` e `dir/arquivo2`) pode ser utilizadopara remover todos os arquivos do diretório e recursivamente de todos os subdiretórios, porém isso requer o uso da opção `-r` de forma explicita."

#. type: Plain text
#: en/git-rm.txt:40
#, priority:280
msgid "The command removes only the paths that are known to Git."
msgstr "O comando remove apenas os caminhos que sejam informados pelo Git."

#. type: Plain text
#: en/git-rm.txt:45
#, priority:280
msgid "File globbing matches across directory boundaries.  Thus, given two directories `d` and `d2`, there is a difference between using `git rm 'd*'` and `git rm 'd/*'`, as the former will also remove all of directory `d2`."
msgstr "As coincidência do mascaramento do nome do arquivo através dos limites do diretório.  Assim, os dados dos dois diretórios `d` e `d2`, existe uma diferença entre o uso do comando `git rm 'd*'` e `git rm 'd/*'`, pois o primeiro também removerá todo o diretório `d2` ."

#. type: Plain text
#: en/git-rm.txt:51
#, priority:280
msgid "Override the up-to-date check."
msgstr "Substitua a verificação atualizada."

#. type: Plain text
#: en/git-rm.txt:57
#, priority:280
msgid "Don't actually remove any file(s).  Instead, just show if they exist in the index and would otherwise be removed by the command."
msgstr "Na verdade, não remova nenhum arquivo.  Em vez disso, exiba apenas se eles existem no índice e caso contrário, seriam removidos pelo comando."

#. type: Plain text
#: en/git-rm.txt:61
#, priority:280
msgid "Allow recursive removal when a leading directory name is given."
msgstr "Permita a remoção recursiva quando um nome do diretório principal for informado."

#. type: Plain text
#: en/git-rm.txt:71
#, priority:280
msgid "Use this option to unstage and remove paths only from the index.  Working tree files, whether modified or not, will be left alone."
msgstr "Utilize esta opção para desestabilizar e remover os caminhos do índice apenas.  Os arquivos da árvore de trabalho, modificados ou não, serão deixados em paz."

#. type: Labeled list
#: en/git-rm.txt:72
#, ignore-same, no-wrap, priority:280
msgid "--ignore-unmatch"
msgstr "--ignore-unmatch"

#. type: Plain text
#: en/git-rm.txt:74
#, priority:280
msgid "Exit with a zero status even if no files matched."
msgstr "Encerre com uma condição zero, ainda que não haja a coincidência com nenhum arquivo."

#. type: Plain text
#: en/git-rm.txt:80
#, priority:280
msgid "Allow updating index entries outside of the sparse-checkout cone.  Normally, `git rm` refuses to update index entries whose paths do not fit within the sparse-checkout cone. See linkgit:git-sparse-checkout[1] for more."
msgstr "Permitir a atualização das entradas do índice fora do cônica do sparse-checkout.  Geralmente, o comando 'git rm' se recusa a atualizar as entradas do índice cujos caminhos não se encaixem dentro da cônica do sparse-checkout. Consulte linkgit:git-sparse-checkout[1] para obter mais informações."

#. type: Plain text
#: en/git-rm.txt:85
#, priority:280
msgid "`git rm` normally outputs one line (in the form of an `rm` command)  for each file removed. This option suppresses that output."
msgstr "O comando `git rm` normalmente gera uma linha (na forma de um comando `rm`)  para cada arquivo removido. Esta opção suprime essa saída."

#. type: Title -
#: en/git-rm.txt:101
#, no-wrap, priority:280
msgid "REMOVING FILES THAT HAVE DISAPPEARED FROM THE FILESYSTEM"
msgstr "REMOVENDO OS ARQUIVOS QUE DESAPARECERAM DO SISTEMA DE ARQUIVOS"

#. type: Plain text
#: en/git-rm.txt:106
#, priority:280
msgid "There is no option for `git rm` to remove from the index only the paths that have disappeared from the filesystem. However, depending on the use case, there are several ways that can be done."
msgstr "Não há uma opção para o comando `git rm` para remover do índice apenas os caminhos que desapareceram do sistema de arquivos. No entanto, dependendo do caso, há várias maneiras de se fazer isso."

#. type: Title ~
#: en/git-rm.txt:108
#, no-wrap, priority:280
msgid "Using ``git commit -a''"
msgstr "Utilizando o `git commit -a`"

#. type: Plain text
#: en/git-rm.txt:115
#, priority:280
msgid "If you intend that your next commit should record all modifications of tracked files in the working tree and record all removals of files that have been removed from the working tree with `rm` (as opposed to `git rm`), use `git commit -a`, as it will automatically notice and record all removals.  You can also have a similar effect without committing by using `git add -u`."
msgstr "Caso tenha pretensão de que o seu próximo commit registre todas as modificações dos arquivos rastreados na árvore de trabalho e registre todas as remoções dos arquivos que foram removidos da árvore de trabalho com `rm` (ao contrário de `git rm`), utilize `git commit -a`, pois alertará e registrará automaticamente todas as remoções.  É possível ter também um efeito semelhante sem fazer um commit utilizando o comando `git add -u`."

#. type: Title ~
#: en/git-rm.txt:117
#, no-wrap, priority:280
msgid "Using ``git add -A''"
msgstr "Utilizando `git add -A`"

#. type: Plain text
#: en/git-rm.txt:121
#, priority:280
msgid "When accepting a new code drop for a vendor branch, you probably want to record both the removal of paths and additions of new paths as well as modifications of existing paths."
msgstr "Ao aceitar um novo código para o fornecedor de um ramo, você provavelmente deseja registrar a remoção dos caminhos e as adições dos novos caminhos, bem como as modificações dos caminhos já existentes."

#. type: Plain text
#: en/git-rm.txt:124
#, priority:280
msgid "Typically you would first remove all tracked files from the working tree using this command:"
msgstr "Normalmente, você primeiro remove todos os arquivos rastreados da árvore de trabalho utilizando este comando:"

#. type: delimited block -
#: en/git-rm.txt:127
#, no-wrap, priority:280
msgid "git ls-files -z | xargs -0 rm -f\n"
msgstr "git ls-files -z | xargs -0 rm -f\n"

#. type: Plain text
#: en/git-rm.txt:131
#, priority:280
msgid "and then untar the new code in the working tree. Alternately you could 'rsync' the changes into the working tree."
msgstr "e descompacte o novo código na árvore de trabalho. Como alternativa, você pode usar o comando 'rsync' nas alterações na árvore de trabalho."

#. type: Plain text
#: en/git-rm.txt:134
#, priority:280
msgid "After that, the easiest way to record all removals, additions, and modifications in the working tree is:"
msgstr "Depois disso, a maneira mais fácil de registrar todas as remoções, adições e modificações na árvore de trabalho é:"

#. type: delimited block -
#: en/git-rm.txt:137
#, no-wrap, priority:280
msgid "git add -A\n"
msgstr "git add -A\n"

#. type: Plain text
#: en/git-rm.txt:140
#, priority:280
msgid "See linkgit:git-add[1]."
msgstr "Consulte linkgit:git-add[1]."

#. type: Title ~
#: en/git-rm.txt:142
#, no-wrap, priority:280
msgid "Other ways"
msgstr "Outras maneiras"

#. type: Plain text
#: en/git-rm.txt:147
#, priority:280
msgid "If all you really want to do is to remove from the index the files that are no longer present in the working tree (perhaps because your working tree is dirty so that you cannot use `git commit -a`), use the following command:"
msgstr "Se tudo o que você realmente deseja é remover do índice os arquivos que não estão mais presentes na árvore de trabalho (talvez porque a sua árvore de trabalho esteja suja e você não possa usar o comando `git commit -a`), utilize o seguinte comando:"

#. type: delimited block -
#: en/git-rm.txt:150
#, no-wrap, priority:280
msgid "git diff --name-only --diff-filter=D -z | xargs -0 git rm --cached\n"
msgstr "git diff --name-only --diff-filter=D -z | xargs -0 git rm --cached\n"

#. type: Plain text
#: en/git-rm.txt:163
#, priority:280
msgid "Only submodules using a gitfile (which means they were cloned with a Git version 1.7.8 or newer) will be removed from the work tree, as their repository lives inside the .git directory of the superproject. If a submodule (or one of those nested inside it)  still uses a .git directory, `git rm` will move the submodules git directory into the superprojects git directory to protect the submodule's history. If it exists the submodule.<name> section in the linkgit:gitmodules[5] file will also be removed and that file will be staged (unless --cached or -n are used)."
msgstr "Somente os submódulos que usam um arquivo git (o que significa que foram clonados com uma versão 1.7.8 ou mais recente do Git) serão removidos da árvore de trabalho, pois seu repositório vive dentro do diretório .git do `superproject`. Caso um submódulo (ou um dos aninhados dentro dele) ainda utilize um diretório .git, `git rm` moverá o diretório dos submódulos git para o diretório `superprojects` git para proteger o histórico do submódulo. Caso exista, a seção submodule.<nome> no arquivo linkgit:gitmodules[5] também será removido e esse arquivo será preparado (a menos que `--cached` ou `-n` sejam utilizados)."

#. type: Plain text
#: en/git-rm.txt:169
#, priority:280
msgid "A submodule is considered up to date when the HEAD is the same as recorded in the index, no tracked files are modified and no untracked files that aren't ignored are present in the submodules work tree.  Ignored files are deemed expendable and won't stop a submodule's work tree from being removed."
msgstr "Um submódulo é considerado atualizado quando `HEAD` for o mesmo que o registrado no índice, nenhum arquivo rastreado é modificado e nenhum arquivo que não for rastreado não é ignorado, está presente na árvore de trabalho do submódulo.  Os arquivos ignorados são considerados dispensáveis e não impedem que a árvore de trabalho de um submódulo seja removida."

#. type: Plain text
#: en/git-rm.txt:173
#, priority:280
msgid "If you only want to remove the local checkout of a submodule from your work tree without committing the removal, use linkgit:git-submodule[1] `deinit` instead. Also see linkgit:gitsubmodules[7] for details on submodule removal."
msgstr "Caso queira remover apenas a averiguação local de um submódulo vindo da sua árvore de trabalho sem fazer o commit de remoção, em vez disso utilize o linkgit:git-submodule[1] `deinit`. Para obter mais detalhes sobre a remoção do submódulo, veja também linkgit:gitsubmodules[7]."

#. type: Labeled list
#: en/git-rm.txt:176
#, no-wrap, priority:280
msgid "`git rm Documentation/\\*.txt`"
msgstr "`git rm Documentation/\\*.txt`"

#. type: Plain text
#: en/git-rm.txt:179
#, priority:280
msgid "Removes all `*.txt` files from the index that are under the `Documentation` directory and any of its subdirectories."
msgstr "Remove todos os arquivos `* .txt` do índice que estão no diretório `Documentation` e em qualquer um dos seus subdiretórios."

#. type: Plain text
#: en/git-rm.txt:183
#, priority:280
msgid "Note that the asterisk `*` is quoted from the shell in this example; this lets Git, and not the shell, expand the pathnames of files and subdirectories under the `Documentation/` directory."
msgstr "Note que o asterisco `*` é citado no shell neste exemplo; isso permite que o Git e não o shell, expanda os nomes dos caminhos dos arquivos e subdiretórios no diretório `Documentation/`."

#. type: Labeled list
#: en/git-rm.txt:184
#, no-wrap, priority:280
msgid "`git rm -f git-*.sh`"
msgstr "`git rm -f git-*.sh`"

#. type: Plain text
#: en/git-rm.txt:188
#, priority:280
msgid "Because this example lets the shell expand the asterisk (i.e. you are listing the files explicitly), it does not remove `subdir/git-foo.sh`."
msgstr "Como este exemplo permite que o shell expanda o asterisco (ou seja, você está listando os arquivos explicitamente), ele não considera o `subdir/git-foo.sh`."

#. type: Plain text
#: en/git-rm.txt:197
#, priority:280
msgid "Each time a superproject update removes a populated submodule (e.g. when switching between commits before and after the removal) a stale submodule checkout will remain in the old location. Removing the old directory is only safe when it uses a gitfile, as otherwise the history of the submodule will be deleted too. This step will be obsolete when recursive submodule update has been implemented."
msgstr "Sempre que uma atualização do `superproject` remove um submódulo preenchido (por exemplo, ao alternar entre commits antes e após a remoção), um checkout obsoleto do submódulo permanece no local antigo. A remoção do diretório antigo só é segura quando ele usa um `gitfile`; caso contrário, o histórico do submódulo também será excluído. Esta etapa será obsoleta quando a atualização recursiva do submódulo for implementada."

#. type: Title =
#: en/git-send-email.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-send-email(1)"
msgstr "git-send-email(1)"

#. type: Plain text
#: en/git-send-email.txt:7
#, priority:100
msgid "git-send-email - Send a collection of patches as emails"
msgstr "git-send-email - Envia uma coleção de patches como e-mails"

#. type: Plain text
#: en/git-send-email.txt:15
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git send-email' [<options>] <file|directory>...\n"
"'git send-email' [<options>] <format-patch options>\n"
"'git send-email' --dump-aliases\n"
msgstr ""
"'git send-email' [<opções>] <file|directory>...\n"
"'git send-email' [<opções>] <opções-do-formato-do-patch>\n"
"'git send-email' --dump-aliases\n"

#. type: Plain text
#: en/git-send-email.txt:25
#, priority:100
msgid "Takes the patches given on the command line and emails them out.  Patches can be specified as files, directories (which will send all files in the directory), or directly as a revision list.  In the last case, any format accepted by linkgit:git-format-patch[1] can be passed to git send-email, as well as options understood by linkgit:git-format-patch[1]."
msgstr "Toma as correções informadas na linha de comando e as envia por e-mail.  Os patches podem ser utilizados como arquivos, diretórios (que enviarão todos os arquivos no diretório) ou diretamente como uma lista de revisão.  No último caso, qualquer formato aceito pelo linkgit:git-format-patch[1] pode ser passado para o git-send-email, bem como as opções linkgit:git-format-patch[1]."

#. type: Plain text
#: en/git-send-email.txt:29
#, priority:100
msgid "The header of the email is configurable via command-line options.  If not specified on the command line, the user will be prompted with a ReadLine enabled interface to provide the necessary information."
msgstr "O cabeçalho do e-mail é configurável através das opções da linha de comando.  Se não utilizado na linha de comandos, o usuário será solicitado a informar uma interface ativada para o ReadLine que forneça as informações que forem necessárias."

#. type: Plain text
#: en/git-send-email.txt:31
#, priority:100
msgid "There are two formats accepted for patch files:"
msgstr "Existem dois formatos aceitos para os arquivos patch:"

#. type: Plain text
#: en/git-send-email.txt:33
#, priority:100
msgid "mbox format files"
msgstr "arquivos no formato mbox"

#. type: Plain text
#: en/git-send-email.txt:36
#, priority:100
msgid "This is what linkgit:git-format-patch[1] generates.  Most headers and MIME formatting are ignored."
msgstr "Isto é o que o linkgit:git-format-patch[1] gera.  Grande parte dos cabeçalhos e a formatação MIME são ignorados."

#. type: Plain text
#: en/git-send-email.txt:39
#, priority:100
msgid "The original format used by Greg Kroah-Hartman's 'send_lots_of_email.pl' script"
msgstr "O formato original utilizado pelo script 'send_lots_of_email.pl' feito pelo Greg Kroah-Hartman's"

#. type: Plain text
#: en/git-send-email.txt:42
#, priority:100
msgid "This format expects the first line of the file to contain the \"Cc:\" value and the \"Subject:\" of the message as the second line."
msgstr "Este formato espera que a primeira linha do arquivo tenha o valor \"Cc:\" e o \"Assunto:\" da mensagem como a segunda linha."

#. type: Title ~
#: en/git-send-email.txt:48
#, no-wrap, priority:100
msgid "Composing"
msgstr "Composição"

#. type: Labeled list
#: en/git-send-email.txt:50 en/git-tag.txt:61
#, ignore-same, no-wrap, priority:240
msgid "--annotate"
msgstr "--annotate"

#. type: Plain text
#: en/git-send-email.txt:54
#, priority:100
msgid "Review and edit each patch you're about to send. Default is the value of `sendemail.annotate`. See the CONFIGURATION section for `sendemail.multiEdit`."
msgstr "Revise e edite cada patch que você está prestes a enviar. O padrão é o valor de 'sendemail.annotate'. Consulte a seção CONFIGURAÇÃO de 'sendemail.multiEdit'."

#. type: Labeled list
#: en/git-send-email.txt:55
#, ignore-ellipsis, no-wrap, priority:100
msgid "--bcc=<address>,..."
msgstr "--bcc=<endereço>,..."

#. type: Plain text
#: en/git-send-email.txt:58
#, priority:100
msgid "Specify a \"Bcc:\" value for each email. Default is the value of `sendemail.bcc`."
msgstr "Especifique um valor \"Cco:\" para cada e-mail. A predefinição é o valor do `sendemail.bcc`."

#. type: Plain text
#: en/git-send-email.txt:60 en/git-send-email.txt:66 en/git-send-email.txt:128
#, priority:100
msgid "This option may be specified multiple times."
msgstr "Esta opção pode ser utilizada várias vezes."

#. type: Labeled list
#: en/git-send-email.txt:61
#, ignore-ellipsis, no-wrap, priority:100
msgid "--cc=<address>,..."
msgstr "--cc=<endereço>,..."

#. type: Plain text
#: en/git-send-email.txt:64
#, priority:100
msgid "Specify a starting \"Cc:\" value for each email.  Default is the value of `sendemail.cc`."
msgstr "Especifique um valor inicial \"Cc:\" para cada e-mail.  A predefinição é o valor do `sendemail.cc`."

#. type: Labeled list
#: en/git-send-email.txt:67
#, ignore-same, no-wrap, priority:100
msgid "--compose"
msgstr "--compose"

#. type: Plain text
#: en/git-send-email.txt:70
#, priority:100
msgid "Invoke a text editor (see GIT_EDITOR in linkgit:git-var[1])  to edit an introductory message for the patch series."
msgstr "Invoque um editor de texto (consulte `GIT_EDITOR` no linkgit:git-var[1]) para editar uma mensagem introdutória para a série de patches."

#. type: Plain text
#: en/git-send-email.txt:76
#, priority:100
msgid "When `--compose` is used, git send-email will use the From, Subject, and In-Reply-To headers specified in the message. If the body of the message (what you type after the headers and a blank line) only contains blank (or Git: prefixed) lines, the summary won't be sent, but From, Subject, and In-Reply-To headers will be used unless they are removed."
msgstr "Quando a opção `--compose` é utilizada, o 'git send-email' utilizará os cabeçalhos `From` (De), `Subject` (Assunto), and `In-Reply-To` (Em resposta a) definidos na mensagem. Caso o corpo da mensagem (a parte onde você digita após os cabeçalhos e uma linha em branco) contenha apenas linhas em branco (ou Git: prefixadas), o resumo não será enviado, porém os cabeçalhos \"De\", \"Assunto\" e \"Em resposta a\" serão utilizados, a menos que sejam removidos."

#. type: Plain text
#: en/git-send-email.txt:78
#, priority:100
msgid "Missing From or In-Reply-To headers will be prompted for."
msgstr "Os cabeçalhos ausentes \"From\" ou \"In-Reply-To\" (em resposta a) serão solicitados."

#. type: Plain text
#: en/git-send-email.txt:80
#, priority:100
msgid "See the CONFIGURATION section for `sendemail.multiEdit`."
msgstr "Consulte a seção CONFIGURAÇÃO para a opção de configuração `sendemail.multiEdit`."

#. type: Labeled list
#: en/git-send-email.txt:81
#, no-wrap, priority:100
msgid "--from=<address>"
msgstr "--from=<endereço>"

#. type: Plain text
#: en/git-send-email.txt:88
#, priority:100
msgid "Specify the sender of the emails.  If not specified on the command line, the value of the `sendemail.from` configuration option is used.  If neither the command-line option nor `sendemail.from` are set, then the user will be prompted for the value.  The default for the prompt will be the value of GIT_AUTHOR_IDENT, or GIT_COMMITTER_IDENT if that is not set, as returned by \"git var -l\"."
msgstr "Especifique o destinatário dos e-mails.  Caso não seja definido na linha de comando, o valor da opção de configuração `sendemail.from` é utilizado.  Caso nem a opção da linha de comando nem a opção de configuração `sendemail.from` estejam definidos, então o usuário será avisado para informar o valor.  O valor predefinido para o prompt será o valor do `GIT_AUTHOR_IDENT` ou `GIT_COMMITTER_IDENT` caso isso não esteja definido, conforme retornado pelo `git var -l`."

#. type: Labeled list
#: en/git-send-email.txt:89
#, no-wrap, priority:100
msgid "--reply-to=<address>"
msgstr "--reply-to=<endereço>"

#. type: Plain text
#: en/git-send-email.txt:93
#, priority:100
msgid "Specify the address where replies from recipients should go to.  Use this if replies to messages should go to another address than what is specified with the --from parameter."
msgstr "Define o endereço para onde as respostas dos destinatários devem ir.  Use isso se as respostas às mensagens forem para outro endereço além do especificado com o parâmetro `--from`."

#. type: Labeled list
#: en/git-send-email.txt:94
#, no-wrap, priority:100
msgid "--in-reply-to=<identifier>"
msgstr "--in-reply-to=<identificador>"

#. type: Plain text
#: en/git-send-email.txt:100
#, priority:100
msgid "Make the first mail (or all the mails with `--no-thread`) appear as a reply to the given Message-Id, which avoids breaking threads to provide a new patch series.  The second and subsequent emails will be sent as replies according to the `--[no-]chain-reply-to` setting."
msgstr "Faça o primeiro e-mail (ou todos os e-mails com `--no-thread`) aparecer como uma resposta ao ID da mensagem informada, o que evita as quebras dos encadeamentos provendo uma nova série de patches.  O segundo e-mail e os seguintes serão enviados como resposta de acordo com a configuração `--[no-]chain-reply-to`."

#. type: Plain text
#: en/git-send-email.txt:104
#, priority:100
msgid "So for example when `--thread` and `--no-chain-reply-to` are specified, the second and subsequent patches will be replies to the first one like in the illustration below where `[PATCH v2 0/3]` is in reply to `[PATCH 0/2]`:"
msgstr "Assim, por exemplo, quando `--thread` e `--no-chain-reply-to` sejam utilizados, o segundo e os patches subsequentes serão as respostas para o primeiro, como na ilustração abaixo, onde `[PATCH v2 0/3]` está como resposta para `[PATCH 0/2]`:"

#. type: Plain text
#: en/git-send-email.txt:112
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"  [PATCH 0/2] Here is what I did...\n"
"    [PATCH 1/2] Clean up and tests\n"
"    [PATCH 2/2] Implementation\n"
"    [PATCH v2 0/3] Here is a reroll\n"
"      [PATCH v2 1/3] Clean up\n"
"      [PATCH v2 2/3] New tests\n"
"      [PATCH v2 3/3] Implementation\n"
msgstr ""
"  [PATCH 0/2] Aqui está o que eu fiz...\n"
"    [PATCH 1/2] Limpeza e testes\n"
"    [PATCH 2/2] Implementação\n"
"    [PATCH v2 0/3] Aqui está uma nova rolagem\n"
"      [PATCH v2 1/3] Limpar\n"
"      [PATCH v2 2/3] Novos testes\n"
"      [PATCH v2 3/3] Implementação\n"

#. type: Plain text
#: en/git-send-email.txt:115
#, priority:100
msgid "Only necessary if --compose is also set.  If --compose is not set, this will be prompted for."
msgstr "Somente é necessário caso `--compose` seja definido.  Caso `--compose` não seja definido, será solicitado ao usuário para informar um."

#. type: Labeled list
#: en/git-send-email.txt:116
#, no-wrap, priority:100
msgid "--subject=<string>"
msgstr "--subject=<texto>"

#. type: Plain text
#: en/git-send-email.txt:120
#, priority:100
msgid "Specify the initial subject of the email thread.  Only necessary if --compose is also set.  If --compose is not set, this will be prompted for."
msgstr "Informe o assunto inicial do encadeamento do e-mail.  Somente é necessário caso `--compose` seja definido.  Caso `--compose` não seja definido, será solicitado ao usuário para informar um."

#. type: Labeled list
#: en/git-send-email.txt:121
#, ignore-ellipsis, no-wrap, priority:100
msgid "--to=<address>,..."
msgstr "--to=<endereço>,..."

#. type: Plain text
#: en/git-send-email.txt:126
#, priority:100
msgid "Specify the primary recipient of the emails generated. Generally, this will be the upstream maintainer of the project involved. Default is the value of the `sendemail.to` configuration value; if that is unspecified, and --to-cmd is not specified, this will be prompted for."
msgstr "Define o destinatário principal dos e-mails que forem gerados. Em geral, este será o mantenedor \"upstream\" do projeto envolvido. A predefinição é o valor da opção de configuração `sendemail.transferEncoding`; caso isso não seja definido, a predefinição retorna para `auto`."

#. type: Labeled list
#: en/git-send-email.txt:129
#, no-wrap, priority:100
msgid "--8bit-encoding=<encoding>"
msgstr "--8bit-encoding=<codificação>"

#. type: Plain text
#: en/git-send-email.txt:135
#, priority:100
msgid "When encountering a non-ASCII message or subject that does not declare its encoding, add headers/quoting to indicate it is encoded in <encoding>.  Default is the value of the 'sendemail.assume8bitEncoding'; if that is unspecified, this will be prompted for if any non-ASCII files are encountered."
msgstr "Quando encontrar uma mensagem não ASCII ou um assunto que não declare a sua codificação, adicione os cabeçalhos/citações para indicar que estão codificados com <codificação>.  A predefinição é o valor do 'sendemail.assume8bitEncoding'; caso não esteja definido, o usuário será questionado caso qualquer arquivo não ASCII seja encontrado."

#. type: Plain text
#: en/git-send-email.txt:137
#, priority:100
msgid "Note that no attempts whatsoever are made to validate the encoding."
msgstr "Observe que nenhuma tentativa é feita para validar a codificação."

#. type: Labeled list
#: en/git-send-email.txt:138
#, no-wrap, priority:100
msgid "--compose-encoding=<encoding>"
msgstr "--compose-encoding=<codificação>"

#. type: Plain text
#: en/git-send-email.txt:141
#, priority:100
msgid "Specify encoding of compose message. Default is the value of the 'sendemail.composeencoding'; if that is unspecified, UTF-8 is assumed."
msgstr "Define a codificação da mensagem que será escrita. A predefinição é o valor da opção de configuração 'sendemail.composeencoding'; caso não esteja definido, assume-se o UTF-8."

#. type: Labeled list
#: en/git-send-email.txt:142
#, no-wrap, priority:100
msgid "--transfer-encoding=(7bit|8bit|quoted-printable|base64|auto)"
msgstr "--transfer-encoding=(7bit|8bit|quoted-printable|base64|auto)"

#. type: Plain text
#: en/git-send-email.txt:150
#, priority:100
msgid "Specify the transfer encoding to be used to send the message over SMTP.  7bit will fail upon encountering a non-ASCII message.  quoted-printable can be useful when the repository contains files that contain carriage returns, but makes the raw patch email file (as saved from a MUA) much harder to inspect manually.  base64 is even more fool proof, but also even more opaque.  auto will use 8bit when possible, and quoted-printable otherwise."
msgstr "Define a codificação da transferência que será utilizada para enviar a mensagem através do SMTP.  O 7bit falhará caso encontre uma mensagem não ASCII.  a citação para impressão pode ser útil quando o repositório contém arquivos que contenham retornos de carro, porém dificulta muito a inspeção manual do arquivo de e-mail do patch bruto (com é gravado através de um MUA).  a base64 é ainda mais à prova de idiotas, porém também é ainda mais estúpido.  auto utilizará 8bit quando for possível e, caso contrário, será citado para impressão."

#. type: Plain text
#: en/git-send-email.txt:153
#, priority:100
msgid "Default is the value of the `sendemail.transferEncoding` configuration value; if that is unspecified, default to `auto`."
msgstr "A predefinição é o valor da configuração `sendemail.transferEncoding`; caso isso não seja definido, a predefinição retorna para `auto`."

#. type: Labeled list
#: en/git-send-email.txt:154
#, ignore-same, no-wrap, priority:100
msgid "--xmailer"
msgstr "--xmailer"

#. type: Labeled list
#: en/git-send-email.txt:155
#, ignore-same, no-wrap, priority:100
msgid "--no-xmailer"
msgstr "--no-xmailer"

#. type: Plain text
#: en/git-send-email.txt:159
#, priority:100
msgid "Add (or prevent adding) the \"X-Mailer:\" header.  By default, the header is added, but it can be turned off by setting the `sendemail.xmailer` configuration variable to `false`."
msgstr "Adicione (ou evite adicionar) o cabeçalho \"X-Mailer:\".  A predefinição é que o cabeçalho seja adicionado, porém pode ser desligado redefinindo a variável de configuração `sendemail.xmailer` como `false`."

#. type: Title ~
#: en/git-send-email.txt:161
#, no-wrap, priority:100
msgid "Sending"
msgstr "Enviando"

#. type: Labeled list
#: en/git-send-email.txt:163
#, no-wrap, priority:100
msgid "--envelope-sender=<address>"
msgstr "--envelope-sender=<endereço>"

#. type: Plain text
#: en/git-send-email.txt:171
#, priority:100
msgid "Specify the envelope sender used to send the emails.  This is useful if your default address is not the address that is subscribed to a list. In order to use the 'From' address, set the value to \"auto\". If you use the sendmail binary, you must have suitable privileges for the -f parameter.  Default is the value of the `sendemail.envelopeSender` configuration variable; if that is unspecified, choosing the envelope sender is left to your MTA."
msgstr "Define o envelope do remetente utilizado para enviar os e-mails.  É útil caso o seu endereço predefinido não seja o endereço registrado numa lista. Para usar o endereço 'De', defina o valor para \"auto\". Caso utilize o binário do 'sendmail', você deverá ter privilégios adequados para poder utilizar o parâmetro `-f`.  A predefinição é o valor da variável de configuração `sendemail.envelopeSender`; caso não esteja definido, a escolha do envelope do remetente é deixada para o seu MTA."

#. type: Labeled list
#: en/git-send-email.txt:172
#, no-wrap, priority:100
msgid "--sendmail-cmd=<command>"
msgstr "--sendmail-cmd=<comando>"

#. type: Plain text
#: en/git-send-email.txt:179
#, priority:100
msgid "Specify a command to run to send the email. The command should be sendmail-like; specifically, it must support the `-i` option.  The command will be executed in the shell if necessary.  Default is the value of `sendemail.sendmailcmd`.  If unspecified, and if --smtp-server is also unspecified, git-send-email will search for `sendmail` in `/usr/sbin`, `/usr/lib` and $PATH."
msgstr "Especifique um comando que será executado para enviar um e-mail. O comando deve ser do tipo sendmail; mais especificamente, ele deve ser compatível com a opção `-i`.  Se preciso for, o comando será executado na shell.  O valor predefinido é o mesmo definido pela variável `sendemail.sendmailcmd`.  Se não for definido e se o comando `--smtp-server` também não tenha sido usado, o comando `git-send-email` irá procurar por `sendmail` em `/usr/sbin`, `/usr/lib` e no $PATH."

#. type: Labeled list
#: en/git-send-email.txt:180
#, no-wrap, priority:100
msgid "--smtp-encryption=<encryption>"
msgstr "--smtp-encryption=<criptografia>"

#. type: Plain text
#: en/git-send-email.txt:184
#, priority:100
msgid "Specify the encryption to use, either 'ssl' or 'tls'.  Any other value reverts to plain SMTP.  Default is the value of `sendemail.smtpEncryption`."
msgstr "Define a criptografia que será utilizada, 'ssl' ou 'tls'.  Qualquer outro valor é revertido para o SMTP simples.  A predefinição é o valor da opção de configuração `sendemail.smtpEncryption`."

#. type: Labeled list
#: en/git-send-email.txt:185
#, no-wrap, priority:100
msgid "--smtp-domain=<FQDN>"
msgstr "--smtp-domain=<FQDN>"

#. type: Plain text
#: en/git-send-email.txt:191
#, priority:100
msgid "Specifies the Fully Qualified Domain Name (FQDN) used in the HELO/EHLO command to the SMTP server.  Some servers require the FQDN to match your IP address.  If not set, git send-email attempts to determine your FQDN automatically.  Default is the value of `sendemail.smtpDomain`."
msgstr "Define o Nome de Domínio Totalmente Qualificado (FQDN) utilizado no comando HELO/EHLO para o servidor SMTP.  Alguns servidores exigem que o FQDN corresponda ao seu endereço de IP.  Caso não esteja definido, o comando `git send-email` tenta determinar o seu FQDN de forma automática.  A predefinição é o valor da opção de configuração `sendemail.smtpDomain`."

#. type: Labeled list
#: en/git-send-email.txt:192
#, no-wrap, priority:100
msgid "--smtp-auth=<mechanisms>"
msgstr "--smtp-auth=<mecanismos>"

#. type: Plain text
#: en/git-send-email.txt:195
#, priority:100
msgid "Whitespace-separated list of allowed SMTP-AUTH mechanisms. This setting forces using only the listed mechanisms. Example:"
msgstr "Mecanismos SMTP-AUTH permitidos, listas separadas por um espaço. Está configuração impõem a utilização dos mecanismos listados. Exemplo:"

#. type: delimited block -
#: en/git-send-email.txt:198
#, ignore-ellipsis, no-wrap, priority:100
msgid "$ git send-email --smtp-auth=\"PLAIN LOGIN GSSAPI\" ...\n"
msgstr "$ git send-email --smtp-auth=\"PLAIN LOGIN GSSAPI\" ...\n"

#. type: Plain text
#: en/git-send-email.txt:206
#, priority:100
msgid "If at least one of the specified mechanisms matches the ones advertised by the SMTP server and if it is supported by the utilized SASL library, the mechanism is used for authentication. If neither 'sendemail.smtpAuth' nor `--smtp-auth` is specified, all mechanisms supported by the SASL library can be used. The special value 'none' maybe specified to completely disable authentication independently of `--smtp-user`"
msgstr "Caso pelo menos um dos mecanismos definidos coincidir com os anunciados através do servidor SMTP e caso seja compatível pela biblioteca SASL utilizada, o mecanismo será utilizado para a autenticação. Caso nem a opção de configuração 'sendemail.smtpAuth' nem a opção `--smtp-auth` forem utilizados, todos os mecanismos compatíveis através da biblioteca SASL poderão ser utilizados. O valor especial 'none' pode ser informado para desativar completamente a autenticação, independentemente da opção `--smtp-user`"

#. type: Labeled list
#: en/git-send-email.txt:207
#, no-wrap, priority:100
msgid "--smtp-pass[=<password>]"
msgstr "--smtp-pass[=<senha>]"

#. type: Plain text
#: en/git-send-email.txt:212
#, priority:100
msgid "Password for SMTP-AUTH. The argument is optional: If no argument is specified, then the empty string is used as the password. Default is the value of `sendemail.smtpPass`, however `--smtp-pass` always overrides this value."
msgstr "A senha para o SMTP-AUTH. O argumento é opcional: Caso nenhum argumento seja definido, então um valor vazio é utilizado como uma senha. A predefinição é o valor da opção de configuração `sendemail.smtpPass`, no entanto, a opção `--smtp-pass` sempre substitui este valor."

#. type: Plain text
#: en/git-send-email.txt:218
#, priority:100
msgid "Furthermore, passwords need not be specified in configuration files or on the command line. If a username has been specified (with `--smtp-user` or a `sendemail.smtpUser`), but no password has been specified (with `--smtp-pass` or `sendemail.smtpPass`), then a password is obtained using 'git-credential'."
msgstr "Além disso, as senhas não precisam ser definidas nos arquivos de configuração ou na linha de comando. Caso um nome de usuário seja definido (com `--smtp-user` ou` `sendemail.smtpUser`), porém nenhuma senha seja definida (com `--smtp-pass` ou `sendemail.smtpPass`), uma senha é obtida utilizando o comando 'git-credential'."

#. type: Labeled list
#: en/git-send-email.txt:219
#, ignore-same, no-wrap, priority:100
msgid "--no-smtp-auth"
msgstr "--no-smtp-auth"

#. type: Plain text
#: en/git-send-email.txt:221
#, priority:100
msgid "Disable SMTP authentication. Short hand for `--smtp-auth=none`"
msgstr "Desative a autenticação SMTP. É um atalho para `--smtp-auth=none`"

#. type: Labeled list
#: en/git-send-email.txt:222
#, no-wrap, priority:100
msgid "--smtp-server=<host>"
msgstr "--smtp-server=<host>"

#. type: Plain text
#: en/git-send-email.txt:228
#, priority:100
msgid "If set, specifies the outgoing SMTP server to use (e.g.  `smtp.example.com` or a raw IP address).  If unspecified, and if `--sendmail-cmd` is also unspecified, the default is to search for `sendmail` in `/usr/sbin`, `/usr/lib` and $PATH if such a program is available, falling back to `localhost` otherwise."
msgstr "Caso seja definido, define qual o servidor SMTP será utilizado (por exemplo, um domínio `smtp.example.com` ou um endereço IP). Caso não seja especificado e se o comando `--sendmail-cmd` também não tenha sido usado, o padrão é procurar pelo `sendmail` em `/usr/sbin`, `/usr/lib` e $PATH caso tal programa esteja disponível, caso contrário, retorna para `localhost`."

#. type: Plain text
#: en/git-send-email.txt:234
#, priority:100
msgid "For backward compatibility, this option can also specify a full pathname of a sendmail-like program instead; the program must support the `-i` option.  This method does not support passing arguments or using plain command names.  For those use cases, consider using `--sendmail-cmd` instead."
msgstr "Por questões de compatibilidade retroativa, esta opção também pode definir um caminho completo de um programa semelhante ao sendmail; o programa deve ser compatível com a opção `-i`.  Este método não suporta a passagem de argumentos ou o uso do nome de comandos simples.  Para estes casos, considere utilizar a opção `--sendmail-cmd`."

#. type: Labeled list
#: en/git-send-email.txt:235
#, no-wrap, priority:100
msgid "--smtp-server-port=<port>"
msgstr "--smtp-server-port=<porta>"

#. type: Plain text
#: en/git-send-email.txt:242
#, priority:100
msgid "Specifies a port different from the default port (SMTP servers typically listen to smtp port 25, but may also listen to submission port 587, or the common SSL smtp port 465); symbolic port names (e.g. \"submission\" instead of 587)  are also accepted. The port can also be set with the `sendemail.smtpServerPort` configuration variable."
msgstr "Define uma porta diferente da porta predefinida (os servidores SMTP normalmente ouvem na porta 25 smtp, porém também podem ouvir na porta de envio ou a porta smtp SSL comum 465); os nomes das portas simbólicos (por exemplo, \"submission\" em vez do 587) também são aceitos. A porta também pode ser definida com a variável de configuração `sendemail.smtpServerPort`."

#. type: Labeled list
#: en/git-send-email.txt:243
#, no-wrap, priority:100
msgid "--smtp-server-option=<option>"
msgstr "--smtp-server-option=<opção>"

#. type: Plain text
#: en/git-send-email.txt:247
#, priority:100
msgid "If set, specifies the outgoing SMTP server option to use.  Default value can be specified by the `sendemail.smtpServerOption` configuration option."
msgstr "Caso seja definido, define qual a opção da saída que será usada pelo servidor SMTP.  O valor predefinido pode ser definido pela opção de configuração `sendemail.smtpServerOption`."

#. type: Plain text
#: en/git-send-email.txt:251
#, priority:100
msgid "The --smtp-server-option option must be repeated for each option you want to pass to the server. Likewise, different lines in the configuration files must be used for each option."
msgstr "A opção `--smtp-server-option` deve ser repetida para cada opção que você queira passar para o servidor. Da mesma forma, as linhas diferentes nos arquivos de configuração devem ser utilizadas para cada opção."

#. type: Labeled list
#: en/git-send-email.txt:252
#, ignore-same, no-wrap, priority:100
msgid "--smtp-ssl"
msgstr "--smtp-ssl"

#. type: Plain text
#: en/git-send-email.txt:254
#, priority:100
msgid "Legacy alias for '--smtp-encryption ssl'."
msgstr "Legado para o pseudônimo '--smtp-encryption ssl'."

#. type: Labeled list
#: en/git-send-email.txt:255
#, ignore-same, no-wrap, priority:100
msgid "--smtp-ssl-cert-path"
msgstr "--smtp-ssl-cert-path"

#. type: Plain text
#: en/git-send-email.txt:265
#, priority:100
msgid "Path to a store of trusted CA certificates for SMTP SSL/TLS certificate validation (either a directory that has been processed by 'c_rehash', or a single file containing one or more PEM format certificates concatenated together: see verify(1) -CAfile and -CApath for more information on these). Set it to an empty string to disable certificate verification. Defaults to the value of the `sendemail.smtpsslcertpath` configuration variable, if set, or the backing SSL library's compiled-in default otherwise (which should be the best choice on most platforms)."
msgstr "O caminho para um armazenamento dos certificados CA confiáveis para a validação do certificado SMTP SSL/TLS (um diretório que foi processado pelo 'c_rehash' ou um único arquivo contendo um ou mais certificados no formato 'PEM' concatenados juntos: consulte 'verify(1)' '-CAfile' e '-CApath' para mais informações sobre eles). Defina-o como um texto vazio para desativar a verificação do certificado. A predefinição retorna para o valor da variável de configuração `sendemail.smtpsslcertpath`, caso seja definida, ou tenha a biblioteca de apoio SSL tenha sido compilada (o que deve ser a melhor opção na maioria das plataformas)."

#. type: Labeled list
#: en/git-send-email.txt:266
#, no-wrap, priority:100
msgid "--smtp-user=<user>"
msgstr "--smtp-user=<usuário>"

#. type: Plain text
#: en/git-send-email.txt:270
#, priority:100
msgid "Username for SMTP-AUTH. Default is the value of `sendemail.smtpUser`; if a username is not specified (with `--smtp-user` or `sendemail.smtpUser`), then authentication is not attempted."
msgstr "O nome do usuário para o SMTP-AUTH. A predefinição é o valor da opção de configuração `sendemail.smtpUser`; caso um nome de usuário não tenha sido definido(com `--smtp-user` ou `sendemail.smtpUser`), a tentativa de autenticação não será realizada."

#. type: Labeled list
#: en/git-send-email.txt:271
#, no-wrap, priority:100
msgid "--smtp-debug=0|1"
msgstr "--smtp-debug=0|1"

#. type: Plain text
#: en/git-send-email.txt:275
#, priority:100
msgid "Enable (1) or disable (0) debug output. If enabled, SMTP commands and replies will be printed. Useful to debug TLS connection and authentication problems."
msgstr "Ative (1) ou desative (0) a geração da depuração. Se ativado, os comandos e respostas SMTP serão impressos. Útil para depurar problemas de conexão e a autenticação TLS."

#. type: Labeled list
#: en/git-send-email.txt:276
#, no-wrap, priority:100
msgid "--batch-size=<num>"
msgstr "--batch-size=<num>"

#. type: Plain text
#: en/git-send-email.txt:285
#, priority:100
msgid "Some email servers (e.g. smtp.163.com) limit the number emails to be sent per session (connection) and this will lead to a failure when sending many messages.  With this option, send-email will disconnect after sending $<num> messages and wait for a few seconds (see --relogin-delay)  and reconnect, to work around such a limit.  You may want to use some form of credential helper to avoid having to retype your password every time this happens.  Defaults to the `sendemail.smtpBatchSize` configuration variable."
msgstr "Alguns servidores de e-mail (smtp.163.com por exemplo) limitam a quantidade de e-mails que podem ser enviados por sessão (conexão) e isso causa uma falha no envio de muitas mensagens.  Com esta opção, o \"send-email\" será desconectado após enviar a quantidade de `$<num>` mensagens e aguardará alguns segundos (consulte --relogin-delay) e fará a reconexão para contornar esse limite.  É possível utilizar alguma forma de auxiliar a credencial evitando a necessidade de redigitar a sua senha sempre que isso acontecer.  A predefinição retorna para o valor da variável de configuração `sendemail.smtpBatchSize`."

#. type: Labeled list
#: en/git-send-email.txt:286
#, no-wrap, priority:100
msgid "--relogin-delay=<int>"
msgstr "--relogin-delay=<int>"

#. type: Plain text
#: en/git-send-email.txt:290
#, priority:100
msgid "Waiting $<int> seconds before reconnecting to SMTP server. Used together with --batch-size option.  Defaults to the `sendemail.smtpReloginDelay` configuration variable."
msgstr "Aguardando `$<int>` segundos antes de se reconectar ao servidor SMTP. Utilizado em conjunto com a opção `--batch-size`.  A predefinição retorna para o valor da variável de configuração `sendemail.smtpReloginDelay`."

#. type: Title ~
#: en/git-send-email.txt:292
#, no-wrap, priority:100
msgid "Automating"
msgstr "Automatizando"

#. type: Labeled list
#: en/git-send-email.txt:294
#, no-wrap, priority:100
msgid "--no-[to|cc|bcc]"
msgstr "--no-[to|cc|bcc]"

#. type: Plain text
#: en/git-send-email.txt:297
#, priority:100
msgid "Clears any list of \"To:\", \"Cc:\", \"Bcc:\" addresses previously set via config."
msgstr "Limpa qualquer lista dos endereços \"Para:\", \"Cc:\", \"Cco:\" definidos anteriormente através da config."

#. type: Labeled list
#: en/git-send-email.txt:298
#, ignore-same, no-wrap, priority:100
msgid "--no-identity"
msgstr "--no-identity"

#. type: Plain text
#: en/git-send-email.txt:301
#, priority:100
msgid "Clears the previously read value of `sendemail.identity` set via config, if any."
msgstr "Limpa o valor lido anteriormente do `sendemail.identity` definido através da config, caso exista."

#. type: Labeled list
#: en/git-send-email.txt:302
#, no-wrap, priority:100
msgid "--to-cmd=<command>"
msgstr "--to-cmd=<comando>"

#. type: Plain text
#: en/git-send-email.txt:307
#, priority:100
msgid "Specify a command to execute once per patch file which should generate patch file specific \"To:\" entries.  Output of this command must be single email address per line.  Default is the value of 'sendemail.tocmd' configuration value."
msgstr "Define um comando que será executado um por vez no arquivo patch que deve gerar as entradas \"Para:\".  A saída deste comando deve ser um endereço de e-mail único por linha.  A predefinição é o valor da opção de configuração 'sendemail.tocmd'."

#. type: Labeled list
#: en/git-send-email.txt:308
#, no-wrap, priority:100
msgid "--cc-cmd=<command>"
msgstr "--cc-cmd=<comando>"

#. type: Plain text
#: en/git-send-email.txt:313
#, priority:100
msgid "Specify a command to execute once per patch file which should generate patch file specific \"Cc:\" entries.  Output of this command must be single email address per line.  Default is the value of `sendemail.ccCmd` configuration value."
msgstr "Define um comando que será executado um por vez no arquivo patch que deve gerar as entradas \"Cc:\".  A saída deste comando deve ser um endereço de e-mail único por linha.  A predefinição é o valor da opção de configuração `sendemail.ccCmd`."

#. type: Labeled list
#: en/git-send-email.txt:314
#, ignore-same, no-wrap, priority:100
msgid "--[no-]chain-reply-to"
msgstr "--[no-]chain-reply-to"

#. type: Plain text
#: en/git-send-email.txt:321
#, priority:100
msgid "If this is set, each email will be sent as a reply to the previous email sent.  If disabled with \"--no-chain-reply-to\", all emails after the first will be sent as replies to the first email sent.  When using this, it is recommended that the first file given be an overview of the entire patch series. Disabled by default, but the `sendemail.chainReplyTo` configuration variable can be used to enable it."
msgstr "Caso esteja definido, cada e-mail será enviado como uma resposta ao e-mail enviado anteriormente.  Caso esteja desativado com a opção \"--no-chain-reply-to\", todos os e-mails posteriores ao primeiro, serão enviados como respostas para o primeiro e-mail enviado.  Ao utilizar isso, é recomendável que o primeiro arquivo utilizado seja uma visão geral de toda a série de patches. É predefinido que esteja desativada, porém a variável de configuração `sendemail.chainReplyTo` pode ser utilizada para ativá-la."

#. type: Labeled list
#: en/git-send-email.txt:322
#, no-wrap, priority:100
msgid "--identity=<identity>"
msgstr "--identity=<identidade>"

#. type: Plain text
#: en/git-send-email.txt:327
#, priority:100
msgid "A configuration identity. When given, causes values in the 'sendemail.<identity>' subsection to take precedence over values in the 'sendemail' section. The default identity is the value of `sendemail.identity`."
msgstr "Uma identidade de configuração. Quando informado, faz com que os valores na subseção 'sendemail.<identidade>' tenham precedência sobre os valores na seção 'sendemail'. A identidade predefinida é o valor existente em `sendemail.identity`."

#. type: Labeled list
#: en/git-send-email.txt:328
#, ignore-same, no-wrap, priority:100
msgid "--[no-]signed-off-by-cc"
msgstr "--[no-]signed-off-by-cc"

#. type: Plain text
#: en/git-send-email.txt:332
#, priority:100
msgid "If this is set, add emails found in the `Signed-off-by` trailer or Cc: lines to the cc list. Default is the value of `sendemail.signedoffbycc` configuration value; if that is unspecified, default to --signed-off-by-cc."
msgstr "Caso esteja definido, adicione os e-mails encontrados em 'Signed-off-by:' ou Cc: à lista cc. A predefinição é o valor da opção de configuração `sendemail.signedoffbycc`; caso não seja definido, a predefinição retorna para `--signed-off-by-cc`."

#. type: Labeled list
#: en/git-send-email.txt:333
#, ignore-same, no-wrap, priority:100
msgid "--[no-]cc-cover"
msgstr "--[no-]cc-cover"

#. type: Plain text
#: en/git-send-email.txt:338
#, priority:100
msgid "If this is set, emails found in Cc: headers in the first patch of the series (typically the cover letter) are added to the cc list for each email set. Default is the value of 'sendemail.cccover' configuration value; if that is unspecified, default to --no-cc-cover."
msgstr "Caso seja definido, os emails encontrados nos cabeçalhos Cc: no primeiro patch da série (normalmente a carta de apresentação) serão adicionados à lista Cc: de cada conjunto de e-mails. Default is the value of 'sendemail.cccover' configuration value; if that is unspecified, default to --no-cc-cover."

#. type: Labeled list
#: en/git-send-email.txt:339
#, ignore-same, no-wrap, priority:100
msgid "--[no-]to-cover"
msgstr "--[no-]to-cover"

#. type: Plain text
#: en/git-send-email.txt:344
#, priority:100
msgid "If this is set, emails found in To: headers in the first patch of the series (typically the cover letter) are added to the to list for each email set. Default is the value of 'sendemail.tocover' configuration value; if that is unspecified, default to --no-to-cover."
msgstr "Caso seja definido, os emails encontrados nos cabeçalhos To: (Para) no primeiro patch da série (normalmente a carta de apresentação) serão adicionados à lista To: de cada conjunto de e-mails. Default is the value of 'sendemail.tocover' configuration value; if that is unspecified, default to --no-to-cover."

#. type: Labeled list
#: en/git-send-email.txt:345
#, no-wrap, priority:100
msgid "--suppress-cc=<category>"
msgstr "--suppress-cc=<categoria>"

#. type: Plain text
#: en/git-send-email.txt:348
#, priority:100
msgid "Specify an additional category of recipients to suppress the auto-cc of:"
msgstr "Define uma categoria adicional dos destinatários para suprimir o 'auto-cc' do:"

#. type: Plain text
#: en/git-send-email.txt:351
#, priority:100
msgid "'author' will avoid including the patch author."
msgstr "'author' irá evitar a inclusão o autor do patch."

#. type: Plain text
#: en/git-send-email.txt:352
#, priority:100
msgid "'self' will avoid including the sender."
msgstr "'self' evitará incluir o remetente."

#. type: Plain text
#: en/git-send-email.txt:354
#, priority:100
msgid "'cc' will avoid including anyone mentioned in Cc lines in the patch header except for self (use 'self' for that)."
msgstr "'cc' irá evitar a inclusão de qualquer pessoa mencionada nas linhas Cc no cabeçalho do patch, exceto self (utilize 'self' para isso)."

#. type: Plain text
#: en/git-send-email.txt:356
#, priority:100
msgid "'bodycc' will avoid including anyone mentioned in Cc lines in the patch body (commit message) except for self (use 'self' for that)."
msgstr "'bodycc' irá evitar a inclusão de qualquer pessoa mencionada nas linhas Cc no corpo do patch (mensagem do commit), exceto o 'self' (utilize 'self' para isso)."

#. type: Plain text
#: en/git-send-email.txt:358
#, priority:100
msgid "'sob' will avoid including anyone mentioned in the Signed-off-by trailers except for self (use 'self' for that)."
msgstr "O 'sob' evitará incluir qualquer pessoa mencionada nas linhas `Signed-off-by`, exceto para 'self' (utilize 'self' para isso)."

#. type: Plain text
#: en/git-send-email.txt:361
#, priority:100
msgid "'misc-by' will avoid including anyone mentioned in Acked-by, Reviewed-by, Tested-by and other \"-by\" lines in the patch body, except Signed-off-by (use 'sob' for that)."
msgstr "O 'misc-by' evitará incluir qualquer pessoa mencionada nas linhas 'Acked-by' (Reconhecido-por), 'Review-by' (Revisado-por), 'Tested-by' (Testado-por) e outras linhas \"by-by\" no corpo do patch, exceto o 'Signed-off-by' (Assinado-por) (utilize 'sob' para tanto)."

#. type: Plain text
#: en/git-send-email.txt:362
#, priority:100
msgid "'cccmd' will avoid running the --cc-cmd."
msgstr "'cccmd' evitará executar o --cc-cmd."

#. type: Plain text
#: en/git-send-email.txt:363
#, priority:100
msgid "'body' is equivalent to 'sob' + 'bodycc' + 'misc-by'."
msgstr "'body' é o equivalente a 'sob' + 'bodycc' + 'misc-by'."

#. type: Plain text
#: en/git-send-email.txt:364
#, priority:100
msgid "'all' will suppress all auto cc values."
msgstr "'all' irá suprimir todos os valores cc de maneira automática."

#. type: Plain text
#: en/git-send-email.txt:369
#, priority:100
msgid "Default is the value of `sendemail.suppresscc` configuration value; if that is unspecified, default to 'self' if --suppress-from is specified, as well as 'body' if --no-signed-off-cc is specified."
msgstr "A predefinição é o valor da configuração `sendemail.suppresscc`; caso isso não seja definido, a predefinição será `self` caso `--suppress-from` seja utilizado, bem como `body` caso `--no-selected-off-cc` seja utilizado."

#. type: Labeled list
#: en/git-send-email.txt:370
#, ignore-same, no-wrap, priority:100
msgid "--[no-]suppress-from"
msgstr "--[no-]suppress-from"

#. type: Plain text
#: en/git-send-email.txt:374
#, priority:100
msgid "If this is set, do not add the From: address to the cc: list.  Default is the value of `sendemail.suppressFrom` configuration value; if that is unspecified, default to --no-suppress-from."
msgstr "Caso esteja definido, não adicione o endereço From: à lista cc:.  A predefinição é o valor da opção de configuração `sendemail.suppressFrom`; caso não seja definido, a predefinição retorna para `--no-suppress-from`."

#. type: Labeled list
#: en/git-send-email.txt:375
#, ignore-same, no-wrap, priority:100
msgid "--[no-]thread"
msgstr "--[no-]thread"

#. type: Plain text
#: en/git-send-email.txt:381
#, priority:100
msgid "If this is set, the In-Reply-To and References headers will be added to each email sent.  Whether each mail refers to the previous email (`deep` threading per 'git format-patch' wording) or to the first email (`shallow` threading) is governed by \"--[no-]chain-reply-to\"."
msgstr "Caso esteja definido, os cabeçalhos 'In-Reply-To' e as Referências serão adicionadas em cada e-mail enviado.  Se cada e-mail se refere ao e-mail anterior (`deep` encadeado por 'git format-patch') ou ao primeiro e-mail (encadeamento `shallow`) é governado por \"--[no-]chain-reply-to\"."

#. type: Plain text
#: en/git-send-email.txt:386
#, priority:100
msgid "If disabled with \"--no-thread\", those headers will not be added (unless specified with --in-reply-to).  Default is the value of the `sendemail.thread` configuration value; if that is unspecified, default to --thread."
msgstr "Caso seja desativado com a opção \"--no-thread\", estes cabeçalhos não serão adicionados (a menos que seja especificado com a opção `--in-reply-to`).  A predefinição é o valor da opção de configuração `sendemail.thread`; caso não esteja definido, a predefinição retorna para `--thread`."

#. type: Plain text
#: en/git-send-email.txt:392
#, priority:100
msgid "It is up to the user to ensure that no In-Reply-To header already exists when 'git send-email' is asked to add it (especially note that 'git format-patch' can be configured to do the threading itself).  Failure to do so may not produce the expected result in the recipient's MUA."
msgstr "É responsabilidade do usuário garantir que já não exista um cabeçalho 'In-Reply-To' quando o comando 'git send-email' for solicitado para adicioná-lo (em especial, observe que o comando 'git format-patch' pode ser configurado para realizar o encadeamento ele mesmo).  Não fazer isso pode não produzir o resultado desejado no MUA do destinatário."

#. type: Title ~
#: en/git-send-email.txt:395
#, no-wrap, priority:100
msgid "Administering"
msgstr "Administrando"

#. type: Labeled list
#: en/git-send-email.txt:397
#, no-wrap, priority:100
msgid "--confirm=<mode>"
msgstr "--confirm=<modo>"

#. type: Plain text
#: en/git-send-email.txt:399
#, priority:100
msgid "Confirm just before sending:"
msgstr "Apenas confirme antes de enviar:"

#. type: Plain text
#: en/git-send-email.txt:402
#, priority:100
msgid "'always' will always confirm before sending"
msgstr "'always' sempre pedirá confirmação antes do envio"

#. type: Plain text
#: en/git-send-email.txt:403
#, priority:100
msgid "'never' will never confirm before sending"
msgstr "O 'never' nunca irá confirmar antes do envio"

#. type: Plain text
#: en/git-send-email.txt:405
#, priority:100
msgid "'cc' will confirm before sending when send-email has automatically added addresses from the patch to the Cc list"
msgstr "'cc' irá pedir uma confirmação antes do envio quando o \"send-email\" tiver adicionado de forma automática os endereços do patch à lista Cc"

#. type: Plain text
#: en/git-send-email.txt:406
#, priority:100
msgid "'compose' will confirm before sending the first message when using --compose."
msgstr "'compose' (compor) irá confirmar antes de enviar a primeira mensagem ao utilizar o `--compose`."

#. type: Plain text
#: en/git-send-email.txt:407
#, priority:100
msgid "'auto' is equivalent to 'cc' + 'compose'"
msgstr "'auto' é o equivalente a 'cc' + 'compose' (compor)"

#. type: Plain text
#: en/git-send-email.txt:412
#, priority:100
msgid "Default is the value of `sendemail.confirm` configuration value; if that is unspecified, default to 'auto' unless any of the suppress options have been specified, in which case default to 'compose'."
msgstr "A predefinição é o valor da configuração `sendemail.confirm`; caso isso não seja definido, utilize a predefinição `auto`, a menos que alguma das opções da supressão tenha sido utilizada; nesse caso, a predefinição será `compose`."

#. type: Plain text
#: en/git-send-email.txt:415
#, priority:100
msgid "Do everything except actually send the emails."
msgstr "Faça tudo, exceto realmente enviar os e-mails."

#. type: Labeled list
#: en/git-send-email.txt:416
#, ignore-same, no-wrap, priority:100
msgid "--[no-]format-patch"
msgstr "--[no-]format-patch"

#. type: Plain text
#: en/git-send-email.txt:421
#, priority:100
msgid "When an argument may be understood either as a reference or as a file name, choose to understand it as a format-patch argument (`--format-patch`)  or as a file name (`--no-format-patch`). By default, when such a conflict occurs, git send-email will fail."
msgstr "Quando um argumento pode ser entendido como uma referência ou como um nome do arquivo, entenda-o como um argumento do formato do patch (`--format-patch`) ou como um nome de arquivo (`--no-format-patch` ) É predefinido que quando este conflito ocorra, o 'git send-email' seja encerrado."

#. type: Plain text
#: en/git-send-email.txt:425
#, priority:100
msgid "Make git-send-email less verbose.  One line per email should be all that is output."
msgstr "Torne o comando 'git-send-email' menos detalhado.  Deve ser gerado apenas uma linha por e-mail."

#. type: Labeled list
#: en/git-send-email.txt:426
#, ignore-same, no-wrap, priority:100
msgid "--[no-]validate"
msgstr "--[no-]validate"

#. type: Plain text
#: en/git-send-email.txt:429
#, priority:100
msgid "Perform sanity checks on patches.  Currently, validation means the following:"
msgstr "Realize verificações de sanidade nos patches.  Atualmente, a validação significa o seguinte:"

#. type: Plain text
#: en/git-send-email.txt:432
#, priority:100
msgid "Invoke the sendemail-validate hook if present (see linkgit:githooks[5])."
msgstr "Se presente, chame o gancho de validação do sendmail (consulte linkgit:githooks[5])."

#. type: Plain text
#: en/git-send-email.txt:433
#, priority:100
msgid "Warn of patches that contain lines longer than"
msgstr "Aviso dos patches que contenham linhas mais longas que"

#. type: Plain text
#: en/git-send-email.txt:437
#, no-wrap, priority:100
msgid ""
"998 characters unless a suitable transfer encoding\n"
"('auto', 'base64', or 'quoted-printable') is used;\n"
"this is due to SMTP limits as described by\n"
"http://www.ietf.org/rfc/rfc5322.txt.\n"
msgstr ""
"998 caracteres, a menos que uma codificação de transferência adequada\n"
"('auto', 'base64', ou 'quoted-printable') seja utilizada;\n"
"isso se deve as limitações do SMTP descritos em\n"
"http://www.ietf.org/rfc/rfc5322.txt.\n"

#. type: Plain text
#: en/git-send-email.txt:441
#, priority:100
msgid "Default is the value of `sendemail.validate`; if this is not set, default to `--validate`."
msgstr "A predefinição é o valor do `sendemail.validate`; caso já não estiver definido, a predefinição retorna para `--validate`."

#. type: Plain text
#: en/git-send-email.txt:444
#, priority:100
msgid "Send emails even if safety checks would prevent it."
msgstr "Envie os e-mails mesmo que as verificações de segurança as impeçam."

#. type: Title ~
#: en/git-send-email.txt:447
#, no-wrap, priority:100
msgid "Information"
msgstr "Informação"

#. type: Labeled list
#: en/git-send-email.txt:449
#, ignore-same, no-wrap, priority:100
msgid "--dump-aliases"
msgstr "--dump-aliases"

#. type: Plain text
#: en/git-send-email.txt:454
#, priority:100
msgid "Instead of the normal operation, dump the shorthand alias names from the configured alias file(s), one per line in alphabetical order. Note, this only includes the alias name and not its expanded email addresses.  See 'sendemail.aliasesfile' for more information about aliases."
msgstr "Em vez da operação normal, despeje os nomes dos pseudônimos dos atalhos vindo do arquivo de configuração de pseudônimos, um por linha e em ordem alfabética. Observe que isso inclui apenas o pseudônimo e não os seus endereços de e-mail que foram expandidos.  Para obter mais informações sobre pseudônimos, consulte 'sendemail.aliasesfile'."

#. type: Title ~
#: en/git-send-email.txt:466
#, no-wrap, priority:100
msgid "Use gmail as the smtp server"
msgstr "Utilize o gmail como servidor smtp"

#. type: Plain text
#: en/git-send-email.txt:469
#, priority:100
msgid "To use 'git send-email' to send your patches through the GMail SMTP server, edit ~/.gitconfig to specify your account settings:"
msgstr "Para usar o 'git send-email' para enviar os seus patches através do servidor SMTP do GMail, edite '~/.gitconfig' para definir as configurações da sua conta:"

#. type: delimited block -
#: en/git-send-email.txt:476
#, no-wrap, priority:100
msgid ""
"[sendemail]\n"
"\tsmtpEncryption = tls\n"
"\tsmtpServer = smtp.gmail.com\n"
"\tsmtpUser = yourname@gmail.com\n"
"\tsmtpServerPort = 587\n"
msgstr ""
"[sendemail]\n"
"\tsmtpEncryption = tls\n"
"\tsmtpServer = smtp.gmail.com\n"
"\tsmtpUser = yourname@gmail.com\n"
"\tsmtpServerPort = 587\n"

#. type: Plain text
#: en/git-send-email.txt:481
#, priority:100
msgid "If you have multi-factor authentication set up on your Gmail account, you will need to generate an app-specific password for use with 'git send-email'. Visit https://security.google.com/settings/security/apppasswords to create it."
msgstr "Caso opte pela autenticação em várias etapas configurada na sua conta do Gmail, será necessário gerar uma senha específica do aplicativo para que possa ser usado com o comando 'git send-email'. Visite o link https://security.google.com/settings/security/apppasswords para criá-la."

#. type: Plain text
#: en/git-send-email.txt:485
#, priority:100
msgid "If you do not have multi-factor authentication set up on your Gmail account, you will need to allow less secure app access. Visit https://myaccount.google.com/lesssecureapps to enable it."
msgstr "Caso não tenha a autenticação em várias etapas configurada na sua conta do Gmail, será necessário permitir o acesso ao aplicativo menos seguro. Visite o link https://myaccount.google.com/lesssecureapps para ativá-la."

#. type: Plain text
#: en/git-send-email.txt:488
#, priority:100
msgid "Once your commits are ready to be sent to the mailing list, run the following commands:"
msgstr "Quando os seus commits estiverem prontos para serem enviadas para a lista de discussão, execute os seguintes comandos:"

#. type: Plain text
#: en/git-send-email.txt:492
#, no-wrap, priority:100
msgid ""
"\t$ git format-patch --cover-letter -M origin/master -o outgoing/\n"
"\t$ edit outgoing/0000-*\n"
"\t$ git send-email outgoing/*\n"
msgstr ""
"\t$ git format-patch --cover-letter -M origin/master -o outgoing/\n"
"\t$ edit outgoing/0000-*\n"
"\t$ git send-email outgoing/*\n"

#. type: Plain text
#: en/git-send-email.txt:497
#, priority:100
msgid "The first time you run it, you will be prompted for your credentials.  Enter the app-specific or your regular password as appropriate.  If you have credential helper configured (see linkgit:git-credential[1]), the password will be saved in the credential store so you won't have to type it the next time."
msgstr "As suas credenciais serão solicitadas na primeira vez em que você executá-lo.  Entre com as credenciais específicas do aplicativo ou a sua senha normal conforme for o caso.  Caso tenha o auxiliar de credencial configurado (consulte linkgit:git-credential[1]), a senha será salva no armazenamento de credenciais para que você não precise digitá-la na próxima vez."

#. type: Plain text
#: en/git-send-email.txt:503
#, priority:100
msgid "Note: the following core Perl modules that may be installed with your distribution of Perl are required: MIME::Base64, MIME::QuotedPrint, Net::Domain and Net::SMTP.  These additional Perl modules are also required: Authen::SASL and Mail::Address."
msgstr "Observação: os seguintes módulos Perl talvez já estejam instalados com a sua distribuição Perl, caso contrário, estes módulos são necessários: MIME::Base64, MIME::QuotedPrint, Net::Domain e Net::SMTP.  Estes módulos Perl também são necessários: Authen::SASL and Mail::Address."

#. type: Plain text
#: en/git-send-email.txt:508
#, priority:100
msgid "linkgit:git-format-patch[1], linkgit:git-imap-send[1], mbox(5)"
msgstr "linkgit:git-format-patch[1], linkgit:git-imap-send[1], mbox(5)"

#. type: Title =
#: en/git-send-pack.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-send-pack(1)"
msgstr "git-send-pack(1)"

#. type: Plain text
#: en/git-send-pack.txt:7
#, priority:90
msgid "git-send-pack - Push objects over Git protocol to another repository"
msgstr "git-send-pack - Impulsiona (push) os objetos através do protocolo Git para um outro repositório"

#. type: Plain text
#: en/git-send-pack.txt:16
#, ignore-ellipsis, no-wrap, priority:90
msgid ""
"'git send-pack' [--dry-run] [--force] [--receive-pack=<git-receive-pack>]\n"
"\t\t[--verbose] [--thin] [--atomic]\n"
"\t\t[--[no-]signed|--signed=(true|false|if-asked)]\n"
"\t\t[<host>:]<directory> (--all | <ref>...)\n"
msgstr ""
"'git send-pack' [--dry-run] [--force] [--receive-pack=<git-receive-pack>]\n"
"\t\t[--verbose] [--thin] [--atomic]\n"
"\t\t[--[no-]signed|--signed=(true|false|if-asked)]\n"
"\t\t[<host>:]<diretório> (--all | <ref>...)\n"

#. type: Plain text
#: en/git-send-pack.txt:21
#, priority:90
msgid "Usually you would want to use 'git push', which is a higher-level wrapper of this command, instead. See linkgit:git-push[1]."
msgstr "No lugar utilize 'git push' que é um wrapper de maior hierarquia deste comando. Consulte linkgit:git-push[1]."

#. type: Plain text
#: en/git-send-pack.txt:24
#, priority:90
msgid "Invokes 'git-receive-pack' on a possibly remote repository, and updates it from the current repository, sending named refs."
msgstr "Invoca o comando 'git-receive-pack' num repositório possivelmente remoto e atualiza-o a partir do repositório atual, enviando determinados refs."

#. type: Plain text
#: en/git-send-pack.txt:36
#, priority:90
msgid "Same as --receive-pack=<git-receive-pack>."
msgstr "O mesmo que --receive-pack=<git-receive-pack>."

#. type: Plain text
#: en/git-send-pack.txt:40
#, priority:90
msgid "Instead of explicitly specifying which refs to update, update all heads that locally exist."
msgstr "Em vez de definir de forma explicita quais são referências que devem ser atualizadas, atualize todos os cabeçalhos que existam localmente."

#. type: Plain text
#: en/git-send-pack.txt:67
#, priority:90
msgid "Send a \"thin\" pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic."
msgstr "Envie um pacote \"thin\", que registra os objetos no formato \"deltificado\" com base nos objetos não inclusos no pacote para reduzir o tráfego de rede."

#. type: Plain text
#: en/git-send-pack.txt:72
#, priority:90
msgid "Use an atomic transaction for updating the refs. If any of the refs fails to update then the entire push will fail without changing any refs."
msgstr "Use uma transação atômica para atualizar as refs. Caso alguma das refs falhem na atualização, todo o \"push\" falhará sem alterar nenhuma das refs."

#. type: Labeled list
#: en/git-send-pack.txt:84
#, no-wrap, priority:90
msgid "--push-option=<string>"
msgstr "--push-option=<texto>"

#. type: Plain text
#: en/git-send-pack.txt:89
#, priority:90
msgid "Pass the specified string as a push option for consumption by hooks on the server side.  If the server doesn't support push options, error out.  See linkgit:git-push[1] and linkgit:githooks[5] for details."
msgstr "Encaminha uma cadeia de caracteres específicos para uma opção `push` que será utilizada por ganchos no lado do servidor.  Caso o servidor não seja compatível com as opções `push`, exibe erro.  Para mais detalhes consulte linkgit:git-push[1] e linkgit:githooks[5]."

#. type: Labeled list
#: en/git-send-pack.txt:90
#, no-wrap, priority:90
msgid "<host>"
msgstr "<host>"

#. type: Plain text
#: en/git-send-pack.txt:94
#, priority:90
msgid "A remote host to house the repository.  When this part is specified, 'git-receive-pack' is invoked via ssh."
msgstr "Um host remoto para hospedar o repositório.  Quando esta parte for definida, o comando 'git-receive-pack' é chamado através do ssh."

#. type: Plain text
#: en/git-send-pack.txt:97
#, priority:90
msgid "The repository to update."
msgstr "O repositório que será atualizado."

#. type: Plain text
#: en/git-send-pack.txt:107
#, priority:90
msgid "There are three ways to specify which refs to update on the remote end."
msgstr "Existem três maneiras para definir quais as refs devem ser atualizadas na extremidade remota."

#. type: Plain text
#: en/git-send-pack.txt:111
#, priority:90
msgid "With `--all` flag, all refs that exist locally are transferred to the remote side.  You cannot specify any '<ref>' if you use this flag."
msgstr "Com a opção `--all`, todos as refs existentes localmente são transferidos para o lado remoto.  Você não pode definir qualquer '<ref>' caso você utilize está opção."

#. type: Plain text
#: en/git-send-pack.txt:114
#, priority:90
msgid "Without `--all` and without any '<ref>', the heads that exist both on the local side and on the remote side are updated."
msgstr "Sem `--all` e sem qualquer '<ref>', os cabeçalhos existentes no lado local e no lado remoto são atualizadas."

#. type: Plain text
#: en/git-send-pack.txt:120
#, priority:90
msgid "When one or more '<ref>' are specified explicitly (whether on the command line or via `--stdin`), it can be either a single pattern, or a pair of such pattern separated by a colon \":\" (this means that a ref name cannot have a colon in it).  A single pattern '<name>' is just a shorthand for '<name>:<name>'."
msgstr "Quando uma ou mais '<ref>' sejam definidas de forma explicita (seja através da linha do comando ou através da opção `--stdin`), pode ser um único padrão ou o par deles separados por dois pontos \":\" (significa que o nome da \"ref\" não pode ter dois pontos).  Um único padrão '<nome>' é apenas uma abreviação para '<nome>:<nome>'."

#. type: Plain text
#: en/git-send-pack.txt:128
#, priority:90
msgid "Each pattern pair consists of the source side (before the colon)  and the destination side (after the colon).  The ref to be pushed is determined by finding a match that matches the source side, and where it is pushed is determined by using the destination side. The rules used to match a ref are the same rules used by 'git rev-parse' to resolve a symbolic ref name. See linkgit:git-rev-parse[1]."
msgstr "Cada par de padrões consiste no lado da origem (antes dos dois pontos) e no lado do destino (depois dos dois pontos).  O `ref` a ser feito o `push` é determinado localizando uma coincidência que corresponda com a origem e a localização da origem é determinada usando o lado de destino. As regras utilizadas para coincidir com um `ref` são os mesmos utilizados por `git rev-parse` para resolver um nome `ref` simbólico. Consulte linkgit:git-rev-parse[1]."

#. type: Plain text
#: en/git-send-pack.txt:131
#, priority:90
msgid "It is an error if <src> does not match exactly one of the local refs."
msgstr "É um erro caso `<src>` não corresponda exatamente a um dos `refs` locais."

#. type: Plain text
#: en/git-send-pack.txt:133
#, priority:90
msgid "It is an error if <dst> matches more than one remote refs."
msgstr "É um erro caso <dst> coincida com mais de uma refs remota."

#. type: Plain text
#: en/git-send-pack.txt:135
#, priority:90
msgid "If <dst> does not match any remote ref, either"
msgstr "Caso `<dst>` não corresponda a nenhum `ref` remoto"

#. type: Title =
#: en/git-shell.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-shell(1)"
msgstr "git-shell(1)"

#. type: Plain text
#: en/git-shell.txt:7
#, priority:100
msgid "git-shell - Restricted login shell for Git-only SSH access"
msgstr "git-shell - Shell de login restrito para acesso SSH, apenas para o Git"

#. type: Plain text
#: en/git-shell.txt:15
#, no-wrap, priority:100
msgid ""
"'chsh' -s $(command -v git-shell) <user>\n"
"'git clone' <user>`@localhost:/path/to/repo.git`\n"
"'ssh' <user>`@localhost`\n"
msgstr ""
"'chsh' -s $(command -v git-shell) <usuário>\n"
"'git clone' <usuário>`@localhost:/path/to/repo.git`\n"
"'ssh' <usuário>`@localhost`\n"

#. type: Plain text
#: en/git-shell.txt:23
#, priority:100
msgid "This is a login shell for SSH accounts to provide restricted Git access.  It permits execution only of server-side Git commands implementing the pull/push functionality, plus custom commands present in a subdirectory named `git-shell-commands` in the user's home directory."
msgstr "Este é um shell de login para contas SSH para fornecer acesso restrito ao Git.  Ele permite a execução apenas dos comandos Git do lado do servidor, implementando a funcionalidade 'pull/push', além dos comandos personalizados presentes em um subdiretório chamado `git shell command` no diretório inicial do usuário."

#. type: Plain text
#: en/git-shell.txt:28
#, priority:100
msgid "'git shell' accepts the following commands after the `-c` option:"
msgstr "'git shell' aceita os seguintes comandos após a opção `-c`:"

#. type: Labeled list
#: en/git-shell.txt:29
#, no-wrap, priority:100
msgid "'git receive-pack <argument>'"
msgstr "'git receive-pack <argumento>'"

#. type: Labeled list
#: en/git-shell.txt:30
#, no-wrap, priority:100
msgid "'git upload-pack <argument>'"
msgstr "'git upload-pack <argumento>'"

#. type: Labeled list
#: en/git-shell.txt:31
#, no-wrap, priority:100
msgid "'git upload-archive <argument>'"
msgstr "'git upload-archive <argumento>'"

#. type: Plain text
#: en/git-shell.txt:35
#, priority:100
msgid "Call the corresponding server-side command to support the client's 'git push', 'git fetch', or 'git archive --remote' request."
msgstr "Chame o comando correspondente do lado do servidor para apoiar a solicitação do comando 'git push', 'git fetch' ou 'git archive --remote' do cliente."

#. type: Labeled list
#: en/git-shell.txt:35
#, no-wrap, priority:100
msgid "'cvs server'"
msgstr "'cvs server'"

#. type: Plain text
#: en/git-shell.txt:37
#, priority:100
msgid "Imitate a CVS server.  See linkgit:git-cvsserver[1]."
msgstr "Imite um servidor CVS.  Consulte linkgit:git-cvsserver[1]."

#. type: Plain text
#: en/git-shell.txt:42
#, priority:100
msgid "If a `~/git-shell-commands` directory is present, 'git shell' will also handle other, custom commands by running \"`git-shell-commands/<command> <arguments>`\" from the user's home directory."
msgstr "Caso um diretório `~/git-shell-command` estiver presente, o comando 'git shell' também manipulará outros comandos personalizados executando \"`git-shell-commands/<comando> <argumentos>`\" no diretório inicial do usuário."

#. type: Title -
#: en/git-shell.txt:44
#, no-wrap, priority:100
msgid "INTERACTIVE USE"
msgstr "USO INTERATIVO"

#. type: Plain text
#: en/git-shell.txt:48
#, priority:100
msgid "By default, the commands above can be executed only with the `-c` option; the shell is not interactive."
msgstr "É predefinido que os comandos acima possam ser executados apenas com a opção `-c`; o shell não é interativo."

#. type: Plain text
#: en/git-shell.txt:56
#, priority:100
msgid "If a `~/git-shell-commands` directory is present, 'git shell' can also be run interactively (with no arguments).  If a `help` command is present in the `git-shell-commands` directory, it is run to provide the user with an overview of allowed actions.  Then a \"git> \" prompt is presented at which one can enter any of the commands from the `git-shell-commands` directory, or `exit` to close the connection."
msgstr "Caso um diretório `~/git-shell-command` estiver presente, o comando 'git shell' também poderá ser executado interativamente (sem argumentos).  Caso um comando `help` estiver presente no diretório `git-shell-command`, ele será executado para fornecer ao usuário uma visão geral das ações que são permitidas.  Em seguida, é apresentado um prompt \"git>\", onde é possível digitar qualquer um dos comandos do diretório `git-shell-command`, ou `exit` para encerrar a conexão."

#. type: Plain text
#: en/git-shell.txt:61
#, priority:100
msgid "Generally this mode is used as an administrative interface to allow users to list repositories they have access to, create, delete, or rename repositories, or change repository descriptions and permissions."
msgstr "Em geral, este modo é utilizado como uma interface administrativa para permitir que os usuários listem os repositórios dos quais eles têm acesso para, criar, excluir ou renomear os repositórios ou alterar as descrições e permissões do mesmo."

#. type: Plain text
#: en/git-shell.txt:64
#, priority:100
msgid "If a `no-interactive-login` command exists, then it is run and the interactive shell is aborted."
msgstr "Caso um comando `no-interactive-login` existir, ele será executado e o shell interativo será abortado."

#. type: Plain text
#: en/git-shell.txt:69
#, priority:100
msgid "To disable interactive logins, displaying a greeting instead:"
msgstr "Para desativar os logins interativos, exibindo uma saudação:"

#. type: delimited block -
#: en/git-shell.txt:80
#, no-wrap, priority:100
msgid ""
"$ chsh -s /usr/bin/git-shell\n"
"$ mkdir $HOME/git-shell-commands\n"
"$ cat >$HOME/git-shell-commands/no-interactive-login <<\\EOF\n"
"#!/bin/sh\n"
"printf '%s\\n' \"Hi $USER! You've successfully authenticated, but I do not\"\n"
"printf '%s\\n' \"provide interactive shell access.\"\n"
"exit 128\n"
"EOF\n"
"$ chmod +x $HOME/git-shell-commands/no-interactive-login\n"
msgstr ""
"$ chsh -s /usr/bin/git-shell\n"
"$ mkdir $HOME/git-shell-commands\n"
"$ cat >$HOME/git-shell-commands/no-interactive-login <<\\EOF\n"
"#!/bin/sh\n"
"printf '%s\\n' \"Olá $USER! Você se autenticou com sucesso, porém eu não\"\n"
"printf '%s\\n' \"forneço um acesso interativo ao shell.\"\n"
"exit 128\n"
"EOF\n"
"$ chmod +x $HOME/git-shell-commands/no-interactive-login\n"

#. type: Plain text
#: en/git-shell.txt:85
#, priority:100
msgid "To enable git-cvsserver access (which should generally have the `no-interactive-login` example above as a prerequisite, as creating the git-shell-commands directory allows interactive logins):"
msgstr "Para habilitar o acesso ao 'git cvsserver' (que geralmente deve ter o exemplo `no-interactive-login` acima) como um pré-requisito, como criando o diretório `git-shell-commands` permite logins interativos):"

#. type: delimited block -
#: en/git-shell.txt:96
#, no-wrap, priority:100
msgid ""
"$ cat >$HOME/git-shell-commands/cvs <<\\EOF\n"
"if ! test $# = 1 && test \"$1\" = \"server\"\n"
"then\n"
"\techo >&2 \"git-cvsserver only handles \\\"server\\\"\"\n"
"\texit 1\n"
"fi\n"
"exec git cvsserver server\n"
"EOF\n"
"$ chmod +x $HOME/git-shell-commands/cvs\n"
msgstr ""
"$ cat >$HOME/git-shell-commands/cvs <<\\EOF\n"
"if ! test $# = 1 && test \"$1\" = \"server\"\n"
"then\n"
"\techo >&2 \"git-cvsserver lida apenas com \\\"server\\\"\"\n"
"\texit 1\n"
"fi\n"
"exec git cvsserver server\n"
"EOF\n"
"$ chmod +x $HOME/git-shell-commands/cvs\n"

#. type: Plain text
#: en/git-shell.txt:103
#, priority:100
msgid "ssh(1), linkgit:git-daemon[1], contrib/git-shell-commands/README"
msgstr "ssh(1), linkgit:git-daemon[1], contrib/git-shell-commands/README"

#. type: Title =
#: en/git-sh-i18n--envsubst.txt:2
#, no-wrap, priority:90
msgid "git-sh-i18n{litdd}envsubst(1)"
msgstr "git-sh-i18n{litdd}envsubst(1)"

#. type: Plain text
#: en/git-sh-i18n--envsubst.txt:7
#, priority:90
msgid "git-sh-i18n--envsubst - Git's own envsubst(1) for i18n fallbacks"
msgstr "git-sh-i18n--envsubst - O próprio envsubst(1) do Git para fallbacks do i18n"

#. type: Plain text
#: en/git-sh-i18n--envsubst.txt:17
#, no-wrap, priority:90
msgid ""
"eval_gettext () {\n"
"\tprintf \"%s\" \"$1\" | (\n"
"\t\texport PATH $('git sh-i18n{litdd}envsubst' --variables \"$1\");\n"
"\t\t'git sh-i18n{litdd}envsubst' \"$1\"\n"
"\t)\n"
"}\n"
msgstr ""
"eval_gettext () {\n"
"\tprintf \"%s\" \"$1\" | (\n"
"\t\texport PATH $('git sh-i18n{litdd}envsubst' --variables \"$1\");\n"
"\t\t'git sh-i18n{litdd}envsubst' \"$1\"\n"
"\t)\n"
"}\n"

#. type: Plain text
#: en/git-sh-i18n--envsubst.txt:24
#, priority:90
msgid "This is not a command the end user would want to run.  Ever.  This documentation is meant for people who are studying the plumbing scripts and/or are writing new ones."
msgstr "Este não é um comando que o usuário final gostaria de executar.  Nunca.  Esta documentação é destinada para as pessoas que estudam os scripts \"plumbing\" e/ou estão escrevendo novos."

#. type: Plain text
#: en/git-sh-i18n--envsubst.txt:29
#, priority:90
msgid "'git sh-i18n{litdd}envsubst' is Git's stripped-down copy of the GNU `envsubst(1)` program that comes with the GNU gettext package. It's used internally by linkgit:git-sh-i18n[1] to interpolate the variables passed to the `eval_gettext` function."
msgstr "O comando 'git sh-i18n {litdd} envsubst' é uma cópia simplificada do Git do programa GNU `envsubst(1)` que vem com o pacote gettext do GNU. É utilizado internamente através do linkgit:git-sh-i18n[1] para interpolar as variáveis encaminhadas para a função `eval_gettext`."

#. type: Plain text
#: en/git-sh-i18n--envsubst.txt:33
#, priority:90
msgid "No promises are made about the interface, or that this program won't disappear without warning in the next version of Git. Don't use it."
msgstr "Nenhuma promessa é feita sobre a interface ou que este programa não desaparecerá sem aviso prévio na próxima versão do Git. Não use."

#. type: Title =
#: en/git-sh-i18n.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-sh-i18n(1)"
msgstr "git-sh-i18n(1)"

#. type: Plain text
#: en/git-sh-i18n.txt:7
#, priority:90
msgid "git-sh-i18n - Git's i18n setup code for shell scripts"
msgstr "git-sh-i18n - Código de configuração i18n para os scripts shell"

#. type: Plain text
#: en/git-sh-i18n.txt:12
#, no-wrap, priority:90
msgid "'. \"$(git --exec-path)/git-sh-i18n\"'\n"
msgstr "'. \"$(git --exec-path)/git-sh-i18n\"'\n"

#. type: Plain text
#: en/git-sh-i18n.txt:26
#, priority:90
msgid "The 'git sh-i18n scriptlet is designed to be sourced (using `.`) by Git's porcelain programs implemented in shell script. It provides wrappers for the GNU `gettext` and `eval_gettext` functions accessible through the `gettext.sh` script, and provides pass-through fallbacks on systems without GNU gettext."
msgstr "O script 'git sh-i18n' foi projetado para ser obtido (utilizando `.`) pelos programas de porcelana do Git implementados no shell script. Ele fornece \"wrappers\" para as funções GNU `gettext` e `eval_gettext` acessíveis através do script `gettext.sh`, e oferece retroatividade com passagem direta nos sistemas sem o GNU gettext."

#. type: Labeled list
#: en/git-sh-i18n.txt:30
#, no-wrap, priority:90
msgid "gettext"
msgstr "gettext"

#. type: Plain text
#: en/git-sh-i18n.txt:34
#, priority:90
msgid "Currently a dummy fall-through function implemented as a wrapper around `printf(1)`. Will be replaced by a real gettext implementation in a later version."
msgstr "Atualmente uma função fictícia `fall-through` implementada como um invólucro 'wrapper' em torno do `printf(1)`. Será substituído por uma implementação 'gettext' real em uma versão posterior."

#. type: Labeled list
#: en/git-sh-i18n.txt:35
#, no-wrap, priority:90
msgid "eval_gettext"
msgstr "eval_gettext"

#. type: Plain text
#: en/git-sh-i18n.txt:40
#, priority:90
msgid "Currently a dummy fall-through function implemented as a wrapper around `printf(1)` with variables expanded by the linkgit:git-sh-i18n{litdd}envsubst[1] helper. Will be replaced by a real gettext implementation in a later version."
msgstr "Atualmente uma função fictícia `fall-through` implementada como um invólucro 'wrapper' em torno do `printf(1)` com as variáveis expandidas através do auxiliar linkgit:git-sh-i18n{litdd}envsubst[1]. Será substituído por uma implementação 'gettext' real em uma versão posterior."

#. type: Title =
#: en/git-shortlog.txt:2
#, ignore-same, no-wrap, priority:260
msgid "git-shortlog(1)"
msgstr "git-shortlog(1)"

#. type: Plain text
#: en/git-shortlog.txt:7
#, priority:260
msgid "git-shortlog - Summarize 'git log' output"
msgstr "git-shortlog - Resume a saída do comando 'git log'"

#. type: Plain text
#: en/git-shortlog.txt:13
#, ignore-ellipsis, no-wrap, priority:260
msgid ""
"'git shortlog' [<options>] [<revision-range>] [[--] <path>...]\n"
"git log --pretty=short | 'git shortlog' [<options>]\n"
msgstr ""
"'git shortlog' [<opções>] [<intervalo-da-revisão>] [[--] <caminho>...]\n"
"git log --pretty=short | 'git shortlog' [<opções>]\n"

#. type: Plain text
#: en/git-shortlog.txt:18
#, priority:260
msgid "Summarizes 'git log' output in a format suitable for inclusion in release announcements. Each commit will be grouped by author and title."
msgstr "Resume a saída 'git log' em um formato adequado para inclusão nos anúncios de lançamento. Cada commit será agrupada por autor e título."

#. type: Plain text
#: en/git-shortlog.txt:20
#, priority:260
msgid "Additionally, \"[PATCH]\" will be stripped from the commit description."
msgstr "Além disso, o \"[PATCH]\" será retirado da descrição do commit."

#. type: Plain text
#: en/git-shortlog.txt:25
#, priority:260
msgid "If no revisions are passed on the command line and either standard input is not a terminal or there is no current branch, 'git shortlog' will output a summary of the log read from standard input, without reference to the current repository."
msgstr "Caso nenhuma revisão seja aprovada na linha de comando e a entrada padrão não seja um terminal ou não houver uma ramificação atual, o `git shortlog` exibirá um resumo do registro log lido da entrada padrão, sem referência ao repositório atual."

#. type: Plain text
#: en/git-shortlog.txt:33
#, priority:260
msgid "Sort output according to the number of commits per author instead of author alphabetic order."
msgstr "Classifique a saída de acordo com a quantidade de commits feitas pelo autor, em vez da ordem alfabética do autor."

#. type: Plain text
#: en/git-shortlog.txt:37
#, priority:260
msgid "Suppress commit description and provide a commit count summary only."
msgstr "Suprima a descrição do commit e forneça apenas um resumo da contagem dos commits."

#. type: Labeled list
#: en/git-shortlog.txt:39
#, ignore-same, no-wrap, priority:260
msgid "--email"
msgstr "--email"

#. type: Plain text
#: en/git-shortlog.txt:41
#, priority:260
msgid "Show the email address of each author."
msgstr "Exibir o endereço de email de cada autor."

#. type: Labeled list
#: en/git-shortlog.txt:42
#, no-wrap, priority:260
msgid "--format[=<format>]"
msgstr "--format[=<formato>]"

#. type: Plain text
#: en/git-shortlog.txt:47
#, priority:260
msgid "Instead of the commit subject, use some other information to describe each commit.  '<format>' can be any string accepted by the `--format` option of 'git log', such as '* [%h] %s'.  (See the \"PRETTY FORMATS\" section of linkgit:git-log[1].)"
msgstr "Em vez do assunto do commit, utilize outras informações para descrever cada commit.  O '<formato>' pode ser qualquer texto aceito pela opção `--format` do comando 'git log', assim como '* [%h] %s'.  (Consulte a seção \"FORMATOS BONITOS\" do linkgit:git-log[1].)"

#. type: Plain text
#: en/git-shortlog.txt:49
#, priority:260
msgid "Each pretty-printed commit will be rewrapped before it is shown."
msgstr "Cada commit bem impresso será reorganizado antes de ser exibido."

#. type: Labeled list
#: en/git-shortlog.txt:50
#, no-wrap, priority:260
msgid "--group=<type>"
msgstr "--group=<tipo>"

#. type: Plain text
#: en/git-shortlog.txt:53
#, priority:260
msgid "Group commits based on `<type>`. If no `--group` option is specified, the default is `author`. `<type>` is one of:"
msgstr "Grupo dos commits com base no `<tipo>`. Caso nenhuma opção `--group` seja usada a predefinição é `author`. `<tipo>` é um dos:"

#. type: Plain text
#: en/git-shortlog.txt:56
#, priority:260
msgid "`author`, commits are grouped by author"
msgstr "`author`, os commits são agrupados pelo autor"

#. type: Plain text
#: en/git-shortlog.txt:57
#, priority:260
msgid "`committer`, commits are grouped by committer (the same as `-c`)"
msgstr "`committer`, os commits são agrupados por aquele que faz os commits (o mesmo que `-c`)"

#. type: Plain text
#: en/git-shortlog.txt:62
#, priority:260
msgid "`trailer:<field>`, the `<field>` is interpreted as a case-insensitive commit message trailer (see linkgit:git-interpret-trailers[1]). For example, if your project uses `Reviewed-by` trailers, you might want to see who has been reviewing with `git shortlog -ns --group=trailer:reviewed-by`."
msgstr "`trailer:<campo>`, o `<campo>` é interpretado como um trecho da mensagem do commit indiferente se for maiúsculas ou minúsculas (consulte linkgit:git-interpret-trailers[1]). Por exemplo, caso o seu projeto use trechos `Revisados por` (`Reviewed-by`), é possível ver quem tem feito a revisão através do comando `git shortlog -ns --group=trailer:reviewed-by`."

#. type: Plain text
#: en/git-shortlog.txt:67
#, priority:260
msgid "Note that commits that do not include the trailer will not be counted.  Likewise, commits with multiple trailers (e.g., multiple signoffs) may be counted more than once (but only once per unique trailer value in that commit)."
msgstr "Observe que os commits não serão contados caso não incluam os trechos.  Da mesma maneira que os commits com vários trechos (por exemplo, diversos signoffs) podem ser contados mais de uma vez (porém apenas uma vez com o valor de um trecho único naquele commit)."

#. type: Plain text
#: en/git-shortlog.txt:72
#, priority:260
msgid "Shortlog will attempt to parse each trailer value as a `name <email>` identity. If successful, the mailmap is applied and the email is omitted unless the `--email` option is specified. If the value cannot be parsed as an identity, it will be taken literally and completely."
msgstr "O shortlog tentará analisar o valor de cada trecho com a identidade do `nome <email>`. Caso seja bem-sucedido, o envio dos e-mails serão aplicados e o e-mail é omitido a menos que a opção `--e-mail` seja usada. Caso o valor não possa ser analisado como uma identidade, ele será entendido de forma literal e absoluta."

#. type: Plain text
#: en/git-shortlog.txt:78
#, priority:260
msgid "If `--group` is specified multiple times, commits are counted under each value (but again, only once per unique value in that commit). For example, `git shortlog --group=author --group=trailer:co-authored-by` counts both authors and co-authors."
msgstr "Caso a opção `--group` seja usada mais de uma vez, os commits serão contados abaixo de cada valor (e novamente, apenas um a cada valor único que foi feito o commit). O comando `git shortlog --group=author --group=trailer:co-authored-by` por exemplo, conta ambos os autores e os co-autores."

#. type: Labeled list
#: en/git-shortlog.txt:80
#, ignore-same, no-wrap, priority:260
msgid "--committer"
msgstr "--committer"

#. type: Plain text
#: en/git-shortlog.txt:82
#, priority:260
msgid "This is an alias for `--group=committer`."
msgstr "É um apelido para `--group=committer`."

#. type: Labeled list
#: en/git-shortlog.txt:83
#, no-wrap, priority:260
msgid "-w[<width>[,<indent1>[,<indent2>]]]"
msgstr "-w[<largura>[,<recuo1>[,<recuo2>]]]"

#. type: Plain text
#: en/git-shortlog.txt:88
#, priority:260
msgid "Linewrap the output by wrapping each line at `width`.  The first line of each entry is indented by `indent1` spaces, and the second and subsequent lines are indented by `indent2` spaces. `width`, `indent1`, and `indent2` default to 76, 6 and 9 respectively."
msgstr "Limite o tamanho das linhas geradas, quebrando a linha através da sua `largura`.  A primeira linha de cada entrada é recuada pelos espaços `recuo1`, assim como a segunda linha junto com as próximas, são recuadas pelos espaços `recuo2`. A `largura`, `recuo1`, e `recuo2` estão predefinidos para 76, 6 e 9 caracteres, respectivamente."

#. type: Plain text
#: en/git-shortlog.txt:91
#, priority:260
msgid "If width is `0` (zero) then indent the lines of the output without wrapping them."
msgstr "Caso a largura seja `0` (zero), recue as linhas da saída sem quebrá-las."

#. type: Plain text
#: en/git-shortlog.txt:100
#, priority:260
msgid "Show only commits in the specified revision range.  When no <revision-range> is specified, it defaults to `HEAD` (i.e. the whole history leading to the current commit).  `origin..HEAD` specifies all the commits reachable from the current commit (i.e. `HEAD`), but not from `origin`. For a complete list of ways to spell <revision-range>, see the \"Specifying Ranges\" section of linkgit:gitrevisions[7]."
msgstr "Exibe apenas os commits no intervalo definido das revisões.  Quando um <intervalo-da-revisão> não é definido, a predefinição retorna para `HEAD` (ou seja, todo o histórico que leva ao commit atual).  O `origin..HEAD` define todos os commits acessíveis a partir do commit atual (ou seja, `HEAD`), porém não a partir do `origin`. Para uma lista mais completa das maneiras de soletrar o <intervalo-da-revisão>, consulte a seção \"DEFININDO AS REVISÕES\" no linkgit:gitrevisions[7]."

#. type: Plain text
#: en/git-shortlog.txt:104
#, priority:260
msgid "Consider only commits that are enough to explain how the files that match the specified paths came to be."
msgstr "Considere apenas os commits que são suficientes para explicar como os arquivos que coincidam com determinados caminhos foram criados."

#. type: Plain text
#: en/git-shortlog.txt:119
#, priority:260
msgid "Note that if `git shortlog` is run outside of a repository (to process log contents on standard input), it will look for a `.mailmap` file in the current directory."
msgstr "Observe que caso o comando `git shortlog` seja executado fora de um repositório (para processar o conteúdo do log na entrada predefinida), ele irá procurar por um arquivo` .mailmap` no diretório atual."

#. type: Title =
#: en/git-show-branch.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-show-branch(1)"
msgstr "git-show-branch(1)"

#. type: Plain text
#: en/git-show-branch.txt:7
#, priority:100
msgid "git-show-branch - Show branches and their commits"
msgstr "git-show-branch - Exibe as ramificações e o seus commits"

#. type: Plain text
#: en/git-show-branch.txt:17
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"'git show-branch' [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
"\t\t[--current] [--color[=<when>] | --no-color] [--sparse]\n"
"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
"\t\t[--no-name | --sha1-name] [--topics]\n"
"\t\t[(<rev> | <glob>)...]\n"
"'git show-branch' (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]\n"
msgstr ""
"'git show-branch' [-a|--all] [-r|--remotes] [--topo-order | --date-order]\n"
"\t\t[--current] [--color[=<quando>] | --no-color] [--sparse]\n"
"\t\t[--more=<n> | --list | --independent | --merge-base]\n"
"\t\t[--no-name | --sha1-name] [--topics]\n"
"\t\t[(<rev> | <glob>)...]\n"
"'git show-branch' (-g|--reflog)[=<n>[,<base>]] [--list] [<ref>]\n"

#. type: Plain text
#: en/git-show-branch.txt:24
#, priority:100
msgid "Shows the commit ancestry graph starting from the commits named with <rev>s or <glob>s (or all refs under refs/heads and/or refs/tags) semi-visually."
msgstr "Exibe o grafo da ancestralidade do commit, começando pelos commits informados com <rev>s ou <glob>s (ou todos as refs em 'refs/heads' e/ou 'refs/tags') de forma semi-visual."

#. type: Plain text
#: en/git-show-branch.txt:26
#, priority:100
msgid "It cannot show more than 29 branches and commits at a time."
msgstr "Não pode exibir mais de 29 ramificações e commits por vez."

#. type: Plain text
#: en/git-show-branch.txt:29
#, priority:100
msgid "It uses `showbranch.default` multi-valued configuration items if no <rev> or <glob> is given on the command line."
msgstr "Ele utiliza itens de configuração `showbranch.default` com vários valores caso nenhuma <rev> ou <glob> seja utilizado na linha de comando."

#. type: Labeled list
#: en/git-show-branch.txt:33
#, no-wrap, priority:100
msgid "<rev>"
msgstr "<rev>"

#. type: Plain text
#: en/git-show-branch.txt:36
#, priority:100
msgid "Arbitrary extended SHA-1 expression (see linkgit:gitrevisions[7])  that typically names a branch head or a tag."
msgstr "A expressão arbitrária estendida do SHA-1 (consulte linkgit:gitrevisions[7]) que normalmente informa o cabeçalho de um ramo ou uma tag."

#. type: Labeled list
#: en/git-show-branch.txt:37
#, no-wrap, priority:100
msgid "<glob>"
msgstr "<glob>"

#. type: Plain text
#: en/git-show-branch.txt:42
#, priority:100
msgid "A glob pattern that matches branch or tag names under refs/.  For example, if you have many topic branches under refs/heads/topic, giving `topic/*` would show all of them."
msgstr "Um padrão \"glob\" que corresponda aos nomes dos ramos ou tags nos refs/.  Caso você tenha muitos tópicos nos ramos em 'refs/heads/topic', informando `topic/*` exibiria todas elas."

#. type: Plain text
#: en/git-show-branch.txt:46
#, priority:100
msgid "Show the remote-tracking branches."
msgstr "Exibe os ramos monitorados remotamente."

#. type: Plain text
#: en/git-show-branch.txt:50
#, priority:100
msgid "Show both remote-tracking branches and local branches."
msgstr "Exibe ambos os ramos monitorados remotamente e o ramos locais."

#. type: Labeled list
#: en/git-show-branch.txt:51
#, ignore-same, no-wrap, priority:100
msgid "--current"
msgstr "--current"

#. type: Plain text
#: en/git-show-branch.txt:55
#, priority:100
msgid "With this option, the command includes the current branch to the list of revs to be shown when it is not given on the command line."
msgstr "Com esta opção, o comando inclui o ramo atual na lista das \"revs\" que serão exibidas quando não for utilizada na linha de comando."

#. type: Labeled list
#: en/git-show-branch.txt:56 en/rev-list-options.txt:844
#, ignore-same, no-wrap, priority:260
msgid "--topo-order"
msgstr "--topo-order"

#. type: Plain text
#: en/git-show-branch.txt:61
#, priority:100
msgid "By default, the branches and their commits are shown in reverse chronological order.  This option makes them appear in topological order (i.e., descendant commits are shown before their parents)."
msgstr "É predefinido que os ramos e seus commits sejam exibidos em ordem cronológica inversa.  Esta opção faz com que eles apareçam em ordem topológica (ou seja, os commits descendentes são exibidos antes dos parentes)."

#. type: Labeled list
#: en/git-show-branch.txt:62 en/rev-list-options.txt:836
#, ignore-same, no-wrap, priority:260
msgid "--date-order"
msgstr "--date-order"

#. type: Plain text
#: en/git-show-branch.txt:66
#, priority:100
msgid "This option is similar to `--topo-order` in the sense that no parent comes before all of its children, but otherwise commits are ordered according to their commit date."
msgstr "Essa opção é semelhante à `--topo-order`, no sentido onde nenhum pai vem antes de todos os herdeiros, porém, caso contrário, os commits são ordenadas de acordo com a data do commits."

#. type: Plain text
#: en/git-show-branch.txt:71
#, priority:100
msgid "By default, the output omits merges that are reachable from only one tip being shown.  This option makes them visible."
msgstr "É predefinido que a saída omita as mesclagens que sejam acessíveis apenas do cume que está sendo exibido.  Esta opção os torna visíveis."

#. type: Labeled list
#: en/git-show-branch.txt:72
#, no-wrap, priority:100
msgid "--more=<n>"
msgstr "--more=<n>"

#. type: Plain text
#: en/git-show-branch.txt:79
#, priority:100
msgid "Usually the command stops output upon showing the commit that is the common ancestor of all the branches.  This flag tells the command to go <n> more common commits beyond that.  When <n> is negative, display only the <reference>s given, without showing the commit ancestry tree."
msgstr "Normalmente, o comando interrompe a saída durante a exibição do commit que for o ancestral comum de todos os ramos.  Esta opção diz ao comando para ir até <n> commits além disso.  Quando o valor de <n> for negativo, exiba apenas os `<reference>` informados, sem exibir ancestralidade da árvore do commit ."

#. type: Plain text
#: en/git-show-branch.txt:82
#, priority:100
msgid "Synonym to `--more=-1`"
msgstr "É um sinônimo para a opção `--more=-1`"

#. type: Plain text
#: en/git-show-branch.txt:89
#, priority:100
msgid "Instead of showing the commit list, determine possible merge bases for the specified commits. All merge bases will be contained in all specified commits. This is different from how linkgit:git-merge-base[1] handles the case of three or more commits."
msgstr "Em vez de exibir a lista do commit, determine as possíveis bases para mesclagem para determinados commits. Todas as mesclagens das bases estarão contidas em todos os commits informados. Isso é diferente de como o linkgit:git-merge-base[1] lida com o caso de três ou mais commits."

#. type: Plain text
#: en/git-show-branch.txt:93
#, priority:100
msgid "Among the <reference>s given, display only the ones that cannot be reached from any other <reference>."
msgstr "Entre as <referências> informadas, exiba apenas as que não podem ser alcançadas a partir de nenhuma outra <referência>."

#. type: Labeled list
#: en/git-show-branch.txt:94
#, ignore-same, no-wrap, priority:100
msgid "--no-name"
msgstr "--no-name"

#. type: Plain text
#: en/git-show-branch.txt:96
#, priority:100
msgid "Do not show naming strings for each commit."
msgstr "Não exiba o texto informado dos nomes para cada commit."

#. type: Labeled list
#: en/git-show-branch.txt:97
#, ignore-same, no-wrap, priority:100
msgid "--sha1-name"
msgstr "--sha1-name"

#. type: Plain text
#: en/git-show-branch.txt:102
#, priority:100
msgid "Instead of naming the commits using the path to reach them from heads (e.g. \"master~2\" to mean the grandparent of \"master\"), name them with the unique prefix of their object names."
msgstr "Em vez de nomear os commits utilizando o caminho para alcançá-los através dos cabeçalhos (\"master~2\" para significar o avô do \"master\" por exemplo), nomeie-os com o prefixo exclusivo dos nomes dos seus objetos."

#. type: Labeled list
#: en/git-show-branch.txt:103
#, ignore-same, no-wrap, priority:100
msgid "--topics"
msgstr "--topics"

#. type: Plain text
#: en/git-show-branch.txt:110
#, priority:100
msgid "Shows only commits that are NOT on the first branch given.  This helps track topic branches by hiding any commit that is already in the main line of development.  When given \"git show-branch --topics master topic1 topic2\", this will show the revisions given by \"git rev-list {caret}master topic1 topic2\""
msgstr "Exibe apenas os commits que NÃO estão no primeiro ramo informado.  Isso ajuda a monitorar o tópico das ramificações ocultando qualquer commit que já esteja na linha principal de desenvolvimento.  Quando o comando `git show-branch --topics master topic1 topic2` for utilizado, isso mostra as revisões fornecidas pelo comando `git rev-list {caret}master topic1 topic2`"

#. type: Labeled list
#: en/git-show-branch.txt:112
#, no-wrap, priority:100
msgid "--reflog[=<n>[,<base>]] [<ref>]"
msgstr "--reflog[=<n>[,<base>]] [<ref>]"

#. type: Plain text
#: en/git-show-branch.txt:118
#, priority:100
msgid "Shows <n> most recent ref-log entries for the given ref.  If <base> is given, <n> entries going back from that entry.  <base> can be specified as count or date.  When no explicit <ref> parameter is given, it defaults to the current branch (or `HEAD` if it is detached)."
msgstr "Mostra <n> lançamentos mais recentes do 'ref-log' para uma determinada \"ref\".  Caso a <base> seja utilizado, os <n> lançamentos retornam daquela lançamento.  A opção <base> pode ser definida como uma contagem ou data.  Quando nenhum parâmetro explícito <ref> é utilizado, a predefinição retorna para o ramo atual (ou `HEAD` caso esteja desanexado)."

#. type: Plain text
#: en/git-show-branch.txt:123
#, priority:100
msgid "Color the status sign (one of these: `*` `!` `+` `-`) of each commit corresponding to the branch it's in.  The value must be always (the default), never, or auto."
msgstr "Color the status sign (one of these: `*` `!` `+` `-`) of each commit corresponding to the branch it's in.  Always (sempre) é o valor predefinido, as outras opções são \"never\" ou \"auto\"."

#. type: Plain text
#: en/git-show-branch.txt:128
#, priority:100
msgid "Turn off colored output, even when the configuration file gives the default to color output.  Same as `--color=never`."
msgstr "Turn off colored output, even when the configuration file gives the default to color output.  O mesmo que `--color=never`."

#. type: Plain text
#: en/git-show-branch.txt:131
#, priority:100
msgid "Note that --more, --list, --independent and --merge-base options are mutually exclusive."
msgstr "Observe que as opções `--more`, `--list`, `--independent` e `--merge-base` são mutuamente exclusivas."

#. type: Plain text
#: en/git-show-branch.txt:139
#, priority:100
msgid "Given N <references>, the first N lines are the one-line description from their commit message.  The branch head that is pointed at by $GIT_DIR/HEAD is prefixed with an asterisk `*` character while other heads are prefixed with a `!` character."
msgstr "Dadas as \"N\" <referências>, as primeiras \"N\" linhas são a descrição de uma linha da mensagem do commit.  O cabeçalho do ramo apontada para `$GIT_DIR/HEAD` é prefixada com um caractere asterisco `*` enquanto outros cabeçalhos são prefixadas com um caractere `!`."

#. type: Plain text
#: en/git-show-branch.txt:146
#, priority:100
msgid "Following these N lines, one-line log for each commit is displayed, indented N places.  If a commit is on the I-th branch, the I-th indentation character shows a `+` sign; otherwise it shows a space.  Merge commits are denoted by a `-` sign.  Each commit shows a short name that can be used as an extended SHA-1 to name that commit."
msgstr "Após essas \"N\" linhas, um registro log com uma linha para cada commit é exibido, recuados em \"N\" lugares.  Caso um commit esteja no \"I-ésimo\" ramo, o \"I-ésimo\" caractere de indentação exibe um sinal de `+`; caso contrário, mostra um espaço.  Os commits mesclados são indicados através de um sinal `-`.  Cada commit exibe um nome abreviado que pode ser utilizado como um SHA-1 estendido para dar nome a este commit."

#. type: Plain text
#: en/git-show-branch.txt:149
#, priority:100
msgid "The following example shows three branches, \"master\", \"fixes\" and \"mhf\":"
msgstr "O exemplo a seguir mostra três ramificações, `master` (mestres), `fixes` (correções) e `mhf`:"

#. type: delimited block -
#: en/git-show-branch.txt:155
#, no-wrap, priority:100
msgid ""
"$ git show-branch master fixes mhf\n"
"* [master] Add 'git show-branch'.\n"
" ! [fixes] Introduce \"reset type\" flag to \"git reset\"\n"
"  ! [mhf] Allow \"+remote:local\" refspec to cause --force when fetching.\n"
"---\n"
msgstr ""
"$ git show-branch master fixes mhf\n"
"* [master] Add 'git show-branch'.\n"
" ! [fixes] Introduz a flag \"reset type\" para \"git reset\"\n"
"  ! [mhf] Permite que o refspec \"+remote:local\" cause --force quando for buscar.\n"
"---\n"

#. type: delimited block -
#: en/git-show-branch.txt:167
#, no-wrap, priority:100
msgid ""
"  + [mhf] Allow \"+remote:local\" refspec to cause --force when fetching.\n"
"  + [mhf~1] Use git-octopus when pulling more than one heads.\n"
" +  [fixes] Introduce \"reset type\" flag to \"git reset\"\n"
"  + [mhf~2] \"git fetch --force\".\n"
"  + [mhf~3] Use .git/remote/origin, not .git/branches/origin.\n"
"  + [mhf~4] Make \"git pull\" and \"git fetch\" default to origin\n"
"  + [mhf~5] Infamous 'octopus merge'\n"
"  + [mhf~6] Retire git-parse-remote.\n"
"  + [mhf~7] Multi-head fetch.\n"
"  + [mhf~8] Start adding the $GIT_DIR/remotes/ support.\n"
"*++ [master] Add 'git show-branch'.\n"
msgstr ""
"  + [mhf] Permite que o refspec \"+remote:local\" cause --force quando for buscar.\n"
"  + [mhf~1] Usa git-octopus quando for capturar mais de um cabeçalho.\n"
" +  [fixes] Introduz a sinalização \"reset type\" para \"git reset\"\n"
"  + [mhf~2] \"git fetch --force\".\n"
"  + [mhf~3] Utilize .git/remote/origin, e não .git/branches/origin.\n"
"  + [mhf~4] Faz um \"git pull\" e \"git fetch\" retornar para a predefinição no \"origin\"\n"
"  + [mhf~5] Infame 'octopus merge'\n"
"  + [mhf~6] Retira git-parse-remote.\n"
"  + [mhf~7] Multi-head fetch.\n"
"  + [mhf~8] Começa a adicionar a compatibilidade com o $GIT_DIR/remotes/.\n"
"*++ [master] Adiciona 'git show-branch'.\n"

#. type: Plain text
#: en/git-show-branch.txt:174
#, priority:100
msgid "These three branches all forked from a common commit, [master], whose commit message is \"Add \\'git show-branch'\".  The \"fixes\" branch adds one commit \"Introduce \"reset type\" flag to \"git reset\"\". The \"mhf\" branch adds many other commits.  The current branch is \"master\"."
msgstr "Todos estes três ramos foram bifurcados em um commit comum, [master], cuja mensagem do commit é \"Add \\'git show-branch'\".  O ramo \"fixes\" adiciona um commit \"Introduz a opção \"reset type\" para o comando \"git reset\"\". O ramo \"mhf\" adiciona muitos outros commits.  O ramo atual é \"master\"."

#. type: Plain text
#: en/git-show-branch.txt:182
#, priority:100
msgid "If you keep your primary branches immediately under `refs/heads`, and topic branches in subdirectories of it, having the following in the configuration file may help:"
msgstr "Caso mantenha os seus ramos principais imediatamente sob `refs/heads` e tópico dos ramos nos subdiretórios, ter o seguinte no arquivo de configuração pode ajudar:"

#. type: delimited block -
#: en/git-show-branch.txt:187
#, no-wrap, priority:100
msgid ""
"[showbranch]\n"
"\tdefault = --topo-order\n"
"\tdefault = heads/*\n"
msgstr ""
"[showbranch]\n"
"\tdefault = --topo-order\n"
"\tdefault = heads/*\n"

#. type: Plain text
#: en/git-show-branch.txt:193
#, priority:100
msgid "With this, `git show-branch` without extra parameters would show only the primary branches.  In addition, if you happen to be on your topic branch, it is shown as well."
msgstr "Com isso, o comando `git show branch` sem parâmetros extras exibiria apenas as principais ramificações.  Além disso, caso esteja no tópico do ramo, ele também será exibido."

#. type: delimited block -
#: en/git-show-branch.txt:196
#, no-wrap, priority:100
msgid "$ git show-branch --reflog=\"10,1 hour ago\" --list master\n"
msgstr "$ git show-branch --reflog=\"10,1 horas atrás\" --list master\n"

#. type: Plain text
#: en/git-show-branch.txt:201
#, priority:100
msgid "shows 10 reflog entries going back from the tip as of 1 hour ago.  Without `--list`, the output also shows how these tips are topologically related with each other."
msgstr "exibe 10 entradas \"reflogs\" retornando do cume há uma hora atrás.  Sem `--list`, a saída também exibe como estes cumes estão topologicamente relacionados entre si."

#. type: Title =
#: en/git-show-index.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-show-index(1)"
msgstr "git-show-index(1)"

#. type: Plain text
#: en/git-show-index.txt:7
#, priority:100
msgid "git-show-index - Show packed archive index"
msgstr "git-show-index - Exibe o índice do arquivo empacotado"

#. type: Plain text
#: en/git-show-index.txt:13
#, no-wrap, priority:100
msgid "'git show-index' [--object-format=<hash-algorithm>]\n"
msgstr "'git show-index' [--object-format=<algoritmo-hash>]\n"

#. type: Plain text
#: en/git-show-index.txt:22
#, priority:100
msgid "Read the `.idx` file for a Git packfile (created with linkgit:git-pack-objects[1] or linkgit:git-index-pack[1]) from the standard input, and dump its contents. The output consists of one object per line, with each line containing two or three space-separated columns:"
msgstr "Leia o arquivo `.idx` para um arquivo do pacote Git (criado com os objetos linkgit:git-pack[1] ou linkgit:git-index-pack[1]) da entrada padrão e despeje o seu conteúdo. A saída consiste em um objeto por linha, com cada linha contendo duas ou três colunas separadas por espaço:"

#. type: Plain text
#: en/git-show-index.txt:25
#, priority:100
msgid "the first column is the offset in bytes of the object within the corresponding packfile"
msgstr "a primeira coluna é a compensação em bytes do objeto no arquivo do pacote correspondente"

#. type: Plain text
#: en/git-show-index.txt:27
#, priority:100
msgid "the second column is the object id of the object"
msgstr "a segunda coluna é o ID do objeto"

#. type: Plain text
#: en/git-show-index.txt:30
#, priority:100
msgid "if the index version is 2 or higher, the third column contains the CRC32 of the object data"
msgstr "caso a versão do índice for 2 ou superior, a terceira coluna conterá o CRC32 dos dados do objeto"

#. type: Plain text
#: en/git-show-index.txt:34
#, priority:100
msgid "The objects are output in the order in which they are found in the index file, which should be (in a correctly constructed file) sorted by object id."
msgstr "Os objetos são gerados na ordem em que são encontrados no arquivo do índice, que deve ser (em um arquivo construído corretamente) classificado pela ID do objeto."

#. type: Plain text
#: en/git-show-index.txt:38
#, priority:100
msgid "Note that you can get more information on a packfile by calling linkgit:git-verify-pack[1]. However, as this command considers only the index file itself, it's both faster and more flexible."
msgstr "Observe que você pode obter mais informações sobre um arquivo do pacote chamando linkgit:git-verify-pack[1]. No entanto, como este comando considera apenas o próprio arquivo do índice, é mais rápido e flexível."

#. type: Plain text
#: en/git-show-index.txt:47
#, priority:100
msgid "Specify the given object format (hash algorithm) for the index file.  The valid values are 'sha1' and (if enabled) 'sha256'.  The default is the algorithm for the current repository (set by `extensions.objectFormat`), or 'sha1' if no value is set or outside a repository.."
msgstr "Defina o formato do objeto informado (algoritmo hash) para o arquivo do índice.  Os valores válidos são 'sha1' e (se ativado) 'sha256'.  A predefinição é o algoritmo para o repositório atual (definido através da opção `extensions.objectFormat`) ou 'sha1' caso nenhum valor seja definido dentro ou fora do repositório."

#. type: Title =
#: en/git-show-ref.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-show-ref(1)"
msgstr "git-show-ref(1)"

#. type: Plain text
#: en/git-show-ref.txt:7
#, priority:80
msgid "git-show-ref - List references in a local repository"
msgstr "git-show-ref - Liste as referências no repositório local"

#. type: Plain text
#: en/git-show-ref.txt:15
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git show-ref' [-q|--quiet] [--verify] [--head] [-d|--dereference]\n"
"\t     [-s|--hash[=<n>]] [--abbrev[=<n>]] [--tags]\n"
"\t     [--heads] [--] [<pattern>...]\n"
"'git show-ref' --exclude-existing[=<pattern>]\n"
msgstr ""
"'git show-ref' [-q|--quiet] [--verify] [--head] [-d|--dereference]\n"
"\t     [-s|--hash[=<n>]] [--abbrev[=<n>]] [--tags]\n"
"\t     [--heads] [--] [<padrão>...]\n"
"'git show-ref' --exclude-existing[=<padrão>]\n"

#. type: Plain text
#: en/git-show-ref.txt:23
#, priority:80
msgid "Displays references available in a local repository along with the associated commit IDs. Results can be filtered using a pattern and tags can be dereferenced into object IDs. Additionally, it can be used to test whether a particular ref exists."
msgstr "Exiba as referências disponíveis em um repositório local, juntamente com as IDs dos commits associados. Os resultados podem ser filtrados utilizando um padrão e as tags podem perder as suas referências nas IDs dos objetos. Além disso, pode ser utilizado para fazer um teste e ver se existe uma \"ref\" específica."

#. type: Plain text
#: en/git-show-ref.txt:25
#, priority:80
msgid "By default, shows the tags, heads, and remote refs."
msgstr "É predefinido que se exiba as tags, cabeçalhos e as referências remotas."

#. type: Plain text
#: en/git-show-ref.txt:29
#, priority:80
msgid "The --exclude-existing form is a filter that does the inverse. It reads refs from stdin, one ref per line, and shows those that don't exist in the local repository."
msgstr "A opção `--exclude-existing` é uma forma de filtro que faz o inverso. Ele lê as refs do 'stdin', uma \"ref\" por linha, e exibe aqueles que não existem no repositório local."

#. type: Plain text
#: en/git-show-ref.txt:32
#, priority:80
msgid "Use of this utility is encouraged in favor of directly accessing files under the `.git` directory."
msgstr "O uso deste utilitário é incentivado em favor do acesso direto aos arquivos no diretório `.git`."

#. type: Labeled list
#: en/git-show-ref.txt:36
#, ignore-same, no-wrap, priority:80
msgid "--head"
msgstr "--head"

#. type: Plain text
#: en/git-show-ref.txt:39
#, priority:80
msgid "Show the HEAD reference, even if it would normally be filtered out."
msgstr "Exibe a referência `HEAD`, mesmo que ela normalmente fosse filtrada."

#. type: Plain text
#: en/git-show-ref.txt:46
#, priority:80
msgid "Limit to \"refs/heads\" and \"refs/tags\", respectively.  These options are not mutually exclusive; when given both, references stored in \"refs/heads\" and \"refs/tags\" are displayed."
msgstr "Limite para \"refs/heads\" e \"refs/tags\", respectivamente.  Estas opções não são mutuamente exclusivas; quando utilizadas, as referências armazenadas em \"refs/heads\" e \"refs/tags\" são exibidas."

#. type: Labeled list
#: en/git-show-ref.txt:48
#, ignore-same, no-wrap, priority:80
msgid "--dereference"
msgstr "--dereference"

#. type: Plain text
#: en/git-show-ref.txt:52
#, priority:80
msgid "Dereference tags into object IDs as well. They will be shown with \"{caret}{}\" appended."
msgstr "Remova as referências das tags dos IDs do objeto também. Eles serão exibidos com um \"{caret}{}\" anexado."

#. type: Labeled list
#: en/git-show-ref.txt:54
#, no-wrap, priority:80
msgid "--hash[=<n>]"
msgstr "--hash[=<n>]"

#. type: Plain text
#: en/git-show-ref.txt:58
#, priority:80
msgid "Only show the SHA-1 hash, not the reference name. When combined with --dereference the dereferenced tag will still be shown after the SHA-1."
msgstr "Exiba apenas o hash SHA-1, não o nome da referência. Quando combinada com `--dereference`, a tag da perda da referência ainda será exibida após o SHA-1."

#. type: Plain text
#: en/git-show-ref.txt:64
#, priority:80
msgid "Enable stricter reference checking by requiring an exact ref path.  Aside from returning an error code of 1, it will also print an error message if `--quiet` was not specified."
msgstr "Ative a verificação de referência mais rigorosa, exigindo um caminho de referência exato.  Além de retornar um código de erro 1, ele também imprimirá uma mensagem de erro caso a opção `--quiet` não tiver sido utilizada."

#. type: Plain text
#: en/git-show-ref.txt:69
#, priority:80
msgid "Abbreviate the object name.  When using `--hash`, you do not have to say `--hash --abbrev`; `--hash=n` would do."
msgstr "Abrevie o nome do objeto.  Ao utilizar `--hash`, não é necessário a opção `--hash --abbrev`; a opção `--hash=n` já faz."

#. type: Plain text
#: en/git-show-ref.txt:75
#, priority:80
msgid "Do not print any results to stdout. When combined with `--verify` this can be used to silently check if a reference exists."
msgstr "Não imprima nenhum resultado no stdout. Quando combinado com a opção `--verify`, isso pode ser utilizado para verificar silenciosamente a existência de uma referência."

#. type: Labeled list
#: en/git-show-ref.txt:76
#, no-wrap, priority:80
msgid "--exclude-existing[=<pattern>]"
msgstr "--exclude-existing[=<padrão>]"

#. type: Plain text
#: en/git-show-ref.txt:81
#, priority:80
msgid "Make 'git show-ref' act as a filter that reads refs from stdin of the form \"`^(?:<anything>\\s)?<refname>(?:\\^{})?$`\" and performs the following actions on each:"
msgstr "Faça com que o comando 'git show-ref' atue como um filtro que leia as refs do stdin no formato \"`^(?:<anything>\\s)?<refname>(?:\\^{})?$`\" e execute o seguintes ações em cada:"

#. type: Plain text
#: en/git-show-ref.txt:82
#, priority:80
msgid "strip \"{caret}{}\" at the end of line if any;"
msgstr "tira o \"{caret}{}\" no final da linha, caso haja;"

#. type: Plain text
#: en/git-show-ref.txt:83
#, priority:80
msgid "ignore if pattern is provided and does not head-match refname;"
msgstr "ignore caso a predefinição seja informada e não corresponder ao cabeçalho a \"refname\";"

#. type: Plain text
#: en/git-show-ref.txt:84
#, priority:80
msgid "warn if refname is not a well-formed refname and skip;"
msgstr "avise caso o \"refname\" não seja um \"refname\" bem formado e ignore;"

#. type: Plain text
#: en/git-show-ref.txt:85
#, priority:80
msgid "ignore if refname is a ref that exists in the local repository;"
msgstr "ignore caso o \"refname\" é uma \"ref\" que exista no repositório local;"

#. type: Plain text
#: en/git-show-ref.txt:86
#, priority:80
msgid "otherwise output the line."
msgstr "caso contrário, imprima a linha."

#. type: Plain text
#: en/git-show-ref.txt:95
#, priority:80
msgid "Show references matching one or more patterns. Patterns are matched from the end of the full name, and only complete parts are matched, e.g.  'master' matches 'refs/heads/master', 'refs/remotes/origin/master', 'refs/tags/jedi/master' but not 'refs/heads/mymaster' or 'refs/remotes/master/jedi'."
msgstr "Exiba as referências coincidentes a um ou mais padrões. Os padrões são coincididos a partir do final do nome completo e apenas as peças completas são coincididas, por exemplo, 'master' coincide com 'refs/heads/master', 'refs/remotes/origin/master', 'refs/tags/jedi/master' mas não com 'refs/heads/mymaster' ou 'refs/remotes/master/jedi'."

#. type: Plain text
#: en/git-show-ref.txt:100
#, priority:80
msgid "The output is in the format: '<SHA-1 ID>' '<space>' '<reference name>'."
msgstr "A saída está no formato: '<SHA-1 ID>' '<espaço>' '<nome da referência>'."

#. type: delimited block -
#: en/git-show-ref.txt:111
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"$ git show-ref --head --dereference\n"
"832e76a9899f560a90ffd62ae2ce83bbeff58f54 HEAD\n"
"832e76a9899f560a90ffd62ae2ce83bbeff58f54 refs/heads/master\n"
"832e76a9899f560a90ffd62ae2ce83bbeff58f54 refs/heads/origin\n"
"3521017556c5de4159da4615a39fa4d5d2c279b5 refs/tags/v0.99.9c\n"
"6ddc0964034342519a87fe013781abf31c6db6ad refs/tags/v0.99.9c^{}\n"
"055e4ae3ae6eb344cbabf2a5256a49ea66040131 refs/tags/v1.0rc4\n"
"423325a2d24638ddcc82ce47be5e40be550f4507 refs/tags/v1.0rc4^{}\n"
"...\n"
msgstr ""
"$ git show-ref --head --dereference\n"
"832e76a9899f560a90ffd62ae2ce83bbeff58f54 HEAD\n"
"832e76a9899f560a90ffd62ae2ce83bbeff58f54 refs/heads/master\n"
"832e76a9899f560a90ffd62ae2ce83bbeff58f54 refs/heads/origin\n"
"3521017556c5de4159da4615a39fa4d5d2c279b5 refs/tags/v0.99.9c\n"
"6ddc0964034342519a87fe013781abf31c6db6ad refs/tags/v0.99.9c^{}\n"
"055e4ae3ae6eb344cbabf2a5256a49ea66040131 refs/tags/v1.0rc4\n"
"423325a2d24638ddcc82ce47be5e40be550f4507 refs/tags/v1.0rc4^{}\n"
"...\n"

#. type: Plain text
#: en/git-show-ref.txt:114
#, priority:80
msgid "When using --hash (and not --dereference) the output format is: '<SHA-1 ID>'"
msgstr "Ao utilizar o `--hash` (e não `--dereference`), o formato de saída é: '<ID do SHA-1>'"

#. type: delimited block -
#: en/git-show-ref.txt:121
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"$ git show-ref --heads --hash\n"
"2e3ba0114a1f52b47df29743d6915d056be13278\n"
"185008ae97960c8d551adcd9e23565194651b5d1\n"
"03adf42c988195b50e1a1935ba5fcbc39b2b029b\n"
"...\n"
msgstr ""
"$ git show-ref --heads --hash\n"
"2e3ba0114a1f52b47df29743d6915d056be13278\n"
"185008ae97960c8d551adcd9e23565194651b5d1\n"
"03adf42c988195b50e1a1935ba5fcbc39b2b029b\n"
"...\n"

#. type: Plain text
#: en/git-show-ref.txt:129
#, priority:80
msgid "To show all references called \"master\", whether tags or heads or anything else, and regardless of how deep in the reference naming hierarchy they are, use:"
msgstr "Para exibir todas as referências chamadas \"master\", sejam tags, cabeçalhos ou qualquer outro, e independentemente da profundidade na hierarquia dos nomes de referência, utilize:"

#. type: delimited block -
#: en/git-show-ref.txt:132
#, no-wrap, priority:80
msgid "\tgit show-ref master\n"
msgstr "\tgit show-ref master\n"

#. type: Plain text
#: en/git-show-ref.txt:136
#, priority:80
msgid "This will show \"refs/heads/master\" but also \"refs/remote/other-repo/master\", if such references exists."
msgstr "Exibirá \"refs/heads/master\" e também \"refs/remote/other-repo/master\", caso tais referências existam."

#. type: Plain text
#: en/git-show-ref.txt:138
#, priority:80
msgid "When using the `--verify` flag, the command requires an exact path:"
msgstr "Quando utilizar a opção `--verify`, o comando precisa de um caminho exato:"

#. type: delimited block -
#: en/git-show-ref.txt:141
#, no-wrap, priority:80
msgid "\tgit show-ref --verify refs/heads/master\n"
msgstr "\tgit show-ref --verify refs/heads/master\n"

#. type: Plain text
#: en/git-show-ref.txt:144
#, priority:80
msgid "will only match the exact branch called \"master\"."
msgstr "coincidirá apenas ao ramo exato chamado \"master\"."

#. type: Plain text
#: en/git-show-ref.txt:147
#, priority:80
msgid "If nothing matches, 'git show-ref' will return an error code of 1, and in the case of verification, it will show an error message."
msgstr "Caso não haja coincidência com nada, o comando 'git show-ref' retornará um código de erro '1' e no caso de uma verificação, exibirá uma mensagem de erro."

#. type: Plain text
#: en/git-show-ref.txt:150
#, priority:80
msgid "For scripting, you can ask it to be quiet with the \"--quiet\" flag, which allows you to do things like"
msgstr "Para os scripts, é possível pedir para que fiquem em silêncio com a opção `--quiet`, que permite fazer coisas como"

#. type: delimited block -
#: en/git-show-ref.txt:154
#, no-wrap, priority:80
msgid ""
"\tgit show-ref --quiet --verify -- \"refs/heads/$headname\" ||\n"
"\t\techo \"$headname is not a valid branch\"\n"
msgstr ""
"\tgit show-ref --quiet --verify -- \"refs/heads/$headname\" ||\n"
"\t\techo \"O $headname não é um ramo válido\"\n"

#. type: Plain text
#: en/git-show-ref.txt:159
#, priority:80
msgid "to check whether a particular branch exists or not (notice how we don't actually want to show any results, and we want to use the full refname for it in order to not trigger the problem with ambiguous partial matches)."
msgstr "para verificar se um ramo específico existe ou não (observe como na verdade não queremos exibir os resultados e queremos usar o nome completo da \"ref\" para ele, a fim de não desencadear o problema com coincidências parciais e ambíguas)."

#. type: Plain text
#: en/git-show-ref.txt:163
#, priority:80
msgid "To show only tags, or only proper branch heads, use \"--tags\" and/or \"--heads\" respectively (using both means that it shows tags and heads, but not other random references under the refs/ subdirectory)."
msgstr "Para exibir adequadamente apenas as tags, ou apenas os cabeçalhos do ramo, utilize \"--tags\" e/ou \"--heads\" respectivamente (usando ambos significa que ele exibirá as tags e as heads, porém não as outras referências aleatórias no subdiretório 'refs/')."

#. type: Plain text
#: en/git-show-ref.txt:166
#, priority:80
msgid "To do automatic tag object dereferencing, use the \"-d\" or \"--dereference\" flag, so you can do"
msgstr "Para fazer a perda da referência automática da tag dos objetos, utilize a opção `-d` ou `--dereference` para que seja possível executar"

#. type: delimited block -
#: en/git-show-ref.txt:169
#, no-wrap, priority:80
msgid "\tgit show-ref --tags --dereference\n"
msgstr "\tgit show-ref --tags --dereference\n"

#. type: Plain text
#: en/git-show-ref.txt:172
#, priority:80
msgid "to get a listing of all tags together with what they dereference."
msgstr "para obter uma lista de todas as \"tags\" junto com a perda da referência feita."

#. type: Plain text
#: en/git-show-ref.txt:176
#, priority:80
msgid "`.git/refs/*`, `.git/packed-refs`"
msgstr "`.git/refs/*`, `.git/packed-refs`"

#. type: Plain text
#: en/git-show-ref.txt:183
#, ignore-same, priority:80
msgid "linkgit:git-for-each-ref[1], linkgit:git-ls-remote[1], linkgit:git-update-ref[1], linkgit:gitrepository-layout[5]"
msgstr "linkgit:git-for-each-ref[1], linkgit:git-ls-remote[1], linkgit:git-update-ref[1], linkgit:gitrepository-layout[5]"

#. type: Title =
#: en/git-show.txt:2
#, ignore-same, no-wrap, priority:240
msgid "git-show(1)"
msgstr "git-show(1)"

#. type: Plain text
#: en/git-show.txt:7
#, priority:240
msgid "git-show - Show various types of objects"
msgstr "git-show - Exibe vários tipos de objetos"

#. type: Plain text
#: en/git-show.txt:13
#, ignore-ellipsis, no-wrap, priority:240
msgid "'git show' [<options>] [<object>...]\n"
msgstr "'git show' [<opções>] [<objeto>...]\n"

#. type: Plain text
#: en/git-show.txt:17
#, priority:240
msgid "Shows one or more objects (blobs, trees, tags and commits)."
msgstr "Exibe um ou mais objetos (bolhas, árvores, tags e commits)."

#. type: Plain text
#: en/git-show.txt:21
#, priority:240
msgid "For commits it shows the log message and textual diff. It also presents the merge commit in a special format as produced by 'git diff-tree --cc'."
msgstr "Para commits, exibe a mensagem do registro log e a diferença textual. Ele também apresenta o commit de mesclagem em um formato especial, produzido por 'git diff-tree --cc'."

#. type: Plain text
#: en/git-show.txt:23
#, priority:240
msgid "For tags, it shows the tag message and the referenced objects."
msgstr "Para tags, ele exibe a mensagem da tag e os objetos referenciados."

#. type: Plain text
#: en/git-show.txt:26
#, priority:240
msgid "For trees, it shows the names (equivalent to 'git ls-tree' with --name-only)."
msgstr "Para árvores, ele exibe os nomes (equivalente a `git ls-tree` com `--name-only`)."

#. type: Plain text
#: en/git-show.txt:28
#, priority:240
msgid "For plain blobs, it shows the plain contents."
msgstr "Para bolhas simples, exibe o conteúdo simples."

#. type: Plain text
#: en/git-show.txt:31
#, priority:240
msgid "The command takes options applicable to the 'git diff-tree' command to control how the changes the commit introduces are shown."
msgstr "O comando aceita as opções aplicáveis ao comando `git diff-tree` para controlar como as modificações feitas pelo commit são exibidas."

#. type: Plain text
#: en/git-show.txt:33
#, priority:240
msgid "This manual page describes only the most frequently used options."
msgstr "Esta página do manual descreve apenas as opções utilizadas com mais frequência."

#. type: Labeled list
#: en/git-show.txt:37
#, ignore-ellipsis, no-wrap, priority:240
msgid "<object>..."
msgstr "<objeto>..."

#. type: Plain text
#: en/git-show.txt:41
#, priority:240
msgid "The names of objects to show (defaults to 'HEAD').  For a more complete list of ways to spell object names, see \"SPECIFYING REVISIONS\" section in linkgit:gitrevisions[7]."
msgstr "Os nomes dos objetos a serem exibidos (a predefinição retorna para 'HEAD').  Para obter uma lista mais completa de maneiras de soletrar os nomes dos objetos, consulte a seção \"DEFININDO AS REVISÕES\" em linkgit:gitrevisions[7]."

#. type: Plain text
#: en/git-show.txt:52
#, priority:240
msgid "The options below can be used to change the way `git show` generates diff output."
msgstr "As opções abaixo podem ser usadas para alterar a maneira como o comando `git show` gera o diff."

#. type: Labeled list
#: en/git-show.txt:63
#, no-wrap, priority:240
msgid "`git show v1.0.0`"
msgstr "`git show v1.0.0`"

#. type: Plain text
#: en/git-show.txt:66
#, priority:240
msgid "Shows the tag `v1.0.0`, along with the object the tags points at."
msgstr "Exibe a tag `v1.0.0` junto com o objeto que as tags apontarem."

#. type: Labeled list
#: en/git-show.txt:67
#, no-wrap, priority:240
msgid "`git show v1.0.0^{tree}`"
msgstr "`git show v1.0.0^{tree}`"

#. type: Plain text
#: en/git-show.txt:69
#, priority:240
msgid "Shows the tree pointed to by the tag `v1.0.0`."
msgstr "Exibe a árvore apontada pela tag `v1.0.0`."

#. type: Labeled list
#: en/git-show.txt:70
#, no-wrap, priority:240
msgid "`git show -s --format=%s v1.0.0^{commit}`"
msgstr "`git show -s --format=%s v1.0.0^{commit}`"

#. type: Plain text
#: en/git-show.txt:73
#, priority:240
msgid "Shows the subject of the commit pointed to by the tag `v1.0.0`."
msgstr "Exiba o assunto do commit apontado pela tag `v1.0.0`."

#. type: Labeled list
#: en/git-show.txt:74
#, no-wrap, priority:240
msgid "`git show next~10:Documentation/README`"
msgstr "`git show next~10:Documentation/README`"

#. type: Plain text
#: en/git-show.txt:78
#, priority:240
msgid "Shows the contents of the file `Documentation/README` as they were current in the 10th last commit of the branch `next`."
msgstr "Exibe o conteúdo do arquivo `Documentation/README` como eles estavam atualmente no décimo último commit do ramo `next`."

#. type: Labeled list
#: en/git-show.txt:79
#, no-wrap, priority:240
msgid "`git show master:Makefile master:t/Makefile`"
msgstr "`git show master:Makefile master:t/Makefile`"

#. type: Plain text
#: en/git-show.txt:82
#, priority:240
msgid "Concatenates the contents of said Makefiles in the head of the branch `master`."
msgstr "Concatena o conteúdo dos referidos Makefiles no `HEAD` do ramo `master`."

#. type: Title =
#: en/git-sh-setup.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-sh-setup(1)"
msgstr "git-sh-setup(1)"

#. type: Plain text
#: en/git-sh-setup.txt:7
#, priority:100
msgid "git-sh-setup - Common Git shell script setup code"
msgstr "git-sh-setup - Código de configuração do shell script comum ao Git"

#. type: Plain text
#: en/git-sh-setup.txt:12
#, no-wrap, priority:100
msgid "'. \"$(git --exec-path)/git-sh-setup\"'\n"
msgstr "'. \"$(git --exec-path)/git-sh-setup\"'\n"

#. type: Plain text
#: en/git-sh-setup.txt:23
#, priority:100
msgid "The 'git sh-setup' scriptlet is designed to be sourced (using `.`) by other shell scripts to set up some variables pointing at the normal Git directories and a few helper shell functions."
msgstr "O scriptlet 'git sh-setup' foi projetado para ser originado (usando `.`) através dos outros scripts shell para configurar algumas variáveis apontando para os diretórios normais do Git e algumas funções auxiliares do shell."

#. type: Plain text
#: en/git-sh-setup.txt:29
#, priority:100
msgid "Before sourcing it, your script should set up a few variables; `USAGE` (and `LONG_USAGE`, if any) is used to define message given by `usage()` shell function.  `SUBDIRECTORY_OK` can be set if the script can run from a subdirectory of the working tree (some commands do not)."
msgstr "Antes de procurá-lo, o seu script deve configurar algumas variáveis; `USAGE` (e `LONG_USAGE`, caso haja) é utilizado para definir a mensagem informada através da função shell `use ()`.  O `SUBDIRECTORY_OK` pode ser definido caso o script possa ser executado a partir de um subdiretório da árvore de trabalho (alguns comandos não podem)."

#. type: Plain text
#: en/git-sh-setup.txt:32
#, priority:100
msgid "The scriptlet sets `GIT_DIR` and `GIT_OBJECT_DIRECTORY` shell variables, but does *not* export them to the environment."
msgstr "O scriptlet define o `GIT_DIR` e as variáveis shell `GIT_OBJECT_DIRECTORY`, porém *não* as exporta no ambiente."

#. type: Labeled list
#: en/git-sh-setup.txt:36
#, ignore-same, no-wrap, priority:100
msgid "die"
msgstr "die"

#. type: Plain text
#: en/git-sh-setup.txt:39
#, priority:100
msgid "exit after emitting the supplied error message to the standard error stream."
msgstr "encerra após emitir a mensagem de erro informada no fluxo de erros predefinido."

#. type: Labeled list
#: en/git-sh-setup.txt:40
#, ignore-same, no-wrap, priority:100
msgid "usage"
msgstr "usage"

#. type: Plain text
#: en/git-sh-setup.txt:42
#, priority:100
msgid "die with the usage message."
msgstr "encerre com a mensagem do consumo."

#. type: Labeled list
#: en/git-sh-setup.txt:43
#, ignore-same, no-wrap, priority:100
msgid "set_reflog_action"
msgstr "set_reflog_action"

#. type: Plain text
#: en/git-sh-setup.txt:49
#, priority:100
msgid "Set `GIT_REFLOG_ACTION` environment to a given string (typically the name of the program) unless it is already set.  Whenever the script runs a `git` command that updates refs, a reflog entry is created using the value of this string to leave the record of what command updated the ref."
msgstr "Defina a variável de ambiente `GIT_REFLOG_ACTION` para um determinado texto (tipicamente o nome do programa) a menos que já esteja definido.  Sempre que o script executa um comando `git` que atualiza as refs, um lançamento no reflog é criad usando o valor deste texto para deixar o registro onde comando atualizou a \"ref\"."

#. type: Labeled list
#: en/git-sh-setup.txt:50
#, ignore-same, no-wrap, priority:100
msgid "git_editor"
msgstr "git_editor"

#. type: Plain text
#: en/git-sh-setup.txt:54
#, priority:100
msgid "runs an editor of user's choice (GIT_EDITOR, core.editor, VISUAL or EDITOR) on a given file, but error out if no editor is specified and the terminal is dumb."
msgstr "executa um editor selecionado pelo usuário (GIT_EDITOR, core.editor, VISUAL ou EDITOR) em um determinado arquivo, mas com erro caso nenhum editor seja definido e o terminal for burro."

#. type: Labeled list
#: en/git-sh-setup.txt:55
#, no-wrap, priority:100
msgid "is_bare_repository"
msgstr "is_bare_repository"

#. type: Plain text
#: en/git-sh-setup.txt:59
#, priority:100
msgid "outputs `true` or `false` to the standard output stream to indicate if the repository is a bare repository (i.e. without an associated working tree)."
msgstr "gera `true` ou `false` no fluxo da saída padrão para indicar caso o repositório seja um repositório simples (ou seja, sem uma associação a qualquer árvore de trabalho)."

#. type: Labeled list
#: en/git-sh-setup.txt:60
#, ignore-same, no-wrap, priority:100
msgid "cd_to_toplevel"
msgstr "cd_to_toplevel"

#. type: Plain text
#: en/git-sh-setup.txt:62
#, priority:100
msgid "runs chdir to the toplevel of the working tree."
msgstr "executa o 'chdir' no nível mais alto da árvore de trabalho."

#. type: Labeled list
#: en/git-sh-setup.txt:63
#, ignore-same, no-wrap, priority:100
msgid "require_work_tree"
msgstr "require_work_tree"

#. type: Plain text
#: en/git-sh-setup.txt:66
#, priority:100
msgid "checks if the current directory is within the working tree of the repository, and otherwise dies."
msgstr "verifica se o diretório atual está dentro da árvore de trabalho do repositório, ou de outra forma, encerre."

#. type: Labeled list
#: en/git-sh-setup.txt:67
#, ignore-same, no-wrap, priority:100
msgid "require_work_tree_exists"
msgstr "require_work_tree_exists"

#. type: Plain text
#: en/git-sh-setup.txt:72
#, priority:100
msgid "checks if the working tree associated with the repository exists, and otherwise dies.  Often done before calling cd_to_toplevel, which is impossible to do if there is no working tree."
msgstr "verifica se a árvore de trabalho associada ao repositório existe, ou de outra forma, encerre.  Geralmente é feito antes de chamar o `cd_to_toplevel`, o que é impossível de fazer caso não haja uma árvore de trabalho em funcionamento."

#. type: Labeled list
#: en/git-sh-setup.txt:73
#, no-wrap, priority:100
msgid "require_clean_work_tree <action> [<hint>]"
msgstr "require_clean_work_tree <ação> [<dica>]"

#. type: Plain text
#: en/git-sh-setup.txt:78
#, priority:100
msgid "checks that the working tree and index associated with the repository have no uncommitted changes to tracked files.  Otherwise it emits an error message of the form `Cannot <action>: <reason>. <hint>`, and dies.  Example:"
msgstr "verifica se a arvore de trabalho e o índice associados ao repositório possuam alterações nos commits que não foram feitos  dos arquivos monitorados. Caso contrário, emita uma mensagem de erro no formato `Cannot <ação>: <motivo>. <dica>`, e encerre.  Exemplo:"

#. type: delimited block -
#: en/git-sh-setup.txt:81
#, no-wrap, priority:100
msgid "require_clean_work_tree rebase \"Please commit or stash them.\"\n"
msgstr "require_clean_work_tree rebase \"Faça o commit ou armazene-os.\"\n"

#. type: Labeled list
#: en/git-sh-setup.txt:83
#, ignore-same, no-wrap, priority:100
msgid "get_author_ident_from_commit"
msgstr "get_author_ident_from_commit"

#. type: Plain text
#: en/git-sh-setup.txt:86
#, priority:100
msgid "outputs code for use with eval to set the GIT_AUTHOR_NAME, GIT_AUTHOR_EMAIL and GIT_AUTHOR_DATE variables for a given commit."
msgstr "gera o código para uso com o 'eval' para definir as variáveis `GIT_AUTHOR_NAME`, `GIT_AUTHOR_EMAIL` e `GIT_AUTHOR_DATE` para um determinado commit."

#. type: Labeled list
#: en/git-sh-setup.txt:87
#, ignore-same, no-wrap, priority:100
msgid "create_virtual_base"
msgstr "create_virtual_base"

#. type: Plain text
#: en/git-sh-setup.txt:92
#, priority:100
msgid "modifies the first file so only lines in common with the second file remain. If there is insufficient common material, then the first file is left empty. The result is suitable as a virtual base input for a 3-way merge."
msgstr "modifica o primeiro arquivo para que apenas as linhas em comum com o segundo arquivo permaneçam. Caso haja um material comum insuficiente, o primeiro arquivo será deixado vazio. O resultado é adequado como uma entrada da base virtual para mesclagem de três vias."

#. type: Title =
#: en/git-stage.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-stage(1)"
msgstr "git-stage(1)"

#. type: Plain text
#: en/git-stage.txt:7
#, priority:100
msgid "git-stage - Add file contents to the staging area"
msgstr "git-stage - Adicione o conteúdo do arquivo na área de preparação"

#. type: Plain text
#: en/git-stage.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git stage' <arg>...\n"
msgstr "'git stage' <arg>...\n"

#. type: Plain text
#: en/git-stage.txt:20
#, priority:100
msgid "This is a synonym for linkgit:git-add[1].  Please refer to the documentation of that command."
msgstr "É um sinônimo para linkgit:git-add[1].  Para referências deste comando, favor consultar a documentação."

#. type: Title =
#: en/git-stash.txt:2
#, ignore-same, no-wrap, priority:240
msgid "git-stash(1)"
msgstr "git-stash(1)"

#. type: Plain text
#: en/git-stash.txt:7
#, priority:240
msgid "git-stash - Stash the changes in a dirty working directory away"
msgstr "git-stash - Guarda as alterações em um outro diretório de trabalho"

#. type: Plain text
#: en/git-stash.txt:23
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"'git stash' list [<log-options>]\n"
"'git stash' show [-u|--include-untracked|--only-untracked] [<diff-options>] [<stash>]\n"
"'git stash' drop [-q|--quiet] [<stash>]\n"
"'git stash' ( pop | apply ) [--index] [-q|--quiet] [<stash>]\n"
"'git stash' branch <branchname> [<stash>]\n"
"'git stash' [push [-p|--patch] [-S|--staged] [-k|--[no-]keep-index] [-q|--quiet]\n"
"\t     [-u|--include-untracked] [-a|--all] [-m|--message <message>]\n"
"\t     [--pathspec-from-file=<file> [--pathspec-file-nul]]\n"
"\t     [--] [<pathspec>...]]\n"
"'git stash' clear\n"
"'git stash' create [<message>]\n"
"'git stash' store [-m|--message <message>] [-q|--quiet] <commit>\n"
msgstr ""
"'git stash' list [<opções-do-log>]\n"
"'git stash' show [-u|--include-untracked|--only-untracked] [<opções-do-diff] [<stash>]\n"
"'git stash' drop [-q|--quiet] [<stash>]\n"
"'git stash' ( pop | apply ) [--index] [-q|--quiet] [<stash>]\n"
"'git stash' branch <nome-do-ramo> [<stash>]\n"
"'git stash' [push [-p|--patch] [-S|--staged] [-k|--[no-]keep-index] [-q|--quiet]\n"
"\t     [-u|--include-untracked] [-a|--all] [-m|--message <mensagem>]\n"
"\t     [--pathspec-from-file=<arquivo> [--pathspec-file-nul]]\n"
"\t     [--] [<pathspec>...]]\n"
"'git stash' clear\n"
"'git stash' create [<mensagem>]\n"
"'git stash' store [-m|--message <mensagem>] [-q|--quiet] <commit>\n"

#. type: Plain text
#: en/git-stash.txt:31
#, priority:240
msgid "Use `git stash` when you want to record the current state of the working directory and the index, but want to go back to a clean working directory.  The command saves your local modifications away and reverts the working directory to match the `HEAD` commit."
msgstr "Use o comando `git stash` quando quiser gravar a condição atual do diretório ativo e do índice, porém queira voltar para um diretório funcional limpo.  O comando salva as suas alterações locais e reverte o diretório de trabalho para coincidir ao commit `HEAD`."

#. type: Plain text
#: en/git-stash.txt:39
#, ignore-ellipsis, priority:240
msgid "The modifications stashed away by this command can be listed with `git stash list`, inspected with `git stash show`, and restored (potentially on top of a different commit) with `git stash apply`.  Calling `git stash` without any arguments is equivalent to `git stash push`.  A stash is by default listed as \"WIP on 'branchname' ...\", but you can give a more descriptive message on the command line when you create one."
msgstr "As alterações armazenadas por este comando podem ser listadas com o comando `git stash list`, inspecionadas com o comando `git stash show` e restauradas (potencialmente em cima de um commit diferente) com o comando `git stash apply`.  Chamar o comando `git stash` sem argumentos é o mesmo que executar o comando `git stash push`.  É predefinido que um \"stash\" seja listado como \"WIP no 'nomedoramo' ...\", porém você pode fornecer uma mensagem mais descritiva na linha de comando durante a criação de um."

#. type: Plain text
#: en/git-stash.txt:46
#, priority:240
msgid "The latest stash you created is stored in `refs/stash`; older stashes are found in the reflog of this reference and can be named using the usual reflog syntax (e.g. `stash@{0}` is the most recently created stash, `stash@{1}` is the one before it, `stash@{2.hours.ago}` is also possible). Stashes may also be referenced by specifying just the stash index (e.g. the integer `n` is equivalent to `stash@{n}`)."
msgstr "O último \"stash\" que você criou é armazenado em `refs/stash`; os \"stash\" mais antigos são encontrados no \"reflog\" desta referência e podem ser nomeados usando a sintaxe usual do \"reflog\" (por exemplo, `stash@{0}` é o \"stash\" criado mais recentemente, o `stash@{1}` é o anterior, o `stash@{2.hours.ago}` também é possível). As pilhas \"stash\" também podem ser referenciadas definindo apenas o índice \"stash\" (por exemplo, o número inteiro `n` é o equivalente a um `stash@{n}`)."

#. type: Labeled list
#: en/git-stash.txt:50
#, ignore-ellipsis, no-wrap, priority:240
msgid "push [-p|--patch] [-S|--staged] [-k|--[no-]keep-index] [-u|--include-untracked] [-a|--all] [-q|--quiet] [-m|--message <message>] [--pathspec-from-file=<file> [--pathspec-file-nul]] [--] [<pathspec>...]"
msgstr "push [-p|--patch] [-S|--staged] [-k|--[no-]keep-index] [-u|--include-untracked] [-a|--all] [-q|--quiet] [-m|--message <mensagem>] [--pathspec-from-file=<arquivo> [--pathspec-file-nul]] [--] [<pathspec>...]"

#. type: Plain text
#: en/git-stash.txt:56
#, priority:240
msgid "Save your local modifications to a new 'stash entry' and roll them back to HEAD (in the working tree and in the index).  The <message> part is optional and gives the description along with the stashed state."
msgstr "Salva as suas alterações locais em um nova entrada 'stash' e reverta-as para `HEAD` (na árvore de trabalho e no índice).  A parte da <mensagem> é opcional e dá a descrição junto com a condição do empilhamento."

#. type: Plain text
#: en/git-stash.txt:62
#, priority:240
msgid "For quickly making a snapshot, you can omit \"push\".  In this mode, non-option arguments are not allowed to prevent a misspelled subcommand from making an unwanted stash entry.  The two exceptions to this are `stash -p` which acts as alias for `stash push -p` and pathspec elements, which are allowed after a double hyphen `--` for disambiguation."
msgstr "Para fazer um instantâneo de forma rápida, você pode omitir o \"push\".  Neste modo, os argumentos não opcionais não são permitidos, visam impedir que um subcomando com erro de ortografia faça uma entrada na pilha indesejada.  As duas exceções são `stash -p`, que atua como um alias para o `stash push -p` e os elementos pathspec, que são permitidos após um hífen duplo `--` para desambiguação."

#. type: Labeled list
#: en/git-stash.txt:63
#, no-wrap, priority:240
msgid "save [-p|--patch] [-S|--staged] [-k|--[no-]keep-index] [-u|--include-untracked] [-a|--all] [-q|--quiet] [<message>]"
msgstr "save [-p|--patch] [-S|--staged] [-k|--[no-]keep-index] [-u|--include-untracked] [-a|--all] [-q|--quiet] [<mensagem>]"

#. type: Plain text
#: en/git-stash.txt:69
#, priority:240
msgid "This option is deprecated in favour of 'git stash push'.  It differs from \"stash push\" in that it cannot take pathspec.  Instead, all non-option arguments are concatenated to form the stash message."
msgstr "Esta opção já está obsoleta em favor da opção 'git stash push'.  Difere do \"stash push\", pois não pode lidar com o pathspec.  Em vez disso, todos os argumentos não opcionais são concatenados para formar a mensagem \"stash\"."

#. type: Labeled list
#: en/git-stash.txt:70
#, no-wrap, priority:240
msgid "list [<log-options>]"
msgstr "list [<opções-do-registro-log>]"

#. type: Plain text
#: en/git-stash.txt:77
#, priority:240
msgid "List the stash entries that you currently have.  Each 'stash entry' is listed with its name (e.g. `stash@{0}` is the latest entry, `stash@{1}` is the one before, etc.), the name of the branch that was current when the entry was made, and a short description of the commit the entry was based on."
msgstr "Lista as entradas que estão armazenadas ('stash') que você possui atualmente.  Cada 'entrada stash' é listada com o seu nome (por exemplo, `stash@{0}` é o lançamento mais recente, `stash@{1}` é o lançamento anterior, etc.), o nome do ramo que estava atual quando o foi feito um lançamento e uma breve descrição do commit onde a entrada teve base."

#. type: delimited block -
#: en/git-stash.txt:81
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"stash@{0}: WIP on submit: 6ebd0e2... Update git-stash documentation\n"
"stash@{1}: On master: 9cc0589... Add git-stash\n"
msgstr ""
"stash@{0}: WIP on submit: 6ebd0e2... Update git-stash documentation\n"
"stash@{1}: On master: 9cc0589... Add git-stash\n"

#. type: Plain text
#: en/git-stash.txt:85
#, priority:240
msgid "The command takes options applicable to the 'git log' command to control what is shown and how. See linkgit:git-log[1]."
msgstr "O comando aceita as opções aplicáveis ao comando 'git log' para controlar o que é exibido e como. See linkgit:git-log[1]."

#. type: Labeled list
#: en/git-stash.txt:86
#, no-wrap, priority:240
msgid "show [-u|--include-untracked|--only-untracked] [<diff-options>] [<stash>]"
msgstr "show [-u|--include-untracked|--only-untracked] [<opções-do-diff>] [<stash>]"

#. type: Plain text
#: en/git-stash.txt:98
#, priority:240
msgid "Show the changes recorded in the stash entry as a diff between the stashed contents and the commit back when the stash entry was first created.  By default, the command shows the diffstat, but it will accept any format known to 'git diff' (e.g., `git stash show -p stash@{1}` to view the second most recent entry in patch form).  If no `<diff-option>` is provided, the default behavior will be given by the `stash.showStat`, and `stash.showPatch` config variables. You can also use `stash.showIncludeUntracked` to set whether `--include-untracked` is enabled by default."
msgstr "Exiba as alterações registradas na entrada 'stash' como uma diferença entre o conteúdo oculto e o commit quando a entrada stash for criada.  É predefinido que o comando exiba o diffstat, porém aceite qualquer formato informado pelo comando 'git diff' (por exemplo, `git stash show -p stash@{1}` para exibir a segunda entrada mais recente em formato patch).  Caso nenhuma opção `<opção-diff>` seja informada, o comportamento padrão será dado pelas variáveis de configuração `stash.showStat` e `stash.showPatch`. Também é possível utilizar a variável `stash.showIncludeUntracked' para definir se a opção `--include-untracked` será ativada por padrão."

#. type: Labeled list
#: en/git-stash.txt:99
#, no-wrap, priority:240
msgid "pop [--index] [-q|--quiet] [<stash>]"
msgstr "pop [--index] [-q|--quiet] [<stash>]"

#. type: Plain text
#: en/git-stash.txt:105
#, priority:240
msgid "Remove a single stashed state from the stash list and apply it on top of the current working tree state, i.e., do the inverse operation of `git stash push`. The working directory must match the index."
msgstr "Remova a única condição do empilhamento da lista e aplique-o sobre a condição atual da árvore de trabalho, ou seja, faça a operação inversa do comando `git stash push`. O diretório de trabalho deve corresponder ao índice. O diretório de trabalho deve coincidir com o índice."

#. type: Plain text
#: en/git-stash.txt:109
#, priority:240
msgid "Applying the state can fail with conflicts; in this case, it is not removed from the stash list. You need to resolve the conflicts by hand and call `git stash drop` manually afterwards."
msgstr "A aplicação da condição pode falhar com conflitos; neste caso, ele não é removido da lista 'stash'. É necessário resolver os conflitos manualmente e chamar o comando `git stash drop` manualmente depois."

#. type: Labeled list
#: en/git-stash.txt:110
#, no-wrap, priority:240
msgid "apply [--index] [-q|--quiet] [<stash>]"
msgstr "apply [--index] [-q|--quiet] [<stash>]"

#. type: Plain text
#: en/git-stash.txt:115
#, priority:240
msgid "Like `pop`, but do not remove the state from the stash list. Unlike `pop`, `<stash>` may be any commit that looks like a commit created by `stash push` or `stash create`."
msgstr "Como `pop ', porém não remova a condição da lista de estoque 'stash'. Diferente de `pop`, `<stash>` pode ser qualquer commit que se pareça com um commit criado através do comando `stash push` ou `stash create`."

#. type: Labeled list
#: en/git-stash.txt:116
#, no-wrap, priority:240
msgid "branch <branchname> [<stash>]"
msgstr "branch <nome-do-ramo> [<stash>]"

#. type: Plain text
#: en/git-stash.txt:123
#, priority:240
msgid "Creates and checks out a new branch named `<branchname>` starting from the commit at which the `<stash>` was originally created, applies the changes recorded in `<stash>` to the new working tree and index.  If that succeeds, and `<stash>` is a reference of the form `stash@{<revision>}`, it then drops the `<stash>`."
msgstr "Cria e efetua a averiguação de um novo ramo chamado `<nome-do-ramo>` iniciando a partir do commit onde o `<stash>` foi criado originalmente, aplica as alterações registradas do `<stash>` na nova árvore de trabalho e no índice.  Caso seja bem-sucedido, e `<stash>` for uma referência do formulário `stash@{<revision>}`, ele liberará o `<stash>`."

#. type: Plain text
#: en/git-stash.txt:129
#, priority:240
msgid "This is useful if the branch on which you ran `git stash push` has changed enough that `git stash apply` fails due to conflicts. Since the stash entry is applied on top of the commit that was HEAD at the time `git stash` was run, it restores the originally stashed state with no conflicts."
msgstr "É útil caso o ramo onde você executou o `git stash push` mude o suficiente para que o `git stash apply` falhe devido aos conflitos. Como a entrada que está acumulada \"stash\" é aplicada no topo do commit que era o `HEAD` no momento onde o `git stash` foi executado, ela restaura a condição originalmente armazenada e sem os conflitos."

#. type: Labeled list
#: en/git-stash.txt:130
#, no-wrap, priority:240
msgid "clear"
msgstr "clear"

#. type: Plain text
#: en/git-stash.txt:134
#, priority:240
msgid "Remove all the stash entries. Note that those entries will then be subject to pruning, and may be impossible to recover (see 'Examples' below for a possible strategy)."
msgstr "Remova todos os lançamentos que estiverem armazenados. Observe que estas entradas estarão sujeitas a remoção e podem ser impossíveis de serem recuperadas (consulte 'Exemplos' abaixo para uma possível estratégia)."

#. type: Labeled list
#: en/git-stash.txt:135
#, no-wrap, priority:240
msgid "drop [-q|--quiet] [<stash>]"
msgstr "drop [-q|--quiet] [<stash>]"

#. type: Plain text
#: en/git-stash.txt:138
#, priority:240
msgid "Remove a single stash entry from the list of stash entries."
msgstr "Remova uma única entrada \"stash\" da lista das entradas \"stash\"."

#. type: Labeled list
#: en/git-stash.txt:139 en/git-update-ref.txt:108
#, ignore-same, no-wrap, priority:240
msgid "create"
msgstr "create"

#. type: Plain text
#: en/git-stash.txt:146
#, priority:240
msgid "Create a stash entry (which is a regular commit object) and return its object name, without storing it anywhere in the ref namespace.  This is intended to be useful for scripts.  It is probably not the command you want to use; see \"push\" above."
msgstr "Crie uma entrada \"stash\" (que é um objeto commit comum) e retorne seu nome de objeto, sem armazená-la em qualquer outro lugar no espaço de nomes \"ref\".  Isso tem a intenção de ser útil para scripts.  Provavelmente não é o comando que você deseja usar; veja o \"push\" acima."

#. type: Labeled list
#: en/git-stash.txt:147
#, no-wrap, priority:240
msgid "store"
msgstr "store"

#. type: Plain text
#: en/git-stash.txt:153
#, priority:240
msgid "Store a given stash created via 'git stash create' (which is a dangling merge commit) in the stash ref, updating the stash reflog.  This is intended to be useful for scripts.  It is probably not the command you want to use; see \"push\" above."
msgstr "Armazene um determinado \"stash\" criado através do comando 'git stash create' (que é um commit pendente de mesclagem) na \"ref\" determinada, atualizando o \"reflog\" do \"stash\".  Isso tem a intenção de ser útil para scripts.  Provavelmente não é o comando que você deseja usar; veja o \"push\" acima."

#. type: Plain text
#: en/git-stash.txt:159 en/git-stash.txt:190 en/git-stash.txt:196 en/git-stash.txt:211
#, priority:240
msgid "This option is only valid for `push` and `save` commands."
msgstr "Esta opção só é válida para os comandos `push` e `save`."

#. type: Plain text
#: en/git-stash.txt:162
#, priority:240
msgid "All ignored and untracked files are also stashed and then cleaned up with `git clean`."
msgstr "Todos os arquivos ignorados e não monitorados também são armazenados em cache e limpos com o comando `git clean`."

#. type: Labeled list
#: en/git-stash.txt:164
#, ignore-same, no-wrap, priority:240
msgid "--include-untracked"
msgstr "--include-untracked"

#. type: Labeled list
#: en/git-stash.txt:165
#, ignore-same, no-wrap, priority:240
msgid "--no-include-untracked"
msgstr "--no-include-untracked"

#. type: Plain text
#: en/git-stash.txt:169
#, priority:240
msgid "When used with the `push` and `save` commands, all untracked files are also stashed and then cleaned up with `git clean`."
msgstr "Quando usado em conjunto com os comandos `push` e `save`, todos os arquivos não monitorados também são armazenados em cache e limpos com o comando `git clean`."

#. type: Plain text
#: en/git-stash.txt:172
#, priority:240
msgid "When used with the `show` command, show the untracked files in the stash entry as part of the diff."
msgstr "Quando usado com o comando `show`, mostra os arquivos não rastreados na entrada acumulada como parte do diff."

#. type: Labeled list
#: en/git-stash.txt:173
#, ignore-same, no-wrap, priority:240
msgid "--only-untracked"
msgstr "--only-untracked"

#. type: Plain text
#: en/git-stash.txt:175
#, priority:240
msgid "This option is only valid for the `show` command."
msgstr "Esta opção só é válida para o comando `show`."

#. type: Plain text
#: en/git-stash.txt:177
#, priority:240
msgid "Show only the untracked files in the stash entry as part of the diff."
msgstr "Mostra apenas os arquivos não rastreados na entrada do stash como parte do diff."

#. type: Plain text
#: en/git-stash.txt:180
#, priority:240
msgid "This option is only valid for `pop` and `apply` commands."
msgstr "Esta opção só é válida para os comandos `pop` e `apply`."

#. type: Plain text
#: en/git-stash.txt:185
#, priority:240
msgid "Tries to reinstate not only the working tree's changes, but also the index's ones. However, this can fail, when you have conflicts (which are stored in the index, where you therefore can no longer apply the changes as they were originally)."
msgstr "Tenta restabelecer não apenas as alterações da árvore de trabalho, mas também as do índice. No entanto, isso pode falhar quando há conflitos (que são armazenados no índice e portanto, não é mais possível aplicar as alterações como eram originalmente)."

#. type: Labeled list
#: en/git-stash.txt:187
#, ignore-same, no-wrap, priority:240
msgid "--keep-index"
msgstr "--keep-index"

#. type: Labeled list
#: en/git-stash.txt:188
#, ignore-same, no-wrap, priority:240
msgid "--no-keep-index"
msgstr "--no-keep-index"

#. type: Plain text
#: en/git-stash.txt:192
#, priority:240
msgid "All changes already added to the index are left intact."
msgstr "Todas as alterações que já foram adicionadas ao índice não são alteradas."

#. type: Plain text
#: en/git-stash.txt:204
#, priority:240
msgid "Interactively select hunks from the diff between HEAD and the working tree to be stashed.  The stash entry is constructed such that its index state is the same as the index state of your repository, and its worktree contains only the changes you selected interactively.  The selected changes are then rolled back from your worktree. See the ``Interactive Mode'' section of linkgit:git-add[1] to learn how to operate the `--patch` mode."
msgstr "Selecione a diferença entre os blocos interativamente entre HEAD e a árvore de trabalho a serem armazenados.  A entrada \"stash\" é construída de maneira que a condição geral do índice seja a mesma que a condição geral do índice do seu repositório e a sua árvore de trabalho contenha apenas as alterações que você selecionou de forma interativa.  As alterações selecionadas serão revertidas a partir da sua árvore de trabalho. Consulte a seção ``Modo Interativo'' do linkgit:git-add[1] para aprender como operar o modo `--patch`."

#. type: Plain text
#: en/git-stash.txt:207
#, priority:240
msgid "The `--patch` option implies `--keep-index`.  You can use `--no-keep-index` to override this."
msgstr "A opção `--patch` implica no uso da opção `--keep-index`.  Você pode usar a `--no-keep-index` para substituir isso."

#. type: Plain text
#: en/git-stash.txt:215
#, priority:240
msgid "Stash only the changes that are currently staged. This is similar to basic `git commit` except the state is committed to the stash instead of current branch."
msgstr "Armazene apenas as alterações que estão sendo preparadas atualmente. Isto é similar ao comando `git commit` básico, exceto que o estado do commit é feito na pilha armazenada em vez do ramo atual."

#. type: Plain text
#: en/git-stash.txt:217
#, priority:240
msgid "The `--patch` option has priority over this one."
msgstr "A opção `--patch` tem prioridade sobre esta."

#. type: Plain text
#: en/git-stash.txt:220 en/git-stash.txt:230 en/git-stash.txt:244 en/git-stash.txt:249
#, priority:240
msgid "This option is only valid for `push` command."
msgstr "Esta opção só é válida para o comando `push`."

#. type: Plain text
#: en/git-stash.txt:239
#, priority:240
msgid "This option is only valid for `apply`, `drop`, `pop`, `push`, `save`, `store` commands."
msgstr "Esta opção só é válida para os comandos `apply`, `drop`, `pop`, `push`, `save` e `store`."

#. type: Plain text
#: en/git-stash.txt:246
#, priority:240
msgid "Separates pathspec from options for disambiguation purposes."
msgstr "Separa o 'pathspec' das opções para fins de desambiguação."

#. type: Plain text
#: en/git-stash.txt:254
#, priority:240
msgid "The new stash entry records the modified states only for the files that match the pathspec.  The index entries and working tree files are then rolled back to the state in HEAD only for these files, too, leaving files that do not match the pathspec intact."
msgstr "A nova entrada stash registra as condições alteradas apenas para os arquivos que coincidam com o 'pathspec'.  As entradas de índice e os arquivos da árvore de trabalho são revertidos para a condição no `HEAD` apenas para estes arquivos, deixando também os arquivos que não correspondem ao 'pathspec' intactos."

#. type: Labeled list
#: en/git-stash.txt:257
#, no-wrap, priority:240
msgid "<stash>"
msgstr "<stash>"

#. type: Plain text
#: en/git-stash.txt:260
#, priority:240
msgid "This option is only valid for `apply`, `branch`, `drop`, `pop`, `show` commands."
msgstr "Esta opção só é válida para os comandos `apply`, `branch`, `drop`, `pop` e `show`."

#. type: Plain text
#: en/git-stash.txt:263
#, priority:240
msgid "A reference of the form `stash@{<revision>}`. When no `<stash>` is given, the latest stash is assumed (that is, `stash@{0}`)."
msgstr "Uma referência do formulário `stash@{<revisão>}`. Quando nenhum `<stash>` é informado, o último \"stash\" é assumido (ou seja, `stash@{0}`)."

#. type: Plain text
#: en/git-stash.txt:272
#, priority:240
msgid "A stash entry is represented as a commit whose tree records the state of the working directory, and its first parent is the commit at `HEAD` when the entry was created.  The tree of the second parent records the state of the index when the entry is made, and it is made a child of the `HEAD` commit.  The ancestry graph looks like this:"
msgstr "Um lançamento na 'stash' é representado como um commit cuja árvore registra a condição do diretório de trabalho e a sua primeira origem é o commit no `HEAD` quando a entrada foi criada.  A árvore da segunda origem registra a condição do índice quando o lançamento é feito, e é feito um herdeiro do commit `HEAD`.  O grafo de ascendência fica assim:"

#. type: Plain text
#: en/git-stash.txt:276
#, no-wrap, priority:240
msgid ""
"            .----W\n"
"           /    /\n"
"     -----H----I\n"
msgstr ""
"            .----W\n"
"           /    /\n"
"     -----H----I\n"

#. type: Plain text
#: en/git-stash.txt:280
#, priority:240
msgid "where `H` is the `HEAD` commit, `I` is a commit that records the state of the index, and `W` is a commit that records the state of the working tree."
msgstr "onde `H` é o commit `HEAD`, `I` é um commit que registra a condição do índice e `W` é um commit que registra a condição da árvore de trabalho."

#. type: Labeled list
#: en/git-stash.txt:285
#, no-wrap, priority:240
msgid "Pulling into a dirty tree"
msgstr "Obtendo de um diretório sujo"

#. type: Plain text
#: en/git-stash.txt:291
#, priority:240
msgid "When you are in the middle of something, you learn that there are upstream changes that are possibly relevant to what you are doing.  When your local changes do not conflict with the changes in the upstream, a simple `git pull` will let you move forward."
msgstr "Quando você está no meio de alguma coisa, aprende que há alterações upstream que são possivelmente relevantes para o que você está fazendo.  Quando as suas alterações locais não entrarem em conflito com as alterações na \"upstream\", um simples `git pull` permitirá que você avance."

#. type: Plain text
#: en/git-stash.txt:296
#, priority:240
msgid "However, there are cases in which your local changes do conflict with the upstream changes, and `git pull` refuses to overwrite your changes.  In such a case, you can stash your changes away, perform a pull, and then unstash, like this:"
msgstr "No entanto, há casos onde as suas alterações locais entram em conflito com as alterações na upstream, e o `git pull` se recusa a sobrescrever as suas alterações.  Nesse caso, é possível ocultar as suas alterações, executar um 'pull' e remover do armazenamento da seguinte maneira:"

#. type: delimited block -
#: en/git-stash.txt:304
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"$ git pull\n"
" ...\n"
"file foobar not up to date, cannot merge.\n"
"$ git stash\n"
"$ git pull\n"
"$ git stash pop\n"
msgstr ""
"$ git pull\n"
" ...\n"
"file foobar not up to date, cannot merge.\n"
"$ git stash\n"
"$ git pull\n"
"$ git stash pop\n"

#. type: Plain text
#: en/git-stash.txt:312
#, priority:240
msgid "When you are in the middle of something, your boss comes in and demands that you fix something immediately.  Traditionally, you would make a commit to a temporary branch to store your changes away, and return to your original branch to make the emergency fix, like this:"
msgstr "Quando você está no meio de alguma coisa, seu chefe entra e exige que você conserte algo imediatamente.  Tradicionalmente, você faria um commit em um ramo temporário para armazenar as suas alterações e retornava ao ramo original para fazer a correção de emergência, assim:"

#. type: delimited block -
#: en/git-stash.txt:323
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"# ... hack hack hack ...\n"
"$ git switch -c my_wip\n"
"$ git commit -a -m \"WIP\"\n"
"$ git switch master\n"
"$ edit emergency fix\n"
"$ git commit -a -m \"Fix in a hurry\"\n"
"$ git switch my_wip\n"
"$ git reset --soft HEAD^\n"
"# ... continue hacking ...\n"
msgstr ""
"# ... hack hack hack ...\n"
"$ git switch -c my_wip\n"
"$ git commit -a -m \"WIP\"\n"
"$ git switch master\n"
"$ edit emergency fix\n"
"$ git commit -a -m \"Arruma na pressa\"\n"
"$ git switch my_wip\n"
"$ git reset --soft HEAD^\n"
"# ... continue a hackear ...\n"

#. type: Plain text
#: en/git-stash.txt:326
#, priority:240
msgid "You can use 'git stash' to simplify the above, like this:"
msgstr "Você pode utilizar o comando 'git stash' para simplificar o exemplo acima:"

#. type: delimited block -
#: en/git-stash.txt:334
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"# ... hack hack hack ...\n"
"$ git stash\n"
"$ edit emergency fix\n"
"$ git commit -a -m \"Fix in a hurry\"\n"
"$ git stash pop\n"
"# ... continue hacking ...\n"
msgstr ""
"# ... hack hack hack ...\n"
"$ git stash\n"
"$ edit emergency fix\n"
"$ git commit -a -m \"Arrumando na correria\"\n"
"$ git stash pop\n"
"# ... continue a hackear ...\n"

#. type: Labeled list
#: en/git-stash.txt:336
#, no-wrap, priority:240
msgid "Testing partial commits"
msgstr "Testando commits parciais"

#. type: Plain text
#: en/git-stash.txt:341
#, priority:240
msgid "You can use `git stash push --keep-index` when you want to make two or more commits out of the changes in the work tree, and you want to test each change before committing:"
msgstr "Você pode utilizar o comando `git stash push --keep-index` quando quiser fazer dois ou mais commits das alterações na árvore de trabalho e queira testar cada uma das alterações antes de fazer o commit:"

#. type: delimited block -
#: en/git-stash.txt:352
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"# ... hack hack hack ...\n"
"$ git add --patch foo            # add just first part to the index\n"
"$ git stash push --keep-index    # save all other changes to the stash\n"
"$ edit/build/test first part\n"
"$ git commit -m 'First part'     # commit fully tested change\n"
"$ git stash pop                  # prepare to work on all other changes\n"
"# ... repeat above five steps until one commit remains ...\n"
"$ edit/build/test remaining parts\n"
"$ git commit foo -m 'Remaining parts'\n"
msgstr ""
"# ... hack hack hack ...\n"
"$ git add --patch foo            # adiciona apenas a primeira parte ao índice\n"
"$ git stash push --keep-index    # armazene todas as outras alterações\n"
"$ edit/build/test first part\n"
"$ git commit -m 'First part'     # faça o commit completo de todas as modificações testadas\n"
"$ git stash pop                  # prepare para trabalhar em todas as outras modificações\n"
"# ... repita os cinco passos acima até que sobre apenas um commit ...\n"
"$ edit/build/test remaining parts\n"
"$ git commit foo -m 'Partes resultantes'\n"

#. type: Labeled list
#: en/git-stash.txt:354
#, no-wrap, priority:240
msgid "Saving unrelated changes for future use"
msgstr "Salvando as alterações não relacionadas para utilização futura"

#. type: Plain text
#: en/git-stash.txt:361
#, priority:240
msgid "When you are in the middle of massive changes and you find some unrelated issue that you don't want to forget to fix, you can do the change(s), stage them, and use `git stash push --staged` to stash them out for future use. This is similar to committing the staged changes, only the commit ends-up being in the stash and not on the current branch."
msgstr "Quando estiver no meio de grandes alterações e encontre algum problema não relacionado que você não queira deixar de corrigir, você pode fazer as alterações, organizá-las e usar o comando `git stash push --staged` deixando guardado para uso posterior. Isso se assemelha ao fazer o commit das alterações acumuladas, apenas o commit acaba ficando armazenado e não no ramo atual."

#. type: delimited block -
#: en/git-stash.txt:370
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"# ... hack hack hack ...\n"
"$ git add --patch foo           # add unrelated changes to the index\n"
"$ git stash push --staged       # save these changes to the stash\n"
"# ... hack hack hack, finish curent changes ...\n"
"$ git commit -m 'Massive'       # commit fully tested changes\n"
"$ git switch fixup-branch       # switch to another branch\n"
"$ git stash pop                 # to finish work on the saved changes\n"
msgstr ""
"# ... hack hack hack ...\n"
"$ git add --patch foo           # adiciona alterações não relacionadas ao índice\n"
"$ git stash push --staged       # salva estas alterações nos arquivos que foram armazenados\n"
"# ... hack hack hack, concluí as alterações atuais ...\n"
"$ git commit -m 'Massive'       # faz o commit das alterações que foram totalmente testados\n"
"$ git switch fixup-branch       # alterna para outro ramo\n"
"$ git stash pop                 # para concluir o trabalho nas alterações que foram salvas\n"

#. type: Labeled list
#: en/git-stash.txt:372
#, no-wrap, priority:240
msgid "Recovering stash entries that were cleared/dropped erroneously"
msgstr "Recuperando entradas \"stash\" que foram limpas/eliminadas erroneamente"

#. type: Plain text
#: en/git-stash.txt:378
#, priority:240
msgid "If you mistakenly drop or clear stash entries, they cannot be recovered through the normal safety mechanisms.  However, you can try the following incantation to get a list of stash entries that are still in your repository, but not reachable any more:"
msgstr "Caso você derrube ou limpe as entradas \"stash\" por engano, elas não poderão mais ser recuperadas pelos mecanismos de segurança normais.  No entanto, é possível tentar o seguinte encantamento para obter uma lista das entradas stash que ainda estão em seu repositório, mas que não são mais acessíveis:"

#. type: delimited block -
#: en/git-stash.txt:383
#, no-wrap, priority:240
msgid ""
"git fsck --unreachable |\n"
"grep commit | cut -d\\  -f3 |\n"
"xargs git log --merges --no-walk --grep=WIP\n"
msgstr ""
"git fsck --unreachable |\n"
"grep commit | cut -d\\  -f3 |\n"
"xargs git log --merges --no-walk --grep=WIP\n"

#. type: Plain text
#: en/git-stash.txt:400
#, ignore-same, priority:240
msgid "linkgit:git-checkout[1], linkgit:git-commit[1], linkgit:git-reflog[1], linkgit:git-reset[1], linkgit:git-switch[1]"
msgstr "linkgit:git-checkout[1], linkgit:git-commit[1], linkgit:git-reflog[1], linkgit:git-reset[1], linkgit:git-switch[1]"

#. type: Title =
#: en/git-status.txt:2
#, ignore-same, no-wrap, priority:280
msgid "git-status(1)"
msgstr "git-status(1)"

#. type: Plain text
#: en/git-status.txt:7
#, priority:280
msgid "git-status - Show the working tree status"
msgstr "git-status - Exibe o a condição da árvore de trabalho"

#. type: Plain text
#: en/git-status.txt:13
#, ignore-ellipsis, no-wrap, priority:280
msgid "'git status' [<options>...] [--] [<pathspec>...]\n"
msgstr "'git status' [<opções>...] [--] [<pathspec>...]\n"

#. type: Plain text
#: en/git-status.txt:23
#, priority:280
msgid "Displays paths that have differences between the index file and the current HEAD commit, paths that have differences between the working tree and the index file, and paths in the working tree that are not tracked by Git (and are not ignored by linkgit:gitignore[5]). The first are what you _would_ commit by running `git commit`; the second and third are what you _could_ commit by running 'git add' before running `git commit`."
msgstr "Exibe os caminhos que têm diferenças entre o arquivo do índice e o commit atual no `HEAD`, os caminhos que têm diferenças entre a árvore de trabalho e o arquivo do índice, os caminhos na árvore de trabalho que não são rastreados pelo Git (e não foram ignorados pelo linkgit:gitignore[5]). O primeiro é o que você _confirmaria_ executando o comando `git commit`; o segundo e o terceiro são os que você pode confirmar, executando o comando `git add` antes de executar o comando `git commit`."

#. type: Plain text
#: en/git-status.txt:30
#, priority:280
msgid "Give the output in the short-format."
msgstr "Dar a saída em um formato curto."

#. type: Labeled list
#: en/git-status.txt:35
#, ignore-same, no-wrap, priority:280
msgid "--show-stash"
msgstr "--show-stash"

#. type: Plain text
#: en/git-status.txt:37
#, priority:280
msgid "Show the number of entries currently stashed away."
msgstr "Exibe a quantidade das entradas que estão atualmente acumuladas."

#. type: Labeled list
#: en/git-status.txt:38
#, no-wrap, priority:280
msgid "--porcelain[=<version>]"
msgstr "--porcelain[=<versão>]"

#. type: Plain text
#: en/git-status.txt:43
#, priority:280
msgid "Give the output in an easy-to-parse format for scripts.  This is similar to the short output, but will remain stable across Git versions and regardless of user configuration. See below for details."
msgstr "Forneça a saída em um formato fácil de analisar para os scripts.  Isso é semelhante à saída curta, mas permanecerá estável nas versões do Git e independentemente da configuração do usuário. Veja abaixo os detalhes."

#. type: Plain text
#: en/git-status.txt:46
#, priority:280
msgid "The version parameter is used to specify the format version.  This is optional and defaults to the original version 'v1' format."
msgstr "O parâmetro da versão é utilizado para definir a versão do formato.  Este é opcional e retorna para a predefinição do formato da versão original 'v1'."

#. type: Plain text
#: en/git-status.txt:49
#, priority:280
msgid "Give the output in the long-format. This is the default."
msgstr "Gere um formato longo na saída. Esta é a predefinição."

#. type: Plain text
#: en/git-status.txt:57
#, priority:280
msgid "In addition to the names of files that have been changed, also show the textual changes that are staged to be committed (i.e., like the output of `git diff --cached`). If `-v` is specified twice, then also show the changes in the working tree that have not yet been staged (i.e., like the output of `git diff`)."
msgstr "Além dos nomes dos arquivos que foram alterados, exiba também as alterações textuais que são preparadas para o commit (ou seja, como a saída do `git diff --cached`). Caso a opção `-v` seja utilizada duas vezes, também exiba as alterações na árvore de trabalho que ainda não foram preparadas (ou seja, como a saída do comando `git diff`)."

#. type: Plain text
#: en/git-status.txt:66
#, priority:280
msgid "The mode parameter is used to specify the handling of untracked files.  It is optional: it defaults to 'all', and if specified, it must be stuck to the option (e.g. `-uno`, but not `-u no`)."
msgstr "O parâmetro `modo` é utilizado para definir a manipulação dos arquivos não rastreados.  É opcional: a predefinição retorna para 'all' e caso seja definido, deve estar junto a opção (por exemplo, `-uno`, porém não `-u no`)."

#. type: Plain text
#: en/git-status.txt:70
#, no-wrap, priority:280
msgid "'no'     - Show no untracked files.\n"
msgstr "'no'     - Não exibe qualquer arquivo que não tenham sido rastreados.\n"

#. type: Plain text
#: en/git-status.txt:71
#, no-wrap, priority:280
msgid "'normal' - Shows untracked files and directories.\n"
msgstr "'normal' - Exibe todos os arquivo e diretórios que não foram rastreados.\n"

#. type: Plain text
#: en/git-status.txt:82
#, priority:280
msgid "When `-u` option is not used, untracked files and directories are shown (i.e. the same as specifying `normal`), to help you avoid forgetting to add newly created files.  Because it takes extra work to find untracked files in the filesystem, this mode may take some time in a large working tree.  Consider enabling untracked cache and split index if supported (see `git update-index --untracked-cache` and `git update-index --split-index`), Otherwise you can use `no` to have `git status` return more quickly without showing untracked files."
msgstr "Quando a opção `-u` não é utilizada, os arquivos e diretórios não rastreados são exibidos (ou seja, o mesmo que usar `normal`), para ajudar a evitar o esquecimento de adicionar os arquivos recém-criados.  Como é necessário um trabalho extra para encontrar os arquivos que não foram rastreados no sistema de arquivos, esse modo pode levar algum tempo em uma grande árvore de trabalho.  Considere ativar o cache não rastreado e dividir o índice, se suportado (consulte `git update-index --untracked-cache` e `git update-index --split-index`). Caso contrário, você pode usar `no` para obter o retorno do comando `git status` mais rapidamente sem demonstrar quais foram os arquivos que não foram rastreados."

#. type: Plain text
#: en/git-status.txt:101
#, priority:280
msgid "Ignore changes to submodules when looking for changes. <when> can be either \"none\", \"untracked\", \"dirty\" or \"all\", which is the default.  Using \"none\" will consider the submodule modified when it either contains untracked or modified files or its HEAD differs from the commit recorded in the superproject and can be used to override any settings of the 'ignore' option in linkgit:git-config[1] or linkgit:gitmodules[5]. When \"untracked\" is used submodules are not considered dirty when they only contain untracked content (but they are still scanned for modified content). Using \"dirty\" ignores all changes to the work tree of submodules, only changes to the commits stored in the superproject are shown (this was the behavior before 1.7.0). Using \"all\" hides all changes to submodules (and suppresses the output of submodule summaries when the config option `status.submoduleSummary` is set)."
msgstr "Ignore as alterações nos submódulos ao procular pelas alterações. O `<quando>` pode ser \"none\" (nenhum), \"untracked\" (sem monitoramento/rastreamento), \"dirty\" (sujo) ou \"all\" (todos), que é a predefinição.  O \"none\" considera o submódulo modificado quando houver arquivos não estejam rastreados, modificados ou o seu `HEAD` seja diferente do commit registrado no superprojeto, pode ser utilizado para substituir qualquer configuração da opção 'ignore' (ignorar) em  linkgit:git-config[1] ou linkgit:gitmodules[5]. Quando o \"untracked\" é utilizado, os submódulos não são considerados sujos quando houver apenas  um conteúdo sem rastreamento (porém o monitoramento de alterações do seu conteúdo continua) O uso de \"dirty\" ignora todas as alterações na árvore de trabalho dos submódulos, apenas as alterações nos commit que foram armazenados no superprojeto são exibidos (esse era o comportamento anterior a versão 1.7.0). O uso de \"all\" oculta todas as alterações nos submódulos (e suprime a saída dos resumos dos submódulos quando a variável de configuração `status.submoduleSummary` estiver definida)."

#. type: Labeled list
#: en/git-status.txt:102
#, no-wrap, priority:280
msgid "--ignored[=<mode>]"
msgstr "--ignored[=<modo>]"

#. type: Plain text
#: en/git-status.txt:104
#, priority:280
msgid "Show ignored files as well."
msgstr "Exiba os arquivos ignorados também."

#. type: Plain text
#: en/git-status.txt:108
#, priority:280
msgid "The mode parameter is used to specify the handling of ignored files.  It is optional: it defaults to 'traditional'."
msgstr "O parâmetro de modo é utilizado para definir o manuseio dos arquivos ignorados.  É opcional: a sua predefinição retorna para 'traditional'."

#. type: Plain text
#: en/git-status.txt:112
#, priority:280
msgid "'traditional' - Shows ignored files and directories, unless"
msgstr "'traditional' - Exibe os arquivos e diretórios ignorados, a menos que"

#. type: Plain text
#: en/git-status.txt:115
#, no-wrap, priority:280
msgid ""
"--untracked-files=all is specified, in which case\n"
"individual files in ignored directories are\n"
"displayed.\n"
msgstr ""
"--untracked-files=tudo é especificado, neste caso\n"
"os arquivos individuais nos diretórios que foram\n"
"ignorados são exibidos.\n"

#. type: Plain text
#: en/git-status.txt:116
#, no-wrap, priority:280
msgid "'no'\t        - Show no ignored files.\n"
msgstr "'no'\t        - Não exibe os arquivos ignorados.\n"

#. type: Plain text
#: en/git-status.txt:117
#, no-wrap, priority:280
msgid "'matching'    - Shows ignored files and directories matching an\n"
msgstr "'matching'    - Exibe os arquivos e diretórios ignorados que correspondem a um\n"

#. type: Plain text
#: en/git-status.txt:118
#, no-wrap, priority:280
msgid "ignore pattern.\n"
msgstr "ignora o padrão.\n"

#. type: Plain text
#: en/git-status.txt:124
#, priority:280
msgid "When 'matching' mode is specified, paths that explicitly match an ignored pattern are shown. If a directory matches an ignore pattern, then it is shown, but not paths contained in the ignored directory. If a directory does not match an ignore pattern, but all contents are ignored, then the directory is not shown, but all contents are shown."
msgstr "Quando o modo 'matching' é utilizado, os caminhos que coincidam explicitamente a um padrão ignorado são exibidos. Caso um diretório coincidir com um padrão a ser ignorado, ele será exibido, mas não os caminhos existentes no diretório ignorado. Caso um diretório não coincida com um padrão a ser ignorado, mas todo o conteúdo for ignorado, o diretório não será exibido, mas todo o resto do conteúdo será."

#. type: Plain text
#: en/git-status.txt:129
#, priority:280
msgid "Terminate entries with NUL, instead of LF.  This implies the `--porcelain=v1` output format if no other format is given."
msgstr "Terminar as entradas com `NUL`, em vez de `LF`.  Isto implica o formato de saída `--porcelain=v1` caso nenhum outro formato seja utilizado."

#. type: Plain text
#: en/git-status.txt:136
#, priority:280
msgid "Display untracked files in columns. See configuration variable `column.status` for option syntax. `--column` and `--no-column` without options are equivalent to 'always' and 'never' respectively."
msgstr "Exiba os arquivos que não foram rastreados em colunas. Veja a variável de configuração `column.status` para conhecer a sintaxe desta opção.`--column` e `--no-column` sem estas opções, é o mesmo que 'always' e 'never' respectivamente."

#. type: Labeled list
#: en/git-status.txt:137
#, ignore-same, no-wrap, priority:280
msgid "--ahead-behind"
msgstr "--ahead-behind"

#. type: Labeled list
#: en/git-status.txt:138
#, ignore-same, no-wrap, priority:280
msgid "--no-ahead-behind"
msgstr "--no-ahead-behind"

#. type: Plain text
#: en/git-status.txt:141
#, priority:280
msgid "Display or do not display detailed ahead/behind counts for the branch relative to its upstream branch.  Defaults to true."
msgstr "Exiba ou não as contagens detalhadas antecipadas/atrasadas do ramo em relação a ramificação `upstream`.  A predefinição retorna para `true`."

#. type: Labeled list
#: en/git-status.txt:142
#, ignore-same, no-wrap, priority:280
msgid "--renames"
msgstr "--renames"

#. type: Plain text
#: en/git-status.txt:146
#, priority:280
msgid "Turn on/off rename detection regardless of user configuration.  See also linkgit:git-diff[1] `--no-renames`."
msgstr "Ligue/desligue a detecção de renomeação, independentemente da configuração do utilizador.  Consulte tambémlinkgit:git-diff[1] `--no-renames`."

#. type: Plain text
#: en/git-status.txt:151
#, priority:280
msgid "Turn on rename detection, optionally setting the similarity threshold.  See also linkgit:git-diff[1] `--find-renames`."
msgstr "Liga a detecção de renomeação, configurando opcionalmente o limite de similaridade.  Consulte também linkgit:git-diff[1] `--find-renames`."

#. type: Plain text
#: en/git-status.txt:154
#, priority:280
msgid "See the 'pathspec' entry in linkgit:gitglossary[7]."
msgstr "Consulte a entrada 'pathspec' em linkgit:gitglossary[7]."

#. type: Plain text
#: en/git-status.txt:162
#, priority:280
msgid "The output from this command is designed to be used as a commit template comment.  The default, long format, is designed to be human readable, verbose and descriptive.  Its contents and format are subject to change at any time."
msgstr "A saída deste comando foi projetada para ser utilizada como um comentário modelo do commit.  A predefinição é utilizar o formato longo, foi projetado para ser legível por seres humanos, detalhado e descritivo.  Seu conteúdo e formato estão sujeitos a alterações a qualquer momento."

#. type: Plain text
#: en/git-status.txt:167
#, priority:280
msgid "The paths mentioned in the output, unlike many other Git commands, are made relative to the current directory if you are working in a subdirectory (this is on purpose, to help cutting and pasting). See the status.relativePaths config option below."
msgstr "Os caminhos mencionados na saída, diferentemente de muitos outros comandos Git, são feitos em relação ao diretório atual. Caso esteja trabalhando em um subdiretório (isso é proposital, para ajudar a cortar e colar). Consulte a opção da configuração `status.relativePaths` abaixo."

#. type: Title ~
#: en/git-status.txt:169
#, no-wrap, priority:280
msgid "Short Format"
msgstr "Formato Curto"

#. type: Plain text
#: en/git-status.txt:173
#, priority:280
msgid "In the short-format, the status of each path is shown as one of these forms"
msgstr "No formato curto, a condição de cada caminho é exibido como uma das seguintes formas"

#. type: Plain text
#: en/git-status.txt:176
#, no-wrap, priority:280
msgid ""
"\tXY PATH\n"
"\tXY ORIG_PATH -> PATH\n"
msgstr ""
"\tXY PATH\n"
"\tXY ORIG_PATH -> PATH\n"

#. type: Plain text
#: en/git-status.txt:180
#, priority:280
msgid "where `ORIG_PATH` is where the renamed/copied contents came from. `ORIG_PATH` is only shown when the entry is renamed or copied. The `XY` is a two-letter status code."
msgstr "onde `ORIG_PATH` é de onde veio o conteúdo renomeado/copiado. O `ORIG_PATH` só é exibido quando a entrada é renomeada ou copiada. O `XY` é um código de condição com duas letras."

#. type: Plain text
#: en/git-status.txt:186
#, priority:280
msgid "The fields (including the `->`) are separated from each other by a single space. If a filename contains whitespace or other nonprintable characters, that field will be quoted in the manner of a C string literal: surrounded by ASCII double quote (34) characters, and with interior special characters backslash-escaped."
msgstr "Os campos (incluindo o `->`) estão separados um do outro por um único espaço. Caso um nome do arquivo contenha um espaço ou outros caracteres não imprimíveis, este campo será citado na forma de uma string C literal: cercado por caracteres ASCII com aspas duplas (34) e com os caracteres especiais internos escapados por barra invertida."

#. type: Plain text
#: en/git-status.txt:189
#, priority:280
msgid "There are three different types of states that are shown using this format, and each one uses the `XY` syntax differently:"
msgstr "Existem três tipos de estados diferentes que são mostrados utilizando este formato e cada um utiliza a sintaxe `XY` de forma diferente:"

#. type: Plain text
#: en/git-status.txt:191
#, priority:280
msgid "When a merge is occurring and the merge was successful, or outside of a merge"
msgstr "Quando uma mesclagem está ocorrendo e a mesclagem foi bem sucedida ou esteja fora de uma mesclagem"

#. type: Plain text
#: en/git-status.txt:193
#, priority:280
msgid "situation, `X` shows the status of the index and `Y` shows the status of the working tree."
msgstr "situação, `X` mostra o status do índice e o `Y` mostra o status da árvore de trabalho."

#. type: Plain text
#: en/git-status.txt:194
#, priority:280
msgid "When a merge conflict has occurred and has not yet been resolved, `X` and `Y`"
msgstr "Quando o corre um conflito na mesclagem e ainda não foi resolvido, `X` e `Y`"

#. type: Plain text
#: en/git-status.txt:196
#, priority:280
msgid "show the state introduced by each head of the merge, relative to the common ancestor. These paths are said to be _unmerged_."
msgstr "mostram o estado introduzido por cada cabeçalho da mesclagem com relação ao ancestral comum. Dizem que estes caminhos são _unmerged_ ou não mesclados."

#. type: Plain text
#: en/git-status.txt:197
#, priority:280
msgid "When a path is untracked, `X` and `Y` are always the same, since they are"
msgstr "Quando um caminho é desmarcado, o `X` e o `Y` sempre são o mesmo, pois são"

#. type: Plain text
#: en/git-status.txt:200
#, priority:280
msgid "unknown to the index. `??` is used for untracked paths. Ignored files are not listed unless `--ignored` is used; if it is, ignored files are indicated by `!!`."
msgstr "desconhecidos ao índice. O `??` é usado para caminhos não rastreados. Os arquivos ignorados não são listados a menos que a opção `--ignored` seja usado; caso seja, os arquivos ignorados são indicados através do símbolo `!!`."

#. type: Plain text
#: en/git-status.txt:203
#, priority:280
msgid "Note that the term _merge_ here also includes rebases using the default `--merge` strategy, cherry-picks, and anything else using the merge machinery."
msgstr "Observe que o termo _merge_ aqui também inclui rebases usando a estratégia padrão `--merge`, cherry-picks e qualquer outra coisa que use o mecanismo da mesclagem."

#. type: Plain text
#: en/git-status.txt:207
#, priority:280
msgid "In the following table, these three classes are shown in separate sections, and these characters are used for `X` and `Y` fields for the first two sections that show tracked paths:"
msgstr "Na tabela a seguir, estas três classes são mostradas em seções separadas e estes caracteres são usados nos campos `X` e`Y` para as primeiras duas seções que mostram o rastreamento dos caminhos:"

#. type: Plain text
#: en/git-status.txt:209
#, priority:280
msgid "' ' = unmodified"
msgstr "' ' = não modificado"

#. type: Plain text
#: en/git-status.txt:210
#, priority:280
msgid "'M' = modified"
msgstr "'M' = modificado"

#. type: Plain text
#: en/git-status.txt:211
#, priority:280
msgid "'T' = file type changed (regular file, symbolic link or submodule)"
msgstr "'T' = tipo do arquivo que foi alterado (arquivo regular, link simbólico ou submódulo)"

#. type: Plain text
#: en/git-status.txt:212
#, priority:280
msgid "'A' = added"
msgstr "'A' = adicionado"

#. type: Plain text
#: en/git-status.txt:213
#, priority:280
msgid "'D' = deleted"
msgstr "'D' = excluído"

#. type: Plain text
#: en/git-status.txt:214
#, priority:280
msgid "'R' = renamed"
msgstr "'R' = renomeado"

#. type: Plain text
#: en/git-status.txt:215
#, priority:280
msgid "'C' = copied (if config option status.renames is set to \"copies\")"
msgstr "'C' = copiado (caso a condição da opção status.renames esteja definido como \"copies\" (cópias))"

#. type: Plain text
#: en/git-status.txt:216
#, priority:280
msgid "'U' = updated but unmerged"
msgstr "'U' = atualizado, mas não mesclado"

#. type: delimited block .
#: en/git-status.txt:245
#, no-wrap, priority:280
msgid ""
"X          Y     Meaning\n"
"-------------------------------------------------\n"
"\t [AMD]   not updated\n"
"M        [ MTD]  updated in index\n"
"T        [ MTD]  type changed in index\n"
"A        [ MTD]  added to index\n"
"D                deleted from index\n"
"R        [ MTD]  renamed in index\n"
"C        [ MTD]  copied in index\n"
"[MTARC]          index and work tree matches\n"
"[ MTARC]    M    work tree changed since index\n"
"[ MTARC]    T    type changed in work tree since index\n"
"[ MTARC]    D    deleted in work tree\n"
"\t    R    renamed in work tree\n"
"\t    C    copied in work tree\n"
"-------------------------------------------------\n"
"D           D    unmerged, both deleted\n"
"A           U    unmerged, added by us\n"
"U           D    unmerged, deleted by them\n"
"U           A    unmerged, added by them\n"
"D           U    unmerged, deleted by us\n"
"A           A    unmerged, both added\n"
"U           U    unmerged, both modified\n"
"-------------------------------------------------\n"
"?           ?    untracked\n"
"!           !    ignored\n"
"-------------------------------------------------\n"
msgstr ""
"X          Y     Significado\n"
"-------------------------------------------------\n"
"\t [AMD]   não atualizado\n"
"M        [MTD]  atualizado no índice\n"
"T        [MTD]  tipo alterado no índice\n"
"A        [MTD]  adicionado ao índice\n"
"D               excluído do índice\n"
"R        [MTD]  renomeado no índice\n"
"C        [MTD]  copiado no índice\n"
"[MTARC]         o índice e a árvore de trabalho coincidem\n"
"[MTARC]     M   a árvore de trabalho foi alterada desde o índice\n"
"[MTARC]     T   tipo alterado na árvore de trabalho desde o índice\n"
"[MTARC]     D   excluído na árvore de trabalho\n"
"\t    R    renomeado na árvore de trabalho\n"
"\t    C    copiado na árvore de trabalho\n"
"-------------------------------------------------\n"
"D           D    não mesclado, ambos excluídos\n"
"A           U    não mesclado, adicionado por nós\n"
"U           D    não mesclado, excluídos por eles\n"
"U           A    não mesclado, adicionados por eles\n"
"D           U    não mesclado, excluídos por nós\n"
"A           A    não mesclado, ambos foram adicionados\n"
"U           U    não mesclado, ambos foram alterados\n"
"-------------------------------------------------\n"
"?           ?    não rastreado\n"
"!           !    ignorado\n"
"-------------------------------------------------\n"

#. type: Plain text
#: en/git-status.txt:254
#, no-wrap, priority:280
msgid ""
"Submodules have more state and instead report\n"
"\t\tM    the submodule has a different HEAD than\n"
"\t\t     recorded in the index\n"
"\t\tm    the submodule has modified content\n"
"\t\t?    the submodule has untracked files\n"
"since modified content or untracked files in a submodule cannot be added\n"
"via `git add` in the superproject to prepare a commit.\n"
msgstr ""
"Os submódulos têm mais condição e, em vez disso, relatam\n"
"\t\tM    o submódulo possui um `head` diferente da\n"
"\t\t     gravada no índice\n"
"\t\tm    o submódulo modificou o conteúdo\n"
"\t\t?    o submódulo possui arquivos não rastreados\n"
"pois conteúdo modificado ou arquivos não rastreados em um\n"
"submódulo não podem ser adicionados via `git add` no `superproject` para preparar um commit.\n"

#. type: Plain text
#: en/git-status.txt:257
#, priority:280
msgid "'m' and '?' are applied recursively. For example if a nested submodule in a submodule contains an untracked file, this is reported as '?' as well."
msgstr "'m' e '?' são aplicados recursivamente. Por exemplo, se um submódulo aninhado em um submódulo contiver um arquivo não rastreado, isso será relatado como '?' também."

#. type: Plain text
#: en/git-status.txt:259
#, priority:280
msgid "If -b is used the short-format status is preceded by a line"
msgstr "Caso `-b` seja utilizado, a condição de formato curto será precedido por uma linhas"

#. type: Plain text
#: en/git-status.txt:261
#, no-wrap, priority:280
msgid "    ## branchname tracking info\n"
msgstr "    ## info de  rastreio do nome do ramo\n"

#. type: Title ~
#: en/git-status.txt:263
#, no-wrap, priority:280
msgid "Porcelain Format Version 1"
msgstr "Formato de Porcelana Versão 1"

#. type: Plain text
#: en/git-status.txt:270
#, priority:280
msgid "Version 1 porcelain format is similar to the short format, but is guaranteed not to change in a backwards-incompatible way between Git versions or based on user configuration. This makes it ideal for parsing by scripts.  The description of the short format above also describes the porcelain format, with a few exceptions:"
msgstr "O formato de porcelana da versão 1 é semelhante ao formato curto, no entanto é garantido que não seja alterado de maneira que seja incompatível com as versões anteriores das versões do Git ou com a base na configuração do usuário.  Isso o torna ideal para ser analisado por scripts.  A descrição do formato curto acima também descreve o formato de porcelana, com algumas exceções:"

#. type: Plain text
#: en/git-status.txt:273
#, priority:280
msgid "The user's color.status configuration is not respected; color will always be off."
msgstr "Caso a configuração da variável `color.status` do usuário não seja respeitada; a cor estará sempre desligada."

#. type: Plain text
#: en/git-status.txt:276
#, priority:280
msgid "The user's status.relativePaths configuration is not respected; paths shown will always be relative to the repository root."
msgstr "Caso a configuração da variável `status.relativePaths` do usuário não seja respeitada; os caminhos exibidos sempre serão relativos à raiz do repositório."

#. type: Plain text
#: en/git-status.txt:286
#, priority:280
msgid "There is also an alternate -z format recommended for machine parsing. In that format, the status field is the same, but some other things change.  First, the '\\->' is omitted from rename entries and the field order is reversed (e.g 'from \\-> to' becomes 'to from'). Second, a NUL (ASCII 0) follows each filename, replacing space as a field separator and the terminating newline (but a space still separates the status field from the first filename).  Third, filenames containing special characters are not specially formatted; no quoting or backslash-escaping is performed."
msgstr "Há também um formato alternativo `-z` recomendado para a análise de máquina. Neste formato, o campo do status é o mesmo, porém algumas outras coisas mudam.  Primeiro, o '\\ ->' é omitido das entradas de renomeação e a ordem dos campos é revertida (por exemplo, 'from \\-> to' se torna 'to from'). Segundo, um `NUL` (ASCII 0) segue cada nome de arquivo substituindo o espaço como um separador de campos e a nova linha final (porém um espaço ainda separa o campo de status do primeiro nome do arquivo).  Terceiro, os nomes dos arquivos que contenha caracteres especiais não são especialmente formatados; nenhuma citação ou barra de escape invertida é executada."

#. type: Plain text
#: en/git-status.txt:288
#, priority:280
msgid "Any submodule changes are reported as modified `M` instead of `m` or single `?`."
msgstr "Quaisquer alterações no submódulo são relatadas como `M` modificado em vez de `m` ou um único `?`."

#. type: Title ~
#: en/git-status.txt:290
#, no-wrap, priority:280
msgid "Porcelain Format Version 2"
msgstr "Formato de Porcelana Versão 2"

#. type: Plain text
#: en/git-status.txt:295
#, priority:280
msgid "Version 2 format adds more detailed information about the state of the worktree and changed items.  Version 2 also defines an extensible set of easy to parse optional headers."
msgstr "O formato da versão 2 adiciona informações mais detalhadas sobre a condição da árvore de trabalho e os itens que foram alterados.  Na versão 2 também é definido um conjunto extensível de cabeçalhos opcionais fáceis de serem analisados."

#. type: Plain text
#: en/git-status.txt:299
#, priority:280
msgid "Header lines start with \"#\" and are added in response to specific command line arguments.  Parsers should ignore headers they don't recognize."
msgstr "As linhas do cabeçalho começam com o símbolo \"#\" e são adicionadas em resposta aos argumentos específicos da linha de comando.  Os analisadores devem ignorar os cabeçalhos que não sejam reconhecidos."

#. type: Title ^
#: en/git-status.txt:301
#, no-wrap, priority:280
msgid "Branch Headers"
msgstr "Cabeçalho dos Ramos"

#. type: Plain text
#: en/git-status.txt:305
#, priority:280
msgid "If `--branch` is given, a series of header lines are printed with information about the current branch."
msgstr "Caso `--branch` seja utilizado, uma série de linhas de cabeçalho será impressa com as informações sobre a ramificação atual."

#. type: delimited block .
#: en/git-status.txt:315
#, no-wrap, priority:280
msgid ""
"Line                                     Notes\n"
"------------------------------------------------------------\n"
"# branch.oid <commit> | (initial)        Current commit.\n"
"# branch.head <branch> | (detached)      Current branch.\n"
"# branch.upstream <upstream_branch>      If upstream is set.\n"
"# branch.ab +<ahead> -<behind>           If upstream is set and\n"
"\t\t\t\t\t the commit is present.\n"
"------------------------------------------------------------\n"
msgstr ""
"Line                                     Notes\n"
"------------------------------------------------------------\n"
"# branch.oid <commit> | (initial)        Commit atual.\n"
"# branch.head <ramo> | (desanexado)      Ramificação atual.\n"
"# branch.upstream <upstream_branch>      Caso o \"upstream\" esteja definido.\n"
"# branch.ab +<ahead> -<behind>           Caso o \"upstream\" esteja definido e\n"
"\t\t\t\t\t o commit esteja presente.\n"
"------------------------------------------------------------\n"

#. type: Title ^
#: en/git-status.txt:318
#, no-wrap, priority:280
msgid "Stash Information"
msgstr "Informação do empilhamento"

#. type: Plain text
#: en/git-status.txt:322
#, priority:280
msgid "If `--show-stash` is given, one line is printed showing the number of stash entries if non-zero:"
msgstr "Caso a opção `--show-stash` seja usada, uma linha será impressa mostrando a quantidade das entradas que estão empilhadas caso não seja zero:"

#. type: Plain text
#: en/git-status.txt:324
#, no-wrap, priority:280
msgid "    # stash <N>\n"
msgstr "    # stash <N>\n"

#. type: Title ^
#: en/git-status.txt:326
#, no-wrap, priority:280
msgid "Changed Tracked Entries"
msgstr "Entradas Rastreadas que Foram Alteradas"

#. type: Plain text
#: en/git-status.txt:333
#, priority:280
msgid "Following the headers, a series of lines are printed for tracked entries.  One of three different line formats may be used to describe an entry depending on the type of change.  Tracked entries are printed in an undefined order; parsers should allow for a mixture of the 3 line types in any order."
msgstr "Após os cabeçalhos, uma série de linhas é impressa para entradas que são rastreadas.  Um dos três formatos diferentes da linha podem ser utilizados para descrever uma entrada, dependendo do tipo da alteração.  As entradas rastreadas são impressas em uma ordem indefinida; os analisadores devem permitir uma mistura dos três tipos de linha e em qualquer ordem."

#. type: Plain text
#: en/git-status.txt:335
#, priority:280
msgid "Ordinary changed entries have the following format:"
msgstr "Os itens comuns que foram alterados têm o seguinte formato:"

#. type: Plain text
#: en/git-status.txt:337
#, no-wrap, priority:280
msgid "    1 <XY> <sub> <mH> <mI> <mW> <hH> <hI> <path>\n"
msgstr "    1 <XY> <sub> <mH> <mI> <mW> <hH> <hI> <caminho>\n"

#. type: Plain text
#: en/git-status.txt:339
#, priority:280
msgid "Renamed or copied entries have the following format:"
msgstr "As entradas que foram renomeadas ou copiadas têm o seguinte formato:"

#. type: Plain text
#: en/git-status.txt:341
#, no-wrap, priority:280
msgid "    2 <XY> <sub> <mH> <mI> <mW> <hH> <hI> <X><score> <path><sep><origPath>\n"
msgstr "    2 <XY> <sub> <mH> <mI> <mW> <hH> <hI> <X><score> <caminho><sep><caminho original>\n"

#. type: delimited block .
#: en/git-status.txt:372
#, ignore-ellipsis, no-wrap, priority:280
msgid ""
"Field       Meaning\n"
"--------------------------------------------------------\n"
"<XY>        A 2 character field containing the staged and\n"
"\t    unstaged XY values described in the short format,\n"
"\t    with unchanged indicated by a \".\" rather than\n"
"\t    a space.\n"
"<sub>       A 4 character field describing the submodule state.\n"
"\t    \"N...\" when the entry is not a submodule.\n"
"\t    \"S<c><m><u>\" when the entry is a submodule.\n"
"\t    <c> is \"C\" if the commit changed; otherwise \".\".\n"
"\t    <m> is \"M\" if it has tracked changes; otherwise \".\".\n"
"\t    <u> is \"U\" if there are untracked changes; otherwise \".\".\n"
"<mH>        The octal file mode in HEAD.\n"
"<mI>        The octal file mode in the index.\n"
"<mW>        The octal file mode in the worktree.\n"
"<hH>        The object name in HEAD.\n"
"<hI>        The object name in the index.\n"
"<X><score>  The rename or copy score (denoting the percentage\n"
"\t    of similarity between the source and target of the\n"
"\t    move or copy). For example \"R100\" or \"C75\".\n"
"<path>      The pathname.  In a renamed/copied entry, this\n"
"\t    is the target path.\n"
"<sep>       When the `-z` option is used, the 2 pathnames are separated\n"
"\t    with a NUL (ASCII 0x00) byte; otherwise, a tab (ASCII 0x09)\n"
"\t    byte separates them.\n"
"<origPath>  The pathname in the commit at HEAD or in the index.\n"
"\t    This is only present in a renamed/copied entry, and\n"
"\t    tells where the renamed/copied contents came from.\n"
"--------------------------------------------------------\n"
msgstr ""
"Campo       Significado\n"
"--------------------------------------------------------\n"
"<XY>        Um campo com 2 characteres contendo valores XY\n"
"\t    montados e não montados descrito em um formato curto,\n"
"\t    sem modificações indicadas por um \".\" em vez de\n"
"\t    um espaço.\n"
"<sub>       Um campo com 4 caracteres descrevendo a condição do submódulo.\n"
"\t    \"N...\" quando a entrada não for um submódulo.\n"
"\t    \"S<c><m><u>\" quando a entrada for um submódulo.\n"
"\t    <c> is \"C\" caso o commit seja modificado; senão \".\".\n"
"\t    <m> is \"M\" caso haja mudanças rastreadas; senão \".\".\n"
"\t    <u> is \"U\" caso não haja mudanças rastreadas; senão \".\".\n"
"<mH>        O modo de um arquivo octal no HEAD.\n"
"<mI>        O modo de um arquivo octal no índice.\n"
"<mW>        O modo de um arquivo octal na árvore de trabalho.\n"
"<hH>        O nome do objeto no HEAD.\n"
"<hI>        O nome do objeto no índice.\n"
"<X><score>  O renomeamento ou a cópia do score \"placar\"(denota a porcentagem\n"
"\t    ou a similaridade entre a fonte e o destino da ação de\n"
"\t    mover ou copiar. Por exemplo, \"R100\" ou \"C75\".\n"
"<caminho>      O `pathname` \"nome do caminho\".  Em um lançamento de renomeação/cópia,\n"
"\t    este é o caminho de destino.\n"
"<sep>       Quando a opção `-z` for utilizada, os 2 `pathnames` são separados\n"
"\t    com um byte `NUL` (ASCII 0x00); senão um byte tab (ASCII 0x09)\n"
"\t    que os separam.\n"
"<origPath>  O `pathname` dentro do commit localizado no HEAD ou no índice.\n"
"\t    Só está presente no caso de um lançamento de renomeação ou cópia\n"
"\t    assim como informa de onde a renomeação ou cópia vieram.\n"
"--------------------------------------------------------\n"

#. type: Plain text
#: en/git-status.txt:376
#, priority:280
msgid "Unmerged entries have the following format; the first character is a \"u\" to distinguish from ordinary changed entries."
msgstr "As entradas que não forem mescladas têm o seguinte formato; o primeiro caractere é um \"u\" para se distinguir das entradas comum que foram alteradas."

#. type: Plain text
#: en/git-status.txt:378
#, no-wrap, priority:280
msgid "    u <XY> <sub> <m1> <m2> <m3> <mW> <h1> <h2> <h3> <path>\n"
msgstr "    u <XY> <sub> <m1> <m2> <m3> <mW> <h1> <h2> <h3> <caminho>\n"

#. type: delimited block .
#: en/git-status.txt:395
#, no-wrap, priority:280
msgid ""
"Field       Meaning\n"
"--------------------------------------------------------\n"
"<XY>        A 2 character field describing the conflict type\n"
"\t    as described in the short format.\n"
"<sub>       A 4 character field describing the submodule state\n"
"\t    as described above.\n"
"<m1>        The octal file mode in stage 1.\n"
"<m2>        The octal file mode in stage 2.\n"
"<m3>        The octal file mode in stage 3.\n"
"<mW>        The octal file mode in the worktree.\n"
"<h1>        The object name in stage 1.\n"
"<h2>        The object name in stage 2.\n"
"<h3>        The object name in stage 3.\n"
"<path>      The pathname.\n"
"--------------------------------------------------------\n"
msgstr ""
"Campo       Significado\n"
"--------------------------------------------------------\n"
"<XY>        Um campo com 2 caracteres descrevendo o tipo de conflito\n"
"\t    como descrito em um formato curto.\n"
"<sub>       Um campo com 4 caracteres descrevendo a condição do submódulo\n"
"\t    como descrito abaixo.\n"
"<m1>        O modo de um arquivo octal no estágio 1.\n"
"<m2>        O modo de um arquivo octal no estágio 2.\n"
"<m3>        O modo de um arquivo octal no estágio 3.\n"
"<mW>        O modo de um arquivo octal na árvore de trabalho.\n"
"<h1>        O nome do objeto no estágio 1.\n"
"<h1>        O nome do objeto no estágio 2.\n"
"<h1>        O nome do objeto no estágio 3.\n"
"<caminho>      O `pathname` \"nome do caminho\".\n"
"--------------------------------------------------------\n"

#. type: Title ^
#: en/git-status.txt:398
#, no-wrap, priority:280
msgid "Other Items"
msgstr "Outros itens"

#. type: Plain text
#: en/git-status.txt:403
#, priority:280
msgid "Following the tracked entries (and if requested), a series of lines will be printed for untracked and then ignored items found in the worktree."
msgstr "Após as entradas rastreadas (se for solicitado), uma série de linhas será impressa para os itens não rastreados e depois ignorados para os itens encontrados na árvore de trabalho."

#. type: Plain text
#: en/git-status.txt:405
#, priority:280
msgid "Untracked items have the following format:"
msgstr "Itens não rastreados têm o seguinte formato:"

#. type: Plain text
#: en/git-status.txt:407
#, no-wrap, priority:280
msgid "    ? <path>\n"
msgstr "    ? <caminho>\n"

#. type: Plain text
#: en/git-status.txt:409
#, priority:280
msgid "Ignored items have the following format:"
msgstr "Os itens ignorados tem o seguinte formato:"

#. type: Plain text
#: en/git-status.txt:411
#, no-wrap, priority:280
msgid "    ! <path>\n"
msgstr "    ! <caminho>\n"

#. type: Title ^
#: en/git-status.txt:413
#, no-wrap, priority:280
msgid "Pathname Format Notes and -z"
msgstr "Notas sobre o formato do `pathname` e `-z`"

#. type: Plain text
#: en/git-status.txt:418
#, priority:280
msgid "When the `-z` option is given, pathnames are printed as is and without any quoting and lines are terminated with a NUL (ASCII 0x00)  byte."
msgstr "Quando a opção `z` é utilizada os `pathnames` são exibidos como estão e sem nenhuma citação e as linhas são terminadas com um byte NUL (ASCII 0x00)."

#. type: Plain text
#: en/git-status.txt:422
#, priority:280
msgid "Without the `-z` option, pathnames with \"unusual\" characters are quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1])."
msgstr "Sem a opção `z`, os `pathnames` com os caracteres \"incomuns\" são citados conforme explicado na variável de configuração `core.quotePath` (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-status.txt:431
#, priority:280
msgid "The command honors `color.status` (or `status.color` -- they mean the same thing and the latter is kept for backward compatibility) and `color.status.<slot>` configuration variables to colorize its output."
msgstr "O comando segue a variável `color.status` (ou `status.color`, ambos têm o mesmo significado, o último é mantido para compatibilidade com versões anteriores). As variáveis de configuração `color.status.` serve para para colorir a saída."

#. type: Plain text
#: en/git-status.txt:435
#, priority:280
msgid "If the config variable `status.relativePaths` is set to false, then all paths shown are relative to the repository root, not to the current directory."
msgstr "Se a variável de configuração `status.relativePaths` estiver configurada como `false`, todos os caminhos exibidos serão relativos à raiz do repositório e não ao diretório atual."

#. type: Plain text
#: en/git-status.txt:446
#, priority:280
msgid "If `status.submoduleSummary` is set to a non zero number or true (identical to -1 or an unlimited number), the submodule summary will be enabled for the long format and a summary of commits for modified submodules will be shown (see --summary-limit option of linkgit:git-submodule[1]). Please note that the summary output from the status command will be suppressed for all submodules when `diff.ignoreSubmodules` is set to 'all' or only for those submodules where `submodule.<name>.ignore=all`. To also view the summary for ignored submodules you can either use the --ignore-submodules=dirty command line option or the 'git submodule summary' command, which shows a similar output but does not honor these settings."
msgstr "Se a variável `status.submoduleSummary` for definida como um número diferente de zero ou `true` (idêntico a `-1` ou um número ilimitado), o resumo do submódulo será ativado para o formato longo e um resumo dos commits para os submódulos modificados serão exibidos (consulte a opção --summary-limit de linkgit:git-submodule[1]). Por favor note que a saída resumida do comando status será suprimida para todos os submódulos quando a variável `diff.ignoreSubmodules` estiver definida como `all` ou apenas para aqueles submódulos em onde seja o mesmo que `submodule.<nome>.ignore=all`. Para visualizar também o resumo dos submódulos ignorados, você pode usar a opção de clinha de comando `--ignore-submodules=dirty ` ou o comando `git submodule summary`, que exibe uma saída semelhante porém não respeita estas configurações."

#. type: Title -
#: en/git-status.txt:448
#, no-wrap, priority:280
msgid "BACKGROUND REFRESH"
msgstr "RENOVAÇÃO DO PLANO DE FUNDO"

#. type: Plain text
#: en/git-status.txt:459
#, priority:280
msgid "By default, `git status` will automatically refresh the index, updating the cached stat information from the working tree and writing out the result. Writing out the updated index is an optimization that isn't strictly necessary (`status` computes the values for itself, but writing them out is just to save subsequent programs from repeating our computation). When `status` is run in the background, the lock held during the write may conflict with other simultaneous processes, causing them to fail. Scripts running `status` in the background should consider using `git --no-optional-locks status` (see linkgit:git[1] for details)."
msgstr "É predefinido que o comando `git status` renove automaticamente o índice, as estatísticas das informações armazenadas no cache da árvore de trabalho e gravando o seu resultado. Escrever o índice atualizado é uma otimização que não é estritamente necessária (o `status` calcula os valores por si só, mas escrevê-los é apenas para evitar que os programas subsequentes repitam o nosso processamento). Quando o `status` é executado em segundo plano, o bloqueio retido durante a gravação pode entrar em conflito com os outros processos simultâneos, causando falhas. Os scripts que executam `status` em segundo plano devem considerar a utilização do comando `git --no-optional-locks status` (para mais detalhes consulte linkgit:git[1])."

#. type: Title =
#: en/git-stripspace.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-stripspace(1)"
msgstr "git-stripspace(1)"

#. type: Plain text
#: en/git-stripspace.txt:7
#, priority:100
msgid "git-stripspace - Remove unnecessary whitespace"
msgstr "git-stripspace - Remove os espaços desnecessários"

#. type: Plain text
#: en/git-stripspace.txt:14
#, no-wrap, priority:100
msgid ""
"'git stripspace' [-s | --strip-comments]\n"
"'git stripspace' [-c | --comment-lines]\n"
msgstr ""
"'git stripspace' [-s | --strip-comments]\n"
"'git stripspace' [-c | --comment-lines]\n"

#. type: Plain text
#: en/git-stripspace.txt:21
#, priority:100
msgid "Read text, such as commit messages, notes, tags and branch descriptions, from the standard input and clean it in the manner used by Git."
msgstr "Leia o texto, como mensagens de commit, notas, tags e suas respectivas descrições das ramificações, da entrada padrão e limpe-o da maneira utilizada pelo Git."

#. type: Plain text
#: en/git-stripspace.txt:23
#, priority:100
msgid "With no arguments, this will:"
msgstr "Sem argumentos, isso irá:"

#. type: Plain text
#: en/git-stripspace.txt:25
#, priority:100
msgid "remove trailing whitespace from all lines"
msgstr "remover os espaços do final de todas as linhas"

#. type: Plain text
#: en/git-stripspace.txt:26
#, priority:100
msgid "collapse multiple consecutive empty lines into one empty line"
msgstr "recolher as várias linhas vazias consecutivas em apenas uma linha vazia"

#. type: Plain text
#: en/git-stripspace.txt:27
#, priority:100
msgid "remove empty lines from the beginning and end of the input"
msgstr "remover as linhas vazias do início e do fim da entrada"

#. type: Plain text
#: en/git-stripspace.txt:28
#, priority:100
msgid "add a missing '\\n' to the last line if necessary."
msgstr "adiciona um '\\n' ausente à última linha se for necessário."

#. type: Plain text
#: en/git-stripspace.txt:31
#, priority:100
msgid "In the case where the input consists entirely of whitespace characters, no output will be produced."
msgstr "No caso em que a entrada consiste inteiramente em caracteres de espaço, nenhuma saída será produzida."

#. type: Plain text
#: en/git-stripspace.txt:35
#, no-wrap, priority:100
msgid ""
"*NOTE*: This is intended for cleaning metadata, prefer the `--whitespace=fix`\n"
"mode of linkgit:git-apply[1] for correcting whitespace of patches or files in\n"
"the repository.\n"
msgstr ""
"* NOTA *: Destina-se à limpeza de metadados, prefira o modo `--whitespace=fix`\n"
"do linkgit:git-apply[1] para corrigir os espaços dos patches ou os\n"
"arquivos no repositório.\n"

#. type: Labeled list
#: en/git-stripspace.txt:39
#, ignore-same, no-wrap, priority:100
msgid "--strip-comments"
msgstr "--strip-comments"

#. type: Plain text
#: en/git-stripspace.txt:41
#, priority:100
msgid "Skip and remove all lines starting with comment character (default '#')."
msgstr "Ignora e remove todas as linhas que começam com o caractere predefinido de comentário ('#')."

#. type: Labeled list
#: en/git-stripspace.txt:43
#, ignore-same, no-wrap, priority:100
msgid "--comment-lines"
msgstr "--comment-lines"

#. type: Plain text
#: en/git-stripspace.txt:47
#, priority:100
msgid "Prepend comment character and blank to each line. Lines will automatically be terminated with a newline. On empty lines, only the comment character will be prepended."
msgstr "Coloque um caractere de comentário previamente com espaço em cada linha. As linhas serão automaticamente terminadas com uma nova linha. Nas linhas vazias, apenas o caractere de comentário será anexado."

#. type: Plain text
#: en/git-stripspace.txt:52
#, priority:100
msgid "Given the following noisy input with '$' indicating the end of a line:"
msgstr "Dada a seguinte entrada barulhenta com sinal '$' indicando o final de uma linha:"

#. type: delimited block -
#: en/git-stripspace.txt:65
#, no-wrap, priority:100
msgid ""
"|A brief introduction   $\n"
"|   $\n"
"|$\n"
"|A new paragraph$\n"
"|# with a commented-out line    $\n"
"|explaining lots of stuff.$\n"
"|$\n"
"|# An old paragraph, also commented-out. $\n"
"|      $\n"
"|The end.$\n"
"|  $\n"
msgstr ""
"|Uma breve introdução ao   $\n"
"|   $\n"
"|$\n"
"|Um novo parágrafo$\n"
"|# com uma linha de comentário    $\n"
"|explicando um monte de coisas.$\n"
"|$\n"
"|# Mais um parágrafo antigo comentado. $ |      $\n"
"|O fim.$\n"
"|  $\n"
"\n"

#. type: Plain text
#: en/git-stripspace.txt:68
#, priority:100
msgid "Use 'git stripspace' with no arguments to obtain:"
msgstr "Utilize 'git stripspace' sem argumentos para obter:"

#. type: delimited block -
#: en/git-stripspace.txt:79
#, no-wrap, priority:100
msgid ""
"|A brief introduction$\n"
"|$\n"
"|A new paragraph$\n"
"|# with a commented-out line$\n"
"|explaining lots of stuff.$\n"
"|$\n"
"|# An old paragraph, also commented-out.$\n"
"|$\n"
"|The end.$\n"
msgstr ""
"|Uma breve introdução$\n"
"|$\n"
"|Um novo parágrafo$\n"
"|# com uma linha de comentário$\n"
"|explicando um monte de coisa.$\n"
"|$\n"
"|# Um parágrafo antigo comentado.$\n"
"|$\n"
"|O fim.$\n"

#. type: Plain text
#: en/git-stripspace.txt:82
#, priority:100
msgid "Use 'git stripspace --strip-comments' to obtain:"
msgstr "Utilize `git stripspace --strip-comments` para obter:"

#. type: delimited block -
#: en/git-stripspace.txt:90
#, no-wrap, priority:100
msgid ""
"|A brief introduction$\n"
"|$\n"
"|A new paragraph$\n"
"|explaining lots of stuff.$\n"
"|$\n"
"|The end.$\n"
msgstr ""
"|Uma breve introdução$\n"
"|$\n"
"|Um novo parágrafo$\n"
"|explicando um monte de coisa.$\n"
"|$\n"
"|O fim.$\n"

#. type: Title =
#: en/git-submodule.txt:2
#, ignore-same, no-wrap, priority:220
msgid "git-submodule(1)"
msgstr "git-submodule(1)"

#. type: Plain text
#: en/git-submodule.txt:7
#, priority:220
msgid "git-submodule - Initialize, update or inspect submodules"
msgstr "git-submodule - Inicialize, atualize ou inspecione os submódulos"

#. type: Plain text
#: en/git-submodule.txt:24
#, ignore-ellipsis, no-wrap, priority:220
msgid ""
"'git submodule' [--quiet] [--cached]\n"
"'git submodule' [--quiet] add [<options>] [--] <repository> [<path>]\n"
"'git submodule' [--quiet] status [--cached] [--recursive] [--] [<path>...]\n"
"'git submodule' [--quiet] init [--] [<path>...]\n"
"'git submodule' [--quiet] deinit [-f|--force] (--all|[--] <path>...)\n"
"'git submodule' [--quiet] update [<options>] [--] [<path>...]\n"
"'git submodule' [--quiet] set-branch [<options>] [--] <path>\n"
"'git submodule' [--quiet] set-url [--] <path> <newurl>\n"
"'git submodule' [--quiet] summary [<options>] [--] [<path>...]\n"
"'git submodule' [--quiet] foreach [--recursive] <command>\n"
"'git submodule' [--quiet] sync [--recursive] [--] [<path>...]\n"
"'git submodule' [--quiet] absorbgitdirs [--] [<path>...]\n"
msgstr ""
"'git submodule' [--quiet] [--cached]\n"
"'git submodule' [--quiet] add [<opções>] [--] <repository> [<caminho>]\n"
"'git submodule' [--quiet] status [--cached] [--recursive] [--] [<caminho>...]\n"
"'git submodule' [--quiet] init [--] [<caminho>...]\n"
"'git submodule' [--quiet] deinit [-f|--force] (--all|[--] <caminho>...)\n"
"'git submodule' [--quiet] update [<opções>] [--] [<caminho>...]\n"
"'git submodule' [--quiet] set-branch [<opções>] [--] <caminho>\n"
"'git submodule' [--quiet] set-url [--] <caminho> <newurl>\n"
"'git submodule' [--quiet] summary [<opções>] [--] [<caminho>...]\n"
"'git submodule' [--quiet] foreach [--recursive] <command>\n"
"'git submodule' [--quiet] sync [--recursive] [--] [<caminho>...]\n"
"'git submodule' [--quiet] absorbgitdirs [--] [<caminho>...]\n"

#. type: Plain text
#: en/git-submodule.txt:29
#, priority:220
msgid "Inspects, updates and manages submodules."
msgstr "Inspeciona, atualiza e gerencia os submódulos."

#. type: Plain text
#: en/git-submodule.txt:31
#, priority:220
msgid "For more information about submodules, see linkgit:gitsubmodules[7]."
msgstr "Para mais informações sobre submódulos, consulte linkgit:gitsubmodules[7]."

#. type: Plain text
#: en/git-submodule.txt:36
#, priority:220
msgid "With no arguments, shows the status of existing submodules.  Several subcommands are available to perform operations on the submodules."
msgstr "Sem argumentos, exiba a condição geral dos submódulos já existentes.  Vários subcomandos estão disponíveis para execução das operações nos submódulos."

#. type: Labeled list
#: en/git-submodule.txt:37
#, no-wrap, priority:220
msgid "add [-b <branch>] [-f|--force] [--name <name>] [--reference <repository>] [--depth <depth>] [--] <repository> [<path>]"
msgstr "add [-b <ramo>] [-f|--force] [--name <nome>] [--reference <repositório>] [--depth <profundidade>] [--] <repositório> [<caminho>]"

#. type: Plain text
#: en/git-submodule.txt:41
#, priority:220
msgid "Add the given repository as a submodule at the given path to the changeset to be committed next to the current project: the current project is termed the \"superproject\"."
msgstr "Adicione o repositório informado como um submódulo no caminho especificado ao conjunto de alterações para ser feito o commit ao lado do projeto atual: o projeto atual é chamado de \"superproject\"."

#. type: Plain text
#: en/git-submodule.txt:50
#, priority:220
msgid "<repository> is the URL of the new submodule's origin repository.  This may be either an absolute URL, or (if it begins with ./ or ../), the location relative to the superproject's default remote repository (Please note that to specify a repository 'foo.git' which is located right next to a superproject 'bar.git', you'll have to use `../foo.git` instead of `./foo.git` - as one might expect when following the rules for relative URLs - because the evaluation of relative URLs in Git is identical to that of relative directories)."
msgstr "O <repositório> é o URL do repositório de origem do novo submódulo.  Este pode ser um URL absoluto, ou (se começar com ./ ou ../), a localização relativa ao repositório predefinido do superprojeto remoto (Por favor note que para especificar um repositório 'foo.git' que está localizado bem ao lado de um superproject 'bar.git', você terá que usar `../foo.git` em vez de `./foo.git` - como se pode esperar quando se seguem as regras para URLs relativas - porque a avaliação das URLs relativas no Git é idêntica à dos diretórios relativos)."

#. type: Plain text
#: en/git-submodule.txt:57
#, priority:220
msgid "The default remote is the remote of the remote-tracking branch of the current branch. If no such remote-tracking branch exists or the HEAD is detached, \"origin\" is assumed to be the default remote.  If the superproject doesn't have a default remote configured the superproject is its own authoritative upstream and the current working directory is used instead."
msgstr "A predefinição do ramo remoto é que ele seja monitorado pelo ramo atual. Se esse ramo monitorado remotamente não exista ou o `HEAD` esteja desconectado, a \"origin\" será assumida como o ramo remoto predefinido.  Caso o superprojeto não tenha predefinido um ramo remoto configurado, o superprojeto será o seu próprio upstream autoritativo e será utilizado o diretório de trabalho atual."

#. type: Plain text
#: en/git-submodule.txt:66
#, priority:220
msgid "The optional argument <path> is the relative location for the cloned submodule to exist in the superproject. If <path> is not given, the canonical part of the source repository is used (\"repo\" for \"/path/to/repo.git\" and \"foo\" for \"host.xz:foo/.git\"). If <path> exists and is already a valid Git repository, then it is staged for commit without cloning. The <path> is also used as the submodule's logical name in its configuration entries unless `--name` is used to specify a logical name."
msgstr "O argumento opcional `<caminho>` é o local relativo para que o submódulo clonado exista no superprojeto. Caso o `<caminho>` não seja informado, a parte canônica do repositório da origem será utilizada (\"repo\" para o \"/path/to/repo.git\" e \"foo\" para o \"host.xz:foo/.git\"). Caso o `<caminho>` exista e já for um repositório Git válido, ele será preparado para o commit sem clonagem. O `<caminho>` também é utilizado como o nome lógico do sub-módulo nas suas entradas de configuração, a menos que `--name` seja utilizado para definir um nome lógico."

#. type: Plain text
#: en/git-submodule.txt:74
#, priority:220
msgid "The given URL is recorded into `.gitmodules` for use by subsequent users cloning the superproject. If the URL is given relative to the superproject's repository, the presumption is the superproject and submodule repositories will be kept together in the same relative location, and only the superproject's URL needs to be provided.  git-submodule will correctly locate the submodule using the relative URL in `.gitmodules`."
msgstr "A URL informada é registrada no `.gitmodules` para a utilização dos subsequentes usuários que clonam o superprojeto. Caso a URL seja informada com relação ao repositório do superprojeto, a presunção que os repositórios do superprojeto e dos submódulos serão mantidos juntos, peóximos do mesmo local, somente a URL do superprojeto precisará ser informada.  O comando `git-submodule` localizará corretamente o submódulo utilizando uma URL relativa em `.gitmodules`."

#. type: Labeled list
#: en/git-submodule.txt:75
#, ignore-ellipsis, no-wrap, priority:220
msgid "status [--cached] [--recursive] [--] [<path>...]"
msgstr "status [--cached] [--recursive] [--] [<caminho>...]"

#. type: Plain text
#: en/git-submodule.txt:83
#, priority:220
msgid "Show the status of the submodules. This will print the SHA-1 of the currently checked out commit for each submodule, along with the submodule path and the output of 'git describe' for the SHA-1. Each SHA-1 will possibly be prefixed with `-` if the submodule is not initialized, `+` if the currently checked out submodule commit does not match the SHA-1 found in the index of the containing repository and `U` if the submodule has merge conflicts."
msgstr "Exiba a condição geral dos submódulos. Irá exibir o SHA-1 do commit registrado atualmente para cada submódulo, junto com o caminho do submódulo e a saída do comando 'git description' para o SHA-1. Cada SHA-1 provavelmente será prefixado com `-` caso o submódulo não seja inicializado,`+` caso o commit verificado do submódulo atual não coincida com o SHA-1 encontrado no índice do repositório que contenha o `U` caso o submódulo tenha conflitos de mesclagem."

#. type: Plain text
#: en/git-submodule.txt:86
#, priority:220
msgid "If `--cached` is specified, this command will instead print the SHA-1 recorded in the superproject for each submodule."
msgstr "Caso a opção `--cached` seja utilizado, este comando exibirá o SHA-1 registrado no superprojeto para cada sub-módulo."

#. type: Plain text
#: en/git-submodule.txt:89
#, priority:220
msgid "If `--recursive` is specified, this command will recurse into nested submodules, and show their status as well."
msgstr "Caso `--recursive` seja utilizado, este comando será recusado no submódulos aninhados e exibirá a sua condição geral também."

#. type: Plain text
#: en/git-submodule.txt:94
#, priority:220
msgid "If you are only interested in changes of the currently initialized submodules with respect to the commit recorded in the index or the HEAD, linkgit:git-status[1] and linkgit:git-diff[1] will provide that information too (and can also report changes to a submodule's work tree)."
msgstr "Caso apenas tenha interesse nas alterações dos submódulos inicializados no momento em relação ao commit registrado no índice ou no HEAD, o linkgit:git-status[1] e o linkgit:git-diff[1] também disponibilizarão essas informações (e podem também relatar as alterações na árvore de trabalho de um submódulo)."

#. type: Labeled list
#: en/git-submodule.txt:95
#, ignore-ellipsis, no-wrap, priority:220
msgid "init [--] [<path>...]"
msgstr "init [--] [<caminho>...]"

#. type: Plain text
#: en/git-submodule.txt:102
#, priority:220
msgid "Initialize the submodules recorded in the index (which were added and committed elsewhere) by setting `submodule.$name.url` in .git/config. It uses the same setting from `.gitmodules` as a template. If the URL is relative, it will be resolved using the default remote. If there is no default remote, the current repository will be assumed to be upstream."
msgstr "Inicialize os submódulos registrados no índice (que foram adicionados e onde os commits foram feitos em outros lugares) configurando o `submodule.$name.url` no `.git/config`. Ele usa a mesma configuração do `.gitmodules` como um modelo. Caso a URL seja relativa, será resolvido utilizando ramo remoto predefinido. Caso não nenhum ramo remoto seja predefinido, o repositório atual será reconhecido como sendo a upstream."

#. type: Plain text
#: en/git-submodule.txt:107
#, priority:220
msgid "Optional <path> arguments limit which submodules will be initialized.  If no path is specified and submodule.active has been configured, submodules configured to be active will be initialized, otherwise all submodules are initialized."
msgstr "Os argumentos opcionais do `<caminho>` limitam quais foram os submódulos que serão inicializados.  Caso nenhum caminho seja informado e o `submodule.active` tenha sido configurado, apenas os submódulos configurados para estarem ativos serão inicializados, caso contrário, todos os submódulos serão."

#. type: Plain text
#: en/git-submodule.txt:115
#, priority:220
msgid "When present, it will also copy the value of `submodule.$name.update`.  This command does not alter existing information in .git/config.  You can then customize the submodule clone URLs in .git/config for your local setup and proceed to `git submodule update`; you can also just use `git submodule update --init` without the explicit 'init' step if you do not intend to customize any submodule locations."
msgstr "Quando presente, também copiará o valor do `submodule.$name.update`.  Este comando não altera as informações existentes no `.git/config`. É possível personalizar os clones dos submódulos das URLs no `.git/config` para sua configuração local e prosseguir para o `git submodule update`; tamém é possível utilizar o `git submodule update --init` sem a etapa 'init' de forma explícita caso não pretenda personalizar nenhum local do submodule."

#. type: Plain text
#: en/git-submodule.txt:117
#, priority:220
msgid "See the add subcommand for the definition of default remote."
msgstr "Consulte o subcomando `add` para obter a definição predefinida do ramo remoto."

#. type: Labeled list
#: en/git-submodule.txt:118
#, ignore-ellipsis, no-wrap, priority:220
msgid "deinit [-f|--force] (--all|[--] <path>...)"
msgstr "deinit [-f|--force] (--all|[--] <caminho>...)"

#. type: Plain text
#: en/git-submodule.txt:125
#, priority:220
msgid "Unregister the given submodules, i.e. remove the whole `submodule.$name` section from .git/config together with their work tree. Further calls to `git submodule update`, `git submodule foreach` and `git submodule sync` will skip any unregistered submodules until they are initialized again, so use this command if you don't want to have a local checkout of the submodule in your working tree anymore."
msgstr "Cancele o registro dos submódulos informado, ou seja, remova toda a seção `submodule.$name` do `.git/config` junto com a sua árvore de trabalho. Outras futuras chamadas para o comando `git submodule update`, `git submodule foreach` e `git submodule sync` irão ignorar todos os submódulos não registrados até que sejam inicializados novamente, então utilize este comando caso não queira mais fazer uma verificação do submódulo na sua árvore de trabalho local."

#. type: Plain text
#: en/git-submodule.txt:128
#, priority:220
msgid "When the command is run without pathspec, it errors out, instead of deinit-ing everything, to prevent mistakes."
msgstr "O comando exibe um erro quando for executado sem o `pathspec` em vez de cancelar a inicialização de tudo, evitando erros."

#. type: Plain text
#: en/git-submodule.txt:131
#, priority:220
msgid "If `--force` is specified, the submodule's working tree will be removed even if it contains local modifications."
msgstr "Caso `--force` seja utilizado, a árvore de trabalho do submódulo será removida, mesmo que contenha alterações locais."

#. type: Plain text
#: en/git-submodule.txt:135
#, priority:220
msgid "If you really want to remove a submodule from the repository and commit that use linkgit:git-rm[1] instead. See linkgit:gitsubmodules[7] for removal options."
msgstr "Caso realmente deseja remover um submódulo do repositório e fazer o commit em vez disso utilize linkgit:git-rm[1] Para opções de remoção consulte linkgit:gitsubmodules[7]."

#. type: Labeled list
#: en/git-submodule.txt:136
#, ignore-ellipsis, no-wrap, priority:220
msgid "update [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference <repository>] [--depth <depth>] [--recursive] [--jobs <n>] [--[no-]single-branch] [--filter <filter spec>] [--] [<path>...]"
msgstr "update [--init] [--remote] [-N|--no-fetch] [--[no-]recommend-shallow] [-f|--force] [--checkout|--rebase|--merge] [--reference <repositório>] [--depth <profundidade>] [--recursive] [--jobs <n>] [--[no-]single-branch] [--filter <filter spec>] [--] [<caminho>...]"

#. type: Plain text
#: en/git-submodule.txt:148
#, priority:220
msgid "Update the registered submodules to match what the superproject expects by cloning missing submodules, fetching missing commits in submodules and updating the working tree of the submodules. The \"updating\" can be done in several ways depending on command line options and the value of `submodule.<name>.update` configuration variable. The command line option takes precedence over the configuration variable. If neither is given, a 'checkout' is performed.  The 'update' procedures supported both from the command line as well as through the `submodule.<name>.update` configuration are:"
msgstr "Atualize os submódulos registrados para que coincidam com o que o superprojeto espera, clonando os submódulos ausentes, capturando os commit que estejam ausentes nos submódulos e atualizando a árvore de trabalho dos submódulos. A \"atualização\" pode ser feita de várias maneiras, dependendo das opções da linha de comando e do valor da variável de configuração `submodule.<nome>.update`. A opção da linha de comando tem precedência sobre a variável de configuração. Caso nenhum seja informado, um 'checkout' é realizado.  Os procedimentos de 'atualização' compatíveis tanto na linha de comando quanto na configuração `submodule.<nome>.update` são:"

#. type: Labeled list
#: en/git-submodule.txt:149
#, no-wrap, priority:220
msgid "checkout"
msgstr "checkout"

#. type: Plain text
#: en/git-submodule.txt:151
#, priority:220
msgid "the commit recorded in the superproject will be checked out in the submodule on a detached HEAD."
msgstr "o commit registrado no superprojeto será verificado no submódulo do HEAD desanexado."

#. type: Plain text
#: en/git-submodule.txt:156
#, priority:220
msgid "If `--force` is specified, the submodule will be checked out (using `git checkout --force`), even if the commit specified in the index of the containing repository already matches the commit checked out in the submodule."
msgstr "Caso a opção `--force` utilizado, o submódulo será averiguado (utilizando `git checkout --force`), mesmo que o commit definido no índice do repositório que o contenha já coincida com os commits que já foram verificados."

#. type: Labeled list
#: en/git-submodule.txt:157
#, no-wrap, priority:220
msgid "rebase"
msgstr "rebase"

#. type: Plain text
#: en/git-submodule.txt:159
#, priority:220
msgid "the current branch of the submodule will be rebased onto the commit recorded in the superproject."
msgstr "a fundação do submódulo do ramo atual será refeito no commit registrado no superproject."

#. type: Plain text
#: en/git-submodule.txt:162
#, priority:220
msgid "the commit recorded in the superproject will be merged into the current branch in the submodule."
msgstr "o commit registrado no superprojeto será mesclado no submódulo do ramo atual."

#. type: Plain text
#: en/git-submodule.txt:165
#, priority:220
msgid "The following 'update' procedures are only available via the `submodule.<name>.update` configuration variable:"
msgstr "Os seguintes procedimentos de 'atualização' estão disponíveis apenas através da variável de configuração `submodule.<nome>.update`:"

#. type: Labeled list
#: en/git-submodule.txt:166
#, no-wrap, priority:220
msgid "custom command"
msgstr "comando personalizado"

#. type: Plain text
#: en/git-submodule.txt:171
#, priority:220
msgid "arbitrary shell command that takes a single argument (the sha1 of the commit recorded in the superproject) is executed. When `submodule.<name>.update` is set to '!command', the remainder after the exclamation mark is the custom command."
msgstr "um comand shell arbitrário que usa um simples argumento (o sha1 do commit registrado no superprojeto) é executado. Quando o `submodule.<nome>.update` é definido como '!command', o comando personalizado é o que sobra após o ponto de exclamação."

#. type: Plain text
#: en/git-submodule.txt:173
#, priority:220
msgid "the submodule is not updated."
msgstr "o submódulo não é atualizado."

#. type: Plain text
#: en/git-submodule.txt:177
#, priority:220
msgid "If the submodule is not yet initialized, and you just want to use the setting as stored in `.gitmodules`, you can automatically initialize the submodule with the `--init` option."
msgstr "Se o submódulo ainda não foi inicializado e você apenas deseja utilizar a configuração armazenada no `.gitmodules`, você pode inicializar automaticamente o submódulo com a opção `--init`."

#. type: Plain text
#: en/git-submodule.txt:180
#, priority:220
msgid "If `--recursive` is specified, this command will recurse into the registered submodules, and update any nested submodules within."
msgstr "Caso a opção `--recursive` seja utilizada, este comando recursará nos submódulos registrados e atualizará todos os submódulos aninhados."

#. type: Plain text
#: en/git-submodule.txt:184
#, priority:220
msgid "If `--filter <filter spec>` is specified, the given partial clone filter will be applied to the submodule. See linkgit:git-rev-list[1] for details on filter specifications."
msgstr "Caso a opção `--filter <filter spec>` seja especificada, o filtro de clonagem parcial fornecido será aplicado ao submódulo. Consulte linkgit:git-rev-list[1] para obter mais detalhes sobre as especificações do filtro."

#. type: Labeled list
#: en/git-submodule.txt:185
#, no-wrap, priority:220
msgid "set-branch (-b|--branch) <branch> [--] <path>"
msgstr "set-branch (-b|--branch) <ramo> [--] <caminho>"

#. type: Labeled list
#: en/git-submodule.txt:186
#, no-wrap, priority:220
msgid "set-branch (-d|--default) [--] <path>"
msgstr "set-branch (-d|--default) [--] <caminho>"

#. type: Plain text
#: en/git-submodule.txt:191
#, priority:220
msgid "Sets the default remote tracking branch for the submodule. The `--branch` option allows the remote branch to be specified. The `--default` option removes the submodule.<name>.branch configuration key, which causes the tracking branch to default to the remote 'HEAD'."
msgstr "Define o submódulo como predefinido nos ramos monitorados remotamente. A opção `--branch` permite que o nome do ramo remoto seja definido. A opção `--default` remove a chave da configuração `submodule.<nome>.branch`, que faz com que a predefinição do ramo monitorado seja o 'HEAD' remoto."

#. type: Labeled list
#: en/git-submodule.txt:192
#, no-wrap, priority:220
msgid "set-url [--] <path> <newurl>"
msgstr "set-url [--] <caminho> <newurl>"

#. type: Plain text
#: en/git-submodule.txt:196
#, priority:220
msgid "Sets the URL of the specified submodule to <newurl>. Then, it will automatically synchronize the submodule's new remote URL configuration."
msgstr "Define a URL do submódulo informado para `<newurl>` . Em seguida, sincronize automaticamente a nova configuração da URL remota do submódulo."

#. type: Labeled list
#: en/git-submodule.txt:197
#, ignore-ellipsis, no-wrap, priority:220
msgid "summary [--cached|--files] [(-n|--summary-limit) <n>] [commit] [--] [<path>...]"
msgstr "summary [--cached|--files] [(-n|--summary-limit) <n>] [commit] [--] [<caminho>...]"

#. type: Plain text
#: en/git-submodule.txt:206
#, priority:220
msgid "Show commit summary between the given commit (defaults to HEAD) and working tree/index. For a submodule in question, a series of commits in the submodule between the given super project commit and the index or working tree (switched by `--cached`) are shown. If the option `--files` is given, show the series of commits in the submodule between the index of the super project and the working tree of the submodule (this option doesn't allow to use the `--cached` option or to provide an explicit commit)."
msgstr "Exiba o resumo do commit entre o commit informado (a predefinição retorna para `HEAD`) e a árvore de trabalho/índice. Para um submódulo em questão, são exibidas uma série de commit do submódulo entre o commit do super projeto e o índice ou a árvore de trabalho (alternada por `--cached`). Caso a opção `--files` seja utilizada, exiba a série dos commits no submódulo entre o índice do super projeto e a árvore de trabalho do submódulo (esta opção não permite a utilização da opção `--cached` ou para informar um commit de forma explícita)."

#. type: Plain text
#: en/git-submodule.txt:209
#, priority:220
msgid "Using the `--submodule=log` option with linkgit:git-diff[1] will provide that information too."
msgstr "O uso da opção `--submodule=log` com linkgit:git-diff[1] também fornecerá estas informações."

#. type: Labeled list
#: en/git-submodule.txt:210
#, no-wrap, priority:220
msgid "foreach [--recursive] <command>"
msgstr "foreach [--recursive] <comando>"

#. type: Plain text
#: en/git-submodule.txt:231
#, priority:220
msgid "Evaluates an arbitrary shell command in each checked out submodule.  The command has access to the variables $name, $sm_path, $displaypath, $sha1 and $toplevel: $name is the name of the relevant submodule section in `.gitmodules`, $sm_path is the path of the submodule as recorded in the immediate superproject, $displaypath contains the relative path from the current working directory to the submodules root directory, $sha1 is the commit as recorded in the immediate superproject, and $toplevel is the absolute path to the top-level of the immediate superproject.  Note that to avoid conflicts with '$PATH' on Windows, the '$path' variable is now a deprecated synonym of '$sm_path' variable.  Any submodules defined in the superproject but not checked out are ignored by this command. Unless given `--quiet`, foreach prints the name of each submodule before evaluating the command.  If `--recursive` is given, submodules are traversed recursively (i.e.  the given shell command is evaluated in nested submodules as well).  A non-zero return from the command in any submodule causes the processing to terminate. This can be overridden by adding '|| :' to the end of the command."
msgstr "Avalia um comando arbitrário do shell em cada sub-módulo averiguado.  O comando tem acesso às variáveis `$name`, `$sm_path`, `$displaypath`, `$sha1` e `$toplevel`: '$name' é o nome da seção do submódulo relevante no `.gitmodules`, '$sm_path' é o caminho do submódulo conforme foi diretamente registrado no superprojeto, '$displaypath' contém o caminho relativo do diretório de trabalho atual para o diretório raiz dos sub-módulos, '$sha1' é o commit conforme registrado diretamente no superprojeto e '$toplevel' é o caminho absoluto e direto para o nível mais alto do superprojeto.  Observe que para evitar conflitos com '$ PATH' no Windows, a variável '$path' agora é um sinônimo obsoleto da variável '$sm_path'.  Todos os submódulos definidos no superprojeto, mas sem averiguação, são ignorados por este comando. A menos que seja utilizado a opção `--quiet`, o 'foreach' imprime o nome de cada submódulo antes de avaliar o comando.  Caso a opção `--recursive` seja utilizada, os submódulos serão percorridos de forma recursiva (ou seja, o comando shell informado também será avaliado nos submódulos aninhados).  Um retorno do comando diferente de zero em qualquer submódulo, faz com que o processamento seja finalizado. Isso pode ser alterado adicionando '|| :' até o final do comando."

#. type: Plain text
#: en/git-submodule.txt:234
#, priority:220
msgid "As an example, the command below will show the path and currently checked out commit for each submodule:"
msgstr "Como um exemplo, o comando abaixo exibirá o caminho e a averiguação atual do commit para cada submódulo:"

#. type: delimited block -
#: en/git-submodule.txt:237
#, no-wrap, priority:220
msgid "git submodule foreach 'echo $sm_path `git rev-parse HEAD`'\n"
msgstr "git submodule foreach 'echo $sm_path `git rev-parse HEAD`'\n"

#. type: Labeled list
#: en/git-submodule.txt:239
#, ignore-ellipsis, no-wrap, priority:220
msgid "sync [--recursive] [--] [<path>...]"
msgstr "sync [--recursive] [--] [<caminho>...]"

#. type: Plain text
#: en/git-submodule.txt:246
#, priority:220
msgid "Synchronizes submodules' remote URL configuration setting to the value specified in `.gitmodules`. It will only affect those submodules which already have a URL entry in .git/config (that is the case when they are initialized or freshly added). This is useful when submodule URLs change upstream and you need to update your local repositories accordingly."
msgstr "Sincroniza a configuração da URL remota dos submódulos com o valor definido em `.gitmodules`. Afetará apenas os submódulos que já possuem uma entrada da URL no `.git/config` (é o caso quando eles são inicializados ou foram adicionados recentemente). É útil quando as URLs do submódulo mudam a upstream e você precisa atualizar os seus repositórios locais de acordo."

#. type: Plain text
#: en/git-submodule.txt:249
#, priority:220
msgid "`git submodule sync` synchronizes all submodules while `git submodule sync -- A` synchronizes submodule \"A\" only."
msgstr "O comando `git submodule sync` sincroniza todos os submódulos enquanto o comando `git submodule sync - A` sincroniza apenas o submódulo \"A\"."

#. type: Plain text
#: en/git-submodule.txt:252
#, priority:220
msgid "If `--recursive` is specified, this command will recurse into the registered submodules, and sync any nested submodules within."
msgstr "Caso a opção `--recursive` seja utilizada, este comando recursará nos submódulos registrados e sincronizará todos os submódulos aninhados."

#. type: Labeled list
#: en/git-submodule.txt:253
#, no-wrap, priority:220
msgid "absorbgitdirs"
msgstr "absorbgitdirs"

#. type: Plain text
#: en/git-submodule.txt:260
#, priority:220
msgid "If a git directory of a submodule is inside the submodule, move the git directory of the submodule into its superproject's `$GIT_DIR/modules` path and then connect the git directory and its working directory by setting the `core.worktree` and adding a .git file pointing to the git directory embedded in the superprojects git directory."
msgstr "Caso um diretório git de um submódulo estiver dentro dele, mova o diretório git do submódulo para o caminho `$GIT_DIR/modules` do superprojeto, conecte o diretório git, o seu diretório de trabalho, definindo `core.worktree` e adicionando um Arquivo .git apontando para o diretório git incorporado no diretório git dos superprojetos."

#. type: Plain text
#: en/git-submodule.txt:264
#, priority:220
msgid "A repository that was cloned independently and later added as a submodule or old setups have the submodules git directory inside the submodule instead of embedded into the superprojects git directory."
msgstr "Um repositório que foi clonado de forma independente e posteriormente adicionado como um submódulo ou com configurações antigas, que possua o diretório git dentro do submódulo, em vez de estar incorporado ao diretório git dos superprojetos."

#. type: Plain text
#: en/git-submodule.txt:266
#, priority:220
msgid "This command is recursive by default."
msgstr "A predefinição deste comando é ser recursivo."

#. type: Plain text
#: en/git-submodule.txt:272
#, priority:220
msgid "Only print error messages."
msgstr "Exiba apenas as mensagens de erro."

#. type: Plain text
#: en/git-submodule.txt:279
#, priority:220
msgid "This option is only valid for add and update commands.  Progress status is reported on the standard error stream by default when it is attached to a terminal, unless -q is specified. This flag forces progress status even if the standard error stream is not directed to a terminal."
msgstr "Esta opção só é válida para os comandos `add` e `update`.  É predefinido que a condição geral do progresso seja relatada no fluxo de erros quando estiver conectado em um terminal, a menos que `-q` seja utilizado. Esta opção impõem a condição geral do progresso, mesmo que o fluxo de erro predefinido não seja direcionado para um terminal."

#. type: Plain text
#: en/git-submodule.txt:283
#, priority:220
msgid "This option is only valid for the deinit command. Unregister all submodules in the working tree."
msgstr "Esta opção só é válida para o comando `deinit`. Cancele o registro de todos os submódulos na árvore de trabalho."

#. type: Labeled list
#: en/git-submodule.txt:284
#, no-wrap, priority:220
msgid "-b <branch>"
msgstr "-b <ramo>"

#. type: Plain text
#: en/git-submodule.txt:292
#, priority:220
msgid "Branch of repository to add as submodule.  The name of the branch is recorded as `submodule.<name>.branch` in `.gitmodules` for `update --remote`.  A special value of `.` is used to indicate that the name of the branch in the submodule should be the same name as the current branch in the current repository.  If the option is not specified, it defaults to the remote 'HEAD'."
msgstr "O ramo do repositório para ser adicionado como um submódulo.  O nome do ramo é registrado como `submodule.<nome>.branch` no `.gitmodules` para `update --remote`.  Um valor especial de `.` é utilizado para indicar que o nome do ramo no submódulo deve ser o mesmo nome como o da ramificação atual, no repositório atual.  Caso a opção não seja utilizada, a predefinição retorna para o 'HEAD' remoto."

#. type: Plain text
#: en/git-submodule.txt:305
#, priority:220
msgid "This option is only valid for add, deinit and update commands.  When running add, allow adding an otherwise ignored submodule path.  When running deinit the submodule working trees will be removed even if they contain local changes.  When running update (only effective with the checkout procedure), throw away local changes in submodules when switching to a different commit; and always run a checkout operation in the submodule, even if the commit listed in the index of the containing repository matches the commit checked out in the submodule."
msgstr "Esta opção só é válida para os comandos `add`, `deinit` e `update`.  Ao executar `add`, permita adicionar um caminho ignorado do submódulo.  Ao executar o `deinit`, as árvores de trabalho do submódulo serão removidos mesmo que contenham alterações locais.  Ao executar `update` (efetiva apenas com o procedimento de averiguação), descarte as alterações locais nos submódulos durante a alternância para um commit diferente; sempre execute uma operação de averiguação no submódulo, mesmo que o commit listado no índice do repositório coincida com o commit averiguado no submódulo."

#. type: Plain text
#: en/git-submodule.txt:310
#, priority:220
msgid "This option is only valid for status and summary commands.  These commands typically use the commit found in the submodule HEAD, but with this option, the commit stored in the index is used instead."
msgstr "Esta opção só é válida para os comandos `status` e `summary`.  Esses comandos normalmente utilizam o commit encontrado no submódulo `HEAD`, porém o commit armazenado no índice que é utilizado em seu lugar."

#. type: Labeled list
#: en/git-submodule.txt:311
#, ignore-same, no-wrap, priority:220
msgid "--files"
msgstr "--files"

#. type: Plain text
#: en/git-submodule.txt:315
#, priority:220
msgid "This option is only valid for the summary command. This command compares the commit in the index with that in the submodule HEAD when this option is used."
msgstr "Esta opção só é válida para o comando `summary`. Quando esta opção é utilizada o comando compara o commit no índice em conjunto com o que está no submódulo `HEAD`."

#. type: Labeled list
#: en/git-submodule.txt:317
#, ignore-same, no-wrap, priority:220
msgid "--summary-limit"
msgstr "--summary-limit"

#. type: Plain text
#: en/git-submodule.txt:323
#, priority:220
msgid "This option is only valid for the summary command.  Limit the summary size (number of commits shown in total).  Giving 0 will disable the summary; a negative number means unlimited (the default). This limit only applies to modified submodules. The size is always limited to 1 for added/deleted/typechanged submodules."
msgstr "Esta opção só é válida para o comando `summary`.  Limite o tamanho do resumo (quantidade de commits exibidos no total).  O número 0 desativa o resumo; um número negativo significa ilimitado (já predefinido). Este limite se aplica apenas aos submódulos modificados. O tamanho é sempre limitado a 1 para os submódulos adicionado/excluído/tipo alterado."

#. type: Labeled list
#: en/git-submodule.txt:324
#, ignore-same, no-wrap, priority:220
msgid "--remote"
msgstr "--remote"

#. type: Plain text
#: en/git-submodule.txt:333
#, priority:220
msgid "This option is only valid for the update command.  Instead of using the superproject's recorded SHA-1 to update the submodule, use the status of the submodule's remote-tracking branch.  The remote used is branch's remote (`branch.<name>.remote`), defaulting to `origin`.  The remote branch used defaults to the remote `HEAD`, but the branch name may be overridden by setting the `submodule.<name>.branch` option in either `.gitmodules` or `.git/config` (with `.git/config` taking precedence)."
msgstr "Esta opção só é válida para o comando update.  Em vez de utilizar o SHA-1 registrado no superprojeto para atualizar o submódulo, utilize a condição geral do submódulo do ramo monitorado remotamente.  O ramo remoto utilizado é o ramo (`branch.<nome>.remote`)  predefinido para `origin`.  O ramo remoto costumava retornar para o `HEAD` remoto, porém o nome do ramo pode ser substituído ao definir a opção `submodule.<nome>.branch` ou entre `.gitmodules` ou `.git/config` (onde `.git/config` tem prioridade)."

#. type: Plain text
#: en/git-submodule.txt:339
#, priority:220
msgid "This works for any of the supported update procedures (`--checkout`, `--rebase`, etc.).  The only change is the source of the target SHA-1.  For example, `submodule update --remote --merge` will merge upstream submodule changes into the submodules, while `submodule update --merge` will merge superproject gitlink changes into the submodules."
msgstr "Funciona para qualquer um dos procedimentos compatíveis de atualização (`--checkout`, `--rebase`, etc.).  A única alteração é a origem do SHA-1 do destino.  Por exemplo, `submodule update --remote --merge` mesclará as alterações iniciais do submódulo nos submódulos, enquanto `submodule update --merge` mesclará as alterações do 'gitlink' do superprojeto nos submódulos."

#. type: Plain text
#: en/git-submodule.txt:344
#, priority:220
msgid "In order to ensure a current tracking branch state, `update --remote` fetches the submodule's remote repository before calculating the SHA-1.  If you don't want to fetch, you should use `submodule update --remote --no-fetch`."
msgstr "Para garantir uma condição de monitoramento da ramificação atual, `update --remote` captura o repositório remoto do submódulo antes de calcular o seu SHA-1.  Caso não queira capturar, utilize `submodule update --remote --no-fetch`."

#. type: Plain text
#: en/git-submodule.txt:354
#, priority:220
msgid "Use this option to integrate changes from the upstream subproject with your submodule's current HEAD.  Alternatively, you can run `git pull` from the submodule, which is equivalent except for the remote branch name: `update --remote` uses the default upstream repository and `submodule.<name>.branch`, while `git pull` uses the submodule's `branch.<name>.merge`.  Prefer `submodule.<name>.branch` if you want to distribute the default upstream branch with the superproject and `branch.<name>.merge` if you want a more native feel while working in the submodule itself."
msgstr "Use esta opção para integrar as alterações a partir do subprojeto upstream ao `HEAD` atual do seu submódulo.  Como alternativa, você pode executar o comando `git pull` a partir do submódulo, que é equivalente, exceto pelo nome do ramo remoto: `update --remote` utiliza o repositório upstream predefinido e `submodule.<nome>.branch`, enquanto `git pull` utiliza o submódulo `branch.<nome>.merge`.  Prefira o `submodule.<nome>.branch` caso queira distribuir a ramificação upstream predefinido com o superprojeto e `branch.<nome>.merge` caso queira uma sensação mais nativa ao trabalhar no próprio submódulo."

#. type: Labeled list
#: en/git-submodule.txt:356
#, ignore-same, no-wrap, priority:220
msgid "--no-fetch"
msgstr "--no-fetch"

#. type: Plain text
#: en/git-submodule.txt:359
#, priority:220
msgid "This option is only valid for the update command.  Don't fetch new objects from the remote site."
msgstr "Esta opção só é válida para o comando `update`.  Não capture os novos objetos do site remoto."

#. type: Labeled list
#: en/git-submodule.txt:360
#, ignore-same, no-wrap, priority:220
msgid "--checkout"
msgstr "--checkout"

#. type: Plain text
#: en/git-submodule.txt:368
#, priority:220
msgid "This option is only valid for the update command.  Checkout the commit recorded in the superproject on a detached HEAD in the submodule. This is the default behavior, the main use of this option is to override `submodule.$name.update` when set to a value other than `checkout`.  If the key `submodule.$name.update` is either not explicitly set or set to `checkout`, this option is implicit."
msgstr "Esta opção só é válida para o comando `update`.  Faça a averiguação do commit registrado no superprojeto em um `HEAD` desanexado no submódulo. Este é o comportamento predefinido, a utilização principal desta opção é substituir o `submodule.$name.update` quando definido como um valor diferente do `checkout`.  Caso a chave do `submodule.$name.update` não esteja nem explicitamente configurada ou definida com `checkout` (para averiguação), então esta opção se torna implícita."

#. type: Plain text
#: en/git-submodule.txt:378
#, priority:220
msgid "This option is only valid for the update command.  Merge the commit recorded in the superproject into the current branch of the submodule. If this option is given, the submodule's HEAD will not be detached. If a merge failure prevents this process, you will have to resolve the resulting conflicts within the submodule with the usual conflict resolution tools.  If the key `submodule.$name.update` is set to `merge`, this option is implicit."
msgstr "Esta opção só é válida para o comando `update`.  Mescle o commit registrado no superprojeto do ramo atual do submódulo. Caso esta opção seja utilizada, o `HEAD` do submódulo não será desconectado. Caso uma mesclagem falhe e interrompa este processo, será necessário resolver os conflitos resultantes no submódulo com as ferramentas habituais da resolução de conflitos.  Caso a chave `submodule.$name.update` esteja configurada para `mesclar`, então esta opção se torna implícita."

#. type: Labeled list
#: en/git-submodule.txt:379
#, ignore-same, no-wrap, priority:220
msgid "--rebase"
msgstr "--rebase"

#. type: Plain text
#: en/git-submodule.txt:387
#, priority:220
msgid "This option is only valid for the update command.  Rebase the current branch onto the commit recorded in the superproject. If this option is given, the submodule's HEAD will not be detached. If a merge failure prevents this process, you will have to resolve these failures with linkgit:git-rebase[1].  If the key `submodule.$name.update` is set to `rebase`, this option is implicit."
msgstr "Esta opção só é válida para o comando `update`.  Reorganize a fundação do ramo atual no commit registrado no superprojeto. Caso esta opção seja utilizada, o `HEAD` do submódulo não será desconectado. Caso uma mesclagem falhe e interrompa este processo, será necessário resolver os conflitos resultantes com linkgit:git-rebase[1].  Caso a chave `submodule.$name.update` esteja definida como `rebase`, então esta opção se torna implícita."

#. type: Labeled list
#: en/git-submodule.txt:388
#, ignore-same, no-wrap, priority:220
msgid "--init"
msgstr "--init"

#. type: Plain text
#: en/git-submodule.txt:392
#, priority:220
msgid "This option is only valid for the update command.  Initialize all submodules for which \"git submodule init\" has not been called so far before updating."
msgstr "Esta opção só é válida para o comando `update`.  Inicialize todos os submódulos para os quais o comando \"git submodule init\" não foi chamado até o momento antes da atualização."

#. type: Labeled list
#: en/git-submodule.txt:393
#, ignore-same, no-wrap, priority:220
msgid "--name"
msgstr "--name"

#. type: Plain text
#: en/git-submodule.txt:397
#, priority:220
msgid "This option is only valid for the add command. It sets the submodule's name to the given string instead of defaulting to its path. The name must be valid as a directory name and may not end with a '/'."
msgstr "Esta opção só é válida para o comando `add`. Define o nome do submódulo para a carreira de caracteres informada em vez de padronizar o seu caminho. O nome deve ser válido como um nome de diretório e não pode terminar com um '/'."

#. type: Labeled list
#: en/git-submodule.txt:398
#, no-wrap, priority:220
msgid "--reference <repository>"
msgstr "--reference <repositório>"

#. type: Plain text
#: en/git-submodule.txt:402 en/git-submodule.txt:411
#, priority:220
msgid "This option is only valid for add and update commands.  These commands sometimes need to clone a remote repository. In this case, this option will be passed to the linkgit:git-clone[1] command."
msgstr "Esta opção só é válida para os comandos `add` e `update`.  Às vezes estes comandos precisam clonar um repositório remoto. Neste caso, esta opção será passada ao comando linkgit:git-clone[1]."

#. type: Plain text
#: en/git-submodule.txt:406
#, no-wrap, priority:220
msgid ""
"*NOTE*: Do *not* use this option unless you have read the note\n"
"for linkgit:git-clone[1]'s `--reference`, `--shared`, and `--dissociate`\n"
"options carefully.\n"
msgstr ""
"*OBSERVAÇÃO*: *Jamais* utilize esta opção, a menos que você tenha lido as observações para\n"
"as opções linkgit:git-clone[1]'s `--reference`, `--shared`, e `--dissociate`\n"
"com muita atenção.\n"

#. type: Plain text
#: en/git-submodule.txt:413
#, no-wrap, priority:220
msgid "*NOTE*: see the NOTE for the `--reference` option.\n"
msgstr "*OBSERVAÇÃO*: Consulte a OBSERVAÇÃO para a opção `--reference`.\n"

#. type: Plain text
#: en/git-submodule.txt:419
#, priority:220
msgid "This option is only valid for foreach, update, status and sync commands.  Traverse submodules recursively. The operation is performed not only in the submodules of the current repo, but also in any nested submodules inside those submodules (and so on)."
msgstr "Esta opção só é válida para os comandos `foreach`, `update`, `status` e `sync`.  Transponha os submódulos recursivamente. A operação é executada não apenas nos submódulos do repositório atual, mas também em qualquer outro submódulo aninhado dentro desses submódulos (e assim por diante)."

#. type: Labeled list
#: en/git-submodule.txt:420
#, ignore-same, no-wrap, priority:220
msgid "--depth"
msgstr "--depth"

#. type: Plain text
#: en/git-submodule.txt:424
#, priority:220
msgid "This option is valid for add and update commands. Create a 'shallow' clone with a history truncated to the specified number of revisions.  See linkgit:git-clone[1]"
msgstr "Esta opção é válida para os comandos `add` e `update`. Crie uma clonagem 'superficial' com um histórico truncado para uma quantidade determinada de revisões.  Consulte linkgit:git-clone[1]"

#. type: Labeled list
#: en/git-submodule.txt:425
#, ignore-same, no-wrap, priority:220
msgid "--[no-]recommend-shallow"
msgstr "--[no-]recommend-shallow"

#. type: Plain text
#: en/git-submodule.txt:430
#, priority:220
msgid "This option is only valid for the update command.  The initial clone of a submodule will use the recommended `submodule.<name>.shallow` as provided by the `.gitmodules` file by default. To ignore the suggestions use `--no-recommend-shallow`."
msgstr "Esta opção só é válida para o comando `update`.  O clone inicial de um submódulo por predefinição, utilizará o `submodule.<nome>.shallow` recomendado conforme é fornecido pelo arquivo `.gitmodules`. Para ignorar as sugestões, utilize `--no-recommend-shallow`."

#. type: Plain text
#: en/git-submodule.txt:436
#, priority:220
msgid "This option is only valid for the update command.  Clone new submodules in parallel with as many jobs.  Defaults to the `submodule.fetchJobs` option."
msgstr "Esta opção só é válida para o comando `update`.  Clone novos submódulos em paralelo com a mesmo quantidade de trabalhos.  A predefinição retorna para a configuração existente em `submodule.fetchJobs`."

#. type: Plain text
#: en/git-submodule.txt:440
#, priority:220
msgid "This option is only valid for the update command.  Clone only one branch during update: HEAD or one specified by --branch."
msgstr "Esta opção só é válida para o comando `update`.  Clone apenas uma ramificação durante a atualização: `HEAD` ou uma definida pela opção `--branch`."

#. type: Plain text
#: en/git-submodule.txt:445
#, priority:220
msgid "Paths to submodule(s). When specified this will restrict the command to only operate on the submodules found at the specified paths.  (This argument is required with add)."
msgstr "Caminhos para o submódulo(s). Quando for utilizado, restringe o comando a operar apenas nos submódulos encontrados nos caminhos informados.  (É obrigatório a utilização desta opção com o `add`)."

#. type: Plain text
#: en/git-submodule.txt:453
#, priority:220
msgid "When initializing submodules, a `.gitmodules` file in the top-level directory of the containing repository is used to find the url of each submodule.  This file should be formatted in the same way as `$GIT_DIR/config`. The key to each submodule url is \"submodule.$name.url\".  See linkgit:gitmodules[5] for details."
msgstr "Durante a atualização dos submódulos um arquivo `.gitmodules` fica no topo do diretório do repositório que o contenha, é utilizado para encontrar a URL de cada submódulo.  Este arquivo deve ser formatado da mesma maneira que `$GIT_DIR/config`. A chave para cada URL do submódulo é `submodule.$name.url`.  Para mais detalhes consulte linkgit:gitmodules[5]."

#. type: Plain text
#: en/git-submodule.txt:457
#, ignore-same, priority:220
msgid "linkgit:gitsubmodules[7], linkgit:gitmodules[5]."
msgstr "linkgit:gitsubmodules[7], linkgit:gitmodules[5]."

#. type: Title =
#: en/git-svn.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-svn(1)"
msgstr "git-svn(1)"

#. type: Plain text
#: en/git-svn.txt:7
#, priority:100
msgid "git-svn - Bidirectional operation between a Subversion repository and Git"
msgstr "git-svn - Operação bidirecional entre um repositório do Subversion e o Git"

#. type: Plain text
#: en/git-svn.txt:12
#, no-wrap, priority:100
msgid "'git svn' <command> [<options>] [<arguments>]\n"
msgstr "'git svn' <comando> [<opções>] [<argumentos>]\n"

#. type: Plain text
#: en/git-svn.txt:18
#, priority:100
msgid "'git svn' is a simple conduit for changesets between Subversion and Git.  It provides a bidirectional flow of changes between a Subversion and a Git repository."
msgstr "'git svn' é um canal simples para os conjuntos das alterações entre o Subversion e o Git.  Ele fornece um fluxo bidirecional das alterações entre um Subversion e um repositório Git."

#. type: Plain text
#: en/git-svn.txt:23
#, priority:100
msgid "'git svn' can track a standard Subversion repository, following the common \"trunk/branches/tags\" layout, with the --stdlayout option.  It can also follow branches and tags in any layout with the -T/-t/-b options (see options to 'init' below, and also the 'clone' command)."
msgstr "O 'git svn' pode monitorar um repositório Subversion padrão, seguindo o layout comum \"trunk/branches/tags\", com a opção `--stdlayout`.  Ele também pode seguir as ramificações e as tags em qualquer layout com as opções '-T/-t/-b' (consulte as opções para 'init' abaixo e também para o comando 'clone')."

#. type: Plain text
#: en/git-svn.txt:27
#, priority:100
msgid "Once tracking a Subversion repository (with any of the above methods), the Git repository can be updated from Subversion by the 'fetch' command and Subversion updated from Git by the 'dcommit' command."
msgstr "Depois de monitorar um repositório Subversion (com qualquer um dos métodos acima), o repositório Git pode ser atualizado no Subversion através do comando 'fetch' e o Subversion atualizado no Git através do comando 'dcommit'."

#. type: Labeled list
#: en/git-svn.txt:31
#, ignore-same, no-wrap, priority:100
msgid "'init'"
msgstr "'init'"

#. type: Plain text
#: en/git-svn.txt:39
#, priority:100
msgid "Initializes an empty Git repository with additional metadata directories for 'git svn'.  The Subversion URL may be specified as a command-line argument, or as full URL arguments to -T/-t/-b.  Optionally, the target directory to operate on can be specified as a second argument.  Normally this command initializes the current directory."
msgstr "Inicializa um repositório Git vazio com diretórios de metadados adicionais para o 'git svn'.  A URL do Subversion pode ser utilizada como um argumento na linha de comando ou como uma URL completa para -T/-t/-b.  Opcionalmente, o diretório do destino para operar, pode ser definido como um segundo argumento.  Normalmente este comando inicializa o diretório atual."

#. type: Labeled list
#: en/git-svn.txt:40
#, no-wrap, priority:100
msgid "-T<trunk_subdir>"
msgstr "-T<trunk_subdir>"

#. type: Labeled list
#: en/git-svn.txt:41
#, no-wrap, priority:100
msgid "--trunk=<trunk_subdir>"
msgstr "--trunk=<trunk_subdir>"

#. type: Labeled list
#: en/git-svn.txt:42
#, no-wrap, priority:100
msgid "-t<tags_subdir>"
msgstr "-t<tags_subdir>"

#. type: Labeled list
#: en/git-svn.txt:43
#, no-wrap, priority:100
msgid "--tags=<tags_subdir>"
msgstr "--tags=<tags_subdir>"

#. type: Labeled list
#: en/git-svn.txt:44
#, no-wrap, priority:100
msgid "-b<branches_subdir>"
msgstr "-b<branches_subdir>"

#. type: Labeled list
#: en/git-svn.txt:45
#, no-wrap, priority:100
msgid "--branches=<branches_subdir>"
msgstr "--branches=<branches_subdir>"

#. type: Labeled list
#: en/git-svn.txt:47
#, ignore-same, no-wrap, priority:100
msgid "--stdlayout"
msgstr "--stdlayout"

#. type: Plain text
#: en/git-svn.txt:58
#, priority:100
msgid "These are optional command-line options for init.  Each of these flags can point to a relative repository path (--tags=project/tags) or a full url (--tags=https://foo.org/project/tags).  You can specify more than one --tags and/or --branches options, in case your Subversion repository places tags or branches under multiple paths.  The option --stdlayout is a shorthand way of setting trunk,tags,branches as the relative paths, which is the Subversion default. If any of the other options are given as well, they take precedence."
msgstr "Estas são opções opcionais de linha de comando para o init.  Cada uma destas opções pode apontar para um caminho relativo do repositório (`--tags=project/tags`) ou uma URL completa (`--tags=https://foo.org/project/tags`).  Você pode definir mais de uma opção `--tags` e/ou `--branches`, caso o repositório do Subversion coloque tags ou ramificações em vários caminhos.  A opção `--stdlayout` é uma maneira abreviada de configurar o trunks,tags,branches como os caminhos relativos, que é a predefinição do Subversion. Se qualquer uma das outras opções também for utilizada, elas terão precedência."

#. type: Labeled list
#: en/git-svn.txt:58
#, ignore-same, no-wrap, priority:100
msgid "--no-metadata"
msgstr "--no-metadata"

#. type: Plain text
#: en/git-svn.txt:62
#, priority:100
msgid "Set the 'noMetadata' option in the [svn-remote] config.  This option is not recommended, please read the 'svn.noMetadata' section of this manpage before using this option."
msgstr "Defina a opção 'noMetadata' na configuração [svn-remote].  Esta opção não é recomendada, leia a seção 'svn.noMetadata' desta página do manual antes de usar esta opção."

#. type: Labeled list
#: en/git-svn.txt:62
#, ignore-same, no-wrap, priority:100
msgid "--use-svm-props"
msgstr "--use-svm-props"

#. type: Plain text
#: en/git-svn.txt:64
#, priority:100
msgid "Set the 'useSvmProps' option in the [svn-remote] config."
msgstr "Define a opção 'useSvmProps' na configuração [svn-remote]."

#. type: Labeled list
#: en/git-svn.txt:64
#, ignore-same, no-wrap, priority:100
msgid "--use-svnsync-props"
msgstr "--use-svnsync-props"

#. type: Plain text
#: en/git-svn.txt:66
#, priority:100
msgid "Set the 'useSvnsyncProps' option in the [svn-remote] config."
msgstr "Define a opção 'useSvnsyncProps' na configuração [svn-remote]."

#. type: Labeled list
#: en/git-svn.txt:66
#, no-wrap, priority:100
msgid "--rewrite-root=<URL>"
msgstr "--rewrite-root=<URL>"

#. type: Plain text
#: en/git-svn.txt:68
#, priority:100
msgid "Set the 'rewriteRoot' option in the [svn-remote] config."
msgstr "Define a opção 'rewriteRoot' na configuração [svn-remote]."

#. type: Labeled list
#: en/git-svn.txt:68
#, no-wrap, priority:100
msgid "--rewrite-uuid=<UUID>"
msgstr "--rewrite-uuid=<UUID>"

#. type: Plain text
#: en/git-svn.txt:70
#, priority:100
msgid "Set the 'rewriteUUID' option in the [svn-remote] config."
msgstr "Define a opção 'rewriteUUID' na configuração [svn-remote]."

#. type: Labeled list
#: en/git-svn.txt:70
#, no-wrap, priority:100
msgid "--username=<user>"
msgstr "--username=<usuário>"

#. type: Plain text
#: en/git-svn.txt:75
#, priority:100
msgid "For transports that SVN handles authentication for (http, https, and plain svn), specify the username.  For other transports (e.g. `svn+ssh://`), you must include the username in the URL, e.g. `svn+ssh://foo@svn.bar.com/project`"
msgstr "Para transportes onde o SVN lida com a autenticação (http, https e svn simples), defina o nome de usuário.  Para os outros transportes (por exemplo, `svn+ssh://`), você deve incluir o nome de usuário na URL, como `svn+ssh://foo@svn.bar.com/project` por exemplo"

#. type: Plain text
#: en/git-svn.txt:90
#, priority:100
msgid "This allows one to specify a prefix which is prepended to the names of remotes if trunk/branches/tags are specified.  The prefix does not automatically include a trailing slash, so be sure you include one in the argument if that is what you want.  If --branches/-b is specified, the prefix must include a trailing slash.  Setting a prefix (with a trailing slash) is strongly encouraged in any case, as your SVN-tracking refs will then be located at \"refs/remotes/$prefix/*\", which is compatible with Git's own remote-tracking ref layout (refs/remotes/$remote/*). Setting a prefix is also useful if you wish to track multiple projects that share a common repository.  By default, the prefix is set to 'origin/'."
msgstr "Permite definir um prefixo que é anexado aos nomes dos ramos remotos caso o 'trunk/branches/tags' seja definidos.  O prefixo não inclui automaticamente uma barra final, portanto, inclua uma no argumento, caso seja isso que você queira.  Caso '--branches/-b' seja utilizado, o prefixo deverá incluir uma barra final.  A configuração de um prefixo (com uma barra à direita) é fortemente incentivada em qualquer caso, pois as suas refs para monitoramento SVN estarão localizados no \"refs/remotes/$prefix/*\", que é compatível com o próprio layout da \"ref\" do monitoramento remoto do Git ('refs/remotes/$remote/*'). Definir um prefixo também é útil caso queira monitorar vários projetos que compartilhem de um repositório comum.  É predefinido que o prefixo esteja definido para 'origin/'."

#. type: Plain text
#: en/git-svn.txt:97
#, priority:100
msgid "Before Git v2.0, the default prefix was \"\" (no prefix). This meant that SVN-tracking refs were put at \"refs/remotes/*\", which is incompatible with how Git's own remote-tracking refs are organized.  If you still want the old default, you can get it by passing `--prefix \"\"` on the command line (`--prefix=\"\"` may not work if your Perl's Getopt::Long is < v2.37)."
msgstr "Antes do Git v2.0, o prefixo padrão era \"\" (sem prefixo). Isso significava que as referências de monitoramento SVN foram colocadas no \"refs/remotes/*\", o que é incompatível com a organização das referências de monitoramento remoto do Git.  Caso ainda queira o padrão antigo, utilize a opção `--prefix\" \"` na linha de comando (o `--prefix =\" \"` `pode não funcionar caso o Getopt::Long do Perl for < v2.37) ."

#. type: Labeled list
#: en/git-svn.txt:98 en/git-svn.txt:145
#, no-wrap, priority:100
msgid "--ignore-refs=<regex>"
msgstr "--ignore-refs=<expressão-regular>"

#. type: Plain text
#: en/git-svn.txt:102
#, priority:100
msgid "When passed to 'init' or 'clone' this regular expression will be preserved as a config key.  See 'fetch' for a description of `--ignore-refs`."
msgstr "Quando encaminhada para o 'init' ou 'clone', essa expressão regular será preservada como uma chave de configuração.  Consulte 'fetch' para obter uma descrição da opção `--ignore-refs`."

#. type: Labeled list
#: en/git-svn.txt:102 en/git-svn.txt:157
#, no-wrap, priority:100
msgid "--ignore-paths=<regex>"
msgstr "--ignore-paths=<expressão-regular>"

#. type: Plain text
#: en/git-svn.txt:106
#, priority:100
msgid "When passed to 'init' or 'clone' this regular expression will be preserved as a config key.  See 'fetch' for a description of `--ignore-paths`."
msgstr "Quando encaminhada para o 'init' ou 'clone', essa expressão regular será preservada como uma chave de configuração.  Consulte 'fetch' para obter uma descrição da opção `--ignore-paths`."

#. type: Labeled list
#: en/git-svn.txt:106 en/git-svn.txt:186
#, no-wrap, priority:100
msgid "--include-paths=<regex>"
msgstr "--include-paths=<expressão-regular>"

#. type: Plain text
#: en/git-svn.txt:110
#, priority:100
msgid "When passed to 'init' or 'clone' this regular expression will be preserved as a config key.  See 'fetch' for a description of `--include-paths`."
msgstr "Quando encaminhada para o 'init' ou 'clone', essa expressão regular será preservada como uma chave de configuração.  Consulte 'fetch' para obter uma descrição da opção `--include-paths`."

#. type: Labeled list
#: en/git-svn.txt:110
#, ignore-same, no-wrap, priority:100
msgid "--no-minimize-url"
msgstr "--no-minimize-url"

#. type: Plain text
#: en/git-svn.txt:121
#, priority:100
msgid "When tracking multiple directories (using --stdlayout, --branches, or --tags options), git svn will attempt to connect to the root (or highest allowed level) of the Subversion repository.  This default allows better tracking of history if entire projects are moved within a repository, but may cause issues on repositories where read access restrictions are in place.  Passing `--no-minimize-url` will allow git svn to accept URLs as-is without attempting to connect to a higher level directory.  This option is off by default when only one URL/branch is tracked (it would do little good)."
msgstr "Ao monitorar os vários diretórios (utilizando as opções ´--stdlayout`, `--branches` ou `--tags`), o comando 'git svn' tentará se conectar à raiz (ou ao nível mais alto permitido) do repositório do Subversion.  Esta predefinição permite um melhor rastreamento do histórico caso os projetos inteiros forem movidos para dentro de um repositório, mas pode causar problemas nos repositórios dos quais exista restrições de acesso de leitura.  Utilizando a opção `--no-minimize-url` permitirá que o 'git svn' aceite as URLs como estão, sem tentar se conectar em um diretório no nível mais alto.  É predefinido que esta opção esteja desativada quando apenas uma URL/ramo for monitorada (seria de pouca utilidade)."

#. type: Labeled list
#: en/git-svn.txt:122
#, ignore-same, no-wrap, priority:100
msgid "'fetch'"
msgstr "'fetch'"

#. type: Plain text
#: en/git-svn.txt:127
#, ignore-ellipsis, priority:100
msgid "Fetch unfetched revisions from the Subversion remote we are tracking.  The name of the [svn-remote \"...\"] section in the $GIT_DIR/config file may be specified as an optional command-line argument."
msgstr "Busque revisões não obtidas do ramo remoto do Subversion que estamos monitorando.  O nome da seção [svn-remote \"...\"] no arquivo `$GIT_DIR/config` pode ser definido como um argumento opcional da linha de comandos."

#. type: Plain text
#: en/git-svn.txt:130 en/git-svn.txt:243
#, priority:100
msgid "This automatically updates the rev_map if needed (see '$GIT_DIR/svn/\\**/.rev_map.*' in the FILES section below for details)."
msgstr "Atualiza automaticamente o 'rev_map', caso seja necessário (para mais detalhes, consulte '$GIT_DIR/svn/\\**/.rev_map.*' na seção FILES abaixo)."

#. type: Labeled list
#: en/git-svn.txt:131
#, ignore-same, no-wrap, priority:100
msgid "--localtime"
msgstr "--localtime"

#. type: Plain text
#: en/git-svn.txt:135
#, priority:100
msgid "Store Git commit times in the local time zone instead of UTC.  This makes 'git log' (even without --date=local) show the same times that `svn log` would in the local time zone."
msgstr "Armazene os horários dos commits do Git no fuso horário local em vez do UTC.  Faz com que 'git log' (mesmo sem `--date=local`) mostre os mesmos horários que o 'svn log' faria no fuso horário local."

#. type: Plain text
#: en/git-svn.txt:141
#, priority:100
msgid "This doesn't interfere with interoperating with the Subversion repository you cloned from, but if you wish for your local Git repository to be able to interoperate with someone else's local Git repository, either don't use this option or you should both use it in the same local time zone."
msgstr "Não interfere na interoperação com o repositório Subversion de onde você clonou, porém caso queira que o seu repositório Git local possa interoperar com o repositório Git local de outra pessoa, não utilize esta opção ou você deve usá-lo no o mesmo fuso horário local."

#. type: Labeled list
#: en/git-svn.txt:142 en/git-svn.txt:536
#, ignore-same, no-wrap, priority:100
msgid "--parent"
msgstr "--parent"

#. type: Plain text
#: en/git-svn.txt:144
#, priority:100
msgid "Fetch only from the SVN parent of the current HEAD."
msgstr "Busque apenas do parente do SVN do HEAD atual."

#. type: Plain text
#: en/git-svn.txt:150
#, priority:100
msgid "Ignore refs for branches or tags matching the Perl regular expression. A \"negative look-ahead assertion\" like `^refs/remotes/origin/(?!tags/wanted-tag|wanted-branch).*$` can be used to allow only certain refs."
msgstr "Ignore as refs para as ramificações ou as tags coincidentes com a expressão regular Perl. Uma \"declaração negativa de antecipação\" como `^refs/remotes/origin/(?!tags/wanted-tag|wanted-branch).*$` Pode ser utilizada para permitir apenas determinadas referências."

#. type: Plain text
#: en/git-svn.txt:153
#, no-wrap, priority:100
msgid "config key: svn-remote.<name>.ignore-refs\n"
msgstr "config key: svn-remote.<nome>.ignore-refs\n"

#. type: Plain text
#: en/git-svn.txt:156
#, priority:100
msgid "If the ignore-refs configuration key is set, and the command-line option is also given, both regular expressions will be used."
msgstr "Caso a chave de configuração 'ignore-refs' estiver definida e a opção da linha de comandos também for utilizada, ambas as expressões regulares serão utilizadas."

#. type: Plain text
#: en/git-svn.txt:163
#, priority:100
msgid "This allows one to specify a Perl regular expression that will cause skipping of all matching paths from checkout from SVN.  The `--ignore-paths` option should match for every 'fetch' (including automatic fetches due to 'clone', 'dcommit', 'rebase', etc) on a given repository."
msgstr "Permite definir uma expressão regular Perl que fará com que ignore todos os caminhos coincidentes do 'checkout' do SVN.  A opção `--ignore-paths` deve coincidir com cada 'busca' (incluindo buscas automáticas devido ao 'clone', 'dcommit', 'rebase', etc) em um determinado repositório."

#. type: Plain text
#: en/git-svn.txt:166
#, no-wrap, priority:100
msgid "config key: svn-remote.<name>.ignore-paths\n"
msgstr "config key: svn-remote.<nome>.ignore-paths\n"

#. type: Plain text
#: en/git-svn.txt:169
#, priority:100
msgid "If the ignore-paths configuration key is set, and the command-line option is also given, both regular expressions will be used."
msgstr "Caso a chave de configuração 'ignore-paths' esteja definida e a opção da linha de comandos também for utilizada, ambas as expressões regulares serão utilizadas."

#. type: Labeled list
#: en/git-svn.txt:173
#, no-wrap, priority:100
msgid "Skip \"doc*\" directory for every fetch"
msgstr "Ignore o diretório \"doc*\" em cada busca"

#. type: delimited block -
#: en/git-svn.txt:177
#, no-wrap, priority:100
msgid "--ignore-paths=\"^doc\"\n"
msgstr "--ignore-paths=\"^doc\"\n"

#. type: Labeled list
#: en/git-svn.txt:179
#, no-wrap, priority:100
msgid "Skip \"branches\" and \"tags\" of first level directories"
msgstr "Ignora o primeiro nível dos diretórios \"branches\" e \"tags\""

#. type: delimited block -
#: en/git-svn.txt:183
#, no-wrap, priority:100
msgid "--ignore-paths=\"^[^/]+/(?:branches|tags)\"\n"
msgstr "--ignore-paths=\"^[^/]+/(?:branches|tags)\"\n"

#. type: Plain text
#: en/git-svn.txt:193
#, priority:100
msgid "This allows one to specify a Perl regular expression that will cause the inclusion of only matching paths from checkout from SVN.  The `--include-paths` option should match for every 'fetch' (including automatic fetches due to 'clone', 'dcommit', 'rebase', etc) on a given repository. `--ignore-paths` takes precedence over `--include-paths`."
msgstr "Permite definir uma expressão regular Perl que causará a inclusão apenas dos caminhos coincidentes no 'checkout' do SVN.  A opção `--include-paths` deve coincidir com cada 'busca' (incluindo buscas automáticas devido ao 'clone', 'dcommit', 'rebase', etc) em um determinado repositório. A opção `--ignore-paths` tem precedência sobre `--include-paths`."

#. type: Plain text
#: en/git-svn.txt:196
#, no-wrap, priority:100
msgid "config key: svn-remote.<name>.include-paths\n"
msgstr "config key: svn-remote.<nome>.include-paths\n"

#. type: Labeled list
#: en/git-svn.txt:197
#, no-wrap, priority:100
msgid "--log-window-size=<n>"
msgstr "--log-window-size=<n>"

#. type: Plain text
#: en/git-svn.txt:203
#, priority:100
msgid "Fetch <n> log entries per request when scanning Subversion history.  The default is 100. For very large Subversion repositories, larger values may be needed for 'clone'/'fetch' to complete in reasonable time. But overly large values may lead to higher memory usage and request timeouts."
msgstr "Busque <n> entradas do registro log através da solicitação ao verificar o histórico do Subversion.  A predefinição é 100. Para repositórios Subversion muito grandes, os valores maiores podem ser necessários para que 'clone'/'fetch' seja concluído em um tempo razoável. Porém os valores excessivamente grandes que podem levar a uma maior utilização da memória e solicitações de tempo."

#. type: Labeled list
#: en/git-svn.txt:204
#, ignore-same, no-wrap, priority:100
msgid "'clone'"
msgstr "'clone'"

#. type: Plain text
#: en/git-svn.txt:214
#, priority:100
msgid "Runs 'init' and 'fetch'.  It will automatically create a directory based on the basename of the URL passed to it; or if a second argument is passed; it will create a directory and work within that.  It accepts all arguments that the 'init' and 'fetch' commands accept; with the exception of `--fetch-all` and `--parent`.  After a repository is cloned, the 'fetch' command will be able to update revisions without affecting the working tree; and the 'rebase' command will be able to update the working tree with the latest changes."
msgstr "Executa 'init' e 'fetch'.  Cria automaticamente um diretório com base no nome da base da URL passada para ele; ou caso um segundo argumento seja passado; ele criará um diretório e funcionará dentro dele.  Aceita todos os argumentos que os comandos 'init' e 'fetch' aceitam; com exceção de `--fetch-all` e `--parent`. Após a clonagem de um repositório, o comando 'fetch' poderá atualizar as revisões sem afetar a árvore de trabalho; e o comando 'rebase' poderá atualizar a árvore de trabalho com as alterações mais recentes.  Depois do repositório ser clonado, o comando 'fetch' será capaz de atualizar as revisões sem afetar a árvore de trabalho; e o comando 'rebase' poderá atualizar a árvore de trabalho com as alterações mais recentes."

#. type: Labeled list
#: en/git-svn.txt:215
#, ignore-same, no-wrap, priority:100
msgid "--preserve-empty-dirs"
msgstr "--preserve-empty-dirs"

#. type: Plain text
#: en/git-svn.txt:221
#, priority:100
msgid "Create a placeholder file in the local Git repository for each empty directory fetched from Subversion.  This includes directories that become empty by removing all entries in the Subversion repository (but not the directory itself).  The placeholder files are also tracked and removed when no longer necessary."
msgstr "Crie um arquivo com espaço reservado no repositório Git local para cada diretório vazio que foi buscado no Subversion.  Isso inclui os diretórios que ficam vazios, removendo todas as entradas no repositório do Subversion (mas não o próprio diretório).  Os arquivos com espaço reservado também são monitorados e removidos quando não são mais necessários."

#. type: Labeled list
#: en/git-svn.txt:222
#, no-wrap, priority:100
msgid "--placeholder-filename=<filename>"
msgstr "--placeholder-filename=<nome-do-arquivo>"

#. type: Plain text
#: en/git-svn.txt:225
#, priority:100
msgid "Set the name of placeholder files created by --preserve-empty-dirs.  Default: \".gitignore\""
msgstr "Define o nome dos arquivos 'placeholder' (espaço reservado) criado através da opção `--preserve-empty-dirs`.  Predefinição: \".gitignore\""

#. type: Labeled list
#: en/git-svn.txt:226
#, ignore-same, no-wrap, priority:100
msgid "'rebase'"
msgstr "'rebase'"

#. type: Plain text
#: en/git-svn.txt:229
#, priority:100
msgid "This fetches revisions from the SVN parent of the current HEAD and rebases the current (uncommitted to SVN) work against it."
msgstr "Busca as revisões do pai SVN do HEAD atual e reconstrói o atual (não comprometido com o SVN) contra ele."

#. type: Plain text
#: en/git-svn.txt:233
#, priority:100
msgid "This works similarly to `svn update` or 'git pull' except that it preserves linear history with 'git rebase' instead of 'git merge' for ease of dcommitting with 'git svn'."
msgstr "Funciona da mesma maneira que o comando `svn update` ou o 'git pull', exceto que preserva o histórico linear com o comando 'git rebase' em vez do 'git merge' para facilitar a comunicação com comando 'git svn'."

#. type: Plain text
#: en/git-svn.txt:237
#, priority:100
msgid "This accepts all options that 'git svn fetch' and 'git rebase' accept.  However, `--fetch-all` only fetches from the current [svn-remote], and not all [svn-remote] definitions."
msgstr "Isso aceita todas as opções que os comandos 'git svn fetch' e 'git rebase' aceitam.  No entanto, a opção `--fetch-all` busca apenas as definições [svn-remote] atuais mas não todas as definições [svn-remote]."

#. type: Plain text
#: en/git-svn.txt:240
#, priority:100
msgid "Like 'git rebase'; this requires that the working tree be clean and have no uncommitted changes."
msgstr "Como 'git rebase'; isso requer que a árvore de trabalho esteja limpa e não tenha alterações em commits não realizados."

#. type: Plain text
#: en/git-svn.txt:248
#, priority:100
msgid "Do not fetch remotely; only run 'git rebase' against the last fetched commit from the upstream SVN."
msgstr "Não busque remotamente; execute apenas o comando 'git rebase' no último commit obtido da 'upstream SVN'."

#. type: Labeled list
#: en/git-svn.txt:249
#, ignore-same, no-wrap, priority:100
msgid "'dcommit'"
msgstr "'dcommit'"

#. type: Plain text
#: en/git-svn.txt:254
#, priority:100
msgid "Commit each diff from the current branch directly to the SVN repository, and then rebase or reset (depending on whether or not there is a diff between SVN and head).  This will create a revision in SVN for each commit in Git."
msgstr "Faça o commit a cada diff da ramificação atual diretamente no repositório SVN e em seguida, refaça ou a redefine (dependendo caso exista ou não uma diferença entre o SVN e o cabeçalho).  Isso criará uma revisão no SVN para cada commit no Git."

#. type: Plain text
#: en/git-svn.txt:258
#, priority:100
msgid "When an optional Git branch name (or a Git commit object name)  is specified as an argument, the subcommand works on the specified branch, not on the current branch."
msgstr "Quando um nome opcional do ramo Git (ou um nome do objeto do commit Git) seja definido como um argumento, o subcomando funciona no ramo definido, não no ramo atual."

#. type: Plain text
#: en/git-svn.txt:260
#, priority:100
msgid "Use of 'dcommit' is preferred to 'set-tree' (below)."
msgstr "A utilização do 'dcommit' é o preferido para o 'set-tree' (abaixo)."

#. type: Plain text
#: en/git-svn.txt:263
#, priority:100
msgid "After committing, do not rebase or reset."
msgstr "Após fazer o commit, não reconstrua ou redefina."

#. type: Labeled list
#: en/git-svn.txt:263
#, no-wrap, priority:100
msgid "--commit-url <URL>"
msgstr "--commit-url <URL>"

#. type: Plain text
#: en/git-svn.txt:269
#, priority:100
msgid "Commit to this SVN URL (the full path).  This is intended to allow existing 'git svn' repositories created with one transport method (e.g. `svn://` or `http://` for anonymous read) to be reused if a user is later given access to an alternate transport method (e.g. `svn+ssh://` or `https://`) for commit."
msgstr "Faça o commit com esta URL SVN (o caminho completo).  Visa permitir que os repositórios 'git svn' existentes criados com um método de transporte (por exemplo, `svn://` ou `http://` para a leitura anônima) sejam reutilizados caso um usuário tenha acesso posterior a um método de transporte alternativo (`svn + ssh://` ou `https://` por exemplo) para o commit."

#. type: Plain text
#: en/git-svn.txt:273
#, no-wrap, priority:100
msgid ""
"config key: svn-remote.<name>.commiturl\n"
"config key: svn.commiturl (overwrites all svn-remote.<name>.commiturl options)\n"
msgstr ""
"config key: svn-remote.<nome>.commiturl\n"
"config key: svn.commiturl (sobrescreve todas as opções svn-remote.<nome>.commiturl)\n"

#. type: Plain text
#: en/git-svn.txt:277
#, priority:100
msgid "Note that the SVN URL of the commiturl config key includes the SVN branch.  If you rather want to set the commit URL for an entire SVN repository use svn-remote.<name>.pushurl instead."
msgstr "Observe que a URL SVN da chave de configuração do 'commiturl' inclui o ramo SVN.  Caso prefira definir a URL do commit para um repositório SVN inteiro, em vez disso utilize 'svn-remote.<nome>.pushurl'."

#. type: Plain text
#: en/git-svn.txt:280
#, priority:100
msgid "Using this option for any other purpose (don't ask) is very strongly discouraged."
msgstr "O uso desta opção para qualquer outra finalidade (não pergunte) é veementemente desencorajada."

#. type: Labeled list
#: en/git-svn.txt:281
#, no-wrap, priority:100
msgid "--mergeinfo=<mergeinfo>"
msgstr "--mergeinfo=<mergeinfo>"

#. type: Plain text
#: en/git-svn.txt:288
#, priority:100
msgid "Add the given merge information during the dcommit (e.g. `--mergeinfo=\"/branches/foo:1-10\"`). All svn server versions can store this information (as a property), and svn clients starting from version 1.5 can make use of it. To specify merge information from multiple branches, use a single space character between the branches (`--mergeinfo=\"/branches/foo:1-10 /branches/bar:3,5-6,8\"`)"
msgstr "Adicione as informações da mesclagem informadas durante o 'dcommit' (por exemplo, `--mergeinfo=\"/branches/foo:1-10\"`). Todas as versões do servidor svn podem armazenar estas informações (como uma propriedade) e a partir da versão 1.5 os clientes svn também podem usá-las. Para definir as informações da mesclagem das várias ramificações, utilize um caractere de espaço simples entre as ramificações (`--mergeinfo=\"/branches/foo:1-10 /branches/bar:3,5-6,8\"`)"

#. type: Plain text
#: en/git-svn.txt:291
#, no-wrap, priority:100
msgid "config key: svn.pushmergeinfo\n"
msgstr "config key: svn.pushmergeinfo\n"

#. type: Plain text
#: en/git-svn.txt:296
#, priority:100
msgid "This option will cause git-svn to attempt to automatically populate the svn:mergeinfo property in the SVN repository when possible. Currently, this can only be done when dcommitting non-fast-forward merges where all parents but the first have already been pushed into SVN."
msgstr "Esta opção fará com que o 'git-svn' tente preencher automaticamente a propriedade do 'svn:mergeinfo' no repositório SVN, quando for possível. Atualmente, isso só pode ser feito quando 'dcommitting' as mesclagens de avanço não rápido onde todos os pais, exceto o primeiro, já tenha sido inseridos no SVN."

#. type: Plain text
#: en/git-svn.txt:301
#, priority:100
msgid "Ask the user to confirm that a patch set should actually be sent to SVN.  For each patch, one may answer \"yes\" (accept this patch), \"no\" (discard this patch), \"all\" (accept all patches), or \"quit\"."
msgstr "Peça ao usuário para confirmar que um conjunto de patches deve realmente ser enviado ao SVN.  Para cada patch, pode-se responder \"yes\" (aceitar este patch), \"no\" (descartar este patch), \"all\" (aceitar todos os patches) ou \"encerrar\"."

#. type: Plain text
#: en/git-svn.txt:304
#, priority:100
msgid "'git svn dcommit' returns immediately if answer is \"no\" or \"quit\", without committing anything to SVN."
msgstr "O comando 'git svn dcommit' retorna imediatamente caso a resposta seja \"no\" (não) ou \"quit\" (sair), sem comprometer nada com no SVN."

#. type: Labeled list
#: en/git-svn.txt:305
#, ignore-same, no-wrap, priority:100
msgid "'branch'"
msgstr "'branch'"

#. type: Plain text
#: en/git-svn.txt:307
#, priority:100
msgid "Create a branch in the SVN repository."
msgstr "Crie um ramo no repositório SVN."

#. type: Labeled list
#: en/git-svn.txt:309
#, ignore-same, no-wrap, priority:100
msgid "--message"
msgstr "--message"

#. type: Plain text
#: en/git-svn.txt:311
#, priority:100
msgid "Allows to specify the commit message."
msgstr "Permite definir a mensagem do commit."

#. type: Labeled list
#: en/git-svn.txt:313
#, ignore-same, no-wrap, priority:100
msgid "--tag"
msgstr "--tag"

#. type: Plain text
#: en/git-svn.txt:316
#, priority:100
msgid "Create a tag by using the tags_subdir instead of the branches_subdir specified during git svn init."
msgstr "Crie uma tag utilizando o 'tags_subdir' em vez do 'branches_subdir' definido durante o comando `git svn init`."

#. type: Labeled list
#: en/git-svn.txt:317
#, no-wrap, priority:100
msgid "-d<path>"
msgstr "-d<caminho>"

#. type: Labeled list
#: en/git-svn.txt:318
#, no-wrap, priority:100
msgid "--destination=<path>"
msgstr "--destination=<caminho>"

#. type: Plain text
#: en/git-svn.txt:326
#, priority:100
msgid "If more than one --branches (or --tags) option was given to the 'init' or 'clone' command, you must provide the location of the branch (or tag) you wish to create in the SVN repository.  <path> specifies which path to use to create the branch or tag and should match the pattern on the left-hand side of one of the configured branches or tags refspecs.  You can see these refspecs with the commands"
msgstr "No caso de mais de uma opção `--branches` (ou `--tags`) seja encaminhada ao comando 'init' ou 'clone', você deve informar o local do ramo (ou a 'tag') que deseja criar no repositório SVN.  o <caminho> especifica qual o caminho utilizar para criar o ramo ou a tag que deve coincidir ao padrão no lado esquerdo de um dos ramos configurados ou uma das tags refspecs.  Você pode ver estes refspecs com os comandos"

#. type: Plain text
#: en/git-svn.txt:329
#, priority:100
msgid "git config --get-all svn-remote.<name>.branches git config --get-all svn-remote.<name>.tags"
msgstr "git config --get-all svn-remote.<nome>.branches git config --get-all svn-remote.<nome>.tags"

#. type: Plain text
#: en/git-svn.txt:332
#, priority:100
msgid "where <name> is the name of the SVN repository as specified by the -R option to 'init' (or \"svn\" by default)."
msgstr "onde <nome> é o nome do repositório SVN, conforme definido pela opção '-R' para o 'init' (ou por predefinição, o \"svn\")."

#. type: Labeled list
#: en/git-svn.txt:333
#, ignore-same, no-wrap, priority:100
msgid "--username"
msgstr "--username"

#. type: Plain text
#: en/git-svn.txt:336
#, priority:100
msgid "Specify the SVN username to perform the commit as.  This option overrides the 'username' configuration property."
msgstr "Define o nome do usuário SVN para executar o commit com esta identidade.  Esta opção substitui a propriedade de configuração 'username'."

#. type: Labeled list
#: en/git-svn.txt:337
#, ignore-same, no-wrap, priority:100
msgid "--commit-url"
msgstr "--commit-url"

#. type: Plain text
#: en/git-svn.txt:342
#, priority:100
msgid "Use the specified URL to connect to the destination Subversion repository.  This is useful in cases where the source SVN repository is read-only.  This option overrides configuration property 'commiturl'."
msgstr "Use a URL informada para conectar-se ao repositório Subversion do destino.  É útil nos casos onde o repositório SVN da origem seja somente leitura.  Esta opção substitui a propriedade de configuração 'commiturl'."

#. type: Plain text
#: en/git-svn.txt:344
#, priority:100
msgid "git config --get-all svn-remote.<name>.commiturl"
msgstr "git config --get-all svn-remote.<nome>.commiturl"

#. type: Labeled list
#: en/git-svn.txt:346 en/rev-list-options.txt:1117
#, ignore-same, no-wrap, priority:260
msgid "--parents"
msgstr "--parents"

#. type: Plain text
#: en/git-svn.txt:350
#, priority:100
msgid "Create parent folders. This parameter is equivalent to the parameter --parents on svn cp commands and is useful for non-standard repository layouts."
msgstr "Crie diretórios parentes. Este parâmetro é equivalente a `--parents` nos comandos 'svn cp' e é útil para os layouts do repositório fora do padrão."

#. type: Labeled list
#: en/git-svn.txt:351
#, ignore-same, no-wrap, priority:100
msgid "'tag'"
msgstr "'tag'"

#. type: Plain text
#: en/git-svn.txt:354
#, priority:100
msgid "Create a tag in the SVN repository. This is a shorthand for 'branch -t'."
msgstr "Crie uma tag no repositório SVN. Esta é uma abreviação para 'branch -t'."

#. type: Labeled list
#: en/git-svn.txt:355
#, ignore-same, no-wrap, priority:100
msgid "'log'"
msgstr "'log'"

#. type: Plain text
#: en/git-svn.txt:358
#, priority:100
msgid "This should make it easy to look up svn log messages when svn users refer to -r/--revision numbers."
msgstr "Isso deve facilitar a consulta das mensagens 'svn log' quando os usuários svn se referem ao `-r/--revision numbers`."

#. type: Plain text
#: en/git-svn.txt:360
#, priority:100
msgid "The following features from `svn log' are supported:"
msgstr "Os seguintes recursos do `svn log` são compatíveis:"

#. type: Labeled list
#: en/git-svn.txt:362
#, no-wrap, priority:100
msgid "-r <n>[:<n>]"
msgstr "-r <n>[:<n>]"

#. type: Labeled list
#: en/git-svn.txt:363
#, no-wrap, priority:100
msgid "--revision=<n>[:<n>]"
msgstr "--revision=<n>[:<n>]"

#. type: Plain text
#: en/git-svn.txt:366
#, ignore-ellipsis, priority:100
msgid "is supported, non-numeric args are not: HEAD, NEXT, BASE, PREV, etc ..."
msgstr "é compatível, argumentos não numéricos não são: `HEAD`, `NEXT`, `BASE`, `PREV`, etc ..."

#. type: Plain text
#: en/git-svn.txt:370
#, priority:100
msgid "it's not completely compatible with the --verbose output in svn log, but reasonably close."
msgstr "não é completamente compatível com a saída `--verbose` no 'svn log', porém é razoavelmente próximo."

#. type: Labeled list
#: en/git-svn.txt:370
#, no-wrap, priority:100
msgid "--limit=<n>"
msgstr "--limit=<n>"

#. type: Plain text
#: en/git-svn.txt:373
#, priority:100
msgid "is NOT the same as --max-count, doesn't count merged/excluded commits"
msgstr "NÃO é o mesmo que a opção `--max-count`, não conta os commits que foram mesclados/excluídos"

#. type: Plain text
#: en/git-svn.txt:375
#, priority:100
msgid "supported"
msgstr "compatível"

#. type: Plain text
#: en/git-svn.txt:378
#, priority:100
msgid "New features:"
msgstr "Novos recursos:"

#. type: Labeled list
#: en/git-svn.txt:380
#, ignore-same, no-wrap, priority:100
msgid "--show-commit"
msgstr "--show-commit"

#. type: Plain text
#: en/git-svn.txt:382
#, priority:100
msgid "shows the Git commit sha1, as well"
msgstr "exiba o SHA1 do commit do Git, também"

#. type: Labeled list
#: en/git-svn.txt:382 en/pretty-options.txt:31
#, ignore-same, no-wrap, priority:260
msgid "--oneline"
msgstr "--oneline"

#. type: Plain text
#: en/git-svn.txt:384
#, priority:100
msgid "our version of --pretty=oneline"
msgstr "a nossa versão do `--pretty=oneline`"

#. type: Plain text
#: en/git-svn.txt:389
#, priority:100
msgid "SVN itself only stores times in UTC and nothing else. The regular svn client converts the UTC time to the local time (or based on the TZ= environment). This command has the same behaviour."
msgstr "O próprio SVN armazena apenas os horários em UTC e mais nada. O cliente svn comum converte a hora UTC em hora local (ou com base no ambiente 'TZ='). Este comando tem o mesmo comportamento."

#. type: Plain text
#: en/git-svn.txt:391
#, priority:100
msgid "Any other arguments are passed directly to 'git log'"
msgstr "Quaisquer outros argumentos são passados diretamente para o comando 'git log'"

#. type: Labeled list
#: en/git-svn.txt:392
#, ignore-same, no-wrap, priority:100
msgid "'blame'"
msgstr "'blame'"

#. type: Plain text
#: en/git-svn.txt:399
#, priority:100
msgid "Show what revision and author last modified each line of a file. The output of this mode is format-compatible with the output of `svn blame' by default. Like the SVN blame command, local uncommitted changes in the working tree are ignored; the version of the file in the HEAD revision is annotated. Unknown arguments are passed directly to 'git blame'."
msgstr "Exiba quais foram as últimas modificações feitas em cada linha de um arquivo separados pela versão da revisão e do autor da modificação. É predefinido que a saída deste modo seja compatível com o formato `svn blame'. Como o \"SVN blame\", as alterações dos commits locais que não tenham sido feitas na árvore de trabalho são ignoradas; a versão do arquivo na revisão `HEAD` é anotada. os argumentos desconhecidos são passados diretamente para o comando 'git blame'."

#. type: Labeled list
#: en/git-svn.txt:400
#, ignore-same, no-wrap, priority:100
msgid "--git-format"
msgstr "--git-format"

#. type: Plain text
#: en/git-svn.txt:405
#, priority:100
msgid "Produce output in the same format as 'git blame', but with SVN revision numbers instead of Git commit hashes. In this mode, changes that haven't been committed to SVN (including local working-copy edits) are shown as revision 0."
msgstr "Gere a saída no mesmo formato que o comando 'git blame', porém com números da revisão do SVN em vez dos hashes dos commits do Git. Nesse modo, as alterações onde os commits não foram feitos no SVN (incluindo as edições locais da cópia de trabalho) são exibidas como revisão."

#. type: Labeled list
#: en/git-svn.txt:406
#, ignore-same, no-wrap, priority:100
msgid "'find-rev'"
msgstr "'find-rev'"

#. type: Plain text
#: en/git-svn.txt:411
#, priority:100
msgid "When given an SVN revision number of the form 'rN', returns the corresponding Git commit hash (this can optionally be followed by a tree-ish to specify which branch should be searched).  When given a tree-ish, returns the corresponding SVN revision number."
msgstr "Quando recebe um número da revisão SVN no formato 'rN', retorna o hash do commit Git correspondente (isso pode ser seguido opcionalmente por um 'tree-ish' da árvore para definir qual o ramo deve ser pesquisado).  Quando informar um 'tree-ish', retorna o número da revisão SVN correspondente."

#. type: Labeled list
#: en/git-svn.txt:412
#, no-wrap, priority:100
msgid "-B"
msgstr "-B"

#. type: Labeled list
#: en/git-svn.txt:413
#, ignore-same, no-wrap, priority:100
msgid "--before"
msgstr "--before"

#. type: Plain text
#: en/git-svn.txt:417
#, priority:100
msgid "Don't require an exact match if given an SVN revision, instead find the commit corresponding to the state of the SVN repository (on the current branch) at the specified revision."
msgstr "Não exija uma coincidência exata caso receba uma revisão SVN; em vez disso, encontre o commit correspondente na condição do repositório SVN (no ramo atual) na revisão informada."

#. type: Labeled list
#: en/git-svn.txt:419
#, ignore-same, no-wrap, priority:100
msgid "--after"
msgstr "--after"

#. type: Plain text
#: en/git-svn.txt:423
#, priority:100
msgid "Don't require an exact match if given an SVN revision; if there is not an exact match return the closest match searching forward in the history."
msgstr "Não exija uma coincidência exata caso receba uma revisão SVN; caso não haja uma coincidência exata, retorne a coincidência mais próxima pesquisando no histórico."

#. type: Labeled list
#: en/git-svn.txt:424
#, ignore-same, no-wrap, priority:100
msgid "'set-tree'"
msgstr "'set-tree'"

#. type: Plain text
#: en/git-svn.txt:432
#, priority:100
msgid "You should consider using 'dcommit' instead of this command.  Commit specified commit or tree objects to SVN.  This relies on your imported fetch data being up to date.  This makes absolutely no attempts to do patching when committing to SVN, it simply overwrites files with those specified in the tree or commit.  All merging is assumed to have taken place independently of 'git svn' functions."
msgstr "Você deve considerar a utilização do 'dcommit' em vez deste comando.  Faça o commit de determinados commits ou objetos árvore para o SVN.  Depende que os seus dados buscados estejam atualizados.  Não faz absolutamente nenhuma tentativa de fazer correções ao fazer o commit com o SVN, simplesmente substitui os arquivos pelos definidos na árvore ou pelo commit.  Supõe-se que todas as mesclagens ocorreram independentemente das funções do comando 'git svn'."

#. type: Labeled list
#: en/git-svn.txt:433
#, ignore-same, no-wrap, priority:100
msgid "'create-ignore'"
msgstr "'create-ignore'"

#. type: Plain text
#: en/git-svn.txt:438
#, priority:100
msgid "Recursively finds the svn:ignore property on directories and creates matching .gitignore files. The resulting files are staged to be committed, but are not committed. Use -r/--revision to refer to a specific revision."
msgstr "Localiza de forma recursiva a propriedade 'svn:ignore' nos diretórios e cria os arquivos `.gitignore` correspondentes. Os arquivos resultantes apenas são preparados para que os commits sejam feitos, mas não são. Utilize `-r/--revision` quando se referir a uma revisão específica."

#. type: Labeled list
#: en/git-svn.txt:439
#, ignore-same, no-wrap, priority:100
msgid "'show-ignore'"
msgstr "'show-ignore'"

#. type: Plain text
#: en/git-svn.txt:443
#, priority:100
msgid "Recursively finds and lists the svn:ignore property on directories.  The output is suitable for appending to the $GIT_DIR/info/exclude file."
msgstr "Localiza e lista recursivamente a propriedade 'svn:ignore' nos diretórios.  A saída é adequada para anexar ao arquivo `$GIT_DIR/info/exclude`."

#. type: Labeled list
#: en/git-svn.txt:444
#, ignore-same, no-wrap, priority:100
msgid "'mkdirs'"
msgstr "'mkdirs'"

#. type: Plain text
#: en/git-svn.txt:452
#, priority:100
msgid "Attempts to recreate empty directories that core Git cannot track based on information in $GIT_DIR/svn/<refname>/unhandled.log files.  Empty directories are automatically recreated when using \"git svn clone\" and \"git svn rebase\", so \"mkdirs\" is intended for use after commands like \"git checkout\" or \"git reset\".  (See the svn-remote.<name>.automkdirs config file option for more information.)"
msgstr "As tentativas de recriar os diretórios vazios que o Git principal não pode rastrear com base nas informações dos arquivos '$GIT_DIR/svn/<refname>/unhandled.log'.  Os diretórios vazios são recriados automaticamente ao utilizar o comando \"git svn clone\" e o \"git svn rebase\"; portanto, o comando \"mkdirs\" deve ser utilizado após os comandos como \"git checkout\" ou \"git reset\".  (Para mais informações, consulte a opção do arquivo de configuração 'svn-remote.<nome>.automkdirs'.)"

#. type: Labeled list
#: en/git-svn.txt:453
#, ignore-same, no-wrap, priority:100
msgid "'commit-diff'"
msgstr "'commit-diff'"

#. type: Plain text
#: en/git-svn.txt:462
#, priority:100
msgid "Commits the diff of two tree-ish arguments from the command-line.  This command does not rely on being inside a `git svn init`-ed repository.  This command takes three arguments, (a) the original tree to diff against, (b) the new tree result, (c) the URL of the target Subversion repository.  The final argument (URL) may be omitted if you are working from a 'git svn'-aware repository (that has been `init`-ed with 'git svn').  The -r<revision> option is required for this."
msgstr "Faz o commit da diferença entre dois argumentos da árvore na linha de comando.  Este comando não depende de estar dentro de um repositório `git svn init`.  Este comando utiliza três argumentos, (a) a árvore original que será comparada, (b) o novo resultado da árvore, (c) a URL do repositório de destino do Subversion.  O argumento final (URL) pode ser omitido caso você esteja trabalhando em um repositório compatível com o comando 'git svn' (que foi iniciado com 'git svn').  Para isso, a opção -r <revisão> é necessária."

#. type: Plain text
#: en/git-svn.txt:467
#, priority:100
msgid "The commit message is supplied either directly with the `-m` or `-F` option, or indirectly from the tag or commit when the second tree-ish denotes such an object, or it is requested by invoking an editor (see `--edit` option below)."
msgstr "A mensagem do commit é informada diretamente com a opção `-m` ou `-F`, ou indiretamente da tag ou commit quando a segunda 'tree-ish' denota este objeto ou é solicitada pela chamada de um editor (consulte a opção `--edit` abaixo)."

#. type: Plain text
#: en/git-svn.txt:472
#, priority:100
msgid "Use the given `msg` as the commit message. This option disables the `--edit` option."
msgstr "Utilize a `msg` informada como a mensagem do commit. Esta opção desativa a opção `--edit`."

#. type: Labeled list
#: en/git-svn.txt:473
#, no-wrap, priority:100
msgid "-F <filename>"
msgstr "-F <nome-do-arquivo>"

#. type: Labeled list
#: en/git-svn.txt:474
#, no-wrap, priority:100
msgid "--file=<filename>"
msgstr "--file=<nome-do-arquivo>"

#. type: Plain text
#: en/git-svn.txt:477
#, priority:100
msgid "Take the commit message from the given file. This option disables the `--edit` option."
msgstr "Pega a mensagem de commit vindo de um determinado arquivo. This option disables the `--edit` option."

#. type: Labeled list
#: en/git-svn.txt:478
#, no-wrap, priority:100
msgid "'info'"
msgstr "'info'"

#. type: Plain text
#: en/git-svn.txt:483
#, priority:100
msgid "Shows information about a file or directory similar to what `svn info' provides.  Does not currently support a -r/--revision argument.  Use the --url option to output only the value of the 'URL:' field."
msgstr "Exibe as informações sobre um arquivo ou diretório semelhante ao que o `svn info` provê.  Atualmente não é compatível com o argumento da opção '-r/--revision'.  Utilize a opção `--url` para gerar apenas o valor do campo 'URL:'."

#. type: Labeled list
#: en/git-svn.txt:484
#, no-wrap, priority:100
msgid "'proplist'"
msgstr "'proplist'"

#. type: Plain text
#: en/git-svn.txt:488
#, priority:100
msgid "Lists the properties stored in the Subversion repository about a given file or directory.  Use -r/--revision to refer to a specific Subversion revision."
msgstr "Lista as propriedades armazenadas no repositório do Subversion sobre um determinado arquivo ou diretório.  Utilize '-r/--revision' para se referir a uma revisão específica do Subversion."

#. type: Labeled list
#: en/git-svn.txt:489
#, no-wrap, priority:100
msgid "'propget'"
msgstr "'propget'"

#. type: Plain text
#: en/git-svn.txt:492
#, priority:100
msgid "Gets the Subversion property given as the first argument, for a file.  A specific revision can be specified with -r/--revision."
msgstr "Obtém a propriedade do Subversion informado como o primeiro argumento, para um arquivo.  Uma revisão específica pode ser definida através da opção `-r`/`--revision`."

#. type: Labeled list
#: en/git-svn.txt:493
#, no-wrap, priority:100
msgid "'propset'"
msgstr "'propset'"

#. type: Plain text
#: en/git-svn.txt:497
#, priority:100
msgid "Sets the Subversion property given as the first argument, to the value given as the second argument for the file given as the third argument."
msgstr "Define a propriedade Subversion informada como o primeiro argumento, como o valor fornecido como o segundo argumento para o arquivo informado como o terceiro argumento."

#. type: delimited block -
#: en/git-svn.txt:502
#, no-wrap, priority:100
msgid "git svn propset svn:keywords \"FreeBSD=%H\" devel/py-tipper/Makefile\n"
msgstr "git svn propset svn:keywords \"FreeBSD=%H\" devel/py-tipper/Makefile\n"

#. type: Plain text
#: en/git-svn.txt:506
#, priority:100
msgid "This will set the property 'svn:keywords' to 'FreeBSD=%H' for the file 'devel/py-tipper/Makefile'."
msgstr "Isso definirá a propriedade 'svn:keywords' como 'FreeBSD=%H' para o arquivo 'devel/py-tipper/Makefile'."

#. type: Labeled list
#: en/git-svn.txt:507
#, no-wrap, priority:100
msgid "'show-externals'"
msgstr "'show-externals'"

#. type: Plain text
#: en/git-svn.txt:510
#, priority:100
msgid "Shows the Subversion externals.  Use -r/--revision to specify a specific revision."
msgstr "Exibe os externos do Subversion.  Utilize '-r/--revision' para definir uma revisão específica."

#. type: Plain text
#: en/git-svn.txt:514
#, priority:100
msgid "Compress $GIT_DIR/svn/<refname>/unhandled.log files and remove $GIT_DIR/svn/<refname>/index files."
msgstr "Compacte os arquivos `$GIT_DIR/svn/<refname>/unhandled.log` e remova os arquivos `$GIT_DIR/svn/<refname>/index`."

#. type: Labeled list
#: en/git-svn.txt:515
#, no-wrap, priority:100
msgid "'reset'"
msgstr "'reset'"

#. type: Plain text
#: en/git-svn.txt:525
#, priority:100
msgid "Undoes the effects of 'fetch' back to the specified revision.  This allows you to re-'fetch' an SVN revision.  Normally the contents of an SVN revision should never change and 'reset' should not be necessary.  However, if SVN permissions change, or if you alter your --ignore-paths option, a 'fetch' may fail with \"not found in commit\" (file not previously visible) or \"checksum mismatch\" (missed a modification).  If the problem file cannot be ignored forever (with --ignore-paths) the only way to repair the repo is to use 'reset'."
msgstr "Desfaz os efeitos do 'fetch' de volta à revisão informada.  Permite que você refaça um 'fetch' de uma revisão SVN.  Normalmente, o conteúdo de uma revisão SVN nunca deve mudar e o 'reset' não deve ser necessário.  No entanto, caso as permissões SVN mudem, ou caso você altere a opção `--ignore-paths`, um 'fetch' poderá falhar com \"não encontrado no commit\" (arquivo não visível anteriormente) ou \"houve uma incompatibilidade com o checksum\" (perdeu uma alteração).  Caso o arquivo com problema não puder ser ignorado para sempre (com a opção `--ignore-paths`), a única maneira de reparar o repositório é usando 'reset'."

#. type: Plain text
#: en/git-svn.txt:530
#, priority:100
msgid "Only the rev_map and refs/remotes/git-svn are changed (see '$GIT_DIR/svn/\\**/.rev_map.*' in the FILES section below for details).  Follow 'reset' with a 'fetch' and then 'git reset' or 'git rebase' to move local branches onto the new tree."
msgstr "Somente o 'rev_map' e o 'refs/remotes/git-svn' são alterados (para mais detalhes, consulte '$GIT_DIR/svn/\\**/.rev_map.*' Na seção FILES abaixo).  Acompanhe 'reset' com um 'fetch' seguido do comando 'git reset' ou 'git rebase' para mover as ramificações locais para a nova árvore."

#. type: Labeled list
#: en/git-svn.txt:531
#, no-wrap, priority:100
msgid "-r <n>"
msgstr "-r <n>"

#. type: Labeled list
#: en/git-svn.txt:532
#, no-wrap, priority:100
msgid "--revision=<n>"
msgstr "--revision=<n>"

#. type: Plain text
#: en/git-svn.txt:535
#, priority:100
msgid "Specify the most recent revision to keep.  All later revisions are discarded."
msgstr "Defina a revisão mais recente que será mantida.  Todas as revisões posteriores são descartadas."

#. type: Plain text
#: en/git-svn.txt:539
#, priority:100
msgid "Discard the specified revision as well, keeping the nearest parent instead."
msgstr "Descarte também a revisão informada, mantendo o parente mais próximo."

#. type: Plain text
#: en/git-svn.txt:541
#, priority:100
msgid "Assume you have local changes in \"master\", but you need to refetch \"r2\"."
msgstr "Suponha que você tenha alterações locais em \"master\", porém é necessário buscar \"r2\" novamente."

#. type: delimited block -
#: en/git-svn.txt:546
#, no-wrap, priority:100
msgid ""
"    r1---r2---r3 remotes/git-svn\n"
"                \\\n"
"                 A---B master\n"
msgstr ""
"    r1---r2---r3 remotes/git-svn\n"
"                \\\n"
"                 A---B master\n"

#. type: Plain text
#: en/git-svn.txt:550
#, priority:100
msgid "Fix the ignore-paths or SVN permissions problem that caused \"r2\" to be incomplete in the first place.  Then:"
msgstr "Corrija os 'ignore-paths' (ignore os caminhos) ou as permissões do SVN que em primeiro lugar, fazia com que \"r2\" estivesse incompleto.  Então:"

#. type: Plain text
#: en/git-svn.txt:554
#, no-wrap, priority:100
msgid ""
"git svn reset -r2 -p\n"
"git svn fetch\n"
msgstr ""
"git svn reset -r2 -p\n"
"git svn fetch\n"

#. type: delimited block -
#: en/git-svn.txt:559
#, no-wrap, priority:100
msgid ""
"    r1---r2'--r3' remotes/git-svn\n"
"      \\\n"
"       r2---r3---A---B master\n"
msgstr ""
"    r1---r2'--r3' remotes/git-svn\n"
"      \\\n"
"       r2---r3---A---B master\n"

#. type: Plain text
#: en/git-svn.txt:564
#, priority:100
msgid "Then fixup \"master\" with 'git rebase'.  Do NOT use 'git merge' or your history will not be compatible with a future 'dcommit'!"
msgstr "Então repare o \"master\" com 'git rebase'.  Não use o comando 'git merge' ou o seu histórico não será mais compatível com um futuro 'dcommit'!"

#. type: Plain text
#: en/git-svn.txt:567
#, no-wrap, priority:100
msgid "git rebase --onto remotes/git-svn A^ master\n"
msgstr "git rebase --onto remotes/git-svn A^ master\n"

#. type: delimited block -
#: en/git-svn.txt:572
#, no-wrap, priority:100
msgid ""
"    r1---r2'--r3' remotes/git-svn\n"
"                \\\n"
"                 A'--B' master\n"
msgstr ""
"    r1---r2'--r3' remotes/git-svn\n"
"                \\\n"
"                 A'--B' master\n"

#. type: Labeled list
#: en/git-svn.txt:577
#, no-wrap, priority:100
msgid "--shared[=(false|true|umask|group|all|world|everybody)]"
msgstr "--shared[=(false|true|umask|group|all|world|everybody)]"

#. type: Plain text
#: en/git-svn.txt:581
#, priority:100
msgid "Only used with the 'init' command.  These are passed directly to 'git init'."
msgstr "Utilizado apenas com o comando 'init'.  Estes são passados diretamente ao comando 'git init'."

#. type: Labeled list
#: en/git-svn.txt:582
#, no-wrap, priority:100
msgid "-r <arg>"
msgstr "-r <arg>"

#. type: Labeled list
#: en/git-svn.txt:583
#, no-wrap, priority:100
msgid "--revision <arg>"
msgstr "--revision <arg>"

#. type: Plain text
#: en/git-svn.txt:585
#, priority:100
msgid "Used with the 'fetch' command."
msgstr "Usado com o comando 'fetch' (traga)."

#. type: Plain text
#: en/git-svn.txt:589
#, priority:100
msgid "This allows revision ranges for partial/cauterized history to be supported.  $NUMBER, $NUMBER1:$NUMBER2 (numeric ranges), $NUMBER:HEAD, and BASE:$NUMBER are all supported."
msgstr "Permite que os intervalos da revisão para o histórico parcial/cauterizado sejam compatíveis.  $NUMBER, $NUMBER1:$NUMBER2 (faixas numéricas), $NUMBER:HEAD, e BASE:$NUMBER todos são compatíveis."

#. type: Plain text
#: en/git-svn.txt:593
#, priority:100
msgid "This can allow you to make partial mirrors when running fetch; but is generally not recommended because history will be skipped and lost."
msgstr "Pode permitir que você faça espelhos parciais ao executar a busca; porém geralmente não é recomendado pois o histórico será ignorado e perdido."

#. type: Labeled list
#: en/git-svn.txt:594
#, no-wrap, priority:100
msgid "-"
msgstr "-"

#. type: Plain text
#: en/git-svn.txt:597
#, priority:100
msgid "Only used with the 'set-tree' command."
msgstr "Apenas utilizado com o comando 'set-tree'."

#. type: Plain text
#: en/git-svn.txt:601
#, priority:100
msgid "Read a list of commits from stdin and commit them in reverse order.  Only the leading sha1 is read from each line, so 'git rev-list --pretty=oneline' output can be used."
msgstr "Leia uma lista dos commits vinda do stdin e faça o commit deles em ordem inversa.  Apenas o SHA1 principal é lido em cada linha, portanto, a saída 'git rev-list --pretty=oneline' pode ser utilizado."

#. type: Labeled list
#: en/git-svn.txt:602
#, ignore-same, no-wrap, priority:100
msgid "--rmdir"
msgstr "--rmdir"

#. type: Plain text
#: en/git-svn.txt:604 en/git-svn.txt:617 en/git-svn.txt:628
#, priority:100
msgid "Only used with the 'dcommit', 'set-tree' and 'commit-diff' commands."
msgstr "Utilizado apenas com os comandos 'dcommit', 'set-tree' e 'commit-diff'."

#. type: Plain text
#: en/git-svn.txt:610
#, priority:100
msgid "Remove directories from the SVN tree if there are no files left behind.  SVN can version empty directories, and they are not removed by default if there are no files left in them.  Git cannot version empty directories.  Enabling this flag will make the commit to SVN act like Git."
msgstr "Remova os diretórios da árvore SVN caso não haja arquivos deixados para trás.  O SVN pode dar versão a diretórios vazios, e por predefinição eles não são removidos, caso não haja arquivos neles.  O Git não pode dar versão nos diretórios vazios.  A ativação dessa opção fará com que o commit no SVN aja como o Git."

#. type: Plain text
#: en/git-svn.txt:613
#, no-wrap, priority:100
msgid "config key: svn.rmdir\n"
msgstr "config key: svn.rmdir\n"

#. type: Plain text
#: en/git-svn.txt:621
#, priority:100
msgid "Edit the commit message before committing to SVN.  This is off by default for objects that are commits, and forced on when committing tree objects."
msgstr "Edite a mensagem do commit antes de fazer o commit no SVN.  A predefinição é deixar desativado para os objetos que sejam commits e é imposto que esteja ativo ao fazer o commit nos objetos da árvore."

#. type: Plain text
#: en/git-svn.txt:624
#, no-wrap, priority:100
msgid "config key: svn.edit\n"
msgstr "config key: svn.edit\n"

#. type: Plain text
#: en/git-svn.txt:631
#, priority:100
msgid "They are both passed directly to 'git diff-tree'; see linkgit:git-diff-tree[1] for more information."
msgstr "Ambos são repassados diretamente para 'git diff-tree'; para mais informações consulte linkgit:git-diff-tree[1]."

#. type: Plain text
#: en/git-svn.txt:635
#, no-wrap, priority:100
msgid ""
"config key: svn.l\n"
"config key: svn.findcopiesharder\n"
msgstr ""
"config key: svn.l\n"
"config key: svn.findcopiesharder\n"

#. type: Labeled list
#: en/git-svn.txt:636
#, no-wrap, priority:100
msgid "-A<filename>"
msgstr "-A<nome-do-arquivo>"

#. type: Labeled list
#: en/git-svn.txt:637
#, no-wrap, priority:100
msgid "--authors-file=<filename>"
msgstr "--authors-file=<nome-do-arquivo>"

#. type: Plain text
#: en/git-svn.txt:640
#, priority:100
msgid "Syntax is compatible with the file used by 'git cvsimport' but an empty email address can be supplied with '<>':"
msgstr "A sintaxe é compatível com o arquivo usado pelo comando 'git cvsimport', porém um endereço de e-mail vazio pode ser informado com '<>':"

#. type: delimited block -
#: en/git-svn.txt:643
#, no-wrap, priority:100
msgid "\tloginname = Joe User <user@example.com>\n"
msgstr "\tloginname = Joe User <user@example.com>\n"

#. type: Plain text
#: en/git-svn.txt:650
#, priority:100
msgid "If this option is specified and 'git svn' encounters an SVN committer name that does not exist in the authors-file, 'git svn' will abort operation. The user will then have to add the appropriate entry.  Re-running the previous 'git svn' command after the authors-file is modified should continue operation."
msgstr "Caso esta opção seja definida e o comando 'git svn' encontrar um nome de que fez o commit SVN que não exista no arquivo de autores, o 'git svn' interromperá a operação. É preciso que o usuário adicione a entrada apropriada.  Após a reexecução do comando 'git svn' anterior depois da devida alteração no arquivo dos autores, deve fazer com que a operação continue."

#. type: Plain text
#: en/git-svn.txt:653
#, no-wrap, priority:100
msgid "config key: svn.authorsfile\n"
msgstr "config key: svn.authorsfile\n"

#. type: Labeled list
#: en/git-svn.txt:654
#, no-wrap, priority:100
msgid "--authors-prog=<filename>"
msgstr "--authors-prog=<nome-do-arquivo>"

#. type: Plain text
#: en/git-svn.txt:661
#, priority:100
msgid "If this option is specified, for each SVN committer name that does not exist in the authors file, the given file is executed with the committer name as the first argument.  The program is expected to return a single line of the form \"Name <email>\" or \"Name <>\", which will be treated as if included in the authors file."
msgstr "Caso esta opção seja definida, para cada nome de quem fez o commit SVN que não exista no arquivo de autores, o arquivo informado será executado com o nome do committer como o primeiro argumento.  Espera-se que o programa retorne uma única linha do formulário \"Nome <e-mail>\" ou \"Nome <>\", que será tratado como se fosse incluído no arquivo dos autores."

#. type: Plain text
#: en/git-svn.txt:666
#, priority:100
msgid "Due to historical reasons a relative 'filename' is first searched relative to the current directory for 'init' and 'clone' and relative to the root of the working tree for 'fetch'. If 'filename' is not found, it is searched like any other command in '$PATH'."
msgstr "Devido a razões históricas, um 'nome do arquivo' relativo é o primeiro pesquisado em relação ao diretório atual através do 'init' e 'clone' em relação à raiz da árvore de trabalho para uma 'busca'. Caso o 'filename' não seja encontrado, ele será pesquisado como qualquer outro comando no '$PATH'."

#. type: Plain text
#: en/git-svn.txt:669
#, no-wrap, priority:100
msgid "config key: svn.authorsProg\n"
msgstr "config key: svn.authorsProg\n"

#. type: Plain text
#: en/git-svn.txt:674
#, priority:100
msgid "Make 'git svn' less verbose. Specify a second time to make it even less verbose."
msgstr "Torne 'git svn' menos loquaz. Defina uma segunda vez para torná-lo ainda menos loquaz."

#. type: Labeled list
#: en/git-svn.txt:677
#, no-wrap, priority:100
msgid "-s<strategy>"
msgstr "-s<estratégia>"

#. type: Plain text
#: en/git-svn.txt:682
#, priority:100
msgid "These are only used with the 'dcommit' and 'rebase' commands."
msgstr "Estes são usados apenas com os comandos 'dcommit' e 'rebase'."

#. type: Plain text
#: en/git-svn.txt:685
#, priority:100
msgid "Passed directly to 'git rebase' when using 'dcommit' if a 'git reset' cannot be used (see 'dcommit')."
msgstr "Passado diretamente para o comando 'git rebase' ao utilizar o 'dcommit' caso um 'git reset' não puder ser utilizado (consulte 'dcommit')."

#. type: Plain text
#: en/git-svn.txt:690
#, priority:100
msgid "This can be used with the 'dcommit', 'rebase', 'branch' and 'tag' commands."
msgstr "Isso pode ser usado com os comandos 'dcommit', 'rebase', 'branch' e 'tag'."

#. type: Plain text
#: en/git-svn.txt:693
#, priority:100
msgid "For 'dcommit', print out the series of Git arguments that would show which diffs would be committed to SVN."
msgstr "Para o 'dcommit', imprima a série de opções Git que exibiriam quais os \"diffs\" seriam feitos os commits para o SVN."

#. type: Plain text
#: en/git-svn.txt:697
#, priority:100
msgid "For 'rebase', display the local branch associated with the upstream svn repository associated with the current branch and the URL of svn repository that will be fetched from."
msgstr "Para 'rebase', exiba o ramo local associado ao repositório 'svn upstream' associado à ramificação atual e a URL do repositório svn que será buscado."

#. type: Plain text
#: en/git-svn.txt:700
#, priority:100
msgid "For 'branch' and 'tag', display the urls that will be used for copying when creating the branch or tag."
msgstr "Para 'ramo' e 'tag', exiba as URLs que serão utilizados para copiar durante a criação do ramo ou tag."

#. type: Labeled list
#: en/git-svn.txt:701
#, ignore-same, no-wrap, priority:100
msgid "--use-log-author"
msgstr "--use-log-author"

#. type: Plain text
#: en/git-svn.txt:705
#, priority:100
msgid "When retrieving svn commits into Git (as part of 'fetch', 'rebase', or 'dcommit' operations), look for the first `From:` line or `Signed-off-by` trailer in the log message and use that as the author string."
msgstr "Ao recuperar commits svn no Git (como parte das operações 'fetch', 'rebase' ou 'dcommit'), procure pela primeira linha `From:` ou `Signed-off-by` na mensagem do registro log e use-a como texto do autor."

#. type: Plain text
#: en/git-svn.txt:708
#, no-wrap, priority:100
msgid "config key: svn.useLogAuthor\n"
msgstr "config key: svn.useLogAuthor\n"

#. type: Labeled list
#: en/git-svn.txt:709
#, ignore-same, no-wrap, priority:100
msgid "--add-author-from"
msgstr "--add-author-from"

#. type: Plain text
#: en/git-svn.txt:715
#, priority:100
msgid "When committing to svn from Git (as part of 'set-tree' or 'dcommit' operations), if the existing log message doesn't already have a `From:` or `Signed-off-by` trailer, append a `From:` line based on the Git commit's author string.  If you use this, then `--use-log-author` will retrieve a valid author string for all commits."
msgstr "Ao fazer o commit no svn a partir do Git (como parte das operações 'set tree' ou 'dcommit'), caso a mensagem do registro log existente ainda não tenha uma linha `From:` ou `Signed-off-by`, adicione uma linha `From:` com base no texto do autor do commit do Git.  Caso você use isso, então o `--use-log-author` recuperará uma sequência de autores válidos para todos os commits."

#. type: Plain text
#: en/git-svn.txt:718
#, no-wrap, priority:100
msgid "config key: svn.addAuthorFrom\n"
msgstr "config key: svn.addAuthorFrom\n"

#. type: Title -
#: en/git-svn.txt:720
#, no-wrap, priority:100
msgid "ADVANCED OPTIONS"
msgstr "OPÇÕES AVANÇADAS"

#. type: Labeled list
#: en/git-svn.txt:722
#, no-wrap, priority:100
msgid "-i<GIT_SVN_ID>"
msgstr "-i<GIT_SVN_ID>"

#. type: Labeled list
#: en/git-svn.txt:723
#, no-wrap, priority:100
msgid "--id <GIT_SVN_ID>"
msgstr "--id <GIT_SVN_ID>"

#. type: Plain text
#: en/git-svn.txt:728
#, priority:100
msgid "This sets GIT_SVN_ID (instead of using the environment).  This allows the user to override the default refname to fetch from when tracking a single URL.  The 'log' and 'dcommit' commands no longer require this switch as an argument."
msgstr "Define o `GIT_SVN_ID` (em vez de usar o ambiente).  Permite que o usuário substitua o nome da referência predefinida para buscar durante o monitoramento de uma única URL.  Os comandos 'log' e 'dcommit' não exigem mais essa opção como argumento."

#. type: Labeled list
#: en/git-svn.txt:729
#, no-wrap, priority:100
msgid "-R<remote name>"
msgstr "-R<nome remoto>"

#. type: Labeled list
#: en/git-svn.txt:730
#, no-wrap, priority:100
msgid "--svn-remote <remote name>"
msgstr "--svn-remote <nome remoto>"

#. type: Plain text
#: en/git-svn.txt:734
#, priority:100
msgid "Specify the [svn-remote \"<remote name>\"] section to use, this allows SVN multiple repositories to be tracked.  Default: \"svn\""
msgstr "Define a seção [svn-remote \"<nome remoto>\"] a ser utilizada, isso permitirá que vários repositórios do SVN sejam monitorados.  Predefinição: \"svn\""

#. type: Labeled list
#: en/git-svn.txt:735
#, ignore-same, no-wrap, priority:100
msgid "--follow-parent"
msgstr "--follow-parent"

#. type: Plain text
#: en/git-svn.txt:750
#, priority:100
msgid "This option is only relevant if we are tracking branches (using one of the repository layout options --trunk, --tags, --branches, --stdlayout). For each tracked branch, try to find out where its revision was copied from, and set a suitable parent in the first Git commit for the branch.  This is especially helpful when we're tracking a directory that has been moved around within the repository.  If this feature is disabled, the branches created by 'git svn' will all be linear and not share any history, meaning that there will be no information on where branches were branched off or merged.  However, following long/convoluted histories can take a long time, so disabling this feature may speed up the cloning process. This feature is enabled by default, use --no-follow-parent to disable it."
msgstr "Esta opção é relevante apenas caso estivermos monitorando as ramificações (usando uma das opções de layout do repositório `--trunk`, `--tags`, `--branches`, `--stdlayout`). Para cada ramo monitorado, tente descobrir de onde a sua revisão foi copiada e defina um pai adequado no primeiro commit do Git para o ramo.  Isso é especialmente útil quando monitoramos um diretório que foi movido pelo repositório.  Caso este recurso esteja desativado, os desvios criados pelo comando 'git svn' serão todos lineares e não compartilharão nenhum histórico, o que significa que não haverá informações sobre onde os desvios foram ramificados ou mesclados.  No entanto, o acompanhamento dos históricos longos/complicados podem levar muito tempo, portanto, desativar este recurso pode acelerar o processo da clonagem. É predefinido que este recurso esteja ativado, não use a opção `--no-follow-parent` para desativá-lo."

#. type: Plain text
#: en/git-svn.txt:753
#, no-wrap, priority:100
msgid "config key: svn.followparent\n"
msgstr "config key: svn.followparent\n"

#. type: Title -
#: en/git-svn.txt:755
#, no-wrap, priority:100
msgid "CONFIG FILE-ONLY OPTIONS"
msgstr "OPÇÕES APENAS PARA A CONFIGURAÇÃO DOS ARQUIVOS"

#. type: Labeled list
#: en/git-svn.txt:757
#, no-wrap, priority:100
msgid "svn.noMetadata"
msgstr "svn.noMetadata"

#. type: Labeled list
#: en/git-svn.txt:758
#, no-wrap, priority:100
msgid "svn-remote.<name>.noMetadata"
msgstr "svn-remote.<nome>.noMetadata"

#. type: Plain text
#: en/git-svn.txt:760
#, priority:100
msgid "This gets rid of the 'git-svn-id:' lines at the end of every commit."
msgstr "Se livra das linhas 'git-svn-id:' no final de cada commit."

#. type: Plain text
#: en/git-svn.txt:765
#, priority:100
msgid "This option can only be used for one-shot imports as 'git svn' will not be able to fetch again without metadata. Additionally, if you lose your '$GIT_DIR/svn/\\**/.rev_map.*' files, 'git svn' will not be able to rebuild them."
msgstr "Esta opção pode ser usada apenas para as importações de captura única, já que 'git svn' não poderá buscar novamente sem os metadados. Além disso, caso perca os seus arquivos '$GIT_DIR/svn/\\**/.rev_map.*', o comando 'git svn' não será capaz de reconstruí-los."

#. type: Plain text
#: en/git-svn.txt:769
#, priority:100
msgid "The 'git svn log' command will not work on repositories using this, either.  Using this conflicts with the 'useSvmProps' option for (hopefully) obvious reasons."
msgstr "O comando 'git svn log' também não funcionará nos repositórios que usam isso.  Usar isso entra em conflito com a opção 'useSvmProps' por (espero) razões óbvias."

#. type: Plain text
#: en/git-svn.txt:777
#, priority:100
msgid "This option is NOT recommended as it makes it difficult to track down old references to SVN revision numbers in existing documentation, bug reports, and archives.  If you plan to eventually migrate from SVN to Git and are certain about dropping SVN history, consider https://github.com/newren/git-filter-repo[git-filter-repo] instead.  filter-repo also allows reformatting of metadata for ease-of-reading and rewriting authorship info for non-\"svn.authorsFile\" users."
msgstr "Esta opção NÃO é recomendada pois dificulta o monitoramento das referências mais antigas para os números da revisão do SVN na documentação existente, nos relatórios de erros e nos arquivos.  Caso planeje eventualmente migrar do SVN para o Git e tenha certeza de descartar o histórico do SVN, em vez disso, considere a consulta no https://github.com/newren/git-filter-repo[git-filter-repo].  O 'filter-repo' também permite reformatar os metadados para facilitar a leitura e reescrever as informações da autoria para os usuários que não estejam no \"svn.authorsFile\"."

#. type: Labeled list
#: en/git-svn.txt:778
#, no-wrap, priority:100
msgid "svn.useSvmProps"
msgstr "svn.useSvmProps"

#. type: Labeled list
#: en/git-svn.txt:779
#, no-wrap, priority:100
msgid "svn-remote.<name>.useSvmProps"
msgstr "svn-remote.<nome>.useSvmProps"

#. type: Plain text
#: en/git-svn.txt:782
#, priority:100
msgid "This allows 'git svn' to re-map repository URLs and UUIDs from mirrors created using SVN::Mirror (or svk) for metadata."
msgstr "Isso permite ao 'git svn' remapear novamente as URLs e os UUIDs do repositório a partir dos espelhos criados usando SVN::Mirror (ou svk) para o metadados."

#. type: Plain text
#: en/git-svn.txt:790
#, priority:100
msgid "If an SVN revision has a property, \"svm:headrev\", it is likely that the revision was created by SVN::Mirror (also used by SVK).  The property contains a repository UUID and a revision.  We want to make it look like we are mirroring the original URL, so introduce a helper function that returns the original identity URL and UUID, and use it when generating metadata in commit messages."
msgstr "Caso uma revisão SVN tenha uma propriedade \"svm:headrev\", é provável que a revisão tenha sido criada através do `SVN::Mirror` (também utilizado pelo SVK).  A propriedade contém um UUID do repositório e uma revisão.  Queremos fazer parecer que estamos espelhando a URL original; portanto, introduza uma função auxiliar que retorne a URL da identidade original e seu UUID e utilize-a ao gerar os metadados nas mensagens dos commits."

#. type: Labeled list
#: en/git-svn.txt:791
#, no-wrap, priority:100
msgid "svn.useSvnsyncProps"
msgstr "svn.useSvnsyncProps"

#. type: Labeled list
#: en/git-svn.txt:792
#, no-wrap, priority:100
msgid "svn-remote.<name>.useSvnsyncprops"
msgstr "svn-remote.<nome>.useSvnsyncprops"

#. type: Plain text
#: en/git-svn.txt:796
#, priority:100
msgid "Similar to the useSvmProps option; this is for users of the svnsync(1) command distributed with SVN 1.4.x and later."
msgstr "Semelhante à opção 'useSvmProps'; isso serve para usuários do comando svnsync(1) distribuído com o SVN 1.4.x e mais recentes."

#. type: Labeled list
#: en/git-svn.txt:797
#, no-wrap, priority:100
msgid "svn-remote.<name>.rewriteRoot"
msgstr "svn-remote.<nome>.rewriteRoot"

#. type: Plain text
#: en/git-svn.txt:803
#, priority:100
msgid "This allows users to create repositories from alternate URLs.  For example, an administrator could run 'git svn' on the server locally (accessing via file://) but wish to distribute the repository with a public http:// or svn:// URL in the metadata so users of it will see the public URL."
msgstr "Permite que os usuários criem repositórios a partir das URLs alternativas.  Como, por exemplo, um administrador pode executar o comando 'git svn' no servidor localmente (acessando através do file://), mas queira distribuir o repositório com uma URL pública 'http://' ou 'svn://' nos metadados para que os usuários vejam a URL pública."

#. type: Labeled list
#: en/git-svn.txt:804
#, no-wrap, priority:100
msgid "svn-remote.<name>.rewriteUUID"
msgstr "svn-remote.<nome>.rewriteUUID"

#. type: Plain text
#: en/git-svn.txt:809
#, priority:100
msgid "Similar to the useSvmProps option; this is for users who need to remap the UUID manually. This may be useful in situations where the original UUID is not available via either useSvmProps or useSvnsyncProps."
msgstr "Semelhante à opção 'useSvmProps'; isso serve para os usuários que precisam remapear o UUID manualmente. Pode ser útil em situações onde o UUID original não está disponível através do 'useSvmProps' ou o 'useSvnsyncProps'."

#. type: Labeled list
#: en/git-svn.txt:810
#, no-wrap, priority:100
msgid "svn-remote.<name>.pushurl"
msgstr "svn-remote.<nome>.pushurl"

#. type: Plain text
#: en/git-svn.txt:819
#, priority:100
msgid "Similar to Git's `remote.<name>.pushurl`, this key is designed to be used in cases where 'url' points to an SVN repository via a read-only transport, to provide an alternate read/write transport. It is assumed that both keys point to the same repository. Unlike 'commiturl', 'pushurl' is a base path. If either 'commiturl' or 'pushurl' could be used, 'commiturl' takes precedence."
msgstr "Semelhante ao `remote.<nome>.pushurl` do Git, essa chave é projetada para ser usada nos casos onde a 'url' apontr para um repositório SVN através de um transporte de leitura apenas, fornecendo um transporte alternativo de leitura/gravação. Supõe-se que ambas as chaves apontem para o mesmo repositório. Ao contrário do 'commiturl', 'pushurl' é um caminho da base. Caso 'commiturl' ou 'pushurl' puder ser usado, o 'commiturl' terá precedência."

#. type: Labeled list
#: en/git-svn.txt:820
#, no-wrap, priority:100
msgid "svn.brokenSymlinkWorkaround"
msgstr "svn.brokenSymlinkWorkaround"

#. type: Plain text
#: en/git-svn.txt:828
#, priority:100
msgid "This disables potentially expensive checks to workaround broken symlinks checked into SVN by broken clients.  Set this option to \"false\" if you track a SVN repository with many empty blobs that are not symlinks.  This option may be changed while 'git svn' is running and take effect on the next revision fetched.  If unset, 'git svn' assumes this option to be \"true\"."
msgstr "Desabilita as verificações potencialmente dispendiosas para solucionar os links simbólicos quebrados registrados no SVN feito por clientes problemáticos.  Defina esta opção como 'false' caso você monitore um repositório SVN com muitas bolhas vazias que não sejam links simbólicos.  Esta opção pode ser alterada enquanto o comando 'git svn' estiver em execução e entrar em vigor na busca da próxima revisão.  Caso não esteja definido, o comando 'git svn' assume que esta opção seja \"verdadeira\" (true)."

#. type: Labeled list
#: en/git-svn.txt:829
#, no-wrap, priority:100
msgid "svn.pathnameencoding"
msgstr "svn.pathnameencoding"

#. type: Plain text
#: en/git-svn.txt:834
#, priority:100
msgid "This instructs git svn to recode pathnames to a given encoding.  It can be used by windows users and by those who work in non-utf8 locales to avoid corrupted file names with non-ASCII characters.  Valid encodings are the ones supported by Perl's Encode module."
msgstr "Informa o 'git svn' para re-codificar os nomes do caminho para uma determinada codificação.  Ele pode ser utilizado pelos usuários do Windows e por aqueles que trabalham em locais que não utilizem utf8, para evitar que nomes dos arquivos sejam corrompidos com caracteres que não sejam ASCII.  Codificações válidas são compatíveis pelo módulo Encode do Perl."

#. type: Labeled list
#: en/git-svn.txt:835
#, no-wrap, priority:100
msgid "svn-remote.<name>.automkdirs"
msgstr "svn-remote.<nome>.automkdirs"

#. type: Plain text
#: en/git-svn.txt:842
#, priority:100
msgid "Normally, the \"git svn clone\" and \"git svn rebase\" commands attempt to recreate empty directories that are in the Subversion repository.  If this option is set to \"false\", then empty directories will only be created if the \"git svn mkdirs\" command is run explicitly.  If unset, 'git svn' assumes this option to be \"true\"."
msgstr "Normalmente, os comandos \"git svn clone\" e o \"git svn rebase\" tentam recriar os diretórios vazios que estão no repositório do Subversion.  Caso esta opção esteja configurada como 'false', os diretórios vazios serão criados apenas caso o comando \"git svn mkdirs\" seja executado de forma explicita.  Caso não esteja definido, o comando 'git svn' assume que esta opção seja \"verdadeira\" (true)."

#. type: Plain text
#: en/git-svn.txt:847
#, priority:100
msgid "Since the noMetadata, rewriteRoot, rewriteUUID, useSvnsyncProps and useSvmProps options all affect the metadata generated and used by 'git svn'; they *must* be set in the configuration file before any history is imported and these settings should never be changed once they are set."
msgstr "Como as opções 'noMetadata', 'rewriteRoot', 'rewriteUUID', 'useSvnsyncProps' e 'useSvmProps' afetam os metadados gerados e usados pelo comando 'git svn'; eles *devem* ser definidos no arquivo de configuração antes que qualquer histórico seja importado e estas configurações nunca devem ser alteradas depois que forem definidas."

#. type: Plain text
#: en/git-svn.txt:851
#, priority:100
msgid "Additionally, only one of these options can be used per svn-remote section because they affect the 'git-svn-id:' metadata line, except for rewriteRoot and rewriteUUID which can be used together."
msgstr "Além disso, apenas uma destas opções podem ser utilizadas por uma seção 'svn-remote' porque elas afetam a linha de metadados 'git-svn-id:', exceto para `rewriteRoot` e `rewriteUUID`, que podem ser utilizadas juntas."

#. type: Title -
#: en/git-svn.txt:854
#, no-wrap, priority:100
msgid "BASIC EXAMPLES"
msgstr "EXEMPLOS BÁSICOS"

#. type: Plain text
#: en/git-svn.txt:858
#, priority:100
msgid "Tracking and contributing to the trunk of a Subversion-managed project (ignoring tags and branches):"
msgstr "Monitorando e contribuindo para o 'trunk' de um projeto gerenciado pelo Subversion (ignorando as tags e as ramificações):"

#. type: delimited block -
#: en/git-svn.txt:876
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"# Clone a repo (like git clone):\n"
"\tgit svn clone http://svn.example.com/project/trunk\n"
"# Enter the newly cloned directory:\n"
"\tcd trunk\n"
"# You should be on master branch, double-check with 'git branch'\n"
"\tgit branch\n"
"# Do some work and commit locally to Git:\n"
"\tgit commit ...\n"
"# Something is committed to SVN, rebase your local changes against the\n"
"# latest changes in SVN:\n"
"\tgit svn rebase\n"
"# Now commit your changes (that were committed previously using Git) to SVN,\n"
"# as well as automatically updating your working HEAD:\n"
"\tgit svn dcommit\n"
"# Append svn:ignore settings to the default Git exclude file:\n"
"\tgit svn show-ignore >> .git/info/exclude\n"
msgstr ""
"# Clone um repo (como o git clone):\n"
"\tgit svn clone http://svn.example.com/project/trunk\n"
"# Entre no novo diretório que foi clonado:\n"
"\tcd trunk\n"
"# Você deve estar no ramo master, verifique com 'git branch'\n"
"\tgit branch\n"
"# Trabalhe em algo e faça o commit local:\n"
"\tgit commit ...\n"
"# Algum commit está feito no SVN, reconstrua as suas alterações locais contra as\n"
"# últimas alterações no SVN:\n"
"\tgit svn rebase\n"
"# Agora, faça o commit das suas alterações (que foram anteriormente feitas utilizando o Git) no SVN,\n"
"# bem como atualizar automaticamente o seu HEAD de trabalho:\n"
"\tgit svn dcommit\n"
"# Anexe as configurações do svn:ignore ao arquivo de exclusão predefinido do Git:\n"
"\tgit svn show-ignore >> .git/info/exclude\n"

#. type: Plain text
#: en/git-svn.txt:880
#, priority:100
msgid "Tracking and contributing to an entire Subversion-managed project (complete with a trunk, tags and branches):"
msgstr "Monitorando e contribuindo para todo um projeto gerenciado pelo Subversion (completo com um 'trunk', tags e ramificações):"

#. type: delimited block -
#: en/git-svn.txt:895
#, no-wrap, priority:100
msgid ""
"# Clone a repo with standard SVN directory layout (like git clone):\n"
"\tgit svn clone http://svn.example.com/project --stdlayout --prefix svn/\n"
"# Or, if the repo uses a non-standard directory layout:\n"
"\tgit svn clone http://svn.example.com/project -T tr -b branch -t tag --prefix svn/\n"
"# View all branches and tags you have cloned:\n"
"\tgit branch -r\n"
"# Create a new branch in SVN\n"
"\tgit svn branch waldo\n"
"# Reset your master to trunk (or any other branch, replacing 'trunk'\n"
"# with the appropriate name):\n"
"\tgit reset --hard svn/trunk\n"
"# You may only dcommit to one branch/tag/trunk at a time.  The usage\n"
"# of dcommit/rebase/show-ignore should be the same as above.\n"
msgstr ""
"# Clone um repositório com o layout do diretório SVN predefinido(como o git clone):\n"
"\tgit svn clone http://svn.example.com/project --stdlayout --prefix svn/\n"
"# Ou, se o repositório utilizar um layout de diretório fora do padrão:\n"
"\tgit svn clone http://svn.example.com/project -T tr -b branch -t tag --prefix svn/\n"
"# Ver todos os ramos e tags que você clonou:\n"
"\tgit branch -r\n"
"# Crie um novo ramo no SVN\n"
"\tgit svn branch waldo\n"
"# Redefina o seu 'master' para 'trunk' (ou qualquer outro ramo, substituindo o 'trunk'\n"
"# para o nome apropriado):\n"
"\tgit reset --hard svn/trunk\n"
"# Você só pode fazer o commit para um ramo/tag/trunk por vez.  A forma de utilização\n"
"# do dcommit/rebase/show-ignore deve ser o mesmo mostrado acima.\n"

#. type: Plain text
#: en/git-svn.txt:903
#, priority:100
msgid "The initial 'git svn clone' can be quite time-consuming (especially for large Subversion repositories). If multiple people (or one person with multiple machines) want to use 'git svn' to interact with the same Subversion repository, you can do the initial 'git svn clone' to a repository on a server and have each person clone that repository with 'git clone':"
msgstr "O comando 'git svn clone' inicial pode consumir bastante tempo (especialmente para grandes repositórios Subversion). Caso várias pessoas (ou uma pessoa com várias máquinas) quiserem usar o comando 'git svn' para interagir com o mesmo repositório do Subversion, você poderá executar o comando 'git svn clone' inicial em um repositório em um servidor e fazer com que cada pessoa clone esse repositório com o comando 'clone git':"

#. type: delimited block -
#: en/git-svn.txt:924
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"# Do the initial import on a server\n"
"\tssh server \"cd /pub && git svn clone http://svn.example.com/project [options...]\"\n"
"# Clone locally - make sure the refs/remotes/ space matches the server\n"
"\tmkdir project\n"
"\tcd project\n"
"\tgit init\n"
"\tgit remote add origin server:/pub/project\n"
"\tgit config --replace-all remote.origin.fetch '+refs/remotes/*:refs/remotes/*'\n"
"\tgit fetch\n"
"# Prevent fetch/pull from remote Git server in the future,\n"
"# we only want to use git svn for future updates\n"
"\tgit config --remove-section remote.origin\n"
"# Create a local branch from one of the branches just fetched\n"
"\tgit checkout -b master FETCH_HEAD\n"
"# Initialize 'git svn' locally (be sure to use the same URL and\n"
"# --stdlayout/-T/-b/-t/--prefix options as were used on server)\n"
"\tgit svn init http://svn.example.com/project [options...]\n"
"# Pull the latest changes from Subversion\n"
"\tgit svn rebase\n"
msgstr ""
"# Faça a importação inicial em um servidor\n"
"\tssh server \"cd /pub && git svn clone http://svn.example.com/project [options...]\"\n"
"# Clone localmente - tenha certeza se os espaços refs/remotes/ coincidem com o servidor\n"
"\tmkdir project\n"
"\tcd project\n"
"\tgit init\n"
"\tgit remote add origin server:/pub/project\n"
"\tgit config --replace-all remote.origin.fetch '+refs/remotes/*:refs/remotes/*'\n"
"\tgit fetch\n"
"# Impeça o 'fetch/pull' do servidor Git remoto no futuro,\n"
"# queremos utilizar apenas o git svn para as atualizações futuras\n"
"\tgit config --remove-section remote.origin\n"
"# Crie um ramo local a partir de uma das ramificações que foram buscadas\n"
"\tgit checkout -b master FETCH_HEAD\n"
"# Inicialize o 'git svn' localmente (tenha certeza de utilizar a mesma URL\n"
"# e as opções --stdlayout/-T/-b/-t/--prefix que foram utilizadas no servidor)\n"
"\tgit svn init http://svn.example.com/project [options...]\n"
"# Obtenha as últimas alterações do Subversion\n"
"\tgit svn rebase\n"

#. type: Title -
#: en/git-svn.txt:927
#, no-wrap, priority:100
msgid "REBASE VS. PULL/MERGE"
msgstr "RECONSTRUIR VS. \"PULL/MERGE\""

#. type: Plain text
#: en/git-svn.txt:933
#, priority:100
msgid "Prefer to use 'git svn rebase' or 'git rebase', rather than 'git pull' or 'git merge' to synchronize unintegrated commits with a 'git svn' branch. Doing so will keep the history of unintegrated commits linear with respect to the upstream SVN repository and allow the use of the preferred 'git svn dcommit' subcommand to push unintegrated commits back into SVN."
msgstr "Prefira usar o comando 'git svn rebase' ou o 'git rebase', em vez do comando 'git pull' ou o 'git merge' para sincronizar os commits que não foram integrados a um ramo com 'git svn'. Isso manterá o histórico linear dos commits não integrados em relação ao repositório SVN 'upstream' e permitirá a utilização do subcomando 'git svn dcommit' preferido para impulsionar os commits que não foram integrados de volta ao SVN."

#. type: Plain text
#: en/git-svn.txt:941
#, priority:100
msgid "Originally, 'git svn' recommended that developers pulled or merged from the 'git svn' branch.  This was because the author favored `git svn set-tree B` to commit a single head rather than the `git svn set-tree A..B` notation to commit multiple commits. Use of 'git pull' or 'git merge' with `git svn set-tree A..B` will cause non-linear history to be flattened when committing into SVN and this can lead to merge commits unexpectedly reversing previous commits in SVN."
msgstr "Originalmente, o comando 'git svn' recomendava que os desenvolvedores extraíssem ou mesclassem o ramo 'git svn'.  Isso ocorreu porque o autor favoreceu o `git svn set tree B` para o commit um único cabeçalho, em vez da notação `git svn set-tree A..B` para fazer o commit de vários commits. O uso do comando 'git pull' ou do 'git merge' com o `git svn set tree A..B` fará com que o histórico não linear seja achatado ao fazer o commit no SVN e isso pode levar a uma mesclagem dos commits, revertendo de forma inesperada os commits anteriores no SVN."

#. type: Title -
#: en/git-svn.txt:943
#, no-wrap, priority:100
msgid "MERGE TRACKING"
msgstr "MONITORAMENTO DA MESCLAGEM"

#. type: Plain text
#: en/git-svn.txt:950
#, priority:100
msgid "While 'git svn' can track copy history (including branches and tags) for repositories adopting a standard layout, it cannot yet represent merge history that happened inside git back upstream to SVN users.  Therefore it is advised that users keep history as linear as possible inside Git to ease compatibility with SVN (see the CAVEATS section below)."
msgstr "Embora o 'git svn' possa monitorar a cópia do histórico (incluindo as ramificações e as tags) dos repositórios que adotam um layout padrão, ele ainda não pode representar o histórico da mesclagem que ocorreu dentro do git de volta para os usuários do SVN.  Portanto, é recomendável que os usuários mantenham o histórico o mais linear possível dentro do Git para facilitar a compatibilidade com o SVN (consulte a seção RESSALVAS abaixo)."

#. type: Title -
#: en/git-svn.txt:952
#, no-wrap, priority:100
msgid "HANDLING OF SVN BRANCHES"
msgstr "LIDANDO COM OS RAMOS DO SVN"

#. type: Plain text
#: en/git-svn.txt:960
#, priority:100
msgid "If 'git svn' is configured to fetch branches (and --follow-branches is in effect), it sometimes creates multiple Git branches for one SVN branch, where the additional branches have names of the form 'branchname@nnn' (with nnn an SVN revision number).  These additional branches are created if 'git svn' cannot find a parent commit for the first commit in an SVN branch, to connect the branch to the history of the other branches."
msgstr "Caso o 'git svn' estiver configurado para buscar as ramificações (e a opção `--follow-branches` estiver em vigor), às vezes ele criará várias ramificações Git para um ramo SVN, onde as ramificações adicionais terão nomes no formato 'nomedoramo@nnn' (onde 'nnn' é o número de revisão SVN).  Estas ramificações adicionais são criadas caso o comando 'git svn' não puder encontrar um commit parente para o primeiro commit em um ramo SVN, para conectar o ramo ao histórico das outras ramificações."

#. type: Plain text
#: en/git-svn.txt:976
#, priority:100
msgid "Normally, the first commit in an SVN branch consists of a copy operation. 'git svn' will read this commit to get the SVN revision the branch was created from. It will then try to find the Git commit that corresponds to this SVN revision, and use that as the parent of the branch. However, it is possible that there is no suitable Git commit to serve as parent.  This will happen, among other reasons, if the SVN branch is a copy of a revision that was not fetched by 'git svn' (e.g. because it is an old revision that was skipped with `--revision`), or if in SVN a directory was copied that is not tracked by 'git svn' (such as a branch that is not tracked at all, or a subdirectory of a tracked branch). In these cases, 'git svn' will still create a Git branch, but instead of using an existing Git commit as the parent of the branch, it will read the SVN history of the directory the branch was copied from and create appropriate Git commits.  This is indicated by the message \"Initializing parent: <branchname>\"."
msgstr "Normalmente, o primeiro commit em um ramo SVN consiste em uma operação de cópia. o 'git svn' irá ler este commit obtendo a revisão SVN onde o ramo foi criado. Ele tentará encontrar o commit do Git que coincida com esta revisão do SVN e vai usá-lo como o parente do ramo. Contudo, é possível que não haja um commit Git adequado para servir como parente.  Isso acontecerá, dentre outros motivos, caso o ramo SVN seja uma cópia de uma revisão que não foi buscada pelo 'git svn' (por exemplo, porque é uma revisão antiga que foi ignorada com a opção `--revision`), ou no caso do SVN ter sido copiado de um diretório que não é monitorado pelo 'git svn' (como um ramo que não é monitorado de maneira alguma ou um subdiretório de um ramo monitorado). Nesses casos, o comando 'git svn' ainda criará um ramo Git, porém, em vez de utilizar um commit Git já existente como parente do ramo, ele lerá o histórico SVN do diretório onde o ramo foi copiado e criará os commits Git apropriadas.  Isto é indicado através da mensagem \"Initializing parent: <nome-do-ramo>\" (Inicializando parente: <nomedoramo>)."

#. type: Plain text
#: en/git-svn.txt:983
#, priority:100
msgid "Additionally, it will create a special branch named '<branchname>@<SVN-Revision>', where <SVN-Revision> is the SVN revision number the branch was copied from.  This branch will point to the newly created parent commit of the branch.  If in SVN the branch was deleted and later recreated from a different version, there will be multiple such branches with an '@'."
msgstr "Além disso, ele criará um ramo especial chamado '<nome-do-ramo>@<SVN-Revision>', onde <Revisão SVN> é o número da revisão do SVN onde o ramo foi copiado.  Este ramo apontará para o commit da origem recém-criado do ramo.  Se no SVN o ramo foi excluído e posteriormente recriado a partir de uma versão diferente, haverá vários ramos com um '@'."

#. type: Plain text
#: en/git-svn.txt:986
#, priority:100
msgid "Note that this may mean that multiple Git commits are created for a single SVN revision."
msgstr "Observe que isso pode significar que vários commits do Git sejam criados para uma única revisão do SVN."

#. type: Plain text
#: en/git-svn.txt:996
#, priority:100
msgid "An example: in an SVN repository with a standard trunk/tags/branches layout, a directory trunk/sub is created in r.100.  In r.200, trunk/sub is branched by copying it to branches/. 'git svn clone -s' will then create a branch 'sub'. It will also create new Git commits for r.100 through r.199 and use these as the history of branch 'sub'. Thus there will be two Git commits for each revision from r.100 to r.199 (one containing trunk/, one containing trunk/sub/). Finally, it will create a branch 'sub@200' pointing to the new parent commit of branch 'sub' (i.e. the commit for r.200 and trunk/sub/)."
msgstr "Um exemplo: em um repositório SVN com um layout predefinido de 'trunk/tags/branches', um diretório 'trunk/sub' é criado na 'r.100'.  Em 'r.200', o 'trunk/sub' é ramificado ao copiá-lo para 'branches/'. O comando 'git svn clone -s' criará um ramo 'sub'. Ele também criará novos commits do Git para 'r.100' até 'r.199' e os utilizará como o histórico do ramo 'sub'. Portanto, haverá dois commits do Git para cada revisão de 'r.100' até 'r.199' (um contendo 'trunk/', outro contendo 'trunk/sub/'). Finalmente será criado o ramo 'sub@200' apontando para o novo commit parente do ramo 'sub' (o commit para 'r.200' e o 'trunk/sub/' por exemplo)."

#. type: Plain text
#: en/git-svn.txt:1006
#, priority:100
msgid "For the sake of simplicity and interoperating with Subversion, it is recommended that all 'git svn' users clone, fetch and dcommit directly from the SVN server, and avoid all 'git clone'/'pull'/'merge'/'push' operations between Git repositories and branches.  The recommended method of exchanging code between Git branches and users is 'git format-patch' and 'git am', or just 'dcommit'ing to the SVN repository."
msgstr "Por uma questão de simplicidade e interoperação com o Subversion, é recomendável que todos os usuários do 'git svn' clonem, busquem e desfaçam um commit diretamente no servidor SVN e evitem todas as operações dos comandos 'git clone'/'pull'/'merge'/'push' entre os repositórios e as ramificações do Git.  O método recomendado da troca do código entre os ramos e os usuários do Git é 'git format-patch' e 'git am', ou apenas desfazendo o commit com 'dcommit' no repositório SVN."

#. type: Plain text
#: en/git-svn.txt:1012
#, priority:100
msgid "Running 'git merge' or 'git pull' is NOT recommended on a branch you plan to 'dcommit' from because Subversion users cannot see any merges you've made.  Furthermore, if you merge or pull from a Git branch that is a mirror of an SVN branch, 'dcommit' may commit to the wrong branch."
msgstr "Executar o comando 'git merge' ou o 'git pull' NÃO é recomendado em um ramo onde você planeja fazer um 'dcommit', porque os usuários do Subversion não podem ver nenhuma mesclagem que você tenha feito.  Além disso, caso você mescle ou extraia de um ramo Git que seja um espelho de um ramo SVN, o 'dcommit' poderá fazer o commit do ramo errado."

#. type: Plain text
#: en/git-svn.txt:1015
#, priority:100
msgid "If you do merge, note the following rule: 'git svn dcommit' will attempt to commit on top of the SVN commit named in"
msgstr "Caso você mescle, observe a seguinte regra: o `git svn dcommit` tentará fazer o commit sobre o commit do SVN informado em"

#. type: delimited block -
#: en/git-svn.txt:1017
#, no-wrap, priority:100
msgid "git log --grep=^git-svn-id: --first-parent -1\n"
msgstr "git log --grep=^git-svn-id: --first-parent -1\n"

#. type: Plain text
#: en/git-svn.txt:1022
#, priority:100
msgid "You 'must' therefore ensure that the most recent commit of the branch you want to dcommit to is the 'first' parent of the merge.  Chaos will ensue otherwise, especially if the first parent is an older commit on the same SVN branch."
msgstr "Você 'deve' garantir, portanto, que o commit mais recente do ramo que você queira fazer o commit seja o 'primeiro' pai da mesclagem.  O caos ocorrerá de outra forma, especialmente caso o primeiro pai seja um commit mais antigo no mesmo ramo SVN."

#. type: Plain text
#: en/git-svn.txt:1027
#, priority:100
msgid "'git clone' does not clone branches under the refs/remotes/ hierarchy or any 'git svn' metadata, or config.  So repositories created and managed with using 'git svn' should use 'rsync' for cloning, if cloning is to be done at all."
msgstr "O comando 'git clone' não clona as ramificações sob a hierarquia 'refs/remotes/', qualquer metadado 'git svn' ou configuração. Portanto, os repositórios criados e gerenciados com a utilização do 'git svn' devem utilizar o 'rsync' para a clonagem, caso a clonagem precise ser feita."

#. type: Plain text
#: en/git-svn.txt:1032
#, priority:100
msgid "Since 'dcommit' uses rebase internally, any Git branches you 'git push' to before 'dcommit' on will require forcing an overwrite of the existing ref on the remote repository.  This is generally considered bad practice, see the linkgit:git-push[1] documentation for details."
msgstr "Como o 'dcommit' usa o 'rebase' internamente, qualquer ramificação do Git para onde você fez o comando 'git push' antes do 'dcommit' exigirá uma reposição da \"ref\" existente no repositório remoto.  Isso geralmente é considerado uma má prática, consulte a documentação do linkgit:git-push[1] para obter mais detalhes."

#. type: Plain text
#: en/git-svn.txt:1037
#, priority:100
msgid "Do not use the --amend option of linkgit:git-commit[1] on a change you've already dcommitted.  It is considered bad practice to --amend commits you've already pushed to a remote repository for other users, and dcommit with SVN is analogous to that."
msgstr "Não utilize a opção `--amend` do linkgit:git-commit[1] nas alterações que você já tenha desfeito no commit.  Não é considerado uma boa prática utilizar a opção `--amend` nos commits que você já impulsionou para um repositório remoto para outros usuários, desfazer o commit com SVN é análogo a isto."

#. type: Plain text
#: en/git-svn.txt:1052
#, priority:100
msgid "When cloning an SVN repository, if none of the options for describing the repository layout is used (--trunk, --tags, --branches, --stdlayout), 'git svn clone' will create a Git repository with completely linear history, where branches and tags appear as separate directories in the working copy.  While this is the easiest way to get a copy of a complete repository, for projects with many branches it will lead to a working copy many times larger than just the trunk. Thus for projects using the standard directory structure (trunk/branches/tags), it is recommended to clone with option `--stdlayout`. If the project uses a non-standard structure, and/or if branches and tags are not required, it is easiest to only clone one directory (typically trunk), without giving any repository layout options.  If the full history with branches and tags is required, the options `--trunk` / `--branches` / `--tags` must be used."
msgstr "Ao clonar um repositório SVN, caso nenhuma das opções para descrever o layout do repositório seja usada (`--trunk`, `--tags`, `--branches`, `--stdlayout`), o comando 'git svn clone' criará um repositório Git com o histórico completamente linear, onde as ramificações e as tags aparecerão como diretórios separados na cópia de trabalho.  Embora essa seja a maneira mais fácil de se obter uma cópia de um repositório completo, para os projetos com muitas ramificações, ela resultará em uma cópia de trabalho muitas vezes maior do que apenas o 'trunk'. Portanto, para os projetos que utilizem a estrutura predefinida dos diretórios ('trunk/branches/tags'), é recomendável clonar com a opção `--stdlayout`. Caso o projeto use uma estrutura fora do padrão e/ou caso as ramificações e as tags não forem necessárias, é mais fácil clonar um diretório (normalmente o 'trunk'), sem fornecer as opções do layout do repositório.  Caso o histórico completo das ramificações e das tags seja necessário, as opções `--trunk` / `--branches` / `--tags` devem ser usadas."

#. type: Plain text
#: en/git-svn.txt:1059
#, priority:100
msgid "When using multiple --branches or --tags, 'git svn' does not automatically handle name collisions (for example, if two branches from different paths have the same name, or if a branch and a tag have the same name).  In these cases, use 'init' to set up your Git repository then, before your first 'fetch', edit the $GIT_DIR/config file so that the branches and tags are associated with different name spaces.  For example:"
msgstr "Quando utilizar vários `--branches` ou `--tags`, o comando `git svn` não lida com as colisões dos nomes de forma automática (caso dois ramos com caminhos diferentes tiverem o mesmo nome ou caso um ramo e uma marcação tiverem o mesmo nome por exemplo).  Nestes casos, utilize `init` para configurar o seu repositório Git antes do seu primeiro 'fetch', edite o arquivo `$GIT_DIR/config` para que as ramificações e as tags sejam associadas com diferentes espaços de nome.  Por exemplo:"

#. type: Plain text
#: en/git-svn.txt:1062
#, no-wrap, priority:100
msgid ""
"\tbranches = stable/*:refs/remotes/svn/stable/*\n"
"\tbranches = debug/*:refs/remotes/svn/debug/*\n"
msgstr ""
"\tbranches = stable/*:refs/remotes/svn/stable/*\n"
"\tbranches = debug/*:refs/remotes/svn/debug/*\n"

#. type: Plain text
#: en/git-svn.txt:1073
#, priority:100
msgid "'git svn' stores [svn-remote] configuration information in the repository $GIT_DIR/config file.  It is similar the core Git [remote] sections except 'fetch' keys do not accept glob arguments; but they are instead handled by the 'branches' and 'tags' keys.  Since some SVN repositories are oddly configured with multiple projects glob expansions such those listed below are allowed:"
msgstr "O 'git svn' armazena as informações de configuração [svn-remote] no arquivo '$GIT_DIR/config' do repositório.  É semelhante às seções principais do Git [remote], exceto que as teclas 'fetch' não aceitam os argumentos globais; porém eles são manipulados pelas teclas 'branches' e 'tags'.  Como alguns repositórios SVN são configurados de forma estranha com vários projetos, as expansões globais são permitidas, como as listadas abaixo:"

#. type: delimited block -
#: en/git-svn.txt:1082
#, no-wrap, priority:100
msgid ""
"[svn-remote \"project-a\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/project-a:refs/remotes/project-a/trunk\n"
"\tbranches = branches/*/project-a:refs/remotes/project-a/branches/*\n"
"\tbranches = branches/release_*:refs/remotes/project-a/branches/release_*\n"
"\tbranches = branches/re*se:refs/remotes/project-a/branches/*\n"
"\ttags = tags/*/project-a:refs/remotes/project-a/tags/*\n"
msgstr ""
"[svn-remote \"project-a\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/project-a:refs/remotes/project-a/trunk\n"
"\tbranches = branches/*/project-a:refs/remotes/project-a/branches/*\n"
"\tbranches = branches/release_*:refs/remotes/project-a/branches/release_*\n"
"\tbranches = branches/re*se:refs/remotes/project-a/branches/*\n"
"\ttags = tags/*/project-a:refs/remotes/project-a/tags/*\n"

#. type: Plain text
#: en/git-svn.txt:1090
#, no-wrap, priority:100
msgid ""
"Keep in mind that the `*` (asterisk) wildcard of the local ref\n"
"(right of the `:`) *must* be the farthest right path component;\n"
"however the remote wildcard may be anywhere as long as it's an\n"
"independent path component (surrounded by `/` or EOL).   This\n"
"type of configuration is not automatically created by 'init' and\n"
"should be manually entered with a text-editor or using 'git config'.\n"
msgstr ""
"Lembre-se que o curinga `*` (asterisco) da referência local\n"
"(à direita do `:`) *deve* ser o componente mais distante do caminho à direita;\n"
"no entanto, o curinga remoto pode estar em qualquer lugar, desde que seja um\n"
"componente independente do caminho (cercado por `/` ou `EOL` (um caractere que indica o final da linha)).   Este\n"
"tipo de configuração não é criado de forma automática pelo 'init' e\n"
"deve ser inserido manualmente com um editor de texto ou utilizando o comando 'git config'.\n"

#. type: Plain text
#: en/git-svn.txt:1092
#, priority:100
msgid "Also note that only one asterisk is allowed per word. For example:"
msgstr "Observe também que apenas um asterisco é permitido por palavra. Por exemplo:"

#. type: Plain text
#: en/git-svn.txt:1094
#, no-wrap, priority:100
msgid "\tbranches = branches/re*se:refs/remotes/project-a/branches/*\n"
msgstr "\tbranches = branches/re*se:refs/remotes/project-a/branches/*\n"

#. type: Plain text
#: en/git-svn.txt:1096
#, priority:100
msgid "will match branches 'release', 'rese', 're123se', however"
msgstr "corresponderá às ramificações 'release', 'rese', 're123se', no entanto"

#. type: Plain text
#: en/git-svn.txt:1098
#, no-wrap, priority:100
msgid "\tbranches = branches/re*s*e:refs/remotes/project-a/branches/*\n"
msgstr "\tbranches = branches/re*s*e:refs/remotes/project-a/branches/*\n"

#. type: Plain text
#: en/git-svn.txt:1100
#, priority:100
msgid "will produce an error."
msgstr "irá produzir um erro."

#. type: Plain text
#: en/git-svn.txt:1103
#, priority:100
msgid "It is also possible to fetch a subset of branches or tags by using a comma-separated list of names within braces. For example:"
msgstr "Também é possível capturar um subconjunto de ramos ou tags utilizando uma lista com os nomes separados por vírgulas dentro de colchetes. Por exemplo:"

#. type: delimited block -
#: en/git-svn.txt:1110
#, no-wrap, priority:100
msgid ""
"[svn-remote \"huge-project\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/src:refs/remotes/trunk\n"
"\tbranches = branches/{red,green}/src:refs/remotes/project-a/branches/*\n"
"\ttags = tags/{1.0,2.0}/src:refs/remotes/project-a/tags/*\n"
msgstr ""
"[svn-remote \"huge-project\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/src:refs/remotes/trunk\n"
"\tbranches = branches/{red,green}/src:refs/remotes/project-a/branches/*\n"
"\ttags = tags/{1.0,2.0}/src:refs/remotes/project-a/tags/*\n"

#. type: Plain text
#: en/git-svn.txt:1113
#, priority:100
msgid "Multiple fetch, branches, and tags keys are supported:"
msgstr "São compatíveis várias chaves de captura, ramificações e tags:"

#. type: delimited block -
#: en/git-svn.txt:1122
#, no-wrap, priority:100
msgid ""
"[svn-remote \"messy-repo\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/project-a:refs/remotes/project-a/trunk\n"
"\tfetch = branches/demos/june-project-a-demo:refs/remotes/project-a/demos/june-demo\n"
"\tbranches = branches/server/*:refs/remotes/project-a/branches/*\n"
"\tbranches = branches/demos/2011/*:refs/remotes/project-a/2011-demos/*\n"
"\ttags = tags/server/*:refs/remotes/project-a/tags/*\n"
msgstr ""
"[svn-remote \"messy-repo\"]\n"
"\turl = http://server.org/svn\n"
"\tfetch = trunk/project-a:refs/remotes/project-a/trunk\n"
"\tfetch = branches/demos/june-project-a-demo:refs/remotes/project-a/demos/june-demo\n"
"\tbranches = branches/server/*:refs/remotes/project-a/branches/*\n"
"\tbranches = branches/demos/2011/*:refs/remotes/project-a/2011-demos/*\n"
"\ttags = tags/server/*:refs/remotes/project-a/tags/*\n"

#. type: Plain text
#: en/git-svn.txt:1126
#, priority:100
msgid "Creating a branch in such a configuration requires disambiguating which location to use using the -d or --destination flag:"
msgstr "A criação de uma ramificação nessa configuração requer desambiguar qual o local usar com a flag `-d` ou `--destination`:"

#. type: delimited block -
#: en/git-svn.txt:1129
#, no-wrap, priority:100
msgid "$ git svn branch -d branches/server release-2-3-0\n"
msgstr "$ git svn branch -d branches/server release-2-3-0\n"

#. type: Plain text
#: en/git-svn.txt:1135
#, priority:100
msgid "Note that git-svn keeps track of the highest revision in which a branch or tag has appeared. If the subset of branches or tags is changed after fetching, then $GIT_DIR/svn/.metadata must be manually edited to remove (or reset) branches-maxRev and/or tags-maxRev as appropriate."
msgstr "Observe que o 'git-svn' acompanha a revisão mais alta onde um ramo ou uma tag tenha aparecido. Caso o subconjunto das ramificações ou das tags seja alterada após a busca, então `$GIT_DIR/svn/.metadata` deverá ser editado manualmente para remover (ou redefinir) `branches-maxRev` e/ou `tags-maxRev`, conforme seja apropriado."

#. type: Labeled list
#: en/git-svn.txt:1138
#, no-wrap, priority:100
msgid "$GIT_DIR/svn/\\**/.rev_map.*"
msgstr "$GIT_DIR/svn/\\**/.rev_map.*"

#. type: Plain text
#: en/git-svn.txt:1144
#, priority:100
msgid "Mapping between Subversion revision numbers and Git commit names.  In a repository where the noMetadata option is not set, this can be rebuilt from the git-svn-id: lines that are at the end of every commit (see the 'svn.noMetadata' section above for details)."
msgstr "Mapeamento entre os números da revisão do Subversion e os nomes dos commits do Git.  Em um repositório onde a opção `noMetadata` não está definido, isso pode ser reconstruído a partir do 'git-svn-id': as linhas que estão no final de cada commit (consulte a seção 'svn.noMetadata' acima para obter detalhes)."

#. type: Plain text
#: en/git-svn.txt:1148
#, priority:100
msgid "'git svn fetch' and 'git svn rebase' automatically update the rev_map if it is missing or not up to date.  'git svn reset' automatically rewinds it."
msgstr "O comando 'git svn fetch' e o 'git svn rebase' atualizam automaticamente o 'rev_map' caso ele esteja ausente ou não tenha sido atualizado.  O comando 'git svn reset' o o retrocede de forma automática."

#. type: Plain text
#: en/git-svn.txt:1154
#, priority:100
msgid "We ignore all SVN properties except svn:executable.  Any unhandled properties are logged to $GIT_DIR/svn/<refname>/unhandled.log"
msgstr "Ignoramos todas as propriedades SVN, exceto o `svn:executable`.  Quaisquer propriedades não manipuladas são registradas no `$GIT_DIR/svn/<refname>/unhandled.log`"

#. type: Plain text
#: en/git-svn.txt:1161
#, priority:100
msgid "Renamed and copied directories are not detected by Git and hence not tracked when committing to SVN.  I do not plan on adding support for this as it's quite difficult and time-consuming to get working for all the possible corner cases (Git doesn't do it, either).  Committing renamed and copied files is fully supported if they're similar enough for Git to detect them."
msgstr "Os diretórios renomeados e copiados não são detectados pelo Git e portanto, não são monitorados ao fazer o commit com o SVN.  Não pretendo adicionar suporte para isso, pois é bastante difícil e demorado trabalhar para todos os casos possíveis (o Git também não faz isso).  Fazer o commit dos arquivos renomeados e copiados é totalmente compatível caso eles sejam semelhantes o suficiente para que o Git os detecte."

#. type: Plain text
#: en/git-svn.txt:1167
#, priority:100
msgid "In SVN, it is possible (though discouraged) to commit changes to a tag (because a tag is just a directory copy, thus technically the same as a branch). When cloning an SVN repository, 'git svn' cannot know if such a commit to a tag will happen in the future. Thus it acts conservatively and imports all SVN tags as branches, prefixing the tag name with 'tags/'."
msgstr "No SVN, é possível (embora desencorajado) fazer o commit nas alterações em uma tag (porque uma tag é apenas uma cópia do diretório, portanto tecnicamente o mesmo que um ramo). Ao clonar um repositório SVN, o comando 'git svn' não pode saber se tal commit com uma tag ocorrerá no futuro. Portanto, ele age de maneira conservadora e importa todas as tags SVN como ramificações, prefixando o nome da tag com 'tags/'."

#. type: Title =
#: en/git-switch.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-switch(1)"
msgstr "git-switch(1)"

#. type: Plain text
#: en/git-switch.txt:7
#, priority:100
msgid "git-switch - Switch branches"
msgstr "git-switch - Alterna entre ramos"

#. type: Plain text
#: en/git-switch.txt:15
#, no-wrap, priority:100
msgid ""
"'git switch' [<options>] [--no-guess] <branch>\n"
"'git switch' [<options>] --detach [<start-point>]\n"
"'git switch' [<options>] (-c|-C) <new-branch> [<start-point>]\n"
"'git switch' [<options>] --orphan <new-branch>\n"
msgstr ""
"'git switch' [<opções>] [--no-guess] <ramo>\n"
"'git switch' [<opções>] --detach [<ponto-de-partida>]\n"
"'git switch' [<opções>] (-c|-C) <novo-ramo> [<ponto-de-partida>]\n"
"'git switch' [<opções>] --orphan <novo-ramo>\n"

#. type: Plain text
#: en/git-switch.txt:21
#, priority:100
msgid "Switch to a specified branch. The working tree and the index are updated to match the branch. All new commits will be added to the tip of this branch."
msgstr "Alterna para um ramo específico. A árvore de trabalho e o índice são atualizados para coincidir com o ramo. Todos os novos commits serão adicionadas ao cume deste ramo."

#. type: Plain text
#: en/git-switch.txt:26
#, priority:100
msgid "Optionally a new branch could be created with either `-c`, `-C`, automatically from a remote branch of same name (see `--guess`), or detach the working tree from any branch with `--detach`, along with switching."
msgstr "Opcionalmente, um novo ramo pode ser criado com `-c`, `-C`, automaticamente a partir de um ramo remoto com o mesmo nome (consulte `--guess`), ou desanexe a árvore de trabalho de qualquer outro ramo com a opção `--detach`, em conjunto com a alternância."

#. type: Plain text
#: en/git-switch.txt:31
#, priority:100
msgid "Switching branches does not require a clean index and working tree (i.e. no differences compared to `HEAD`). The operation is aborted however if the operation leads to loss of local changes, unless told otherwise with `--discard-changes` or `--merge`."
msgstr "A alternância das ramificações não requer um índice limpo e uma árvore de trabalho (ou seja, não há diferenças em comparação com o `HEAD`). A operação é interrompida no entanto caso a operação leve à perda das alterações locais, a menos que seja dito o contrário com a opção `--discard-changes` ou `--merge`."

#. type: Plain text
#: en/git-switch.txt:38
#, priority:100
msgid "Branch to switch to."
msgstr "O ramo para onde nos mudaremos."

#. type: Plain text
#: en/git-switch.txt:48
#, priority:100
msgid "The starting point for the new branch. Specifying a `<start-point>` allows you to create a branch based on some other point in history than where HEAD currently points. (Or, in the case of `--detach`, allows you to inspect and detach from some other point.)"
msgstr "O ponto de partida para criar o novo ramo. Definindo um `<ponto-de-partida>` permite criar um ramo com base em algum outro ponto na história que não seja o local onde o `HEAD` aponte atualmente. (Ou, no caso da opção `--detach`, permitir que você inspecione e desanexe de algum outro ponto.)"

#. type: Plain text
#: en/git-switch.txt:54
#, priority:100
msgid "You can use the `@{-N}` syntax to refer to the N-th last branch/commit switched to using \"git switch\" or \"git checkout\" operation. You may also specify `-` which is synonymous to `@{-1}`.  This is often used to switch quickly between two branches, or to undo a branch switch by mistake."
msgstr "Você pode usar a sintaxe `@{-N}` para se referir ao último ramo/commit alternado utilizando as operações \"git switch\" ou \"git checkout\". Você também pode especificar `-` que é sinônimo de`@{-1}`.  Isso geralmente é utilizado para alternar rapidamente entre duas ramificações ou para desfazer uma alternância de ramificação feita por engano."

#. type: Labeled list
#: en/git-switch.txt:59
#, no-wrap, priority:100
msgid "-c <new-branch>"
msgstr "-c <novo-ramo>"

#. type: Labeled list
#: en/git-switch.txt:60
#, no-wrap, priority:100
msgid "--create <new-branch>"
msgstr "--create <novo-ramo>"

#. type: Plain text
#: en/git-switch.txt:64
#, priority:100
msgid "Create a new branch named `<new-branch>` starting at `<start-point>` before switching to the branch. This is a convenient shortcut for:"
msgstr "Crie um novo ramo chamado `<novo-ramo>` começando em `<ponto-de-partida>` antes de mudar para o ramo. Este é um atalho conveniente para:"

#. type: delimited block -
#: en/git-switch.txt:68
#, no-wrap, priority:100
msgid ""
"$ git branch <new-branch>\n"
"$ git switch <new-branch>\n"
msgstr ""
"$ git branch <novo-ramo>\n"
"$ git switch <novo-ramo>\n"

#. type: Labeled list
#: en/git-switch.txt:70
#, no-wrap, priority:100
msgid "-C <new-branch>"
msgstr "-C <novo-ramo>"

#. type: Labeled list
#: en/git-switch.txt:71
#, no-wrap, priority:100
msgid "--force-create <new-branch>"
msgstr "--force-create <novo-ramo>"

#. type: Plain text
#: en/git-switch.txt:75
#, priority:100
msgid "Similar to `--create` except that if `<new-branch>` already exists, it will be reset to `<start-point>`. This is a convenient shortcut for:"
msgstr "É similar a opção `--create` exceto quando `<novo-ramo>` já exista, ele será redefinido para o `<ponto-de-partida>`. Este é um atalho conveniente para:"

#. type: delimited block -
#: en/git-switch.txt:79
#, no-wrap, priority:100
msgid ""
"$ git branch -f <new-branch>\n"
"$ git switch <new-branch>\n"
msgstr ""
"$ git branch -f <novo-ramo>\n"
"$ git switch <novo-ramo>\n"

#. type: Plain text
#: en/git-switch.txt:86
#, priority:100
msgid "Switch to a commit for inspection and discardable experiments. See the \"DETACHED HEAD\" section in linkgit:git-checkout[1] for details."
msgstr "Alterne para um commit que será inspecionado e poderá ser feito experimentos descartáveis nele. Consulte a seção \"HEAD DESANEXADO\" no linkgit:git-checkout[1] para mais detalhes."

#. type: delimited block -
#: en/git-switch.txt:95
#, no-wrap, priority:100
msgid "$ git switch -c <branch> --track <remote>/<branch>\n"
msgstr "$ git switch -c <ramo> --track <remoto>/<ramo>\n"

#. type: Plain text
#: en/git-switch.txt:113
#, priority:100
msgid "An alias for `--discard-changes`."
msgstr "Um atalho para `--discard-changes`."

#. type: Labeled list
#: en/git-switch.txt:114
#, ignore-same, no-wrap, priority:100
msgid "--discard-changes"
msgstr "--discard-changes"

#. type: Plain text
#: en/git-switch.txt:120
#, priority:100
msgid "Proceed even if the index or the working tree differs from `HEAD`. Both the index and working tree are restored to match the switching target. If `--recurse-submodules` is specified, submodule content is also restored to match the switching target. This is used to throw away local changes."
msgstr "Prossiga mesmo que o índice ou a árvore de trabalho seja diferente do `HEAD`. Ambos o índice e a árvore de trabalho são restauradas para coincidir com a alternância do destino. Caso a opção `--recurse-submodules` seja utilizada, o conteúdo do submódulo também será restaurado para coincidir a alternância do destino. Isso é utilizado para descartar as alterações locais."

#. type: Plain text
#: en/git-switch.txt:130
#, priority:100
msgid "If you have local modifications to one or more files that are different between the current branch and the branch to which you are switching, the command refuses to switch branches in order to preserve your modifications in context.  However, with this option, a three-way merge between the current branch, your working tree contents, and the new branch is done, and you will be on the new branch."
msgstr "Caso tenha alterações locais em um ou mais arquivos que sejam diferentes entre o ramo atual e o ramo para onde você está alternando, o comando se recusará a alternar as ramificações visando preservar as suas alterações dada a circunstância.  Contudo, com esta opção, é feita uma mesclagem de três vias entre o ramo atual, o conteúdo da árvore de trabalho e o novo ramo, fazendo com que você esteja neste novo ramo."

#. type: Labeled list
#: en/git-switch.txt:154
#, no-wrap, priority:100
msgid "--track [direct|inherit]"
msgstr "--track [direct|inherit]"

#. type: Plain text
#: en/git-switch.txt:158
#, priority:100
msgid "When creating a new branch, set up \"upstream\" configuration.  `-c` is implied. See `--track` in linkgit:git-branch[1] for details."
msgstr "Ao criar uma nova ramificação, defina a configuração \"upstream\".  A opção `-c` está implícita. Para mais detalhes, consulte `--track` no linkgit:git-branch[1]."

#. type: Plain text
#: en/git-switch.txt:168
#, priority:100
msgid "If no `-c` option is given, the name of the new branch will be derived from the remote-tracking branch, by looking at the local part of the refspec configured for the corresponding remote, and then stripping the initial part up to the \"*\".  This would tell us to use `hack` as the local branch when branching off of `origin/hack` (or `remotes/origin/hack`, or even `refs/remotes/origin/hack`).  If the given name has no slash, or the above guessing results in an empty name, the guessing is aborted.  You can explicitly give a name with `-c` in such a case."
msgstr "Caso nenhuma opção `-c` seja utilizada, o nome do novo ramo será derivado do ramo monitorado remotamente, observando a parte local da \"refspec\" configurada para o ramo remoto correspondente e removendo a parte inicial para o \"*\" em seguida.  Isso nos diria para usar um `hack` como um ramo local ao se ramificar do `origin/hack` (ou `remotes/origin/hack` ou até  mesmo do `refs/remotes/origin/hack`).  Caso o nome informado não tenha barra ou se a dedução acima resultar em um nome vazio, a dedução será abortada.  Em tais casos, você pode explicitamente dar um nome com a opção `-c`."

#. type: Plain text
#: en/git-switch.txt:176
#, priority:100
msgid "Create a new 'orphan' branch, named `<new-branch>`. All tracked files are removed."
msgstr "Crie um novo ramo 'órfão', chamado `<novo-ramo>`. Todos os arquivos monitorados são removidos."

#. type: Plain text
#: en/git-switch.txt:182
#, priority:100
msgid "`git switch` refuses when the wanted ref is already checked out by another worktree. This option makes it check the ref out anyway. In other words, the ref can be held by more than one worktree."
msgstr "O comando `git switch` se recusa quando a \"ref\" desejada já está foi averiguada por uma outra árvore de trabalho. Esta opção faz com que ele averigue a \"ref\" mesmo assim. Em outras palavras, a \"ref\" pode ser mantida por mais de uma árvore de trabalho."

#. type: Plain text
#: en/git-switch.txt:191
#, priority:100
msgid "Using `--recurse-submodules` will update the content of all active submodules according to the commit recorded in the superproject. If nothing (or `--no-recurse-submodules`) is used, submodules working trees will not be updated. Just like linkgit:git-submodule[1], this will detach `HEAD` of the submodules."
msgstr "O uso da opção `--recurse-submodules` atualizará o conteúdo de todos os submódulos ativos de acordo com commit gravado no superprojeto. Caso nada (ou a opção `--no-recurse-submodules`) seja utilizado, os submódulos que trabalham nas árvores não serão atualizados. Assim como linkgit:git-submodule[1], isso faz com que `HEAD` seja desanexando dos submódulos."

#. type: Plain text
#: en/git-switch.txt:196
#, priority:100
msgid "The following command switches to the \"master\" branch:"
msgstr "O comando a seguir alterna para o ramo principal \"master\":"

#. type: delimited block -
#: en/git-switch.txt:199
#, no-wrap, priority:100
msgid "$ git switch master\n"
msgstr "$ git switch master\n"

#. type: delimited block -
#: en/git-switch.txt:206
#, no-wrap, priority:100
msgid "$ git switch mytopic\n"
msgstr "$ git switch mytopic\n"

#. type: Plain text
#: en/git-switch.txt:211
#, priority:100
msgid "However, your \"wrong\" branch and correct \"mytopic\" branch may differ in files that you have modified locally, in which case the above switch would fail like this:"
msgstr "No entanto, o seu ramo \"errado\" e o correto \"mytopic\" podem diferir nos arquivos modificados localmente por você. A mudança entre os ramos acima falhará assim:"

#. type: delimited block -
#: en/git-switch.txt:215
#, no-wrap, priority:100
msgid ""
"$ git switch mytopic\n"
"error: You have local changes to 'frotz'; not switching branches.\n"
msgstr ""
"$ git switch mytopic\n"
"erro: você tem alterações locais em 'frotz'; não mudar de ramo.\n"

#. type: delimited block -
#: en/git-switch.txt:223
#, no-wrap, priority:100
msgid ""
"$ git switch -m mytopic\n"
"Auto-merging frotz\n"
msgstr ""
"$ git switch -m mytopic\n"
"Auto-merging frotz\n"

#. type: Plain text
#: en/git-switch.txt:231
#, priority:100
msgid "To switch back to the previous branch before we switched to mytopic (i.e. \"master\" branch):"
msgstr "Para voltar à ramificação anterior antes de mudarmos para \"mytopic\" (ou seja, para a ramificação \"master\"):"

#. type: delimited block -
#: en/git-switch.txt:234
#, no-wrap, priority:100
msgid "$ git switch -\n"
msgstr "$ git switch -\n"

#. type: Plain text
#: en/git-switch.txt:238
#, priority:100
msgid "You can grow a new branch from any commit. For example, switch to \"HEAD~3\" and create branch \"fixup\":"
msgstr "Você pode aumentar um novo ramo a partir de qualquer commit. Por exemplo, mude para \"HEAD~3\" e crie o ramo \"fixup\":"

#. type: delimited block -
#: en/git-switch.txt:242
#, no-wrap, priority:100
msgid ""
"$ git switch -c fixup HEAD~3\n"
"Switched to a new branch 'fixup'\n"
msgstr ""
"$ git switch -c fixup HEAD~3\n"
"Foi alternado para um novo ramo 'fixup'\n"

#. type: Plain text
#: en/git-switch.txt:246
#, priority:100
msgid "If you want to start a new branch from a remote branch of the same name:"
msgstr "Caso queira criar uma nova ramificação a partir do ramo remoto de mesmo nome:"

#. type: delimited block -
#: en/git-switch.txt:251
#, no-wrap, priority:100
msgid ""
"$ git switch new-topic\n"
"Branch 'new-topic' set up to track remote branch 'new-topic' from 'origin'\n"
"Switched to a new branch 'new-topic'\n"
msgstr ""
"$ git switch new-topic\n"
"O ramo 'new-topic' foi configurada para monitorar o ramo remoto 'new-topic' da 'origin'\n"
"Foi alternado para um novo ramo 'new-topic'\n"

#. type: Plain text
#: en/git-switch.txt:255
#, priority:100
msgid "To check out commit `HEAD~3` for temporary inspection or experiment without creating a new branch:"
msgstr "Para averiguar o commit `HEAD~3` por inspeções temporárias ou experimentos sem criar um novo ramo:"

#. type: delimited block -
#: en/git-switch.txt:259
#, no-wrap, priority:100
msgid ""
"$ git switch --detach HEAD~3\n"
"HEAD is now at 9fc9555312 Merge branch 'cc/shared-index-permbits'\n"
msgstr ""
"$ git switch --detach HEAD~3\n"
"HEAD is now at 9fc9555312 Merge branch 'cc/shared-index-permbits'\n"

#. type: Plain text
#: en/git-switch.txt:263
#, priority:100
msgid "If it turns out whatever you have done is worth keeping, you can always create a new name for it (without switching away):"
msgstr "Se acontecer de valer a pena manter o que você fez, é possível criar um novo nome para ele (sem precisar alternar):"

#. type: delimited block -
#: en/git-switch.txt:266
#, no-wrap, priority:100
msgid "$ git switch -c good-surprises\n"
msgstr "$ git switch -c good-surprises\n"

#. type: Plain text
#: en/git-switch.txt:279
#, ignore-same, priority:100
msgid "linkgit:git-checkout[1], linkgit:git-branch[1]"
msgstr "linkgit:git-checkout[1], linkgit:git-branch[1]"

#. type: Title =
#: en/git-symbolic-ref.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-symbolic-ref(1)"
msgstr "git-symbolic-ref(1)"

#. type: Plain text
#: en/git-symbolic-ref.txt:7
#, priority:80
msgid "git-symbolic-ref - Read, modify and delete symbolic refs"
msgstr "git-symbolic-ref - Lê, altera e exclui refs simbólicas"

#. type: Plain text
#: en/git-symbolic-ref.txt:14
#, no-wrap, priority:80
msgid ""
"'git symbolic-ref' [-m <reason>] <name> <ref>\n"
"'git symbolic-ref' [-q] [--short] <name>\n"
"'git symbolic-ref' --delete [-q] <name>\n"
msgstr ""
"'git symbolic-ref' [-m <motivo>] <nome> <ref>\n"
"'git symbolic-ref' [-q] [--short] <nome>\n"
"'git symbolic-ref' --delete [-q] <nome>\n"

#. type: Plain text
#: en/git-symbolic-ref.txt:21
#, priority:80
msgid "Given one argument, reads which branch head the given symbolic ref refers to and outputs its path, relative to the `.git/` directory.  Typically you would give `HEAD` as the <name> argument to see which branch your working tree is on."
msgstr "Ao informar uma opção, lê em qual cabeçalho do ramo a referência simbólica informada se refere e gera o seu caminho em relação ao diretório `.git/`.  Normalmente você utilizaria o `HEAD` como uma opção `<nome>` para ver em qual ramo a sua árvore de trabalho está."

#. type: Plain text
#: en/git-symbolic-ref.txt:24
#, priority:80
msgid "Given two arguments, creates or updates a symbolic ref <name> to point at the given branch <ref>."
msgstr "Quando foi dois argumentos fortem utilizados, cria ou atualiza uma referência simbólica <nome> para apontar para o ramo <ref> informado."

#. type: Plain text
#: en/git-symbolic-ref.txt:27
#, priority:80
msgid "Given `--delete` and an additional argument, deletes the given symbolic ref."
msgstr "Ao utilizar `--delete` e um argumento adicional, exclui a referência simbólica informada."

#. type: Plain text
#: en/git-symbolic-ref.txt:31
#, priority:80
msgid "A symbolic ref is a regular file that stores a string that begins with `ref: refs/`.  For example, your `.git/HEAD` is a regular file whose contents is `ref: refs/heads/master`."
msgstr "Uma 'ref' simbólica é um arquivo regular que armazena um texto 'string' que começa com `ref: refs/`.  Como por exemplo, o seu `.git/HEAD` é um arquivo regular cujo conteúdo seja `ref: refs/heads/master`."

#. type: Plain text
#: en/git-symbolic-ref.txt:38
#, priority:80
msgid "Delete the symbolic ref <name>."
msgstr "Exclua o <nome> da \"ref\" simbólica."

#. type: Plain text
#: en/git-symbolic-ref.txt:44
#, priority:80
msgid "Do not issue an error message if the <name> is not a symbolic ref but a detached HEAD; instead exit with non-zero status silently."
msgstr "Não emita uma mensagem de erro caso o <nome> não seja uma referência simbólica, e sim um `HEAD` desanexado; em vez disso, saia com uma condição diferente de zero de forma silenciosa."

#. type: Plain text
#: en/git-symbolic-ref.txt:48
#, priority:80
msgid "When showing the value of <name> as a symbolic ref, try to shorten the value, e.g. from `refs/heads/master` to `master`."
msgstr "Ao exibir o valor de um <nome> como uma \"ref\" simbólica, tente encurtar o valor, por exemplo, de `refs/heads/master` para `master`."

#. type: Plain text
#: en/git-symbolic-ref.txt:52
#, priority:80
msgid "Update the reflog for <name> with <reason>.  This is valid only when creating or updating a symbolic ref."
msgstr "Atualiza o \"reflog\" para um <nome> com um <motivo>.  É válido apenas durante a criação ou a atualização de uma \"ref\" simbólica."

#. type: Plain text
#: en/git-symbolic-ref.txt:62
#, priority:80
msgid "In the past, `.git/HEAD` was a symbolic link pointing at `refs/heads/master`.  When we wanted to switch to another branch, we did `ln -sf refs/heads/newbranch .git/HEAD`, and when we wanted to find out which branch we are on, we did `readlink .git/HEAD`.  But symbolic links are not entirely portable, so they are now deprecated and symbolic refs (as described above) are used by default."
msgstr "No passado, `.git/HEAD` era um link simbólico apontando para `refs/heads/master`.  Quando queríamos mudar para um outro ramo, fizemos `ln -sf refs/heads/newbranch .git/HEAD`, e quando queríamos descobrir em qual ramo estávamos, fazíamos `readlink .git/HEAD`.  Como os links simbólicos não são totalmente portáteis, eles agora estão obsoletos e as referências simbólicas (conforme descrito acima) são utilizada de forma predefinida."

#. type: Plain text
#: en/git-symbolic-ref.txt:66
#, priority:80
msgid "'git symbolic-ref' will exit with status 0 if the contents of the symbolic ref were printed correctly, with status 1 if the requested name is not a symbolic ref, or 128 if another error occurs."
msgstr "O comando 'git symbolic-ref' encerrará com a condição 0 caso o conteúdo da ref simbólica tenha sido impresso corretamente, com a condição 1 caso o nome solicitado não seja uma ref simbólica ou 128 caso ocorra um outro erro."

#. type: Title =
#: en/git-tag.txt:2
#, ignore-same, no-wrap, priority:240
msgid "git-tag(1)"
msgstr "git-tag(1)"

#. type: Plain text
#: en/git-tag.txt:7
#, priority:240
msgid "git-tag - Create, list, delete or verify a tag object signed with GPG"
msgstr "git-tag - Crie, liste, exclua or verifique um objeto tag assinado com GPG"

#. type: Plain text
#: en/git-tag.txt:20
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"'git tag' [-a | -s | -u <keyid>] [-f] [-m <msg> | -F <file>] [-e]\n"
"\t<tagname> [<commit> | <object>]\n"
"'git tag' -d <tagname>...\n"
"'git tag' [-n[<num>]] -l [--contains <commit>] [--no-contains <commit>]\n"
"\t[--points-at <object>] [--column[=<options>] | --no-column]\n"
"\t[--create-reflog] [--sort=<key>] [--format=<format>]\n"
"\t[--merged <commit>] [--no-merged <commit>] [<pattern>...]\n"
"'git tag' -v [--format=<format>] <tagname>...\n"
msgstr ""
"'git tag' [-a | -s | -u <keyid>] [-f] [-m <msg> | -F <arquivo>] [-e]\n"
"\t<nome da tag> [<commit> | <objeto>]\n"
"'git tag' -d <nome da tag>...\n"
"'git tag' [-n[<num>]] -l [--contains <commit>] [--no-contains <commit>]\n"
"\t[--points-at <objeto>] [--column[=<opções>] | --no-column]\n"
"\t[--create-reflog] [--sort=<chave>] [--format=<formato>]\n"
"\t[--merged <commit>] [--no-merged <commit>] [<padrão>...]\n"
"'git tag' -v [--format=<formato>] <tagname>...\n"

#. type: Plain text
#: en/git-tag.txt:26
#, priority:240
msgid "Add a tag reference in `refs/tags/`, unless `-d/-l/-v` is given to delete, list or verify tags."
msgstr "Adicione uma tag de referência em `refs/tags/`, a menos que `-d/-l/-v` seja utilizado para excluir, listar ou verificar as tags."

#. type: Plain text
#: en/git-tag.txt:28
#, priority:240
msgid "Unless `-f` is given, the named tag must not yet exist."
msgstr "A menos que `-f` seja utilizado, a tag informada não deve existir ainda."

#. type: Plain text
#: en/git-tag.txt:33
#, priority:240
msgid "If one of `-a`, `-s`, or `-u <keyid>` is passed, the command creates a 'tag' object, and requires a tag message.  Unless `-m <msg>` or `-F <file>` is given, an editor is started for the user to type in the tag message."
msgstr "Caso um dos comandos `-a`, `-s` ou `-u <keyid>` seja informado, o comando criará um objeto 'tag' e exigirá uma mensagem para a tag.  A menos que as opções `-m <msg>` ou `-F <arquivo>` sejam utilizadas, um editor é iniciado para que o usuário digite a mensagem da tag."

#. type: Plain text
#: en/git-tag.txt:36
#, priority:240
msgid "If `-m <msg>` or `-F <file>` is given and `-a`, `-s`, and `-u <keyid>` are absent, `-a` is implied."
msgstr "Caso a opção `-m <msg>` ou `-F <arquivo>` seja utilizado e a opção `-a`, `-s` e `-u <keyid>` estiverem ausentes, a opção `-a` estará implícita."

#. type: Plain text
#: en/git-tag.txt:39
#, priority:240
msgid "Otherwise, a tag reference that points directly at the given object (i.e., a lightweight tag) is created."
msgstr "Caso contrário, é criada uma tag de referência que aponte diretamente para o objeto informado (ou seja, uma tag leve)."

#. type: Plain text
#: en/git-tag.txt:45
#, priority:240
msgid "A GnuPG signed tag object will be created when `-s` or `-u <keyid>` is used.  When `-u <keyid>` is not used, the committer identity for the current user is used to find the GnuPG key for signing. \tThe configuration variable `gpg.program` is used to specify custom GnuPG binary."
msgstr "A etiqueta de um objeto assinada pelo GnuPG será criada quando `-s` ou `-u <keyid>` for utilizado.  Quando `-u <keyid>` não é utilizado, a identidade do usuário atual é utilizada para encontrar a assinatura da chave GnuPG. \tA variável de configuração `gpg.program` é usada para definir o binário personalizado do GnuPG."

#. type: Plain text
#: en/git-tag.txt:51
#, priority:240
msgid "Tag objects (created with `-a`, `-s`, or `-u`) are called \"annotated\" tags; they contain a creation date, the tagger name and e-mail, a tagging message, and an optional GnuPG signature. Whereas a \"lightweight\" tag is simply a name for an object (usually a commit object)."
msgstr "Os objetos tag (criados com `-a`, `-s` ou `-u`) são chamados de tags \"anotadas\"; eles contêm uma data de criação, o nome e o e-mail do marcador, uma mensagem de marcação e uma assinatura opcional do GnuPG. Enquanto uma tag \"leve\" é simplesmente um nome para um objeto (geralmente um objeto commit)."

#. type: Plain text
#: en/git-tag.txt:56
#, priority:240
msgid "Annotated tags are meant for release while lightweight tags are meant for private or temporary object labels. For this reason, some git commands for naming objects (like `git describe`) will ignore lightweight tags by default."
msgstr "As tags anotadas destinam-se ao lançamento, enquanto as tags leves (light) destinam-se aos rótulos dos objetos particulares ou temporários. Por este motivo que é predefinido que alguns comandos git para nomear os objetos (como `git description`) ignorem essas tags leves."

#. type: Plain text
#: en/git-tag.txt:63
#, priority:240
msgid "Make an unsigned, annotated tag object"
msgstr "Fazendo um objeto sem assinatura, com a tad anotada"

#. type: Labeled list
#: en/git-tag.txt:65
#, ignore-same, no-wrap, priority:240
msgid "--sign"
msgstr "--sign"

#. type: Plain text
#: en/git-tag.txt:70
#, priority:240
msgid "Make a GPG-signed tag, using the default e-mail address's key.  The default behavior of tag GPG-signing is controlled by `tag.gpgSign` configuration variable if it exists, or disabled otherwise.  See linkgit:git-config[1]."
msgstr "Faça uma etiqueta assinada por GPG utilizando a chave predefinida do endereço de e-mail.  O comportamento predefinido da assinatura da tag GPG é controlado pela variável de configuração `tag.gpgSign`, se existir, caso contrário é desativada.  Consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/git-tag.txt:71
#, ignore-same, no-wrap, priority:240
msgid "--no-sign"
msgstr "--no-sign"

#. type: Plain text
#: en/git-tag.txt:74
#, priority:240
msgid "Override `tag.gpgSign` configuration variable that is set to force each and every tag to be signed."
msgstr "Substitua a variável de configuração `tag.gpgSign` que está configurada para impor a obrigatoriedade da assinatura de cada tag."

#. type: Labeled list
#: en/git-tag.txt:75
#, no-wrap, priority:240
msgid "-u <keyid>"
msgstr "-u <keyid>"

#. type: Labeled list
#: en/git-tag.txt:76
#, no-wrap, priority:240
msgid "--local-user=<keyid>"
msgstr "--local-user=<keyid>"

#. type: Plain text
#: en/git-tag.txt:78
#, priority:240
msgid "Make a GPG-signed tag, using the given key."
msgstr "Fazer uma tag assinada por GPG utilizando a chave informada."

#. type: Plain text
#: en/git-tag.txt:82
#, priority:240
msgid "Replace an existing tag with the given name (instead of failing)"
msgstr "Substituir uma tag existente com um determinado nome (em vez de falhar)"

#. type: Plain text
#: en/git-tag.txt:86
#, priority:240
msgid "Delete existing tags with the given names."
msgstr "Excluir as tags existentes com os nomes informados."

#. type: Plain text
#: en/git-tag.txt:90
#, priority:240
msgid "Verify the GPG signature of the given tag names."
msgstr "Verifique a assinatura GPG com os nomes informados."

#. type: Labeled list
#: en/git-tag.txt:91
#, no-wrap, priority:240
msgid "-n<num>"
msgstr "-n<num>"

#. type: Plain text
#: en/git-tag.txt:94
#, priority:240
msgid "<num> specifies how many lines from the annotation, if any, are printed when using -l. Implies `--list`."
msgstr "O <num> determina a quantidade das linhas de anotação, caso haja, são exibidas quando utilizadas com `-l`. Implica no uso da opção `--list`."

#. type: Plain text
#: en/git-tag.txt:98
#, priority:240
msgid "The default is not to print any annotation lines.  If no number is given to `-n`, only the first line is printed.  If the tag is not annotated, the commit message is displayed instead."
msgstr "A predefinição é não imprimir nenhuma linha de anotação.  Caso nenhum número for atribuído para  `-n ', apenas a primeira linha será impressa.  Caso a tag não seja anotada, a mensagem do commit será exibido."

#. type: Plain text
#: en/git-tag.txt:103
#, ignore-ellipsis, priority:240
msgid "List tags. With optional `<pattern>...`, e.g. `git tag --list 'v-*'`, list only the tags that match the pattern(s)."
msgstr "Listar as tags. Com `<padrão>...`, exemplo, `git tag --list 'v-*'` liste apenas as tags que coincidam ao(s) padrões."

#. type: Plain text
#: en/git-tag.txt:107
#, priority:240
msgid "Running \"git tag\" without arguments also lists all tags. The pattern is a shell wildcard (i.e., matched using fnmatch(3)). Multiple patterns may be given; if any of them matches, the tag is shown."
msgstr "Executar \"tag git\" sem argumentos também lista todas as tags. O padrão é um curinga do shell (exemplo, quando coincidir ao usar fnmatch(3)). Padrões múltiplos podem ser informados; caso haja coincidência entre alguns deles, a tag será exibida."

#. type: Plain text
#: en/git-tag.txt:111
#, priority:240
msgid "This option is implicitly supplied if any other list-like option such as `--contains` is provided. See the documentation for each of those options for details."
msgstr "Esta opção é fornecida de forma implícita caso qualquer outra lista como a opção `--contains` seja utilizada. Para mais detalhes consulte a documentação de cada uma dessas opções."

#. type: Plain text
#: en/git-tag.txt:124
#, priority:240
msgid "Sort based on the key given.  Prefix `-` to sort in descending order of the value. You may use the --sort=<key> option multiple times, in which case the last key becomes the primary key. Also supports \"version:refname\" or \"v:refname\" (tag names are treated as versions). The \"version:refname\" sort order can also be affected by the \"versionsort.suffix\" configuration variable.  The keys supported are the same as those in `git for-each-ref`.  Sort order defaults to the value configured for the `tag.sort` variable if it exists, or lexicographic order otherwise. See linkgit:git-config[1]."
msgstr "Classifique com base na chave informada.  O prefixo `-` é utilizado para classificar em ordem decrescente. Você pode utilizar a opção `--sort=<chave>` mais de uma vez; nesse caso, a última chave se torna a chave primária. Também é compatível com `versão:refname` ou `v:refname` (nomes das tags são tratados como versões). A ordem de classificação `versão:refname` também pode ser afetada pela variável de configuração `versionsort.sufix`.  As chaves compatíveis são as mesmas que as do `git for-each-ref`.  A classificação da ordem retorna para a predefinição do valor configurado pela variável `tag.sort` caso exista ou então pela ordem lexicográfica. Consulte linkgit:git-config[1]."

#. type: Plain text
#: en/git-tag.txt:133
#, priority:240
msgid "Sorting and filtering tags are case insensitive."
msgstr "As referências de classificação e filtragem não diferenciam maiúsculas de minúsculas."

#. type: Plain text
#: en/git-tag.txt:139
#, priority:240
msgid "Display tag listing in columns. See configuration variable `column.tag` for option syntax. `--column` and `--no-column` without options are equivalent to 'always' and 'never' respectively."
msgstr "Exiba a lista das tags em colunas. Consulte a variável de configuração `column.tag` para conhecer a sintaxe da opção. `--column` e `--no-column` sem opções são respectivamente o mesmo que 'always' e 'never'."

#. type: Plain text
#: en/git-tag.txt:141
#, priority:240
msgid "This option is only applicable when listing tags without annotation lines."
msgstr "Esta opção é aplicável apenas ao listar as tags sem linhas de anotação."

#. type: Plain text
#: en/git-tag.txt:145
#, priority:240
msgid "Only list tags which contain the specified commit (HEAD if not specified). Implies `--list`."
msgstr "Liste apenas as tags que contenham um commit em específico (`HEAD`caso não esteja definido). Implica no uso da opção `--list`."

#. type: Plain text
#: en/git-tag.txt:149
#, priority:240
msgid "Only list tags which don't contain the specified commit (HEAD if not specified). Implies `--list`."
msgstr "Liste apenas as tags que não contenham nenhum commit em específico (`HEAD`caso não esteja definido). Implica no uso da opção `--list`."

#. type: Plain text
#: en/git-tag.txt:153
#, priority:240
msgid "Only list tags whose commits are reachable from the specified commit (`HEAD` if not specified)."
msgstr "Liste apenas as tags cujos commits sejam acessíveis de um determinado commit (`HEAD`caso não esteja definido)."

#. type: Plain text
#: en/git-tag.txt:157
#, priority:240
msgid "Only list tags whose commits are not reachable from the specified commit (`HEAD` if not specified)."
msgstr "Liste apenas as tags cujos commits não sejam acessíveis em um commit em específico (`HEAD`caso não esteja definido)."

#. type: Plain text
#: en/git-tag.txt:161
#, priority:240
msgid "Only list tags of the given object (HEAD if not specified). Implies `--list`."
msgstr "Liste apenas as tags dos objetos informados (`HEAD`caso não esteja definido). Implica no uso da opção `--list`."

#. type: Plain text
#: en/git-tag.txt:169
#, priority:240
msgid "Use the given tag message (instead of prompting).  If multiple `-m` options are given, their values are concatenated as separate paragraphs.  Implies `-a` if none of `-a`, `-s`, or `-u <keyid>` is given."
msgstr "Utilize a mensagem da tag informada (em vez de solicitar).  Caso múltiplas opções `-m` sejam utilizadas, os seus valores são concatenados como separados por parágrafo. Implica na utilização de `-a` caso nenhum dos `-a`, `-s`, ou `-u <keyid>` sejam utilizados."

#. type: Plain text
#: en/git-tag.txt:176
#, priority:240
msgid "Take the tag message from the given file.  Use '-' to read the message from the standard input.  Implies `-a` if none of `-a`, `-s`, or `-u <keyid>` is given."
msgstr "Assume a mensagem da tag de um determinado arquivo.  Utilize '-' para ler a mensagem da entrada padrão. Implica na utilização da opção `-a` caso nenhum `-a`, `-s` ou `-u <keyid>` seja utilizado."

#. type: Plain text
#: en/git-tag.txt:182
#, priority:240
msgid "The message taken from file with `-F` and command line with `-m` are usually used as the tag message unmodified.  This option lets you further edit the message taken from these sources."
msgstr "A mensagem tirada do arquivo com `-F` e a linha de comando com `-m` normalmente são utilizadas como mensagens das tags sem alterações.  Esta opção permite editar ainda mais a mensagem retirada destas fontes."

#. type: Plain text
#: en/git-tag.txt:189
#, priority:240
msgid "This option sets how the tag message is cleaned up.  The '<mode>' can be one of 'verbatim', 'whitespace' and 'strip'.  The 'strip' mode is default. The 'verbatim' mode does not change message at all, 'whitespace' removes just leading/trailing whitespace lines and 'strip' removes both whitespace and commentary."
msgstr "Esta opção define como a tag da mensagem é limpa.  O '<modo>' pode ser entre 'verbatim', 'whitespace' e 'strip'.  O modo predefinido é 'strip'. O modo 'verbatim' não altera a mensagem de forma alguma, 'whitespace' remove apenas as linhas de espaço iniciais/finais e 'strip' remove o espaço junto com os comentários."

#. type: Plain text
#: en/git-tag.txt:196
#, priority:240
msgid "Create a reflog for the tag. To globally enable reflogs for tags, see `core.logAllRefUpdates` in linkgit:git-config[1].  The negated form `--no-create-reflog` only overrides an earlier `--create-reflog`, but currently does not negate the setting of `core.logAllRefUpdates`."
msgstr "Cria um \"reflog\" para a tag. Para ativar globalmente, consulte `core.logAllRefUpdates` em linkgit:git-config[1].  A forma negada do comando `--no-create-reflog` substitui apenas um `--create-reflog` anterior, mas atualmente não nega a configuração do `core.logAllRefUpdates`."

#. type: Plain text
#: en/git-tag.txt:202
#, priority:240
msgid "A string that interpolates `%(fieldname)` from a tag ref being shown and the object it points at.  The format is the same as that of linkgit:git-for-each-ref[1].  When unspecified, defaults to `%(refname:strip=2)`."
msgstr "Uma cadeia de caracteres que interpola `%(fieldname)` vindo de uma referência sendo exibida e o objeto para o qual aponta.  O formato é o mesmo do linkgit:git-for-each-ref[1].  Quando não for definido, a predefinição retorna para `%(refname:strip=2)`."

#. type: Labeled list
#: en/git-tag.txt:203
#, no-wrap, priority:240
msgid "<tagname>"
msgstr "<nome-da-tag>"

#. type: Plain text
#: en/git-tag.txt:208
#, priority:240
msgid "The name of the tag to create, delete, or describe.  The new tag name must pass all checks defined by linkgit:git-check-ref-format[1].  Some of these checks may restrict the characters allowed in a tag name."
msgstr "O nome da tag para criar, excluir ou descrever.  O novo nome da tag que deve passar em todas as verificações definidas pelo linkgit:git-check-ref-format[1].  Algumas destas verificações podem limitar os caracteres permitidos em um nome de uma tag."

#. type: Labeled list
#: en/git-tag.txt:209 en/git.txt:400
#, no-wrap, priority:240
msgid "<commit>"
msgstr "<commit>"

#. type: Plain text
#: en/git-tag.txt:213
#, priority:240
msgid "The object that the new tag will refer to, usually a commit.  Defaults to HEAD."
msgstr "O objeto que a nova tag terá referência, geralmente um commit.  A predefinição retorna para `HEAD`."

#. type: Plain text
#: en/git-tag.txt:220
#, priority:240
msgid "By default, 'git tag' in sign-with-default mode (-s) will use your committer identity (of the form `Your Name <your@email.address>`) to find a key.  If you want to use a different default key, you can specify it in the repository configuration as follows:"
msgstr "É predefinido que 'tag git' no modo de assinatura com a predefinição (-s) utilizará a identidade de quem fez o commit (no formato `Seu Nome <seu@end.email>`) para encontrar uma chave.  Caso queira utilizar uma chave diferente da predefinida, especifique-a na configuração do repositório da seguinte maneira:"

#. type: delimited block -
#: en/git-tag.txt:224
#, no-wrap, priority:240
msgid ""
"[user]\n"
"    signingKey = <gpg-keyid>\n"
msgstr ""
"[user]\n"
"    signingKey = <gpg-keyid>\n"

#. type: Plain text
#: en/git-tag.txt:229
#, priority:240
msgid "`pager.tag` is only respected when listing tags, i.e., when `-l` is used or implied. The default is to use a pager.  See linkgit:git-config[1]."
msgstr "A variável `pager.tag` só é respeitada quando listar as tags, por exemplo, quando `-l` for utilizada ou indicada.  A predefinição é utilizar um pager.  Consulte linkgit:git-config[1]."

#. type: Title ~
#: en/git-tag.txt:234
#, no-wrap, priority:240
msgid "On Re-tagging"
msgstr "Sobre renomeação de tag"

#. type: Plain text
#: en/git-tag.txt:238
#, priority:240
msgid "What should you do when you tag a wrong commit and you would want to re-tag?"
msgstr "O que você deve fazer quando marcar um commit errado e quiser marca-lo novamente?"

#. type: Plain text
#: en/git-tag.txt:241
#, priority:240
msgid "If you never pushed anything out, just re-tag it. Use \"-f\" to replace the old one. And you're done."
msgstr "Caso nunca tenha impulsionado nada, basta remarcá-lo. Utilize \"-f\" para substituir o antigo. E pronto."

#. type: Plain text
#: en/git-tag.txt:245
#, priority:240
msgid "But if you have pushed things out (or others could just read your repository directly), then others will have already seen the old tag. In that case you can do one of two things:"
msgstr "Porém caso você impulsione as coisas para fora (ou as outras pessoas apenas puderam ler o seu repositório diretamente), as outras pessoas já viram a tag antiga. Nesse caso, é possível fazer uma de duas coisas:"

#. type: Plain text
#: en/git-tag.txt:252
#, priority:240
msgid "The sane thing.  Just admit you screwed up, and use a different name. Others have already seen one tag-name, and if you keep the same name, you may be in the situation that two people both have \"version X\", but they actually have 'different' \"X\"'s.  So just call it \"X.1\" and be done with it."
msgstr "A coisa sã.  Apenas admita que você estragou tudo e use um nome diferente. Outros já viram um nome da tag e se você mantiver o mesmo nome, pode estar na situação onde as duas pessoas têm a \"versão X\", porém na verdade têm \"X\" diferentes.  Então, basta chamá-lo de \"X.1\" e acabar logo com isso."

#. type: Plain text
#: en/git-tag.txt:257
#, priority:240
msgid "The insane thing.  You really want to call the new version \"X\" too, 'even though' others have already seen the old one. So just use 'git tag -f' again, as if you hadn't already published the old one."
msgstr "A coisa insana.  Você também quer chamar a nova versão de \"X\", mesmo que as outras pessoas já tenham visto a antiga. Portanto, basta usar 'git tag -f' novamente, como se você ainda não tivesse publicado o antigo."

#. type: Plain text
#: en/git-tag.txt:262
#, priority:240
msgid "However, Git does *not* (and it should not) change tags behind users back. So if somebody already got the old tag, doing a 'git pull' on your tree shouldn't just make them overwrite the old one."
msgstr "No entanto, o Git *não* (e não deve) alterar as tags sem o conhecimento dos usuários. Portanto, se alguém já recebeu a tag antiga, fazer um 'git pull' na sua árvore não substituirá a antiga."

#. type: Plain text
#: en/git-tag.txt:269
#, priority:240
msgid "If somebody got a release tag from you, you cannot just change the tag for them by updating your own one. This is a big security issue, in that people MUST be able to trust their tag-names.  If you really want to do the insane thing, you need to just fess up to it, and tell people that you messed up. You can do that by making a very public announcement saying:"
msgstr "Caso alguém tenha recebido uma etiqueta de lançamento de você, você não pode simplesmente alterá-la atualizando a sua. Esse é um grande problema de segurança, pois as pessoas DEVEM confiar nos nomes das suas tags.  Caso queira realmente fazer uma coisa insana, é necessário apenas confessar e dizer às pessoas que você errou. Você pode fazer isso fazendo um anúncio muito público dizendo:"

#. type: delimited block -
#: en/git-tag.txt:273
#, no-wrap, priority:240
msgid ""
"Ok, I messed up, and I pushed out an earlier version tagged as X. I\n"
"then fixed something, and retagged the *fixed* tree as X again.\n"
msgstr ""
"Ok, eu estraguei tudo e impulsionei uma versão anterior com a tag X. Eu\n"
"então consertei alguma coisa e marquei novamente a árvore *corrigida* como X novamente.\n"

#. type: delimited block -
#: en/git-tag.txt:276
#, no-wrap, priority:240
msgid ""
"If you got the wrong tag, and want the new one, please delete\n"
"the old one and fetch the new one by doing:\n"
msgstr ""
"Caso tenha pego a etiqueta errada e queira a nova, exclua\n"
"o antigo e buscar um novo, fazendo:\n"

#. type: delimited block -
#: en/git-tag.txt:279
#, no-wrap, priority:240
msgid ""
"\tgit tag -d X\n"
"\tgit fetch origin tag X\n"
msgstr ""
"\tgit tag -d X\n"
"\tgit fetch origin tag X\n"

#. type: delimited block -
#: en/git-tag.txt:281
#, no-wrap, priority:240
msgid "to get my updated tag.\n"
msgstr "para obter a minha tag atualizada.\n"

#. type: delimited block -
#: en/git-tag.txt:283
#, no-wrap, priority:240
msgid "You can test which tag you have by doing\n"
msgstr "Você pode testar qual tag você possui fazendo.\n"

#. type: delimited block -
#: en/git-tag.txt:285
#, no-wrap, priority:240
msgid "\tgit rev-parse X\n"
msgstr "\tgit rev-parse X\n"

#. type: delimited block -
#: en/git-tag.txt:287
#, no-wrap, priority:240
msgid "which should return 0123456789abcdef.. if you have the new version.\n"
msgstr "o que também retorna 0123456789abcdef.. caso tenha a nova versão.\n"

#. type: delimited block -
#: en/git-tag.txt:289
#, no-wrap, priority:240
msgid "Sorry for the inconvenience.\n"
msgstr "Perdoe a inconveniência.\n"

#. type: Plain text
#: en/git-tag.txt:294
#, priority:240
msgid "Does this seem a bit complicated? It *should* be. There is no way that it would be correct to just \"fix\" it automatically.  People need to know that their tags might have been changed."
msgstr "Isso parece um pouco complicado? *Deveria*. Não há como disto estar correto, apenas \"corrigindo-o\" de forma automática.  As pessoas precisam saber que as suas tags podem ter sido alteradas."

#. type: Title ~
#: en/git-tag.txt:297
#, no-wrap, priority:240
msgid "On Automatic following"
msgstr "Na sequência automática"

#. type: Plain text
#: en/git-tag.txt:302
#, priority:240
msgid "If you are following somebody else's tree, you are most likely using remote-tracking branches (eg. `refs/remotes/origin/master`).  You usually want the tags from the other end."
msgstr "Caso esteja seguindo a árvore de outra pessoa, provavelmente está utilizando os ramo monitorado remotamente (por exemplo, `refs/remotes/origin/master`).  Você geralmente quer as tags que estão do outro lado."

#. type: Plain text
#: en/git-tag.txt:309
#, priority:240
msgid "On the other hand, if you are fetching because you would want a one-shot merge from somebody else, you typically do not want to get tags from there.  This happens more often for people near the toplevel but not limited to them.  Mere mortals when pulling from each other do not necessarily want to automatically get private anchor point tags from the other person."
msgstr "Por outro lado, caso você esteja buscando porque deseja mesclar de uma vez o commit de outra pessoa, geralmente você não vai querer obter as tags a partir daí.  Isso acontece com mais frequência para pessoas próximas ao nível mais alto, mas não se limitando a elas.  Os meros mortais quando obtém um do outro não necessariamente querem obter automaticamente pontos de ancoragem privados vindos da outra pessoa."

#. type: Plain text
#: en/git-tag.txt:314
#, priority:240
msgid "Often, \"please pull\" messages on the mailing list just provide two pieces of information: a repo URL and a branch name; this is designed to be easily cut&pasted at the end of a 'git fetch' command line:"
msgstr "Frequentemente, aparecem mensagens \"please pull\" na lista de discussão que oferecem apenas duas informações: uma URL do repo e um nome do ramo; foi projetado para ser facilmente cortado e colado no final de uma linha de comando 'git fetch':"

#. type: delimited block -
#: en/git-tag.txt:317
#, no-wrap, priority:240
msgid "Linus, please pull from\n"
msgstr "Linus, por favor, capture de\n"

#. type: delimited block -
#: en/git-tag.txt:319
#, ignore-ellipsis, no-wrap, priority:240
msgid "\tgit://git..../proj.git master\n"
msgstr "\tgit://git..../proj.git master\n"

#. type: delimited block -
#: en/git-tag.txt:321
#, ignore-ellipsis, no-wrap, priority:240
msgid "to get the following updates...\n"
msgstr "para obter as seguintes atualizações...\n"

#. type: Plain text
#: en/git-tag.txt:324
#, priority:240
msgid "becomes:"
msgstr "se torna:"

#. type: delimited block -
#: en/git-tag.txt:327
#, ignore-ellipsis, no-wrap, priority:240
msgid "$ git pull git://git..../proj.git master\n"
msgstr "$ git pull git://git..../proj.git master\n"

#. type: Plain text
#: en/git-tag.txt:331
#, priority:240
msgid "In such a case, you do not want to automatically follow the other person's tags."
msgstr "Em casos assim, você não quer seguir automaticamente as tags da outra pessoa."

#. type: Plain text
#: en/git-tag.txt:339
#, priority:240
msgid "One important aspect of Git is its distributed nature, which largely means there is no inherent \"upstream\" or \"downstream\" in the system.  On the face of it, the above example might seem to indicate that the tag namespace is owned by the upper echelon of people and that tags only flow downwards, but that is not the case.  It only shows that the usage pattern determines who are interested in whose tags."
msgstr "Um aspecto importante do Git é a sua natureza distribuída, o que em geral significa que não há \"upstream\" ou \"downstream\" inerente no sistema.  Em face disso, o exemplo acima pode parecer indicar que o espaço de nomes da tag pertence ao escalão superior das pessoas e que as tags fluem apenas para baixo, porém este não é o caso.  Exibe apenas que o padrão de uso determina quem está interessado em quais tags."

#. type: Plain text
#: en/git-tag.txt:351
#, priority:240
msgid "A one-shot pull is a sign that a commit history is now crossing the boundary between one circle of people (e.g. \"people who are primarily interested in the networking part of the kernel\") who may have their own set of tags (e.g. \"this is the third release candidate from the networking group to be proposed for general consumption with 2.6.21 release\") to another circle of people (e.g. \"people who integrate various subsystem improvements\").  The latter are usually not interested in the detailed tags used internally in the former group (that is what \"internal\" means).  That is why it is desirable not to follow tags automatically in this case."
msgstr "Uma tentativa única é um sinal que o histórico de um commit agora está cruzando a fronteira entre um círculo de pessoas (por exemplo, \"pessoas que estão interessadas principalmente na parte da rede do kernel\") que podem ter o seu próprio conjunto das tags (por exemplo \"este é o terceiro candidato ao lançamento do grupo da rede que será proposto para consumo geral com o lançamento da versão 2.6.21\") para outro círculo de pessoas (por exemplo, \"pessoas que integraram várias melhorias ao subsistema\").  Os últimos geralmente não estão interessados nas tags detalhadas utilizadas internamente no primeiro grupo (é isso que significa \"interno\").  É por isso que é desejável neste caso, não seguir as tags de maneira automática."

#. type: Plain text
#: en/git-tag.txt:357
#, priority:240
msgid "It may well be that among networking people, they may want to exchange the tags internal to their group, but in that workflow they are most likely tracking each other's progress by having remote-tracking branches.  Again, the heuristic to automatically follow such tags is a good thing."
msgstr "Pode ser que, entre as pessoas da rede, elas possam querer trocar as tags internas ao seu grupo, porém neste fluxo de trabalho eles provavelmente rastreiam o progresso um do outro por terem ramificações de rastreamento remoto.  Novamente, a heurística para seguir automaticamente estas tags é uma coisa boa."

#. type: Title ~
#: en/git-tag.txt:360
#, no-wrap, priority:240
msgid "On Backdating Tags"
msgstr "Sobre as Tags com Datas Retroativas"

#. type: Plain text
#: en/git-tag.txt:367
#, priority:240
msgid "If you have imported some changes from another VCS and would like to add tags for major releases of your work, it is useful to be able to specify the date to embed inside of the tag object; such data in the tag object affects, for example, the ordering of tags in the gitweb interface."
msgstr "Caso tenha importado algumas alterações de outro VCS e queira adicionar as tags para as principais versões do seu trabalho, é útil poder informar a data que será incorporada no objeto tag; estes dados no objeto tag afetam, por exemplo, a ordem das tags na interface 'gitweb'."

#. type: Plain text
#: en/git-tag.txt:371
#, priority:240
msgid "To set the date used in future tag objects, set the environment variable GIT_COMMITTER_DATE (see the later discussion of possible values; the most common form is \"YYYY-MM-DD HH:MM\")."
msgstr "Para definir a data usada em objetos com tags futuras, defina a variável de ambiente `GIT_COMMITTER_DATE` (consulte a discussão posterior sobre os valores possíveis; a forma mais comum é \"AAAA-MM-DD HH:MM\")."

#. type: delimited block -
#: en/git-tag.txt:376
#, no-wrap, priority:240
msgid "$ GIT_COMMITTER_DATE=\"2006-10-02 10:31\" git tag -s v1.0.1\n"
msgstr "$GIT_COMMITTER_DATE=\"2006-10-02 10:31\" git tag -s v1.0.1\n"

#. type: Plain text
#: en/git-tag.txt:389
#, priority:240
msgid "linkgit:git-check-ref-format[1].  linkgit:git-config[1]."
msgstr "linkgit:git-check-ref-format[1].  linkgit:git-config[1]."

#. type: Title =
#: en/git.txt:2
#, no-wrap, priority:100
msgid "git(1)"
msgstr "git(1)"

#. type: Plain text
#: en/git.txt:7
#, priority:100
msgid "git - the stupid content tracker"
msgstr "git - o monitor estúpido de conteúdo"

#. type: Plain text
#: en/git.txt:18
#, no-wrap, priority:100
msgid ""
"'git' [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]\n"
"    [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n"
"    [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare]\n"
"    [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n"
"    [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n"
"    <command> [<args>]\n"
msgstr ""
"'git' [-v | --version] [-h | --help] [-C <caminho>] [-c <nome>=<valor>]\n"
"    [--exec-path[=<caminho>]] [--html-path] [--man-path] [--info-path]\n"
"    [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare]\n"
"    [--git-dir=<caminho>] [--work-tree=<caminho>] [--namespace=<nome>]\n"
"    [--super-prefix=<caminho>][--config-env=<nome>=<envvar>]\n"
"    <comando> [<args>]\n"

#. type: Plain text
#: en/git.txt:24
#, priority:100
msgid "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals."
msgstr "O Git é um sistema de controle de revisão distribuído, rápido, escalável e com um conjunto de comandos incomumente rico que oferece operações de alto nível e acesso completo aos seus recursos."

#. type: Plain text
#: en/git.txt:29
#, priority:100
msgid "See linkgit:gittutorial[7] to get started, then see linkgit:giteveryday[7] for a useful minimum set of commands.  The link:user-manual.html[Git User's Manual] has a more in-depth introduction."
msgstr "Para começar, consulte linkgit:gittutorial[7] e depois linkgit:giteveryday[7] para conhecer um conjunto mínimo de comandos uteis.  Para uma introdução mais aprofundada acesse o link:user-manual.html[Manual do Usuário do Git]."

#. type: Plain text
#: en/git.txt:34
#, priority:100
msgid "After you mastered the basic concepts, you can come back to this page to learn what commands Git offers.  You can learn more about individual Git commands with \"git help command\".  linkgit:gitcli[7] manual page gives you an overview of the command-line command syntax."
msgstr "Depois de dominar os conceitos básicos, é possível voltar para esta página para aprender quais os outros comandos o Git oferece.  É possível aprender mais sobre os comandos individuais do Git com o comando \"git help nome-do-comando\".  A página do manual linkgit:gitcli[7] fornece uma visão geral da sintaxe dos comandos na linha de comando."

#. type: Plain text
#: en/git.txt:38
#, priority:100
msgid "A formatted and hyperlinked copy of the latest Git documentation can be viewed at https://git.github.io/htmldocs/git.html or https://git-scm.com/docs."
msgstr "Uma cópia formatada e com hiperlink da documentação mais recente do Git pode ser visualizada em https://git.github.io/htmldocs/git.html ou https://git-scm.com/docs."

#. type: Plain text
#: en/git.txt:45
#, priority:100
msgid "Prints the Git suite version that the 'git' program came from."
msgstr "Imprime a versão do pacote Git exibindo a sua origem."

#. type: Plain text
#: en/git.txt:49
#, ignore-ellipsis, priority:100
msgid "This option is internally converted to `git version ...` and accepts the same options as the linkgit:git-version[1] command. If `--help` is also given, it takes precedence over `--version`."
msgstr "Esta opção é convertida internamente para `git version ...` e aceita as mesmas opções que o comando linkgit:git-version[1]. Se a opção `--help' também for usada, ela tem precedência sobre a opção `--version`."

#. type: Plain text
#: en/git.txt:56
#, priority:100
msgid "Prints the synopsis and a list of the most commonly used commands. If the option `--all` or `-a` is given then all available commands are printed. If a Git command is named this option will bring up the manual page for that command."
msgstr "Imprime a sinopse e uma lista dos comandos mais usados. Caso a opção `--all` ou `-a` seja usada, todos os comandos disponíveis serão impressos. Caso um comando Git seja informado, esta opção exibirá a página do manual deste comando."

#. type: Plain text
#: en/git.txt:61
#, ignore-ellipsis, priority:100
msgid "Other options are available to control how the manual page is displayed. See linkgit:git-help[1] for more information, because `git --help ...` is converted internally into `git help ...`."
msgstr "Outras opções estão disponíveis para controlar como a página do manual é exibida. Para mais informações, consulte linkgit:git-help[1], pois o comando `git --help ...` é convertido internamente em `git help ...`."

#. type: Labeled list
#: en/git.txt:62
#, no-wrap, priority:100
msgid "-C <path>"
msgstr "-C <caminho>"

#. type: Plain text
#: en/git.txt:68
#, priority:100
msgid "Run as if git was started in '<path>' instead of the current working directory.  When multiple `-C` options are given, each subsequent non-absolute `-C <path>` is interpreted relative to the preceding `-C <path>`.  If '<path>' is present but empty, e.g. `-C \"\"`, then the current working directory is left unchanged."
msgstr "Execute como se o git tivesse sido iniciado em '<caminho>' em vez do diretório de trabalho atual.  Quando várias opções `-C` são usadas, cada `-C <caminho>` não absoluto subsequente é interpretado com relação ao `-C <caminho>` anterior.  Se '<caminho>' estiver presente, porém vazio, por exemplo, `-C \"\"`, o diretório de trabalho atual permanecerá inalterado."

#. type: Plain text
#: en/git.txt:73
#, priority:100
msgid "This option affects options that expect path name like `--git-dir` and `--work-tree` in that their interpretations of the path names would be made relative to the working directory caused by the `-C` option. For example the following invocations are equivalent:"
msgstr "Esta opção afeta as opções que esperam o nome do caminho, como `--git-dir` e `work-tree`, pois as suas interpretações dos nomes dos caminhos seriam feitas em relação ao diretório de trabalho causado pela opção `-C`. Como, por exemplo, as seguintes invocações são equivalentes:"

#. type: Plain text
#: en/git.txt:76
#, no-wrap, priority:100
msgid ""
"    git --git-dir=a.git --work-tree=b -C c status\n"
"    git --git-dir=c/a.git --work-tree=c/b status\n"
msgstr ""
"    git --git-dir=a.git --work-tree=b -C c status\n"
"    git --git-dir=c/a.git --work-tree=c/b status\n"

#. type: Labeled list
#: en/git.txt:77
#, no-wrap, priority:100
msgid "-c <name>=<value>"
msgstr "-c <nome>=<valor>"

#. type: Plain text
#: en/git.txt:82
#, priority:100
msgid "Pass a configuration parameter to the command. The value given will override values from configuration files.  The <name> is expected in the same format as listed by 'git config' (subkeys separated by dots)."
msgstr "Encaminhe um parâmetro de configuração para o comando O valor informado substituirá os valores dos arquivos de configuração.  Um `<nome>` é esperado no mesmo formato listado pelo comando 'git config' (sub chaves separadas por pontos)."

#. type: Plain text
#: en/git.txt:88
#, ignore-ellipsis, priority:100
msgid "Note that omitting the `=` in `git -c foo.bar ...` is allowed and sets `foo.bar` to the boolean true value (just like `[foo]bar` would in a config file). Including the equals but with an empty value (like `git -c foo.bar= ...`) sets `foo.bar` to the empty string which `git config --type=bool` will convert to `false`."
msgstr "Note que ao omitir `=` no comando `git -c foo.bar ...` é permitido e define `foo.bar` com o valor booleano verdadeiro (assim como`[foo]bar` faria em um arquivo de configuração). Incluindo os iguais, porém com um valor vazio (como `git -c foo.bar= ...`) define `foo.bar` para a string vazia que `git config --type=bool` converterá para `false`."

#. type: Labeled list
#: en/git.txt:89
#, no-wrap, priority:100
msgid "--config-env=<name>=<envvar>"
msgstr "--config-env=<nome>=<envvar>"

#. type: Plain text
#: en/git.txt:98
#, priority:100
msgid "Like `-c <name>=<value>`, give configuration variable '<name>' a value, where <envvar> is the name of an environment variable from which to retrieve the value. Unlike `-c` there is no shortcut for directly setting the value to an empty string, instead the environment variable itself must be set to the empty string.  It is an error if the `<envvar>` does not exist in the environment. `<envvar>` may not contain an equals sign to avoid ambiguity with `<name>` containing one."
msgstr "Como `-c <nome>=<valor>`, dê à variável de configuração '<nome>' um valor onde <envvar> é o nome de uma variável de ambiente por onde o valor será recuperado. Ao contrário de `-c`, não há atalho para definir diretamente o valor para uma string vazia, em vez disso, a própria variável de ambiente deve ser definida como uma string vazia.  É um erro caso o `<envvar>` não exista no ambiente. O `<envvar>` não pode ter um sinal de igual para evitar um equívoco com `<nome>` contendo um."

#. type: Plain text
#: en/git.txt:105
#, priority:100
msgid "This is useful for cases where you want to pass transitory configuration options to git, but are doing so on OS's where other processes might be able to read your cmdline (e.g. `/proc/self/cmdline`), but not your environ (e.g. `/proc/self/environ`). That behavior is the default on Linux, but may not be on your system."
msgstr "Isso é útil para casos onde você deseja passar opções de configuração transitórias para o git, porém está fazendo isso em sistemas operacionais onde outros processos possam ser capazes de ler o seu cmdline (`/proc/self/cmdline` por exemplo), mas não o seu ambiente (`/proc/self/Environment` por exemplo). Este é comportamento normal no Linux, mas pode não estar no seu sistema."

#. type: Plain text
#: en/git.txt:110
#, priority:100
msgid "Note that this might add security for variables such as `http.extraHeader` where the sensitive information is part of the value, but not e.g. `url.<base>.insteadOf` where the sensitive information can be part of the key."
msgstr "Observe que isso pode adicionar segurança para variáveis como `http.extraHeader` onde as informações confidenciais fazem parte do valor, mas não `url.<base>.insteadOf` por exemplo onde as informações confidenciais podem fazer parte da chave."

#. type: Labeled list
#: en/git.txt:111
#, no-wrap, priority:100
msgid "--exec-path[=<path>]"
msgstr "--exec-path[=<caminho>]"

#. type: Plain text
#: en/git.txt:116
#, priority:100
msgid "Path to wherever your core Git programs are installed.  This can also be controlled by setting the GIT_EXEC_PATH environment variable. If no path is given, 'git' will print the current setting and then exit."
msgstr "O caminho para onde os seus principais programas Git estão instalados.  Isso também pode ser controlado configurando a variável de ambiente `GIT_EXEC_PATH`. Caso nenhum caminho seja informado, o 'git' imprimirá a configuração atual e encerrará."

#. type: Labeled list
#: en/git.txt:117
#, ignore-same, no-wrap, priority:100
msgid "--html-path"
msgstr "--html-path"

#. type: Plain text
#: en/git.txt:120
#, priority:100
msgid "Print the path, without trailing slash, where Git's HTML documentation is installed and exit."
msgstr "Imprima o caminho, sem barra, onde a documentação HTML do Git está instalada e encerre."

#. type: Labeled list
#: en/git.txt:121
#, ignore-same, no-wrap, priority:100
msgid "--man-path"
msgstr "--man-path"

#. type: Plain text
#: en/git.txt:124
#, priority:100
msgid "Print the manpath (see `man(1)`) for the man pages for this version of Git and exit."
msgstr "Imprima o manpath (consulte `man(1)`) para as páginas do manual desta versão do Git e encerre."

#. type: Labeled list
#: en/git.txt:125
#, ignore-same, no-wrap, priority:100
msgid "--info-path"
msgstr "--info-path"

#. type: Plain text
#: en/git.txt:128
#, priority:100
msgid "Print the path where the Info files documenting this version of Git are installed and exit."
msgstr "Imprima o caminho onde os arquivos Info que documentam esta versão do Git estão instalados e encerre."

#. type: Labeled list
#: en/git.txt:130
#, ignore-same, no-wrap, priority:100
msgid "--paginate"
msgstr "--paginate"

#. type: Plain text
#: en/git.txt:135
#, priority:100
msgid "Pipe all output into 'less' (or if set, $PAGER) if standard output is a terminal.  This overrides the `pager.<cmd>` configuration options (see the \"Configuration Mechanism\" section below)."
msgstr "Canalize toda a saída para 'less' (ou caso esteja definido, `$PAGER`) caso a saída padrão seja um terminal.  Isso substitui as opções de configuração `pager.<cmd>` (consulte a seção \"Mecanismo de Configuração\" abaixo)."

#. type: Labeled list
#: en/git.txt:137
#, ignore-same, no-wrap, priority:100
msgid "--no-pager"
msgstr "--no-pager"

#. type: Plain text
#: en/git.txt:139
#, priority:100
msgid "Do not pipe Git output into a pager."
msgstr "Não canalize a saída do Git para um pager."

#. type: Labeled list
#: en/git.txt:140
#, no-wrap, priority:100
msgid "--git-dir=<path>"
msgstr "--git-dir=<caminho>"

#. type: Plain text
#: en/git.txt:144
#, priority:100
msgid "Set the path to the repository (\".git\" directory). This can also be controlled by setting the `GIT_DIR` environment variable. It can be an absolute path or relative path to current working directory."
msgstr "Define o caminho para o repositório (o diretório \".git\"). Isso também pode ser controlado pela configuração da variável de ambiente `GIT_DIR`. Pode ser um caminho absoluto ou relativo ao diretório de trabalho atual."

#. type: Plain text
#: en/git.txt:155
#, priority:100
msgid "Specifying the location of the \".git\" directory using this option (or `GIT_DIR` environment variable) turns off the repository discovery that tries to find a directory with \".git\" subdirectory (which is how the repository and the top-level of the working tree are discovered), and tells Git that you are at the top level of the working tree.  If you are not at the top-level directory of the working tree, you should tell Git where the top-level of the working tree is, with the `--work-tree=<path>` option (or `GIT_WORK_TREE` environment variable)"
msgstr "A especificação do local do diretório \".git\" usando esta opção (ou a variável de ambiente `GIT_DIR`) desativa a descoberta do repositório que tenta localizar um diretório com o \".git\" dentro (que é como o repositório e o nível mais alto da descoberta da árvore de trabalho) e informa ao Git que você está no nível mais alto da árvore de trabalho.  Caso não esteja no diretório no nível mais alto da árvore de trabalho, deve informar ao Git onde está este nível da árvore de trabalho, com a opção `--work-tree=<caminho>` (ou a variável de ambiente `GIT_WORK_TREE`)"

#. type: Plain text
#: en/git.txt:158
#, priority:100
msgid "If you just want to run git as if it was started in `<path>` then use `git -C <path>`."
msgstr "Caso queira executar o git como se tivesse sido iniciado em `<caminho>`, utilize `git -C <caminho>`."

#. type: Labeled list
#: en/git.txt:159
#, no-wrap, priority:100
msgid "--work-tree=<path>"
msgstr "--work-tree=<caminho>"

#. type: Plain text
#: en/git.txt:166
#, priority:100
msgid "Set the path to the working tree. It can be an absolute path or a path relative to the current working directory.  This can also be controlled by setting the GIT_WORK_TREE environment variable and the core.worktree configuration variable (see core.worktree in linkgit:git-config[1] for a more detailed discussion)."
msgstr "Define o caminho para a árvore de trabalho. Pode ser um caminho absoluto ou relativo ao diretório de trabalho atual.  Também pode ser controlado atrvés da configuração da variável de ambiente `GIT_WORK_TREE` e da variável de configuração `core.worktree` (consulte `core.worktree` no linkgit:git-config[1] para uma discussão com mais detalhes)."

#. type: Labeled list
#: en/git.txt:167
#, no-wrap, priority:100
msgid "--namespace=<path>"
msgstr "--namespace=<caminho>"

#. type: Plain text
#: en/git.txt:171
#, priority:100
msgid "Set the Git namespace.  See linkgit:gitnamespaces[7] for more details.  Equivalent to setting the `GIT_NAMESPACE` environment variable."
msgstr "Define o espaço de nomes no Git.  Para mais detalhes consulte linkgit:gitnamespaces[7].  É o mesmo que configurar a variável de ambiente `GIT_NAMESPACE`."

#. type: Labeled list
#: en/git.txt:172
#, no-wrap, priority:100
msgid "--super-prefix=<path>"
msgstr "--super-prefix=<caminho>"

#. type: Plain text
#: en/git.txt:176
#, priority:100
msgid "Currently for internal use only.  Set a prefix which gives a path from above a repository down to its root.  One use is to give submodules context about the superproject that invoked it."
msgstr "Apenas para uso interno.  Set a prefix which gives a path from above a repository down to its root.  One use is to give submodules context about the superproject that invoked it."

#. type: Plain text
#: en/git.txt:181
#, priority:100
msgid "Treat the repository as a bare repository.  If GIT_DIR environment is not set, it is set to the current working directory."
msgstr "Trate o repositório como um repositório simples.  Caso o ambiente `GIT_DIR` não estiver definido, ele será definido no diretório de trabalho atual."

#. type: Labeled list
#: en/git.txt:182
#, ignore-same, no-wrap, priority:100
msgid "--no-replace-objects"
msgstr "--no-replace-objects"

#. type: Plain text
#: en/git.txt:185
#, priority:100
msgid "Do not use replacement refs to replace Git objects. See linkgit:git-replace[1] for more information."
msgstr "Não utilize substituições \"ref\" para substituir os objetos Git. Para mais informações consulte linkgit:git-replace[1]."

#. type: Labeled list
#: en/git.txt:186
#, ignore-same, no-wrap, priority:100
msgid "--literal-pathspecs"
msgstr "--literal-pathspecs"

#. type: Plain text
#: en/git.txt:190
#, priority:100
msgid "Treat pathspecs literally (i.e. no globbing, no pathspec magic).  This is equivalent to setting the `GIT_LITERAL_PATHSPECS` environment variable to `1`."
msgstr "Trate os pathspecs literalmente (ou seja, sem \"globbing\", sem a magia do \"pathspec\").  É o mesmo que definir a variável de ambiente `GIT_LITERAL_PATHSPECS` como `1`."

#. type: Labeled list
#: en/git.txt:191
#, ignore-same, no-wrap, priority:100
msgid "--glob-pathspecs"
msgstr "--glob-pathspecs"

#. type: Plain text
#: en/git.txt:196
#, priority:100
msgid "Add \"glob\" magic to all pathspec. This is equivalent to setting the `GIT_GLOB_PATHSPECS` environment variable to `1`. Disabling globbing on individual pathspecs can be done using pathspec magic \":(literal)\""
msgstr "Adicione a magia 'glob' para todos os 'pathspec'. É como definir a variável de ambiente `GIT_GLOB_PATHSPECS` como `1`. A desativação do caractere curinga nos pathspecs individuais podem ser feitos utilizando a mágica do pathspec \": (literal)\""

#. type: Labeled list
#: en/git.txt:197
#, ignore-same, no-wrap, priority:100
msgid "--noglob-pathspecs"
msgstr "--noglob-pathspecs"

#. type: Plain text
#: en/git.txt:202
#, priority:100
msgid "Add \"literal\" magic to all pathspec. This is equivalent to setting the `GIT_NOGLOB_PATHSPECS` environment variable to `1`. Enabling globbing on individual pathspecs can be done using pathspec magic \":(glob)\""
msgstr "Adicione a magia 'literal' a todos os \"pathspec\". É equivalente a definir a variável de ambiente `GIT_NOGLOB_PATHSPECS` para `1`. A ativação dos caracteres curinga nos \"pathspecs\" individuais podem ser feitos utilizando a mágica do pathspec \":(glob)\""

#. type: Labeled list
#: en/git.txt:203
#, ignore-same, no-wrap, priority:100
msgid "--icase-pathspecs"
msgstr "--icase-pathspecs"

#. type: Plain text
#: en/git.txt:206
#, priority:100
msgid "Add \"icase\" magic to all pathspec. This is equivalent to setting the `GIT_ICASE_PATHSPECS` environment variable to `1`."
msgstr "Adicione a magia 'icase' em todos os pathspec. É como definir a variável de ambiente `GIT_ICASE_PATHSPECS` como `1`."

#. type: Labeled list
#: en/git.txt:207
#, ignore-same, no-wrap, priority:100
msgid "--no-optional-locks"
msgstr "--no-optional-locks"

#. type: Plain text
#: en/git.txt:210
#, priority:100
msgid "Do not perform optional operations that require locks. This is equivalent to setting the `GIT_OPTIONAL_LOCKS` to `0`."
msgstr "Não execute operações opcionais que exijam bloqueios. Isso é equivalente que definir o `GIT_OPTIONAL_LOCKS` como `0`."

#. type: Labeled list
#: en/git.txt:211
#, ignore-ellipsis, no-wrap, priority:100
msgid "--list-cmds=group[,group...]"
msgstr "--list-cmds=group[,group...]"

#. type: Plain text
#: en/git.txt:220
#, priority:100
msgid "List commands by group. This is an internal/experimental option and may change or be removed in the future. Supported groups are: builtins, parseopt (builtin commands that use parse-options), main (all commands in libexec directory), others (all other commands in `$PATH` that have git- prefix), list-<category> (see categories in command-list.txt), nohelpers (exclude helper commands), alias and config (retrieve command list from config variable completion.commands)"
msgstr "Liste os comandos por grupo. Essa é uma opção interna/experimental e pode mudar ou ser removido no futuro. Os grupos compatíveis são: `builtins`, `parseopt` (comandos internos que utilizam 'parse-options´), `main` (todos os comandos no diretório 'libexec'), `others` (todos os outros comandos no `$PATH` que possuem um prefixo git), `list- <categoria>` (consulte as categorias no 'command-list.txt'), `nohelpers` (exclua os comandos auxiliares), `alias` e `config` (recupera a lista dos comandos da variável `completion.commands`)"

#. type: Title -
#: en/git.txt:222
#, no-wrap, priority:100
msgid "GIT COMMANDS"
msgstr "OS COMANDOS DO GIT"

#. type: Plain text
#: en/git.txt:226
#, priority:100
msgid "We divide Git into high level (\"porcelain\") commands and low level (\"plumbing\") commands."
msgstr "Dividimos o Git em comandos de alto nível (\"porcelana\") e de baixo nível (\"encanamento\")."

#. type: Title -
#: en/git.txt:228
#, no-wrap, priority:100
msgid "High-level commands (porcelain)"
msgstr "Comandos de alto nível (porcelana)"

#. type: Plain text
#: en/git.txt:232
#, priority:100
msgid "We separate the porcelain commands into the main commands and some ancillary user utilities."
msgstr "Separamos os comandos porcelana nos comandos principais e em alguns utilitários auxiliares do usuário."

#. type: Title ~
#: en/git.txt:234
#, no-wrap, priority:100
msgid "Main porcelain commands"
msgstr "Os principais comandos porcelana"

#. type: Title ~
#: en/git.txt:239
#, no-wrap, priority:100
msgid "Ancillary Commands"
msgstr "Comandos Auxiliares"

#. type: Plain text
#: en/git.txt:241
#, priority:100
msgid "Manipulators:"
msgstr "Manipuladores:"

#. type: Plain text
#: en/git.txt:245
#, priority:100
msgid "Interrogators:"
msgstr "Interrogadores:"

#. type: Title ~
#: en/git.txt:250
#, no-wrap, priority:100
msgid "Interacting with Others"
msgstr "Interagindo com os outros"

#. type: Plain text
#: en/git.txt:254
#, priority:100
msgid "These commands are to interact with foreign SCM and with other people via patch over e-mail."
msgstr "Estes comandos são para interagir com um SCM externo e com as outras pessoas através de patch por e-mail."

#. type: Title ~
#: en/git.txt:258
#, no-wrap, priority:100
msgid "Reset, restore and revert"
msgstr "Redefina, restaure e reverta"

#. type: Plain text
#: en/git.txt:261
#, priority:100
msgid "There are three commands with similar names: `git reset`, `git restore` and `git revert`."
msgstr "Existem três comandos com nomes semelhantes: `git reset`, `git restore` e o `git revert`."

#. type: Plain text
#: en/git.txt:264
#, priority:100
msgid "linkgit:git-revert[1] is about making a new commit that reverts the changes made by other commits."
msgstr "linkgit:git-revert[1] trata de fazer um novo commit que reverte as alterações feitas por outros commit."

#. type: Plain text
#: en/git.txt:269
#, priority:100
msgid "linkgit:git-restore[1] is about restoring files in the working tree from either the index or another commit. This command does not update your branch. The command can also be used to restore files in the index from another commit."
msgstr "linkgit:git-restore[1] trata da restauração dos arquivos na árvore de trabalho do índice ou de outro commit. Este comando não atualiza o seu ramo. O comando também pode ser usado para restaurar os arquivos no índice do outro commit."

#. type: Plain text
#: en/git.txt:273
#, priority:100
msgid "linkgit:git-reset[1] is about updating your branch, moving the tip in order to add or remove commits from the branch. This operation changes the commit history."
msgstr "linkgit:git-reset[1] trata da atualização do seu ramo, movendo o topo para adicionar ou remover os commits do ramo. Esta operação altera o histórico do commit."

#. type: Plain text
#: en/git.txt:276
#, priority:100
msgid "`git reset` can also be used to restore the index, overlapping with `git restore`."
msgstr "O comando `git reset` também pode ser usado para restaurar o índice, sobrepondo com `git restore`."

#. type: Title -
#: en/git.txt:279
#, no-wrap, priority:100
msgid "Low-level commands (plumbing)"
msgstr "Comandos de baixo nível (encanamento 'plumbing')"

#. type: Plain text
#: en/git.txt:286
#, priority:100
msgid "Although Git includes its own porcelain layer, its low-level commands are sufficient to support development of alternative porcelains.  Developers of such porcelains might start by reading about linkgit:git-update-index[1] and linkgit:git-read-tree[1]."
msgstr "Embora o Git inclua a sua própria camada de porcelana, os seus comandos de baixo nível são suficientes para apoiar o desenvolvimento de porcelanas alternativas.  Os desenvolvedores destas porcelanas podem começar lendo sobre linkgit:git-update-index[1] e linkgit:git-read-tree[1]."

#. type: Plain text
#: en/git.txt:293
#, priority:100
msgid "The interface (input, output, set of options and the semantics)  to these low-level commands are meant to be a lot more stable than Porcelain level commands, because these commands are primarily for scripted use.  The interface to Porcelain commands on the other hand are subject to change in order to improve the end user experience."
msgstr "A interface (entrada, saída, conjunto de opções e as semânticas) para esses comandos de baixo nível deve ser muito mais estável que os comandos porcelana, porque estes comandos são principalmente para uso com um script.  A interface para os comandos Porcelana, por outro lado, está sujeita a alterações para melhorar a experiência do usuário final."

#. type: Plain text
#: en/git.txt:299
#, priority:100
msgid "The following description divides the low-level commands into commands that manipulate objects (in the repository, index, and working tree), commands that interrogate and compare objects, and commands that move objects and references between repositories."
msgstr "A descrição a seguir divide os comandos de baixo nível em comandos que manipulam os objetos (no repositório, índice e árvore de trabalho), comandos que interrogam, comparam objetos, comandos que movem objetos e suas referências entre os repositórios."

#. type: Title ~
#: en/git.txt:302
#, no-wrap, priority:100
msgid "Manipulation commands"
msgstr "Comandos de manipulação"

#. type: Title ~
#: en/git.txt:308
#, no-wrap, priority:100
msgid "Interrogation commands"
msgstr "Comandos de interrogação"

#. type: Plain text
#: en/git.txt:314
#, priority:100
msgid "In general, the interrogate commands do not touch the files in the working tree."
msgstr "Em geral, os comandos de interrogação não tocam nos arquivos da árvore de trabalho."

#. type: Title ~
#: en/git.txt:317
#, no-wrap, priority:100
msgid "Syncing repositories"
msgstr "Sincronizando os repositórios"

#. type: Plain text
#: en/git.txt:323
#, priority:100
msgid "The following are helper commands used by the above; end users typically do not use them directly."
msgstr "A seguir, são apresentados os comandos auxiliares utilizados acima; os usuários finais normalmente não os utilizam diretamente."

#. type: Title ~
#: en/git.txt:328
#, no-wrap, priority:100
msgid "Internal helper commands"
msgstr "Comandos auxiliares internos"

#. type: Plain text
#: en/git.txt:332
#, priority:100
msgid "These are internal helper commands used by other commands; end users typically do not use them directly."
msgstr "Estes são comandos auxiliares internos usados por outros comandos; os usuários finais normalmente não os utilizam diretamente."

#. type: Title -
#: en/git.txt:336
#, no-wrap, priority:100
msgid "Guides"
msgstr "Guias"

#. type: Plain text
#: en/git.txt:339
#, priority:100
msgid "The following documentation pages are guides about Git concepts."
msgstr "As páginas da documentação a seguir são os guias sobre os conceitos do Git."

#. type: Title -
#: en/git.txt:343
#, no-wrap, priority:100
msgid "Repository, command and file interfaces"
msgstr ""

#. type: Plain text
#: en/git.txt:348
#, priority:100
msgid "This documentation discusses repository and command interfaces which users are expected to interact with directly. See `--user-formats` in linkgit:git-help[1] for more details on the critera."
msgstr ""

#. type: Title -
#: en/git.txt:352
#, no-wrap, priority:100
msgid "File formats, protocols and other developer interfaces"
msgstr ""

#. type: Plain text
#: en/git.txt:357
#, priority:100
msgid "This documentation discusses file formats, over-the-wire protocols and other git developer interfaces. See `--developer-interfaces` in linkgit:git-help[1]."
msgstr ""

#. type: Title -
#: en/git.txt:361
#, no-wrap, priority:100
msgid "Configuration Mechanism"
msgstr "Mecanismo de Configuração"

#. type: Plain text
#: en/git.txt:366
#, priority:100
msgid "Git uses a simple text format to store customizations that are per repository and are per user.  Such a configuration file may look like this:"
msgstr "O Git utiliza um formato de texto simples para armazenar as personalizações por repositório e por usuário.  Tal arquivo de configuração pode ficar assim:"

#. type: delimited block -
#: en/git.txt:371
#, no-wrap, priority:100
msgid ""
"#\n"
"# A '#' or ';' character indicates a comment.\n"
"#\n"
msgstr ""
"#\n"
"# Os caracteres '#' ou ';' indicam um comentário.\n"
"#\n"

#. type: delimited block -
#: en/git.txt:381
#, no-wrap, priority:100
msgid ""
"; user identity\n"
"[user]\n"
"\tname = \"Junio C Hamano\"\n"
"\temail = \"gitster@pobox.com\"\n"
msgstr ""
"; identidade do usuário\n"
"[user]\n"
"\tname = \"Junio C Hamano\"\n"
"\temail = \"gitster@pobox.com\"\n"

#. type: Plain text
#: en/git.txt:387
#, priority:100
msgid "Various commands read from the configuration file and adjust their operation accordingly.  See linkgit:git-config[1] for a list and more details about the configuration mechanism."
msgstr "Vários comandos são lidos no arquivo de configuração e ajustam a sua operação de acordo.  Para obter uma lista e mais detalhes sobre o mecanismo de configuração, consulte linkgit:git-config[1]."

#. type: Title -
#: en/git.txt:390
#, no-wrap, priority:100
msgid "Identifier Terminology"
msgstr "Terminologia do Identificador"

#. type: Plain text
#: en/git.txt:393
#, priority:100
msgid "Indicates the object name for any type of object."
msgstr "Indica o nome do objeto para qualquer tipo de objeto."

#. type: Labeled list
#: en/git.txt:394 en/git-unpack-file.txt:23
#, no-wrap, priority:100
msgid "<blob>"
msgstr "<blob>"

#. type: Plain text
#: en/git.txt:396
#, priority:100
msgid "Indicates a blob object name."
msgstr "Indica um nome de um objeto bolha."

#. type: Plain text
#: en/git.txt:399
#, priority:100
msgid "Indicates a tree object name."
msgstr "Indica um nome de um objeto árvore."

#. type: Plain text
#: en/git.txt:402
#, priority:100
msgid "Indicates a commit object name."
msgstr "Indica um nome de um objeto commit."

#. type: Plain text
#: en/git.txt:408
#, priority:100
msgid "Indicates a tree, commit or tag object name.  A command that takes a <tree-ish> argument ultimately wants to operate on a <tree> object but automatically dereferences <commit> and <tag> objects that point at a <tree>."
msgstr "Indica uma árvore, nome de um objeto commit ou tag.  Um comando que aceite um argumento <commit-ish> e queira operar em um objeto <commit>, porém remove a referência automaticamente dos objetos <tag> que apontem para um <commit>."

#. type: Labeled list
#: en/git.txt:409
#, no-wrap, priority:100
msgid "<commit-ish>"
msgstr "<commit-ish>"

#. type: Plain text
#: en/git.txt:414
#, priority:100
msgid "Indicates a commit or tag object name.  A command that takes a <commit-ish> argument ultimately wants to operate on a <commit> object but automatically dereferences <tag> objects that point at a <commit>."
msgstr "Indica um nome do objeto commit ou tag.  Um comando que aceita um argumento <commit-ish> e queira operar em um objeto <commit>, porém remove a referência automaticamente dos objetos <tag> que apontem para um <commit>."

#. type: Plain text
#: en/git.txt:418
#, priority:100
msgid "Indicates that an object type is required.  Currently one of: `blob`, `tree`, `commit`, or `tag`."
msgstr "Indica que um tipo do objeto seja necessário.  Atualmente um dos: `blob`, `tree`, `commit`, ou `tag`."

#. type: Plain text
#: en/git.txt:422
#, priority:100
msgid "Indicates a filename - almost always relative to the root of the tree structure `GIT_INDEX_FILE` describes."
msgstr "Indica um nome do arquivo - quase sempre em relação à raiz da estrutura da árvore que o `GIT_INDEX_FILE` descreve."

#. type: Title -
#: en/git.txt:424
#, no-wrap, priority:100
msgid "Symbolic Identifiers"
msgstr "Identificadores Simbólicos"

#. type: Plain text
#: en/git.txt:427
#, priority:100
msgid "Any Git command accepting any <object> can also use the following symbolic notation:"
msgstr "Qualquer comando Git que aceite qualquer <objeto> também pode utilizar a seguinte notação simbólica:"

#. type: Plain text
#: en/git.txt:430
#, priority:100
msgid "indicates the head of the current branch."
msgstr "indica o cabeçalho do ramo atual."

#. type: Labeled list
#: en/git.txt:431
#, no-wrap, priority:100
msgid "<tag>"
msgstr "<tag>"

#. type: Plain text
#: en/git.txt:434
#, priority:100
msgid "a valid tag 'name' (i.e. a `refs/tags/<tag>` reference)."
msgstr "uma tag válida 'nome' (por exemplo, uma referência `refs/tags/<tag>`)."

#. type: Plain text
#: en/git.txt:438
#, priority:100
msgid "a valid head 'name' (i.e. a `refs/heads/<head>` reference)."
msgstr "um cabeçalho válido 'nome' (por exemplo, uma referência `refs/heads/<head>`)."

#. type: Plain text
#: en/git.txt:441
#, priority:100
msgid "For a more complete list of ways to spell object names, see \"SPECIFYING REVISIONS\" section in linkgit:gitrevisions[7]."
msgstr "Para obter uma lista mais completa de maneiras de soletrar os nomes dos objetos, consulte a seção \"DEFININDO AS REVISÕES\" em linkgit:gitrevisions[7]."

#. type: Title -
#: en/git.txt:444
#, no-wrap, priority:100
msgid "File/Directory Structure"
msgstr "A Estrutura dos Arquivos/Diretórios"

#. type: Plain text
#: en/git.txt:447
#, priority:100
msgid "Please see the linkgit:gitrepository-layout[5] document."
msgstr "Favor consultar o documento linkgit:gitrepository-layout[5]."

#. type: Plain text
#: en/git.txt:449
#, priority:100
msgid "Read linkgit:githooks[5] for more details about each hook."
msgstr "Para mais detalhes sobre cada gancho, consulte linkgit:githooks[5]."

#. type: Plain text
#: en/git.txt:452
#, priority:100
msgid "Higher level SCMs may provide and manage additional information in the `$GIT_DIR`."
msgstr "Os SCMs de alto nível podem fornecer e gerenciar informações adicionais no `$GIT_DIR`."

#. type: Title -
#: en/git.txt:455
#, no-wrap, priority:100
msgid "Terminology"
msgstr "Terminologia"

#. type: Plain text
#: en/git.txt:457
#, priority:100
msgid "Please see linkgit:gitglossary[7]."
msgstr "Favor consultar linkgit:gitglossary[7]."

#. type: Plain text
#: en/git.txt:462
#, priority:100
msgid "Various Git commands use the following environment variables:"
msgstr "Vários comandos Git usam as seguintes variáveis de ambiente:"

#. type: Title ~
#: en/git.txt:464
#, no-wrap, priority:100
msgid "The Git Repository"
msgstr "O Repositório Git"

#. type: Plain text
#: en/git.txt:468
#, priority:100
msgid "These environment variables apply to 'all' core Git commands. Nb: it is worth noting that they may be used/overridden by SCMS sitting above Git so take care if using a foreign front-end."
msgstr "Essas variáveis de ambiente se aplicam a 'todos' os comandos principais do Git. Nb: é importante notar que eles podem ser usados/substituídos pelo SCMS acima do Git, portanto, tenha cuidado caso esteja usando um front-end externo."

#. type: Labeled list
#: en/git.txt:469
#, ignore-same, no-wrap, priority:100
msgid "`GIT_INDEX_FILE`"
msgstr "`GIT_INDEX_FILE`"

#. type: Plain text
#: en/git.txt:473
#, priority:100
msgid "This environment allows the specification of an alternate index file. If not specified, the default of `$GIT_DIR/index` is used."
msgstr "Este ambiente permite a definição de um arquivo índice alternativo. Caso não seja definido, a predefinição do `$GIT_DIR/index` é utilizado."

#. type: Labeled list
#: en/git.txt:474
#, ignore-same, no-wrap, priority:100
msgid "`GIT_INDEX_VERSION`"
msgstr "`GIT_INDEX_VERSION`"

#. type: Plain text
#: en/git.txt:479
#, priority:100
msgid "This environment variable allows the specification of an index version for new repositories.  It won't affect existing index files.  By default index file version 2 or 3 is used. See linkgit:git-update-index[1] for more information."
msgstr "Essa variável de ambiente permite a especificação de uma versão de índice para os novos repositórios.  Não afetará os arquivos de índice existentes.  Por predefinição, a versão 2 ou 3 do arquivo de índice é utilizado. Para mais informações consulte linkgit:git-update-index[1]."

#. type: Labeled list
#: en/git.txt:480
#, ignore-same, no-wrap, priority:100
msgid "`GIT_OBJECT_DIRECTORY`"
msgstr "`GIT_OBJECT_DIRECTORY`"

#. type: Plain text
#: en/git.txt:485
#, priority:100
msgid "If the object storage directory is specified via this environment variable then the sha1 directories are created underneath - otherwise the default `$GIT_DIR/objects` directory is used."
msgstr "Caso o diretório de armazenamento dos objetos seja informado através desta variável de ambiente, os diretórios sha1 serão criados embaixo - caso contrário, o diretório predefinido `$GIT_DIR/objects` será utilizado."

#. type: Labeled list
#: en/git.txt:486
#, ignore-same, no-wrap, priority:100
msgid "`GIT_ALTERNATE_OBJECT_DIRECTORIES`"
msgstr "`GIT_ALTERNATE_OBJECT_DIRECTORIES`"

#. type: Plain text
#: en/git.txt:492
#, priority:100
msgid "Due to the immutable nature of Git objects, old objects can be archived into shared, read-only directories. This variable specifies a \":\" separated (on Windows \";\" separated) list of Git object directories which can be used to search for Git objects. New objects will not be written to these directories."
msgstr "Devido à natureza imutável dos objetos Git, os objetos antigos podem ser arquivados em diretórios compartilhados com somente leitura apenas. Esta variável especifica uma lista \":\" separada (no Windows \";\") dos diretórios dos objetos Git que podem ser utilizados para localizar objetos Git. Os novos objetos não serão gravados nestes diretórios."

#. type: Plain text
#: en/git.txt:498
#, priority:100
msgid "Entries that begin with `\"` (double-quote) will be interpreted as C-style quoted paths, removing leading and trailing double-quotes and respecting backslash escapes. E.g., the value `\"path-with-\\\"-and-:-in-it\":vanilla-path` has two paths: `path-with-\"-and-:-in-it` and `vanilla-path`."
msgstr "As entradas que começam com `\"` (aspas duplas) serão interpretadas como caminhos entre as aspas no estilo C, removendo as aspas duplas iniciais e finais, respeitando as escapes da barra invertida. Como por exemplo, o valor `\"path-with-\\\"-and-:-in-it\":vanilla-path` possuí dois caminhos: `path-with-\"-and-:-in-it` e `vanilla-path`."

#. type: Labeled list
#: en/git.txt:499
#, ignore-same, no-wrap, priority:100
msgid "`GIT_DIR`"
msgstr "`GIT_DIR`"

#. type: Plain text
#: en/git.txt:504
#, priority:100
msgid "If the `GIT_DIR` environment variable is set then it specifies a path to use instead of the default `.git` for the base of the repository.  The `--git-dir` command-line option also sets this value."
msgstr "Caso a variável de ambiente `GIT_DIR` esteja definida, ela definirá um caminho que será utilizado em vez do `.git` predefinido como sendo a base do repositório.  A opção da linha de comando `--git-dir` também define este valor."

#. type: Labeled list
#: en/git.txt:505
#, ignore-same, no-wrap, priority:100
msgid "`GIT_WORK_TREE`"
msgstr "`GIT_WORK_TREE`"

#. type: Plain text
#: en/git.txt:509
#, priority:100
msgid "Set the path to the root of the working tree.  This can also be controlled by the `--work-tree` command-line option and the core.worktree configuration variable."
msgstr "Defina o caminho para a raiz da árvore de trabalho.  Isso também pode ser controlado pela opção da linha de comando `--work-tree` e pela variável de configuração `core.worktree`."

#. type: Labeled list
#: en/git.txt:510
#, ignore-same, no-wrap, priority:100
msgid "`GIT_NAMESPACE`"
msgstr "`GIT_NAMESPACE`"

#. type: Plain text
#: en/git.txt:513
#, priority:100
msgid "Set the Git namespace; see linkgit:gitnamespaces[7] for details.  The `--namespace` command-line option also sets this value."
msgstr "Define o espaço de nomes no Git; para mais detalhes consulte linkgit:gitnamespaces[7].  A opção da linha de comando `--namespace` também define este valor."

#. type: Labeled list
#: en/git.txt:514
#, ignore-same, no-wrap, priority:100
msgid "`GIT_CEILING_DIRECTORIES`"
msgstr "`GIT_CEILING_DIRECTORIES`"

#. type: Plain text
#: en/git.txt:528
#, priority:100
msgid "This should be a colon-separated list of absolute paths.  If set, it is a list of directories that Git should not chdir up into while looking for a repository directory (useful for excluding slow-loading network directories).  It will not exclude the current working directory or a GIT_DIR set on the command line or in the environment.  Normally, Git has to read the entries in this list and resolve any symlink that might be present in order to compare them with the current directory.  However, if even this access is slow, you can add an empty entry to the list to tell Git that the subsequent entries are not symlinks and needn't be resolved; e.g., `GIT_CEILING_DIRECTORIES=/maybe/symlink::/very/slow/non/symlink`."
msgstr "Essa deve ser uma lista separada por dois pontos com caminhos absolutos.  Caso seja definido, é uma lista dos diretórios onde o Git não deve mudar de diretório (chdir) enquanto procura um diretório do repositório (útil para excluir os diretórios da rede com carregamento lento).  Ele não excluirá o diretório de trabalho atual, um `GIT_DIR` definido na linha de comandos ou no ambiente.  Normalmente, o Git precisa ler as entradas nesta lista e resolver qualquer link simbólico que possa estar presente para compará-las com o diretório atual.  No entanto, mesmo que esse acesso seja lento, você pode adicionar uma entrada vazia à lista para informar ao Git que as entradas subsequentes não são links simbólicos e não precisam ser resolvidos; por exemplo, `GIT_CEILING_DIRECTORIES=/maybe/symlink::/very/slow/non/symlink`."

#. type: Labeled list
#: en/git.txt:529
#, ignore-same, no-wrap, priority:100
msgid "`GIT_DISCOVERY_ACROSS_FILESYSTEM`"
msgstr "`GIT_DISCOVERY_ACROSS_FILESYSTEM`"

#. type: Plain text
#: en/git.txt:538
#, priority:100
msgid "When run in a directory that does not have \".git\" repository directory, Git tries to find such a directory in the parent directories to find the top of the working tree, but by default it does not cross filesystem boundaries.  This environment variable can be set to true to tell Git not to stop at filesystem boundaries.  Like `GIT_CEILING_DIRECTORIES`, this will not affect an explicit repository directory set via `GIT_DIR` or on the command line."
msgstr "Quando executado em um diretório que não possui o diretório do repositório \".git\", o Git tenta encontrar esse diretório nos diretórios pais para encontrar o cume da árvore de trabalho, porém, é predefinido que, ele não cruze os limites do sistema de arquivos.  Essa variável de ambiente pode ser configurada como 'true' para dizer ao Git para não parar nos limites do sistema de arquivos.  Como o `GIT_CEILING_DIRECTORIES`, isso não afetará explicitamente um diretório do repositório definido através do `GIT_DIR` ou na linha de comando."

#. type: Labeled list
#: en/git.txt:539
#, ignore-same, no-wrap, priority:100
msgid "`GIT_COMMON_DIR`"
msgstr "`GIT_COMMON_DIR`"

#. type: Plain text
#: en/git.txt:547
#, ignore-ellipsis, priority:100
msgid "If this variable is set to a path, non-worktree files that are normally in $GIT_DIR will be taken from this path instead. Worktree-specific files such as HEAD or index are taken from $GIT_DIR. See linkgit:gitrepository-layout[5] and linkgit:git-worktree[1] for details. This variable has lower precedence than other path variables such as GIT_INDEX_FILE, GIT_OBJECT_DIRECTORY..."
msgstr "Se essa variável estiver definida para um caminho, os arquivos que não são da árvore de trabalho, estão normalmente estão em $GIT_DIR e serão obtidos desse caminho. Os arquivos específicos da árvore de trabalho, como `HEAD` ou índice serão obtidos de $GIT_DIR. Para mais detalhes consulte linkgit:gitrepository-layout[5] e linkgit:git-worktree[1]. Essa variável tem precedência mais baixa do que outras variáveis de caminho como `GIT_INDEX_FILE`, `GIT_OBJECT_DIRECTORY`..."

#. type: Labeled list
#: en/git.txt:548
#, ignore-same, no-wrap, priority:100
msgid "`GIT_DEFAULT_HASH`"
msgstr "`GIT_DEFAULT_HASH`"

#. type: Plain text
#: en/git.txt:554
#, priority:100
msgid "If this variable is set, the default hash algorithm for new repositories will be set to this value. This value is currently ignored when cloning; the setting of the remote repository is used instead. The default is \"sha1\". THIS VARIABLE IS EXPERIMENTAL! See `--object-format` in linkgit:git-init[1]."
msgstr "Caso esta variável esteja definida, o algoritmo hash predefinido para os novos repositórios será definido com este valor. Este valor é atualmente ignorado durante a clonagem; em vez disso, a configuração do repositório remoto é utilizada. O valor predefinido é `sha1`. ESTA VARIÁVEL É EXPERIMENTAL! Consulte `--object-format` in linkgit:git-init[1]."

#. type: Title ~
#: en/git.txt:556
#, no-wrap, priority:100
msgid "Git Commits"
msgstr "Os Commits do Git"

#. type: Labeled list
#: en/git.txt:557
#, ignore-same, no-wrap, priority:100
msgid "`GIT_AUTHOR_NAME`"
msgstr "`GIT_AUTHOR_NAME`"

#. type: Plain text
#: en/git.txt:561
#, priority:100
msgid "The human-readable name used in the author identity when creating commit or tag objects, or when writing reflogs. Overrides the `user.name` and `author.name` configuration settings."
msgstr "O endereço legível do endereço de e-mail utilizado na identidade do autor ao criar os commits, na tag dos objetos ou ao gravar os reflogs. Substitui as definições de configuração `user.name` e `author.name`."

#. type: Labeled list
#: en/git.txt:562
#, ignore-same, no-wrap, priority:100
msgid "`GIT_AUTHOR_EMAIL`"
msgstr "`GIT_AUTHOR_EMAIL`"

#. type: Plain text
#: en/git.txt:566
#, priority:100
msgid "The email address used in the author identity when creating commit or tag objects, or when writing reflogs. Overrides the `user.email` and `author.email` configuration settings."
msgstr "O endereço de email utilizado na identidade do autor ao criar os commits, na marcação dos objetos ou ao gravar os reflogs. Substitui as definições da configuração `user.email` e `author.email`."

#. type: Labeled list
#: en/git.txt:567
#, ignore-same, no-wrap, priority:100
msgid "`GIT_AUTHOR_DATE`"
msgstr "`GIT_AUTHOR_DATE`"

#. type: Plain text
#: en/git.txt:570
#, priority:100
msgid "The date used for the author identity when creating commit or tag objects, or when writing reflogs. See linkgit:git-commit[1] for valid formats."
msgstr "A data utilizada para a identidade do autor ao criar objetos commit ou tags ou quando escrever \"reflogs\". Para conhecer os formatos válidos, consulte linkgit:git-commit[1]."

#. type: Labeled list
#: en/git.txt:571
#, ignore-same, no-wrap, priority:100
msgid "`GIT_COMMITTER_NAME`"
msgstr "`GIT_COMMITTER_NAME`"

#. type: Plain text
#: en/git.txt:575
#, priority:100
msgid "The human-readable name used in the committer identity when creating commit or tag objects, or when writing reflogs. Overrides the `user.name` and `committer.name` configuration settings."
msgstr "O endereço legível do nome utilizado na identidade do autor do commit ao criar os commits, na tag dos objetos ou ao gravar os reflogs. Substitui as definições de configuração `user.name` e `committer.name`."

#. type: Labeled list
#: en/git.txt:576
#, ignore-same, no-wrap, priority:100
msgid "`GIT_COMMITTER_EMAIL`"
msgstr "`GIT_COMMITTER_EMAIL`"

#. type: Plain text
#: en/git.txt:580
#, priority:100
msgid "The email address used in the author identity when creating commit or tag objects, or when writing reflogs. Overrides the `user.email` and `committer.email` configuration settings."
msgstr "O endereço de email utilizado na identidade do autor ao criar os commits, na marcação dos objetos ou ao gravar os reflogs. Overrides the `user.email` and `committer.email` configuration settings."

#. type: Labeled list
#: en/git.txt:581
#, ignore-same, no-wrap, priority:100
msgid "`GIT_COMMITTER_DATE`"
msgstr "`GIT_COMMITTER_DATE`"

#. type: Plain text
#: en/git.txt:584
#, priority:100
msgid "The date used for the committer identity when creating commit or tag objects, or when writing reflogs. See linkgit:git-commit[1] for valid formats."
msgstr "A data utilizada para a identidade de quem fez o commit durante a criação dos objetos as tags do commit ou ao gravar os reflogs. Para mais formatos válidos, consulte linkgit:git-commit[1]."

#. type: Labeled list
#: en/git.txt:585
#, ignore-same, no-wrap, priority:100
msgid "`EMAIL`"
msgstr "`EMAIL`"

#. type: Plain text
#: en/git.txt:588
#, priority:100
msgid "The email address used in the author and committer identities if no other relevant environment variable or configuration setting has been set."
msgstr "O endereço de e-mail usado nas identidades do autor e do commit, caso nenhuma outra variável de ambiente ou da configuração relevante tiver sido definida."

#. type: Title ~
#: en/git.txt:590
#, no-wrap, priority:100
msgid "Git Diffs"
msgstr "Os Diffs do Git"

#. type: Labeled list
#: en/git.txt:591
#, ignore-same, no-wrap, priority:100
msgid "`GIT_DIFF_OPTS`"
msgstr "`GIT_DIFF_OPTS`"

#. type: Plain text
#: en/git.txt:596
#, priority:100
msgid "Only valid setting is \"--unified=??\" or \"-u??\" to set the number of context lines shown when a unified diff is created.  This takes precedence over any \"-U\" or \"--unified\" option value passed on the Git diff command line."
msgstr "A única opção válida é \"--unified=??\" ou \"-u??\" para definir o número de linhas de contexto mostradas quando um diff unificado for criado.  Isso tem precedência sobre qualquer valor da opção \"-U\" ou \"--unified\" passado na linha de comando diff do Git."

#. type: Labeled list
#: en/git.txt:597
#, ignore-same, no-wrap, priority:100
msgid "`GIT_EXTERNAL_DIFF`"
msgstr "`GIT_EXTERNAL_DIFF`"

#. type: Plain text
#: en/git.txt:603
#, priority:100
msgid "When the environment variable `GIT_EXTERNAL_DIFF` is set, the program named by it is called to generate diffs, and Git does not use its builtin diff machinery.  For a path that is added, removed, or modified, `GIT_EXTERNAL_DIFF` is called with 7 parameters:"
msgstr "Quando a variável de ambiente `GIT_EXTERNAL_DIFF` é configurada, o programa informado nele é chamado para gerar os diffs, o Git não utiliza o seu mecanismo diff interno .  Para um caminho que é adicionado, removido ou modificado, a variável `GIT_EXTERNAL_DIFF` é chamado com 7 parâmetros:"

#. type: Plain text
#: en/git.txt:605
#, priority:100
msgid "path old-file old-hex old-mode new-file new-hex new-mode"
msgstr "path old-file old-hex old-mode new-file new-hex new-mode"

#. type: Plain text
#: en/git.txt:607
#, priority:100
msgid "where:"
msgstr "onde:"

#. type: Labeled list
#: en/git.txt:608
#, no-wrap, priority:100
msgid "<old|new>-file"
msgstr "<old|new>-file"

#. type: Plain text
#: en/git.txt:610
#, priority:100
msgid "are files GIT_EXTERNAL_DIFF can use to read the contents of <old|new>,"
msgstr "são os arquivos que `GIT_EXTERNAL_DIFF` pode utilizar para ler o conteúdo do <antigo|novo>,"

#. type: Labeled list
#: en/git.txt:610
#, no-wrap, priority:100
msgid "<old|new>-hex"
msgstr "<old|new>-hex"

#. type: Plain text
#: en/git.txt:611
#, priority:100
msgid "are the 40-hexdigit SHA-1 hashes,"
msgstr "são os hashes SHA-1 com 40 hexadecimais,"

#. type: Labeled list
#: en/git.txt:611
#, no-wrap, priority:100
msgid "<old|new>-mode"
msgstr "<old|new>-mode"

#. type: Plain text
#: en/git.txt:612
#, priority:100
msgid "are the octal representation of the file modes."
msgstr "são a representação octais dos modos dos arquivos."

#. type: Plain text
#: en/git.txt:618
#, priority:100
msgid "The file parameters can point at the user's working file (e.g. `new-file` in \"git-diff-files\"), `/dev/null` (e.g. `old-file` when a new file is added), or a temporary file (e.g. `old-file` in the index).  `GIT_EXTERNAL_DIFF` should not worry about unlinking the temporary file --- it is removed when `GIT_EXTERNAL_DIFF` exits."
msgstr "Os parâmetros do arquivo podem apontar para o arquivo de trabalho do usuário (`new-file` em \"git-diff-files\" por exemplo), `/dev/null` (`old-file` quando um novo arquivo for adicionado por exemplo) ou um arquivo temporário (um `arquivo antigo` no índice por exemplo).  A variável `GIT_EXTERNAL_DIFF` não deve se preocupar com o desvinculamento do arquivo temporário --- ele é removido quando a variável `GIT_EXTERNAL_DIFF` termina."

#. type: Plain text
#: en/git.txt:621
#, priority:100
msgid "For a path that is unmerged, `GIT_EXTERNAL_DIFF` is called with 1 parameter, <path>."
msgstr "Para um caminho que não foi mesclado, `GIT_EXTERNAL_DIFF` é chamado com 1 parâmetro, <caminho>."

#. type: Plain text
#: en/git.txt:624
#, priority:100
msgid "For each path `GIT_EXTERNAL_DIFF` is called, two environment variables, `GIT_DIFF_PATH_COUNTER` and `GIT_DIFF_PATH_TOTAL` are set."
msgstr "Para cada caminho `GIT_EXTERNAL_DIFF` que é chamado, duas variáveis de ambiente,`GIT_DIFF_PATH_COUNTER` e `GIT_DIFF_PATH_TOTAL` são definidas."

#. type: Labeled list
#: en/git.txt:625
#, ignore-same, no-wrap, priority:100
msgid "`GIT_DIFF_PATH_COUNTER`"
msgstr "`GIT_DIFF_PATH_COUNTER`"

#. type: Plain text
#: en/git.txt:627
#, priority:100
msgid "A 1-based counter incremented by one for every path."
msgstr "Um contador com base 1 incrementado por um em cada caminho."

#. type: Labeled list
#: en/git.txt:628
#, ignore-same, no-wrap, priority:100
msgid "`GIT_DIFF_PATH_TOTAL`"
msgstr "`GIT_DIFF_PATH_TOTAL`"

#. type: Plain text
#: en/git.txt:630
#, priority:100
msgid "The total number of paths."
msgstr "A quantidade total dos caminhos."

#. type: Labeled list
#: en/git.txt:633
#, ignore-same, no-wrap, priority:100
msgid "`GIT_MERGE_VERBOSITY`"
msgstr "`GIT_MERGE_VERBOSITY`"

#. type: Plain text
#: en/git.txt:637
#, priority:100
msgid "A number controlling the amount of output shown by the recursive merge strategy.  Overrides merge.verbosity.  See linkgit:git-merge[1]"
msgstr "Um número que controla a quantidade de saída demonstrada pela estratégia de mesclagem recursiva.  Substitui o `merge.verbosity`.  Consulte linkgit:git-merge[1]"

#. type: Labeled list
#: en/git.txt:638
#, ignore-same, no-wrap, priority:100
msgid "`GIT_PAGER`"
msgstr "`GIT_PAGER`"

#. type: Plain text
#: en/git.txt:643
#, priority:100
msgid "This environment variable overrides `$PAGER`. If it is set to an empty string or to the value \"cat\", Git will not launch a pager.  See also the `core.pager` option in linkgit:git-config[1]."
msgstr "Essa variável de ambiente substitui o `$PAGER`. Caso esteja definido como uma string vazia ou com o valor \"cat\", o Git não iniciará um pager.  Consulte também a opção `core.askPass` no linkgit:git-config[1]."

#. type: Labeled list
#: en/git.txt:644
#, ignore-same, no-wrap, priority:100
msgid "`GIT_PROGRESS_DELAY`"
msgstr "`GIT_PROGRESS_DELAY`"

#. type: Plain text
#: en/git.txt:647
#, priority:100
msgid "A number controlling how many seconds to delay before showing optional progress indicators. Defaults to 2."
msgstr "Um número que controla quantos segundos atrasar antes de mostrar os indicadores opcionais do progresso. A predefinição retorna para `2`."

#. type: Labeled list
#: en/git.txt:648
#, ignore-same, no-wrap, priority:100
msgid "`GIT_EDITOR`"
msgstr "`GIT_EDITOR`"

#. type: Plain text
#: en/git.txt:653
#, priority:100
msgid "This environment variable overrides `$EDITOR` and `$VISUAL`.  It is used by several Git commands when, on interactive mode, an editor is to be launched. See also linkgit:git-var[1] and the `core.editor` option in linkgit:git-config[1]."
msgstr "Essa variável de ambiente substitui o `$EDITOR` e o `$VISUAL`.  É usado por vários comandos Git quando, no modo interativo, um editor deve ser iniciado. Consulte também linkgit:git-var[1] e a opção `core.editor` no linkgit:git-config[1]."

#. type: Labeled list
#: en/git.txt:654
#, ignore-same, no-wrap, priority:100
msgid "`GIT_SEQUENCE_EDITOR`"
msgstr "`GIT_SEQUENCE_EDITOR`"

#. type: Plain text
#: en/git.txt:659
#, priority:100
msgid "This environment variable overrides the configured Git editor when editing the todo list of an interactive rebase. See also linkgit:git-rebase[1] and the `sequence.editor` option in linkgit:git-config[1]."
msgstr "Esta variável de ambiente substitui a configuração do editor do Git ao editar a lista de tarefas de um rebase interativo. Consulte também o comando linkgit:git-rebase[1] e a opção `sequence.editor` em linkgit:git-config[1]."

#. type: Labeled list
#: en/git.txt:660
#, ignore-same, no-wrap, priority:100
msgid "`GIT_SSH`"
msgstr "`GIT_SSH`"

#. type: Labeled list
#: en/git.txt:661
#, ignore-same, no-wrap, priority:100
msgid "`GIT_SSH_COMMAND`"
msgstr "`GIT_SSH_COMMAND`"

#. type: Plain text
#: en/git.txt:668
#, priority:100
msgid "If either of these environment variables is set then 'git fetch' and 'git push' will use the specified command instead of 'ssh' when they need to connect to a remote system.  The command-line parameters passed to the configured command are determined by the ssh variant.  See `ssh.variant` option in linkgit:git-config[1] for details."
msgstr "Caso alguma destas variáveis de ambiente esteja definida, o comando 'git fetch' e o 'git push' utilizarão o comando informado em vez do 'ssh' quando precisarem se conectar com um sistema remoto.  Os parâmetros da linha de comando passados para o comando configurado, são determinados pela variante 'ssh'.  Para mais detalhesm consulte a opção de configuração `ssh.variant` no linkgit:git-config[1]."

#. type: Plain text
#: en/git.txt:674
#, priority:100
msgid "`$GIT_SSH_COMMAND` takes precedence over `$GIT_SSH`, and is interpreted by the shell, which allows additional arguments to be included.  `$GIT_SSH` on the other hand must be just the path to a program (which can be a wrapper shell script, if additional arguments are needed)."
msgstr "A variável `$GIT_SSH_COMMAND` tem precedência sobre a variável `$GIT_SSH` que é interpretado pelo shell, permite que argumentos adicionais sejam incluídos.  A variável `$GIT_SSH`, por outro lado, deve ser apenas o caminho para um programa (que pode ser um script shell do wrapper, caso as opções adicionais sejam necessárias)."

#. type: Plain text
#: en/git.txt:678
#, priority:100
msgid "Usually it is easier to configure any desired options through your personal `.ssh/config` file.  Please consult your ssh documentation for further details."
msgstr "Geralmente é mais fácil configurar as opções desejadas através do seu arquivo pessoal `.ssh/config`.  Consulte a documentação do ssh para obter mais detalhes."

#. type: Labeled list
#: en/git.txt:679
#, ignore-same, no-wrap, priority:100
msgid "`GIT_SSH_VARIANT`"
msgstr "`GIT_SSH_VARIANT`"

#. type: Plain text
#: en/git.txt:684
#, priority:100
msgid "If this environment variable is set, it overrides Git's autodetection whether `GIT_SSH`/`GIT_SSH_COMMAND`/`core.sshCommand` refer to OpenSSH, plink or tortoiseplink. This variable overrides the config setting `ssh.variant` that serves the same purpose."
msgstr "Se esta variável de ambiente estiver configurada, ela substitui a detecção automática do Git, caso `GIT_SSH`/`GIT_SSH_COMMAND`/`core.sshCommand` se refere ao OpenSSH, plink ou tortoiseplink. Esta variável substitui a configuração `ssh.variant` que serve ao mesmo propósito."

#. type: Labeled list
#: en/git.txt:685
#, ignore-same, no-wrap, priority:100
msgid "`GIT_ASKPASS`"
msgstr "`GIT_ASKPASS`"

#. type: Plain text
#: en/git.txt:691
#, priority:100
msgid "If this environment variable is set, then Git commands which need to acquire passwords or passphrases (e.g. for HTTP or IMAP authentication)  will call this program with a suitable prompt as command-line argument and read the password from its STDOUT. See also the `core.askPass` option in linkgit:git-config[1]."
msgstr "Caso esta variável do ambiente esteja definida, os comandos Git que precisam obter as senhas ou as frases secretas (para a autenticação HTTP ou IMAP por exemplo) chamarão esse programa com um prompt adequado como argumento da linha de comando e irão ler a senha em seu STDOUT. Consulte também a opção `core.askPass` no linkgit:git-config[1]."

#. type: Labeled list
#: en/git.txt:692
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TERMINAL_PROMPT`"
msgstr "`GIT_TERMINAL_PROMPT`"

#. type: Plain text
#: en/git.txt:695
#, priority:100
msgid "If this environment variable is set to `0`, git will not prompt on the terminal (e.g., when asking for HTTP authentication)."
msgstr "Caso esta variável de ambiente esteja definida como `0`, o git não será solicitado no terminal (ao solicitar uma autenticação HTTP por exemplo)."

#. type: Labeled list
#: en/git.txt:696
#, ignore-same, no-wrap, priority:100
msgid "`GIT_CONFIG_GLOBAL`"
msgstr "`GIT_CONFIG_GLOBAL`"

#. type: Labeled list
#: en/git.txt:697
#, ignore-same, no-wrap, priority:100
msgid "`GIT_CONFIG_SYSTEM`"
msgstr "`GIT_CONFIG_SYSTEM`"

#. type: Plain text
#: en/git.txt:705
#, priority:100
msgid "Take the configuration from the given files instead from global or system-level configuration files. If `GIT_CONFIG_SYSTEM` is set, the system config file defined at build time (usually `/etc/gitconfig`)  will not be read. Likewise, if `GIT_CONFIG_GLOBAL` is set, neither `$HOME/.gitconfig` nor `$XDG_CONFIG_HOME/git/config` will be read. Can be set to `/dev/null` to skip reading configuration files of the respective level."
msgstr "Obtenha a configuração dos arquivos fornecidos em vez dos arquivos de configuração globais ou no nível do sistema. Caso a variável `GIT_CONFIG_SYSTEM` estiver definida, o arquivo de configuração do sistema definido no momento da compilação (normalmente `/etc/gitconfig`) não será lido. Da mesma forma, caso a variável `GIT_CONFIG_GLOBAL` esteja definida, nem `$HOME/.gitconfig`, nem `$XDG_CONFIG_HOME/git/config` serão lidos. Pode ser definido como `/dev/null` para ignorar a leitura dos arquivos de configuração do respectivo nível."

#. type: Labeled list
#: en/git.txt:706
#, ignore-same, no-wrap, priority:100
msgid "`GIT_CONFIG_NOSYSTEM`"
msgstr "`GIT_CONFIG_NOSYSTEM`"

#. type: Plain text
#: en/git.txt:713
#, priority:100
msgid "Whether to skip reading settings from the system-wide `$(prefix)/etc/gitconfig` file.  This environment variable can be used along with `$HOME` and `$XDG_CONFIG_HOME` to create a predictable environment for a picky script, or you can set it temporarily to avoid using a buggy `/etc/gitconfig` file while waiting for someone with sufficient permissions to fix it."
msgstr "Independente se você ignore as configurações de leitura do arquivo `$(prefix)/etc/gitconfig` do sistema.  Essa variável de ambiente pode ser usada junto com `$HOME` e o `$XDG_CONFIG_HOME` para criar um ambiente previsível para um script exigente, ou você pode configurá-la temporariamente para evitar o uso de um arquivo `/etc/gitconfig` com problemas, enquanto aguarda alguém com permissões suficientes para corrigi-lo."

#. type: Labeled list
#: en/git.txt:714
#, ignore-same, no-wrap, priority:100
msgid "`GIT_FLUSH`"
msgstr "`GIT_FLUSH`"

#. type: Plain text
#: en/git.txt:724
#, no-wrap, priority:100
msgid ""
"If this environment variable is set to \"1\", then commands such\n"
"as 'git blame' (in incremental mode), 'git rev-list', 'git log',\n"
"'git check-attr' and 'git check-ignore' will\n"
"force a flush of the output stream after each record have been\n"
"flushed. If this\n"
"variable is set to \"0\", the output of these commands will be done\n"
"using completely buffered I/O.   If this environment variable is\n"
"not set, Git will choose buffered or record-oriented flushing\n"
"based on whether stdout appears to be redirected to a file or not.\n"
msgstr ""
"Caso esta variável de ambiente estiver definida como \"1\", então os comandos\n"
"como 'git blame' (no modo incremental), 'git rev-list', 'git log',\n"
"'git check-attr' e 'git check-ignore' serão\n"
"impor uma descarga do fluxo gerado depois que cada registro tenham sido\n"
"esvaziado. Se essa\n"
"variável for definida como '0', a saída destes comandos será feita\n"
"utilizando toda a E/S na memória intermédia (buffer).   Se essa variável de ambiente não\n"
"seja definida, o Git escolherá a descarga em uma memória intermédia ou orientada no\n"
"esvaziamento dos registros, para ver se o stdout parece ter sido redirecionado para um arquivo ou não.\n"

#. type: Labeled list
#: en/git.txt:725
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE`"
msgstr "`GIT_TRACE`"

#. type: Plain text
#: en/git.txt:728
#, priority:100
msgid "Enables general trace messages, e.g. alias expansion, built-in command execution and external command execution."
msgstr "Ativa o rastreio geral das mensagens, por exemplo expansão do pseudônimo, execução interna dos comandos e a execução externa dos comandos."

#. type: Plain text
#: en/git.txt:732 en/git.txt:812
#, priority:100
msgid "If this variable is set to \"1\", \"2\" or \"true\" (comparison is case insensitive), trace messages will be printed to stderr."
msgstr "Caso esta variável esteja definida como `1`, `2` ou `true` (a comparação não diferencia as maiúsculas das minúsculas), as mensagens de rastreio serão impressas no stderr."

#. type: Plain text
#: en/git.txt:737 en/git.txt:817
#, priority:100
msgid "If the variable is set to an integer value greater than 2 and lower than 10 (strictly) then Git will interpret this value as an open file descriptor and will try to write the trace messages into this file descriptor."
msgstr "Caso a variável seja configurada com um valor inteiro maior que 2 e menor que 10 (estritamente), o Git interpretará este valor como um descritor de arquivo aberto e tentará gravar as mensagens de monitoramento neste descritor do arquivo."

#. type: Plain text
#: en/git.txt:742
#, priority:100
msgid "Alternatively, if the variable is set to an absolute path (starting with a '/' character), Git will interpret this as a file path and will try to append the trace messages to it."
msgstr "Como alternativa, caso a variável estiver definida como um caminho absoluto (começando com um caractere '/'), o Git interpretará isso como um caminho do arquivo e tentará anexar as mensagens de rastreio nelas."

#. type: Plain text
#: en/git.txt:745 en/git.txt:834
#, priority:100
msgid "Unsetting the variable, or setting it to empty, \"0\" or \"false\" (case insensitive) disables trace messages."
msgstr "Desativar a variável ou defini-la como vazia '0' ou 'false' (não faz distinção entre maiúsculas e minúsculas) desativa as mensagens de monitoramento."

#. type: Labeled list
#: en/git.txt:746
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_FSMONITOR`"
msgstr "`GIT_TRACE_FSMONITOR`"

#. type: Plain text
#: en/git.txt:749
#, priority:100
msgid "Enables trace messages for the filesystem monitor extension.  See `GIT_TRACE` for available trace output options."
msgstr "Ativa as mensagens de rastreamento para a extensão do monitor do sistema de arquivos.  Consulte `GIT_TRACE` para conhecer opções de saída de rastreio disponíveis."

#. type: Labeled list
#: en/git.txt:750
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_PACK_ACCESS`"
msgstr "`GIT_TRACE_PACK_ACCESS`"

#. type: Plain text
#: en/git.txt:756
#, priority:100
msgid "Enables trace messages for all accesses to any packs. For each access, the pack file name and an offset in the pack is recorded. This may be helpful for troubleshooting some pack-related performance problems.  See `GIT_TRACE` for available trace output options."
msgstr "Permite rastrear as mensagens para todos os acessos para qualquer pacote. Para cada acesso, é registrado o nome do arquivo do pacote e um 'offset'. Pode ser útil para solucionar alguns problemas de desempenho relacionados ao pacote.  Consulte `GIT_TRACE` para conhecer opções de saída de rastreio disponíveis."

#. type: Labeled list
#: en/git.txt:757
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_PACKET`"
msgstr "`GIT_TRACE_PACKET`"

#. type: Plain text
#: en/git.txt:763
#, priority:100
msgid "Enables trace messages for all packets coming in or out of a given program. This can help with debugging object negotiation or other protocol issues. Tracing is turned off at a packet starting with \"PACK\" (but see `GIT_TRACE_PACKFILE` below).  See `GIT_TRACE` for available trace output options."
msgstr "Ativa o rastreio das mensagens para todos os pacotes que entram ou saem de um determinado programa. Isso pode ajudar na depuração da negociação dos objetos ou de outros problemas de protocolo. O rastreamento é desativado em um pacote que comece com \"PACK\" (porém consulte `GIT_TRACE_PACKFILE` abaixo).  Consulte `GIT_TRACE` para conhecer opções de saída de rastreio disponíveis."

#. type: Labeled list
#: en/git.txt:764
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_PACKFILE`"
msgstr "`GIT_TRACE_PACKFILE`"

#. type: Plain text
#: en/git.txt:771
#, priority:100
msgid "Enables tracing of packfiles sent or received by a given program. Unlike other trace output, this trace is verbatim: no headers, and no quoting of binary data. You almost certainly want to direct into a file (e.g., `GIT_TRACE_PACKFILE=/tmp/my.pack`) rather than displaying it on the terminal or mixing it with other trace output."
msgstr "Permite o monitoramento dos arquivos dos pacotes enviados ou recebidos através de um determinado programa. Diferente de outras saídas monitoradas, esse monitoramento é literalmente: sem cabeçalhos e sem a citação dos dados binários. Você quase que certamente vai querer direcionar para um arquivo (`GIT_TRACE_PACKFILE=/tmp/my.pack` por exemplo) em vez de exibi-lo no terminal ou misturá-lo com uma outra saída monitorada."

#. type: Plain text
#: en/git.txt:774
#, priority:100
msgid "Note that this is currently only implemented for the client side of clones and fetches."
msgstr "Observe que atualmente isso é implementado apenas para o lado do cliente dos clones e das buscas."

#. type: Labeled list
#: en/git.txt:775
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_PERFORMANCE`"
msgstr "`GIT_TRACE_PERFORMANCE`"

#. type: Plain text
#: en/git.txt:779
#, priority:100
msgid "Enables performance related trace messages, e.g. total execution time of each Git command.  See `GIT_TRACE` for available trace output options."
msgstr "Ativa as mensagens de rastreamento relacionadas ao desempenho, por exemplo, o tempo total da execução de cada comando Git.  Consulte `GIT_TRACE` para conhecer opções de saída de rastreio disponíveis."

#. type: Labeled list
#: en/git.txt:780
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_REFS`"
msgstr "`GIT_TRACE_REFS`"

#. type: Plain text
#: en/git.txt:783
#, priority:100
msgid "Enables trace messages for operations on the ref database.  See `GIT_TRACE` for available trace output options."
msgstr "Ativa as mensagens de rastreamento para a operação no banco de dados do ref.  Consulte `GIT_TRACE` para conhecer opções de saída de rastreio disponíveis."

#. type: Labeled list
#: en/git.txt:784
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_SETUP`"
msgstr "`GIT_TRACE_SETUP`"

#. type: Plain text
#: en/git.txt:788
#, priority:100
msgid "Enables trace messages printing the .git, working tree and current working directory after Git has completed its setup phase.  See `GIT_TRACE` for available trace output options."
msgstr "Permite que as mensagens de rastreamento imprimam o .git, a árvore de trabalho e o diretório de trabalho atual após o Git concluir a sua fase de configuração.  Consulte `GIT_TRACE` para conhecer opções de saída de rastreio disponíveis."

#. type: Labeled list
#: en/git.txt:789
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_SHALLOW`"
msgstr "`GIT_TRACE_SHALLOW`"

#. type: Plain text
#: en/git.txt:793
#, priority:100
msgid "Enables trace messages that can help debugging fetching / cloning of shallow repositories.  See `GIT_TRACE` for available trace output options."
msgstr "Ativa o rastreio das mensagens que podem ajudar na depuração da busca/clonagem dos repositórios rasos.  Consulte `GIT_TRACE` para conhecer opções de saída de rastreio disponíveis."

#. type: Labeled list
#: en/git.txt:794
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_CURL`"
msgstr "`GIT_TRACE_CURL`"

#. type: Plain text
#: en/git.txt:799
#, priority:100
msgid "Enables a curl full trace dump of all incoming and outgoing data, including descriptive information, of the git transport protocol.  This is similar to doing curl `--trace-ascii` on the command line.  See `GIT_TRACE` for available trace output options."
msgstr "Permite um rastreamento curl completo de todos os dados que foram recebidos e enviados, incluindo as informações descritivas, do protocolo de transporte git.  É semelhante a fazer curl `--trace-ascii` na linha de comando.  Consulte `GIT_TRACE` para conhecer as opções  disponíveis geradas pelo rastreio."

#. type: Labeled list
#: en/git.txt:800
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_CURL_NO_DATA`"
msgstr "`GIT_TRACE_CURL_NO_DATA`"

#. type: Plain text
#: en/git.txt:803
#, priority:100
msgid "When a curl trace is enabled (see `GIT_TRACE_CURL` above), do not dump data (that is, only dump info lines and headers)."
msgstr "Quando um rastreamento curl está ativado (consulte `GIT_TRACE_CURL` acima), não despeje os dados (ou seja, apenas despeje as linhas de informações e os cabeçalhos)."

#. type: Labeled list
#: en/git.txt:804
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE2`"
msgstr "`GIT_TRACE2`"

#. type: Plain text
#: en/git.txt:808
#, priority:100
msgid "Enables more detailed trace messages from the \"trace2\" library.  Output from `GIT_TRACE2` is a simple text-based format for human readability."
msgstr "Permite mensagens de rastreamento com mais detalhes través da biblioteca \"trace2\".  A saída do `GIT_TRACE2` é um formato simples de texto para facilitar a leitura das pessoas."

#. type: Plain text
#: en/git.txt:826
#, priority:100
msgid "Alternatively, if the variable is set to an absolute path (starting with a '/' character), Git will interpret this as a file path and will try to append the trace messages to it.  If the path already exists and is a directory, the trace messages will be written to files (one per process)  in that directory, named according to the last component of the SID and an optional counter (to avoid filename collisions)."
msgstr "Alternativamente, caso a variável esteja definida como um caminho absoluto (começando com um caractere '/'), Git interpretará isso como um caminho de arquivo e tentará anexar as mensagens de rastreamento a ela.  Caso o caminho já exista e for um diretório, as mensagens de rastreamento serão gravadas em arquivos (uma por processo) nesse diretório, nomeada de acordo com o último componente do SID e um contador opcional (para evitar colisões de nome de arquivo)."

#. type: Plain text
#: en/git.txt:831
#, priority:100
msgid "In addition, if the variable is set to `af_unix:[<socket_type>:]<absolute-pathname>`, Git will try to open the path as a Unix Domain Socket.  The socket type can be either `stream` or `dgram`."
msgstr "Além disso, caso a variável esteja definida como `af_unix:[<socket_type>:]<caminho-absoluto>`, o Git tentará abrir o caminho como um soquete de domínio Unix.  O tipo de soquete pode ser `stream` ou `dgram`."

#. type: Plain text
#: en/git.txt:837
#, priority:100
msgid "See link:technical/api-trace2.html[Trace2 documentation] for full details."
msgstr "Para mais detalhes, consulte link:technical/api-trace2.html[Trace2 documentation]."

#. type: Labeled list
#: en/git.txt:839
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE2_EVENT`"
msgstr "`GIT_TRACE2_EVENT`"

#. type: Plain text
#: en/git.txt:844
#, priority:100
msgid "This setting writes a JSON-based format that is suited for machine interpretation.  See `GIT_TRACE2` for available trace output options and link:technical/api-trace2.html[Trace2 documentation] for full details."
msgstr "Esta configuração registra um formato com base no JSON que é adequado para a interpretação da máquina.  Consulte `GIT_TRACE2` para conhecer as opções disponíveis para o monitoramento e o link:technical/api-trace2.html [documentação do Trace2] para obter todos os detalhes."

#. type: Labeled list
#: en/git.txt:845
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE2_PERF`"
msgstr "`GIT_TRACE2_PERF`"

#. type: Plain text
#: en/git.txt:851
#, priority:100
msgid "In addition to the text-based messages available in `GIT_TRACE2`, this setting writes a column-based format for understanding nesting regions.  See `GIT_TRACE2` for available trace output options and link:technical/api-trace2.html[Trace2 documentation] for full details."
msgstr "Além das mensagens texto disponíveis em `GIT_TRACE2`, esta configuração escreve o formato da base da coluna para compreender as regiões aninhadas.  Consulte `GIT_TRACE2` para conhecer as opções disponíveis para o monitoramento e o link:technical/api-trace2.html [documentação do Trace2] para obter todos os detalhes."

#. type: Labeled list
#: en/git.txt:852
#, ignore-same, no-wrap, priority:100
msgid "`GIT_TRACE_REDACT`"
msgstr "`GIT_TRACE_REDACT`"

#. type: Plain text
#: en/git.txt:857
#, priority:100
msgid "By default, when tracing is activated, Git redacts the values of cookies, the \"Authorization:\" header, the \"Proxy-Authorization:\" header and packfile URIs. Set this variable to `0` to prevent this redaction."
msgstr "É predefinido que quando o monitoramento seja ativado, o Git redita os valores dos cookies, o cabeçalho \"Autorização:\" o cabeçalho e o URI do arquivo do pacote \"Autorização do proxy:\". Defina esta variável como `0` para evitar esta redação."

#. type: Labeled list
#: en/git.txt:858
#, ignore-same, no-wrap, priority:100
msgid "`GIT_LITERAL_PATHSPECS`"
msgstr "`GIT_LITERAL_PATHSPECS`"

#. type: Plain text
#: en/git.txt:866
#, priority:100
msgid "Setting this variable to `1` will cause Git to treat all pathspecs literally, rather than as glob patterns. For example, running `GIT_LITERAL_PATHSPECS=1 git log -- '*.c'` will search for commits that touch the path `*.c`, not any paths that the glob `*.c` matches. You might want this if you are feeding literal paths to Git (e.g., paths previously given to you by `git ls-tree`, `--raw` diff output, etc)."
msgstr "Definir essa variável como `1` fará com que o Git trate todos os pathspecs de forma literal, e não como padrões glob. Como, por exemplo, a execução do `GIT_LITERAL_PATHSPECS=1 git log -- '*.c'` procurará pelos commits que tocam no caminho `*.c` e não nos caminhos que coincidem com o agrupamento `*.c`. Você pode querer isso caso esteja alimentando caminhos literais para o Git (por exemplo, os caminhos informados anteriormente a você pelo `git ls-tree`, `--raw`, saída do diff, etc)."

#. type: Labeled list
#: en/git.txt:867
#, ignore-same, no-wrap, priority:100
msgid "`GIT_GLOB_PATHSPECS`"
msgstr "`GIT_GLOB_PATHSPECS`"

#. type: Plain text
#: en/git.txt:870
#, priority:100
msgid "Setting this variable to `1` will cause Git to treat all pathspecs as glob patterns (aka \"glob\" magic)."
msgstr "Definir essa variável como `1` fará com que o Git trate todos os pathspecs como padrões \"glob\" (também informados como \"glob\" mágico)."

#. type: Labeled list
#: en/git.txt:871
#, ignore-same, no-wrap, priority:100
msgid "`GIT_NOGLOB_PATHSPECS`"
msgstr "`GIT_NOGLOB_PATHSPECS`"

#. type: Plain text
#: en/git.txt:874
#, priority:100
msgid "Setting this variable to `1` will cause Git to treat all pathspecs as literal (aka \"literal\" magic)."
msgstr "Definir essa variável como `1` fará com que o Git trate todos os pathspecs como literal (também informados como mágica \"literal\")."

#. type: Labeled list
#: en/git.txt:875
#, ignore-same, no-wrap, priority:100
msgid "`GIT_ICASE_PATHSPECS`"
msgstr "`GIT_ICASE_PATHSPECS`"

#. type: Plain text
#: en/git.txt:878
#, priority:100
msgid "Setting this variable to `1` will cause Git to treat all pathspecs as case-insensitive."
msgstr "Definir essa variável como `1` fará com que o Git trate todos os pathspecs como indiferente para maiúsculas e minúsculas."

#. type: Labeled list
#: en/git.txt:879
#, ignore-same, no-wrap, priority:100
msgid "`GIT_REFLOG_ACTION`"
msgstr "`GIT_REFLOG_ACTION`"

#. type: Plain text
#: en/git.txt:888
#, priority:100
msgid "When a ref is updated, reflog entries are created to keep track of the reason why the ref was updated (which is typically the name of the high-level command that updated the ref), in addition to the old and new values of the ref.  A scripted Porcelain command can use set_reflog_action helper function in `git-sh-setup` to set its name to this variable when it is invoked as the top level command by the end user, to be recorded in the body of the reflog."
msgstr "Quando uma \"ref\" é atualizada, são criadas as entradas do reflog para acompanhar a razão da \"ref\" ter sido atualizada (que geralmente é o nome do comando de alto nível que atualizou a \"ref\"), além dos valores antigos e novos da \"ref\".  Um comando Porcelana com script pode usar a função auxiliar 'set_reflog_action' no comando `git sh setup` para definir o seu nome para essa variável quando é invocado como o comando de alto nível pelo usuário final, que será registrado no corpo do reflog."

#. type: Labeled list
#: en/git.txt:889
#, ignore-same, no-wrap, priority:100
msgid "`GIT_REF_PARANOIA`"
msgstr "`GIT_REF_PARANOIA`"

#. type: Plain text
#: en/git.txt:900
#, priority:100
msgid "If set to `0`, ignore broken or badly named refs when iterating over lists of refs. Normally Git will try to include any such refs, which may cause some operations to fail. This is usually preferable, as potentially destructive operations (e.g., linkgit:git-prune[1]) are better off aborting rather than ignoring broken refs (and thus considering the history they point to as not worth saving). The default value is `1` (i.e., be paranoid about detecting and aborting all operations). You should not normally need to set this to `0`, but it may be useful when trying to salvage data from a corrupted repository."
msgstr "Caso seja definido como `0`, ignore os refs quebrados ou mal nomeados ao iterar sobre as listas dos refs. Normalmente o Git tentará incluir qualquer um desses refs, o que pode causar a falha de algumas operações. Isto normalmente é preferível, já que as operações potencialmente destrutivas (como linkgit:git-prune[1]) são melhores abortando em vez de ignorar os refs quebrados (e assim considerando o histórico que eles apontam como não valendo a pena salvar). O valor predefinido é `1` (ou seja, ser paranoico ao detectar e abortar todas as operações). Normalmente não é preciso definir isso como `0`, mas pode ser útil ao tentar salvar os dados de um repositório corrompido."

#. type: Labeled list
#: en/git.txt:901
#, ignore-same, no-wrap, priority:100
msgid "`GIT_ALLOW_PROTOCOL`"
msgstr "`GIT_ALLOW_PROTOCOL`"

#. type: Plain text
#: en/git.txt:907
#, fuzzy, priority:100
#| msgid "If set to a colon-separated list of protocols, behave as if `protocol.allow` is set to `never`, and each of the listed protocols has `protocol.<name>.allow` set to `always` (overriding any existing configuration). In other words, any protocol not mentioned will be disallowed (i.e., this is a whitelist, not a blacklist). See the description of `protocol.allow` in linkgit:git-config[1] for more details."
msgid "If set to a colon-separated list of protocols, behave as if `protocol.allow` is set to `never`, and each of the listed protocols has `protocol.<name>.allow` set to `always` (overriding any existing configuration). See the description of `protocol.allow` in linkgit:git-config[1] for more details."
msgstr "Caso seja definido como uma lista de protocolos separados por dois pontos, comporte-se como se a opção de configuração `protocol.allow` esteja definida como `never`, e cada um dos protocolos listados possua `protocol.<nome>.allow` definido como `always` (substituindo qualquer configuração já existente). Em outras palavras, qualquer protocolo não mencionado será proibido (ou seja, esta é uma lista de permissões e não uma lista negra). Consulte a descrição do `protocol.allow` no linkgit:git-config[1] para mais detalhes."

#. type: Labeled list
#: en/git.txt:908
#, ignore-same, no-wrap, priority:100
msgid "`GIT_PROTOCOL_FROM_USER`"
msgstr "`GIT_PROTOCOL_FROM_USER`"

#. type: Plain text
#: en/git.txt:914
#, priority:100
msgid "Set to 0 to prevent protocols used by fetch/push/clone which are configured to the `user` state.  This is useful to restrict recursive submodule initialization from an untrusted repository or for programs which feed potentially-untrusted URLS to git commands.  See linkgit:git-config[1] for more details."
msgstr "Defina como `0` para evitar que os protocolos utilizados por `fetch/push/clone` sejam configurados por `user`.  É útil para restringir a inicialização recursiva do submódulo de um repositório não confiável ou para programas que alimentam as URLS potencialmente não confiáveis aos comandos git.  Para mais detalhes consulte linkgit:git-config[1]."

#. type: Labeled list
#: en/git.txt:915 en/git-upload-pack.txt:53
#, ignore-same, no-wrap, priority:100
msgid "`GIT_PROTOCOL`"
msgstr "`GIT_PROTOCOL`"

#. type: Plain text
#: en/git.txt:920
#, priority:100
msgid "For internal use only.  Used in handshaking the wire protocol.  Contains a colon ':' separated list of keys with optional values 'key[=value]'.  Presence of unknown keys and values must be ignored."
msgstr "Apenas para utilização interna.  Used in handshaking the wire protocol.  Contains a colon ':' separated list of keys with optional values 'key[=value]'.  Presence of unknown keys and values must be ignored."

#. type: Plain text
#: en/git.txt:929
#, priority:100
msgid "Note that servers may need to be configured to allow this variable to pass over some transports. It will be propagated automatically when accessing local repositories (i.e., `file://` or a filesystem path), as well as over the `git://` protocol. For git-over-http, it should work automatically in most configurations, but see the discussion in linkgit:git-http-backend[1]. For git-over-ssh, the ssh server may need to be configured to allow clients to pass this variable (e.g., by using `AcceptEnv GIT_PROTOCOL` with OpenSSH)."
msgstr "Observe que os servidores podem precisar ser configurados para permitir que esta variável passe por alguns transportes. Ele será propagado automaticamente ao acessar os repositórios locais (ou seja, `file://` ou um caminho do sistema de arquivos), bem como sobre o protocolo `git://`. Para 'git-over-http', ele deve funcionar automaticamente na maioria das configurações, porém consulte linkgit:git-http-backend[1]. Para 'git-over-ssh', o servidor ssh pode precisar ser configurado para permitir que os clientes passem esta variável (por exemplo, usando `AcceptEnv GIT_PROTOCOL` com o OpenSSH)."

#. type: Plain text
#: en/git.txt:935
#, priority:100
msgid "This configuration is optional. If the variable is not propagated, then clients will fall back to the original \"v0\" protocol (but may miss out on some performance improvements or features). This variable currently only affects clones and fetches; it is not yet used for pushes (but may be in the future)."
msgstr "Esta configuração é opcional. Caso a variável não seja propagada, os clientes voltarão ao protocolo \"v0\" original (mas podem perder algumas melhorias de desempenho ou de recursos). Atualmente esta variável afeta apenas os clones e as buscas (fetch); ainda não é usado para envios \"push\" (mas pode ser no futuro)."

#. type: Labeled list
#: en/git.txt:936
#, ignore-same, no-wrap, priority:100
msgid "`GIT_OPTIONAL_LOCKS`"
msgstr "`GIT_OPTIONAL_LOCKS`"

#. type: Plain text
#: en/git.txt:943
#, priority:100
msgid "If set to `0`, Git will complete any requested operation without performing any optional sub-operations that require taking a lock.  For example, this will prevent `git status` from refreshing the index as a side effect. This is useful for processes running in the background which do not want to cause lock contention with other operations on the repository.  Defaults to `1`."
msgstr "Caso seja definido como 0, o Git concluirá qualquer operação solicitada sem executar outra operação opcional onde se exija um bloqueio.  Como um efeito colateral isso impedirá que o comando `git status` atualize o índice por exemplo. É útil para os processos que estão em execução no segundo plano que não queiram causar contenção do bloqueio com as outras operações no repositório.  A predefinição retorna para `1`."

#. type: Labeled list
#: en/git.txt:944
#, ignore-same, no-wrap, priority:100
msgid "`GIT_REDIRECT_STDIN`"
msgstr "`GIT_REDIRECT_STDIN`"

#. type: Labeled list
#: en/git.txt:945
#, ignore-same, no-wrap, priority:100
msgid "`GIT_REDIRECT_STDOUT`"
msgstr "`GIT_REDIRECT_STDOUT`"

#. type: Labeled list
#: en/git.txt:946
#, ignore-same, no-wrap, priority:100
msgid "`GIT_REDIRECT_STDERR`"
msgstr "`GIT_REDIRECT_STDERR`"

#. type: Plain text
#: en/git.txt:956
#, priority:100
msgid "Windows-only: allow redirecting the standard input/output/error handles to paths specified by the environment variables. This is particularly useful in multi-threaded applications where the canonical way to pass standard handles via `CreateProcess()` is not an option because it would require the handles to be marked inheritable (and consequently *every* spawned process would inherit them, possibly blocking regular Git operations). The primary intended use case is to use named pipes for communication (e.g. `\\\\.\\pipe\\my-git-stdin-123`)."
msgstr "Apenas no Windows: permite redirecionar os identificadores predefinidos de 'input/output/error' para os caminhos definidos através das variáveis do ambiente. Em particular isso é útil nos aplicativos \"multi-threaded\" onde a maneira canônica de encaminhar os identificadores predefinidos através do `CreateProcess()` não seja uma opção pois exigiria que os identificadores fossem marcados como herdáveis (e consequentemente *todo* processo gerado os herdaria, possivelmente fazendo o bloqueio das operações do Git). A intenção primária de utilização é utilizar os pipes informados para comunicação (`\\\\.\\pipe\\my-git-stdin-123` por exemplo)."

#. type: Plain text
#: en/git.txt:961
#, priority:100
msgid "Two special values are supported: `off` will simply close the corresponding standard handle, and if `GIT_REDIRECT_STDERR` is `2>&1`, standard error will be redirected to the same handle as standard output."
msgstr "Dois valores especiais são compatíveis: `off` simplesmente fechará o identificador predefinido correspondente e caso `GIT_REDIRECT_STDERR` seja `2> & 1`, a predefinição do erro será redirecionado para o mesmo identificador na saída padrão."

#. type: Labeled list
#: en/git.txt:962
#, no-wrap, priority:100
msgid "`GIT_PRINT_SHA1_ELLIPSIS` (deprecated)"
msgstr "`GIT_PRINT_SHA1_ELLIPSIS` (descontinuado)"

#. type: Plain text
#: en/git.txt:970
#, priority:100
msgid "If set to `yes`, print an ellipsis following an (abbreviated) SHA-1 value.  This affects indications of detached HEADs (linkgit:git-checkout[1]) and the raw diff output (linkgit:git-diff[1]).  Printing an ellipsis in the cases mentioned is no longer considered adequate and support for it is likely to be removed in the foreseeable future (along with the variable)."
msgstr "Caso seja definido como `yes`, imprima uma elipse seguido de um valor (abreviado) SHA-1.  Isso afeta as indicações dos HEADs desanexados (linkgit:git-checkout[1]) e a saída diff bruta (linkgit:git-diff[1]).  A impressão de uma elipse nos casos mencionados não é mais considerada adequada e é provável que a compatibilidade seja removida em um futuro próximo (junto com a variável)."

#. type: Title -
#: en/git.txt:972
#, no-wrap, priority:100
msgid "Discussion[[Discussion]]"
msgstr "Discussão[[Discussão]]"

#. type: Plain text
#: en/git.txt:977
#, priority:100
msgid "More detail on the following is available from the link:user-manual.html#git-concepts[Git concepts chapter of the user-manual] and linkgit:gitcore-tutorial[7]."
msgstr "Mais detalhes estão disponíveis no link:user-manual.html#git-concepts[capítulo dos conceitos do Git no manual do usuário] e linkgit:gitcore-tutorial[7]."

#. type: Plain text
#: en/git.txt:984
#, priority:100
msgid "A Git project normally consists of a working directory with a \".git\" subdirectory at the top level.  The .git directory contains, among other things, a compressed object database representing the complete history of the project, an \"index\" file which links that history to the current contents of the working tree, and named pointers into that history such as tags and branch heads."
msgstr "Um projeto Git normalmente consiste em um diretório de trabalho com um subdiretório \".git\" no ponto mais alto.  O diretório .git contém, entre outras coisas, um banco de dados dos objetos compactados representando o histórico completo do projeto, um arquivo para o \"índice\" que vincula este histórico ao conteúdo atual da árvore de trabalho e informa os ponteiros para este histórico, como as tags e os cabeçalhos do ramo."

#. type: Plain text
#: en/git.txt:989
#, priority:100
msgid "The object database contains objects of three main types: blobs, which hold file data; trees, which point to blobs and other trees to build up directory hierarchies; and commits, which each reference a single tree and some number of parent commits."
msgstr "O banco de dados do objeto contém os objetos dos tipos da árvore principal: bolhas, que contêm os dados do arquivo; árvores, que apontam para as bolhas e as outras árvores para criar as hierarquias do diretório; e os commits, cada qual faz referência a uma única árvore e algum número do commit do pai."

#. type: Plain text
#: en/git.txt:994
#, priority:100
msgid "The commit, equivalent to what other systems call a \"changeset\" or \"version\", represents a step in the project's history, and each parent represents an immediately preceding step.  Commits with more than one parent represent merges of independent lines of development."
msgstr "O commit, equivalente ao que os outros sistemas chamam do \"conjunto de alterações\" ou \"versão\", representa uma etapa no histórico do projeto e cada pai representa uma etapa anterior.  Os commits com mais de um pai representam as mesclagens das linhas independentes do desenvolvimento."

#. type: Plain text
#: en/git.txt:1000
#, priority:100
msgid "All objects are named by the SHA-1 hash of their contents, normally written as a string of 40 hex digits.  Such names are globally unique.  The entire history leading up to a commit can be vouched for by signing just that commit.  A fourth object type, the tag, is provided for this purpose."
msgstr "Todos os objetos são nomeados pelo hash SHA-1 do seu conteúdo, normalmente gravados como uma sequência com 40 dígitos hexadecimais.  Tais nomes são globalmente únicos.  Todo o histórico que antecede a um commit pode ser comprovado assinando apenas este commit.  Um quarto tipo de objeto, a tag, é fornecida para esta finalidade."

#. type: Plain text
#: en/git.txt:1003
#, priority:100
msgid "When first created, objects are stored in individual files, but for efficiency may later be compressed together into \"pack files\"."
msgstr "Quando criados pela primeira vez, os objetos são armazenados em arquivos individuais, porém, visando uma maior eficiência, podem ser compactados posteriormente em \"pacotes de arquivos\"."

#. type: Plain text
#: en/git.txt:1010
#, priority:100
msgid "Named pointers called refs mark interesting points in history.  A ref may contain the SHA-1 name of an object or the name of another ref.  Refs with names beginning `ref/head/` contain the SHA-1 name of the most recent commit (or \"head\") of a branch under development.  SHA-1 names of tags of interest are stored under `ref/tags/`.  A special ref named `HEAD` contains the name of the currently checked-out branch."
msgstr "Os Ponteiros informados chamados refs marcam os pontos interessantes na história.  Uma \"ref\" pode conter o nome SHA-1 de um objeto ou o nome de outra referência.  As referências com nomes que comecem com `ref/head/` contêm o nome SHA-1 do commit (ou \"head\") mais recente de um ramo em desenvolvimento.  Os nomes SHA-1 das tags de interesse são armazenados em `ref/tags/`.  Uma referência especial chamada `HEAD` contém o nome da ramificação com a averiguação do momento."

#. type: Plain text
#: en/git.txt:1019
#, priority:100
msgid "The index file is initialized with a list of all paths and, for each path, a blob object and a set of attributes.  The blob object represents the contents of the file as of the head of the current branch.  The attributes (last modified time, size, etc.) are taken from the corresponding file in the working tree.  Subsequent changes to the working tree can be found by comparing these attributes.  The index may be updated with new content, and new commits may be created from the content stored in the index."
msgstr "O arquivo do índice é inicializado com uma lista de todos os caminhos e para cada caminho, um objeto bolha e um conjunto de atributos.  O objeto bolha representa o conteúdo do arquivo no cabeçalho do ramo atual.  Os atributos (hora da última alteração, tamanho, etc.) são obtidos do arquivo correspondente na árvore de trabalho.  As alterações subsequentes na árvore de trabalho podem ser encontradas comparando estes atributos.  O índice pode ser atualizado com um novo conteúdo e os novos commits podem ser criadas a partir do conteúdo armazenado no índice."

#. type: Plain text
#: en/git.txt:1023
#, priority:100
msgid "The index is also capable of storing multiple entries (called \"stages\")  for a given pathname.  These stages are used to hold the various unmerged version of a file when a merge is in progress."
msgstr "O índice também é capaz de armazenar as várias entradas (chamadas de \"estágios\") para um determinado nome do caminho.  Esses estágios são utilizados para manter as várias versões não mescladas de um arquivo quando uma mesclagem está em andamento."

#. type: Title -
#: en/git.txt:1025
#, no-wrap, priority:100
msgid "FURTHER DOCUMENTATION"
msgstr "DOCUMENTAÇÃO ADICIONAL"

#. type: Plain text
#: en/git.txt:1030
#, priority:100
msgid "See the references in the \"description\" section to get started using Git.  The following is probably more detail than necessary for a first-time user."
msgstr "Consulte as referências na seção \"descrição\" para começar a utilizar o Git.  O seguinte tem provavelmente bem mais detalhes do que o necessário para um usuário iniciante."

#. type: Plain text
#: en/git.txt:1034
#, priority:100
msgid "The link:user-manual.html#git-concepts[Git concepts chapter of the user-manual] and linkgit:gitcore-tutorial[7] both provide introductions to the underlying Git architecture."
msgstr "O link:user-manual.html#git-concepts[capítulo de conceitos do Git do manual do usuário] e o linkgit:gitcore-tutorial[7] fornecem introduções à arquitetura subjacente do Git."

#. type: Plain text
#: en/git.txt:1036
#, priority:100
msgid "See linkgit:gitworkflows[7] for an overview of recommended workflows."
msgstr "Para obter uma visão geral das recomendações do fluxo de trabalho, consulte linkgit:gitworkflows[7]."

#. type: Plain text
#: en/git.txt:1039
#, priority:100
msgid "See also the link:howto-index.html[howto] documents for some useful examples."
msgstr "Para mais alguns exemplos úteis, consulte também o documento link:howto-index.html[howto]."

#. type: Plain text
#: en/git.txt:1042
#, priority:100
msgid "The internals are documented in the link:technical/api-index.html[Git API documentation]."
msgstr "As entranhas estão documentadas no link:technical/api-index.html[Documentação da API do Git]."

#. type: Plain text
#: en/git.txt:1045
#, priority:100
msgid "Users migrating from CVS may also want to read linkgit:gitcvs-migration[7]."
msgstr "Os usuários que estiverem migrando do CVS também podem querer ler linkgit:gitcvs-migration[7]."

#. type: Title -
#: en/git.txt:1048
#, no-wrap, priority:100
msgid "Authors"
msgstr "Autores"

#. type: Plain text
#: en/git.txt:1053
#, priority:100
msgid "Git was started by Linus Torvalds, and is currently maintained by Junio C Hamano. Numerous contributions have come from the Git mailing list <git@vger.kernel.org>.  http://www.openhub.net/p/git/contributors/summary gives you a more complete list of contributors."
msgstr "O Git foi iniciado por Linus Torvalds e atualmente é mantido por Junio C Hamano. Várias contribuições vieram da lista de discussão do Git <git@vger.kernel.org>.  O http://www.openhub.net/p/git/contributors/summary fornece uma lista mais completa de todos os colaboradores."

#. type: Plain text
#: en/git.txt:1057
#, priority:100
msgid "If you have a clone of git.git itself, the output of linkgit:git-shortlog[1] and linkgit:git-blame[1] can show you the authors for specific parts of the project."
msgstr "Caso tenha um clone do 'git.git', a saída do linkgit:git-shortlog[1] e do linkgit:git-blame[1] pode exibir os autores para as partes específicas do projeto."

#. type: Title -
#: en/git.txt:1059
#, no-wrap, priority:100
msgid "Reporting Bugs"
msgstr "Reportando um Erro"

#. type: Plain text
#: en/git.txt:1066
#, priority:100
msgid "Report bugs to the Git mailing list <git@vger.kernel.org> where the development and maintenance is primarily done.  You do not have to be subscribed to the list to send a message there.  See the list archive at https://lore.kernel.org/git for previous bug reports and other discussions."
msgstr "Relate os erros na lista de discussão do Git <git@vger.kernel.org> onde o desenvolvimento e as principais manutenções são realizadas.  Você não precisa se inscrever na lista para enviar uma mensagem para lá.  Para os relatórios dos erros anteriores e outras discussões, consulte o arquivo da lista de discussão em https://lore.kernel.org/git."

#. type: Plain text
#: en/git.txt:1069
#, priority:100
msgid "Issues which are security relevant should be disclosed privately to the Git Security mailing list <git-security@googlegroups.com>."
msgstr "Os problemas relevantes para a segurança devem ser divulgadas em particular na mailing list do Git Security <git-security@googlegroups.com>."

#. type: Plain text
#: en/git.txt:1077
#, priority:100
msgid "linkgit:gittutorial[7], linkgit:gittutorial-2[7], linkgit:giteveryday[7], linkgit:gitcvs-migration[7], linkgit:gitglossary[7], linkgit:gitcore-tutorial[7], linkgit:gitcli[7], link:user-manual.html[The Git User's Manual], linkgit:gitworkflows[7]"
msgstr "linkgit:gittutorial[7], linkgit:gittutorial-2[7], linkgit:giteveryday[7], linkgit:gitcvs-migration[7], linkgit:gitglossary[7], linkgit:gitcore-tutorial[7], linkgit:gitcli[7], link:user-manual.html[O Manual do Usuário do Git], linkgit:gitworkflows[7]"

#. type: Title =
#: en/git-unpack-file.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-unpack-file(1)"
msgstr "git-unpack-file(1)"

#. type: Plain text
#: en/git-unpack-file.txt:7
#, priority:90
msgid "git-unpack-file - Creates a temporary file with a blob's contents"
msgstr "git-unpack-file - Cria um arquivo temporário com o conteúdo de uma bolha"

#. type: Plain text
#: en/git-unpack-file.txt:14
#, no-wrap, priority:90
msgid "'git unpack-file' <blob>\n"
msgstr "'git unpack-file' <bolha>\n"

#. type: Plain text
#: en/git-unpack-file.txt:20
#, no-wrap, priority:90
msgid ""
"Creates a file holding the contents of the blob specified by sha1. It\n"
"returns the name of the temporary file in the following format:\n"
"\t.merge_file_XXXXX\n"
msgstr ""
"Cria um arquivo que contenha o conteúdo da bolha definida através do sha1. isto\n"
"retorna o nome do arquivo temporário com o seguinte formato:\n"
"\t.merge_file_XXXXX\n"

#. type: Plain text
#: en/git-unpack-file.txt:25
#, priority:90
msgid "Must be a blob id"
msgstr "Deve ser um ID da bolha"

#. type: Title =
#: en/git-unpack-objects.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-unpack-objects(1)"
msgstr "git-unpack-objects(1)"

#. type: Plain text
#: en/git-unpack-objects.txt:7
#, priority:90
msgid "git-unpack-objects - Unpack objects from a packed archive"
msgstr "git-unpack-objects - Descompacte os objetos de um arquivo compactado"

#. type: Plain text
#: en/git-unpack-objects.txt:13
#, no-wrap, priority:90
msgid "'git unpack-objects' [-n] [-q] [-r] [--strict]\n"
msgstr "'git unpack-objects' [-n] [-q] [-r] [--strict]\n"

#. type: Plain text
#: en/git-unpack-objects.txt:20
#, priority:90
msgid "Read a packed archive (.pack) from the standard input, expanding the objects contained within and writing them into the repository in \"loose\" (one object per file) format."
msgstr "Leia um arquivo compactado (.pack) na entrada predefinido, expandindo os objetos armazenados e gravando-os no repositório no formato \"loose\" (um objeto por arquivo)."

#. type: Plain text
#: en/git-unpack-objects.txt:24
#, priority:90
msgid "Objects that already exist in the repository will *not* be unpacked from the packfile.  Therefore, nothing will be unpacked if you use this command on a packfile that exists within the target repository."
msgstr "Os objetos que já existam no repositório *não* serão descompactados do pacote de arquivos.  Portanto, nada será descompactado caso use este comando em um pacote de arquivo existente no repositório do destino."

#. type: Plain text
#: en/git-unpack-objects.txt:27
#, priority:90
msgid "See linkgit:git-repack[1] for options to generate new packs and replace existing ones."
msgstr "Para as opções de geração de novos pacotes e reposição dos existentes, consulte linkgit:git-repack[1]."

#. type: Plain text
#: en/git-unpack-objects.txt:33
#, priority:90
msgid "Dry run.  Check the pack file without actually unpacking the objects."
msgstr "Ensaio.  Verifique o arquivo do pacote sem de fato descompactar os objetos."

#. type: Plain text
#: en/git-unpack-objects.txt:37
#, priority:90
msgid "The command usually shows percentage progress.  This flag suppresses it."
msgstr "O comando geralmente exibe o progresso percentual.  Esta opção a suprime."

#. type: Plain text
#: en/git-unpack-objects.txt:43
#, priority:90
msgid "When unpacking a corrupt packfile, the command dies at the first corruption.  This flag tells it to keep going and make the best effort to recover as many objects as possible."
msgstr "Ao descompactar um pacote corrompido, o comando termina na primeira corrupção.  Esta opção indica para continuar e fazer o melhor esforço para recuperar a maior quantidade possível de objetos."

#. type: Plain text
#: en/git-unpack-objects.txt:46
#, priority:90
msgid "Don't write objects with broken content or links."
msgstr "Não escreva os objetos com conteúdo ou links corrompidos."

#. type: Title =
#: en/git-update-index.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-update-index(1)"
msgstr "git-update-index(1)"

#. type: Plain text
#: en/git-update-index.txt:7
#, priority:80
msgid "git-update-index - Register file contents in the working tree to the index"
msgstr "git-update-index - Registra o conteúdo do arquivo no índice da árvore de trabalho"

#. type: Plain text
#: en/git-update-index.txt:30
#, ignore-ellipsis, no-wrap, priority:80
msgid ""
"'git update-index'\n"
"\t     [--add] [--remove | --force-remove] [--replace]\n"
"\t     [--refresh] [-q] [--unmerged] [--ignore-missing]\n"
"\t     [(--cacheinfo <mode>,<object>,<file>)...]\n"
"\t     [--chmod=(+|-)x]\n"
"\t     [--[no-]assume-unchanged]\n"
"\t     [--[no-]skip-worktree]\n"
"\t     [--[no-]ignore-skip-worktree-entries]\n"
"\t     [--[no-]fsmonitor-valid]\n"
"\t     [--ignore-submodules]\n"
"\t     [--[no-]split-index]\n"
"\t     [--[no-|test-|force-]untracked-cache]\n"
"\t     [--[no-]fsmonitor]\n"
"\t     [--really-refresh] [--unresolve] [--again | -g]\n"
"\t     [--info-only] [--index-info]\n"
"\t     [-z] [--stdin] [--index-version <n>]\n"
"\t     [--verbose]\n"
"\t     [--] [<file>...]\n"
msgstr ""
"'git update-index'\n"
"\t     [--add] [--remove | --force-remove] [--replace]\n"
"\t     [--refresh] [-q] [--unmerged] [--ignore-missing]\n"
"\t     [(--cacheinfo <modo>,<objeto>,<arquivo>)...]\n"
"\t     [--chmod=(+|-)x]\n"
"\t     [--[no-]assume-unchanged]\n"
"\t     [--[no-]skip-worktree]\n"
"\t     [--[no-]ignore-skip-worktree-entries]\n"
"\t     [--[no-]fsmonitor-valid]\n"
"\t     [--ignore-submodules]\n"
"\t     [--[no-]split-index]\n"
"\t     [--[no-|test-|force-]untracked-cache]\n"
"\t     [--[no-]fsmonitor]\n"
"\t     [--really-refresh] [--unresolve] [--again | -g]\n"
"\t     [--info-only] [--index-info]\n"
"\t     [-z] [--stdin] [--index-version <n>]\n"
"\t     [--verbose]\n"
"\t     [--] [<arquivo>...]\n"

#. type: Plain text
#: en/git-update-index.txt:35
#, priority:80
msgid "Modifies the index. Each file mentioned is updated into the index and any 'unmerged' or 'needs updating' state is cleared."
msgstr "Modifica o índice. Cada arquivo mencionado é atualizado no índice e em qualquer estado 'não mesclado' ou que 'precise ser atualizado' será limpo."

#. type: Plain text
#: en/git-update-index.txt:38
#, priority:80
msgid "See also linkgit:git-add[1] for a more user-friendly way to do some of the most common operations on the index."
msgstr "Consulte também linkgit:git-add[1] para conhecer uma maneira mais amigável ao usuário de executar algumas das operações mais comuns no índice."

#. type: Plain text
#: en/git-update-index.txt:41
#, priority:80
msgid "The way 'git update-index' handles files it is told about can be modified using the various options:"
msgstr "A maneira como o 'git update index' trata os arquivos mencionados pode ser alterada utilizando as várias opções:"

#. type: Plain text
#: en/git-update-index.txt:48
#, priority:80
msgid "If a specified file isn't in the index already then it's added.  Default behaviour is to ignore new files."
msgstr "Caso um arquivo que foi especificado ainda não esteja no índice, este será adicionado.  O comportamento predefinido é ignorar os novos arquivos."

#. type: Labeled list
#: en/git-update-index.txt:49
#, ignore-same, no-wrap, priority:80
msgid "--remove"
msgstr "--remove"

#. type: Plain text
#: en/git-update-index.txt:53
#, priority:80
msgid "If a specified file is in the index but is missing then it's removed.  Default behavior is to ignore removed file."
msgstr "Caso um arquivo especificado estiver no índice, porém esteja ausente, este será removido.  O comportamento predefinido é ignorar o arquivo que foi removido."

#. type: Plain text
#: en/git-update-index.txt:57
#, priority:80
msgid "Looks at the current index and checks to see if merges or updates are needed by checking stat() information."
msgstr "Examina o índice atual e verifica se as mesclagens são necessárias ou atualizações, verificando as informações do stat()."

#. type: Plain text
#: en/git-update-index.txt:62
#, priority:80
msgid "Quiet.  If --refresh finds that the index needs an update, the default behavior is to error out.  This option makes 'git update-index' continue anyway."
msgstr "Silêncio.  Caso a opção `--refresh` descobra que o índice precisa de uma atualização, o comportamento padrão é gerar um erro.  Esta opção faz com que o comando 'git update-index' continue mesmo assim."

#. type: Labeled list
#: en/git-update-index.txt:63
#, ignore-same, no-wrap, priority:80
msgid "--ignore-submodules"
msgstr "--ignore-submodules"

#. type: Plain text
#: en/git-update-index.txt:66
#, priority:80
msgid "Do not try to update submodules.  This option is only respected when passed before --refresh."
msgstr "Não tente atualizar os submódulos.  Esta opção é respeitada apenas quando encaminhada antes da opção `--refresh`."

#. type: Plain text
#: en/git-update-index.txt:71
#, priority:80
msgid "If --refresh finds unmerged changes in the index, the default behavior is to error out.  This option makes 'git update-index' continue anyway."
msgstr "Caso a opção `--refresh` descubra alterações não mescladas no índice, o comportamento padrão é gerar um erro.  Esta opção faz com que o comando 'git update-index' continue mesmo assim."

#. type: Plain text
#: en/git-update-index.txt:74
#, priority:80
msgid "Ignores missing files during a --refresh"
msgstr "Ignora os arquivos ausentes durante um `--refresh`"

#. type: Labeled list
#: en/git-update-index.txt:75
#, no-wrap, priority:80
msgid "--cacheinfo <mode>,<object>,<path>"
msgstr "--cacheinfo <modo>,<objeto>,<caminho>"

#. type: Labeled list
#: en/git-update-index.txt:76
#, no-wrap, priority:80
msgid "--cacheinfo <mode> <object> <path>"
msgstr "--cacheinfo <modo> <objeto> <caminho>"

#. type: Plain text
#: en/git-update-index.txt:81
#, priority:80
msgid "Directly insert the specified info into the index.  For backward compatibility, you can also give these three arguments as three separate parameters, but new users are encouraged to use a single-parameter form."
msgstr "Insira diretamente as informações definidas no índice.  Por questões de compatibilidade com as versões anteriores, também é possível utilizar estes três argumentos como três parâmetros separados, porém os novos usuários são incentivados a utilizar um formulário com um único parâmetro."

#. type: Labeled list
#: en/git-update-index.txt:82
#, ignore-same, no-wrap, priority:80
msgid "--index-info"
msgstr "--index-info"

#. type: Plain text
#: en/git-update-index.txt:84
#, priority:80
msgid "Read index information from stdin."
msgstr "Leia a informação do índice a partir do stdin."

#. type: Plain text
#: en/git-update-index.txt:87
#, priority:80
msgid "Set the execute permissions on the updated files."
msgstr "Defina as permissões de execução nos arquivos atualizados."

#. type: Labeled list
#: en/git-update-index.txt:88
#, ignore-same, no-wrap, priority:80
msgid "--[no-]assume-unchanged"
msgstr "--[no-]assume-unchanged"

#. type: Plain text
#: en/git-update-index.txt:100
#, priority:80
msgid "When this flag is specified, the object names recorded for the paths are not updated.  Instead, this option sets/unsets the \"assume unchanged\" bit for the paths.  When the \"assume unchanged\" bit is on, the user promises not to change the file and allows Git to assume that the working tree file matches what is recorded in the index.  If you want to change the working tree file, you need to unset the bit to tell Git.  This is sometimes helpful when working with a big project on a filesystem that has very slow lstat(2) system call (e.g. cifs)."
msgstr "Quando está opção é definida, os nomes dos objetos registrados para os caminhos não são atualizados.  Em vez disso, esta opção define/desativa o bit \"assuma como inalterado\" nos caminhos.  Quando o bit \"assuma como inalterado\" está ativado, o usuário promete não alterar o arquivo e permite que o Git assuma que o arquivo da árvore de trabalho coincida ao que está registrado no índice.  Caso queira alterar o arquivo da árvore de trabalho, informe ao Git desativando o bit.  Às vezes, isso é útil quando trabalhar com um grande projeto em um sistema de arquivos que possua uma chamada do sistema lstat(2) muito lenta (por exemplo, cifs)."

#. type: Plain text
#: en/git-update-index.txt:105
#, priority:80
msgid "Git will fail (gracefully) in case it needs to modify this file in the index e.g. when merging in a commit; thus, in case the assumed-untracked file is changed upstream, you will need to handle the situation manually."
msgstr "O Git falhará (de forma elegante) caso precise modificar este arquivo no índice, quando for mesclar em um commit por exemplo; portanto, caso o arquivo assumido não monitorado seja alterado na upstream, você precisará lidar com a situação de forma manual."

#. type: Labeled list
#: en/git-update-index.txt:106
#, ignore-same, no-wrap, priority:80
msgid "--really-refresh"
msgstr "--really-refresh"

#. type: Plain text
#: en/git-update-index.txt:109
#, priority:80
msgid "Like `--refresh`, but checks stat information unconditionally, without regard to the \"assume unchanged\" setting."
msgstr "Como a opção `--refresh`, porém verifica as informações das estatísticas incondicionalmente, sem considerar a configuração \"assuma como inalterado\"."

#. type: Labeled list
#: en/git-update-index.txt:110
#, ignore-same, no-wrap, priority:80
msgid "--[no-]skip-worktree"
msgstr "--[no-]skip-worktree"

#. type: Plain text
#: en/git-update-index.txt:115
#, priority:80
msgid "When one of these flags is specified, the object name recorded for the paths are not updated. Instead, these options set and unset the \"skip-worktree\" bit for the paths. See section \"Skip-worktree bit\" below for more information."
msgstr "Quando uma destas opções é utilizada, o nome do objeto registrado para os caminhos não é atualizado. Em vez disso, estas opções definem e desabilitam o bit \"skip-worktree\" (ignore a árvore de trabalho) dos caminhos. Para mais informações, consulte a seção \"Skip-worktree bit\" abaixo."

#. type: Labeled list
#: en/git-update-index.txt:117
#, ignore-same, no-wrap, priority:80
msgid "--[no-]ignore-skip-worktree-entries"
msgstr "--[no-]ignore-skip-worktree-entries"

#. type: Plain text
#: en/git-update-index.txt:120
#, priority:80
msgid "Do not remove skip-worktree (AKA \"index-only\") entries even when the `--remove` option was specified."
msgstr "Não remova o 'skip-worktree' (também informado como \"index-only\"), mesmo quando a opção `--remove` for utilizada."

#. type: Labeled list
#: en/git-update-index.txt:121
#, ignore-same, no-wrap, priority:80
msgid "--[no-]fsmonitor-valid"
msgstr "--[no-]fsmonitor-valid"

#. type: Plain text
#: en/git-update-index.txt:126
#, priority:80
msgid "When one of these flags is specified, the object name recorded for the paths are not updated. Instead, these options set and unset the \"fsmonitor valid\" bit for the paths. See section \"File System Monitor\" below for more information."
msgstr "Quando uma destas opções é utilizada, o nome do objeto registrado para os caminhos não é atualizado. Em vez disso, essas opções definem e desabilitam o bit \"fsmonitor valid\" (fsmonitor válido) para os caminhos. Para mais informações, consulte a seção \"Monitor do Sistema de Arquivos\" abaixo."

#. type: Labeled list
#: en/git-update-index.txt:128
#, ignore-same, no-wrap, priority:80
msgid "--again"
msgstr "--again"

#. type: Plain text
#: en/git-update-index.txt:131
#, priority:80
msgid "Runs 'git update-index' itself on the paths whose index entries are different from those from the `HEAD` commit."
msgstr "Executa o próprio comando 'git update index' nos caminhos cujas entradas do índice sejam diferentes daquelas do commit `HEAD`."

#. type: Labeled list
#: en/git-update-index.txt:132
#, ignore-same, no-wrap, priority:80
msgid "--unresolve"
msgstr "--unresolve"

#. type: Plain text
#: en/git-update-index.txt:135
#, priority:80
msgid "Restores the 'unmerged' or 'needs updating' state of a file during a merge if it was cleared by accident."
msgstr "Restaura a condição 'unmerged' (não mesclado) ou 'needs updating' (precisa ser atualizado) de um arquivo, durante uma mesclagem caso ele tenha sudo eliminado por engano."

#. type: Labeled list
#: en/git-update-index.txt:136
#, ignore-same, no-wrap, priority:80
msgid "--info-only"
msgstr "--info-only"

#. type: Plain text
#: en/git-update-index.txt:140
#, priority:80
msgid "Do not create objects in the object database for all <file> arguments that follow this flag; just insert their object IDs into the index."
msgstr "Não crie os objetos no banco de dados dos objetos para todos os argumentos <arquivo> que seguem esta opção; basta inserir os seus IDs do objeto no índice."

#. type: Labeled list
#: en/git-update-index.txt:141
#, ignore-same, no-wrap, priority:80
msgid "--force-remove"
msgstr "--force-remove"

#. type: Plain text
#: en/git-update-index.txt:144
#, priority:80
msgid "Remove the file from the index even when the working directory still has such a file. (Implies --remove.)"
msgstr "Remova o arquivo do índice, mesmo quando o diretório ativo ainda tenha tal arquivo. (Implica no uso da opção `--remove`.)"

#. type: Labeled list
#: en/git-update-index.txt:145
#, ignore-same, no-wrap, priority:80
msgid "--replace"
msgstr "--replace"

#. type: Plain text
#: en/git-update-index.txt:152
#, priority:80
msgid "By default, when a file `path` exists in the index, 'git update-index' refuses an attempt to add `path/file`.  Similarly if a file `path/file` exists, a file `path` cannot be added.  With --replace flag, existing entries that conflict with the entry being added are automatically removed with warning messages."
msgstr "É predefinido que quando um arquivo `path` exista no índice, o comando 'git update-index' recusa uma tentativa de adicionar ao `path/file`.  Da mesma forma, caso exista um arquivo `path/file`, um arquivo `path` não poderá ser adicionado.  Com a opção `--replace`, serão removidas automaticamente e com mensagens de aviso todos os lançamentos já existentes que entrem em conflito com o lançamento que está sendo adicionado."

#. type: Plain text
#: en/git-update-index.txt:160
#, priority:80
msgid "Report what is being added and removed from index."
msgstr "Relate o que está sendo adicionado e removido do índice."

#. type: Labeled list
#: en/git-update-index.txt:161
#, no-wrap, priority:80
msgid "--index-version <n>"
msgstr "--index-version <n>"

#. type: Plain text
#: en/git-update-index.txt:166
#, priority:80
msgid "Write the resulting index out in the named on-disk format version.  Supported versions are 2, 3 and 4. The current default version is 2 or 3, depending on whether extra features are used, such as `git add -N`."
msgstr "Escreva o índice resultante na versão informada no formato do disco.  As versões compatíveis são 2, 3 e 4. A versão predefinida atualmente é 2 ou 3, dependendo dos recursos extras que serão utilizados, como `git add -N`."

#. type: Plain text
#: en/git-update-index.txt:172
#, priority:80
msgid "Version 4 performs a simple pathname compression that reduces index size by 30%-50% on large repositories, which results in faster load time. Version 4 is relatively young (first released in 1.8.0 in October 2012). Other Git implementations such as JGit and libgit2 may not support it yet."
msgstr "A versão 4 executa uma compactação do nome do caminho simples que reduz o tamanho do índice em 30%-50% nos repositórios grandes, o que resulta em um tempo de carregamento mais rápido. A versão 4 é relativamente mais nova (lançada pela primeira vez na versão 1.8.0 em outubro de 2012). As outras implementações do Git, como 'JGit' e 'libgit2', ainda não são compatíveis."

#. type: Plain text
#: en/git-update-index.txt:176
#, priority:80
msgid "Only meaningful with `--stdin` or `--index-info`; paths are separated with NUL character instead of LF."
msgstr "Só faz algum sentido se for utilizado com `--stdin` or `--index-info`; os caminhos são separados com caracteres `NUL` em vez de `LF`."

#. type: Labeled list
#: en/git-update-index.txt:177
#, ignore-same, no-wrap, priority:80
msgid "--split-index"
msgstr "--split-index"

#. type: Labeled list
#: en/git-update-index.txt:178
#, ignore-same, no-wrap, priority:80
msgid "--no-split-index"
msgstr "--no-split-index"

#. type: Plain text
#: en/git-update-index.txt:183
#, priority:80
msgid "Enable or disable split index mode. If split-index mode is already enabled and `--split-index` is given again, all changes in $GIT_DIR/index are pushed back to the shared index file."
msgstr "Ativar ou desativar o modo com o índice dividido. Se o modo com índice dividido já estiver ativado e a opção `--split-index` for utilizada novamente, todas as alterações no `$GIT_DIR/index` serão retornadas ao arquivo do índice compartilhado."

#. type: Plain text
#: en/git-update-index.txt:189
#, priority:80
msgid "These options take effect whatever the value of the `core.splitIndex` configuration variable (see linkgit:git-config[1]). But a warning is emitted when the change goes against the configured value, as the configured value will take effect next time the index is read and this will remove the intended effect of the option."
msgstr "Estas opções entram em vigor independente de quer configuração da variável existente no `core.splitIndex` (consulte linkgit:git-config[1]). Porém um aviso é emitido quando a alteração vai contra o valor configurado pois o valor configurado apenas entrará em vigor na próxima vez que o índice for lido, removendo o efeito pretendido da opção."

#. type: Labeled list
#: en/git-update-index.txt:190
#, ignore-same, no-wrap, priority:80
msgid "--untracked-cache"
msgstr "--untracked-cache"

#. type: Labeled list
#: en/git-update-index.txt:191
#, ignore-same, no-wrap, priority:80
msgid "--no-untracked-cache"
msgstr "--no-untracked-cache"

#. type: Plain text
#: en/git-update-index.txt:194
#, priority:80
msgid "Enable or disable untracked cache feature. Please use `--test-untracked-cache` before enabling it."
msgstr "Ative ou desative o recurso de cache não rastreado. Antes de ativar utilize `--test-untracked-cache`."

#. type: Plain text
#: en/git-update-index.txt:200
#, priority:80
msgid "These options take effect whatever the value of the `core.untrackedCache` configuration variable (see linkgit:git-config[1]). But a warning is emitted when the change goes against the configured value, as the configured value will take effect next time the index is read and this will remove the intended effect of the option."
msgstr "Estas opções entram em vigor independente de quer configuração da variável existente no `core.untrackedCache` (consulte linkgit:git-config[1]). Porém um aviso é emitido quando a alteração vai contra o valor configurado pois o valor configurado apenas entrará em vigor na próxima vez que o índice for lido, removendo o efeito pretendido da opção."

#. type: Labeled list
#: en/git-update-index.txt:201
#, ignore-same, no-wrap, priority:80
msgid "--test-untracked-cache"
msgstr "--test-untracked-cache"

#. type: Plain text
#: en/git-update-index.txt:210
#, priority:80
msgid "Only perform tests on the working directory to make sure untracked cache can be used. You have to manually enable untracked cache using `--untracked-cache` or `--force-untracked-cache` or the `core.untrackedCache` configuration variable afterwards if you really want to use it. If a test fails the exit code is 1 and a message explains what is not working as needed, otherwise the exit code is 0 and OK is printed."
msgstr "Execute apenas os testes no diretório ativo para garantir que o cache não monitorado possa ser utilizado. Você deve habilitar manualmente o cache não monitorado utilizando a opção `--untracked-cache` ou `--force-untracked-cache` ou a variável de configuração `core.untrackedCache` posteriormente, caso realmente queira utilizá-lo. Caso um teste falhe, o código de encerramento gerado é '1' e uma mensagem explica o que não está funcionando, conforme necessário, caso contrário, o código de encerramento é '0' e um 'OK' é impresso."

#. type: Labeled list
#: en/git-update-index.txt:211
#, ignore-same, no-wrap, priority:80
msgid "--force-untracked-cache"
msgstr "--force-untracked-cache"

#. type: Plain text
#: en/git-update-index.txt:216
#, priority:80
msgid "Same as `--untracked-cache`. Provided for backwards compatibility with older versions of Git where `--untracked-cache` used to imply `--test-untracked-cache` but this option would enable the extension unconditionally."
msgstr "O mesmo que `--untracked-cache`. Fornece compatibilidade retroativa com as versões mais antigas do Git, onde `--untracked-cache` costumava implicar com a opção `--test-untracked-cache`, porém esta opção ativaria a extensão incondicionalmente."

#. type: Labeled list
#: en/git-update-index.txt:217
#, ignore-same, no-wrap, priority:80
msgid "--fsmonitor"
msgstr "--fsmonitor"

#. type: Labeled list
#: en/git-update-index.txt:218
#, ignore-same, no-wrap, priority:80
msgid "--no-fsmonitor"
msgstr "--no-fsmonitor"

#. type: Plain text
#: en/git-update-index.txt:225
#, priority:80
msgid "Enable or disable files system monitor feature. These options take effect whatever the value of the `core.fsmonitor` configuration variable (see linkgit:git-config[1]). But a warning is emitted when the change goes against the configured value, as the configured value will take effect next time the index is read and this will remove the intended effect of the option."
msgstr "Ativar ou desativar o recurso de monitoramento do sistema de arquivos. Estas opções entram em vigor independente de quer configuração da variável existente no `core.fsmonitor` (consulte linkgit:git-config[1]). Porém um aviso é emitido quando a alteração vai contra o valor configurado pois o valor configurado apenas entrará em vigor na próxima vez que o índice for lido, removendo o efeito pretendido da opção."

#. type: Plain text
#: en/git-update-index.txt:235
#, priority:80
msgid "Files to act on.  Note that files beginning with '.' are discarded. This includes `./file` and `dir/./file`. If you don't want this, then use cleaner names.  The same applies to directories ending '/' and paths with '//'"
msgstr "Arquivos para agir.  Observe que os arquivos que começam com '.' são descartados. Isso inclui `./arquivo` e `dir/./arquivo`. Caso não queira isso, utilize nomes mais limpos.  O mesmo se aplica aos diretórios que terminam com '/' e aos caminhos com '//'"

#. type: Title -
#: en/git-update-index.txt:237
#, no-wrap, priority:80
msgid "USING --REFRESH"
msgstr "USANDO A OPÇÃO --REFRESH"

#. type: Plain text
#: en/git-update-index.txt:243
#, priority:80
msgid "`--refresh` does not calculate a new sha1 file or bring the index up to date for mode/content changes. But what it *does* do is to \"re-match\" the stat information of a file with the index, so that you can refresh the index for a file that hasn't been changed but where the stat entry is out of date."
msgstr "A opção `--refresh` não calcula um novo arquivo sha1 ou atualiza o índice para as alterações do modo/conteúdo. Porém o que é *feito* é \"repetir a coincidência\" das informações estatísticas de um arquivo ao índice, para que você possa atualizar o índice de um arquivo que não foi alterado, porém onde a entrada da estatísticas esteja desatualizada."

#. type: Plain text
#: en/git-update-index.txt:246
#, priority:80
msgid "For example, you'd want to do this after doing a 'git read-tree', to link up the stat index details with the proper files."
msgstr "Como por exemplo, você gostaria de fazer isso após fazer um comando `git read-tree`, para vincular os detalhes do índice estatístico aos arquivos adequados."

#. type: Title -
#: en/git-update-index.txt:248
#, no-wrap, priority:80
msgid "USING --CACHEINFO OR --INFO-ONLY"
msgstr "USANDO AS OPÇÕES --CACHEINFO OU --INFO-ONLY"

#. type: Plain text
#: en/git-update-index.txt:252
#, priority:80
msgid "`--cacheinfo` is used to register a file that is not in the current working directory.  This is useful for minimum-checkout merging."
msgstr "A opção `--cacheinfo` é usada para registrar um arquivo que não está no diretório de trabalho atual.  É útil para mesclar a averiguação mínima."

#. type: Plain text
#: en/git-update-index.txt:254
#, priority:80
msgid "To pretend you have a file at path with mode and sha1, say:"
msgstr "Para fingir que você tem um arquivo no caminho com modo e o sha1, use:"

#. type: delimited block -
#: en/git-update-index.txt:257
#, no-wrap, priority:80
msgid "$ git update-index --add --cacheinfo <mode>,<sha1>,<path>\n"
msgstr "$ git update-index --add --cacheinfo <modo>,<sha1>,<caminho>\n"

#. type: Plain text
#: en/git-update-index.txt:261
#, priority:80
msgid "`--info-only` is used to register files without placing them in the object database.  This is useful for status-only repositories."
msgstr "A opção `--info-only` é usado para registrar os arquivos sem colocá-los no banco de dados do objeto.  É útil apenas para os repositórios \"condição-apenas\"."

#. type: Plain text
#: en/git-update-index.txt:267
#, priority:80
msgid "Both `--cacheinfo` and `--info-only` behave similarly: the index is updated but the object database isn't.  `--cacheinfo` is useful when the object is in the database but the file isn't available locally.  `--info-only` is useful when the file is available, but you do not wish to update the object database."
msgstr "Ambos os `--cacheinfo` e o `--info-only` se comportam da mesma maneira: o índice é atualizado, porém o banco de dados dos objetos não.  A opção `--cacheinfo` é útil quando o objeto está no banco de dados, porém o arquivo não está disponível localmente.  A opção `--info-only` é útil quando o arquivo está disponível, porém você não queira atualizar o banco de dados do objeto."

#. type: Title -
#: en/git-update-index.txt:270
#, no-wrap, priority:80
msgid "USING --INDEX-INFO"
msgstr "USANDO A OPÇÃO --INDEX-INFO"

#. type: Plain text
#: en/git-update-index.txt:275
#, priority:80
msgid "`--index-info` is a more powerful mechanism that lets you feed multiple entry definitions from the standard input, and designed specifically for scripts.  It can take inputs of three formats:"
msgstr "A opção `--index-info` é um mecanismo mais poderoso que permite alimentar as várias definições da entrada a partir da entrada padrão e projetada especificamente para o uso com scripts.  Pode receber as entradas de três formatos:"

#. type: Plain text
#: en/git-update-index.txt:277
#, no-wrap, priority:80
msgid "mode SP type SP sha1          TAB path\n"
msgstr "mode SP type SP sha1          TAB path\n"

#. type: Plain text
#: en/git-update-index.txt:279
#, priority:80
msgid "This format is to stuff `git ls-tree` output into the index."
msgstr "Este formato serve para colocar a saída `git ls-tree` no índice."

#. type: Plain text
#: en/git-update-index.txt:281
#, no-wrap, priority:80
msgid "mode         SP sha1 SP stage TAB path\n"
msgstr "mode         SP sha1 SP stage TAB path\n"

#. type: Plain text
#: en/git-update-index.txt:284
#, priority:80
msgid "This format is to put higher order stages into the index file and matches 'git ls-files --stage' output."
msgstr "Este formato serve para colocar os estágios na ordem superior do arquivo no índice e coincide à saída do `git ls-files --stage`."

#. type: Plain text
#: en/git-update-index.txt:286
#, no-wrap, priority:80
msgid "mode         SP sha1          TAB path\n"
msgstr "mode         SP sha1          TAB path\n"

#. type: Plain text
#: en/git-update-index.txt:289
#, priority:80
msgid "This format is no longer produced by any Git command, but is and will continue to be supported by `update-index --index-info`."
msgstr "Este formato não é mais gerado por nenhum comando Git, mas é e continuará sendo compatível através do comando `update-index --index-info`."

#. type: Plain text
#: en/git-update-index.txt:293
#, priority:80
msgid "To place a higher stage entry to the index, the path should first be removed by feeding a mode=0 entry for the path, and then feeding necessary input lines in the third format."
msgstr "Para colocar um estágio de lançamento com prioridade mais alta ao índice, o caminho primeiro deve ser removido ao utilizar `mode=0` para o caminho e em seguida alimentando as linhas necessárias da entrada ao terceiro formato."

#. type: Plain text
#: en/git-update-index.txt:295
#, priority:80
msgid "For example, starting with this index:"
msgstr "Como por exemplo, começando com este índice:"

#. type: delimited block -
#: en/git-update-index.txt:299
#, no-wrap, priority:80
msgid ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 0       frotz\n"
msgstr ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 0       frotz\n"

#. type: Plain text
#: en/git-update-index.txt:302
#, priority:80
msgid "you can feed the following input to `--index-info`:"
msgstr "você pode alimentar a seguinte entrada para `--index-info`:"

#. type: delimited block -
#: en/git-update-index.txt:308
#, no-wrap, priority:80
msgid ""
"$ git update-index --index-info\n"
"0 0000000000000000000000000000000000000000\tfrotz\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"
msgstr ""
"$ git update-index --index-info\n"
"0 0000000000000000000000000000000000000000\tfrotz\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"

#. type: Plain text
#: en/git-update-index.txt:314
#, priority:80
msgid "The first line of the input feeds 0 as the mode to remove the path; the SHA-1 does not matter as long as it is well formatted.  Then the second and third line feeds stage 1 and stage 2 entries for that path.  After the above, we would end up with this:"
msgstr "A primeira linha da entrada alimenta 0 como sendo o modo para remover o caminho; o SHA-1 não é importante, desde que esteja bem formatado.  Em seguida, a segunda e a terceira linha alimentam as entradas 'stage 1' e o 'stage 2' para este caminho.  Após o exposto, acabaríamos assim:"

#. type: delimited block -
#: en/git-update-index.txt:319
#, no-wrap, priority:80
msgid ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"
msgstr ""
"$ git ls-files -s\n"
"100644 8a1218a1024a212bb3db30becd860315f9f3ac52 1\tfrotz\n"
"100755 8a1218a1024a212bb3db30becd860315f9f3ac52 2\tfrotz\n"

#. type: Title -
#: en/git-update-index.txt:323
#, no-wrap, priority:80
msgid "USING ``ASSUME UNCHANGED'' BIT"
msgstr "UTILIZANDO O BIT ``ASSUME UNCHANGED''"

#. type: Plain text
#: en/git-update-index.txt:338
#, priority:80
msgid "Many operations in Git depend on your filesystem to have an efficient `lstat(2)` implementation, so that `st_mtime` information for working tree files can be cheaply checked to see if the file contents have changed from the version recorded in the index file.  Unfortunately, some filesystems have inefficient `lstat(2)`.  If your filesystem is one of them, you can set \"assume unchanged\" bit to paths you have not changed to cause Git not to do this check.  Note that setting this bit on a path does not mean Git will check the contents of the file to see if it has changed -- it makes Git to omit any checking and assume it has *not* changed.  When you make changes to working tree files, you have to explicitly tell Git about it by dropping \"assume unchanged\" bit, either before or after you modify them."
msgstr "Muitas operações no Git dependem do seu sistema de arquivos para ter uma implementação eficiente `lstat(2)`, de modo que as informações `st_mtime` para os arquivos da árvore de trabalho possam ser averiguadas com menos custo para ver se o conteúdo do arquivo foi alterado em relação à versão registrada no arquivo do índice.  Infelizmente, alguns sistemas de arquivos têm um `lstat(2)` ineficiente.  Caso o seu sistema de arquivos seja um deles, é possível definir o bit \"assuma como inalterado\" para os caminhos que não foram alterados, fazendo com que o Git não faça essa verificação.  Observe que definir este bit em um caminho não significa que o Git verificará o conteúdo do arquivo para ver se ele foi alterado -- le faz com que o Git omita qualquer verificação e presuma que ele não foi alterado.  Quando você faz alterações nos arquivos da árvore de trabalho, é preciso informar ao Git de forma explicita, removendo o bit \"assuma como inalterado\", antes ou após modificá-los."

#. type: Plain text
#: en/git-update-index.txt:343
#, priority:80
msgid "In order to set \"assume unchanged\" bit, use `--assume-unchanged` option.  To unset, use `--no-assume-unchanged`. To see which files have the \"assume unchanged\" bit set, use `git ls-files -v` (see linkgit:git-ls-files[1])."
msgstr "Para definir o bit \"assume unchanged\" (assuma como inalterado), utilize a opção `--assume-unchanged`.  Para remover a definição utilize `--no-assume-unchanged`. Para ver quais os arquivos tem o bit \"assume unchanged\" definido, utilize `git ls-files -v` (consulte linkgit:git-ls-files[1])."

#. type: Plain text
#: en/git-update-index.txt:353
#, ignore-ellipsis, priority:80
msgid "The command looks at `core.ignorestat` configuration variable.  When this is true, paths updated with `git update-index paths...` and paths updated with other Git commands that update both index and working tree (e.g. 'git apply --index', 'git checkout-index -u', and 'git read-tree -u') are automatically marked as \"assume unchanged\".  Note that \"assume unchanged\" bit is *not* set if `git update-index --refresh` finds the working tree file matches the index (use `git update-index --really-refresh` if you want to mark them as \"assume unchanged\")."
msgstr "O comando analisa a variável de configuração `core.ignorestat`.  Quando for 'true', os caminhos são atualizados com o comando `git update-index paths...` e os caminhos são atualizados com outros comandos Git que atualizam o índice e a árvore de trabalho (por exemplo, o 'git apply --index', 'git checkout-index -u' e o 'git read-tree -u') são marcados automaticamente com o bit \"assuma como inalterado\".  Observe que o bit \"assuma como inalterado\" *não* está definido caso o comando `git update-index --refresh` encontre o arquivo da árvore de trabalho que coincida com o índice (utilize o `git update-index --really-refresh` caso queira marcá-los com o bit \"assuma como inalterado\")."

#. type: Plain text
#: en/git-update-index.txt:357
#, priority:80
msgid "Sometimes users confuse the assume-unchanged bit with the skip-worktree bit.  See the final paragraph in the \"Skip-worktree bit\" section below for an explanation of the differences."
msgstr "Às vezes, os usuários confundem o bit presumido inalterado com o bit do \"skip-worktree\".  Consulte o parágrafo final na seção \"Skip-worktree bit\" abaixo para obter uma explicação das diferenças."

#. type: Plain text
#: en/git-update-index.txt:362
#, priority:80
msgid "To update and refresh only the files already checked out:"
msgstr "Para atualizar e renovar apenas os arquivos já averiguados:"

#. type: Labeled list
#: en/git-update-index.txt:367
#, no-wrap, priority:80
msgid "On an inefficient filesystem with `core.ignorestat` set"
msgstr "Em um sistema de arquivos ineficiente com o a opção da configuração `core.ignorestat` definida"

#. type: delimited block -
#: en/git-update-index.txt:383
#, no-wrap, priority:80
msgid ""
"$ git update-index --really-refresh              <1>\n"
"$ git update-index --no-assume-unchanged foo.c   <2>\n"
"$ git diff --name-only                           <3>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <4>\n"
"M foo.c\n"
"$ git update-index foo.c                         <5>\n"
"$ git diff --name-only                           <6>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <7>\n"
"$ git update-index --no-assume-unchanged foo.c   <8>\n"
"$ git diff --name-only                           <9>\n"
"M foo.c\n"
msgstr ""
"$ git update-index --really-refresh              <1>\n"
"$ git update-index --no-assume-unchanged foo.c   <2>\n"
"$ git diff --name-only                           <3>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <4>\n"
"M foo.c\n"
"$ git update-index foo.c                         <5>\n"
"$ git diff --name-only                           <6>\n"
"$ edit foo.c\n"
"$ git diff --name-only                           <7>\n"
"$ git update-index --no-assume-unchanged foo.c   <8>\n"
"$ git diff --name-only                           <9>\n"
"M foo.c\n"

#. type: Plain text
#: en/git-update-index.txt:386
#, priority:80
msgid "forces lstat(2) to set \"assume unchanged\" bits for paths that match index."
msgstr "impõem ao lstat(2) que defina os bits \"assuma como inalterado\" para os caminhos que coincidam com o índice."

#. type: Plain text
#: en/git-update-index.txt:387
#, priority:80
msgid "mark the path to be edited."
msgstr "marque o caminho que será editado."

#. type: Plain text
#: en/git-update-index.txt:388
#, priority:80
msgid "this does lstat(2) and finds index matches the path."
msgstr "assim faz o lstat(1) e encontra o índice que coincida com o caminho."

#. type: Plain text
#: en/git-update-index.txt:389
#, priority:80
msgid "this does lstat(2) and finds index does *not* match the path."
msgstr "assim faz o lstat(2) e encontra o índice que *não* coincida com o caminho."

#. type: Plain text
#: en/git-update-index.txt:390
#, priority:80
msgid "registering the new version to index sets \"assume unchanged\" bit."
msgstr "registrando uma nova versão nos conjuntos dos índices do bit \"assuma como inalterado\"."

#. type: Plain text
#: en/git-update-index.txt:391
#, priority:80
msgid "and it is assumed unchanged."
msgstr "e é assumido como inalterado."

#. type: Plain text
#: en/git-update-index.txt:392
#, priority:80
msgid "even after you edit it."
msgstr "mesmo depois que você o edite."

#. type: Plain text
#: en/git-update-index.txt:393
#, priority:80
msgid "you can tell about the change after the fact."
msgstr "você pode contar sobre a alteração após o fato."

#. type: Plain text
#: en/git-update-index.txt:394
#, priority:80
msgid "now it checks with lstat(2) and finds it has been changed."
msgstr "agora verifica com lstat(2) e descobre o que foi alterado."

#. type: Title -
#: en/git-update-index.txt:397
#, no-wrap, priority:80
msgid "SKIP-WORKTREE BIT"
msgstr "SKIP-WORKTREE BIT"

#. type: Plain text
#: en/git-update-index.txt:403
#, priority:80
msgid "Skip-worktree bit can be defined in one (long) sentence: Tell git to avoid writing the file to the working directory when reasonably possible, and treat the file as unchanged when it is not present in the working directory."
msgstr "O bit do Skip-worktree pode ser definido numa (longa) frase: Diga ao git para evitar escrever o arquivo no diretório de trabalho quando for razoavelmente possível, e trate o arquivo como inalterado quando ele não estiver presente no diretório de trabalho."

#. type: Plain text
#: en/git-update-index.txt:406
#, priority:80
msgid "Note that not all git commands will pay attention to this bit, and some only partially support it."
msgstr "Note que nem todos os comandos do git prestarão atenção a este bit, e alguns, só são parcialmente compatíveis."

#. type: Plain text
#: en/git-update-index.txt:415
#, priority:80
msgid "The update-index flags and the read-tree capabilities relating to the skip-worktree bit predated the introduction of the linkgit:git-sparse-checkout[1] command, which provides a much easier way to configure and handle the skip-worktree bits.  If you want to reduce your working tree to only deal with a subset of the files in the repository, we strongly encourage the use of linkgit:git-sparse-checkout[1] in preference to the low-level update-index and read-tree primitives."
msgstr "Os sinalizadores do índice de atualização e os recursos da leitura da árvore relacionados ao bit skip-worktree, antecederam a introdução do comando linkgit:git-sparse-checkout[1], que fornece uma maneira muito mais fácil de configurar e manipular os bits skip-worktree . Caso queira reduzir a sua árvore de trabalho para lidar apenas com um subconjunto dos arquivos no repositório, nós encorajamos fortemente o uso de linkgit:git-sparse-checkout[1] em preferência ao índice de atualização de baixo nível e leitura dos primitivos da árvore."

#. type: Plain text
#: en/git-update-index.txt:426
#, fuzzy, priority:80
#| msgid "The primary purpose of the skip-worktree bit is to enable sparse checkouts, i.e. to have working directories with only a subset of paths present.  When the skip-worktree bit is set, Git commands (such as `switch`, `pull`, `merge`) will avoid writing these files.  However, these commands will sometimes write these files anyway in important cases such as conflicts during a merge or rebase.  Git commands will also avoid treating the lack of such files as an intentional deletion; for example `git add -u` will not not stage a deletion for these files and `git commit -a` will not make a commit deleting them either."
msgid "The primary purpose of the skip-worktree bit is to enable sparse checkouts, i.e. to have working directories with only a subset of paths present.  When the skip-worktree bit is set, Git commands (such as `switch`, `pull`, `merge`) will avoid writing these files.  However, these commands will sometimes write these files anyway in important cases such as conflicts during a merge or rebase.  Git commands will also avoid treating the lack of such files as an intentional deletion; for example `git add -u` will not stage a deletion for these files and `git commit -a` will not make a commit deleting them either."
msgstr "O objetivo principal do bit skip-worktree é ativar verificações esparsas, ou seja, ter os diretórios de trabalho com apenas um subconjunto de caminhos presentes. Quando o bit skip-worktree for definido, os comandos do Git (como `switch`, `pull`, `merge`) evitarão escrever esses arquivos. No entanto, esses comandos às vezes gravam esses arquivos de qualquer maneira em casos importantes, como conflitos durante uma mesclagem ou rebase. Os comandos do Git também evitarão tratar a falta de tais arquivos como uma exclusão intencional; por exemplo, `git add -u` não irá realizar uma exclusão para esses arquivos e `git commit -a` também não fará um commit deletando-os."

#. type: Plain text
#: en/git-update-index.txt:440
#, priority:80
msgid "Although this bit looks similar to assume-unchanged bit, its goal is different.  The assume-unchanged bit is for leaving the file in the working tree but having Git omit checking it for changes and presuming that the file has not been changed (though if it can determine without stat'ing the file that it has changed, it is free to record the changes).  skip-worktree tells Git to ignore the absence of the file, avoid updating it when possible with commands that normally update much of the working directory (e.g. `checkout`, `switch`, `pull`, etc.), and not have its absence be recorded in commits.  Note that in sparse checkouts (setup by `git sparse-checkout` or by configuring core.sparseCheckout to true), if a file is marked as skip-worktree in the index but is found in the working tree, Git will clear the skip-worktree bit for that file."
msgstr "Embora este bit pareça ser semelhante ao bit inalterado assumido, o seu objetivo é diferente. O bit assumido não alterado é para ser deixado no arquivo da árvore de trabalho, mas fazer com que o Git omita a verificação das alterações e presumindo que o arquivo não foi alterado (embora se ele puder determinar sem declarar o arquivo que foi alterado, é livre para gravar as alterações). A opção `--skip-worktree` diz ao Git para ignorar a ausência do arquivo, evite atualizá-lo sempre quando for possível com os comandos que normalmente atualizam grande parte do diretório de trabalho (por exemplo, `checkout`, `switch`, `pull`, etc.), e para não ter a sua ausência registrada nos commits. Observe que com os check-outs esparsos (configurados através da opção `git sparse-checkout` ou configurando \"true\" em core.sparseCheckout), caso um arquivo esteja marcado como skip-worktree no índice mas seja encontrado na árvore de trabalho, o Git limpará o bit do skip-worktree na árvore de trabalho neste arquivo."

#. type: Title -
#: en/git-update-index.txt:442
#, no-wrap, priority:80
msgid "SPLIT INDEX"
msgstr "ÍNDICE DIVIDIDO"

#. type: Plain text
#: en/git-update-index.txt:446
#, priority:80
msgid "This mode is designed for repositories with very large indexes, and aims at reducing the time it takes to repeatedly write these indexes."
msgstr "Este modo é projetado para repositórios com índices muito grandes e visa reduzir o tempo necessário para gravar repetidamente tais índices."

#. type: Plain text
#: en/git-update-index.txt:451
#, priority:80
msgid "In this mode, the index is split into two files, $GIT_DIR/index and $GIT_DIR/sharedindex.<SHA-1>. Changes are accumulated in $GIT_DIR/index, the split index, while the shared index file contains all index entries and stays unchanged."
msgstr "Nesse modo, o índice é dividido em dois arquivos, `$GIT_DIR/index` e `$GIT_DIR/sharedindex.<SHA-1>`. As alterações são acumuladas no `$GIT_DIR/index`, o índice dividido, enquanto o arquivo do índice compartilhado contém todas os lançamentos no índice e permanece inalterado."

#. type: Plain text
#: en/git-update-index.txt:456
#, priority:80
msgid "All changes in the split index are pushed back to the shared index file when the number of entries in the split index reaches a level specified by the splitIndex.maxPercentChange config variable (see linkgit:git-config[1])."
msgstr "Todas as alterações feitas índice que foi dividido são retornadas ao arquivo do índice compartilhado quando a quantidade de entradas no índice atinge um nível especificado através da variável de configuração `splitIndex.maxPercentChange` (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-update-index.txt:461
#, priority:80
msgid "Each time a new shared index file is created, the old shared index files are deleted if their modification time is older than what is specified by the splitIndex.sharedIndexExpire config variable (see linkgit:git-config[1])."
msgstr "Sempre que um novo arquivo do índice compartilhado for criado, os arquivos do índice antigos que foram compartilhados são excluídos caso o tempo de alteração seja mais antigo do que o definido pela variável de configuração `splitIndex.sharedIndexExpire` (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-update-index.txt:465
#, priority:80
msgid "To avoid deleting a shared index file that is still used, its modification time is updated to the current time every time a new split index based on the shared index file is either created or read from."
msgstr "Para evitar a exclusão de um arquivo do índice compartilhado que ainda esteja em uso, o seu horário de modificação é atualizado para o horário atual sempre que um novo índice dividido tiver como base o arquivo do índice compartilhado seja criado ou lido."

#. type: Title -
#: en/git-update-index.txt:467
#, no-wrap, priority:80
msgid "UNTRACKED CACHE"
msgstr "CACHE NÃO MONITORADO"

#. type: Plain text
#: en/git-update-index.txt:471
#, priority:80
msgid "This cache is meant to speed up commands that involve determining untracked files such as `git status`."
msgstr "Esse cache destina-se a acelerar os comandos que envolvem a determinação dos arquivos não monitorados, como o `git status`."

#. type: Plain text
#: en/git-update-index.txt:478
#, priority:80
msgid "This feature works by recording the mtime of the working tree directories and then omitting reading directories and stat calls against files in those directories whose mtime hasn't changed. For this to work the underlying operating system and file system must change the `st_mtime` field of directories if files in the directory are added, modified or deleted."
msgstr "Esse recurso funciona gravando o 'mtime' dos diretórios da árvore de trabalho e em seguida, omitindo a leitura dos diretórios e as chamadas da condição nos arquivos dos diretórios cujo 'mtime' não tenha sido alterado. Para que isso funcione, o sistema operacional e o sistema de arquivos subjacentes devem alterar o campo do diretório `st_mtime` caso os arquivos no diretório forem adicionados, modificados ou excluídos."

#. type: Plain text
#: en/git-update-index.txt:483
#, priority:80
msgid "You can test whether the filesystem supports that with the `--test-untracked-cache` option. The `--untracked-cache` option used to implicitly perform that test in older versions of Git, but that's no longer the case."
msgstr "Você pode testar se o sistema de arquivos é compatível com a opção `--test-untracked-cache`. A opção `--untracked-cache` usada para executar este teste de forma implícita nas versões mais antigas do Git, porém este não é mais o caso."

#. type: Plain text
#: en/git-update-index.txt:491
#, priority:80
msgid "If you want to enable (or disable) this feature, it is easier to use the `core.untrackedCache` configuration variable (see linkgit:git-config[1]) than using the `--untracked-cache` option to `git update-index` in each repository, especially if you want to do so across all repositories you use, because you can set the configuration variable to `true` (or `false`) in your `$HOME/.gitconfig` just once and have it affect all repositories you touch."
msgstr "Caso queira ativar (ou desativar) este recurso, é mais fácil utilizar a variável de configuração `core.untrackedCache` (consulte linkgit:git-config[1]) do que utilizar a opção `--untracked-cache` para o comando `git update-index` em cada repositório, especialmente se você quiser fazê-lo em todos os repositórios que você utiliza, pois é possível definir a variável de configuração como `true` (ou `false`) no seu `$HOME/.gitconfig` apenas uma vez e afetar todos os repositórios que você toque."

#. type: Plain text
#: en/git-update-index.txt:497
#, priority:80
msgid "When the `core.untrackedCache` configuration variable is changed, the untracked cache is added to or removed from the index the next time a command reads the index; while when `--[no-|force-]untracked-cache` are used, the untracked cache is immediately added to or removed from the index."
msgstr "Quando a variável de configuração `core.untrackedCache` é alterada, o cache não monitorado é adicionado ou removido do índice da próxima vez que um comando lê o índice; enquanto quando `--[no-|force-]untracked-cache` são utilizados, o cache não monitorado é imediatamente adicionado ou removido do índice."

#. type: Plain text
#: en/git-update-index.txt:504
#, priority:80
msgid "Before 2.17, the untracked cache had a bug where replacing a directory with a symlink to another directory could cause it to incorrectly show files tracked by git as untracked. See the \"status: add a failing test showing a core.untrackedCache bug\" commit to git.git. A workaround for that is (and this might work for other undiscovered bugs in the future):"
msgstr "Antes da versão 2.17, o cache não monitorado apresentava um erro, ao substituir um diretório por um link simbólico para outro diretório, fazendo com que ele mostrasse de forma incorreta os arquivos monitorados pelo git como não monitorados. Consulte o \"status: adicione um teste com falha mostrando um bug core.untrackedCache\" commit com git.git. Uma solução alternativa para isso é (e isso pode funcionar para os outros erros que ainda não foram descobertos no futuro):"

#. type: delimited block -
#: en/git-update-index.txt:507
#, no-wrap, priority:80
msgid "$ git -c core.untrackedCache=false status\n"
msgstr "$ git -c core.untrackedCache=false status\n"

#. type: Plain text
#: en/git-update-index.txt:513
#, priority:80
msgid "This bug has also been shown to affect non-symlink cases of replacing a directory with a file when it comes to the internal structures of the untracked cache, but no case has been reported where this resulted in wrong \"git status\" output."
msgstr "Também foi demonstrado que este 'bug' afeta os casos sem um link simbólico na reposição de um diretório por um arquivo quando se trata das estruturas internas do cache não monitorado, porém nenhum caso foi relatado onde isso tenha resultado na saída incorreta do comando \"git status\"."

#. type: Plain text
#: en/git-update-index.txt:519
#, priority:80
msgid "There are also cases where existing indexes written by git versions before 2.17 will reference directories that don't exist anymore, potentially causing many \"could not open directory\" warnings to be printed on \"git status\". These are new warnings for existing issues that were previously silently discarded."
msgstr "Também existem os casos onde os índices existentes escritos pelas versões do git anteriores a versão 2.17 referenciarem os diretórios que não existem mais, potencialmente fazendo com que muitos avisos de \"não foi possível abrir o diretório\" sejam impressos durante a execução do comando \"git status\". Estes são os novos avisos para problemas existentes que foram descartados anteriormente sem qualquer aviso prévio."

#. type: Plain text
#: en/git-update-index.txt:523
#, priority:80
msgid "As with the bug described above the solution is to one-off do a \"git status\" run with `core.untrackedCache=false` to flush out the leftover bad data."
msgstr "Assim como no bug descrito acima, a solução é executar um \"status git\" único com `core.untrackedCache=false` para liberar os dados ruins restantes."

#. type: Title -
#: en/git-update-index.txt:525
#, no-wrap, priority:80
msgid "FILE SYSTEM MONITOR"
msgstr "MONITOR DO SISTEMA DE ARQUIVOS"

#. type: Plain text
#: en/git-update-index.txt:529
#, priority:80
msgid "This feature is intended to speed up git operations for repos that have large working directories."
msgstr "Este recurso visa acelerar as operações do git para os repositórios que possuem grandes diretórios de trabalho."

#. type: Plain text
#: en/git-update-index.txt:536
#, priority:80
msgid "It enables git to work together with a file system monitor (see linkgit:git-fsmonitor{litdd}daemon[1] and the \"fsmonitor-watchman\" section of linkgit:githooks[5]) that can inform it as to what files have been modified. This enables git to avoid having to lstat() every file to find modified files."
msgstr "Ele permite que o git trabalhe em conjunto com um monitor do sistema de arquivos (consulte linkgit:git-fsmonitor--{litdd}daemon[1] e a seção \"fsmonitor-watchman\" do linkgit:githooks[5]) que pode informá-lo sobre quais os arquivos foram alterados. Isso permite que o git evite ter que fazer um 'lstat()' em todo arquivo para localizar quais os arquivos que foram alterados."

#. type: Plain text
#: en/git-update-index.txt:540
#, priority:80
msgid "When used in conjunction with the untracked cache, it can further improve performance by avoiding the cost of scanning the entire working directory looking for new files."
msgstr "Quando usado em conjunto com o cache não monitorado, pode melhorar ainda mais o desempenho, evitando o custo de varrer todo o diretório ativo à procura de novos arquivos."

#. type: Plain text
#: en/git-update-index.txt:548
#, priority:80
msgid "If you want to enable (or disable) this feature, it is easier to use the `core.fsmonitor` configuration variable (see linkgit:git-config[1]) than using the `--fsmonitor` option to `git update-index` in each repository, especially if you want to do so across all repositories you use, because you can set the configuration variable in your `$HOME/.gitconfig` just once and have it affect all repositories you touch."
msgstr "Caso queira ativar (ou desativar) este recurso, é mais fácil utilizar a variável de configuração `core.fsmonitor` (consulte linkgit:git-config[1]) do que utilizar a opção `--fsmonitor` para o comando `git update-index` em cada repositório, especialmente se você quiser fazê-lo em todos os repositórios que você utiliza, pois é possível definir a variável de configuração no seu `$HOME/.gitconfig` apenas uma vez e afetar todos os repositórios que você toque."

#. type: Plain text
#: en/git-update-index.txt:553
#, priority:80
msgid "When the `core.fsmonitor` configuration variable is changed, the file system monitor is added to or removed from the index the next time a command reads the index. When `--[no-]fsmonitor` are used, the file system monitor is immediately added to or removed from the index."
msgstr "Quando a variável de configuração `core.fsmonitor` é alterada, o monitor do sistema de arquivos é adicionado ou removido do índice na próxima vez que um comando leia o índice. Quando `--[no-]fsmonitor` é usado, o monitor do sistema de arquivos é imediatamente adicionado ou removido do índice."

#. type: Plain text
#: en/git-update-index.txt:564
#, no-wrap, priority:80
msgid ""
"The command honors `core.filemode` configuration variable.  If\n"
"your repository is on a filesystem whose executable bits are\n"
"unreliable, this should be set to 'false' (see linkgit:git-config[1]).\n"
"This causes the command to ignore differences in file modes recorded\n"
"in the index and the file mode on the filesystem if they differ only on\n"
"executable bit.   On such an unfortunate filesystem, you may\n"
"need to use 'git update-index --chmod='.\n"
msgstr ""
"O comando honra a variável de configuração `core.filemode`.  Defina como 'false'\n"
"caso o seu repositório esteja em um sistema de arquivos cujos bits\n"
"dos executáveis não sejam confiáveis (consulte linkgit:git-config[1]).\n"
"Isso faz com que o comando ignore as diferenças nos modos do arquivo registrados\n"
"no índice e no modo do arquivo do sistema de arquivos caso eles divirjam apenas\n"
"no bit executável.   Em um sistema de arquivos tão infeliz, talvez seja\n"
"necessário usar o comando 'git update-index --chmod ='.\n"

#. type: Plain text
#: en/git-update-index.txt:569
#, priority:80
msgid "Quite similarly, if `core.symlinks` configuration variable is set to 'false' (see linkgit:git-config[1]), symbolic links are checked out as plain files, and this command does not modify a recorded file mode from symbolic link to regular file."
msgstr "De maneira semelhante, caso a variável de configuração `core.symlinks` esteja definida como 'false' (consulte linkgit:git-config[1]) os links simbólicos serão verificados como arquivos simples e esse comando não modificará o modo de gravação do arquivo vindo de link simbólico para um arquivo regular."

#. type: Plain text
#: en/git-update-index.txt:572
#, priority:80
msgid "The command looks at `core.ignorestat` configuration variable.  See 'Using \"assume unchanged\" bit' section above."
msgstr "O comando analisa a variável de configuração `core.ignorestat`.  Consulte a seção 'Usando o bit \"assuma como inalterado\"' acima."

#. type: Plain text
#: en/git-update-index.txt:577
#, priority:80
msgid "The command also looks at `core.trustctime` configuration variable.  It can be useful when the inode change time is regularly modified by something outside Git (file system crawlers and backup systems use ctime for marking files processed) (see linkgit:git-config[1])."
msgstr "O comando também analisa a variável de configuração `core.trustctime`.  Pode ser útil quando o tempo da alteração do \"inode\" for alterado regularmente por algo fora do Git (os rastreadores do sistema dos arquivos e os sistemas de backup utilizam o \"ctime\" para marcar os arquivos que forem processados) (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-update-index.txt:581
#, priority:80
msgid "The untracked cache extension can be enabled by the `core.untrackedCache` configuration variable (see linkgit:git-config[1])."
msgstr "A extensão do cache não rastreado pode ser ativado através da configuração de variável `core.untrackedCache` (consulte linkgit:git-config[1])."

#. type: Plain text
#: en/git-update-index.txt:591
#, priority:80
msgid "Users often try to use the assume-unchanged and skip-worktree bits to tell Git to ignore changes to files that are tracked.  This does not work as expected, since Git may still check working tree files against the index when performing certain operations.  In general, Git does not provide a way to ignore changes to tracked files, so alternate solutions are recommended."
msgstr "Os usuários geralmente tentam usar os bits \"assuma como inalterado\" e ignoram a árvore de trabalho para dizer ao Git para ignorar as alterações nos arquivos monitorados.  Isso não funciona conforme o esperado, pois o Git ainda pode verificar os arquivos da árvore de trabalho em relação ao índice durante a execução de determinadas operações.  Em geral, o Git não fornece uma maneira de ignorar as alterações nos arquivos monitorados, portanto, as soluções alternativas são recomendadas."

#. type: Plain text
#: en/git-update-index.txt:597
#, priority:80
msgid "For example, if the file you want to change is some sort of config file, the repository can include a sample config file that can then be copied into the ignored name and modified.  The repository can even include a script to treat the sample file as a template, modifying and copying it automatically."
msgstr "Como por exemplo, caso o arquivo que você deseja alterar seja algum tipo de arquivo de configuração, o repositório poderá incluir um arquivo de configuração de amostra que poderá ser copiado no nome que foi ignorado e modificado.  O repositório pode até incluir um script para tratar o arquivo de amostra como um modelo, modificando e copiando-o automaticamente."

#. type: Plain text
#: en/git-update-index.txt:603
#, ignore-same, priority:80
msgid "linkgit:git-config[1], linkgit:git-add[1], linkgit:git-ls-files[1]"
msgstr "linkgit:git-config[1], linkgit:git-add[1], linkgit:git-ls-files[1]"

#. type: Title =
#: en/git-update-ref.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-update-ref(1)"
msgstr "git-update-ref(1)"

#. type: Plain text
#: en/git-update-ref.txt:7
#, priority:80
msgid "git-update-ref - Update the object name stored in a ref safely"
msgstr "git-update-ref - Atualize o nome do objeto armazenado em uma \"ref\" com segurança"

#. type: Plain text
#: en/git-update-ref.txt:12
#, no-wrap, priority:80
msgid "'git update-ref' [-m <reason>] [--no-deref] (-d <ref> [<oldvalue>] | [--create-reflog] <ref> <newvalue> [<oldvalue>] | --stdin [-z])\n"
msgstr "'git update-ref' [-m <motivo>] [--no-deref] (-d <ref> [<valorantigo>] | [--create-reflog] <ref> <novovalor> [<valorantigo>] | --stdin [-z])\n"

#. type: Plain text
#: en/git-update-ref.txt:18
#, priority:80
msgid "Given two arguments, stores the <newvalue> in the <ref>, possibly dereferencing the symbolic refs.  E.g. `git update-ref HEAD <newvalue>` updates the current branch head to the new object."
msgstr "Quando dois argumentos forem utilizados, armazena o <novovalor> na <ref>, possivelmente removendo as referências das refs simbólicas.  O `git update-ref HEAD <novovalor>` atualiza o cabeçalho do ramo atual para o novo objeto por exemplo."

#. type: Plain text
#: en/git-update-ref.txt:27
#, priority:80
msgid "Given three arguments, stores the <newvalue> in the <ref>, possibly dereferencing the symbolic refs, after verifying that the current value of the <ref> matches <oldvalue>.  E.g. `git update-ref refs/heads/master <newvalue> <oldvalue>` updates the master branch head to <newvalue> only if its current value is <oldvalue>.  You can specify 40 \"0\" or an empty string as <oldvalue> to make sure that the ref you are creating does not exist."
msgstr "Quando três argumentos forem utilizados, armazena o <novovalor> na <ref>, possivelmente tirando as referências das refs simbólicas, após verificar se o valor atual da <ref> coincide com o <valorantigo>.  O  `git update-ref refs/heads/master<novovalor> <valorantigo>` atualiza o cabeçalho do ramo principal para o <novovalor> somente se o seu valor atual for um <valorantigo> por exemplo.  Você pode definir 40 '0' ou uma sequência vazia como o <valorantigo> para garantir que a referência que você está criando não exista."

#. type: Plain text
#: en/git-update-ref.txt:31
#, priority:80
msgid "It also allows a \"ref\" file to be a symbolic pointer to another ref file by starting with the four-byte header sequence of \"ref:\"."
msgstr "Ele também permite que um arquivo \"ref\" seja um ponteiro simbólico para um outro arquivo \"ref\", iniciando com a sequência de quatro bytes do cabeçalho \"ref:\"."

#. type: Plain text
#: en/git-update-ref.txt:39
#, priority:80
msgid "More importantly, it allows the update of a ref file to follow these symbolic pointers, whether they are symlinks or these \"regular file symbolic refs\".  It follows *real* symlinks only if they start with \"refs/\": otherwise it will just try to read them and update them as a regular file (i.e. it will allow the filesystem to follow them, but will overwrite such a symlink to somewhere else with a regular filename)."
msgstr "O mais importante, permite que a atualização de um arquivo \"ref\" siga estes ponteiros simbólicos, sejam links simbólicos ou estas \"refs simbólicas do arquivo regular\".  Segue os links simbólicos *reais* caso apenas eles começarem com \"refs/\": caso contrário, ele apenas tentará lê-los e atualizá-los como um arquivo regular (ou seja, permitirá que o sistema de arquivos os siga, mas substituirá este link simbólico para algum outro lugar e com um nome comum do arquivo)."

#. type: Plain text
#: en/git-update-ref.txt:42
#, priority:80
msgid "If --no-deref is given, <ref> itself is overwritten, rather than the result of following the symbolic pointers."
msgstr "Caso a opção `--no-deref` seja utilizado, a própria <ref> será substituída, em vez do resultado de seguir os ponteiros simbólicos."

#. type: Plain text
#: en/git-update-ref.txt:44
#, priority:80
msgid "In general, using"
msgstr "Em geral, utilizando"

#. type: Plain text
#: en/git-update-ref.txt:46
#, no-wrap, priority:80
msgid "\tgit update-ref HEAD \"$head\"\n"
msgstr "\tgit update-ref HEAD \"$head\"\n"

#. type: Plain text
#: en/git-update-ref.txt:48
#, priority:80
msgid "should be a _lot_ safer than doing"
msgstr "deve ser _muito mais_ seguro do que fazer"

#. type: Plain text
#: en/git-update-ref.txt:50
#, no-wrap, priority:80
msgid "\techo \"$head\" > \"$GIT_DIR/HEAD\"\n"
msgstr "\techo \"$head\" > \"$GIT_DIR/HEAD\"\n"

#. type: Plain text
#: en/git-update-ref.txt:57
#, priority:80
msgid "both from a symlink following standpoint *and* an error checking standpoint.  The \"refs/\" rule for symlinks means that symlinks that point to \"outside\" the tree are safe: they'll be followed for reading but not for writing (so we'll never write through a ref symlink to some other tree, if you have copied a whole archive by creating a symlink tree)."
msgstr "ambos de um link simbólico seguindo o ponto de vista *e* um ponto da averiguação do erro.  A regra \"refs/\" para os links simbólicos significa que os links simbólicos que apontem para \"fora\" da árvore são seguros: eles serão seguidos para leitura, mas não para gravação (portanto, nunca escreveremos através de um link simbólico \"ref\" para uma outra árvore, caso tenha copiado um arquivo inteiro ao criar um link simbólico de uma árvore)."

#. type: Plain text
#: en/git-update-ref.txt:60
#, priority:80
msgid "With `-d` flag, it deletes the named <ref> after verifying it still contains <oldvalue>."
msgstr "Com a opção `-d`, exclui o nome <ref> após a verificação que ainda contenha o <valorantigo>."

#. type: Plain text
#: en/git-update-ref.txt:63
#, priority:80
msgid "With `--stdin`, update-ref reads instructions from standard input and performs all modifications together.  Specify commands of the form:"
msgstr "Com a opção `--stdin`, o 'update-ref' lê as instruções da entrada padrão e executa todas as alterações juntas.  Defina os comandos do formulário:"

#. type: Plain text
#: en/git-update-ref.txt:73
#, no-wrap, priority:80
msgid ""
"\tupdate SP <ref> SP <newvalue> [SP <oldvalue>] LF\n"
"\tcreate SP <ref> SP <newvalue> LF\n"
"\tdelete SP <ref> [SP <oldvalue>] LF\n"
"\tverify SP <ref> [SP <oldvalue>] LF\n"
"\toption SP <opt> LF\n"
"\tstart LF\n"
"\tprepare LF\n"
"\tcommit LF\n"
"\tabort LF\n"
msgstr ""
"\tupdate SP <ref> SP <novovalor> [SP <valorantigo>] LF\n"
"\tcreate SP <ref> SP <novovalor> LF\n"
"\tdelete SP <ref> [SP <valorantigo>] LF\n"
"\tverify SP <ref> [SP <valorantigo>] LF\n"
"\toption SP <opt> LF\n"
"\tstart LF\n"
"\tprepare LF\n"
"\tcommit LF\n"
"\tabort LF\n"

#. type: Plain text
#: en/git-update-ref.txt:76
#, priority:80
msgid "With `--create-reflog`, update-ref will create a reflog for each ref even if one would not ordinarily be created."
msgstr "Com a opção `--create-reflog`, o 'update-ref' criará um reflog para cada \"ref\", mesmo que um não seja criado normalmente."

#. type: Plain text
#: en/git-update-ref.txt:81
#, priority:80
msgid "Quote fields containing whitespace as if they were strings in C source code; i.e., surrounded by double-quotes and with backslash escapes.  Use 40 \"0\" characters or the empty string to specify a zero value.  To specify a missing value, omit the value and its preceding SP entirely."
msgstr "Cite os campos que contenham espaços como se fossem textos em um código-fonte C; ou seja, cercado por aspas duplas e com escapes com barra invertida.  Use 40 caracteres '0' ou a sequência vazia para definir um valor zero.  Para definir um valor ausente, omita completamente o valor do seu SP anterior."

#. type: Plain text
#: en/git-update-ref.txt:84
#, priority:80
msgid "Alternatively, use `-z` to specify in NUL-terminated format, without quoting:"
msgstr "Como alternativa, utilize a opção `-z` para definir no formato terminado por `NUL`, sem citar:"

#. type: Plain text
#: en/git-update-ref.txt:94
#, no-wrap, priority:80
msgid ""
"\tupdate SP <ref> NUL <newvalue> NUL [<oldvalue>] NUL\n"
"\tcreate SP <ref> NUL <newvalue> NUL\n"
"\tdelete SP <ref> NUL [<oldvalue>] NUL\n"
"\tverify SP <ref> NUL [<oldvalue>] NUL\n"
"\toption SP <opt> NUL\n"
"\tstart NUL\n"
"\tprepare NUL\n"
"\tcommit NUL\n"
"\tabort NUL\n"
msgstr ""
"\tupdate SP <ref> NUL <novovalor> NUL [<valorantigo>] NUL\n"
"\tcreate SP <ref> NUL <novovalor> NUL\n"
"\tdelete SP <ref> NUL [<valorantigo>] NUL\n"
"\tverify SP <ref> NUL [<valorantigo>] NUL\n"
"\toption SP <opt> NUL\n"
"\tstart NUL\n"
"\tprepare NUL\n"
"\tcommit NUL\n"
"\tabort NUL\n"

#. type: Plain text
#: en/git-update-ref.txt:97
#, priority:80
msgid "In this format, use 40 \"0\" to specify a zero value, and use the empty string to specify a missing value."
msgstr "Neste formato, utilize 40 '0' para definir um valor zero e utilize texto cazio para definir um valor ausente."

#. type: Plain text
#: en/git-update-ref.txt:101
#, priority:80
msgid "In either format, values can be specified in any form that Git recognizes as an object name.  Commands in any other format or a repeated <ref> produce an error.  Command meanings are:"
msgstr "Em qualquer formato, os valores podem ser definidos de qualquer forma que o Git reconheça como um nome de objeto.  Os comandos em qualquer outro formato ou em uma <ref> repetida geram um erro.  Os significados dos comandos são:"

#. type: Plain text
#: en/git-update-ref.txt:107
#, priority:80
msgid "Set <ref> to <newvalue> after verifying <oldvalue>, if given.  Specify a zero <newvalue> to ensure the ref does not exist after the update and/or a zero <oldvalue> to make sure the ref does not exist before the update."
msgstr "Defina uma <ref> para um <novovalor> após a verificação do <valorantigo>, caso seja informado.  Defina um <novovalor> como zero para garantir que a \"ref\" não exista após a atualização e/ou um <valorantigo> como zero para garantir que a \"ref\" não exista antes da atualização."

#. type: Plain text
#: en/git-update-ref.txt:111
#, priority:80
msgid "Create <ref> with <newvalue> after verifying it does not exist.  The given <newvalue> may not be zero."
msgstr "Crie uma `<ref>` com `<newvalue>` após verificar se ele já não existe.  O `<newvalue>` informado, não pode ser zero."

#. type: Labeled list
#: en/git-update-ref.txt:112
#, ignore-same, no-wrap, priority:80
msgid "delete"
msgstr "delete"

#. type: Plain text
#: en/git-update-ref.txt:115
#, priority:80
msgid "Delete <ref> after verifying it exists with <oldvalue>, if given.  If given, <oldvalue> may not be zero."
msgstr "Caso seja informado, exclua a <ref> após verificar se ele existe com <oldvalue>.  Caso seja, o <oldvalue> não pode ser zero."

#. type: Labeled list
#: en/git-update-ref.txt:116
#, ignore-same, no-wrap, priority:80
msgid "verify"
msgstr "verify"

#. type: Plain text
#: en/git-update-ref.txt:119
#, priority:80
msgid "Verify <ref> against <oldvalue> but do not change it.  If <oldvalue> is zero or missing, the ref must not exist."
msgstr "Verifique a `<ref>` em relação ao `<valorantigo>`, mas não o altere.  Caso o `<valorantigo>` seja zero ou ausente, a \"ref\" não deve existir."

#. type: Labeled list
#: en/git-update-ref.txt:120
#, ignore-same, no-wrap, priority:80
msgid "option"
msgstr "option"

#. type: Plain text
#: en/git-update-ref.txt:124
#, priority:80
msgid "Modify behavior of the next command naming a <ref>.  The only valid option is `no-deref` to avoid dereferencing a symbolic ref."
msgstr "Modifique o comportamento do próximo comando nomeando uma <ref>.  A única opção válida é `no-deref` para evitar a perda da referência de uma \"ref\" simbólica."

#. type: Plain text
#: en/git-update-ref.txt:130
#, priority:80
msgid "Start a transaction. In contrast to a non-transactional session, a transaction will automatically abort if the session ends without an explicit commit. This command may create a new empty transaction when the current one has been committed or aborted already."
msgstr "Inicie uma transação. Em contraste com uma sessão não transacionada, uma transação irá interromper automaticamente caso a cessão se encerre sem um commit explícito. Este comando pode criar uma nova transação vazia quando o commit tenha sido feito no atual ou já tenha sido cancelado."

#. type: Labeled list
#: en/git-update-ref.txt:131
#, no-wrap, priority:80
msgid "prepare"
msgstr "prepare"

#. type: Plain text
#: en/git-update-ref.txt:135
#, priority:80
msgid "Prepare to commit the transaction. This will create lock files for all queued reference updates. If one reference could not be locked, the transaction will be aborted."
msgstr "Prepare para transacionar o commit. Isto criará uma trava nos arquivos em todas as atualizações das referências que estiverem na fila. No caso de uma referência não puder ser travada, a transação irá ser encerrada."

#. type: Plain text
#: en/git-update-ref.txt:139
#, priority:80
msgid "Commit all reference updates queued for the transaction, ending the transaction."
msgstr "Faça o commit de todas as atualizações da referência na fila para a transação, finalizando a mesma."

#. type: Labeled list
#: en/git-update-ref.txt:140
#, no-wrap, priority:80
msgid "abort"
msgstr "abort"

#. type: Plain text
#: en/git-update-ref.txt:143
#, priority:80
msgid "Abort the transaction, releasing all locks if the transaction is in prepared state."
msgstr "Interrompa a transação, liberando todos os bloqueios caso a transação esteja na condição de preparado."

#. type: Plain text
#: en/git-update-ref.txt:149
#, priority:80
msgid "If all <ref>s can be locked with matching <oldvalue>s simultaneously, all modifications are performed.  Otherwise, no modifications are performed.  Note that while each individual <ref> is updated or deleted atomically, a concurrent reader may still see a subset of the modifications."
msgstr "Caso todos as <ref>s puderem ser bloqueadas com <valorantigo> de forma simultânea, todas as alterações serão aplicadas.  Caso contrário, nada será feito.  Observe que, enquanto cada <ref> individual é atualizada ou excluída atomicamente, um leitor simultâneo ainda pode ver um subconjunto das alterações."

#. type: Title -
#: en/git-update-ref.txt:151
#, no-wrap, priority:80
msgid "LOGGING UPDATES"
msgstr "ATUALIZAÇÕES DOS REGISTROS DOS EVENTOS"

#. type: Plain text
#: en/git-update-ref.txt:159
#, priority:80
msgid "If config parameter \"core.logAllRefUpdates\" is true and the ref is one under \"refs/heads/\", \"refs/remotes/\", \"refs/notes/\", or a pseudoref like HEAD or ORIG_HEAD; or the file \"$GIT_DIR/logs/<ref>\" exists then `git update-ref` will append a line to the log file \"$GIT_DIR/logs/<ref>\" (dereferencing all symbolic refs before creating the log name) describing the change in ref value.  Log lines are formatted as:"
msgstr "Caso o parâmetro de configuração \"core.logAllRefUpdates\" seja verdadeiro e a \"ref\" for uma no \"refs/heads/\", \"refs/remotes/\", \"refs/notes/\" ou um pseudo ref como `HEAD` ou `ORIG HEAD`; ou caso o arquivo `$GIT_DIR/logs/<ref>` existir, o comando `git update-ref` anexará uma linha ao arquivo do registor log `$GIT_DIR/logs/<ref>` (removendo a referência de todas as referências simbólicas antes de criar o nome do registro log) descrevendo a alteração no valor da ref.  As linhas do registro log são formatadas como:"

#. type: Plain text
#: en/git-update-ref.txt:161
#, no-wrap, priority:80
msgid "    oldsha1 SP newsha1 SP committer LF\n"
msgstr "    oldsha1 SP newsha1 SP committer LF\n"

#. type: Plain text
#: en/git-update-ref.txt:166
#, priority:80
msgid "Where \"oldsha1\" is the 40 character hexadecimal value previously stored in <ref>, \"newsha1\" is the 40 character hexadecimal value of <newvalue> and \"committer\" is the committer's name, email address and date in the standard Git committer ident format."
msgstr "Onde \"sha1antigo\" é o valor hexadecimal com 40 caracteres armazenado anteriormente na <ref>, o \"novosha1\" é o valor hexadecimal com 40 caracteres do <novovalor> e \"committer\" é o nome de quem fez o commit, o endereço de e-mail e a data no formato Git predefinido da identificação de quem faz o commit."

#. type: Plain text
#: en/git-update-ref.txt:168
#, priority:80
msgid "Optionally with -m:"
msgstr "Opcionalmente com `-m`:"

#. type: Plain text
#: en/git-update-ref.txt:170
#, no-wrap, priority:80
msgid "    oldsha1 SP newsha1 SP committer TAB message LF\n"
msgstr "    oldsha1 SP newsha1 SP committer TAB message LF\n"

#. type: Plain text
#: en/git-update-ref.txt:173
#, priority:80
msgid "Where all fields are as described above and \"message\" is the value supplied to the -m option."
msgstr "Onde todos os campos são como descritos acima e a \"mensagem\" é o valor informado para a opção '-m'."

#. type: Plain text
#: en/git-update-ref.txt:177
#, priority:80
msgid "An update will fail (without changing <ref>) if the current user is unable to create a new log file, append to the existing log file or does not have committer information available."
msgstr "Uma atualização irá falhar (sem alterar a <ref>) caso o usuário atual não consiga criar um novo arquivo de registro log, anexá-lo ao arquivo log já existente ou caso não haja informações disponíveis."

#. type: Title =
#: en/git-update-server-info.txt:2
#, ignore-same, no-wrap, priority:90
msgid "git-update-server-info(1)"
msgstr "git-update-server-info(1)"

#. type: Plain text
#: en/git-update-server-info.txt:7
#, priority:90
msgid "git-update-server-info - Update auxiliary info file to help dumb servers"
msgstr "git-update-server-info - Atualize o arquivo de informações auxiliares para ajudar os servidores burros"

#. type: Plain text
#: en/git-update-server-info.txt:13
#, no-wrap, priority:90
msgid "'git update-server-info'\n"
msgstr "'git update-server-info'\n"

#. type: Plain text
#: en/git-update-server-info.txt:21
#, priority:90
msgid "A dumb server that does not do on-the-fly pack generations must have some auxiliary information files in $GIT_DIR/info and $GIT_OBJECT_DIRECTORY/info directories to help clients discover what references and packs the server has.  This command generates such auxiliary files."
msgstr "Um servidor burro que não gera pacotes em tempo real deve ter alguns arquivos das informações auxiliares nos diretórios `$GIT_DIR/info` e `$GIT_OBJECT_DIRECTORY/info` para ajudar os clientes a descobrir quais as referências e os pacotes o servidor possui.  Este comando gera estes arquivos auxiliares."

#. type: Plain text
#: en/git-update-server-info.txt:28
#, priority:90
msgid "Currently the command updates the following files.  Please see linkgit:gitrepository-layout[5] for description of what they are for:"
msgstr "Atualmente, o comando atualiza os seguintes arquivos.  Para obter uma descrição da sua utilidade, consulte linkgit:gitrepository-layout[5]:"

#. type: Plain text
#: en/git-update-server-info.txt:30
#, priority:90
msgid "objects/info/packs"
msgstr "objects/info/packs"

#. type: Plain text
#: en/git-update-server-info.txt:32
#, priority:90
msgid "info/refs"
msgstr "info/refs"

#. type: Title =
#: en/git-upload-archive.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-upload-archive(1)"
msgstr "git-upload-archive(1)"

#. type: Plain text
#: en/git-upload-archive.txt:7
#, priority:100
msgid "git-upload-archive - Send archive back to git-archive"
msgstr "git-upload-archive - Envia um arquivo de volta para o git-archive"

#. type: Plain text
#: en/git-upload-archive.txt:13
#, no-wrap, priority:100
msgid "'git upload-archive' <directory>\n"
msgstr "'git upload-archive' <diretório>\n"

#. type: Plain text
#: en/git-upload-archive.txt:18
#, priority:100
msgid "Invoked by 'git archive --remote' and sends a generated archive to the other end over the Git protocol."
msgstr "Chamado através do comando `git archive --remote` e envia um arquivo gerado para a outra extremidade através do protocolo Git."

#. type: Plain text
#: en/git-upload-archive.txt:22
#, priority:100
msgid "This command is usually not invoked directly by the end user.  The UI for the protocol is on the 'git archive' side, and the program pair is meant to be used to get an archive from a remote repository."
msgstr "Este comando geralmente não é invocado diretamente pelo usuário final.  The UI for the protocol is on the 'git archive' side, and the program pair is meant to be used to get an archive from a remote repository."

#. type: Title -
#: en/git-upload-archive.txt:24 en/transfer-data-leaks.txt:2
#, no-wrap, priority:220
msgid "SECURITY"
msgstr "SEGURANÇA"

#. type: Plain text
#: en/git-upload-archive.txt:32
#, priority:100
msgid "In order to protect the privacy of objects that have been removed from history but may not yet have been pruned, `git-upload-archive` avoids serving archives for commits and trees that are not reachable from the repository's refs.  However, because calculating object reachability is computationally expensive, `git-upload-archive` implements a stricter but easier-to-check set of rules:"
msgstr "Para proteger a privacidade dos objetos que foram removidos da história, mas que ainda não foram removidos, o comando `git-upload-archive` evita servir os arquivos para os commits e as árvores que não são acessíveis a partir das referências do repositório.  No entanto, como calcular a acessibilidade de objetos é computacionalmente dispendioso, o comando `git-upload-archive` implementa um conjunto de regras mais rígidas, porém mais fácil de verificar:"

#. type: Plain text
#: en/git-upload-archive.txt:35
#, priority:100
msgid "Clients may request a commit or tree that is pointed to directly by a ref. E.g., `git archive --remote=origin v1.0`."
msgstr "Os clientes podem solicitar um commit ou uma árvore que aponte diretamente por uma referência. `git archive --remote=origin v1.0` por exemplo."

#. type: Plain text
#: en/git-upload-archive.txt:38
#, priority:100
msgid "Clients may request a sub-tree within a commit or tree using the `ref:path` syntax. E.g., `git archive --remote=origin v1.0:Documentation`."
msgstr "Os clientes podem solicitar uma subárvore dentro de um commit ou uma árvore utilizando a sintaxe `ref:path`. Como por exemplo, `git archive --remote=origin v1.0:Documentation`."

#. type: Plain text
#: en/git-upload-archive.txt:43
#, priority:100
msgid "Clients may _not_ use other sha1 expressions, even if the end result is reachable. E.g., neither a relative commit like `master^` nor a literal sha1 like `abcd1234` is allowed, even if the result is reachable from the refs."
msgstr "Os clientes não podem utilizar outras expressões SHA-1, mesmo que o resultado final seja acessível. Por exemplo, nem um commit que tenha relação com `master^` nem um sha1 literal como `abcd1234` são permitidos, mesmo que o resultado seja acessível através das referências."

#. type: Plain text
#: en/git-upload-archive.txt:48
#, priority:100
msgid "Note that rule 3 disallows many cases that do not have any privacy implications. These rules are subject to change in future versions of git, and the server accessed by `git archive --remote` may or may not follow these exact rules."
msgstr "Observe que a regra 3 não permitem muitos casos onde não tenham implicações de privacidade. Essas regras estão sujeitas a alterações nas versões futuras do git, e o servidor acessado pelo `git archive --remote` pode ou não seguir exatamente estas regras."

#. type: Plain text
#: en/git-upload-archive.txt:54
#, priority:100
msgid "If the config option `uploadArchive.allowUnreachable` is true, these rules are ignored, and clients may use arbitrary sha1 expressions.  This is useful if you do not care about the privacy of unreachable objects, or if your object database is already publicly available for access via non-smart-http."
msgstr "Caso a opção de configuração `uploadArchive.allowUnreachable` seja verdadeira, estas regras serão ignoradas e os clientes poderão utilizar expressões SHA-1 de forma arbitrária.  É útil caso você não se importe com a privacidade dos objetos inacessíveis ou se o banco de dados dos objetos já esteja disponível publicamente para acesso através do http não inteligente."

#. type: Plain text
#: en/git-upload-archive.txt:59
#, priority:100
msgid "The repository to get a tar archive from."
msgstr "O repositório para onde obter um arquivo tar."

#. type: Title =
#: en/git-upload-pack.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-upload-pack(1)"
msgstr "git-upload-pack(1)"

#. type: Plain text
#: en/git-upload-pack.txt:7
#, priority:100
msgid "git-upload-pack - Send objects packed back to git-fetch-pack"
msgstr "git-upload-pack - Envia os objetos compactados de volta para o git-fetch-pack"

#. type: Plain text
#: en/git-upload-pack.txt:14
#, no-wrap, priority:100
msgid ""
"'git-upload-pack' [--[no-]strict] [--timeout=<n>] [--stateless-rpc]\n"
"\t\t  [--advertise-refs] <directory>\n"
msgstr ""
"'git-upload-pack' [--[no-]strict] [--timeout=<n>] [--stateless-rpc]\n"
"\t\t  [--advertise-refs] <diretório>\n"

#. type: Plain text
#: en/git-upload-pack.txt:19
#, priority:100
msgid "Invoked by 'git fetch-pack', learns what objects the other side is missing, and sends them after packing."
msgstr "Chamado através do comando 'git fetch-pack', aprende quais os objetos faltam no outro lado e os envia após empacotá-los."

#. type: Plain text
#: en/git-upload-pack.txt:24
#, priority:100
msgid "This command is usually not invoked directly by the end user.  The UI for the protocol is on the 'git fetch-pack' side, and the program pair is meant to be used to pull updates from a remote repository.  For push operations, see 'git send-pack'."
msgstr "Este comando geralmente não é invocado diretamente pelo usuário final.  The UI for the protocol is on the 'git fetch-pack' side, and the program pair is meant to be used to pull updates from a remote repository.  For push operations, see 'git send-pack'."

#. type: Labeled list
#: en/git-upload-pack.txt:28
#, ignore-same, no-wrap, priority:100
msgid "--[no-]strict"
msgstr "--[no-]strict"

#. type: Plain text
#: en/git-upload-pack.txt:30
#, priority:100
msgid "Do not try <directory>/.git/ if <directory> is no Git directory."
msgstr "Não tente <diretório>/.git/ caso o <diretório> não seja um diretório Git."

#. type: Plain text
#: en/git-upload-pack.txt:33
#, priority:100
msgid "Interrupt transfer after <n> seconds of inactivity."
msgstr "Interrompa a transferência após <n> segundos de inatividade."

#. type: Labeled list
#: en/git-upload-pack.txt:34
#, ignore-same, no-wrap, priority:100
msgid "--stateless-rpc"
msgstr "--stateless-rpc"

#. type: Plain text
#: en/git-upload-pack.txt:38
#, priority:100
msgid "Perform only a single read-write cycle with stdin and stdout.  This fits with the HTTP POST request processing model where a program may read the request, write a response, and must exit."
msgstr "Execute apenas um único ciclo de gravação e leitura com o stdin e o stdout.  Isso se ajusta ao modelo de processamento de solicitação HTTP POST, onde um programa pode ler a solicitação, gravar uma resposta e deve encerrar."

#. type: Plain text
#: en/git-upload-pack.txt:46
#, fuzzy, priority:100
#| msgid "Used by linkgit:git-http-backend[1] to serve up `$GIT_URL/info/refs?service=git-upload-pack` requests. See \"Smart Clients\" in link:technical/http-protocol.html[the HTTP transfer protocols] documentation and \"HTTP Transport\" in link:technical/protocol-v2.html[the Git Wire Protocol, Version 2] documentation. Also understood by linkgit:git-receive-pack[1]."
msgid "Used by linkgit:git-http-backend[1] to serve up `$GIT_URL/info/refs?service=git-upload-pack` requests. See \"Smart Clients\" in linkgit:gitprotocol-http[5] and \"HTTP Transport\" in the linkgit:gitprotocol-v2[5] documentation. Also understood by linkgit:git-receive-pack[1]."
msgstr "Usado por linkgit:git-http-backend[1] para atender às solicitações `$GIT_URL/info/refs?service=git-upload-pack`. Consulte \"Clientes Inteligentes\" no link:technical/http-protocol.html[os protocolos de transferência HTTP] e \"Transporte HTTP\" no link:technical/protocol-v2.html[o Protocolo Git Wire, Versão 2]. Também é entendido por linkgit:git-receive-pack[1]."

#. type: Plain text
#: en/git-upload-pack.txt:49
#, priority:100
msgid "The repository to sync from."
msgstr "O repositório de onde a sincronizaremos."

#. type: Plain text
#: en/git-upload-pack.txt:57
#, priority:100
msgid "Internal variable used for handshaking the wire protocol. Server admins may need to configure some transports to allow this variable to be passed. See the discussion in linkgit:git[1]."
msgstr "Variável interna usada para o aperto de mão (handshaking) no protocolo \"wire\". Os administradores do servidor podem precisar configurar alguns transportes para permitir que essa variável seja aprovada. Consulte linkgit:git[1]."

#. type: Title =
#: en/git-var.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-var(1)"
msgstr "git-var(1)"

#. type: Plain text
#: en/git-var.txt:7
#, priority:100
msgid "git-var - Show a Git logical variable"
msgstr "git-var - Exibe a variável lógica do Git"

#. type: Plain text
#: en/git-var.txt:13
#, no-wrap, priority:100
msgid "'git var' ( -l | <variable> )\n"
msgstr "'git var' ( -l | <variável> )\n"

#. type: Plain text
#: en/git-var.txt:17
#, priority:100
msgid "Prints a Git logical variable."
msgstr "Imprime a variável lógica do Git."

#. type: Plain text
#: en/git-var.txt:25
#, priority:100
msgid "Cause the logical variables to be listed. In addition, all the variables of the Git configuration file .git/config are listed as well. (However, the configuration variables listing functionality is deprecated in favor of `git config -l`.)"
msgstr "Faça com que as variáveis lógicas sejam listadas. Além disso, todas as variáveis do arquivo de configuração do Git '.git/config' também sejam listadas. (No entanto, as variáveis de configuração que listam a funcionalidade, estão obsoletas em favor do `git config -l`.)"

#. type: Plain text
#: en/git-var.txt:30
#, no-wrap, priority:100
msgid ""
"\t$ git var GIT_AUTHOR_IDENT\n"
"\tEric W. Biederman <ebiederm@lnxi.com> 1121223278 -0600\n"
msgstr ""
"\t$ git var GIT_AUTHOR_IDENT\n"
"\tEric W. Biederman <ebiederm@lnxi.com> 1121223278 -0600\n"

#. type: Title -
#: en/git-var.txt:33
#, no-wrap, priority:100
msgid "VARIABLES"
msgstr "VARIÁVEIS"

#. type: Labeled list
#: en/git-var.txt:34
#, ignore-same, no-wrap, priority:100
msgid "GIT_AUTHOR_IDENT"
msgstr "GIT_AUTHOR_IDENT"

#. type: Plain text
#: en/git-var.txt:36
#, priority:100
msgid "The author of a piece of code."
msgstr "O autor de um pedaço de código."

#. type: Labeled list
#: en/git-var.txt:37
#, ignore-same, no-wrap, priority:100
msgid "GIT_COMMITTER_IDENT"
msgstr "GIT_COMMITTER_IDENT"

#. type: Plain text
#: en/git-var.txt:39
#, priority:100
msgid "The person who put a piece of code into Git."
msgstr "A pessoa que inseriu um código no Git."

#. type: Labeled list
#: en/git-var.txt:40
#, ignore-same, no-wrap, priority:100
msgid "GIT_EDITOR"
msgstr "GIT_EDITOR"

#. type: Plain text
#: en/git-var.txt:48
#, priority:100
msgid "Text editor for use by Git commands.  The value is meant to be interpreted by the shell when it is used.  Examples: `~/bin/vi`, `$SOME_ENVIRONMENT_VARIABLE`, `\"C:\\Program Files\\Vim\\gvim.exe\" --nofork`.  The order of preference is the `$GIT_EDITOR` environment variable, then `core.editor` configuration, then `$VISUAL`, then `$EDITOR`, and then the default chosen at compile time, which is usually 'vi'."
msgstr "O editor de texto para ser utilizado pelos comandos Git.  Quando for utilizado, o valor deve ser interpretado pelo shell.  Exemplos: `~/bin/vi`, `$ALGUMA_VÁRIAVEL_DO_AMBIENTE`, `\"C:\\Arquivo de Programas\\Vim\\gvim.exe\" --nofork`.  A ordem preferencial é a variável de ambiente `$GIT_EDITOR`, depois a configuração do `core.pager`, seguido do `$VISUAL`, então `$EDITOR`, e a predefinição escolhida no momento da compilação (geralmente 'vi')."

#. type: Plain text
#: en/git-var.txt:50
#, no-wrap, priority:100
msgid "    The build you are using chose '{git-default-editor}' as the default.\n"
msgstr "    A construção que você está utilizando escolheu '{git-default-editor}' como o predefinido.\n"

#. type: Labeled list
#: en/git-var.txt:52
#, ignore-same, no-wrap, priority:100
msgid "GIT_PAGER"
msgstr "GIT_PAGER"

#. type: Plain text
#: en/git-var.txt:58
#, priority:100
msgid "Text viewer for use by Git commands (e.g., 'less').  The value is meant to be interpreted by the shell.  The order of preference is the `$GIT_PAGER` environment variable, then `core.pager` configuration, then `$PAGER`, and then the default chosen at compile time (usually 'less')."
msgstr "O editor de texto para ser utilizado pelos comandos Git (por exemplo, 'less').  Quando for utilizado, o valor deve ser interpretado pelo shell.  A ordem de preferência é a variável de ambiente `$GIT_PAGER`, depois a configuração do` core.pager`, depois o `$PAGER` e o padrão selecionado no momento da compilação (geralmente 'less')."

#. type: Plain text
#: en/git-var.txt:60
#, no-wrap, priority:100
msgid "    The build you are using chose '{git-default-pager}' as the default.\n"
msgstr "    A construção que você está usando escolheu '{git-default-pager}' como a sua predefinição.\n"

#. type: Labeled list
#: en/git-var.txt:62
#, ignore-same, no-wrap, priority:100
msgid "GIT_DEFAULT_BRANCH"
msgstr "GIT_DEFAULT_BRANCH"

#. type: Plain text
#: en/git-var.txt:64
#, priority:100
msgid "The name of the first branch created in newly initialized repositories."
msgstr "O nome do primeiro ramo criado nos repositórios que foram recentemente inicializados."

#. type: Plain text
#: en/git-var.txt:70
#, ignore-same, priority:100
msgid "linkgit:git-commit-tree[1] linkgit:git-tag[1] linkgit:git-config[1]"
msgstr "linkgit:git-commit-tree[1] linkgit:git-tag[1] linkgit:git-config[1]"

#. type: Title =
#: en/git-verify-commit.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-verify-commit(1)"
msgstr "git-verify-commit(1)"

#. type: Plain text
#: en/git-verify-commit.txt:7
#, priority:100
msgid "git-verify-commit - Check the GPG signature of commits"
msgstr "git-verify-commit - Verifique a assinatura GPG dos commits"

#. type: Plain text
#: en/git-verify-commit.txt:12
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git verify-commit' <commit>...\n"
msgstr "'git verify-commit' <commit>...\n"

#. type: Plain text
#: en/git-verify-commit.txt:16
#, priority:100
msgid "Validates the GPG signature created by 'git commit -S'."
msgstr "Valida a assinatura GPG criada por 'git commit -S'."

#. type: Plain text
#: en/git-verify-commit.txt:22 en/git-verify-tag.txt:22
#, priority:100
msgid "Print the raw gpg status output to standard error instead of the normal human-readable output."
msgstr "Imprima a condição bruta do gpg na saída de erro predefinida em vez de uma saída legível para as pessoas."

#. type: Plain text
#: en/git-verify-commit.txt:26
#, priority:100
msgid "Print the contents of the commit object before validating it."
msgstr "Imprima o conteúdo do objeto commit antes de validá-lo."

#. type: Plain text
#: en/git-verify-commit.txt:29
#, priority:100
msgid "SHA-1 identifiers of Git commit objects."
msgstr "Os identificadores SHA-1 dos objetos do commit do Git."

#. type: Title =
#: en/git-verify-pack.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-verify-pack(1)"
msgstr "git-verify-pack(1)"

#. type: Plain text
#: en/git-verify-pack.txt:7
#, priority:80
msgid "git-verify-pack - Validate packed Git archive files"
msgstr "git-verify-pack - Valide os arquivos compactados do Git"

#. type: Plain text
#: en/git-verify-pack.txt:13
#, ignore-ellipsis, no-wrap, priority:80
msgid "'git verify-pack' [-v|--verbose] [-s|--stat-only] [--] <pack>.idx ...\n"
msgstr "'git verify-pack' [-v|--verbose] [-s|--stat-only] [--] <pacote>.idx ...\n"

#. type: Plain text
#: en/git-verify-pack.txt:20
#, priority:80
msgid "Reads given idx file for packed Git archive created with the 'git pack-objects' command and verifies idx file and the corresponding pack file."
msgstr "Lê o arquivo idx compactado com o Git que foi criado com o comando 'git pack-objects' e verifica o arquivo idx e o seu respectivo arquivo de pacote."

#. type: Labeled list
#: en/git-verify-pack.txt:23
#, ignore-ellipsis, no-wrap, priority:80
msgid "<pack>.idx ..."
msgstr "<pack>.idx ..."

#. type: Plain text
#: en/git-verify-pack.txt:25
#, priority:80
msgid "The idx files to verify."
msgstr "Os arquivos idx que serão verificados."

#. type: Plain text
#: en/git-verify-pack.txt:30
#, priority:80
msgid "After verifying the pack, show list of objects contained in the pack and a histogram of delta chain length."
msgstr "Após a verificação do pacote, exiba a lista dos objetos existentes no pacote e um histograma do comprimento da cadeia delta."

#. type: Labeled list
#: en/git-verify-pack.txt:32
#, ignore-same, no-wrap, priority:80
msgid "--stat-only"
msgstr "--stat-only"

#. type: Plain text
#: en/git-verify-pack.txt:35
#, priority:80
msgid "Do not verify the pack contents; only show the histogram of delta chain length.  With `--verbose`, list of objects is also shown."
msgstr "Não verifique o conteúdo do pacote; exiba apenas o histograma do comprimento da cadeia delta.  Com a opção `--verbose`, a lista dos objetos também é exibida."

#. type: Title -
#: en/git-verify-pack.txt:40
#, no-wrap, priority:80
msgid "OUTPUT FORMAT"
msgstr "FORMATO DE SAÍDA"

#. type: Plain text
#: en/git-verify-pack.txt:42
#, priority:80
msgid "When specifying the -v option the format used is:"
msgstr "Ao definir a opção '-v', o formato utilizado é:"

#. type: Plain text
#: en/git-verify-pack.txt:44
#, no-wrap, priority:80
msgid "\tSHA-1 type size size-in-packfile offset-in-packfile\n"
msgstr "\tSHA-1 type size size-in-packfile offset-in-packfile\n"

#. type: Plain text
#: en/git-verify-pack.txt:46
#, priority:80
msgid "for objects that are not deltified in the pack, and"
msgstr "para os objetos que não sejam \"deltificados\" no pacote e"

#. type: Plain text
#: en/git-verify-pack.txt:48
#, no-wrap, priority:80
msgid "\tSHA-1 type size size-in-packfile offset-in-packfile depth base-SHA-1\n"
msgstr "\tSHA-1 type size size-in-packfile offset-in-packfile depth base-SHA-1\n"

#. type: Plain text
#: en/git-verify-pack.txt:50
#, priority:80
msgid "for objects that are deltified."
msgstr "para os objetos que são."

#. type: Title =
#: en/git-verify-tag.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-verify-tag(1)"
msgstr "git-verify-tag(1)"

#. type: Plain text
#: en/git-verify-tag.txt:7
#, priority:100
msgid "git-verify-tag - Check the GPG signature of tags"
msgstr "git-verify-tag - Verifique a assinatura GPG das tags"

#. type: Plain text
#: en/git-verify-tag.txt:12
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git verify-tag' [--format=<format>] <tag>...\n"
msgstr "'git verify-tag' [--format=<formato>] <tag>...\n"

#. type: Plain text
#: en/git-verify-tag.txt:16
#, priority:100
msgid "Validates the gpg signature created by 'git tag'."
msgstr "Valida a assinatura gpg criada através do 'git tag'."

#. type: Plain text
#: en/git-verify-tag.txt:26
#, priority:100
msgid "Print the contents of the tag object before validating it."
msgstr "Imprima o conteúdo do objeto commit antes de validá-lo."

#. type: Labeled list
#: en/git-verify-tag.txt:27
#, ignore-ellipsis, no-wrap, priority:100
msgid "<tag>..."
msgstr "<tag>..."

#. type: Plain text
#: en/git-verify-tag.txt:29
#, priority:100
msgid "SHA-1 identifiers of Git tag objects."
msgstr "Identificadores SHA-1 da tag dos objetos do Git."

#. type: Title =
#: en/git-web--browse.txt:2
#, no-wrap, priority:100
msgid "git-web{litdd}browse(1)"
msgstr "git-web{litdd}browse(1)"

#. type: Plain text
#: en/git-web--browse.txt:7
#, priority:100
msgid "git-web--browse - Git helper script to launch a web browser"
msgstr "git-web--browse - Script assistente do Git para iniciar um navegador da web"

#. type: Plain text
#: en/git-web--browse.txt:12
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git web{litdd}browse' [<options>] (<URL>|<file>)...\n"
msgstr "'git web{litdd}browse' [<opções>] (<URL>|<arquivo>)...\n"

#. type: Plain text
#: en/git-web--browse.txt:19
#, priority:100
msgid "This script tries, as much as possible, to display the URLs and FILEs that are passed as arguments, as HTML pages in new tabs on an already opened web browser."
msgstr "Esse script tenta, na medida do possível, exibir as URLs e os arquivos passados como argumentos, como páginas HTML nas novas guias em um navegador da web já aberto."

#. type: Plain text
#: en/git-web--browse.txt:21
#, priority:100
msgid "The following browsers (or commands) are currently supported:"
msgstr "Atualmente, os seguintes navegadores (ou comandos) são compatíveis:"

#. type: Plain text
#: en/git-web--browse.txt:23
#, priority:100
msgid "firefox (this is the default under X Window when not using KDE)"
msgstr "firefox (este é o padrão no X Window quando não estiver usando o KDE)"

#. type: Plain text
#: en/git-web--browse.txt:24
#, priority:100
msgid "iceweasel"
msgstr "iceweasel"

#. type: Plain text
#: en/git-web--browse.txt:25
#, priority:100
msgid "seamonkey"
msgstr "seamonkey"

#. type: Plain text
#: en/git-web--browse.txt:26
#, priority:100
msgid "iceape"
msgstr "iceape"

#. type: Plain text
#: en/git-web--browse.txt:27
#, priority:100
msgid "chromium (also supported as chromium-browser)"
msgstr "chromium (também é compatível com o navegador chromium)"

#. type: Plain text
#: en/git-web--browse.txt:28
#, priority:100
msgid "google-chrome (also supported as chrome)"
msgstr "google-chrome (o chrome também é compatível)"

#. type: Plain text
#: en/git-web--browse.txt:29
#, priority:100
msgid "konqueror (this is the default under KDE, see 'Note about konqueror' below)"
msgstr "konqueror (este é o predefinido do KDE, consulte 'Uma observação sobre o konqueror' abaixo)"

#. type: Plain text
#: en/git-web--browse.txt:30
#, priority:100
msgid "opera"
msgstr "opera"

#. type: Plain text
#: en/git-web--browse.txt:31
#, priority:100
msgid "w3m (this is the default outside graphical environments)"
msgstr "w3m (este é o predefinido fora do ambiente grafo)"

#. type: Plain text
#: en/git-web--browse.txt:32
#, priority:100
msgid "elinks"
msgstr "elinks"

#. type: Plain text
#: en/git-web--browse.txt:33
#, priority:100
msgid "links"
msgstr "links"

#. type: Plain text
#: en/git-web--browse.txt:34
#, priority:100
msgid "lynx"
msgstr "lynx"

#. type: Plain text
#: en/git-web--browse.txt:35
#, priority:100
msgid "dillo"
msgstr "dillo"

#. type: Plain text
#: en/git-web--browse.txt:36
#, priority:100
msgid "open (this is the default under Mac OS X GUI)"
msgstr "open (este é o predefinido no Mac OS X GUI)"

#. type: Plain text
#: en/git-web--browse.txt:37
#, priority:100
msgid "start (this is the default under MinGW)"
msgstr "start (este é o predefinido no MinGW)"

#. type: Plain text
#: en/git-web--browse.txt:38
#, priority:100
msgid "cygstart (this is the default under Cygwin)"
msgstr "cygstart (este é o predefinido no Cygwin)"

#. type: Plain text
#: en/git-web--browse.txt:39
#, priority:100
msgid "xdg-open"
msgstr "xdg-open"

#. type: Plain text
#: en/git-web--browse.txt:41
#, priority:100
msgid "Custom commands may also be specified."
msgstr "Os comandos personalizados também podem ser definidos."

#. type: Labeled list
#: en/git-web--browse.txt:44
#, no-wrap, priority:100
msgid "-b <browser>"
msgstr "-b <browser>"

#. type: Labeled list
#: en/git-web--browse.txt:45
#, no-wrap, priority:100
msgid "--browser=<browser>"
msgstr "--browser=<browser>"

#. type: Plain text
#: en/git-web--browse.txt:48
#, priority:100
msgid "Use the specified browser. It must be in the list of supported browsers."
msgstr "Use o navegador especificado. Deve estar na lista dos navegadores compatíveis."

#. type: Labeled list
#: en/git-web--browse.txt:49
#, no-wrap, priority:100
msgid "-t <browser>"
msgstr "-t <browser>"

#. type: Labeled list
#: en/git-web--browse.txt:50
#, no-wrap, priority:100
msgid "--tool=<browser>"
msgstr "--tool=<browser>"

#. type: Labeled list
#: en/git-web--browse.txt:53
#, no-wrap, priority:100
msgid "-c <conf.var>"
msgstr "-c <conf.var>"

#. type: Labeled list
#: en/git-web--browse.txt:54
#, no-wrap, priority:100
msgid "--config=<conf.var>"
msgstr "--config=<conf.var>"

#. type: Plain text
#: en/git-web--browse.txt:57
#, priority:100
msgid "CONF.VAR is looked up in the Git config files. If it's set, then its value specifies the browser that should be used."
msgstr "O `CONF.VAR` é pesquisado nos arquivos de configuração do Git. Caso esteja definido, o seu valor define o navegador que deve ser utilizado."

#. type: Title ~
#: en/git-web--browse.txt:62
#, no-wrap, priority:100
msgid "CONF.VAR (from -c option) and web.browser"
msgstr "O `CONF.VAR` (da opção -c) e `web.browser`"

#. type: Plain text
#: en/git-web--browse.txt:67
#, priority:100
msgid "The web browser can be specified using a configuration variable passed with the -c (or --config) command-line option, or the `web.browser` configuration variable if the former is not used."
msgstr "O navegador da web pode ser definido usando uma variável de configuração passada com a opção na linha de comando '-c' (ou `--config`) ou a variável de configuração `web.browser` caso a primeira não seja utilizada."

#. type: Title ~
#: en/git-web--browse.txt:69
#, no-wrap, priority:100
msgid "browser.<tool>.path"
msgstr "browser.<ferramenta>.path"

#. type: Plain text
#: en/git-web--browse.txt:76
#, priority:100
msgid "You can explicitly provide a full path to your preferred browser by setting the configuration variable `browser.<tool>.path`. For example, you can configure the absolute path to firefox by setting 'browser.firefox.path'. Otherwise, 'git web{litdd}browse' assumes the tool is available in PATH."
msgstr "Você pode informar de forma explicita um caminho completo para o seu visualizador man preferido, definindo a variável de configuração `man.<ferramenta>.path`. Como, por exemplo, você pode configurar o caminho absoluto para o firefox, configurando 'man.firefox.path'. Caso contrário, o comando 'web{litdd}browse' assume qual a ferramenta está disponível no seu `PATH`."

#. type: Title ~
#: en/git-web--browse.txt:78
#, no-wrap, priority:100
msgid "browser.<tool>.cmd"
msgstr "browser.<ferramenta>.cmd"

#. type: Plain text
#: en/git-web--browse.txt:86
#, priority:100
msgid "When the browser, specified by options or configuration variables, is not among the supported ones, then the corresponding `browser.<tool>.cmd` configuration variable will be looked up. If this variable exists then 'git web{litdd}browse' will treat the specified tool as a custom command and will use a shell eval to run the command with the URLs passed as arguments."
msgstr "Quando o navegador, informado através das opções ou das variáveis de configuração, não estiver entre os compatíveis, a variável de configuração `browser.<ferramenta>.cmd` correspondente será pesquisada. Caso esta variável exista, o comando 'git web{litdd}browse' tratará a ferramenta usada como um comando personalizado e usará um 'shell eval' para executar o comando com as URLs encaminhadas como argumentos."

#. type: Title -
#: en/git-web--browse.txt:88
#, no-wrap, priority:100
msgid "NOTE ABOUT KONQUEROR"
msgstr "NOTA SOBRE O KONQUEROR"

#. type: Plain text
#: en/git-web--browse.txt:93
#, priority:100
msgid "When 'konqueror' is specified by a command-line option or a configuration variable, we launch 'kfmclient' to try to open the HTML man page on an already opened konqueror in a new tab if possible."
msgstr "Quando o 'konqueror' é definido através da opção da linha de comando ou uma variável de configuração, iniciamos o 'kfmclient' para tentar abrir uma página do manual em HTML em uma nova guia de um konqueror já aberto, caso seja possível."

#. type: Plain text
#: en/git-web--browse.txt:97
#, priority:100
msgid "For consistency, we also try such a trick if 'browser.konqueror.path' is set to something like `A_PATH_TO/konqueror`. That means we will try to launch `A_PATH_TO/kfmclient` instead."
msgstr "Para uma maior consistência, também tentamos este truque caso 'browser.konqueror.path' esteja definido em algo como `UM_CAMINHO_PARA_O/konqueror`. Significa que em vez disso, tentaremos iniciar o `UM_CAMINHO_PARA_O/kfmclient`."

#. type: delimited block -
#: en/git-web--browse.txt:104
#, no-wrap, priority:100
msgid ""
"\t[web]\n"
"\t\tbrowser = konq\n"
msgstr ""
"\t[web]\n"
"\t\tbrowser = konq\n"

#. type: delimited block -
#: en/git-web--browse.txt:107
#, no-wrap, priority:100
msgid ""
"\t[browser \"konq\"]\n"
"\t\tcmd = A_PATH_TO/konqueror\n"
msgstr ""
"\t[browser \"konq\"]\n"
"\t\tcmd = A_PATH_TO/konqueror\n"

#. type: Title ~
#: en/git-web--browse.txt:110
#, no-wrap, priority:100
msgid "Note about git-config --global"
msgstr "Nota sobre o comando `git-config --global`"

#. type: Plain text
#: en/git-web--browse.txt:114
#, priority:100
msgid "Note that these configuration variables should probably be set using the `--global` flag, for example like this:"
msgstr "Observe que todas estas variáveis de configuração, provavelmente devem ser definidas utilizando a opção `--global`, assim por exemplo:"

#. type: delimited block -
#: en/git-web--browse.txt:117
#, no-wrap, priority:100
msgid "$ git config --global web.browser firefox\n"
msgstr "$ git config --global web.browser firefox\n"

#. type: Title =
#: en/git-whatchanged.txt:2
#, ignore-same, no-wrap, priority:100
msgid "git-whatchanged(1)"
msgstr "git-whatchanged(1)"

#. type: Plain text
#: en/git-whatchanged.txt:7
#, priority:100
msgid "git-whatchanged - Show logs with difference each commit introduces"
msgstr "git-whatchanged - Exibe os registros logs com a diferença que cada commit introduz"

#. type: Plain text
#: en/git-whatchanged.txt:13
#, ignore-ellipsis, no-wrap, priority:100
msgid "'git whatchanged' <option>...\n"
msgstr "'git whatchanged' <opção>...\n"

#. type: Plain text
#: en/git-whatchanged.txt:18
#, priority:100
msgid "Shows commit logs and diff output each commit introduces."
msgstr "Exibe os registros log do commit e saída diff que cada commit introduz."

#. type: Plain text
#: en/git-whatchanged.txt:22
#, priority:100
msgid "New users are encouraged to use linkgit:git-log[1] instead.  The `whatchanged` command is essentially the same as linkgit:git-log[1] but defaults to show the raw format diff output and to skip merges."
msgstr "Os novos usuários são encorajados a utilizar o linkgit:git-log[1].  O comando `whatchanged` é essencialmente o mesmo que linkgit:git-log[1], a predefinição retorna para exibir o \"diff\" gerado em formato bruto e para ignorar as mesclagens."

#. type: Plain text
#: en/git-whatchanged.txt:26
#, priority:100
msgid "The command is kept primarily for historical reasons; fingers of many people who learned Git long before `git log` was invented by reading Linux kernel mailing list are trained to type it."
msgstr "O comando é mantido principalmente por razões históricas; muitas pessoas que aprenderam Git bem antes do `git log` ser inventado, lendo a lista de discussão do kernel do Linux, são treinados para digitá-lo."

#. type: Labeled list
#: en/git-whatchanged.txt:30
#, no-wrap, priority:100
msgid "`git whatchanged -p v2.6.12.. include/scsi drivers/scsi`"
msgstr "`git whatchanged -p v2.6.12.. include/scsi drivers/scsi`"

#. type: Plain text
#: en/git-whatchanged.txt:34
#, priority:100
msgid "Show as patches the commits since version 'v2.6.12' that changed any file in the include/scsi or drivers/scsi subdirectories"
msgstr "Exibe como correções dos commits desde a versão 'v2.6.12' que alterou qualquer arquivo nos subdiretórios 'include/scsi' ou 'drivers/scsi'"

#. type: Labeled list
#: en/git-whatchanged.txt:35
#, no-wrap, priority:100
msgid "`git whatchanged --since=\"2 weeks ago\" -- gitk`"
msgstr "`git whatchanged --since=\"2 semanas atrás\" -- gitk`"

#. type: Plain text
#: en/git-whatchanged.txt:40
#, priority:100
msgid "Show the changes during the last two weeks to the file 'gitk'.  The \"--\" is necessary to avoid confusion with the *branch* named 'gitk'"
msgstr "Exibe as alterações nas últimas duas semanas no arquivo 'gitk'. chamado 'gitk'  O \"--\" é necessário para evitar confusão com o *ramo* chamado 'gitk'"

#. type: Title =
#: en/git-worktree.txt:2
#, ignore-same, no-wrap, priority:240
msgid "git-worktree(1)"
msgstr "git-worktree(1)"

#. type: Plain text
#: en/git-worktree.txt:7
#, priority:240
msgid "git-worktree - Manage multiple working trees"
msgstr "git-worktree - Gerencie as várias árvores de trabalho"

#. type: Plain text
#: en/git-worktree.txt:20
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"'git worktree add' [-f] [--detach] [--checkout] [--lock [--reason <string>]] [-b <new-branch>] <path> [<commit-ish>]\n"
"'git worktree list' [-v | --porcelain [-z]]\n"
"'git worktree lock' [--reason <string>] <worktree>\n"
"'git worktree move' <worktree> <new-path>\n"
"'git worktree prune' [-n] [-v] [--expire <expire>]\n"
"'git worktree remove' [-f] <worktree>\n"
"'git worktree repair' [<path>...]\n"
"'git worktree unlock' <worktree>\n"
msgstr ""
"'git worktree add' [-f] [--detach] [--checkout] [--lock [--reason <string>]] [-b <novo-ramo>] <caminho> [<commit-ish>]\n"
"'git worktree list' [-v | --porcelain] [-z]]\n"
"'git worktree lock' [--reason <texto>] <árvore de trabalho>\n"
"'git worktree move' <árvore de trabalho> <novo caminho>\n"
"'git worktree prune' [-n] [-v] [--expire <expire>]\n"
"'git worktree remove' [-f] <árvore de trabalho>\n"
"'git worktree repair' [<caminho>...]\n"
"'git worktree unlock' <árvore de trabalho>\n"

#. type: Plain text
#: en/git-worktree.txt:25
#, priority:240
msgid "Manage multiple working trees attached to the same repository."
msgstr "Gerencie várias árvores de trabalho conectadas ao mesmo repositório."

#. type: Plain text
#: en/git-worktree.txt:31
#, priority:240
msgid "A git repository can support multiple working trees, allowing you to check out more than one branch at a time.  With `git worktree add` a new working tree is associated with the repository, along with additional metadata that differentiates that working tree from others in the same repository.  The working tree, along with this metadata, is called a \"worktree\"."
msgstr "Um repositório git é compatível com várias árvores de trabalho, permitindo que você verifique mais de um ramo por vez.  Com o `git worktree add`, uma nova árvore de trabalho é associada ao repositório juntamente com os metadados adicionais que diferenciam aquela árvore de trabalho das outras no mesmo repositório. A árvore de trabalho em conjunto com esses metadados é chamada de \"worktree\" ou árvore de trabalho."

#. type: Plain text
#: en/git-worktree.txt:37
#, priority:240
msgid "This new worktree is called a \"linked worktree\" as opposed to the \"main worktree\" prepared by linkgit:git-init[1] or linkgit:git-clone[1].  A repository has one main worktree (if it's not a bare repository) and zero or more linked worktrees. When you are done with a linked worktree, remove it with `git worktree remove`."
msgstr "Esta nova árvore de trabalho é chamada de \"árvore de trabalho vinculada\" em oposição à \"principal árvore de trabalho\" preparada através do comando linkgit:git-init[1] ou linkgit:git-clone[1].  Um repositório possui uma árvore principal de trabalho (caso não seja um repositório simples) e zero ou mais árvore de trabalho vinculadas. Quando você terminar com uma árvore de trabalho vinculada, remova-a com o comando `git worktree remove`."

#. type: Plain text
#: en/git-worktree.txt:49
#, priority:240
msgid "In its simplest form, `git worktree add <path>` automatically creates a new branch whose name is the final component of `<path>`, which is convenient if you plan to work on a new topic. For instance, `git worktree add ../hotfix` creates new branch `hotfix` and checks it out at path `../hotfix`. To instead work on an existing branch in a new worktree, use `git worktree add <path> <branch>`. On the other hand, if you just plan to make some experimental changes or do testing without disturbing existing development, it is often convenient to create a 'throwaway' worktree not associated with any branch. For instance, `git worktree add -d <path>` creates a new worktree with a detached `HEAD` at the same commit as the current branch."
msgstr "Em sua forma mais simples, o comando `git worktree add <caminho>` cria automaticamente um novo ramo cujo nome é o componente final do `<caminho>`, que é conveniente caso planeje trabalhar em um novo tópico. Por exemplo, o comando `git worktree add ../hotfix` cria um novo ramo `hotfix` e elimina o caminho `../ hotfix`. Para trabalhar num ramo existente em uma nova árvore de trabalho, use o comando `git worktree add <caminho> <ramo>`. Por outro lado, caso queira apenas planejar fazer algumas alterações experimentais ou realizar testes sem atrapalhar o desenvolvimento já existente, em geral é conveniente criar uma árvore de trabalho 'descartável' e que não seja associada com nenhum ramo. Por exemplo, o comando `git worktree add -d <caminho>` cria uma nova árvore de trabalho com um `HEAD` separado no mesmo commit do ramo atual."

#. type: Plain text
#: en/git-worktree.txt:56
#, priority:240
msgid "If a working tree is deleted without using `git worktree remove`, then its associated administrative files, which reside in the repository (see \"DETAILS\" below), will eventually be removed automatically (see `gc.worktreePruneExpire` in linkgit:git-config[1]), or you can run `git worktree prune` in the main or any linked worktree to clean up any stale administrative files."
msgstr "Caso uma árvore de trabalho seja excluída sem o a utilização do comando `git worktree remove`, os seus arquivos administrativos associados, que residam no repositório (consulte \"DETALHES\" abaixo), serão removidos automaticamente (consulte a opção de configuração `gc.worktreePruneExpire` no linkgit:git-config[1]), ou é possível executar o comando `git worktree prune` na árvore principal ou em qualquer árvore de trabalho vinculada para fazer a limpeza de quaisquer arquivos administrativos que estejam obsoletos."

#. type: Plain text
#: en/git-worktree.txt:62
#, priority:240
msgid "If the working tree for a linked worktree is stored on a portable device or network share which is not always mounted, you can prevent its administrative files from being pruned by issuing the `git worktree lock` command, optionally specifying `--reason` to explain why the worktree is locked."
msgstr "Caso uma árvore de trabalho vinculada estiver armazenada num dispositivo portátil ou num compartilhamento da rede que nem sempre seja montado, é possível impedir que os seus arquivos administrativos sejam removidos emitindo o comando `git worktree lock`, utilizando opcionalmente a opção `--reason` para explicar por que a árvore de trabalho está bloqueada."

#. type: Labeled list
#: en/git-worktree.txt:65
#, no-wrap, priority:240
msgid "add <path> [<commit-ish>]"
msgstr "add <caminho> [<commit-ish>]"

#. type: Plain text
#: en/git-worktree.txt:71
#, priority:240
msgid "Create a worktree at `<path>` and checkout `<commit-ish>` into it. The new worktree is linked to the current repository, sharing everything except per-worktree files such as `HEAD`, `index`, etc. As a convenience, `<commit-ish>` may be a bare \"`-`\", which is synonymous with `@{-1}`."
msgstr "Crie uma árvore de trabalho no `<caminho>` e faça a averiguação `<commit-ish>` nele. A nova árvore de trabalho está vinculada ao repositório atual, compartilhando tudo exceto arquivos específicos da árvore de trabalho, como o HEAD, o índice, etc. Por conveniência o `<commit-ish>` pode ser um simples \"`-`\", que é um sinônimo de `@{-1}`."

#. type: Plain text
#: en/git-worktree.txt:76
#, priority:240
msgid "If `<commit-ish>` is a branch name (call it `<branch>`) and is not found, and neither `-b` nor `-B` nor `--detach` are used, but there does exist a tracking branch in exactly one remote (call it `<remote>`)  with a matching name, treat as equivalent to:"
msgstr "Caso o `<commit-ish>` seja um nome do ramo (chame-o de `<ramo>`) e não for encontrado, nem `-b`, nem `-B`, nem `--detach`, serão utilizados, porém existe um monitoramento do ramo em exatamente um ramo remoto (chame-o de `<remoto>`) com um nome coincidente, trate-o como equivalente a:"

#. type: delimited block -
#: en/git-worktree.txt:79
#, no-wrap, priority:240
msgid "$ git worktree add --track -b <branch> <path> <remote>/<branch>\n"
msgstr "$ git worktree add --track -b <ramo> <caminho> <remoto>/<ramo>\n"

#. type: Plain text
#: en/git-worktree.txt:89
#, priority:240
msgid "If the branch exists in multiple remotes and one of them is named by the `checkout.defaultRemote` configuration variable, we'll use that one for the purposes of disambiguation, even if the `<branch>` isn't unique across all remotes. Set it to e.g. `checkout.defaultRemote=origin` to always checkout remote branches from there if `<branch>` is ambiguous but exists on the `origin` remote. See also `checkout.defaultRemote` in linkgit:git-config[1]."
msgstr "Caso o ramo exista em diversos ramos remotos e um deles seja nomeado pela variável de configuração `checkout.defaultRemote`, para propósitos de desambiguação, mesmo que `<ramo>` não seja o único em todos os outros ramos remotos. Defina por exemplo, `checkout.defaultRemote=origin` para que sempre verifique as ramificações remotas de lá caso `<ramo>` seja ambíguo e ainda assim `origin` exista. Consulte também `checkout.defaultRemote` em linkgit:git-config[1]."

#. type: Plain text
#: en/git-worktree.txt:97
#, priority:240
msgid "If `<commit-ish>` is omitted and neither `-b` nor `-B` nor `--detach` used, then, as a convenience, the new worktree is associated with a branch (call it `<branch>`) named after `$(basename <path>)`.  If `<branch>` doesn't exist, a new branch based on `HEAD` is automatically created as if `-b <branch>` was given.  If `<branch>` does exist, it will be checked out in the new worktree, if it's not checked out anywhere else, otherwise the command will refuse to create the worktree (unless `--force` is used)."
msgstr "Caso o `<commit-ish>` seja omitido e nem a opção `-b`, `-B` ou `--detach` sejam utilizados, então, por conveniência, a nova árvore de trabalho será associada com um ramo (chame-o de `<ramo>`) nomeado após `$(basename <caminho>)`.  Caso o `<ramo>` não exista, um novo ramo com base no `HEAD` será criado automaticamente como se a opção `-b <ramo>` fosse usado.  Caso o `<ramo>` exista, ele será averiguado na nova árvore de trabalho, se não tiver sido averiguado em nenhum outro lugar, caso contrário, o comando se recusará a criar a árvore de trabalho (a menos que `--force` seja utilizado)."

#. type: Plain text
#: en/git-worktree.txt:106
#, priority:240
msgid "List details of each worktree.  The main worktree is listed first, followed by each of the linked worktrees.  The output details include whether the worktree is bare, the revision currently checked out, the branch currently checked out (or \"detached HEAD\" if none), \"locked\" if the worktree is locked, \"prunable\" if the worktree can be pruned by the `prune` command."
msgstr "Liste os detalhes de cada árvore de trabalho.  A principal árvore de trabalho é listada primeiro seguida de cada uma das árvores de trabalho que estejam vinculadas a ela.  Nos detalhes de saída incluí se a árvore de trabalho está vazia, se a revisão foi averiguada, se o ramo atual foi averiguado (ou \"HEAD desanexado\" caso nenhum), \"bloqueado\" caso a árvore de trabalho esteja bloqueada, ou \"podável\" caso a árvore de trabalho possa ser podada através do comando `prune`."

#. type: Labeled list
#: en/git-worktree.txt:107
#, ignore-same, no-wrap, priority:240
msgid "lock"
msgstr "lock"

#. type: Plain text
#: en/git-worktree.txt:113
#, priority:240
msgid "If a worktree is on a portable device or network share which is not always mounted, lock it to prevent its administrative files from being pruned automatically. This also prevents it from being moved or deleted.  Optionally, specify a reason for the lock with `--reason`."
msgstr "Caso uma árvore de trabalho esteja em um dispositivo portátil ou em um compartilhamento da rede que nem sempre seja montado, bloqueie-o para impedir que os seus arquivos administrativos sejam removidos automaticamente.  Isso também evita que ele seja movido ou excluído. Opcionalmente, especifique um motivo para o bloqueio com `--reason`."

#. type: Labeled list
#: en/git-worktree.txt:114
#, ignore-same, no-wrap, priority:240
msgid "move"
msgstr "move"

#. type: Plain text
#: en/git-worktree.txt:120
#, priority:240
msgid "Move a worktree to a new location. Note that the main worktree or linked worktrees containing submodules cannot be moved with this command. (The `git worktree repair` command, however, can reestablish the connection with linked worktrees if you move the main worktree manually.)"
msgstr "Mova uma árvore de trabalho para um novo local. Observe que a principal árvore de trabalho ou as árvores de trabalho vinculadas que contenham submódulos, não poderão ser movidas com este comando. (Contudo o comando `git worktree repair` pode restabelecer a conexão com as árvores de trabalho vinculadas a ela caso você mova manualmente a principal árvore de trabalho.)"

#. type: Plain text
#: en/git-worktree.txt:124
#, priority:240
msgid "Prune worktree information in `$GIT_DIR/worktrees`."
msgstr "Remova a informação da árvore de trabalho no `$GIT_DIR/worktrees`."

#. type: Plain text
#: en/git-worktree.txt:131
#, priority:240
msgid "Remove a worktree. Only clean worktrees (no untracked files and no modification in tracked files) can be removed. Unclean worktrees or ones with submodules can be removed with `--force`. The main worktree cannot be removed."
msgstr "Remova uma árvore de trabalho. Somente a árvore de trabalho que estiver vazia (sem arquivos não monitorados e nenhuma alteração nos arquivos monitorados) pode ser removida. A árvore de trabalho que não estiver vazia ou com os sub-módulos podem ser removidas a força com a opção `--force`. A principal árvore de trabalho não pode ser removida."

#. type: Labeled list
#: en/git-worktree.txt:132
#, ignore-ellipsis, no-wrap, priority:240
msgid "repair [<path>...]"
msgstr "repair [<caminho>...]"

#. type: Plain text
#: en/git-worktree.txt:136
#, priority:240
msgid "Repair worktree administrative files, if possible, if they have become corrupted or outdated due to external factors."
msgstr "Faz o reparo dos arquivos administrativos da árvore de trabalho caso tenham se corrompido ou tenham se desatualizado devido a fatores externos."

#. type: Plain text
#: en/git-worktree.txt:141
#, priority:240
msgid "For instance, if the main worktree (or bare repository) is moved, linked worktrees will be unable to locate it. Running `repair` in the main worktree will reestablish the connection from linked worktrees back to the main worktree."
msgstr "Por exemplo, caso a principal árvore de trabalho (ou o repositório vazio) seja movida, as outras árvores de trabalho que estejam vinculadas à ela não serão capazes de localizá-la. Ao executar o comando `repair` na principal árvore de trabalho, fará com que a conexão das árvores de trabalho que estejam vinculadas sejam restauradas de volta para a principal árvore de trabalho."

#. type: Plain text
#: en/git-worktree.txt:148
#, priority:240
msgid "Similarly, if the working tree for a linked worktree is moved without using `git worktree move`, the main worktree (or bare repository) will be unable to locate it. Running `repair` within the recently-moved worktree will reestablish the connection. If multiple linked worktrees are moved, running `repair` from any worktree with each tree's new `<path>` as an argument, will reestablish the connection to all the specified paths."
msgstr "Da mesma forma, caso uma árvore de trabalho vinculada seja movida sem usar o comando `git worktree move`, a principal árvore de trabalho (ou o repositório vazio) não será capaz de localizá-la. Executando o comando `repair` dentro da árvore de trabalho recém-movida faz com que a conexão seja reestabelecida. Caso várias árvores de trabalho que estejam vinculadas sejam movidas, ao executar o `repair` a partir de qualquer árvore de trabalho usando o novo `<caminho>` de cada árvore como argumento, o vínculo será reestabelecido com todos os caminhos especificados."

#. type: Plain text
#: en/git-worktree.txt:153
#, priority:240
msgid "If both the main worktree and linked worktrees have been moved manually, then running `repair` in the main worktree and specifying the new `<path>` of each linked worktree will reestablish all connections in both directions."
msgstr "Caso a principal árvore de trabalho e as árvores de trabalho que estejam vinculadas tenham sido movidas manualmente, ao executar `repair` na principal árvore de trabalho e ao definir um novo `<caminho>` de cada árvore de trabalho vinculada, fará com que todas as conexões em todas as direções sejam reestabelecidas."

#. type: Labeled list
#: en/git-worktree.txt:154
#, ignore-same, no-wrap, priority:240
msgid "unlock"
msgstr "unlock"

#. type: Plain text
#: en/git-worktree.txt:157
#, priority:240
msgid "Unlock a worktree, allowing it to be pruned, moved or deleted."
msgstr "Desbloqueie uma árvore de trabalho em funcionamento, permitindo que ela seja removida, movida ou excluída."

#. type: Plain text
#: en/git-worktree.txt:169
#, priority:240
msgid "By default, `add` refuses to create a new worktree when `<commit-ish>` is a branch name and is already checked out by another worktree, or if `<path>` is already assigned to some worktree but is missing (for instance, if `<path>` was deleted manually). This option overrides these safeguards. To add a missing but locked worktree path, specify `--force` twice."
msgstr "É predefinido que `add` se recuse a criar uma nova árvore de trabalho quando `<commit-ish>` for um nome de um ramo e já esteja em averiguação por outra árvore de trabalho, ou caso o `<caminho>` já esteja atribuído a alguma árvore de trabalho, porém esteja ausente (caso o `<caminho>` tenha sido excluído manualmente por exemplo). Esta opção substitui estas salvaguardas. Para adicionar um caminho numa árvore de trabalho ausente e que esteja bloqueada, utilize a opção `--force` duas vezes."

#. type: Plain text
#: en/git-worktree.txt:174
#, priority:240
msgid "`move` refuses to move a locked worktree unless `--force` is specified twice. If the destination is already assigned to some other worktree but is missing (for instance, if `<new-path>` was deleted manually), then `--force` allows the move to proceed; use `--force` twice if the destination is locked."
msgstr "o `move` se recusa a mover uma árvore de trabalho bloqueada a menos que a opção `--force` seja utilizada duas vezes. Caso o destino já esteja atribuído a alguma outra árvore de trabalho, porém esteja ausente (caso o `<novo-caminho>` tenha sido excluído manualmente por exemplo), então a opção `--force` permite que a ação de mover prossiga; utilize a opção `--force` duas vezes caso o destino esteja bloqueado."

#. type: Plain text
#: en/git-worktree.txt:177
#, priority:240
msgid "`remove` refuses to remove an unclean worktree unless `--force` is used.  To remove a locked worktree, specify `--force` twice."
msgstr "O `remove` se recusa a remover uma árvore de trabalho cheia, a menos que a opção `--force` seja usada.  Para remover uma árvore de trabalho bloqueada, utilize a opção `--force` duas vezes."

#. type: Plain text
#: en/git-worktree.txt:186
#, priority:240
msgid "With `add`, create a new branch named `<new-branch>` starting at `<commit-ish>`, and check out `<new-branch>` into the new worktree.  If `<commit-ish>` is omitted, it defaults to `HEAD`.  By default, `-b` refuses to create a new branch if it already exists. `-B` overrides this safeguard, resetting `<new-branch>` to `<commit-ish>`."
msgstr "Com `add`, crie um novo ramo chamado `<novo-ramo>` (novo-ramo) começando em `<commit-ish>` e faça uma averiguação do `<novo-ramo>` na nova árvore de trabalho.  Caso o `<commit-ish>` seja omitido, a predefinição retorna para `HEAD`.  É predefinido que `b` se recuse a criar um novo ramo, caso ele já exista. O `B` substitui esta salvaguarda, redefinindo o `<novo-ramo>` para `<commit-ish>`."

#. type: Plain text
#: en/git-worktree.txt:191
#, priority:240
msgid "With `add`, detach `HEAD` in the new worktree. See \"DETACHED HEAD\" in linkgit:git-checkout[1]."
msgstr "Com `add`, desanexe o `HEAD` na nova árvore de trabalho. Consulte \"HEAD DESANEXADO\" em linkgit:git-checkout[1]."

#. type: Labeled list
#: en/git-worktree.txt:192
#, ignore-same, no-wrap, priority:240
msgid "--[no-]checkout"
msgstr "--[no-]checkout"

#. type: Plain text
#: en/git-worktree.txt:197
#, priority:240
msgid "By default, `add` checks out `<commit-ish>`, however, `--no-checkout` can be used to suppress checkout in order to make customizations, such as configuring sparse-checkout. See \"Sparse checkout\" in linkgit:git-read-tree[1]."
msgstr "É predefinido que `add` faça a averiguação do `<commit-ish> `, no entanto a opção `--no-checkout` pode ser utilizado para suprimir a averiguação a fim de fazer as personalizações, como configurar a averiguação esparsa. Consulte \"Averiguação esparsa\" em linkgit:git-read-tree[1]."

#. type: Labeled list
#: en/git-worktree.txt:198
#, ignore-same, no-wrap, priority:240
msgid "--[no-]guess-remote"
msgstr "--[no-]guess-remote"

#. type: Plain text
#: en/git-worktree.txt:204
#, priority:240
msgid "With `worktree add <path>`, without `<commit-ish>`, instead of creating a new branch from `HEAD`, if there exists a tracking branch in exactly one remote matching the basename of `<path>`, base the new branch on the remote-tracking branch, and mark the remote-tracking branch as \"upstream\" from the new branch."
msgstr "Com `worktree add <caminho>`, sem `<commit-ish>`, em vez de criar uma nova ramificação a partir do `HEAD`, caso exista uma ramificação de rastreamento em exatamente um ponto remoto que coincida com o `basename` do `<caminho>`, baseie a nova ramificação na ramificação remota rastreada e marque a ramificação rastreada remoto como um \"upstream\" da nova ramificação."

#. type: Plain text
#: en/git-worktree.txt:207
#, priority:240
msgid "This can also be set up as the default behaviour by using the `worktree.guessRemote` config option."
msgstr "Isso também pode ser definido como um comportamento predefinido ao usar a opção da configuração `worktree.guessRemote`."

#. type: Labeled list
#: en/git-worktree.txt:208
#, ignore-same, no-wrap, priority:240
msgid "--[no-]track"
msgstr "--[no-]track"

#. type: Plain text
#: en/git-worktree.txt:213
#, priority:240
msgid "When creating a new branch, if `<commit-ish>` is a branch, mark it as \"upstream\" from the new branch.  This is the default if `<commit-ish>` is a remote-tracking branch.  See `--track` in linkgit:git-branch[1] for details."
msgstr "Ao criar um novo ramo, caso `<commit-ish>` seja um ramo, marque-a como \"upstream\" a partir do novo ramo.  Essa é a predefinição caso `<commit-ish>` seja um ramo monitorado remotamente.  Para mais detalhes, consulte `--track` em linkgit:git-branch[1]."

#. type: Labeled list
#: en/git-worktree.txt:214
#, ignore-same, no-wrap, priority:240
msgid "--lock"
msgstr "--lock"

#. type: Plain text
#: en/git-worktree.txt:218
#, priority:240
msgid "Keep the worktree locked after creation. This is the equivalent of `git worktree lock` after `git worktree add`, but without a race condition."
msgstr "Mantenha a árvore de trabalho bloqueada após a criação. Isso é equivalente ao comando `git worktree lock` após `git worktree add`, porém sem a condição de corrida."

#. type: Plain text
#: en/git-worktree.txt:223
#, priority:240
msgid "With `prune`, do not remove anything; just report what it would remove."
msgstr "Com `prune`, não remove nada; apenas relate o que seria removido."

#. type: Plain text
#: en/git-worktree.txt:229
#, priority:240
msgid "With `list`, output in an easy-to-parse format for scripts.  This format will remain stable across Git versions and regardless of user configuration.  It is recommended to combine this with `-z`.  See below for details."
msgstr "Com `list` gere um formato para fácil análise dos scripts. Este formato permanecerá estável em todas as versões Git independentemente da configuração do usuário.  É recomendado que seja usado em conjunto com a opção `-z`. Veja abaixo os detalhes."

#. type: Plain text
#: en/git-worktree.txt:235
#, priority:240
msgid "Terminate each line with a NUL rather than a newline when `--porcelain` is specified with `list`. This makes it possible to parse the output when a worktree path contains a newline character."
msgstr "Termine cada linha com um NUL em vez de uma nova linha quando a opção `--porcelain` for usada com `list`. Isto torna possível analisar a saída quando o caminho da árvore de trabalho tiver um novo caractere de uma nova linha."

#. type: Plain text
#: en/git-worktree.txt:239
#, priority:240
msgid "With `add`, suppress feedback messages."
msgstr "Com `add`, suprima as mensagens de feedback."

#. type: Plain text
#: en/git-worktree.txt:243
#, priority:240
msgid "With `prune`, report all removals."
msgstr "Com `prune`, relate todas as remoções."

#. type: Plain text
#: en/git-worktree.txt:245
#, priority:240
msgid "With `list`, output additional information about worktrees (see below)."
msgstr "Com `list`, produza informações adicionais sobre as árvores de trabalho (veja abaixo)."

#. type: Plain text
#: en/git-worktree.txt:248
#, priority:240
msgid "With `prune`, only expire unused worktrees older than `<time>`."
msgstr "Com `prune`, expire apenas a árvore de trabalho que não foram utilizadas e que sejam mais velhas que `<tempo>`."

#. type: Plain text
#: en/git-worktree.txt:251
#, priority:240
msgid "With `list`, annotate missing worktrees as prunable if they are older than `<time>`."
msgstr "Com `list`, anote a árvore de trabalho que estejam ausentes como podáveis e caso sejam mais antigas do que `<tempo>`."

#. type: Labeled list
#: en/git-worktree.txt:252
#, no-wrap, priority:240
msgid "--reason <string>"
msgstr "--reason <texto>"

#. type: Plain text
#: en/git-worktree.txt:255
#, priority:240
msgid "With `lock` or with `add --lock`, an explanation why the worktree is locked."
msgstr "Com `lock` ou com `add --lock`, uma explicação é dada do por que a árvore está \"locked\" (travada)."

#. type: Labeled list
#: en/git-worktree.txt:256
#, no-wrap, priority:240
msgid "<worktree>"
msgstr "<árvore de trabalho>"

#. type: Plain text
#: en/git-worktree.txt:258
#, priority:240
msgid "Worktrees can be identified by path, either relative or absolute."
msgstr "A árvore de trabalho pode ser identificada através do seu caminho, seja ele relativo ou absoluto."

#. type: Plain text
#: en/git-worktree.txt:263
#, priority:240
msgid "If the last path components in the worktree's path is unique among worktrees, it can be used to identify a worktree. For example if you only have two worktrees, at `/abc/def/ghi` and `/abc/def/ggg`, then `ghi` or `def/ghi` is enough to point to the former worktree."
msgstr "Caso os componentes do último caminho da árvore de trabalho sejam únicos entre as árvores, ele poderá ser utilizado para identificar a árvore de trabalho. Como por exemplo, caso tenha apenas duas árvores de trabalho, em `/abc/def/ghi` e `/abc/def/ggg`, `ghi` ou `def/ghi` serão suficientes para apontar para a antiga árvore de trabalho."

#. type: Title -
#: en/git-worktree.txt:265
#, no-wrap, priority:240
msgid "REFS"
msgstr "REFS"

#. type: Plain text
#: en/git-worktree.txt:270
#, priority:240
msgid "When using multiple worktrees, some refs are shared between all worktrees, but others are specific to an individual worktree. One example is `HEAD`, which is different for each worktree. This section is about the sharing rules and how to access refs of one worktree from another."
msgstr "Quando utilizar diversas árvores de trabalho, algumas refs são compartilhadas entre todas as árvores de trabalho mas outras são específicas para cada árvore de trabalho individualmente. Um exemplo é o `HEAD`, que é único para cada a árvores de trabalho. Esta seção são sobre as regras de compartilhamento e de como acessar tais refs de uma árvore de trabalho para outra."

#. type: Plain text
#: en/git-worktree.txt:275
#, priority:240
msgid "In general, all pseudo refs are per-worktree and all refs starting with `refs/` are shared. Pseudo refs are ones like `HEAD` which are directly under `$GIT_DIR` instead of inside `$GIT_DIR/refs`. There are exceptions, however: refs inside `refs/bisect` and `refs/worktree` are not shared."
msgstr "Geralmente, cada árvore de trabalho possuí uma ref própria e todas as refs que iniciem com `refs/` podem ser compartilhados. Os pseudo-refs são aqueles como `HEAD` que estão diretamente sob `$GIT_DIR` ao invés de estarem dentro do `GIT_DIR/refs`. Contudo há exceções: as refs não serão compartilhadas quando estiverem dentro do `refs/bisect` e do `refs/worktree`."

#. type: Plain text
#: en/git-worktree.txt:280
#, priority:240
msgid "Refs that are per-worktree can still be accessed from another worktree via two special paths, `main-worktree` and `worktrees`. The former gives access to per-worktree refs of the main worktree, while the latter to all linked worktrees."
msgstr "As refs individuais de cada árvore de trabalho ainda podem ser acessadas de uma outra árvore de trabalho através de dois caminhos especiais, `main-worktree` e `worktrees`. A primeira oferece acesso `ref` individual a cada principal árvore de trabalho, enquanto a última a todas as árvores de trabalho que forem vinculadas à ela."

#. type: Plain text
#: en/git-worktree.txt:287
#, priority:240
msgid "For example, `main-worktree/HEAD` or `main-worktree/refs/bisect/good` resolve to the same value as the main worktree's `HEAD` and `refs/bisect/good` respectively. Similarly, `worktrees/foo/HEAD` or `worktrees/bar/refs/bisect/bad` are the same as `$GIT_COMMON_DIR/worktrees/foo/HEAD` and `$GIT_COMMON_DIR/worktrees/bar/refs/bisect/bad`."
msgstr "Como por exemplo, `main-worktree/HEAD` ou `main-worktree/refs/bisect/good` resolve para o mesmo valor que `HEAD` nas principais árvores de trabalho, assim como `refs/bisect/good` respectivamente. Da mesma forma, `worktrees/foo/HEAD` e `worktrees/bar/refs/bisect/bad` são as mesmas que `$GIT_COMMON_DIR/worktrees/foo/HEAD` e `$GIT_COMMON_DIR/worktrees/bar/refs/bisect/bad`."

#. type: Plain text
#: en/git-worktree.txt:291
#, priority:240
msgid "To access refs, it's best not to look inside `$GIT_DIR` directly. Instead use commands such as linkgit:git-rev-parse[1] or linkgit:git-update-ref[1] which will handle refs correctly."
msgstr "Para acessar as `refs` é melhor não olhar diretamente para dentro do `$GIT_DIR`. Em vez disso, use comandos como o linkgit:git-rev-parse[1] ou linkgit:git-update-ref[1] que manipularão corretamente as refs."

#. type: Plain text
#: en/git-worktree.txt:298
#, priority:240
msgid "By default, the repository `config` file is shared across all worktrees.  If the config variables `core.bare` or `core.worktree` are present in the common config file and `extensions.worktreeConfig` is disabled, then they will be applied to the main worktree only."
msgstr "É predefinido que o arquivo `config` do repositório seja compartilhado entre todas as árvores de trabalho.  Caso as variáveis da configuração `core.bare` ou `core.worktree` estejam presentes no arquivo de configuração comum, e a opção `extensions.worktreeConfig` esteja desativada, elas serão aplicadas apenas às principais árvores de trabalho."

#. type: Plain text
#: en/git-worktree.txt:301
#, priority:240
msgid "In order to have worktree-specific configuration, you can turn on the `worktreeConfig` extension, e.g.:"
msgstr "Você pode ativar a extensão `worktreeConfig` para ter uma configuração específica para as árvores de trabalho, por exemplo:"

#. type: delimited block -
#: en/git-worktree.txt:304
#, no-wrap, priority:240
msgid "$ git config extensions.worktreeConfig true\n"
msgstr "$ git config extensions.worktreeConfig true\n"

#. type: Plain text
#: en/git-worktree.txt:310
#, priority:240
msgid "In this mode, specific configuration stays in the path pointed by `git rev-parse --git-path config.worktree`. You can add or update configuration in this file with `git config --worktree`. Older Git versions will refuse to access repositories with this extension."
msgstr "Neste modo, a configuração específica permanece no caminho apontado pelo comando `git rev-parse --git-path config.worktree`. Você pode adicionar ou atualizar a configuração neste arquivo com o comando `git config --worktree`. As versões mais antigas do Git se recusarão a acessar os repositórios com esta extensão."

#. type: Plain text
#: en/git-worktree.txt:316
#, priority:240
msgid "Note that in this file, the exception for `core.bare` and `core.worktree` is gone. If they exist in `$GIT_DIR/config`, you must move them to the `config.worktree` of the main worktree. You may also take this opportunity to review and move other configuration that you do not want to share to all worktrees:"
msgstr "Observe que neste arquivo, a exceção para `core.bare` e `core.worktree` desapareceu. Caso existam no `$GIT_DIR/config`, você deve movê-los para o `config.worktree` da árvore principal de trabalho. Você também pode aproveitar esta oportunidade para revisar e mover as outras configurações que não deseja compartilhar com todas as árvores de trabalho:"

#. type: Plain text
#: en/git-worktree.txt:318
#, priority:240
msgid "`core.worktree` should never be shared."
msgstr "`core.worktree` nunca deve ser compartilhado."

#. type: Plain text
#: en/git-worktree.txt:320
#, priority:240
msgid "`core.bare` should not be shared if the value is `core.bare=true`."
msgstr "`core.bare` não deve ser compartilhado caso o valor seja `core.bare=true`."

#. type: Plain text
#: en/git-worktree.txt:323
#, priority:240
msgid "`core.sparseCheckout` should not be shared, unless you are sure you always use sparse checkout for all worktrees."
msgstr "Recomenda-se a opção de configuração `core.sparseCheckout` não seja compartilhada, a menos que você tenha certeza de utilizar a verificação esparsa em todas as árvores de trabalho."

#. type: Plain text
#: en/git-worktree.txt:326
#, priority:240
msgid "See the documentation of `extensions.worktreeConfig` in linkgit:git-config[1] for more details."
msgstr "Para mais detalhes consulte a documentação sobre `extensions.worktreeConfig` em linkgit:git-config[1]."

#. type: Title -
#: en/git-worktree.txt:328
#, no-wrap, priority:240
msgid "DETAILS"
msgstr "DETALHES"

#. type: Plain text
#: en/git-worktree.txt:337
#, priority:240
msgid "Each linked worktree has a private sub-directory in the repository's `$GIT_DIR/worktrees` directory.  The private sub-directory's name is usually the base name of the linked worktree's path, possibly appended with a number to make it unique.  For example, when `$GIT_DIR=/path/main/.git` the command `git worktree add /path/other/test-next next` creates the linked worktree in `/path/other/test-next` and also creates a `$GIT_DIR/worktrees/test-next` directory (or `$GIT_DIR/worktrees/test-next1` if `test-next` is already taken)."
msgstr "Cada árvore de trabalho vinculada possui um subdiretório privado no diretório `$GIT_DIR/worktrees` do repositório.  O nome do subdiretório particular é geralmente o nome base do caminho do vínculo da árvore de trabalho, possivelmente anexada a um número para torná-lo único.  Como por exemplo, quando `$GIT_DIR=/path/main/.git` o comando` `git worktree add /path/other/test-next next` cria a árvore de trabalho vinculada no `/path/other/test-next` e também cria um diretório `$GIT_DIR/worktrees/test-next` (ou `$GIT_DIR/worktrees/test-next1` caso `test-next` já esteja em uso)."

#. type: Plain text
#: en/git-worktree.txt:343
#, priority:240
msgid "Within a linked worktree, `$GIT_DIR` is set to point to this private directory (e.g. `/path/main/.git/worktrees/test-next` in the example) and `$GIT_COMMON_DIR` is set to point back to the main worktree's `$GIT_DIR` (e.g. `/path/main/.git`). These settings are made in a `.git` file located at the top directory of the linked worktree."
msgstr "Dentro de uma árvore de trabalho vinculada, `$GIT_DIR` é configurado para apontar para este diretório privado (`/path/main/.git/worktrees/test-next` no exemplo) e `$GIT_COMMON_DIR` é configurado para apontar de volta para a principal árvore de trabalho `$GIT_DIR` (`/path/main/.git` por exemplo). Estas configurações são feitas em um arquivo `.git` localizado no diretório mais alto do vínculo da árvore de trabalho."

#. type: Plain text
#: en/git-worktree.txt:353
#, priority:240
msgid "Path resolution via `git rev-parse --git-path` uses either `$GIT_DIR` or `$GIT_COMMON_DIR` depending on the path. For example, in the linked worktree `git rev-parse --git-path HEAD` returns `/path/main/.git/worktrees/test-next/HEAD` (not `/path/other/test-next/.git/HEAD` or `/path/main/.git/HEAD`) while `git rev-parse --git-path refs/heads/master` uses `$GIT_COMMON_DIR` and returns `/path/main/.git/refs/heads/master`, since refs are shared across all worktrees, except `refs/bisect` and `refs/worktree`."
msgstr "A resolução do caminho através do comando `git rev-parse --git-path` utiliza `$GIT_DIR` ou `$GIT_COMMON_DIR`, dependendo do caminho. Na árvore de trabalho vinculada, o comando `git rev-parse --git-path HEAD` retorna `/path/main/.git/worktrees/test-next/HEAD` (não `/path/other/test-next/.git/HEAD` ou `/path/main/.git/HEAD`) enquanto o comando `git rev-parse --git-path refs/heads/master` usa `$GIT_COMMON_DIR` e retorna `/path/main/.git/refs/heads/master`, já que as refs são compartilhados em todas as árvores de trabalho, exceto `refs/bisect` e `refs/worktree`."

#. type: Plain text
#: en/git-worktree.txt:358
#, priority:240
msgid "See linkgit:gitrepository-layout[5] for more information. The rule of thumb is do not make any assumption about whether a path belongs to `$GIT_DIR` or `$GIT_COMMON_DIR` when you need to directly access something inside `$GIT_DIR`. Use `git rev-parse --git-path` to get the final path."
msgstr "Para mais informações consulte linkgit:gitrepository-layout[5]. A regra geral é não fazer qualquer suposição sobre se um caminho pertence ao `$GIT_DIR` ou ao `$GIT_COMMON_DIR` quando você precisar acessar diretamente algo dentro do `$GIT_DIR`. Para obter o caminho final utilize o comando `git rev-parse --git-path`."

#. type: Plain text
#: en/git-worktree.txt:366
#, priority:240
msgid "If you manually move a linked worktree, you need to update the `gitdir` file in the entry's directory. For example, if a linked worktree is moved to `/newpath/test-next` and its `.git` file points to `/path/main/.git/worktrees/test-next`, then update `/path/main/.git/worktrees/test-next/gitdir` to reference `/newpath/test-next` instead. Better yet, run `git worktree repair` to reestablish the connection automatically."
msgstr "Caso queira mover o vínculo de uma árvore de trabalho manualmente, será preciso atualizar o arquivo 'gitdir' no diretório da entrada. Como por exemplo, caso o vínculo de uma árvore de trabalho seja movida para `/newpath/test-next` e o seu arquivo `.git` aponte para `/path/main/.git/worktrees/test-next`, então atualize `/path/main/.git/worktrees/test-next/gitdir` para a referência `/newpath/test-next`. Melhor ainda, execute o comando `git worktree repair` para restabelecer a conexão automaticamente."

#. type: Plain text
#: en/git-worktree.txt:377
#, priority:240
msgid "To prevent a `$GIT_DIR/worktrees` entry from being pruned (which can be useful in some situations, such as when the entry's worktree is stored on a portable device), use the `git worktree lock` command, which adds a file named `locked` to the entry's directory. The file contains the reason in plain text. For example, if a linked worktree's `.git` file points to `/path/main/.git/worktrees/test-next` then a file named `/path/main/.git/worktrees/test-next/locked` will prevent the `test-next` entry from being pruned.  See linkgit:gitrepository-layout[5] for details."
msgstr "Para impedir que uma entrada `$GIT_DIR/worktrees` seja removida (que pode ser útil em algumas situações, como quando a árvore de trabalho da entrada é armazenada em um dispositivo portátil), utilize o comando `git worktree lock` que adiciona um arquivo chamado 'locked' ao diretório da entrada. O arquivo contém o motivo no formato texto puro, sem formatação. Por exemplo, caso o arquivo `.git` aponte para `/path/main/.git/worktrees/test-next` então o arquivo de nome `/path/main/.git/worktrees/test-next/locked` prevenirá que a entrada `test-next` seja excluída.  Para mais detalhes consulte linkgit:gitrepository-layout[5]."

#. type: Plain text
#: en/git-worktree.txt:380
#, priority:240
msgid "When `extensions.worktreeConfig` is enabled, the config file `.git/worktrees/<id>/config.worktree` is read after `.git/config` is."
msgstr "Quando a opção de configuração `extensions.worktreeConfig` está ativo, o arquivo de configuração `.git/worktrees/<id>/config.worktree` é lido após o `.git/config`."

#. type: Title -
#: en/git-worktree.txt:382
#, no-wrap, priority:240
msgid "LIST OUTPUT FORMAT"
msgstr "FORMATO DA LISTA DE SAÍDA"

#. type: Plain text
#: en/git-worktree.txt:385
#, priority:240
msgid "The `worktree list` command has two output formats. The default format shows the details on a single line with columns.  For example:"
msgstr "O comando `worktree list` gera dois formatos na saída.  O formato já predefinido exibe os detalhes em uma única linha com colunas.  Por exemplo:"

#. type: delimited block -
#: en/git-worktree.txt:391
#, no-wrap, priority:240
msgid ""
"$ git worktree list\n"
"/path/to/bare-source            (bare)\n"
"/path/to/linked-worktree        abcd1234 [master]\n"
"/path/to/other-linked-worktree  1234abc  (detached HEAD)\n"
msgstr ""
"$ git worktree list\n"
"/path/to/bare-source            (bare)\n"
"/path/to/linked-worktree        abcd1234 [master]\n"
"/path/to/other-linked-worktree  1234abc  (HEAD desanexado)\n"

#. type: Plain text
#: en/git-worktree.txt:395
#, priority:240
msgid "The command also shows annotations for each worktree, according to its state.  These annotations are:"
msgstr "O comando também mostra anotações para cada árvore de trabalho, de acordo com seu estado.  Estas anotações são:"

#. type: Plain text
#: en/git-worktree.txt:397
#, priority:240
msgid "`locked`, if the worktree is locked."
msgstr "`locked`, caso a árvore de trabalho esteja bloqueada."

#. type: Plain text
#: en/git-worktree.txt:398
#, priority:240
msgid "`prunable`, if the worktree can be pruned via `git worktree prune`."
msgstr "`prunable`, caso a árvore de trabalho possa ser podada através do comando `git worktree prune`."

#. type: delimited block -
#: en/git-worktree.txt:404
#, no-wrap, priority:240
msgid ""
"$ git worktree list\n"
"/path/to/linked-worktree    abcd1234 [master]\n"
"/path/to/locked-worktree    acbd5678 (brancha) locked\n"
"/path/to/prunable-worktree  5678abc  (detached HEAD) prunable\n"
msgstr ""
"$ git worktree list\n"
"/path/to/linked-worktree    abcd1234 [master]\n"
"/path/to/locked-worktree    acbd5678 (brancha) bloqueado\n"
"/path/to/prunable-worktree  5678abc  (HEAD desanexada) podável\n"

#. type: Plain text
#: en/git-worktree.txt:409
#, priority:240
msgid "For these annotations, a reason might also be available and this can be seen using the verbose mode. The annotation is then moved to the next line indented followed by the additional information."
msgstr "Para essas anotações, um motivo também pode estar disponível e isso pode ser visto usando o modo detalhado. A anotação é então movida para a próxima linha recuada seguida pelas informações adicionais."

#. type: delimited block -
#: en/git-worktree.txt:418
#, no-wrap, priority:240
msgid ""
"$ git worktree list --verbose\n"
"/path/to/linked-worktree              abcd1234 [master]\n"
"/path/to/locked-worktree-no-reason    abcd5678 (detached HEAD) locked\n"
"/path/to/locked-worktree-with-reason  1234abcd (brancha)\n"
"\tlocked: worktree path is mounted on a portable device\n"
"/path/to/prunable-worktree            5678abc1 (detached HEAD)\n"
"\tprunable: gitdir file points to non-existent location\n"
msgstr ""
"$ git worktree list --verbose\n"
"/path/to/linked-worktree              abcd1234 [master]\n"
"/path/to/locked-worktree-no-reason    abcd5678 (HEAD desanexado) bloqueado\n"
"/path/to/locked-worktree-with-reason  1234abcd (brancha)\n"
"\tbloqueado: a árvore de trabalho está montando em um dispositivo portátil\n"
"/path/to/prunable-worktree            5678abc1 (HEAD desanexado)\n"
"\tpodável: o arquivo gitdir aponta para um local que não existe\n"

#. type: Plain text
#: en/git-worktree.txt:423
#, priority:240
msgid "Note that the annotation is moved to the next line if the additional information is available, otherwise it stays on the same line as the worktree itself."
msgstr "Observe que a anotação é movida para a próxima linha caso a informação adicional esteja disponível, caso contrário, ela permanece na mesma linha que a própria árvore de trabalho."

#. type: Title ~
#: en/git-worktree.txt:425
#, no-wrap, priority:240
msgid "Porcelain Format"
msgstr "Formato Porcelana"

#. type: Plain text
#: en/git-worktree.txt:434
#, priority:240
msgid "The porcelain format has a line per attribute.  If `-z` is given then the lines are terminated with NUL rather than a newline.  Attributes are listed with a label and value separated by a single space.  Boolean attributes (like `bare` and `detached`) are listed as a label only, and are present only if the value is true.  Some attributes (like `locked`) can be listed as a label only or with a value depending upon whether a reason is available.  The first attribute of a worktree is always `worktree`, an empty line indicates the end of the record.  For example:"
msgstr "O formato porcelana possui uma linha por atributo.  Caso a opção `-z` seja utilizada, então as linhas serão terminada com NUL em vez de uma nova linha.  Os atributos são listados com um rótulo e o valor são separados por um único espaço.  Atributos booleanos (como `bare` e `detached`) são listados apenas como um rótulo e estão presentes apenas caso o valor seja verdadeiro.  Alguns atributos (como `locked`) podem ser listados apenas como um rótulo ou com um valor, dependendo caso um motivo esteja disponível.  O primeiro atributo de uma árvore de trabalho sempre é `worktree`, uma linha em branco indica o fim do registro.  Por exemplo:"

#. type: delimited block -
#: en/git-worktree.txt:439
#, no-wrap, priority:240
msgid ""
"$ git worktree list --porcelain\n"
"worktree /path/to/bare-source\n"
"bare\n"
msgstr ""
"$ git worktree list --porcelain\n"
"worktree /path/to/bare-source\n"
"bare\n"

#. type: delimited block -
#: en/git-worktree.txt:443
#, no-wrap, priority:240
msgid ""
"worktree /path/to/linked-worktree\n"
"HEAD abcd1234abcd1234abcd1234abcd1234abcd1234\n"
"branch refs/heads/master\n"
msgstr ""
"worktree /path/to/linked-worktree\n"
"HEAD abcd1234abcd1234abcd1234abcd1234abcd1234\n"
"branch refs/heads/master\n"

#. type: delimited block -
#: en/git-worktree.txt:447
#, no-wrap, priority:240
msgid ""
"worktree /path/to/other-linked-worktree\n"
"HEAD 1234abc1234abc1234abc1234abc1234abc1234a\n"
"detached\n"
msgstr ""
"worktree /path/to/other-linked-worktree\n"
"HEAD 1234abc1234abc1234abc1234abc1234abc1234a\n"
"detached\n"

#. type: delimited block -
#: en/git-worktree.txt:452
#, no-wrap, priority:240
msgid ""
"worktree /path/to/linked-worktree-locked-no-reason\n"
"HEAD 5678abc5678abc5678abc5678abc5678abc5678c\n"
"branch refs/heads/locked-no-reason\n"
"locked\n"
msgstr ""
"worktree /path/to/linked-worktree-locked-no-reason\n"
"HEAD 5678abc5678abc5678abc5678abc5678abc5678c\n"
"branch refs/heads/locked-no-reason\n"
"locked\n"

#. type: delimited block -
#: en/git-worktree.txt:457
#, no-wrap, priority:240
msgid ""
"worktree /path/to/linked-worktree-locked-with-reason\n"
"HEAD 3456def3456def3456def3456def3456def3456b\n"
"branch refs/heads/locked-with-reason\n"
"locked reason why is locked\n"
msgstr ""
"worktree /path/to/linked-worktree-locked-with-reason\n"
"HEAD 3456def3456def3456def3456def3456def3456b\n"
"branch refs/heads/locked-with-reason\n"
"locked reason why is locked\n"

#. type: delimited block -
#: en/git-worktree.txt:462
#, no-wrap, priority:240
msgid ""
"worktree /path/to/linked-worktree-prunable\n"
"HEAD 1233def1234def1234def1234def1234def1234b\n"
"detached\n"
"prunable gitdir file points to non-existent location\n"
msgstr ""
"worktree /path/to/linked-worktree-prunable\n"
"HEAD 1233def1234def1234def1234def1234def1234b\n"
"detached\n"
"prunable gitdir file points to non-existent location\n"

#. type: Plain text
#: en/git-worktree.txt:469
#, priority:240
msgid "Unless `-z` is used any \"unusual\" characters in the lock reason such as newlines are escaped and the entire reason is quoted as explained for the configuration variable `core.quotePath` (see linkgit:git-config[1]).  For Example:"
msgstr "A menos que a opção `-z` seja utilizada, os caracteres \"incomuns\" no motivo do bloqueio como uma nova linha, estes serão ignorados conforme é explicado na variável de configuração `core.quotePath` (consulte linkgit:git-config[1]). Por exemplo:"

#. type: delimited block -
#: en/git-worktree.txt:475
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"$ git worktree list --porcelain\n"
"...\n"
"locked \"reason\\nwhy is locked\"\n"
"...\n"
msgstr ""
"$ git worktree list --porcelain\n"
"...\n"
"locked \"reason\\nwhy is locked\"\n"
"...\n"

#. type: Plain text
#: en/git-worktree.txt:487
#, priority:240
msgid "You are in the middle of a refactoring session and your boss comes in and demands that you fix something immediately. You might typically use linkgit:git-stash[1] to store your changes away temporarily, however, your working tree is in such a state of disarray (with new, moved, and removed files, and other bits and pieces strewn around) that you don't want to risk disturbing any of it. Instead, you create a temporary linked worktree to make the emergency fix, remove it when done, and then resume your earlier refactoring session."
msgstr "Você está no meio de uma sessão de refatoração e o seu chefe entra e exige que você conserte algo imediatamente. Você normalmente pode usar o linkgit:git-stash[1] para armazenar temporariamente as suas alterações, no entanto, a sua árvore de trabalho está em uma condição de desordem (com arquivos novos, movidos e removidos e outros pedaços espalhados) que você não quer arriscar mexer em nenhum deles. Em vez disso, você cria uma árvore de trabalho vinculada temporária para fazer a correção de emergência, removê-la quando terminar e em seguida, retomar a sua sessão de refatoração anterior."

#. type: delimited block -
#: en/git-worktree.txt:495
#, ignore-ellipsis, no-wrap, priority:240
msgid ""
"$ git worktree add -b emergency-fix ../temp master\n"
"$ pushd ../temp\n"
"# ... hack hack hack ...\n"
"$ git commit -a -m 'emergency fix for boss'\n"
"$ popd\n"
"$ git worktree remove ../temp\n"
msgstr ""
"$ git worktree add -b emergency-fix ../temp master\n"
"$ pushd ../temp\n"
"# ... hack hack hack ...\n"
"$ git commit -a -m 'correção de emergência para o chefe'\n"
"$ popd\n"
"$ git worktree remove ../temp\n"

#. type: Plain text
#: en/git-worktree.txt:502
#, priority:240
msgid "Multiple checkout in general is still experimental, and the support for submodules is incomplete. It is NOT recommended to make multiple checkouts of a superproject."
msgstr "A averiguação múltipla em geral ainda é experimental e a compatibilidade para os submódulos ainda está incompleto. NÃO é recomendado fazer várias averiguações de um superprojeto."

#. type: Title =
#: en/git-write-tree.txt:2
#, ignore-same, no-wrap, priority:80
msgid "git-write-tree(1)"
msgstr "git-write-tree(1)"

#. type: Plain text
#: en/git-write-tree.txt:7
#, priority:80
msgid "git-write-tree - Create a tree object from the current index"
msgstr "git-write-tree - Crie um objeto árvore do índice atual"

#. type: Plain text
#: en/git-write-tree.txt:13
#, no-wrap, priority:80
msgid "'git write-tree' [--missing-ok] [--prefix=<prefix>/]\n"
msgstr "'git write-tree' [--missing-ok] [--prefix=<prefixo>/]\n"

#. type: Plain text
#: en/git-write-tree.txt:18
#, priority:80
msgid "Creates a tree object using the current index. The name of the new tree object is printed to standard output."
msgstr "Cria um objeto árvore utilizando o índice atual. O nome do novo objeto árvore é impresso na saída padrão."

#. type: Plain text
#: en/git-write-tree.txt:20
#, priority:80
msgid "The index must be in a fully merged state."
msgstr "O índice deve estar em uma condição totalmente mesclada."

#. type: Plain text
#: en/git-write-tree.txt:26
#, priority:80
msgid "Conceptually, 'git write-tree' sync()s the current index contents into a set of tree files.  In order to have that match what is actually in your directory right now, you need to have done a 'git update-index' phase before you did the 'git write-tree'."
msgstr "Conceitualmente, o comando 'git write-tree' sync() é o conteúdo atual do índice em um conjunto dos arquivos na árvore.  Para ter esta coincidência com o que está realmente no seu diretório agora, é necessário ter feito uma fase com o comando 'git update-index' antes de fazer o 'git write-tree'."

#. type: Labeled list
#: en/git-write-tree.txt:30
#, ignore-same, no-wrap, priority:80
msgid "--missing-ok"
msgstr "--missing-ok"

#. type: Plain text
#: en/git-write-tree.txt:34
#, priority:80
msgid "Normally 'git write-tree' ensures that the objects referenced by the directory exist in the object database.  This option disables this check."
msgstr "Normalmente, 'git write-tree' garante que os objetos usando como referência pelo diretório existam no banco de dados dos objetos.  Esta opção desativa esta verificação."

#. type: Plain text
#: en/git-write-tree.txt:39
#, priority:80
msgid "Writes a tree object that represents a subdirectory `<prefix>`.  This can be used to write the tree object for a subproject that is in the named subdirectory."
msgstr "Escreve o objeto árvore que represente um subdiretório `<prefixo>`.  Pode ser usado para gravar o objeto árvore em um subprojeto que está no subdiretório informado."

#. type: Title =
#: en/gitglossary.txt:2
#, ignore-same, no-wrap, priority:310
msgid "gitglossary(7)"
msgstr "gitglossary(7)"

#. type: Plain text
#: en/gitglossary.txt:7
#, priority:310
msgid "gitglossary - A Git Glossary"
msgstr "gitglossary - Um Glossário do Git"

#. type: Plain text
#: en/gitglossary.txt:11
#, no-wrap, priority:310
msgid "*\n"
msgstr "*\n"

#. type: Plain text
#: en/gitglossary.txt:24
#, priority:310
msgid "linkgit:gittutorial[7], linkgit:gittutorial-2[7], linkgit:gitcvs-migration[7], linkgit:giteveryday[7], link:user-manual.html[The Git User's Manual]"
msgstr "linkgit:gittutorial[7], linkgit:gittutorial-2[7], linkgit:gitcvs-migration[7], linkgit:giteveryday[7], link:user-manual.html[O Manual do Usuário Git]"

#. type: Labeled list
#: en/glossary-content.txt:1
#, no-wrap, priority:310
msgid "[[def_alternate_object_database]]alternate object database"
msgstr "[[def_alternate_object_database]]alternate object database (banco de dados alternativo do objeto)"

#. type: Plain text
#: en/glossary-content.txt:5
#, priority:310
msgid "Via the alternates mechanism, a <<def_repository,repository>> can inherit part of its <<def_object_database,object database>> from another object database, which is called an \"alternate\"."
msgstr "Através do mecanismo alternativo, um <<def_repository,repositório>> pode herdar parte do seu <<def_object_database,banco de dados do objeto>> vindo de outro banco de dados de objeto, chamado \"alternativo\"."

#. type: Labeled list
#: en/glossary-content.txt:6
#, no-wrap, priority:310
msgid "[[def_bare_repository]]bare repository"
msgstr "[[def_bare_repository]]bare repository (repositório simples)"

#. type: Plain text
#: en/glossary-content.txt:16
#, priority:310
msgid "A bare repository is normally an appropriately named <<def_directory,directory>> with a `.git` suffix that does not have a locally checked-out copy of any of the files under revision control. That is, all of the Git administrative and control files that would normally be present in the hidden `.git` sub-directory are directly present in the `repository.git` directory instead, and no other files are present and checked out. Usually publishers of public repositories make bare repositories available."
msgstr "Um repositório simples normalmente é um diretório <<def_directory,diretório>> apropriadamente denominado com um sufixo `.git` que não possui uma cópia local averiguada de nenhum dos arquivos sob controle da revisão. Ou seja, todos os arquivos administrativos e de controle do Git que normalmente estariam presentes no subdiretório `.git` oculto estão diretamente presentes no diretório `repository.git`, e nenhum outro arquivo está presente e é retirado. Normalmente, os editores dos repositórios públicos disponibilizam repositórios simples."

#. type: Labeled list
#: en/glossary-content.txt:17
#, no-wrap, priority:310
msgid "[[def_blob_object]]blob object"
msgstr "[[def_blob_object]]blob object (objeto bolha)"

#. type: Plain text
#: en/glossary-content.txt:19
#, priority:310
msgid "Untyped <<def_object,object>>, e.g. the contents of a file."
msgstr "Um <<def_object,objeto>> sem tipo, por exemplo, o conteúdo de um arquivo."

#. type: Labeled list
#: en/glossary-content.txt:20
#, no-wrap, priority:310
msgid "[[def_branch]]branch"
msgstr "[[def_branch]]branch (ramo)"

#. type: Plain text
#: en/glossary-content.txt:30
#, priority:310
msgid "A \"branch\" is a line of development.  The most recent <<def_commit,commit>> on a branch is referred to as the tip of that branch.  The tip of the branch is referenced by a branch <<def_head,head>>, which moves forward as additional development is done on the branch.  A single Git <<def_repository,repository>> can track an arbitrary number of branches, but your <<def_working_tree,working tree>> is associated with just one of them (the \"current\" or \"checked out\" branch), and <<def_HEAD,HEAD>> points to that branch."
msgstr "Um \"ramo\" é uma linha de desenvolvimento.  O <<def_commit,commit >> mais recente em um ramo é referido como o cume deste ramo.  O cume do ramo é referenciado por um ramo <<def_head,head>>, que avança à medida que o desenvolvimento adicional é feito no ramo.  Um único Git <<def_repository,repositório>> pode monitorar um número arbitrário de ramos, porém a sua <<def_working_tree,árvore de trabalho>> está associada apenas a uma delas (o ramo \"atual\" ou \"averiguado\") e <<def_HEAD,HEAD>> aponte para esse ramo."

#. type: Labeled list
#: en/glossary-content.txt:31
#, no-wrap, priority:310
msgid "[[def_cache]]cache"
msgstr "[[def_cache]]cache"

#. type: Plain text
#: en/glossary-content.txt:33
#, priority:310
msgid "Obsolete for: <<def_index,index>>."
msgstr "É obsoleto para: <<def_index,índice>>."

#. type: Labeled list
#: en/glossary-content.txt:34
#, no-wrap, priority:310
msgid "[[def_chain]]chain"
msgstr "[[def_chain]]chain (cadeia ou corrente)"

#. type: Plain text
#: en/glossary-content.txt:38
#, priority:310
msgid "A list of objects, where each <<def_object,object>> in the list contains a reference to its successor (for example, the successor of a <<def_commit,commit>> could be one of its <<def_parent,parents>>)."
msgstr "Uma lista dos objetos onde cada objeto <<def_object,objeto>> contém uma referência ao seu sucessor (por exemplo, o sucessor de um <<def_commit,commit>> pode ser uma das suas <<def_parent,origens>>)."

#. type: Labeled list
#: en/glossary-content.txt:39
#, no-wrap, priority:310
msgid "[[def_changeset]]changeset"
msgstr "[[def_changeset]]changeset (conjunto de alterações)"

#. type: Plain text
#: en/glossary-content.txt:43
#, priority:310
msgid "BitKeeper/cvsps speak for \"<<def_commit,commit>>\". Since Git does not store changes, but states, it really does not make sense to use the term \"changesets\" with Git."
msgstr "O BitKeeper/cvsps fala por \"<<def_commit,commit>>\". Como o Git não armazena as alterações, mas declara, que realmente não faz sentido utilizar o termo \"changesets\" com o Git."

#. type: Labeled list
#: en/glossary-content.txt:44
#, no-wrap, priority:310
msgid "[[def_checkout]]checkout"
msgstr "[[def_checkout]]checkout (averiguação)"

#. type: Plain text
#: en/glossary-content.txt:51
#, priority:310
msgid "The action of updating all or part of the <<def_working_tree,working tree>> with a <<def_tree_object,tree object>> or <<def_blob_object,blob>> from the <<def_object_database,object database>>, and updating the <<def_index,index>> and <<def_HEAD,HEAD>> if the whole working tree has been pointed at a new <<def_branch,branch>>."
msgstr "A ação de atualizar todos ou parte da <<def_working_tree,árvore de trabalho>> com o <<def_tree_object,objeto da árvore>> ou <<def_blob_object,bolha>> vindo do <<def_object_database,banco de dados do objeto>>, e atualizando o <<def_index,índice>> e <<def_HEAD,HEAD>> caso toda a árvore tenha um ponteiro para um novo <<def_branch,ramo>>."

#. type: Labeled list
#: en/glossary-content.txt:52
#, no-wrap, priority:310
msgid "[[def_cherry-picking]]cherry-picking"
msgstr "[[def_cherry-picking]]cherry-picking (escolha-seletiva)"

#. type: Plain text
#: en/glossary-content.txt:59
#, priority:310
msgid "In <<def_SCM,SCM>> jargon, \"cherry pick\" means to choose a subset of changes out of a series of changes (typically commits) and record them as a new series of changes on top of a different codebase. In Git, this is performed by the \"git cherry-pick\" command to extract the change introduced by an existing <<def_commit,commit>> and to record it based on the tip of the current <<def_branch,branch>> as a new commit."
msgstr "No jargão <<def_SCM,SCM>>, a \"escolha seletiva\" (cherry pick) significa escolher um subconjunto das alterações de uma série de alterações (em geral, commits) e registrá-las como uma nova série de alterações sobre uma base de código diferente. No Git, isso é executado pelo comando `git cherry-pick` para extrair a alteração introduzida através de um <<def_commit,commit>> já existente e registrá-lo com base no cume do <<def_branch,ramo>> atual como um novo commit."

#. type: Labeled list
#: en/glossary-content.txt:60
#, no-wrap, priority:310
msgid "[[def_clean]]clean"
msgstr "[[def_clean]]clean (limpar, limpeza)"

#. type: Plain text
#: en/glossary-content.txt:64
#, priority:310
msgid "A <<def_working_tree,working tree>> is clean, if it corresponds to the <<def_revision,revision>> referenced by the current <<def_head,head>>. Also see \"<<def_dirty,dirty>>\"."
msgstr "Uma <<def_working_tree,árvore de trabalho>> está limpa, caso corresponda à <<def_revision,revisão>> referenciada pelo <<def_head,cabeçalho>> atual. Consulte também \"<<def_dirty,dirty>>\"."

#. type: Labeled list
#: en/glossary-content.txt:65
#, no-wrap, priority:310
msgid "[[def_commit]]commit"
msgstr "[[def_commit]]commit"

#. type: Plain text
#: en/glossary-content.txt:72
#, priority:310
msgid "As a noun: A single point in the Git history; the entire history of a project is represented as a set of interrelated commits.  The word \"commit\" is often used by Git in the same places other revision control systems use the words \"revision\" or \"version\".  Also used as a short hand for <<def_commit_object,commit object>>."
msgstr "Como um substantivo: um único ponto no histórico do Git; todo o histórico de um projeto é representado como um conjunto de commits inter-relacionados.  A palavra \"commit\" é frequentemente utilizada pelo Git nos mesmos locais onde outros sistemas para o controle da revisão utilizem as palavras \"revision\" (revisão) ou \"version\" (versão).  Também utilizado como uma abreviação para um <<def_commit_object,objeto commit>>."

#. type: Plain text
#: en/glossary-content.txt:77
#, priority:310
msgid "As a verb: The action of storing a new snapshot of the project's state in the Git history, by creating a new commit representing the current state of the <<def_index,index>> and advancing <<def_HEAD,HEAD>> to point at the new commit."
msgstr "Como um verbo: A ação de armazenar um novo instantâneo da condição do projeto no histórico do Git, criando um novo commit que representa a condição atual do <<def_index,índice>> e avançando o <<def_HEAD,HEAD>> apontando para o novo commit."

#. type: Labeled list
#: en/glossary-content.txt:78
#, no-wrap, priority:310
msgid "[[def_commit_object]]commit object"
msgstr "[[def_commit_object]]commit object (objeto commit)"

#. type: Plain text
#: en/glossary-content.txt:84
#, priority:310
msgid "An <<def_object,object>> which contains the information about a particular <<def_revision,revision>>, such as <<def_parent,parents>>, committer, author, date and the <<def_tree_object,tree object>> which corresponds to the top <<def_directory,directory>> of the stored revision."
msgstr "Um objeto <<def_object,objeto>>, que contém as informações sobre uma <<def_revision,revisão>> específica, como <<def_parent,origem>>, de quem fez o commit, o autor, a data e o <<def_tree_object,objeto árvore>> que corresponde <<def_directory,diretório>> da revisão que foi armazenada."

#. type: Labeled list
#: en/glossary-content.txt:85
#, no-wrap, priority:310
msgid "[[def_commit-ish]]commit-ish (also committish)"
msgstr "[[def_commit-ish]]commit-ish (também committish)"

#. type: Plain text
#: en/glossary-content.txt:96
#, priority:310
msgid "A <<def_commit_object,commit object>> or an <<def_object,object>> that can be recursively dereferenced to a commit object.  The following are all commit-ishes: a commit object, a <<def_tag_object,tag object>> that points to a commit object, a tag object that points to a tag object that points to a commit object, etc."
msgstr "Um <<def_commit_object,objeto commit>> ou um <<def_object,objeto>> que pode perder a referência de forma recursiva para um objeto commit.  A seguir estão todos os 'commit-ishes': um objeto commit, um <<def_tag_object,objeto tag>> que aponta para um objeto commit, um objeto tag que aponta para um objeto tag que aponta para um objeto commit, etc."

#. type: Labeled list
#: en/glossary-content.txt:97
#, no-wrap, priority:310
msgid "[[def_core_git]]core Git"
msgstr "[[def_core_git]]core Git (núcleo do Git)"

#. type: Plain text
#: en/glossary-content.txt:100
#, priority:310
msgid "Fundamental data structures and utilities of Git. Exposes only limited source code management tools."
msgstr "Estruturas de dados e utilitários fundamentais do Git. Expõe apenas as ferramentas limitadas ao gerenciamento de código-fonte."

#. type: Labeled list
#: en/glossary-content.txt:101
#, no-wrap, priority:310
msgid "[[def_DAG]]DAG"
msgstr "[[def_DAG]]DAG"

#. type: Plain text
#: en/glossary-content.txt:106
#, priority:310
msgid "Directed acyclic graph. The <<def_commit_object,commit objects>> form a directed acyclic graph, because they have parents (directed), and the graph of commit objects is acyclic (there is no <<def_chain,chain>> which begins and ends with the same <<def_object,object>>)."
msgstr "Gráfico acíclico dirigido. Os <<def_commit_object,objetos commit>> forma um grafo acíclico direcionado, porque eles têm parentes (direcionados), e o grafo dos objetos commit são acíclicos (não existe <<def_chain,cadeia>> que comece e termine com o mesmo <<def_object,objeto>>)."

#. type: Labeled list
#: en/glossary-content.txt:107
#, no-wrap, priority:310
msgid "[[def_dangling_object]]dangling object"
msgstr "[[def_dangling_object]]dangling object (objeto pendurado, pendente)"

#. type: Plain text
#: en/glossary-content.txt:112
#, priority:310
msgid "An <<def_unreachable_object,unreachable object>> which is not <<def_reachable,reachable>> even from other unreachable objects; a dangling object has no references to it from any reference or <<def_object,object>> in the <<def_repository,repository>>."
msgstr "Um objeto <<def_unreachable_object,objeto inacessível>> que não seja <<def_reachable,acessível>>, mesmo a partir dos outros objetos inacessíveis; um objeto pendente não tem referências a ele vinda de nenhuma referência ou <<def_object,objeto>> no <<def_repository,repositório>>."

#. type: Labeled list
#: en/glossary-content.txt:113
#, no-wrap, priority:310
msgid "[[def_detached_HEAD]]detached HEAD"
msgstr "[[def_detached_HEAD]]detached HEAD (HEAD desanexado, CABEÇA desanexada)"

#. type: Plain text
#: en/glossary-content.txt:122
#, priority:310
msgid "Normally the <<def_HEAD,HEAD>> stores the name of a <<def_branch,branch>>, and commands that operate on the history HEAD represents operate on the history leading to the tip of the branch the HEAD points at.  However, Git also allows you to <<def_checkout,check out>> an arbitrary <<def_commit,commit>> that isn't necessarily the tip of any particular branch.  The HEAD in such a state is called \"detached\"."
msgstr "Normalmente, o <<def_HEAD,HEAD>> armazena o nome do <<def_branch,ramo>> e os comandos que operam no histórico que o `HEAD` representa, operam no histórico que leva ao cume do ramo onde o HEAD aponta.  No entanto, o Git também permite que você <<def_checkout,averigue>> um <<def_commit,commit>> arbitrário que não seja necessariamente o cume de qualquer ramo em particular.  O HEAD em tal condição é chamado de \"desanexado\" (detached)."

#. type: Plain text
#: en/glossary-content.txt:131
#, priority:310
msgid "Note that commands that operate on the history of the current branch (e.g. `git commit` to build a new history on top of it) still work while the HEAD is detached. They update the HEAD to point at the tip of the updated history without affecting any branch.  Commands that update or inquire information _about_ the current branch (e.g. `git branch --set-upstream-to` that sets what remote-tracking branch the current branch integrates with) obviously do not work, as there is no (real) current branch to ask about in this state."
msgstr "Observe que os comandos que operam no histórico do ramo atual (por exemplo o `git commit` para criar um novo histórico sobre ele) ainda funcionam enquanto o `HEAD` for desanexado. Eles atualizam o `HEAD` para apontar no topo do histórico atualizado sem afetar nenhum ramo.  Os comandos que atualizam ou consultam informações _sobre_ o ramo atual (por exemplo o comando `git branch --set-upstream-to` que define com qual ramo monitorado remotamente o ramo atual se integra) obviamente não funcionam, pois não há um ramo atual (real) para perguntar sobre esta condição."

#. type: Labeled list
#: en/glossary-content.txt:132
#, no-wrap, priority:310
msgid "[[def_directory]]directory"
msgstr "[[def_directory]]directory (diretório)"

#. type: Plain text
#: en/glossary-content.txt:134
#, priority:310
msgid "The list you get with \"ls\" :-)"
msgstr "A lista que você consegue com \"ls\" :-)"

#. type: Labeled list
#: en/glossary-content.txt:135
#, no-wrap, priority:310
msgid "[[def_dirty]]dirty"
msgstr "[[def_dirty]]dirty (sujo)"

#. type: Plain text
#: en/glossary-content.txt:139
#, priority:310
msgid "A <<def_working_tree,working tree>> is said to be \"dirty\" if it contains modifications which have not been <<def_commit,committed>> to the current <<def_branch,branch>>."
msgstr "Se diz que uma <<def_working_tree,árvore de trabalho>> está \"suja\" caso contenha alterações que não foram <<def_commit,feito os commits>> no <<def_branch,ramo>> atual."

#. type: Labeled list
#: en/glossary-content.txt:140
#, no-wrap, priority:310
msgid "[[def_evil_merge]]evil merge"
msgstr "[[def_evil_merge]]evil merge (mesclagem má, mau, ruim)"

#. type: Plain text
#: en/glossary-content.txt:143
#, priority:310
msgid "An evil merge is a <<def_merge,merge>> that introduces changes that do not appear in any <<def_parent,parent>>."
msgstr "Uma mesclagem má é uma <<def_merge,mesclagem>> que introduz as alterações que não aparecem em nenhuma <<def_parent,origem>>."

#. type: Labeled list
#: en/glossary-content.txt:144
#, no-wrap, priority:310
msgid "[[def_fast_forward]]fast-forward"
msgstr "[[def_fast_forward]]fast-forward (avanço-rápido)"

#. type: Plain text
#: en/glossary-content.txt:153
#, priority:310
msgid "A fast-forward is a special type of <<def_merge,merge>> where you have a <<def_revision,revision>> and you are \"merging\" another <<def_branch,branch>>'s changes that happen to be a descendant of what you have. In such a case, you do not make a new <<def_merge,merge>> <<def_commit,commit>> but instead just update your branch to point at the same revision as the branch you are merging. This will happen frequently on a <<def_remote_tracking_branch,remote-tracking branch>> of a remote <<def_repository,repository>>."
msgstr "Um avanço rápido é um tipo especial de <<def_merge,mesclagem>>, onde você tem uma <<def_revision,revisão>> e está \"mesclando\" outras alterações do <<def_branch,ramo>> que são descendentes do que você tem. Nesse caso, você não faz um <<def_merge,merge>> <<def_commit,commit>>, mas em vez disso, atualiza apenas o seu ramo para que aponte para a mesma revisão do ramo que você está fazendo a mesclagem. Isso acontecerá frequentemente em um <<def_remote_tracking_branch,ramo monitorado remotamente>> de um <<def_repository,repositório>> remoto."

#. type: Labeled list
#: en/glossary-content.txt:154
#, no-wrap, priority:310
msgid "[[def_fetch]]fetch"
msgstr "[[def_fetch]]fetch (busca)"

#. type: Plain text
#: en/glossary-content.txt:160
#, priority:310
msgid "Fetching a <<def_branch,branch>> means to get the branch's <<def_head_ref,head ref>> from a remote <<def_repository,repository>>, to find out which objects are missing from the local <<def_object_database,object database>>, and to get them, too.  See also linkgit:git-fetch[1]."
msgstr "Busque um <<def_branch,ramo>> significa obter o <<def_head_ref,cabeçalho ref>> de um ramo remoto <<def_repository,repositório>>, para descobrir quais os objetos estão faltando no local <<def_object_database,banco de dados do objeto>> e para obtê-los também.  Consulte também linkgit:git-fetch[1]."

#. type: Labeled list
#: en/glossary-content.txt:161
#, no-wrap, priority:310
msgid "[[def_file_system]]file system"
msgstr "[[def_file_system]]file system (sistema de arquivo)"

#. type: Plain text
#: en/glossary-content.txt:165
#, priority:310
msgid "Linus Torvalds originally designed Git to be a user space file system, i.e. the infrastructure to hold files and directories. That ensured the efficiency and speed of Git."
msgstr "O Linus Torvalds originalmente projetou o Git para ser um sistema de arquivos no espaço do usuário, ou seja, a infraestrutura para armazenar os arquivos e os diretórios. Isso garantiu a eficiência e a velocidade do Git."

#. type: Labeled list
#: en/glossary-content.txt:166
#, no-wrap, priority:310
msgid "[[def_git_archive]]Git archive"
msgstr "[[def_git_archive]]Git archive (arquivo Git)"

#. type: Plain text
#: en/glossary-content.txt:168
#, priority:310
msgid "Synonym for <<def_repository,repository>> (for arch people)."
msgstr "É um sinônimo para <<def_repository,repositório>> (para o pessoal do arch)."

#. type: Labeled list
#: en/glossary-content.txt:169
#, no-wrap, priority:310
msgid "[[def_gitfile]]gitfile"
msgstr "[[def_gitfile]]gitfile"

#. type: Plain text
#: en/glossary-content.txt:172
#, priority:310
msgid "A plain file `.git` at the root of a working tree that points at the directory that is the real repository."
msgstr "Um arquivo simples `.git` na raiz de uma árvore em funcionamento que aponte para o diretório que seja o repositório real."

#. type: Labeled list
#: en/glossary-content.txt:173
#, no-wrap, priority:310
msgid "[[def_grafts]]grafts"
msgstr "[[def_grafts]]grafts (grafos)"

#. type: Plain text
#: en/glossary-content.txt:179
#, priority:310
msgid "Grafts enables two otherwise different lines of development to be joined together by recording fake ancestry information for commits. This way you can make Git pretend the set of <<def_parent,parents>> a <<def_commit,commit>> has is different from what was recorded when the commit was created. Configured via the `.git/info/grafts` file."
msgstr "O Grafts permite que duas linhas de desenvolvimento diferentes sejam unidas, registrando informações falsas de ancestralidade para os commits. Dessa forma, é possível fazer o Git fingir que o conjunto de <<def_parent,parents>> um <<def_commit,commit>> tenha é diferente do que foi registrado quando o commit foi criado. Configurado através do arquivo `.git/info/grafts`."

#. type: Plain text
#: en/glossary-content.txt:183
#, priority:310
msgid "Note that the grafts mechanism is outdated and can lead to problems transferring objects between repositories; see linkgit:git-replace[1] for a more flexible and robust system to do the same thing."
msgstr "Observe que o mecanismo de enxertos está desatualizado e pode levar a problemas na transferência dos objetos entre os repositórios; para fazer a mesma coisa consulte linkgit:git-replace[1] para um sistema mais flexível e robusto."

#. type: Labeled list
#: en/glossary-content.txt:184
#, no-wrap, priority:310
msgid "[[def_hash]]hash"
msgstr "[[def_hash]]hash"

#. type: Plain text
#: en/glossary-content.txt:186
#, priority:310
msgid "In Git's context, synonym for <<def_object_name,object name>>."
msgstr "Em termos do Git, é um sinônimo para <<def_object_name,nome do objeto>>."

#. type: Labeled list
#: en/glossary-content.txt:187
#, no-wrap, priority:310
msgid "[[def_head]]head"
msgstr "[[def_head]]head (cabeçalho, cabeça)"

#. type: Plain text
#: en/glossary-content.txt:192
#, priority:310
msgid "A <<def_ref,named reference>> to the <<def_commit,commit>> at the tip of a <<def_branch,branch>>.  Heads are stored in a file in `$GIT_DIR/refs/heads/` directory, except when using packed refs. (See linkgit:git-pack-refs[1].)"
msgstr "Um <<def_ref,named reference>> para o <<def_commit,commit>> no topo do <<def_branch,ramo>>.  Os `HEADS` são armazenados em um arquivo no diretório `$GIT_DIR/refs/heads/`, exceto quando é utilizado um `ref` empacotado. (Consulte linkgit:git-pack-refs[1].)"

#. type: Labeled list
#: en/glossary-content.txt:193
#, no-wrap, priority:310
msgid "[[def_HEAD]]HEAD"
msgstr "[[def_HEAD]]HEAD (CABEÇALHO, CABEÇA)"

#. type: Plain text
#: en/glossary-content.txt:200
#, priority:310
msgid "The current <<def_branch,branch>>.  In more detail: Your <<def_working_tree, working tree>> is normally derived from the state of the tree referred to by HEAD.  HEAD is a reference to one of the <<def_head,heads>> in your repository, except when using a <<def_detached_HEAD,detached HEAD>>, in which case it directly references an arbitrary commit."
msgstr "O <<def_branch,ramo>> atual.  Com mais detalhes: A sua <<def_working_tree,árvore de trabalho>> normalmente deriva da condição da referência da árvore através do `HEAD`.  O `HEAD` é a referência para um dos <<def_head,cabeçalhos>> no seu repositório, exceto quando utilizar um <<def_detached_HEAD,HEAD desanexado>>, neste caso, referencia diretamente um commit arbitrário."

#. type: Labeled list
#: en/glossary-content.txt:201
#, no-wrap, priority:310
msgid "[[def_head_ref]]head ref"
msgstr "[[def_head_ref]]head ref (referência do cabeçalho)"

#. type: Plain text
#: en/glossary-content.txt:203
#, priority:310
msgid "A synonym for <<def_head,head>>."
msgstr "É um sinônimo para <<def_head,cabeçalho>>."

#. type: Labeled list
#: en/glossary-content.txt:204
#, no-wrap, priority:310
msgid "[[def_hook]]hook"
msgstr "[[def_hook]]hook (gancho)"

#. type: Plain text
#: en/glossary-content.txt:213
#, priority:310
msgid "During the normal execution of several Git commands, call-outs are made to optional scripts that allow a developer to add functionality or checking. Typically, the hooks allow for a command to be pre-verified and potentially aborted, and allow for a post-notification after the operation is done. The hook scripts are found in the `$GIT_DIR/hooks/` directory, and are enabled by simply removing the `.sample` suffix from the filename. In earlier versions of Git you had to make them executable."
msgstr "Durante a execução normal dos vários comandos Git, são feitas chamadas para os scripts opcionais que permitem que um desenvolvedor adicione mais funcionalidades ou verificações. Normalmente, os ganchos permitem que um comando seja pré-verificado e potencialmente abortado e permite uma notificação após a conclusão da operação. Os scripts do gancho são encontrados no diretório `$GIT_DIR/hooks/` e são ativados simplesmente ao remover o sufixo `.sample` do nome do arquivo. Nas versões anteriores do Git, era necessário torná-los executáveis."

#. type: Labeled list
#: en/glossary-content.txt:214
#, no-wrap, priority:310
msgid "[[def_index]]index"
msgstr "[[def_index]]index (índice)"

#. type: Plain text
#: en/glossary-content.txt:220
#, priority:310
msgid "A collection of files with stat information, whose contents are stored as objects. The index is a stored version of your <<def_working_tree,working tree>>. Truth be told, it can also contain a second, and even a third version of a working tree, which are used when <<def_merge,merging>>."
msgstr "Uma coleção dos arquivos com as informações das estatísticas, cujo conteúdo é armazenado como objetos. O índice é uma versão armazenada da sua <<def_working_tree,árvore de trabalho>>. Na verdade, ele também pode conter uma segunda e até terceira versão de uma árvore em funcionamento, que são usadas quando for <<def_merge,mesclado>>."

#. type: Labeled list
#: en/glossary-content.txt:221
#, no-wrap, priority:310
msgid "[[def_index_entry]]index entry"
msgstr "[[def_index_entry]]index entry (lançamento, entrada do índice)"

#. type: Plain text
#: en/glossary-content.txt:226
#, priority:310
msgid "The information regarding a particular file, stored in the <<def_index,index>>. An index entry can be unmerged, if a <<def_merge,merge>> was started, but not yet finished (i.e. if the index contains multiple versions of that file)."
msgstr "As informações sobre um determinado arquivo, armazenadas no <<def_index,índice>>. Uma entrada do índice pode ter a mesclagem removida, caso uma <<def_merge,mesclagem>> seja iniciada, porém ainda não foi concluído (ou seja, caso o índice contenha várias versões deste arquivo)."

#. type: Labeled list
#: en/glossary-content.txt:227
#, no-wrap, priority:310
msgid "[[def_master]]master"
msgstr "[[def_master]]master (mestre)"

#. type: Plain text
#: en/glossary-content.txt:233
#, priority:310
msgid "The default development <<def_branch,branch>>. Whenever you create a Git <<def_repository,repository>>, a branch named \"master\" is created, and becomes the active branch. In most cases, this contains the local development, though that is purely by convention and is not required."
msgstr "O desenvolvimento predefinido do <<def_branch,ramo>>. Sempre quando você cria um <<def_repository,repositório>> Git, um ramo chamado \"master\" é criado e se torna o ramo ativo. Na maioria dos casos, contém o desenvolvimento local, embora isto seja puramente por convenção e não seja necessário."

#. type: Labeled list
#: en/glossary-content.txt:234
#, no-wrap, priority:310
msgid "[[def_merge]]merge"
msgstr "[[def_merge]]merge (mesclar, mesclagem, juntar, combinar, misturar, fundir-se, unir, ligar-se)"

#. type: Plain text
#: en/glossary-content.txt:247
#, priority:310
msgid "As a verb: To bring the contents of another <<def_branch,branch>> (possibly from an external <<def_repository,repository>>) into the current branch.  In the case where the merged-in branch is from a different repository, this is done by first <<def_fetch,fetching>> the remote branch and then merging the result into the current branch.  This combination of fetch and merge operations is called a <<def_pull,pull>>.  Merging is performed by an automatic process that identifies changes made since the branches diverged, and then applies all those changes together.  In cases where changes conflict, manual intervention may be required to complete the merge."
msgstr "Como verbo: Para trazer o conteúdo de outro <<def_branch,ramo>> (possivelmente de um <<def_repository,repositório>> externo) para o ramo atual.  No caso onde a ramificação mesclada seja de um repositório diferente, primeiro isto é feito ao <<def_fetch,buscar>> (fetch) o ramo remoto e depois mesclando o seu resultado no ramo atual.  Essa combinação das operações de busca e mesclagem é chamada de <<def_pull,captura>> (pull).  A mesclagem é realizada através de um processo automático que identifica as alterações feitas desde que as ramificações divirjam e depois aplique todas estas alterações juntas.  Nos casos onde as alterações entrem em conflito, pode ser necessária intervenção manual para concluir a mesclagem."

#. type: Plain text
#: en/glossary-content.txt:254
#, priority:310
msgid "As a noun: unless it is a <<def_fast_forward,fast-forward>>, a successful merge results in the creation of a new <<def_commit,commit>> representing the result of the merge, and having as <<def_parent,parents>> the tips of the merged <<def_branch,branches>>.  This commit is referred to as a \"merge commit\", or sometimes just a \"merge\"."
msgstr "Como substantivo: a menos que seja um <<def_fast_forward,avanço rápido>>, uma mesclagem bem-sucedida resulta na criação de um novo <<def_commit,commit>> representando o resultado da mesclagem e tendo como <<def_parent,parentes>> as dicas das <<def_branch,ramificações>>.  Este commit refere-se ao chamado \"merge commit\" (commit da mesclagem) ou às vezes, apenas como \"mesclagem\"."

#. type: Labeled list
#: en/glossary-content.txt:255
#, no-wrap, priority:310
msgid "[[def_object]]object"
msgstr "[[def_object]]object (objeto)"

#. type: Plain text
#: en/glossary-content.txt:259
#, priority:310
msgid "The unit of storage in Git. It is uniquely identified by the <<def_SHA1,SHA-1>> of its contents. Consequently, an object cannot be changed."
msgstr "A unidade de armazenamento no Git. Ele é identificado exclusivamente pelo <<def_SHA1,SHA-1>> do seu conteúdo. Consequentemente, um objeto não pode ser alterado."

#. type: Labeled list
#: en/glossary-content.txt:260
#, no-wrap, priority:310
msgid "[[def_object_database]]object database"
msgstr "[[def_object_database]]object database (banco de dados do objeto)"

#. type: Plain text
#: en/glossary-content.txt:264
#, priority:310
msgid "Stores a set of \"objects\", and an individual <<def_object,object>> is identified by its <<def_object_name,object name>>. The objects usually live in `$GIT_DIR/objects/`."
msgstr "Armazena o conjunto de \"objetos\", e um <<def_object,objeto>> individual é identificado pelos seus <<def_object_name,nomes dos objetos>>. Geralmente o objeto reside no `$GIT_DIR/objects/`."

#. type: Labeled list
#: en/glossary-content.txt:265
#, no-wrap, priority:310
msgid "[[def_object_identifier]]object identifier"
msgstr "[[def_object_identifier]]object identifier (identificador do objeto)"

#. type: Plain text
#: en/glossary-content.txt:267
#, priority:310
msgid "Synonym for <<def_object_name,object name>>."
msgstr "É um sinônimo para o <<def_object_name,nome do objeto>>."

#. type: Labeled list
#: en/glossary-content.txt:268
#, no-wrap, priority:310
msgid "[[def_object_name]]object name"
msgstr "[[def_object_name]]object name (nome do objeto)"

#. type: Plain text
#: en/glossary-content.txt:272
#, priority:310
msgid "The unique identifier of an <<def_object,object>>.  The object name is usually represented by a 40 character hexadecimal string.  Also colloquially called <<def_SHA1,SHA-1>>."
msgstr "O identificador único para um <<def_object,objeto>>.  O nome do objeto geralmente é representado por uma sequência com 40 caracteres hexadecimais.  Também chamado coloquialmente de <<def_SHA1,SHA-1>>."

#. type: Labeled list
#: en/glossary-content.txt:273
#, no-wrap, priority:310
msgid "[[def_object_type]]object type"
msgstr "[[def_object_type]]tipo do objeto"

#. type: Plain text
#: en/glossary-content.txt:278
#, priority:310
msgid "One of the identifiers \"<<def_commit_object,commit>>\", \"<<def_tree_object,tree>>\", \"<<def_tag_object,tag>>\" or \"<<def_blob_object,blob>>\" describing the type of an <<def_object,object>>."
msgstr "Um dos identificadores \"<<def_commit_object,commit>>\", \"<<def_tree_object,árvore>>\", \"<<def_tag_object,tag>>\" ou \"<<def_blob_object,bolha>>\" descrevendo o tipo de um <<def_object,objeto>>."

#. type: Labeled list
#: en/glossary-content.txt:279
#, no-wrap, priority:310
msgid "[[def_octopus]]octopus"
msgstr "[[def_octopus]]octopus (polvo)"

#. type: Plain text
#: en/glossary-content.txt:281
#, priority:310
msgid "To <<def_merge,merge>> more than two <<def_branch,branches>>."
msgstr "Para <<def_merge,mesclar>> mais de duas <<def_branch,ramificações>>."

#. type: Labeled list
#: en/glossary-content.txt:282
#, no-wrap, priority:310
msgid "[[def_origin]]origin"
msgstr "[[def_origin]]origin (origem)"

#. type: Plain text
#: en/glossary-content.txt:289
#, priority:310
msgid "The default upstream <<def_repository,repository>>. Most projects have at least one upstream project which they track. By default 'origin' is used for that purpose. New upstream updates will be fetched into <<def_remote_tracking_branch,remote-tracking branches>> named origin/name-of-upstream-branch, which you can see using `git branch -r`."
msgstr "O <<def_repository,repositório>> upstream predefinido. A maioria dos projetos possui pelo menos um projeto \"upstream\" que eles monitoram. A predefinição 'origin' é usada para isso. As atualizações do novo \"upstream\" serão buscados no <<def_remote_tracking_branch,ramo monitorado remotamente>> chamado 'origin/name-of-upstream-branch', que você pode ver usando o comando `git branch -r`."

#. type: Labeled list
#: en/glossary-content.txt:290
#, no-wrap, priority:310
msgid "[[def_overlay]]overlay"
msgstr "[[def_overlay]]overlay (cobrir, revestir, sobrepor, capa, camada)"

#. type: Plain text
#: en/glossary-content.txt:298
#, priority:310
msgid "Only update and add files to the working directory, but don't delete them, similar to how 'cp -R' would update the contents in the destination directory.  This is the default mode in a <<def_checkout,checkout>> when checking out files from the <<def_index,index>> or a <<def_tree-ish,tree-ish>>.  In contrast, no-overlay mode also deletes tracked files not present in the source, similar to 'rsync --delete'."
msgstr "Atualize e adicione apenas os arquivos ao diretório de trabalho porém não os exclua, semelhante a como o comando 'cp -R' atualizaria o conteúdo no diretório de destino.  Este é o modo predefinido em <<def_checkout,checkout>> ao fazer averiguação dos arquivos vindo do <<def_index,índice>> ou <<def_tree-ish,tree-ish>>.  Por outro lado, o modo sem sobreposição também exclui os arquivos monitorados que não estão presentes na fonte, semelhante ao comando 'rsync --delete'."

#. type: Labeled list
#: en/glossary-content.txt:299
#, no-wrap, priority:310
msgid "[[def_pack]]pack"
msgstr "[[def_pack]]pack (pacote)"

#. type: Plain text
#: en/glossary-content.txt:302
#, priority:310
msgid "A set of objects which have been compressed into one file (to save space or to transmit them efficiently)."
msgstr "Um conjunto de objetos que foram compactados em um arquivo (para economizar espaço ou transmiti-los com eficiência)."

#. type: Labeled list
#: en/glossary-content.txt:303
#, no-wrap, priority:310
msgid "[[def_pack_index]]pack index"
msgstr "[[def_pack_index]]pack index (índice do pacote)"

#. type: Plain text
#: en/glossary-content.txt:307
#, priority:310
msgid "The list of identifiers, and other information, of the objects in a <<def_pack,pack>>, to assist in efficiently accessing the contents of a pack."
msgstr "A lista de identificadores e das outras informações dos objetos em um <<def_pack,pacote>>, para ajudar no acesso eficiente ao conteúdo de um pacote."

#. type: Labeled list
#: en/glossary-content.txt:308
#, no-wrap, priority:310
msgid "[[def_pathspec]]pathspec"
msgstr "[[def_pathspec]]pathspec (a especificação do caminho)"

#. type: Plain text
#: en/glossary-content.txt:310
#, priority:310
msgid "Pattern used to limit paths in Git commands."
msgstr "O padrão utilizado para limitar os caminhos nos comandos do Git."

#. type: Plain text
#: en/glossary-content.txt:318
#, priority:310
msgid "Pathspecs are used on the command line of \"git ls-files\", \"git ls-tree\", \"git add\", \"git grep\", \"git diff\", \"git checkout\", and many other commands to limit the scope of operations to some subset of the tree or working tree.  See the documentation of each command for whether paths are relative to the current directory or toplevel.  The pathspec syntax is as follows:"
msgstr "Os pathspecs são utilizados na linha de comando, os comando \"git ls-files\", \"git ls-tree\", \"git add\", \"git grep\", \"git diff\", \"git checkout\" e muitos outros para limitar o escopo das operações para algum subconjunto da árvore ou da árvore de trabalho.  Consulte a documentação de cada comando para saber se os caminhos são relativos ao diretório atual ou ao nível mais alto.  A sintaxe do pathspec é a seguinte:"

#. type: Plain text
#: en/glossary-content.txt:322
#, priority:310
msgid "any path matches itself"
msgstr "qualquer caminho corresponde a si próprio"

#. type: Plain text
#: en/glossary-content.txt:325
#, priority:310
msgid "the pathspec up to the last slash represents a directory prefix.  The scope of that pathspec is limited to that subtree."
msgstr "o pathspec até a última barra representa um prefixo do diretório.  O escopo deste pathspec é limitado a esta subárvore."

#. type: Plain text
#: en/glossary-content.txt:329
#, priority:310
msgid "the rest of the pathspec is a pattern for the remainder of the pathname.  Paths relative to the directory prefix will be matched against that pattern using fnmatch(3); in particular, '*' and '?' _can_ match directory separators."
msgstr "o restante do pathspec é um padrão para o restante do nome do caminho.  Os caminhos relativos ao prefixo do diretório serão comparados com este padrão usando fnmatch(3); '*' e '?' em particular _podem_ ser comparados com os separadores dos diretórios."

#. type: Plain text
#: en/glossary-content.txt:335
#, priority:310
msgid "For example, Documentation/*.jpg will match all .jpg files in the Documentation subtree, including Documentation/chapter_1/figure_1.jpg."
msgstr "Como por exemplo, 'Documentação/*.jpg' irá coincidir com todos os arquivos .jpg na subárvore 'Documentação', incluindo 'Documentação/capítulo_1/figura_1.jpg'."

#. type: Plain text
#: en/glossary-content.txt:345
#, priority:310
msgid "A pathspec that begins with a colon `:` has special meaning.  In the short form, the leading colon `:` is followed by zero or more \"magic signature\" letters (which optionally is terminated by another colon `:`), and the remainder is the pattern to match against the path.  The \"magic signature\" consists of ASCII symbols that are neither alphanumeric, glob, regex special characters nor colon.  The optional colon that terminates the \"magic signature\" can be omitted if the pattern begins with a character that does not belong to \"magic signature\" symbol set and is not a colon."
msgstr "Um pathspec que começa com dois pontos `:` tem um significado especial.  Na forma abreviada, os dois pontos iniciais `:` são seguidos por zero ou mais letras da \"assinatura mágica\" (que opcionalmente são terminadas por outros dois pontos `:`), o restante é o padrão que será comparado ao caminho.  A \"assinatura mágica\" consiste em símbolos ASCII que não são caracteres alfanuméricos, 'glob', 'regex' nem caracteres especiais.  Os dois pontos opcionais que encerram a \"assinatura mágica\" podem ser omitidos caso o padrão comece com um caractere que não pertença ao conjunto dos símbolos da \"assinatura mágica\" e não seja dois pontos."

#. type: Plain text
#: en/glossary-content.txt:350
#, priority:310
msgid "In the long form, the leading colon `:` is followed by an open parenthesis `(`, a comma-separated list of zero or more \"magic words\", and a close parentheses `)`, and the remainder is the pattern to match against the path."
msgstr "Na forma longa, os dois pontos iniciais `:` são seguidos por um parêntese aberto `(`, uma lista separada por vírgula de zeros ou mais \"palavras mágicas\" e parênteses próximos `)`, o restante é o padrão para coincidir contra o caminho."

#. type: Plain text
#: en/glossary-content.txt:353
#, priority:310
msgid "A pathspec with only a colon means \"there is no pathspec\". This form should not be combined with other pathspec."
msgstr "Um pathspec com apenas dois pontos significa \"não há um pathspec\". Este formulário não deve ser combinado com um outro pathspec."

#. type: Labeled list
#: en/glossary-content.txt:355
#, no-wrap, priority:310
msgid "top"
msgstr "top"

#. type: Plain text
#: en/glossary-content.txt:359
#, priority:310
msgid "The magic word `top` (magic signature: `/`) makes the pattern match from the root of the working tree, even when you are running the command from inside a subdirectory."
msgstr "A palavra mágica `top` (assinatura mágica: `/`) faz o padrão da raiz da árvore de trabalho coincidir mesmo quando você está executando o comando de dentro de um subdiretório."

#. type: Labeled list
#: en/glossary-content.txt:360
#, no-wrap, priority:310
msgid "literal"
msgstr "literal"

#. type: Plain text
#: en/glossary-content.txt:363
#, priority:310
msgid "Wildcards in the pattern such as `*` or `?` are treated as literal characters."
msgstr "Curingas no padrão como `*` ou `?` são tratados como caracteres literais."

#. type: Labeled list
#: en/glossary-content.txt:364
#, no-wrap, priority:310
msgid "icase"
msgstr "icase"

#. type: Plain text
#: en/glossary-content.txt:366
#, priority:310
msgid "Case insensitive match."
msgstr "Coincidência indiferente a letras maiúsculas ou minúsculas."

#. type: Labeled list
#: en/glossary-content.txt:367
#, no-wrap, priority:310
msgid "glob"
msgstr "glob"

#. type: Plain text
#: en/glossary-content.txt:374
#, priority:310
msgid "Git treats the pattern as a shell glob suitable for consumption by fnmatch(3) with the FNM_PATHNAME flag: wildcards in the pattern will not match a / in the pathname.  For example, \"Documentation/{asterisk}.html\" matches \"Documentation/git.html\" but not \"Documentation/ppc/ppc.html\" or \"tools/perf/Documentation/perf.html\"."
msgstr "O Git trata o padrão como um \"shell glob\" adequado para o consumo do `fnmatch(3)` com a sinalização `FNM_PATHNAME`: curingas no padrão não corresponderão com o `pathname`.  Por exemplo, \"Documentation/{asterisk}.html\" coincide com \"Documentation/git.html\", mas não com \"Documentation/ppc/ppc.html\" ou \"tools/perf/Documentation/perf.html\"."

#. type: Plain text
#: en/glossary-content.txt:377
#, priority:310
msgid "Two consecutive asterisks (\"`**`\") in patterns matched against full pathname may have special meaning:"
msgstr "Dois asteriscos consecutivos (\"`**`\") nos padrões coincidentes ao `pathname` completo podem ter um significado especial:"

#. type: Plain text
#: en/glossary-content.txt:383
#, priority:310
msgid "A leading \"`**`\" followed by a slash means match in all directories. For example, \"`**/foo`\" matches file or directory \"`foo`\" anywhere, the same as pattern \"`foo`\". \"`**/foo/bar`\" matches file or directory \"`bar`\" anywhere that is directly under directory \"`foo`\"."
msgstr "Um \"`**`\" inicial seguido de uma barra significa que houve coincidência em todos os diretórios. Por exemplo, \"`**foo`\" é coincidente ao arquivo ou diretório \"`foo`\" em qualquer lugar, o mesmo que o padrão \"`foo`\". \"`**/foo/bar`\" é coincidente ao arquivo ou diretório \"`bar`\" em qualquer lugar que esteja diretamente sob o diretório \"`foo`\"."

#. type: Plain text
#: en/glossary-content.txt:387
#, priority:310
msgid "A trailing \"`/**`\" matches everything inside. For example, \"`abc/**`\" matches all files inside directory \"abc\", relative to the location of the `.gitignore` file, with infinite depth."
msgstr "Um \"`/**`\" à direita corresponde a tudo que estiver dentro. Por exemplo, \"`abc/**`\" coincide todos os arquivos dentro do diretório \"abc\", relativos à localização do arquivo `.gitignore`, com uma profundidade infinita."

#. type: Plain text
#: en/glossary-content.txt:391
#, priority:310
msgid "A slash followed by two consecutive asterisks then a slash matches zero or more directories. For example, \"`a/**/b`\" matches \"`a/b`\", \"`a/x/b`\", \"`a/x/y/b`\" and so on."
msgstr "Uma barra seguida por dois asteriscos consecutivos e uma barra coincide com zero ou mais diretórios. Por exemplo, \"`a/**/b`\" coincide com \"`a/b`\", \"`a/x/b`\", \"`a/x/y/b`\" e assim por diante."

#. type: Plain text
#: en/glossary-content.txt:393
#, priority:310
msgid "Other consecutive asterisks are considered invalid."
msgstr "Os outros asteriscos consecutivos são considerados inválidos."

#. type: Plain text
#: en/glossary-content.txt:395
#, priority:310
msgid "Glob magic is incompatible with literal magic."
msgstr "A magica \"glob\" é incompatível com a mágica literal."

#. type: Labeled list
#: en/glossary-content.txt:396
#, no-wrap, priority:310
msgid "attr"
msgstr "attr"

#. type: Plain text
#: en/glossary-content.txt:402
#, priority:310
msgid "After `attr:` comes a space separated list of \"attribute requirements\", all of which must be met in order for the path to be considered a match; this is in addition to the usual non-magic pathspec pattern matching.  See linkgit:gitattributes[5]."
msgstr "Após o `attr:`, vem um espaço separado da lista do \"attribute requirements\" (requisitos dos atributos), todos os quais devem ser atendidos para que o caminho seja considerado uma correspondência; isso é um acréscimo à coincidência usual dos padrões do `pathspec`.  Consulte linkgit:gitattributes[5]."

#. type: Plain text
#: en/glossary-content.txt:405
#, priority:310
msgid "Each of the attribute requirements for the path takes one of these forms:"
msgstr "Cada um dos requisitos de atributo para o caminho assume uma destas formas:"

#. type: Plain text
#: en/glossary-content.txt:407
#, priority:310
msgid "\"`ATTR`\" requires that the attribute `ATTR` be set."
msgstr "\"`ATTR`\" requer que o atributo `ATTR` seja definido."

#. type: Plain text
#: en/glossary-content.txt:409
#, priority:310
msgid "\"`-ATTR`\" requires that the attribute `ATTR` be unset."
msgstr "\"`ATTR`\" requer que o atributo `ATTR` não seja definido."

#. type: Plain text
#: en/glossary-content.txt:412
#, priority:310
msgid "\"`ATTR=VALUE`\" requires that the attribute `ATTR` be set to the string `VALUE`."
msgstr "\"`ATTR=VALUE`\" requer que o atributo `ATTR` seja definido como a string `VALUE`."

#. type: Plain text
#: en/glossary-content.txt:415
#, priority:310
msgid "\"`!ATTR`\" requires that the attribute `ATTR` be unspecified."
msgstr "\"`!ATTR`\"requer que o atributo` ATTR` não seja especificado."

#. type: Plain text
#: en/glossary-content.txt:418
#, priority:310
msgid "Note that when matching against a tree object, attributes are still obtained from working tree, not from the given tree object."
msgstr "Observe que durante a coincidência com um objeto da árvore, os atributos ainda serão obtidos da mesma e não do objeto da árvore especificado."

#. type: Labeled list
#: en/glossary-content.txt:419
#, no-wrap, priority:310
msgid "exclude"
msgstr "exclude (excluí)"

#. type: Plain text
#: en/glossary-content.txt:425
#, priority:310
msgid "After a path matches any non-exclude pathspec, it will be run through all exclude pathspecs (magic signature: `!` or its synonym `^`). If it matches, the path is ignored.  When there is no non-exclude pathspec, the exclusion is applied to the result set as if invoked without any pathspec."
msgstr "Depois que um caminho coincida com qualquer `pathspec` que não foi excluído ele será executado em todos os `pathspecs` que foram excluídos (assinatura mágica: `!` or its synonym `^`). Caso coincida, o caminho é ignorado.  Quando não há um `pathspec` não excluído a exclusão é aplicada ao conjunto de resultados como se fosse invocada sem nenhum `pathspec`."

#. type: Labeled list
#: en/glossary-content.txt:427
#, no-wrap, priority:310
msgid "[[def_parent]]parent"
msgstr "[[def_parent]]parent (pai, origem, matriz)"

#. type: Plain text
#: en/glossary-content.txt:431
#, priority:310
msgid "A <<def_commit_object,commit object>> contains a (possibly empty) list of the logical predecessor(s) in the line of development, i.e. its parents."
msgstr "Um <<def_commit_object,objeto commit>> contém uma lista (possivelmente vazia) dos predecessores lógicos na linha de desenvolvimento, ou seja, as suas origens."

#. type: Labeled list
#: en/glossary-content.txt:432
#, no-wrap, priority:310
msgid "[[def_pickaxe]]pickaxe"
msgstr "[[def_pickaxe]]pickaxe"

#. type: Plain text
#: en/glossary-content.txt:438
#, priority:310
msgid "The term <<def_pickaxe,pickaxe>> refers to an option to the diffcore routines that help select changes that add or delete a given text string. With the `--pickaxe-all` option, it can be used to view the full <<def_changeset,changeset>> that introduced or removed, say, a particular line of text. See linkgit:git-diff[1]."
msgstr "O termo <<def_pickaxe,pickaxe>> refere-se a uma opção para as rotinas `diffcore` que ajudam a selecionar as alterações que adicionam ou excluem uma determinada string. Com a opção `--pickaxe-all`, ela pode ser utilizada para visualizar completamente o <<def_changeset,changeset>> que introduziu ou removeu, digamos, uma determinada linha de texto. Consulte linkgit:git-diff[1]."

#. type: Labeled list
#: en/glossary-content.txt:439
#, no-wrap, priority:310
msgid "[[def_plumbing]]plumbing"
msgstr "[[def_plumbing]]plumbing (encanamento)"

#. type: Plain text
#: en/glossary-content.txt:441
#, priority:310
msgid "Cute name for <<def_core_git,core Git>>."
msgstr "Um nome bonito para <<def_core_git,núcleo do Git>>."

#. type: Labeled list
#: en/glossary-content.txt:442
#, no-wrap, priority:310
msgid "[[def_porcelain]]porcelain"
msgstr "[[def_porcelain]]porcelain (porcelana)"

#. type: Plain text
#: en/glossary-content.txt:447
#, priority:310
msgid "Cute name for programs and program suites depending on <<def_core_git,core Git>>, presenting a high level access to core Git. Porcelains expose more of a <<def_SCM,SCM>> interface than the <<def_plumbing,plumbing>>."
msgstr "Nome bonito para programas e conjunto de programas, dependendo do <<def_core_git,núcleo do Git>>, apresentando um acesso de alto nível ao núcleo do Git principal. As porcelanas expõem mais uma interface <<def_SCM,SCM>> do que o <<def_plumbing,plumbing>>."

#. type: Labeled list
#: en/glossary-content.txt:448
#, no-wrap, priority:310
msgid "[[def_per_worktree_ref]]per-worktree ref"
msgstr "[[def_per_worktree_ref]]per-worktree ref (referência por árvore de trabalho)"

#. type: Plain text
#: en/glossary-content.txt:453
#, priority:310
msgid "Refs that are per-<<def_worktree,worktree>>, rather than global.  This is presently only <<def_HEAD,HEAD>> and any refs that start with `refs/bisect/`, but might later include other unusual refs."
msgstr "As refs que são por-<<def_work_tree,worktree>> em vez de global.  Atualmente isto é apresentado apenas como <<def_HEAD,HEAD>> e qualquer outra `refs` que inicie com `refs/bisect/`, mas podem posteriormente, incluir outras `refs` incomuns."

#. type: Labeled list
#: en/glossary-content.txt:454
#, no-wrap, priority:310
msgid "[[def_pseudoref]]pseudoref"
msgstr "[[def_pseudoref]]pseudoref (pseudo referência)"

#. type: Plain text
#: en/glossary-content.txt:469
#, priority:310
msgid "Pseudorefs are a class of files under `$GIT_DIR` which behave like refs for the purposes of rev-parse, but which are treated specially by git.  Pseudorefs both have names that are all-caps, and always start with a line consisting of a <<def_SHA1,SHA-1>> followed by whitespace.  So, HEAD is not a pseudoref, because it is sometimes a symbolic ref.  They might optionally contain some additional data.  `MERGE_HEAD` and `CHERRY_PICK_HEAD` are examples.  Unlike <<def_per_worktree_ref,per-worktree refs>>, these files cannot be symbolic refs, and never have reflogs.  They also cannot be updated through the normal ref update machinery.  Instead, they are updated by directly writing to the files.  However, they can be read as if they were refs, so `git rev-parse MERGE_HEAD` will work."
msgstr "`Pseudorefs` são uma classe de arquivos em `$GIT_DIR` que se comporta como `refs` para fins de análise de revisão, no entanto, são tratados especialmente pelo git.  Os `pseudorefs` têm nomes com maiúsculas e sempre começam com uma linha que consiste em <<def_SHA1,SHA-1>>, seguido por um espaço.  Portanto, `HEAD` não é um `pseudoref` pois às vezes é um `ref` simbólico.  Opcionalmente eles podem conter alguns dados adicionais.  São exemplos `MERGE_HEAD` e `CHERRY_PICK_HEAD`.  Ao contrário do <<def_per_worktree_ref,per-worktree refs>>, estes arquivos não podem ser `refs` simbólicos e nunca possuem um `reflogs`.  Eles também não podem ser atualizados através do mecanismo `ref` normal de atualização.  Em vez disso, eles são atualizados gravando diretamente nos arquivos.  No entanto, eles podem ser lidos como se fossem `refs`, portanto, `git rev-parse MERGE_HEAD` funcionará."

#. type: Labeled list
#: en/glossary-content.txt:470
#, no-wrap, priority:310
msgid "[[def_pull]]pull"
msgstr "[[def_pull]]pull (captura, puxar, atrair, apertar)"

#. type: Plain text
#: en/glossary-content.txt:473
#, priority:310
msgid "Pulling a <<def_branch,branch>> means to <<def_fetch,fetch>> it and <<def_merge,merge>> it.  See also linkgit:git-pull[1]."
msgstr "Captura um <<def_branch,ramo>> significa <<def_fetch,fetch (obter)>> e <<def_merge,merge (mesclar)>>.  Consulte também linkgit:git-pull[1]."

#. type: Labeled list
#: en/glossary-content.txt:474
#, no-wrap, priority:310
msgid "[[def_push]]push"
msgstr "[[def_push]]push (impulsionar, impulso, empurrar, apertar, pressionar, forçar, investida)"

#. type: Plain text
#: en/glossary-content.txt:485
#, priority:310
msgid "Pushing a <<def_branch,branch>> means to get the branch's <<def_head_ref,head ref>> from a remote <<def_repository,repository>>, find out if it is an ancestor to the branch's local head ref, and in that case, putting all objects, which are <<def_reachable,reachable>> from the local head ref, and which are missing from the remote repository, into the remote <<def_object_database,object database>>, and updating the remote head ref. If the remote <<def_head,head>> is not an ancestor to the local head, the push fails."
msgstr "Fazer um impulsionamento ao <<def_branch,ramo>> significa pegar a <<def_head_ref,ref do cabeçalho>> do ramo de um <<def_repository,repositório>> remoto, descobrir se é um ancestral da ref (referência) do cabeçalho local e nesse caso, colocar todos os objetos que são <<def_reachable,acessíveis>> com base na ref do cabeçalho local e que estão faltando a partir do repositório remoto, para o <<def_object_database,banco de dados do objeto>> que atualiza a ref do cabeçalho remoto. Caso o <<def_head,cabeçalho>> não seja um ancestral do cabeçalho local, o impulsionamento (push) vai falhar."

#. type: Labeled list
#: en/glossary-content.txt:486
#, no-wrap, priority:310
msgid "[[def_reachable]]reachable"
msgstr "[[def_reachable]]reachable (acessível ou alcançável)"

#. type: Plain text
#: en/glossary-content.txt:495
#, priority:310
msgid "All of the ancestors of a given <<def_commit,commit>> are said to be \"reachable\" from that commit. More generally, one <<def_object,object>> is reachable from another if we can reach the one from the other by a <<def_chain,chain>> that follows <<def_tag,tags>> to whatever they tag, <<def_commit_object,commits>> to their parents or trees, and <<def_tree_object,trees>> to the trees or <<def_blob_object,blobs>> that they contain."
msgstr "Todos os ancestrais de um determinado <<def_commit,commit>> são considerados \"reachable\" (ou acessíveis) a partir deste commit. De um modo mais geral, um <<def_object,objeto>> é acessível a partir do outro se pudermos alcançá-lo através de um <<def_chain,chain>> seguido de <<def_tag,tags>> para o que quer que eles marque com uma tag, <<def_commit_object,commits>> para as suas origens ou árvores, e as <<def_tree_object,árvores>> para as árvores ou as <<def_blob_object,bolhas>> que os contém."

#. type: Labeled list
#: en/glossary-content.txt:496
#, no-wrap, priority:310
msgid "[[def_rebase]]rebase"
msgstr "[[def_rebase]]rebase (reconstrução da fundação ou reconstrução)"

#. type: Plain text
#: en/glossary-content.txt:500
#, priority:310
msgid "To reapply a series of changes from a <<def_branch,branch>> to a different base, and reset the <<def_head,head>> of that branch to the result."
msgstr "Para reaplicar uma série de alterações de uma <<def_branch,ramo>> para uma base diferente e redefinir o <<def_head,head>> dessa ramificação para o resultado."

#. type: Labeled list
#: en/glossary-content.txt:501
#, no-wrap, priority:310
msgid "[[def_ref]]ref"
msgstr "[[def_ref]]ref (referência)"

#. type: Plain text
#: en/glossary-content.txt:509
#, priority:310
msgid "A name that begins with `refs/` (e.g. `refs/heads/master`)  that points to an <<def_object_name,object name>> or another ref (the latter is called a <<def_symref,symbolic ref>>).  For convenience, a ref can sometimes be abbreviated when used as an argument to a Git command; see linkgit:gitrevisions[7] for details.  Refs are stored in the <<def_repository,repository>>."
msgstr "Um nome que comece com `refs/` (por exemplo, `refs/heads/master`) que aponte para um <<def_object_name,object name>> ou outro ref (o último é chamado de <<def_symref,ref simbólica>>).  Por conveniência, uma `ref` as vezes pode ser abreviado quando utilizado como um argumento em um comando Git; Para mais detalhes consulte linkgit:gitrevisions[7].  As `refs` são armazenadas no <<def_repository,repositório>>."

#. type: Plain text
#: en/glossary-content.txt:513
#, priority:310
msgid "The ref namespace is hierarchical.  Different subhierarchies are used for different purposes (e.g. the `refs/heads/` hierarchy is used to represent local branches)."
msgstr "O espaço de nomes da ref é hierárquico.  Sub-hierarquias diferentes são utilizadas para diferentes propósitos (por exemplo, a hierarquia `refs/heads/` é utilizada para representar as ramificações locais)."

#. type: Plain text
#: en/glossary-content.txt:516
#, priority:310
msgid "There are a few special-purpose refs that do not begin with `refs/`.  The most notable example is `HEAD`."
msgstr "Existem algumas referências especiais que não começam com `refs/`.  O exemplo mais notável é `HEAD`."

#. type: Labeled list
#: en/glossary-content.txt:517
#, no-wrap, priority:310
msgid "[[def_reflog]]reflog"
msgstr "[[def_reflog]]reflog"

#. type: Plain text
#: en/glossary-content.txt:522
#, priority:310
msgid "A reflog shows the local \"history\" of a ref.  In other words, it can tell you what the 3rd last revision in _this_ repository was, and what was the current state in _this_ repository, yesterday 9:14pm.  See linkgit:git-reflog[1] for details."
msgstr "Um `reflog` exibe o \"histórico\" local de uma `ref`.  Em outras palavras, ele pode informar qual foi a 3ª última revisão _neste_ repositório e qual era a sua condição atual, ontem às 21:14.  Para mais detalhes consulte o comando linkgit:git-reflog[1]."

#. type: Labeled list
#: en/glossary-content.txt:523
#, no-wrap, priority:310
msgid "[[def_refspec]]refspec"
msgstr "[[def_refspec]]refspec"

#. type: Plain text
#: en/glossary-content.txt:527
#, priority:310
msgid "A \"refspec\" is used by <<def_fetch,fetch>> and <<def_push,push>> to describe the mapping between remote <<def_ref,ref>> and local ref."
msgstr "Um `refspec` é utilizado por <<def_fetch,fetch>> e <<def_push,push>> para descrever o mapeamento entre <<def_ref,ref>> remoto e o `ref` local."

#. type: Labeled list
#: en/glossary-content.txt:528
#, no-wrap, priority:310
msgid "[[def_remote]]remote repository"
msgstr "[[def_remote]]remote repository (repositório remoto)"

#. type: Plain text
#: en/glossary-content.txt:532
#, priority:310
msgid "A <<def_repository,repository>> which is used to track the same project but resides somewhere else. To communicate with remotes, see <<def_fetch,fetch>> or <<def_push,push>>."
msgstr "Um <<def_repository,repositório>> que é utilizado para rastrear os mesmo projeto porém reside em um outro lugar. Para se comunicar com ramos remotos, consulte <<def_fetch,fetch>> ou <<def_push,push>>."

#. type: Labeled list
#: en/glossary-content.txt:533
#, no-wrap, priority:310
msgid "[[def_remote_tracking_branch]]remote-tracking branch"
msgstr "[[def_remote_tracking_branch]]remote-tracking branch (monitorando os ramos remotamente)"

#. type: Plain text
#: en/glossary-content.txt:541
#, priority:310
msgid "A <<def_ref,ref>> that is used to follow changes from another <<def_repository,repository>>. It typically looks like 'refs/remotes/foo/bar' (indicating that it tracks a branch named 'bar' in a remote named 'foo'), and matches the right-hand-side of a configured fetch <<def_refspec,refspec>>. A remote-tracking branch should not contain direct modifications or have local commits made to it."
msgstr "Um <<def_ref,ref>> que é utilizado para rastrear as modificações de outro <<def_repository,repositório>>. Normalmente se parece com 'refs/remotes/foo/bar' (indicando que rastreia um ramo com nome 'bar' e um remoto chamado 'foo'), coincide o lado direito do `fetch` configurado <<def_refspec,refspec>>. Um ramo monitorado remotamente não deve conter alterações diretas, tão pouco, ter commits locais."

#. type: Labeled list
#: en/glossary-content.txt:542
#, no-wrap, priority:310
msgid "[[def_repository]]repository"
msgstr "[[def_repository]]repository (repositório)"

#. type: Plain text
#: en/glossary-content.txt:549
#, priority:310
msgid "A collection of <<def_ref,refs>> together with an <<def_object_database,object database>> containing all objects which are <<def_reachable,reachable>> from the refs, possibly accompanied by meta data from one or more <<def_porcelain,porcelains>>. A repository can share an object database with other repositories via <<def_alternate_object_database,alternates mechanism>>."
msgstr "Uma coleção de <<def_ref,refs>> junto com um <<def_object_database,banco de dados do objeto>> contendo todos os objetos que são <<def_reachable,acessível>> vindas das `refs`, possivelmente acompanhados por metadados de um ou mais <<def_porcelain,porcelanas>>. Um repositório pode compartilhar um banco de dados de objetos com outros repositórios através de <<def_alternate_object_database,mecanismo alternativo>>."

#. type: Labeled list
#: en/glossary-content.txt:550
#, no-wrap, priority:310
msgid "[[def_resolve]]resolve"
msgstr "[[def_resolve]]resolve"

#. type: Plain text
#: en/glossary-content.txt:553
#, priority:310
msgid "The action of fixing up manually what a failed automatic <<def_merge,merge>> left behind."
msgstr "A ação de corrigir manualmente o que uma falha automática <<def_merge,mesclagem>> deixou para trás."

#. type: Labeled list
#: en/glossary-content.txt:554
#, no-wrap, priority:310
msgid "[[def_revision]]revision"
msgstr "[[def_revision]]revision (revisão)"

#. type: Plain text
#: en/glossary-content.txt:556
#, priority:310
msgid "Synonym for <<def_commit,commit>> (the noun)."
msgstr "Um sinônimo de <<def_commit,commit>> (o substantivo)."

#. type: Labeled list
#: en/glossary-content.txt:557
#, no-wrap, priority:310
msgid "[[def_rewind]]rewind"
msgstr "[[def_rewind]]rewind (rebobinar, retroceder)"

#. type: Plain text
#: en/glossary-content.txt:560
#, priority:310
msgid "To throw away part of the development, i.e. to assign the <<def_head,head>> to an earlier <<def_revision,revision>>."
msgstr "Para jogar fora parte do desenvolvimento, ou seja, atribuir <<def_head,head>> a um <<def_revision,revisão>> anterior."

#. type: Labeled list
#: en/glossary-content.txt:561
#, no-wrap, priority:310
msgid "[[def_SCM]]SCM"
msgstr "[[def_SCM]]SCM"

#. type: Plain text
#: en/glossary-content.txt:563
#, priority:310
msgid "Source code management (tool)."
msgstr "Gerenciamento do código fonte (ferramenta)."

#. type: Labeled list
#: en/glossary-content.txt:564
#, no-wrap, priority:310
msgid "[[def_SHA1]]SHA-1"
msgstr "[[def_SHA1]]SHA-1"

#. type: Plain text
#: en/glossary-content.txt:567
#, priority:310
msgid "\"Secure Hash Algorithm 1\"; a cryptographic hash function.  In the context of Git used as a synonym for <<def_object_name,object name>>."
msgstr "\"Secure Hash Algorithm 1\"; uma função hash de criptográfica.  No contexto do Git utilizado como sinônimo de <<def_object_name,object name>>."

#. type: Labeled list
#: en/glossary-content.txt:568
#, no-wrap, priority:310
msgid "[[def_shallow_clone]]shallow clone"
msgstr "[[def_shallow_clone]]shallow clone (clonagem superficial)"

#. type: Plain text
#: en/glossary-content.txt:572
#, ignore-ellipsis, priority:310
msgid "Mostly a synonym to <<def_shallow_repository,shallow repository>> but the phrase makes it more explicit that it was created by running `git clone --depth=...` command."
msgstr "Em geral um sinônimo para <<def_shallow_repository,shallow repository>> porém a frase a torna mais explicita criada ao executar o comando `git clone --depth=...`."

#. type: Labeled list
#: en/glossary-content.txt:573
#, no-wrap, priority:310
msgid "[[def_shallow_repository]]shallow repository"
msgstr "[[def_shallow_repository]]shallow repository (repositório raso)"

#. type: Plain text
#: en/glossary-content.txt:583
#, priority:310
msgid "A shallow <<def_repository,repository>> has an incomplete history some of whose <<def_commit,commits>> have <<def_parent,parents>> cauterized away (in other words, Git is told to pretend that these commits do not have the parents, even though they are recorded in the <<def_commit_object,commit object>>). This is sometimes useful when you are interested only in the recent history of a project even though the real history recorded in the upstream is much larger. A shallow repository is created by giving the `--depth` option to linkgit:git-clone[1], and its history can be later deepened with linkgit:git-fetch[1]."
msgstr "Um <<def_repository,repositório>> repositório raso possui um histórico incompleto da quais <<def_commit,commits>> possui <<def_parent,parents>> dos quais cauterizam (em outras palavras, o Git é informado para fingir que estes commits não possuam origens, ainda que esteja cadastrados no <<def_commit_object,objeto commit>>). Algumas vezes é útil quando você está interessado apenas no histórico recente de um projeto, ainda que o histórico real registrado no \"upstream\" seja muito maior. Um repositório raso é criado, ao usar a opção `--depth` para linkgit:git-clone[1] e o seu histórico pode ser aprofundado posteriormente com linkgit:git-fetch[1]."

#. type: Labeled list
#: en/glossary-content.txt:584
#, no-wrap, priority:310
msgid "[[def_stash]]stash entry"
msgstr "[[def_stash]]stash entry (lançamento para a armazenagem)"

#. type: Plain text
#: en/glossary-content.txt:587
#, priority:310
msgid "An <<def_object,object>> used to temporarily store the contents of a <<def_dirty,dirty>> working directory and the index for future reuse."
msgstr "Um <<def_object,objeto>> é utilizado para armazenar temporariamente o conteúdo de um diretório de trabalho <<def_dirty,sujo>> e o seu índice para utilização futura."

#. type: Labeled list
#: en/glossary-content.txt:588
#, no-wrap, priority:310
msgid "[[def_submodule]]submodule"
msgstr "[[def_submodule]]submodule (submódulo)"

#. type: Plain text
#: en/glossary-content.txt:592
#, priority:310
msgid "A <<def_repository,repository>> that holds the history of a separate project inside another repository (the latter of which is called <<def_superproject, superproject>>)."
msgstr "Um <<def_repository,repositório>> retém o histórico de um projeto separado dentro de um outro repositório (o último na qual é chamado de <<def_superproject, superproject>>)."

#. type: Labeled list
#: en/glossary-content.txt:593
#, no-wrap, priority:310
msgid "[[def_superproject]]superproject"
msgstr "[[def_superproject]]superproject (superprojeto)"

#. type: Plain text
#: en/glossary-content.txt:598
#, priority:310
msgid "A <<def_repository,repository>> that references repositories of other projects in its working tree as <<def_submodule,submodules>>.  The superproject knows about the names of (but does not hold copies of) commit objects of the contained submodules."
msgstr "Um <<def_repository,repositório>> se refere a repositórios de outros projetos em suas próprias árvores de trabalho como <<def_submodule,submódulo>>.  O superprojeto conhece os nomes dos (mas não mantém cópias de nenhum deles) commits dos objetos que contenham os submódulos."

#. type: Labeled list
#: en/glossary-content.txt:599
#, no-wrap, priority:310
msgid "[[def_symref]]symref"
msgstr "[[def_symref]]symref (referência simbólica)"

#. type: Plain text
#: en/glossary-content.txt:606
#, priority:310
msgid "Symbolic reference: instead of containing the <<def_SHA1,SHA-1>> id itself, it is of the format 'ref: refs/some/thing' and when referenced, it recursively dereferences to this reference.  '<<def_HEAD,HEAD>>' is a prime example of a symref. Symbolic references are manipulated with the linkgit:git-symbolic-ref[1] command."
msgstr "Uma referência simbólica: em vez de conter o próprio id <<def_SHA1,SHA-1>>, ele tem o formato 'ref: refs/some/thing' e quando é referenciado faz uma referência recursiva a essa referência.  '<<def_HEAD,HEAD>>' é o exemplo primário de um `symref`. As referências simbólicas são manipuladas com o comando linkgit:git-symbolic-ref[1]."

#. type: Labeled list
#: en/glossary-content.txt:607
#, no-wrap, priority:310
msgid "[[def_tag]]tag"
msgstr "[[def_tag]]tag (etiqueta)"

#. type: Plain text
#: en/glossary-content.txt:616
#, priority:310
msgid "A <<def_ref,ref>> under `refs/tags/` namespace that points to an object of an arbitrary type (typically a tag points to either a <<def_tag_object,tag>> or a <<def_commit_object,commit object>>).  In contrast to a <<def_head,head>>, a tag is not updated by the `commit` command. A Git tag has nothing to do with a Lisp tag (which would be called an <<def_object_type,object type>> in Git's context). A tag is most typically used to mark a particular point in the commit ancestry <<def_chain,chain>>."
msgstr "Um <<def_ref,ref>> sob `refs/tags/` no espaço de nomes que aponte para um objeto arbitrário (em geral uma tag que aponta seja para <<def_tag_object,tag>> ou um <<def_commit_object,objeto commit>>).  Em contraste de um <<def_head,head>>, a tag não é atualizada pelo comando `commit`. Uma tag Git não tem nada a ver com uma tag `Lisp` (que seria chamada de <<def_object_type,object type>> dentro do contexto do Git). Uma tag é normalmente utilizada para marcar um ponto específico na ancestralidade de um commit <<def_chain,chain>>."

#. type: Labeled list
#: en/glossary-content.txt:617
#, no-wrap, priority:310
msgid "[[def_tag_object]]tag object"
msgstr "[[def_tag_object]]objeto tag (objeto etiqueta, objeto da etiqueta)"

#. type: Plain text
#: en/glossary-content.txt:622
#, priority:310
msgid "An <<def_object,object>> containing a <<def_ref,ref>> pointing to another object, which can contain a message just like a <<def_commit_object,commit object>>. It can also contain a (PGP)  signature, in which case it is called a \"signed tag object\"."
msgstr "Um <<def_object,objeto>> contendo um <<def_ref,ref>> apontando para outro objeto que pode conter uma mensagem como um <<def_commit_object,objeto commit>>. Também pode conter uma assinatura (PGP); nesse caso, é chamado de \"signed tag object\"."

#. type: Labeled list
#: en/glossary-content.txt:623
#, no-wrap, priority:310
msgid "[[def_topic_branch]]topic branch"
msgstr "[[def_topic_branch]]topic branch (tópico do ramo)"

#. type: Plain text
#: en/glossary-content.txt:629
#, priority:310
msgid "A regular Git <<def_branch,branch>> that is used by a developer to identify a conceptual line of development. Since branches are very easy and inexpensive, it is often desirable to have several small branches that each contain very well defined concepts or small incremental yet related changes."
msgstr "Um Git comum <<def_branch,ramo>> que é utilizado por um desenvolvedor para identificar uma linha conceitual de desenvolvimento. Como as ramificações são muito fáceis e baratas, muitas vezes é desejável ter várias ramificações pequenas, cada uma contendo conceitos muito bem definidos ou pequenas alterações incrementais, porém relacionadas."

#. type: Labeled list
#: en/glossary-content.txt:630
#, no-wrap, priority:310
msgid "[[def_tree]]tree"
msgstr "[[def_tree]]tree (árvore)"

#. type: Plain text
#: en/glossary-content.txt:634
#, priority:310
msgid "Either a <<def_working_tree,working tree>>, or a <<def_tree_object,tree object>> together with the dependent <<def_blob_object,blob>> and tree objects (i.e. a stored representation of a working tree)."
msgstr "Entre um <<def_working_tree,árvore de trabalho>> ou um <<def_tree_object,objeto árvore>> junto com os objetos dependentes <<def_blob_object,blob>> e os objetos das árvores (uma representação de uma árvore de trabalho)."

#. type: Labeled list
#: en/glossary-content.txt:635
#, no-wrap, priority:310
msgid "[[def_tree_object]]tree object"
msgstr "[[def_tree_object]]tree object (objeto árvore)"

#. type: Plain text
#: en/glossary-content.txt:639
#, priority:310
msgid "An <<def_object,object>> containing a list of file names and modes along with refs to the associated blob and/or tree objects. A <<def_tree,tree>> is equivalent to a <<def_directory,directory>>."
msgstr "Um <<def_object,objeto>> contendo uma lista de nomes e modos em conjunto com `refs` associados as sua bolhas e ou objetos da árvore. Um <<def_tree,tree>> é equivalente a um <<def_directory,diretório>>."

#. type: Labeled list
#: en/glossary-content.txt:640
#, no-wrap, priority:310
msgid "[[def_tree-ish]]tree-ish (also treeish)"
msgstr "[[def_tree-ish]]tree-ish (também treeish)"

#. type: Plain text
#: en/glossary-content.txt:653
#, priority:310
msgid "A <<def_tree_object,tree object>> or an <<def_object,object>> that can be recursively dereferenced to a tree object.  Dereferencing a <<def_commit_object,commit object>> yields the tree object corresponding to the <<def_revision,revision>>'s top <<def_directory,directory>>.  The following are all tree-ishes: a <<def_commit-ish,commit-ish>>, a tree object, a <<def_tag_object,tag object>> that points to a tree object, a tag object that points to a tag object that points to a tree object, etc."
msgstr "Um <<def_tree_object,objeto árvore>> ou um <<def_object,objeto>> que pode perder uma referência recursivamente em um objeto da árvore.  Perder um <<def_commit_object,objeto commit>> retorna o objeto da árvore <<def_revision,revisão>> correspondente ao topo <<def_directory,diretório>>.  São todos os tree-ishes: um <<def_commit-ish,commit-ish>>, um objeto da árvore, um <<def_tag_object,objeto tag>> que aponta para o objeto da árvore, um objeto tag que aponta para o objeto tag que aponta para o objeto árvore, etc."

#. type: Labeled list
#: en/glossary-content.txt:654
#, no-wrap, priority:310
msgid "[[def_unmerged_index]]unmerged index"
msgstr "[[def_unmerged_index]]unmerged index (índices não mesclados)"

#. type: Plain text
#: en/glossary-content.txt:657
#, priority:310
msgid "An <<def_index,index>> which contains unmerged <<def_index_entry,index entries>>."
msgstr "Um <<def_index,índice>> que contenha índices não mesclados <<def_index_entry,entradas do índice>>."

#. type: Labeled list
#: en/glossary-content.txt:658
#, no-wrap, priority:310
msgid "[[def_unreachable_object]]unreachable object"
msgstr "[[def_unreachable_object]]unreachable object (objetos inacessíveis)"

#. type: Plain text
#: en/glossary-content.txt:661
#, priority:310
msgid "An <<def_object,object>> which is not <<def_reachable,reachable>> from a <<def_branch,branch>>, <<def_tag,tag>>, or any other reference."
msgstr "Um <<def_object,objeto>> que não é <<def_reachable,acessível>> de um <<def_branch,ramo>>, <<def_tag,tag>>, ou de qualquer outra referência."

#. type: Labeled list
#: en/glossary-content.txt:662
#, no-wrap, priority:310
msgid "[[def_upstream_branch]]upstream branch"
msgstr "[[def_upstream_branch]]upstream branch (ramo upstream)"

#. type: Plain text
#: en/glossary-content.txt:667
#, priority:310
msgid "The default <<def_branch,branch>> that is merged into the branch in question (or the branch in question is rebased onto). It is configured via branch.<name>.remote and branch.<name>.merge. If the upstream branch of 'A' is 'origin/B' sometimes we say \"'A' is tracking 'origin/B'\"."
msgstr "É predefinido que o <<def_branch,ramo>> que seja mesclado na árvore em questão (ou no ramo onde uma reconstrução (rebase) seja feita). É configurado através do `branch.<nome>.remote` e `branch.<nome>.merge`. Caso o ramo \"upstream\" de 'A' seja 'origin/B' algumas vezes nós dizemos que \"'A' está monitorando 'origin/B'\"."

#. type: Labeled list
#: en/glossary-content.txt:668
#, no-wrap, priority:310
msgid "[[def_working_tree]]working tree"
msgstr "[[def_working_tree]]working tree (árvore de trabalho)"

#. type: Plain text
#: en/glossary-content.txt:672
#, priority:310
msgid "The tree of actual checked out files.  The working tree normally contains the contents of the <<def_HEAD,HEAD>> commit's tree, plus any local changes that you have made but not yet committed."
msgstr "A árvore dos arquivos atualmente averiguados.  A árvore de trabalho normalmente contém o conteúdo <<def_HEAD,HEAD>> do commit da árvore, além de quaisquer alterações locais que você fizer, mas ainda o commit não foi feito."

#. type: Labeled list
#: en/glossary-content.txt:673
#, no-wrap, priority:310
msgid "[[def_worktree]]worktree"
msgstr "[[def_worktree]]worktree"

#. type: Plain text
#: en/glossary-content.txt:680
#, priority:310
msgid "A repository can have zero (i.e. bare repository) or one or more worktrees attached to it. One \"worktree\" consists of a \"working tree\" and repository metadata, most of which are shared among other worktrees of a single repository, and some of which are maintained separately per worktree (e.g. the index, HEAD and pseudorefs like MERGE_HEAD, per-worktree refs and per-worktree configuration file)."
msgstr "Um repositório pode ter zero (ou seja, um repositório sem nada), uma ou mais árvores de trabalho anexadas a ele. Uma \"árvore de trabalho\" consiste em uma \"árvore de trabalho\" e o repositório dos metadados, a maioria dos quais são compartilhados entre outras árvores de trabalho de um único repositório onde alguns dos quais são mantidos separadamente por árvore de trabalho (o índice HEAD e pseudorefs como MERGE_HEAD, por ref da árvore de trabalho e o arquivo de configuração por árvore de trabalho)."

#. type: Plain text
#: en/i18n.txt:2
#, priority:280
msgid "Git is to some extent character encoding agnostic."
msgstr "O Git é, até certo ponto, um codificador de caracteres agnóstico."

#. type: Plain text
#: en/i18n.txt:6
#, priority:280
msgid "The contents of the blob objects are uninterpreted sequences of bytes.  There is no encoding translation at the core level."
msgstr "O conteúdo dos objetos blob são sequências de bytes não interpretados.  Não há tradução de codificação no nível principal."

#. type: Plain text
#: en/i18n.txt:13
#, priority:280
msgid "Path names are encoded in UTF-8 normalization form C. This applies to tree objects, the index file, ref names, as well as path names in command line arguments, environment variables and config files (`.git/config` (see linkgit:git-config[1]), linkgit:gitignore[5], linkgit:gitattributes[5] and linkgit:gitmodules[5])."
msgstr "Os nomes do caminho são codificados na forma de normalização UTF-8 C. Isso se aplica a objetos nas árvore, arquivos do índice, referência de nomes e nomes do caminho em argumentos da linha de comando, variáveis do ambiente e os arquivos de configuração (`.git / config` (consulte linkgit:git-config[1]), linkgit:gitignore[5], linkgit:gitattributes[5] e linkgit:gitmodules[5])."

#. type: Plain text
#: en/i18n.txt:23
#, priority:280
msgid "Note that Git at the core level treats path names simply as sequences of non-NUL bytes, there are no path name encoding conversions (except on Mac and Windows). Therefore, using non-ASCII path names will mostly work even on platforms and file systems that use legacy extended ASCII encodings. However, repositories created on such systems will not work properly on UTF-8-based systems (e.g. Linux, Mac, Windows) and vice versa.  Additionally, many Git-based tools simply assume path names to be UTF-8 and will fail to display other encodings correctly."
msgstr "Observe que o Git em seu nível básico trata os nomes dos caminhos simplesmente como sequências de bytes não `NUL`, não há conversões de codificação dos nomes dos caminhos (exceto no Mac e no Windows). Portanto, o uso dos nomes do caminhos que não sejam `ASCII` funcionará principalmente em plataformas e sistemas de arquivos que se utilizem de codificações ASCII estendidas e herdadas. No entanto, os repositórios criados nestes sistemas não funcionarão corretamente em sistemas baseados em UTF-8 (por exemplo, Linux, Mac, Windows) e vice-versa.  Além disso, muitas ferramentas baseadas em Git simplesmente assumem nomes do caminho como UTF-8 e falharão ao exibir outros tipos de codificações corretamente."

#. type: Plain text
#: en/i18n.txt:29
#, priority:280
msgid "Commit log messages are typically encoded in UTF-8, but other extended ASCII encodings are also supported. This includes ISO-8859-x, CP125x and many others, but _not_ UTF-16/32, EBCDIC and CJK multi-byte encodings (GBK, Shift-JIS, Big5, EUC-x, CP9xx etc.)."
msgstr "As mensagens do registro log do commit geralmente são codificadas em UTF-8, porém há compatibilidade para outras codificações ASCII estendidas. Isso inclui ISO-8859-x, CP125x e muitos outros. Porém não há compatibilidade com codificações UTF-16/32, EBCDIC e CJK, codificações de vários bytes (GBK, Shift-JIS, Big5, EUC-x, CP9xx etc.)."

#. type: Plain text
#: en/i18n.txt:36
#, priority:280
msgid "Although we encourage that the commit log messages are encoded in UTF-8, both the core and Git Porcelain are designed not to force UTF-8 on projects.  If all participants of a particular project find it more convenient to use legacy encodings, Git does not forbid it.  However, there are a few things to keep in mind."
msgstr "Embora incentivemos que as mensagens do registro log do commit sejam codificadas em UTF-8, a Porcelana do Git e seu núcleo foram projetados para não impor a utilização do UTF-8 nos projetos.  Caso todos os participantes de um projeto em particular achem mais conveniente usar as codificações herdadas, o Git não o proibirá.  Porém, há algumas coisas a serem consideradas."

#. type: Plain text
#: en/i18n.txt:42
#, priority:280
msgid "'git commit' and 'git commit-tree' issues a warning if the commit log message given to it does not look like a valid UTF-8 string, unless you explicitly say your project uses a legacy encoding.  The way to say this is to have `i18n.commitEncoding` in `.git/config` file, like this:"
msgstr "O comando 'git commit' e o comando 'git commit-tree' emitem um aviso caso a mensagem de log do commit informado não se pareça com uma string UTF-8 válida, a menos que você diga explicitamente que o seu projeto usa uma codificação legada.  A maneira de dizer isso é ter a variável `i18n.commitEncoding` no arquivo `.git/config`, assim:"

#. type: delimited block -
#: en/i18n.txt:46
#, no-wrap, priority:280
msgid ""
"[i18n]\n"
"\tcommitEncoding = ISO-8859-1\n"
msgstr ""
"[i18n]\n"
"\tcommitEncoding = ISO-8859-1\n"

#. type: Plain text
#: en/i18n.txt:52
#, priority:280
msgid "Commit objects created with the above setting record the value of `i18n.commitEncoding` in its `encoding` header.  This is to help other people who look at them later.  Lack of this header implies that the commit log message is encoded in UTF-8."
msgstr "Os objetos commit que foram criados com a configuração acima registram o valor `i18n.commitEncoding` em seu cabeçalho `encoding`.  Isso é para auxiliar as outras pessoas que olharão para eles mais tarde.  A falta deste cabeçalho implica que a mensagem do registro log do commit seja codificado em UTF-8."

#. type: Plain text
#: en/i18n.txt:58
#, priority:280
msgid "'git log', 'git show', 'git blame' and friends look at the `encoding` header of a commit object, and try to re-code the log message into UTF-8 unless otherwise specified.  You can specify the desired output encoding with `i18n.logOutputEncoding` in `.git/config` file, like this:"
msgstr "Os comandos 'git log', 'git show', 'git blame' e relacionados fazem vista para o cabeçalho `encoding` de um objeto commit e tentam codificar novamente a mensagem do registro log em UTF-8 a menos que seja definido de outra maneira.  É possível especificar a codificação da saída desejada com  a variável `i18n.logOutputEncoding` no arquivo `.git/config`, assim:"

#. type: delimited block -
#: en/i18n.txt:62
#, no-wrap, priority:280
msgid ""
"[i18n]\n"
"\tlogOutputEncoding = ISO-8859-1\n"
msgstr ""
"[i18n]\n"
"\tlogOutputEncoding = ISO-8859-1\n"

#. type: Plain text
#: en/i18n.txt:66
#, priority:280
msgid "If you do not have this configuration variable, the value of `i18n.commitEncoding` is used instead."
msgstr "Caso não tenha essa variável de configuração, o valor de `i18n.commitEncoding` é utilizado em seu lugar."

#. type: Plain text
#: en/i18n.txt:70
#, priority:280
msgid "Note that we deliberately chose not to re-code the commit log message when a commit is made to force UTF-8 at the commit object level, because re-coding to UTF-8 is not necessarily a reversible operation."
msgstr "Observe que decidimos deliberadamente não codificar novamente a mensagem do registro log do commit quando um commit for feito para forçar a codificação UTF-8 a nível do objeto commit, porque a re-codificação para UTF-8 não é necessariamente uma operação reversível."

#. type: Plain text
#: en/line-range-format.txt:2
#, priority:260
msgid "'<start>' and '<end>' can take one of these forms:"
msgstr "'<inicio>' e '<fim>' podem assumir uma destas formas:"

#. type: Plain text
#: en/line-range-format.txt:4
#, priority:260
msgid "number"
msgstr "número"

#. type: Plain text
#: en/line-range-format.txt:7
#, priority:260
msgid "If '<start>' or '<end>' is a number, it specifies an absolute line number (lines count from 1)."
msgstr "Caso '<inicio>' ou '<fim>' seja um número, ele especifica um número de linha absoluto (as linhas contam a partir do 1)."

#. type: Plain text
#: en/line-range-format.txt:10
#, priority:260
msgid "`/regex/`"
msgstr "`/regex/`"

#. type: Plain text
#: en/line-range-format.txt:17
#, priority:260
msgid "This form will use the first line matching the given POSIX regex. If '<start>' is a regex, it will search from the end of the previous `-L` range, if any, otherwise from the start of file.  If '<start>' is `^/regex/`, it will search from the start of file.  If '<end>' is a regex, it will search starting at the line given by '<start>'."
msgstr "Este formulário usará a primeira linha correspondente ao regex POSIX informado. Caso <inicio> seja um regex, ele procurará no final do `L` do intervalo, se houver, caso contrário, desde o início do arquivo.  Caso '<inicio>' seja `^/regex/`, ele pesquisará desde o início do arquivo.  Caso '<fim>' seja um regex, ele pesquisará a partir da linha fornecida através do '<inicio>'."

#. type: Plain text
#: en/line-range-format.txt:20
#, priority:260
msgid "+offset or -offset"
msgstr "+offset ou -offset"

#. type: Plain text
#: en/line-range-format.txt:23
#, priority:260
msgid "This is only valid for '<end>' and will specify a number of lines before or after the line given by '<start>'."
msgstr "Válido apenas para '<fim>' que definirá uma quantidade de linhas antes ou depois da linha utilizada por '<inicio>'."

#. type: Plain text
#: en/line-range-format.txt:32
#, priority:260
msgid "If `:<funcname>` is given in place of '<start>' and '<end>', it is a regular expression that denotes the range from the first funcname line that matches '<funcname>', up to the next funcname line. `:<funcname>` searches from the end of the previous `-L` range, if any, otherwise from the start of file. `^:<funcname>` searches from the start of file. The function names are determined in the same way as `git diff` works out patch hunk headers (see 'Defining a custom hunk-header' in linkgit:gitattributes[5])."
msgstr "Caso `:<funcname>` seja informado no lugar do '<inicio>' e '<fim>', é uma expressão regular que indica o intervalo da primeira `<funcname>` que coincida com '<funcname>' até a próxima linha funcname. `:<funcname>` pesquisa no final do intervalo `-L` anterior, se houver, caso contrário, a pesquisa ocorrerá desde o início do arquivo. `^:<funcname>` pesquisa desde o início do arquivo. Os nomes das funções são determinados da mesma maneira que o comando `git diff` lida com os pedaços dos cabeçalhos do patch (consulte 'Definindo um cabeçalho personalizado do hunk' em linkgit:gitattributes[5])."

#. type: Labeled list
#: en/line-range-options.txt:1
#, no-wrap, priority:260
msgid "-L<start>,<end>:<file>"
msgstr "-L<inicio>,<fim>:<arquivo>"

#. type: Labeled list
#: en/line-range-options.txt:2
#, no-wrap, priority:260
msgid "-L:<funcname>:<file>"
msgstr "-L:<nome-da-função>:<arquivo>"

#. type: Plain text
#: en/line-range-options.txt:14
#, priority:260
msgid "Trace the evolution of the line range given by '<start>,<end>', or by the function name regex '<funcname>', within the '<file>'. You may not give any pathspec limiters.  This is currently limited to a walk starting from a single revision, i.e., you may only give zero or one positive revision arguments, and '<start>' and '<end>' (or '<funcname>') must exist in the starting revision.  You can specify this option more than once. Implies `--patch`.  Patch output can be suppressed using `--no-patch`, but other diff formats (namely `--raw`, `--numstat`, `--shortstat`, `--dirstat`, `--summary`, `--name-only`, `--name-status`, `--check`) are not currently implemented."
msgstr "Trace a evolução do intervalo da linha informado através de '<início>,<fim>' ou pelo nome da função regex '<funcname>', dentro do '<arquivo>'. Você não pode fornecer nenhum limitador ao pathspec.  Isso está atualmente limitado a um passo começando a partir de uma única revisão, ou seja, você só pode dar zero ou um argumento positivo de revisão, assim como '<início>' e '<fim>' (ou '<funcname>') devem existir no começo da revisão.  Você pode usar esta opção mais de uma vez. Implica no uso da opção `--patch`  A saída do patch pode ser suprimida usando `--no-patch`, mas outros formatos diff (namely `--raw`, `--numstat`, `--shortstat`, `--dirstat`, `--summary`, `--name-only`, `--name-status`, `--check`) ainda não estão implementados."

#. type: Plain text
#: en/merge-options.txt:5
#, priority:240
msgid "Perform the merge and commit the result. This option can be used to override --no-commit."
msgstr "Execute a mesclagem e faça o commit com o resultado. Esta opção pode ser usada para substituir a opção `--no-commit`."

#. type: Plain text
#: en/merge-options.txt:7 en/merge-options.txt:100 en/merge-options.txt:141
#, no-wrap, priority:240
msgid "\tOnly useful when merging.\n"
msgstr "\tÚtil apenas quando for mesclar.\n"

#. type: Plain text
#: en/merge-options.txt:12
#, priority:240
msgid "With --no-commit perform the merge and stop just before creating a merge commit, to give the user a chance to inspect and further tweak the merge result before committing."
msgstr "Com a opção `--no-commit`, executa a mesclagem e para imediatamente antes de criar a mesclagem de um commit, para dar ao usuário a chance de inspecionar e ajustar ainda mais o resultado da mesclagem antes de fazer o commit."

#. type: Plain text
#: en/merge-options.txt:17
#, priority:240
msgid "Note that fast-forward updates do not create a merge commit and therefore there is no way to stop those merges with --no-commit.  Thus, if you want to ensure your branch is not changed or updated by the merge command, use --no-ff with --no-commit."
msgstr "Observe que as atualizações com avanço rápido não criam a mesclagem de um commit e portanto, não há como interromper essas mesclagens com a opção `--no-commit`.  Portanto, caso queira garantir que o seu ramo não seja alterado ou atualizado pelo comando mesclar, utilize --no-ff with --no-commit."

#. type: Plain text
#: en/merge-options.txt:26
#, priority:240
msgid "Invoke an editor before committing successful mechanical merge to further edit the auto-generated merge message, so that the user can explain and justify the merge. The `--no-edit` option can be used to accept the auto-generated message (this is generally discouraged)."
msgstr "Chame um editor antes de fazer a mesclagem mecânica de um commit bem sucedido para editar ainda mais a mensagem da mesclagem que foi gerada automaticamente, para que o usuário possa explicar e justificar a mesclagem. A opção `--no-edit` pode ser utilizada para aceitar a mensagem que foi gerada automaticamente (em geral isso é desencorajado)."

#. type: Plain text
#: en/merge-options.txt:30
#, priority:240
msgid "The `--edit` (or `-e`) option is still useful if you are giving a draft message with the `-m` option from the command line and want to edit it in the editor."
msgstr "A opção `--edit` (ou `-e`) ainda é útil caso esteja enviando uma mensagem de rascunho com a opção `-m` na linha de comando e queira editá-la no editor."

#. type: Plain text
#: en/merge-options.txt:37
#, priority:240
msgid "Older scripts may depend on the historical behaviour of not allowing the user to edit the merge log message. They will see an editor opened when they run `git merge`. To make it easier to adjust such scripts to the updated behaviour, the environment variable `GIT_MERGE_AUTOEDIT` can be set to `no` at the beginning of them."
msgstr "Os scripts mais antigos podem depender do comportamento histórico de não permitir que o usuário edite a mensagem do registro log da mesclagem. Eles verão um editor aberto quando executar o `git merge`. Para facilitar o ajuste destes scripts para o comportamento que foi atualizado, a variável de ambiente `GIT_MERGE_AUTOEDIT` pode ser definido como `no` no início deles."

#. type: Plain text
#: en/merge-options.txt:44
#, priority:240
msgid "This option determines how the merge message will be cleaned up before committing. See linkgit:git-commit[1] for more details. In addition, if the '<mode>' is given a value of `scissors`, scissors will be appended to `MERGE_MSG` before being passed on to the commit machinery in the case of a merge conflict."
msgstr "Esta opção determina como a mensagem da mesclagem será limpa antes da confirmação. Para mais detalhes consulte linkgit:git-commit[1]. Além disso, caso o valor de `scissors` seja dado ao '<mode>' , o `scissors` (tesouras) será anexada ao `MERGE_MSG` antes de ser repassada para o mecanismo de commit caso exista mesclagens conflitantes."

#. type: Labeled list
#: en/merge-options.txt:48 en/merge-options.txt:56
#, ignore-same, no-wrap, priority:240
msgid "--ff-only"
msgstr "--ff-only"

#. type: Plain text
#: en/merge-options.txt:54
#, priority:240
msgid "Specifies how a merge is handled when the merged-in history is already a descendant of the current history.  `--ff` is the default unless merging an annotated (and possibly signed) tag that is not stored in its natural place in the `refs/tags/` hierarchy, in which case `--no-ff` is assumed."
msgstr "Especifica como uma mesclagem é manipulada quando o histórico mesclado já é um descendente do histórico atual.  A predefinição é a opção `--ff` , a menos que durante a mesclagem de uma tag anotada (e possivelmente assinada) que não seja armazenada em seu local natural na hierarquia `refs/tags/`, no caso onde a opção `--ff` não será assumida."

#. type: Plain text
#: en/merge-options.txt:60
#, priority:240
msgid "Only update to the new history if there is no divergent local history.  This is the default when no method for reconciling divergent histories is provided (via the --rebase=* flags)."
msgstr "Somente atualize para o novo histórico caso não haja um histórico local divergente. Este é a predefinição quando nenhum método para reconciliar os históricos divergentes for fornecido (por meio dos sinalizadores --rebase=*)."

#. type: Plain text
#: en/merge-options.txt:69
#, priority:240
msgid "When merging rather than rebasing, specifies how a merge is handled when the merged-in history is already a descendant of the current history.  If merging is requested, `--ff` is the default unless merging an annotated (and possibly signed) tag that is not stored in its natural place in the `refs/tags/` hierarchy, in which case `--no-ff` is assumed."
msgstr "Ao fazer uma mesclagem em vez do um \"rebasing\", especifica como uma mesclagem é manipulada quando o histórico mesclado já é um descendente do histórico atual.  A predefinição é a opção `--ff` , a menos que durante a mesclagem de uma tag anotada (e possivelmente assinada) que não seja armazenada em seu local natural na hierarquia `refs/tags/`, no caso onde a opção `--ff` não será assumida."

#. type: Plain text
#: en/merge-options.txt:75
#, priority:240
msgid "With `--ff`, when possible resolve the merge as a fast-forward (only update the branch pointer to match the merged branch; do not create a merge commit).  When not possible (when the merged-in history is not a descendant of the current history), create a merge commit."
msgstr "Com `--ff`, quando for possível, resolva a mesclagem como um avanço rápido (atualize apenas o ponteiro do ramo para coincidir com a ramificação que foi mesclada; não crie um commit da mesclagem).  Quando não for possível (quando o histórico mesclado não for um descendente do histórico atual), crie um commit da mesclagem."

#. type: Plain text
#: en/merge-options.txt:78
#, priority:240
msgid "With `--no-ff`, create a merge commit in all cases, even when the merge could instead be resolved as a fast-forward."
msgstr "Com `--no-ff`, crie um commit da mesclagem em todos os casos, mesmo quando a mesclagem puder ser resolvida como um avanço rápido."

#. type: Plain text
#: en/merge-options.txt:82
#, priority:240
msgid "With `--ff-only`, resolve the merge as a fast-forward when possible.  When not possible, refuse to merge and exit with a non-zero status."
msgstr "Com a opção `--ff-only`, quando for possível, resolva a mesclagem com avanço rápido.  Quando não for possível, recuse a mesclagem e encerre com uma condição diferente de zero."

#. type: Plain text
#: en/merge-options.txt:92
#, priority:240
msgid "GPG-sign the resulting merge commit. The `keyid` argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space. `--no-gpg-sign` is useful to countermand both `commit.gpgSign` configuration variable, and earlier `--gpg-sign`."
msgstr "Assine a mesclagem resultante do commit com o GPG. O argumento `keyid` é opcional e a predefinição retorna para a identidade de quem fez o commit; se utilizado, deve estar anexado a opção sem espaço. A opção `--no-gpg-sign` é útil para revogar a variável de configuração `commit.gpgSign` e a anterior `--gpg-sign`."

#. type: Plain text
#: en/merge-options.txt:98
#, priority:240
msgid "In addition to branch names, populate the log message with one-line descriptions from at most <n> actual commits that are being merged. See also linkgit:git-fmt-merge-msg[1]."
msgstr "Além dos nomes dos ramos, preencha a mensagem do registro log com descrições de uma linha com no máximo <n> commits atuais que estão sendo mesclados. Consulte também linkgit:git-fmt-merge-msg[1]."

#. type: Plain text
#: en/merge-options.txt:104
#, priority:240
msgid "With --no-log do not list one-line descriptions from the actual commits being merged."
msgstr "Com '--no-log', não liste as descrições de uma linha vindas do commits que estão atualmente sendo mescladas."

#. type: Plain text
#: en/merge-options.txt:112
#, priority:240
msgid "Show a diffstat at the end of the merge. The diffstat is also controlled by the configuration option merge.stat."
msgstr "Exiba um \"diffstat\" no final da mesclagem. O 'diffstat' também é controlado pela opção da configuração merge.stat."

#. type: Plain text
#: en/merge-options.txt:115
#, priority:240
msgid "With -n or --no-stat do not show a diffstat at the end of the merge."
msgstr "Com `-n` ou `--no-stat`, não mostre o 'diffstat' no final da mesclagem."

#. type: Labeled list
#: en/merge-options.txt:116
#, ignore-same, no-wrap, priority:240
msgid "--squash"
msgstr "--squash"

#. type: Labeled list
#: en/merge-options.txt:117
#, ignore-same, no-wrap, priority:240
msgid "--no-squash"
msgstr "--no-squash"

#. type: Plain text
#: en/merge-options.txt:125
#, priority:240
msgid "Produce the working tree and index state as if a real merge happened (except for the merge information), but do not actually make a commit, move the `HEAD`, or record `$GIT_DIR/MERGE_HEAD` (to cause the next `git commit` command to create a merge commit).  This allows you to create a single commit on top of the current branch whose effect is the same as merging another branch (or more in case of an octopus)."
msgstr "Produza a árvore de trabalho e a condição do índice como se uma mesclagem real tivesse acontecido (exceto as informações da mesclagem), porém não efetue um commit, mova o `HEAD` ou registre o `$GIT_DIR/MERGE_HEAD` (para causar o próximo comando `git commit` para criar uma mesclagem).  Isso permite que você crie um único commit sobre o ramo atual, cujo efeito é o mesmo que mesclar um outro ramo (ou mais no caso da mesclagem \"octopus\")."

#. type: Plain text
#: en/merge-options.txt:128
#, priority:240
msgid "With --no-squash perform the merge and commit the result. This option can be used to override --squash."
msgstr "Com a opção `--no-squash`, execute a mesclagem e faça o commit com o resultado. Esta opção pode ser usada para substituir a opção `--squash`."

#. type: Plain text
#: en/merge-options.txt:130
#, priority:240
msgid "With --squash, --commit is not allowed, and will fail."
msgstr "Com a opção `--squash`, a opção `--commit` não é permitida e irá falhar."

#. type: Plain text
#: en/merge-options.txt:133 en/merge-options.txt:166 en/merge-options.txt:210
#, priority:240
msgid "Only useful when merging."
msgstr "Útil apenas quando for mesclar."

#. type: Plain text
#: en/merge-options.txt:139
#, priority:240
msgid "By default, the pre-merge and commit-msg hooks are run.  When `--no-verify` is given, these are bypassed.  See also linkgit:githooks[5]."
msgstr "É predefinido que os ganchos dos commits anteriores e os ganchos das mensagens do commit sejam executados.  Quando a opção `--no-verify` for usada, ela será ignorada.  Consulte também linkgit:githooks[5]."

#. type: Plain text
#: en/merge-options.txt:150
#, priority:240
msgid "Use the given merge strategy; can be supplied more than once to specify them in the order they should be tried.  If there is no `-s` option, a built-in list of strategies is used instead (`ort` when merging a single head, `octopus` otherwise)."
msgstr "Use a estratégia de mesclagem informada; podem ser utilizado mais de uma vez para defini-los na ordem em que devem ser tentados.  Caso não haja a opção `-s`, em vez disso será usada uma lista de estratégias incorporada (`ort` ao mesclar um único cabeçalho, caso contrário `octopus`)."

#. type: Labeled list
#: en/merge-options.txt:151
#, no-wrap, priority:240
msgid "-X <option>"
msgstr "-X <opção>"

#. type: Plain text
#: en/merge-options.txt:155
#, priority:240
msgid "Pass merge strategy specific option through to the merge strategy."
msgstr "Passe a opção específica da estratégia através da estratégia de mesclagem."

#. type: Labeled list
#: en/merge-options.txt:156
#, ignore-same, no-wrap, priority:240
msgid "--verify-signatures"
msgstr "--verify-signatures"

#. type: Labeled list
#: en/merge-options.txt:157
#, ignore-same, no-wrap, priority:240
msgid "--no-verify-signatures"
msgstr "--no-verify-signatures"

#. type: Plain text
#: en/merge-options.txt:163
#, priority:240
msgid "Verify that the tip commit of the side branch being merged is signed with a valid key, i.e. a key that has a valid uid: in the default trust model, this means the signing key has been signed by a trusted key.  If the tip commit of the side branch is not signed with a valid key, the merge is aborted."
msgstr "Verifique se o topo do commit do lado do ramo mesclado está assinado com uma chave válida, ou seja, uma chave que possua um uid válida: no modelo de confiança predefinido, isso significa que a chave da assinatura foi assinada através de uma chave confiável.  Caso o topo do commit do lado do ramo não seja assinada com uma chave válida, a mesclagem será cancelada."

#. type: Labeled list
#: en/merge-options.txt:169
#, ignore-same, no-wrap, priority:240
msgid "--no-summary"
msgstr "--no-summary"

#. type: Plain text
#: en/merge-options.txt:172
#, priority:240
msgid "Synonyms to --stat and --no-stat; these are deprecated and will be removed in the future."
msgstr "É um sinônimos para `--stat` e `--no-stat`; estas opções foram descontinuadas e serão removidas no futuro."

#. type: Plain text
#: en/merge-options.txt:177
#, priority:240
msgid "Operate quietly. Implies --no-progress."
msgstr "Opere em silêncio. Implica no uso da opção `--no-progress`."

#. type: Plain text
#: en/merge-options.txt:188
#, priority:240
msgid "Turn progress on/off explicitly. If neither is specified, progress is shown if standard error is connected to a terminal.  Note that not all merge strategies may support progress reporting."
msgstr "Ativa/desativa o progresso de maneira explicita. Se nenhum seja definido, o progresso será exibido caso o erro predefinido esteja conectado a um terminal.  Observe que nem todas as estratégias de mesclagem podem se compatíveis com os relatórios de progresso."

#. type: Plain text
#: en/merge-options.txt:199
#, priority:240
msgid "Automatically create a temporary stash entry before the operation begins, record it in the special ref `MERGE_AUTOSTASH` and apply it after the operation ends.  This means that you can run the operation on a dirty worktree.  However, use with care: the final stash application after a successful merge might result in non-trivial conflicts."
msgstr "Crie automaticamente uma entrada \"stash\" temporária antes do inicio da operação, registre na ref especial `MERGE_AUTOSTASH` e aplique-a depois que a operação terminar.  Isto significa que seja possível rodar operações em uma árvore de trabalho suja.  No entanto, utilize com cuidado: conflitos não triviais podem acontecer caso a aplicação final do \"stash\" ocorra após uma mesclagem bem-sucedida."

#. type: Plain text
#: en/merge-options.txt:207
#, priority:240
msgid "By default, `git merge` command refuses to merge histories that do not share a common ancestor.  This option can be used to override this safety when merging histories of two projects that started their lives independently. As that is a very rare occasion, no configuration variable to enable this by default exists and will not be added."
msgstr "É predefinido que o comando `git merge` se recuse a mesclar os históricos que não compartilham de um ancestral comum.  Esta opção pode ser utilizada para substituir esta segurança durante a mesclagem dos históricos dos dois projetos que iniciaram as suas vidas de forma independente. Como esta é uma ocasião muito rara, não existe variável de configuração para ativar isso de forma predefinida e não será adicionada."

#. type: Title -
#: en/merge-strategies.txt:2
#, no-wrap, priority:240
msgid "MERGE STRATEGIES"
msgstr "ESTRATÉGIAS DE MESCLAGEM"

#. type: Plain text
#: en/merge-strategies.txt:8
#, priority:240
msgid "The merge mechanism (`git merge` and `git pull` commands) allows the backend 'merge strategies' to be chosen with `-s` option.  Some strategies can also take their own options, which can be passed by giving `-X<option>` arguments to `git merge` and/or `git pull`."
msgstr "O mecanismo da mesclagem (comandos `git merge` e `git pull`) permite que as estruturas das 'estratégias de mesclagem' sejam escolhidas com a opção `-s`.  Algumas estratégias também podem ter suas próprias opções, que podem ser passadas usando `-X<opção>` como argumentos para o comando `git merge` e/ou `git pull`."

#. type: Labeled list
#: en/merge-strategies.txt:9
#, no-wrap, priority:240
msgid "ort"
msgstr "ort"

#. type: Plain text
#: en/merge-strategies.txt:24
#, priority:240
msgid "This is the default merge strategy when pulling or merging one branch.  This strategy can only resolve two heads using a 3-way merge algorithm.  When there is more than one common ancestor that can be used for 3-way merge, it creates a merged tree of the common ancestors and uses that as the reference tree for the 3-way merge.  This has been reported to result in fewer merge conflicts without causing mismerges by tests done on actual merge commits taken from Linux 2.6 kernel development history.  Additionally this strategy can detect and handle merges involving renames.  It does not make use of detected copies.  The name for this algorithm is an acronym (\"Ostensibly Recursive's Twin\") and came from the fact that it was written as a replacement for the previous default algorithm, `recursive`."
msgstr "Isso é a estratégia predefinida ao obter o mesclar um ramo. Esta estratégia pode resolver apenas duas cabeças usando o algoritmo da mesclagem de 3 vias.  Quando há mais de um ancestral comum que pode ser usado para a mesclagem de 3 vias, ele cria uma árvore mesclada dos ancestrais comuns e o usa como a árvore de referência para a mesclagem de 3 vias.  Foi informado que isso resulta em menos conflitos durante mesclagem sem causar distorções pelos testes feitos nas mesclagens reais dos commits, retiradas do histórico de desenvolvimento do Linux kernel 2.6.  Além disso, essa estratégia pode detectar e manipular as mesclagens envolvendo renomeações, não faz uso das cópias detectadas.   O nome para este algoritmo é uma sigla de (\"Ostensibly Recursive's Twin\") ele foi escrito como um substituto para o algoritmo padrão anterior, o `recursive`."

#. type: Plain text
#: en/merge-strategies.txt:26
#, priority:240
msgid "The 'ort' strategy can take the following options:"
msgstr "A estratégia 'ort' pode adotar as seguintes opções:"

#. type: Labeled list
#: en/merge-strategies.txt:27 en/merge-strategies.txt:132
#, ignore-same, no-wrap, priority:240
msgid "ours"
msgstr "ours"

#. type: Plain text
#: en/merge-strategies.txt:32
#, priority:240
msgid "This option forces conflicting hunks to be auto-resolved cleanly by favoring 'our' version.  Changes from the other tree that do not conflict with our side are reflected in the merge result.  For a binary file, the entire contents are taken from our side."
msgstr "Esta opção impõem que os pedaços conflitantes que sejam resolvidos de forma automática e de maneira limpa, favorecendo a 'nossa' versão.  As alterações vindos de outra árvore que não conflitam com o nosso lado são refletidas no resultado da mesclagem.  Para um arquivo binário, todo o conteúdo é retirado do nosso lado."

#. type: Plain text
#: en/merge-strategies.txt:36
#, priority:240
msgid "This should not be confused with the 'ours' merge strategy, which does not even look at what the other tree contains at all.  It discards everything the other tree did, declaring 'our' history contains all that happened in it."
msgstr "Isso não deve ser confundido com a estratégia da 'nossa' de mesclagem, que sequer olha para o que a outra árvore contém.  Descarta tudo o que a outra árvore fez, declarando que o 'nosso' histórico contém tudo o que aconteceu nela."

#. type: Labeled list
#: en/merge-strategies.txt:37
#, ignore-same, no-wrap, priority:240
msgid "theirs"
msgstr "theirs"

#. type: Plain text
#: en/merge-strategies.txt:40
#, priority:240
msgid "This is the opposite of 'ours'; note that, unlike 'ours', there is no 'theirs' merge strategy to confuse this merge option with."
msgstr "Este é o oposto do 'nosso'; observe que, diferentemente do 'nosso', não existe uma estratégia de mesclagem 'deles' para confundir esta opção de mesclagem."

#. type: Labeled list
#: en/merge-strategies.txt:44
#, ignore-same, no-wrap, priority:240
msgid "ignore-cr-at-eol"
msgstr "ignore-cr-at-eol"

#. type: Plain text
#: en/merge-strategies.txt:50
#, priority:240
msgid "Treats lines with the indicated type of whitespace change as unchanged for the sake of a three-way merge.  Whitespace changes mixed with other changes to a line are not ignored.  See also linkgit:git-diff[1] `-b`, `-w`, `--ignore-space-at-eol`, and `--ignore-cr-at-eol`."
msgstr "Trata as linhas com o tipo indicado da mudança do espaço como inalterado por uma mesclagem de três vias.  As alterações de espaço combinadas com outras alterações em uma linha não são ignoradas.  Consulte também linkgit:git-diff[1] `-b`, `-w`, `--ignore-space-at-eol`, e `--ignore-cr-at-eol`."

#. type: Plain text
#: en/merge-strategies.txt:53
#, priority:240
msgid "If 'their' version only introduces whitespace changes to a line, 'our' version is used;"
msgstr "Caso a versão 'their' (dele) introduzir apenas as alterações de espaço em uma linha, a 'our' (nossa) versão será utilizada;"

#. type: Plain text
#: en/merge-strategies.txt:55
#, priority:240
msgid "If 'our' version introduces whitespace changes but 'their' version includes a substantial change, 'their' version is used;"
msgstr "Caso a 'our' (nossa) versão introduzir alterações nos espaços, porém a versão 'their' (dele) incluir uma alteração substancial, a versão 'their' (dele) será utilizada;"

#. type: Plain text
#: en/merge-strategies.txt:56
#, priority:240
msgid "Otherwise, the merge proceeds in the usual way."
msgstr "Caso contrário, a mesclagem continuará de forma usual."

#. type: Labeled list
#: en/merge-strategies.txt:57
#, ignore-same, no-wrap, priority:240
msgid "renormalize"
msgstr "renormalize"

#. type: Plain text
#: en/merge-strategies.txt:64
#, priority:240
msgid "This runs a virtual check-out and check-in of all three stages of a file when resolving a three-way merge.  This option is meant to be used when merging branches with different clean filters or end-of-line normalization rules.  See \"Merging branches with differing checkin/checkout attributes\" in linkgit:gitattributes[5] for details."
msgstr "Executa uma averiguação e um check-in virtual de três estágios em um arquivo ao resolver uma mesclagem de três vias.  Esta opção deve ser utilizada ao mesclar os ramos com diferentes filtros que estejam limpos ou as regras normais para a quebra de linha.  Para obter mais detalhes, consulte \"Mesclando ramificações com diferentes atributos de check-in/check-out\" em linkgit:gitattributes[5]."

#. type: Labeled list
#: en/merge-strategies.txt:65
#, ignore-same, no-wrap, priority:240
msgid "no-renormalize"
msgstr "no-renormalize"

#. type: Plain text
#: en/merge-strategies.txt:68
#, priority:240
msgid "Disables the `renormalize` option.  This overrides the `merge.renormalize` configuration variable."
msgstr "Desativa a opção `renormalize`.  Substitui a variável de configuração `merge.renormalize`."

#. type: Labeled list
#: en/merge-strategies.txt:69
#, no-wrap, priority:240
msgid "find-renames[=<n>]"
msgstr "find-renames[=<n>]"

#. type: Plain text
#: en/merge-strategies.txt:74
#, priority:240
msgid "Turn on rename detection, optionally setting the similarity threshold.  This is the default. This overrides the 'merge.renames' configuration variable.  See also linkgit:git-diff[1] `--find-renames`."
msgstr "Liga a detecção de renomeação, configurando opcionalmente o limite de similaridade.  Esta é a predefinição. Isso substitui a configuração da variável 'merge.renames'.  Consulte também linkgit:git-diff[1] `--find-renames`."

#. type: Labeled list
#: en/merge-strategies.txt:75
#, no-wrap, priority:240
msgid "rename-threshold=<n>"
msgstr "rename-threshold=<n>"

#. type: Plain text
#: en/merge-strategies.txt:77
#, priority:240
msgid "Deprecated synonym for `find-renames=<n>`."
msgstr "É um sinônimo obsoleto para `find-renames=<n>`."

#. type: Labeled list
#: en/merge-strategies.txt:78
#, no-wrap, priority:240
msgid "subtree[=<path>]"
msgstr "subtree[=<caminho>]"

#. type: Plain text
#: en/merge-strategies.txt:84
#, priority:240
msgid "This option is a more advanced form of 'subtree' strategy, where the strategy makes a guess on how two trees must be shifted to match with each other when merging.  Instead, the specified path is prefixed (or stripped from the beginning) to make the shape of two trees to match."
msgstr "Essa opção é uma forma mais avançada da estratégia da 'subárvore', onde a estratégia adivinha como as duas árvores devem ser deslocadas para coincidirem uma com a outra durante a mesclagem.  Em vez disso, o caminho definido é prefixado (ou removido desde o início) para criar a forma das duas árvores que serão coincididas."

#. type: Labeled list
#: en/merge-strategies.txt:85
#, ignore-same, no-wrap, priority:240
msgid "recursive"
msgstr "recursive"

#. type: Plain text
#: en/merge-strategies.txt:98
#, priority:240
msgid "This can only resolve two heads using a 3-way merge algorithm.  When there is more than one common ancestor that can be used for 3-way merge, it creates a merged tree of the common ancestors and uses that as the reference tree for the 3-way merge.  This has been reported to result in fewer merge conflicts without causing mismerges by tests done on actual merge commits taken from Linux 2.6 kernel development history.  Additionally this can detect and handle merges involving renames.  It does not make use of detected copies.  This was the default strategy for resolving two heads from Git v0.99.9k until v2.33.0."
msgstr "Isso pode resolver apenas duas cabeças usando o algoritmo da mesclagem de 3 vias.  Quando há mais de um ancestral comum que pode ser usado para a mesclagem de 3 vias, ele cria uma árvore mesclada dos ancestrais comuns e o usa como a árvore de referência para a mesclagem de 3 vias.  Foi informado que isso resulta em menos conflitos durante mesclagem sem causar distorções pelos testes feitos nas mesclagens reais dos commits, retiradas do histórico de desenvolvimento do Linux kernel 2.6.  Adicionalmente, pode detectar e lidar com mesclagens envolvendo renomeações. Não faz uso das cópias que forem detectadas. Esta foi a estratégia padrão para resolver dois heads do Git v0.99.9k até a v2.33.0."

#. type: Plain text
#: en/merge-strategies.txt:102
#, priority:240
msgid "The 'recursive' strategy takes the same options as 'ort'.  However, there are three additional options that 'ort' ignores (not documented above) that are potentially useful with the 'recursive' strategy:"
msgstr "A estratégia 'recursive' (recursiva) tem as mesmas opções que 'ort'.  Contudo, existem três opções adicionais que 'ort' ignora (não documentada acima) que são potencialmente úteis com a estratégia 'recursiva':"

#. type: Labeled list
#: en/merge-strategies.txt:103
#, ignore-same, no-wrap, priority:240
msgid "patience"
msgstr "patience"

#. type: Plain text
#: en/merge-strategies.txt:105
#, priority:240
msgid "Deprecated synonym for `diff-algorithm=patience`."
msgstr "É um sinônimo obsoleto para `diff-algorithm=patience`."

#. type: Labeled list
#: en/merge-strategies.txt:106
#, ignore-same, no-wrap, priority:240
msgid "diff-algorithm=[patience|minimal|histogram|myers]"
msgstr "diff-algorithm=[patience|minimal|histogram|myers]"

#. type: Plain text
#: en/merge-strategies.txt:113
#, priority:240
msgid "Use a different diff algorithm while merging, which can help avoid mismerges that occur due to unimportant matching lines (such as braces from distinct functions).  See also linkgit:git-diff[1] `--diff-algorithm`.  Note that `ort` specifically uses `diff-algorithm=histogram`, while `recursive` defaults to the `diff.algorithm` config setting."
msgstr "Usa um algoritmo diff diferente durante a mesclagem, pode ajudar a evitar as distorções que ocorrem devido as linhas coincidentes sem importância (como chaves das funções distintas).  Consulte também linkgit:git-diff[1] `--diff-algorithm`. Observe que o `ort` utiliza especificamente o `diff-algorithm=histogram` enquanto `recursive` é a predefinição para a configuração `diff.algorithm`."

#. type: Labeled list
#: en/merge-strategies.txt:114
#, ignore-same, no-wrap, priority:240
msgid "no-renames"
msgstr "no-renames"

#. type: Plain text
#: en/merge-strategies.txt:118
#, priority:240
msgid "Turn off rename detection. This overrides the `merge.renames` configuration variable.  See also linkgit:git-diff[1] `--no-renames`."
msgstr "Desativa a detecção de renomeação. Isso substitui a variável de configuração `merge.renames`.  Consulte tambémlinkgit:git-diff[1] `--no-renames`."

#. type: Labeled list
#: en/merge-strategies.txt:119
#, ignore-same, no-wrap, priority:240
msgid "resolve"
msgstr "resolve"

#. type: Plain text
#: en/merge-strategies.txt:124
#, priority:240
msgid "This can only resolve two heads (i.e. the current branch and another branch you pulled from) using a 3-way merge algorithm.  It tries to carefully detect criss-cross merge ambiguities.  It does not handle renames."
msgstr "Isso só pode resultar em dois cabeçalhos (ou seja, a ramificação atual e uma outra ramificada da que você obteve) utilizando um algoritmo de mesclagem de três vias.  Ele tenta detectar cuidadosamente as ambiguidades cruzadas da mesclagem. Ele não lida com renomeações."

#. type: Labeled list
#: en/merge-strategies.txt:125
#, ignore-same, no-wrap, priority:240
msgid "octopus"
msgstr "octopus"

#. type: Plain text
#: en/merge-strategies.txt:131
#, priority:240
msgid "This resolves cases with more than two heads, but refuses to do a complex merge that needs manual resolution.  It is primarily meant to be used for bundling topic branch heads together.  This is the default merge strategy when pulling or merging more than one branch."
msgstr "Isso resolve os casos com mais de dois cabeçalhos, porém se recusa a fazer uma mesclagem complexa que precise de uma resolução manual.  Destina-se primeiramente para ser usado para agrupar junto o tópico dos cabeçalhos.  Esra é a estratégia de mesclagem predefinida durante a extração ou a mesclagem com mais de um ramo."

#. type: Plain text
#: en/merge-strategies.txt:139
#, priority:240
msgid "This resolves any number of heads, but the resulting tree of the merge is always that of the current branch head, effectively ignoring all changes from all other branches.  It is meant to be used to supersede old development history of side branches.  Note that this is different from the -Xours option to the 'recursive' merge strategy."
msgstr "Isso resolve qualquer quantidade dos cabeçalhos, porém a árvore resultante da mesclagem é sempre a do cabeçalho atual do ramo, ignorando efetivamente todas as alterações de todas os outros ramos.  Ele deve ser usado para substituir o histórico antigo de desenvolvimento das ramificações laterais.  Observe que isso é diferente da opção `-Xours` da estratégia de mesclagem 'recursiva'."

#. type: Labeled list
#: en/merge-strategies.txt:140
#, ignore-same, no-wrap, priority:240
msgid "subtree"
msgstr "subtree"

#. type: Plain text
#: en/merge-strategies.txt:146
#, priority:240
msgid "This is a modified `ort` strategy. When merging trees A and B, if B corresponds to a subtree of A, B is first adjusted to match the tree structure of A, instead of reading the trees at the same level. This adjustment is also done to the common ancestor tree."
msgstr "Esta é uma estratégia `ort` modificada. Ao mesclar as árvores 'A' e 'B', caso 'B' corresponda a uma subárvore de 'A', o 'B' será ajustado primeiro para coincidir à estrutura da árvore 'A', em vez de ler as árvores no mesmo nível. Esse ajuste também é feito na árvore ancestral comum."

#. type: Plain text
#: en/merge-strategies.txt:153
#, priority:240
msgid "With the strategies that use 3-way merge (including the default, 'ort'), if a change is made on both branches, but later reverted on one of the branches, that change will be present in the merged result; some people find this behavior confusing.  It occurs because only the heads and the merge base are considered when performing a merge, not the individual commits.  The merge algorithm therefore considers the reverted change as no change at all, and substitutes the changed version instead."
msgstr "Com as estratégias que usma a mesclagem de 3 vias (incluindo a predefinição, 'ort'), caso uma alteração seja feita em ambas as ramificações, porém depois revertida em uma das ramificações, essa alteração estará presente no resultado mesclado; algumas pessoas acham este comportamento confuso.  Isso ocorre porque apenas os cabeçalhos e a base da mesclagem são consideradas ao fazer uma mesclagem, e não os commits individuais.  Portanto, o algoritmo da mesclagem considera a alteração revertida como nenhuma alteração e substitui a versão alterada."

#. type: Plain text
#: en/mergetools-merge.txt:2
#, ignore-same, priority:100
msgid "araxis"
msgstr "araxis"

#. type: Plain text
#: en/mergetools-merge.txt:3
#, ignore-same, priority:100
msgid "bc"
msgstr "bc"

#. type: Plain text
#: en/mergetools-merge.txt:4
#, ignore-same, priority:100
msgid "bc3"
msgstr "bc3"

#. type: Plain text
#: en/mergetools-merge.txt:5
#, ignore-same, priority:100
msgid "bc4"
msgstr "bc4"

#. type: Plain text
#: en/mergetools-merge.txt:6
#, ignore-same, priority:100
msgid "codecompare"
msgstr "codecompare"

#. type: Plain text
#: en/mergetools-merge.txt:7
#, ignore-same, priority:100
msgid "deltawalker"
msgstr "deltawalker"

#. type: Plain text
#: en/mergetools-merge.txt:8
#, ignore-same, priority:100
msgid "diffmerge"
msgstr "diffmerge"

#. type: Plain text
#: en/mergetools-merge.txt:9
#, ignore-same, priority:100
msgid "diffuse"
msgstr "diffuse"

#. type: Plain text
#: en/mergetools-merge.txt:10
#, ignore-same, priority:100
msgid "ecmerge"
msgstr "ecmerge"

#. type: Plain text
#: en/mergetools-merge.txt:11
#, ignore-same, priority:100
msgid "emerge"
msgstr "emerge"

#. type: Plain text
#: en/mergetools-merge.txt:12
#, ignore-same, priority:100
msgid "examdiff"
msgstr "examdiff"

#. type: Plain text
#: en/mergetools-merge.txt:13
#, ignore-same, priority:100
msgid "guiffy"
msgstr "guiffy"

#. type: Plain text
#: en/mergetools-merge.txt:14
#, ignore-same, priority:100
msgid "gvimdiff"
msgstr "gvimdiff"

#. type: Plain text
#: en/mergetools-merge.txt:15
#, ignore-same, priority:100
msgid "gvimdiff1"
msgstr "gvimdiff1"

#. type: Plain text
#: en/mergetools-merge.txt:16
#, ignore-same, priority:100
msgid "gvimdiff2"
msgstr "gvimdiff2"

#. type: Plain text
#: en/mergetools-merge.txt:17
#, ignore-same, priority:100
msgid "gvimdiff3"
msgstr "gvimdiff3"

#. type: Plain text
#: en/mergetools-merge.txt:18
#, ignore-same, priority:100
msgid "kdiff3"
msgstr "kdiff3"

#. type: Plain text
#: en/mergetools-merge.txt:19
#, ignore-same, priority:100
msgid "meld"
msgstr "meld"

#. type: Plain text
#: en/mergetools-merge.txt:20
#, ignore-same, priority:100
msgid "nvimdiff"
msgstr "nvimdiff"

#. type: Plain text
#: en/mergetools-merge.txt:21
#, ignore-same, priority:100
msgid "nvimdiff1"
msgstr "nvimdiff1"

#. type: Plain text
#: en/mergetools-merge.txt:22
#, ignore-same, priority:100
msgid "nvimdiff2"
msgstr "nvimdiff2"

#. type: Plain text
#: en/mergetools-merge.txt:23
#, ignore-same, priority:100
msgid "nvimdiff3"
msgstr "nvimdiff3"

#. type: Plain text
#: en/mergetools-merge.txt:24
#, ignore-same, priority:100
msgid "opendiff"
msgstr "opendiff"

#. type: Plain text
#: en/mergetools-merge.txt:25
#, ignore-same, priority:100
msgid "p4merge"
msgstr "p4merge"

#. type: Plain text
#: en/mergetools-merge.txt:26
#, ignore-same, priority:100
msgid "smerge"
msgstr "smerge"

#. type: Plain text
#: en/mergetools-merge.txt:27
#, ignore-same, priority:100
msgid "tkdiff"
msgstr "tkdiff"

#. type: Plain text
#: en/mergetools-merge.txt:28
#, ignore-same, priority:100
msgid "tortoisemerge"
msgstr "tortoisemerge"

#. type: Plain text
#: en/mergetools-merge.txt:30
#, ignore-same, priority:100
msgid "vimdiff1"
msgstr "vimdiff1"

#. type: Plain text
#: en/mergetools-merge.txt:31
#, ignore-same, priority:100
msgid "vimdiff2"
msgstr "vimdiff2"

#. type: Plain text
#: en/mergetools-merge.txt:32
#, ignore-same, priority:100
msgid "vimdiff3"
msgstr "vimdiff3"

#. type: Plain text
#: en/mergetools-merge.txt:33
#, ignore-same, priority:100
msgid "winmerge"
msgstr "winmerge"

#. type: Plain text
#: en/mergetools-merge.txt:33
#, ignore-same, priority:100
msgid "xxdiff"
msgstr "xxdiff"

#. type: Plain text
#: en/object-format-disclaimer.txt:6
#, priority:300
msgid "THIS OPTION IS EXPERIMENTAL! SHA-256 support is experimental and still in an early stage.  A SHA-256 repository will in general not be able to share work with \"regular\" SHA-1 repositories.  It should be assumed that, e.g., Git internal file formats in relation to SHA-256 repositories may change in backwards-incompatible ways.  Only use `--object-format=sha256` for testing purposes."
msgstr "ESTA OPÇÃO É EXPERIMENTAL! O suporte ao SHA-256 é experimental e ainda está em um estágio inicial.  Um repositório SHA-256 em geral não será capaz de compartilhar trabalho com repositórios SHA-1 \"normais\".  Deve-se presumir que, os formatos do arquivo interno Git em relação aos repositórios SHA-256 podem mudar de maneira que se tornem incompatíveis com as versões anteriores por exemplo.  Use apenas `--object-format=sha256` apenas como teste."

#. type: Title -
#: en/pretty-formats.txt:2
#, no-wrap, priority:260
msgid "PRETTY FORMATS"
msgstr "FORMATOS BONITOS"

#. type: Plain text
#: en/pretty-formats.txt:13
#, priority:260
msgid "If the commit is a merge, and if the pretty-format is not 'oneline', 'email' or 'raw', an additional line is inserted before the 'Author:' line.  This line begins with \"Merge: \" and the hashes of ancestral commits are printed, separated by spaces.  Note that the listed commits may not necessarily be the list of the *direct* parent commits if you have limited your view of history: for example, if you are only interested in changes related to a certain directory or file."
msgstr "Se o commit for uma mesclagem e se o formato bonito não for 'oneline', 'email' ou 'raw', uma linha adicional será inserida antes da linha 'Author:'.  Esta linha começa com \"Mesclar:\" e os hashes dos commits anteriores são exibidos, separados por espaços.  Observe que os commits listados podem não ser necessariamente a lista *direta* dos commits relacionados se você limitou sua visão do histórico: por exemplo, se você estiver interessado apenas em alterações relacionadas a um determinado diretório ou arquivo."

#. type: Plain text
#: en/pretty-formats.txt:20
#, priority:260
msgid "There are several built-in formats, and you can define additional formats by setting a pretty.<name> config option to either another format name, or a 'format:' string, as described below (see linkgit:git-config[1]). Here are the details of the built-in formats:"
msgstr "Existem vários formatos incorporados e você pode definir formatos adicionais ao definir uma opção da configuração `pretty.<nome>` para um outro nome de formato ou uma string 'format:', conforme descrito abaixo (consulte linkgit:git-config[1]). Aqui estão os detalhes dos formatos incorporados: Aqui estão os detalhes dos formatos incorporados:"

#. type: Plain text
#: en/pretty-formats.txt:22
#, ignore-same, priority:260
msgid "'oneline'"
msgstr "'oneline'"

#. type: Plain text
#: en/pretty-formats.txt:24
#, no-wrap, priority:260
msgid "<hash> <title-line>\n"
msgstr "<hash> <linha-do-título>\n"

#. type: Plain text
#: en/pretty-formats.txt:26
#, priority:260
msgid "This is designed to be as compact as possible."
msgstr "Isso foi desenvolvido para ser o mais compacto possível."

#. type: Plain text
#: en/pretty-formats.txt:28
#, ignore-same, priority:260
msgid "'short'"
msgstr "'short'"

#. type: Plain text
#: en/pretty-formats.txt:31
#, no-wrap, priority:260
msgid ""
"commit <hash>\n"
"Author: <author>\n"
msgstr ""
"commit <hash>\n"
"Author: <autor>\n"

#. type: Plain text
#: en/pretty-formats.txt:33 en/pretty-formats.txt:41 en/pretty-formats.txt:51 en/pretty-formats.txt:63
#, no-wrap, priority:260
msgid "<title-line>\n"
msgstr "<linha-do-título>\n"

#. type: Plain text
#: en/pretty-formats.txt:35
#, ignore-same, priority:260
msgid "'medium'"
msgstr "'medium'"

#. type: Plain text
#: en/pretty-formats.txt:39
#, no-wrap, priority:260
msgid ""
"commit <hash>\n"
"Author: <author>\n"
"Date:   <author-date>\n"
msgstr ""
"commit <hash>\n"
"Author: <autor>\n"
"Date:   <data-do-autor>\n"

#. type: Plain text
#: en/pretty-formats.txt:43 en/pretty-formats.txt:53 en/pretty-formats.txt:65 en/pretty-formats.txt:85
#, priority:260
msgid "<full-commit-message>"
msgstr "<mensagem-completa-do-commit>"

#. type: Plain text
#: en/pretty-formats.txt:45
#, ignore-same, priority:260
msgid "'full'"
msgstr "'full'"

#. type: Plain text
#: en/pretty-formats.txt:49
#, no-wrap, priority:260
msgid ""
"commit <hash>\n"
"Author: <author>\n"
"Commit: <committer>\n"
msgstr ""
"commit <hash>\n"
"Author: <autor>\n"
"Commit: <quem fez o commit>\n"

#. type: Plain text
#: en/pretty-formats.txt:55
#, ignore-same, priority:260
msgid "'fuller'"
msgstr "'fuller'"

#. type: Plain text
#: en/pretty-formats.txt:61
#, no-wrap, priority:260
msgid ""
"commit <hash>\n"
"Author:     <author>\n"
"AuthorDate: <author-date>\n"
"Commit:     <committer>\n"
"CommitDate: <committer-date>\n"
msgstr ""
"commit <hash>\n"
"Author:     <autor>\n"
"AuthorDate: <data-do-autor>\n"
"Commit:     <quem-fez-o-commit>\n"
"CommitDate: <a-data-de-quem-fez-o-commit>\n"

#. type: Plain text
#: en/pretty-formats.txt:67
#, priority:260
msgid "'reference'"
msgstr "'reference'"

#. type: Plain text
#: en/pretty-formats.txt:69
#, no-wrap, priority:260
msgid "<abbrev-hash> (<title-line>, <short-author-date>)\n"
msgstr "<abbrev-hash> (<linha-do-título>, <data-do-autor-abreviada>)\n"

#. type: Plain text
#: en/pretty-formats.txt:76
#, priority:260
msgid "This format is used to refer to another commit in a commit message and is the same as `--pretty='format:%C(auto)%h (%s, %ad)'`.  By default, the date is formatted with `--date=short` unless another `--date` option is explicitly specified.  As with any `format:` with format placeholders, its output is not affected by other options like `--decorate` and `--walk-reflogs`."
msgstr "Este formato é utilizado para se referir a outro commit em uma mensagem de commit e é o mesmo que o formato `--pretty='format:%C(auto)%h (%s, %ad)'`.  Por predefinição a data é formatada com `--date=short`, a menos que outra opção `--date` seja utilizada de forma explicita.  Como em qualquer formato `format:` com marcadores de formato, a sua saída não é afetada por outras opções como `--decorate` e `--walk-reflogs`."

#. type: Plain text
#: en/pretty-formats.txt:78
#, ignore-same, priority:260
msgid "'email'"
msgstr "'email'"

#. type: Plain text
#: en/pretty-formats.txt:83
#, no-wrap, priority:260
msgid ""
"From <hash> <date>\n"
"From: <author>\n"
"Date: <author-date>\n"
"Subject: [PATCH] <title-line>\n"
msgstr ""
"From <hash> <data>\n"
"From: <autor>\n"
"Date: <data-do-autor>\n"
"Subject: [PATCH] <linha-do-título>\n"

#. type: Plain text
#: en/pretty-formats.txt:87
#, priority:260
msgid "'mboxrd'"
msgstr "'mboxrd'"

#. type: Plain text
#: en/pretty-formats.txt:91
#, priority:260
msgid "Like 'email', but lines in the commit message starting with \"From \" (preceded by zero or more \">\") are quoted with \">\" so they aren't confused as starting a new commit."
msgstr "Como 'e-mail', porém as linhas no commit da mensagem iniciando com \"From\" (precedidas por zero ou mais \">\") são citadas com \">\" para que não sejam confundidas ao iniciar um novo commit."

#. type: Plain text
#: en/pretty-formats.txt:93
#, ignore-same, priority:260
msgid "'raw'"
msgstr "'raw'"

#. type: Plain text
#: en/pretty-formats.txt:103
#, priority:260
msgid "The 'raw' format shows the entire commit exactly as stored in the commit object.  Notably, the hashes are displayed in full, regardless of whether --abbrev or --no-abbrev are used, and 'parents' information show the true parent commits, without taking grafts or history simplification into account. Note that this format affects the way commits are displayed, but not the way the diff is shown e.g. with `git log --raw`. To get full object names in a raw diff format, use `--no-abbrev`."
msgstr "O formato 'bruto' exibe todo o commit exatamente como foi armazenado no objeto commit.  Notavelmente, os hashes são exibidos na íntegra independentemente se a opção `--abbrev` ou `--no-abbrev` foram utilizadas, as informações relacionadas as origens 'parents' demonstram quais os verdadeiros commits da origem sem levar em consideração os enxertos ou a simplificação do histórico. Observe que este formato afeta a maneira como os commits são exibidos mas não a maneira como o \"diff\" é exibido com `git log --raw` por exemplo. Para obter os nomes completos e sem abreviações dos objetos em formato diff bruto, utilize `--no-abbrev`."

#. type: Plain text
#: en/pretty-formats.txt:105
#, priority:260
msgid "'format:<format-string>'"
msgstr "'format:<formato-do-texto>'"

#. type: Plain text
#: en/pretty-formats.txt:110
#, priority:260
msgid "The 'format:<format-string>' format allows you to specify which information you want to show. It works a little bit like printf format, with the notable exception that you get a newline with '%n' instead of '\\n'."
msgstr "O formato 'format:<formato-do-texto>' permite especificar quais as informações que você deseja exibir. Funciona um pouco como o formato \"printf\" com a exceção notável de que você obtém uma nova linha com '%n' em vez de '\\n'."

#. type: Plain text
#: en/pretty-formats.txt:113
#, priority:260
msgid "E.g, 'format:\"The author of %h was %an, %ar%nThe title was >>%s<<%n\"' would show something like this:"
msgstr "Por exemplo,'format:\"O autor do %h foi %an, %ar%nO título era >>%s<<%n\"' exibirá algo como isso:"

#. type: delimited block -
#: en/pretty-formats.txt:117
#, no-wrap, priority:260
msgid ""
"The author of fe6e0ee was Junio C Hamano, 23 hours ago\n"
"The title was >>t4119: test autocomputing -p<n> for traditional diff input.<<\n"
msgstr ""
"O autor do fe6e0ee foi Junio C Hamano, 23 houras atrás\n"
"O título era >>t4119: test autocomputing -p<n> for traditional diff input.<<\n"

#. type: Plain text
#: en/pretty-formats.txt:121
#, priority:260
msgid "The placeholders are:"
msgstr "Os espaços reservados são:"

#. type: Plain text
#: en/pretty-formats.txt:123
#, priority:260
msgid "Placeholders that expand to a single literal character:"
msgstr "O Espaços reservados que se expandem para um único caractere literal:"

#. type: Labeled list
#: en/pretty-formats.txt:123
#, ignore-same, no-wrap, priority:260
msgid "'%n'"
msgstr "'%n'"

#. type: Plain text
#: en/pretty-formats.txt:124
#, priority:260
msgid "newline"
msgstr "newline"

#. type: Plain text
#: en/pretty-formats.txt:125
#, priority:260
msgid "a raw '%'"
msgstr "a raw '%'"

#. type: Labeled list
#: en/pretty-formats.txt:125
#, no-wrap, priority:260
msgid "'%x00'"
msgstr "'%x00'"

#. type: Plain text
#: en/pretty-formats.txt:126
#, priority:260
msgid "print a byte from a hex code"
msgstr "imprime um byte de um código hexadecimal"

#. type: Plain text
#: en/pretty-formats.txt:128
#, priority:260
msgid "Placeholders that affect formatting of later placeholders:"
msgstr "Espaços reservados que afetam a formatação de espaços reservados posteriores:"

#. type: Labeled list
#: en/pretty-formats.txt:128
#, ignore-same, no-wrap, priority:260
msgid "'%Cred'"
msgstr "'%Cred'"

#. type: Plain text
#: en/pretty-formats.txt:129
#, priority:260
msgid "switch color to red"
msgstr "mudar de cor para o vermelho"

#. type: Labeled list
#: en/pretty-formats.txt:129
#, ignore-same, no-wrap, priority:260
msgid "'%Cgreen'"
msgstr "'%Cgreen'"

#. type: Plain text
#: en/pretty-formats.txt:130
#, priority:260
msgid "switch color to green"
msgstr "mudar de cor para o verde"

#. type: Labeled list
#: en/pretty-formats.txt:130
#, ignore-same, no-wrap, priority:260
msgid "'%Cblue'"
msgstr "'%Cblue'"

#. type: Plain text
#: en/pretty-formats.txt:131
#, priority:260
msgid "switch color to blue"
msgstr "mudar de cor para o azul"

#. type: Labeled list
#: en/pretty-formats.txt:131
#, ignore-same, no-wrap, priority:260
msgid "'%Creset'"
msgstr "'%Creset'"

#. type: Plain text
#: en/pretty-formats.txt:132
#, priority:260
msgid "reset color"
msgstr "redefine a cor"

#. type: Labeled list
#: en/pretty-formats.txt:132
#, ignore-ellipsis, no-wrap, priority:260
msgid "'%C(...)'"
msgstr "'%C(...)'"

#. type: Plain text
#: en/pretty-formats.txt:146
#, ignore-ellipsis, priority:260
msgid "color specification, as described under Values in the \"CONFIGURATION FILE\" section of linkgit:git-config[1].  By default, colors are shown only when enabled for log output (by `color.diff`, `color.ui`, or `--color`, and respecting the `auto` settings of the former if we are going to a terminal). `%C(auto,...)` is accepted as a historical synonym for the default (e.g., `%C(auto,red)`). Specifying `%C(always,...)` will show the colors even when color is not otherwise enabled (though consider just using `--color=always` to enable color for the whole output, including this format and anything else git might color).  `auto` alone (i.e. `%C(auto)`) will turn on auto coloring on the next placeholders until the color is switched again."
msgstr "definição das cores, como descrito na parte de Valores no \"ARQUIVO DE CONFIGURAÇÃO\" seção do linkgit:git-config[1].  É predefinido que as cores sejam exibidas apenas quando ativadas para na saída do registro log (em `color.diff`,` color.ui` ou `color`, e respeitando as configurações `auto` da primeira se estivermos indo para um terminal). `%C(auto,...)` é aceito como um sinônimo histórico do padrão (exemplo., `%C(auto,red)`). Especificar `%C(always,...)` exibirá as cores mesmo quando a cor não estiver ativada (embora considere apenas usar `--color=always` para sempre ativar a cor na saída incluindo este formato e qualquer outro que o git possa colorir).  `auto` sozinho (ou seja,`%C(auto)`)  ativará a coloração automática nos próximos espaços reservados até que a cor seja trocada novamente."

#. type: Labeled list
#: en/pretty-formats.txt:146
#, ignore-same, no-wrap, priority:260
msgid "'%m'"
msgstr "'%m'"

#. type: Plain text
#: en/pretty-formats.txt:147
#, priority:260
msgid "left (`<`), right (`>`) or boundary (`-`) mark"
msgstr "marca esquerda (`<`), direita (`>`) ou limite (`-`)"

#. type: Labeled list
#: en/pretty-formats.txt:147
#, no-wrap, priority:260
msgid "'%w([<w>[,<i1>[,<i2>]]])'"
msgstr "'%w([<w>[,<i1>[,<i2>]]])'"

#. type: Plain text
#: en/pretty-formats.txt:149
#, priority:260
msgid "switch line wrapping, like the -w option of linkgit:git-shortlog[1]."
msgstr "alterna a quebra da linha, como na opção `-w` do linkgit:git-shortlog[1]."

#. type: Labeled list
#: en/pretty-formats.txt:149
#, no-wrap, priority:260
msgid "'%<(<N>[,trunc|ltrunc|mtrunc])'"
msgstr "'%<(<N>[,trunc|ltrunc|mtrunc])'"

#. type: Plain text
#: en/pretty-formats.txt:157
#, priority:260
msgid "make the next placeholder take at least N columns, padding spaces on the right if necessary.  Optionally truncate at the beginning (ltrunc), the middle (mtrunc) or the end (trunc) if the output is longer than N columns.  Note that truncating only works correctly with N >= 2."
msgstr "faz com que o próximo espaço ocupado ocupe ao menos N colunas, preenchendo espaços à direita, se necessário.  Opcionalmente, truncar no início (ltrunc), no meio (mtrunc) ou no final (trunc) caso a saída seja maior que N colunas.  Observe que o truncamento funciona corretamente com N >= 2."

#. type: Labeled list
#: en/pretty-formats.txt:157
#, no-wrap, priority:260
msgid "'%<|(<N>)'"
msgstr "'%<|(<N>)'"

#. type: Plain text
#: en/pretty-formats.txt:159
#, priority:260
msgid "make the next placeholder take at least until Nth columns, padding spaces on the right if necessary"
msgstr "faça com que o próximo espaço reservado leve pelo menos até a enésima coluna, preenchendo os espaços à direita caso seja necessário"

#. type: Labeled list
#: en/pretty-formats.txt:159
#, no-wrap, priority:260
msgid "'%>(<N>)', '%>|(<N>)'"
msgstr "'%>(<N>)', '%>|(<N>)'"

#. type: Plain text
#: en/pretty-formats.txt:161
#, priority:260
msgid "similar to '%<(<N>)', '%<|(<N>)' respectively, but padding spaces on the left"
msgstr "semelhante ao '%<(<N>)', '%<|(<N>)' respectivamente, mas preenchendo os espaços à esquerda"

#. type: Labeled list
#: en/pretty-formats.txt:161
#, no-wrap, priority:260
msgid "'%>>(<N>)', '%>>|(<N>)'"
msgstr "'%>>(<N>)', '%>>|(<N>)'"

#. type: Plain text
#: en/pretty-formats.txt:166
#, priority:260
msgid "similar to '%>(<N>)', '%>|(<N>)' respectively, except that if the next placeholder takes more spaces than given and there are spaces on its left, use those spaces"
msgstr "semelhante a '%>(<N>)', '%>|(<N>)' respectivamente, exceto caso o próximo espaço reservado ocupe mais espaços do que o informado e haja espaços à esquerda, utilize estes espaços"

#. type: Labeled list
#: en/pretty-formats.txt:166
#, no-wrap, priority:260
msgid "'%><(<N>)', '%><|(<N>)'"
msgstr "'%><(<N>)', '%><|(<N>)'"

#. type: Plain text
#: en/pretty-formats.txt:169
#, priority:260
msgid "similar to '%<(<N>)', '%<|(<N>)' respectively, but padding both sides (i.e. the text is centered)"
msgstr "semelhante a '%<(<N>)', '%<|(<N>)' respectivamente, mas preenchendo ambos os lados (quando o texto for centralizado por exemplo)"

#. type: Plain text
#: en/pretty-formats.txt:171
#, priority:260
msgid "Placeholders that expand to information extracted from the commit:"
msgstr "Espaços reservados que se expandem para as informações extraídas do commit:"

#. type: Labeled list
#: en/pretty-formats.txt:171
#, ignore-same, no-wrap, priority:260
msgid "'%H'"
msgstr "'%H'"

#. type: Plain text
#: en/pretty-formats.txt:172
#, priority:260
msgid "commit hash"
msgstr "hash do commit"

#. type: Labeled list
#: en/pretty-formats.txt:172
#, ignore-same, no-wrap, priority:260
msgid "'%h'"
msgstr "'%h'"

#. type: Plain text
#: en/pretty-formats.txt:173
#, priority:260
msgid "abbreviated commit hash"
msgstr "abreviação do hash do commit"

#. type: Labeled list
#: en/pretty-formats.txt:173
#, ignore-same, no-wrap, priority:260
msgid "'%T'"
msgstr "'%T'"

#. type: Plain text
#: en/pretty-formats.txt:174
#, priority:260
msgid "tree hash"
msgstr "hash da árvore"

#. type: Labeled list
#: en/pretty-formats.txt:174
#, ignore-same, no-wrap, priority:260
msgid "'%t'"
msgstr "'%t'"

#. type: Plain text
#: en/pretty-formats.txt:175
#, priority:260
msgid "abbreviated tree hash"
msgstr "hash abreviado da árvore"

#. type: Labeled list
#: en/pretty-formats.txt:175
#, ignore-same, no-wrap, priority:260
msgid "'%P'"
msgstr "'%P'"

#. type: Plain text
#: en/pretty-formats.txt:176
#, priority:260
msgid "parent hashes"
msgstr "hash das origens"

#. type: Labeled list
#: en/pretty-formats.txt:176
#, ignore-same, no-wrap, priority:260
msgid "'%p'"
msgstr "'%p'"

#. type: Plain text
#: en/pretty-formats.txt:177
#, priority:260
msgid "abbreviated parent hashes"
msgstr "hash abreviado das origens"

#. type: Labeled list
#: en/pretty-formats.txt:177
#, ignore-same, no-wrap, priority:260
msgid "'%an'"
msgstr "'%an'"

#. type: Plain text
#: en/pretty-formats.txt:178
#, priority:260
msgid "author name"
msgstr "nome do autor"

#. type: Labeled list
#: en/pretty-formats.txt:178
#, ignore-same, no-wrap, priority:260
msgid "'%aN'"
msgstr "'%aN'"

#. type: Plain text
#: en/pretty-formats.txt:180
#, priority:260
msgid "author name (respecting .mailmap, see linkgit:git-shortlog[1] or linkgit:git-blame[1])"
msgstr "o nome do autor (respeitando .mailmap, consulte linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#. type: Labeled list
#: en/pretty-formats.txt:180
#, ignore-same, no-wrap, priority:260
msgid "'%ae'"
msgstr "'%ae'"

#. type: Plain text
#: en/pretty-formats.txt:181
#, priority:260
msgid "author email"
msgstr "e-mail do autor"

#. type: Labeled list
#: en/pretty-formats.txt:181
#, ignore-same, no-wrap, priority:260
msgid "'%aE'"
msgstr "'%aE'"

#. type: Plain text
#: en/pretty-formats.txt:183
#, priority:260
msgid "author email (respecting .mailmap, see linkgit:git-shortlog[1] or linkgit:git-blame[1])"
msgstr "o e-mail do autor (respeitando .mailmap, consulte linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#. type: Labeled list
#: en/pretty-formats.txt:183
#, ignore-same, no-wrap, priority:260
msgid "'%al'"
msgstr "'%al'"

#. type: Plain text
#: en/pretty-formats.txt:184
#, priority:260
msgid "author email local-part (the part before the '@' sign)"
msgstr "parte local do e-mail do autor (a parte antes do sinal '@')"

#. type: Labeled list
#: en/pretty-formats.txt:184
#, ignore-same, no-wrap, priority:260
msgid "'%aL'"
msgstr "'%aL'"

#. type: Plain text
#: en/pretty-formats.txt:186
#, priority:260
msgid "author local-part (see '%al') respecting .mailmap, see linkgit:git-shortlog[1] or linkgit:git-blame[1])"
msgstr "parte do autor local (rconsulte '%al') espeitando o .mailmap, consulte linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#. type: Labeled list
#: en/pretty-formats.txt:186
#, ignore-same, no-wrap, priority:260
msgid "'%ad'"
msgstr "'%ad'"

#. type: Plain text
#: en/pretty-formats.txt:187
#, priority:260
msgid "author date (format respects --date= option)"
msgstr "data do autor (o formato respeita a opção --date=)"

#. type: Labeled list
#: en/pretty-formats.txt:187
#, ignore-same, no-wrap, priority:260
msgid "'%aD'"
msgstr "'%aD'"

#. type: Plain text
#: en/pretty-formats.txt:188
#, priority:260
msgid "author date, RFC2822 style"
msgstr "data do autor, no padrão RFC2822"

#. type: Labeled list
#: en/pretty-formats.txt:188
#, ignore-same, no-wrap, priority:260
msgid "'%ar'"
msgstr "'%ar'"

#. type: Plain text
#: en/pretty-formats.txt:189
#, priority:260
msgid "author date, relative"
msgstr "data do autor, relativa"

#. type: Labeled list
#: en/pretty-formats.txt:189
#, ignore-same, no-wrap, priority:260
msgid "'%at'"
msgstr "'%at'"

#. type: Plain text
#: en/pretty-formats.txt:190
#, priority:260
msgid "author date, UNIX timestamp"
msgstr "data do autor, com registro de data e hora em formato UNIX"

#. type: Labeled list
#: en/pretty-formats.txt:190
#, ignore-same, no-wrap, priority:260
msgid "'%ai'"
msgstr "'%ai'"

#. type: Plain text
#: en/pretty-formats.txt:191
#, priority:260
msgid "author date, ISO 8601-like format"
msgstr "data do autor, formato parecido com ISO 8601"

#. type: Labeled list
#: en/pretty-formats.txt:191
#, ignore-same, no-wrap, priority:260
msgid "'%aI'"
msgstr "'%aI'"

#. type: Plain text
#: en/pretty-formats.txt:192
#, priority:260
msgid "author date, strict ISO 8601 format"
msgstr "data do autor, formato rigoroso ao padrão ISO 8601"

#. type: Labeled list
#: en/pretty-formats.txt:192
#, ignore-same, no-wrap, priority:260
msgid "'%as'"
msgstr "'%as'"

#. type: Plain text
#: en/pretty-formats.txt:193
#, priority:260
msgid "author date, short format (`YYYY-MM-DD`)"
msgstr "data do autor, formato curto (`AAAA-MM-DD`)"

#. type: Labeled list
#: en/pretty-formats.txt:193
#, ignore-same, no-wrap, priority:260
msgid "'%ah'"
msgstr "'%ah'"

#. type: Plain text
#: en/pretty-formats.txt:195
#, priority:260
msgid "author date, human style (like the `--date=human` option of linkgit:git-rev-list[1])"
msgstr "data da autoria, compreensível para pessoas (como a opção `--date=human` do linkgit:git-rev-list[1])"

#. type: Labeled list
#: en/pretty-formats.txt:195
#, ignore-same, no-wrap, priority:260
msgid "'%cn'"
msgstr "'%cn'"

#. type: Plain text
#: en/pretty-formats.txt:196
#, priority:260
msgid "committer name"
msgstr "nome de quem fez o commit"

#. type: Labeled list
#: en/pretty-formats.txt:196
#, ignore-same, no-wrap, priority:260
msgid "'%cN'"
msgstr "'%cN'"

#. type: Plain text
#: en/pretty-formats.txt:198
#, priority:260
msgid "committer name (respecting .mailmap, see linkgit:git-shortlog[1] or linkgit:git-blame[1])"
msgstr "o nome de quem fez o commit (respeitando .mailmap, consulte linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#. type: Labeled list
#: en/pretty-formats.txt:198
#, ignore-same, no-wrap, priority:260
msgid "'%ce'"
msgstr "'%ce'"

#. type: Plain text
#: en/pretty-formats.txt:199
#, priority:260
msgid "committer email"
msgstr "endereço do e-mail de quem fez o commit"

#. type: Labeled list
#: en/pretty-formats.txt:199
#, ignore-same, no-wrap, priority:260
msgid "'%cE'"
msgstr "'%cE'"

#. type: Plain text
#: en/pretty-formats.txt:201
#, priority:260
msgid "committer email (respecting .mailmap, see linkgit:git-shortlog[1] or linkgit:git-blame[1])"
msgstr "o e-mail de quem fez o commit (respeitando .mailmap, consulte linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#. type: Labeled list
#: en/pretty-formats.txt:201
#, ignore-same, no-wrap, priority:260
msgid "'%cl'"
msgstr "'%cl'"

#. type: Plain text
#: en/pretty-formats.txt:202
#, priority:260
msgid "committer email local-part (the part before the '@' sign)"
msgstr "parte local do e-mail de quem fez o commit (a parte antes do sinal '@')"

#. type: Labeled list
#: en/pretty-formats.txt:202
#, ignore-same, no-wrap, priority:260
msgid "'%cL'"
msgstr "'%cL'"

#. type: Plain text
#: en/pretty-formats.txt:204
#, priority:260
msgid "committer local-part (see '%cl') respecting .mailmap, see linkgit:git-shortlog[1] or linkgit:git-blame[1])"
msgstr "a parte local de quem fez o commit (consulte '%cl') respeitando o .mailmap, consulte see linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#. type: Labeled list
#: en/pretty-formats.txt:204
#, ignore-same, no-wrap, priority:260
msgid "'%cd'"
msgstr "'%cd'"

#. type: Plain text
#: en/pretty-formats.txt:205
#, priority:260
msgid "committer date (format respects --date= option)"
msgstr "data do commit (o formato respeita a opção --date=)"

#. type: Labeled list
#: en/pretty-formats.txt:205
#, ignore-same, no-wrap, priority:260
msgid "'%cD'"
msgstr "'%cD'"

#. type: Plain text
#: en/pretty-formats.txt:206
#, priority:260
msgid "committer date, RFC2822 style"
msgstr "data do commit, no padrão RFC2822"

#. type: Labeled list
#: en/pretty-formats.txt:206
#, ignore-same, no-wrap, priority:260
msgid "'%cr'"
msgstr "'%cr'"

#. type: Plain text
#: en/pretty-formats.txt:207
#, priority:260
msgid "committer date, relative"
msgstr "data do commit, relativa"

#. type: Labeled list
#: en/pretty-formats.txt:207
#, ignore-same, no-wrap, priority:260
msgid "'%ct'"
msgstr "'%ct'"

#. type: Plain text
#: en/pretty-formats.txt:208
#, priority:260
msgid "committer date, UNIX timestamp"
msgstr "data do commit, com registro de data e hora em formato UNIX"

#. type: Labeled list
#: en/pretty-formats.txt:208
#, ignore-same, no-wrap, priority:260
msgid "'%ci'"
msgstr "'%ci'"

#. type: Plain text
#: en/pretty-formats.txt:209
#, priority:260
msgid "committer date, ISO 8601-like format"
msgstr "data do commit, formato parecido com ISO 8601"

#. type: Labeled list
#: en/pretty-formats.txt:209
#, ignore-same, no-wrap, priority:260
msgid "'%cI'"
msgstr "'%cI'"

#. type: Plain text
#: en/pretty-formats.txt:210
#, priority:260
msgid "committer date, strict ISO 8601 format"
msgstr "data do commit, formato rigoroso ao padrão ISO 8601"

#. type: Labeled list
#: en/pretty-formats.txt:210
#, ignore-same, no-wrap, priority:260
msgid "'%cs'"
msgstr "'%cs'"

#. type: Plain text
#: en/pretty-formats.txt:211
#, priority:260
msgid "committer date, short format (`YYYY-MM-DD`)"
msgstr "data do commit, formato curto (`AAAA-MM-DD`)"

#. type: Labeled list
#: en/pretty-formats.txt:211
#, ignore-same, no-wrap, priority:260
msgid "'%ch'"
msgstr "'%ch'"

#. type: Plain text
#: en/pretty-formats.txt:213
#, priority:260
msgid "committer date, human style (like the `--date=human` option of linkgit:git-rev-list[1])"
msgstr "a data de quem fez o commit, compreensível para pessoas (como a opção `--date=human` do linkgit:git-rev-list[1])"

#. type: Labeled list
#: en/pretty-formats.txt:213
#, ignore-same, no-wrap, priority:260
msgid "'%d'"
msgstr "'%d'"

#. type: Plain text
#: en/pretty-formats.txt:214
#, priority:260
msgid "ref names, like the --decorate option of linkgit:git-log[1]"
msgstr "nomes de referência \"ref\", como a opção --decorate do linkgit:git-log[1]"

#. type: Labeled list
#: en/pretty-formats.txt:214
#, ignore-same, no-wrap, priority:260
msgid "'%D'"
msgstr "'%D'"

#. type: Plain text
#: en/pretty-formats.txt:215
#, priority:260
msgid "ref names without the \" (\", \")\" wrapping."
msgstr "nomes de referência \"ref\" sem quebra automática \" (\", \")\"."

#. type: Labeled list
#: en/pretty-formats.txt:215
#, no-wrap, priority:260
msgid "'%(describe[:options])'"
msgstr "'%(describe[:options])'"

#. type: Plain text
#: en/pretty-formats.txt:222
#, priority:260
msgid "human-readable name, like linkgit:git-describe[1]; empty string for undescribable commits.  The `describe` string may be followed by a colon and zero or more comma-separated options.  Descriptions can be inconsistent when tags are added or removed at the same time."
msgstr "nome legível para as pessoas, como linkgit:git-describe[1]; uma expressão vazia para os commits sem descrição.  A expressão `describe` pode ser seguida por dois pontos e zero ou mais opções separadas por vírgulas.  As descrições podem ser inconsistentes quando as etiquetas são adicionadas ou removidas ao mesmo tempo."

#. type: Plain text
#: en/pretty-formats.txt:225
#, priority:260
msgid "'tags[=<bool-value>]': Instead of only considering annotated tags, consider lightweight tags as well."
msgstr "'tags[=<bool-value>]': Em vez de considerar apenas as tags anotadas, considere também as lightweight tags."

#. type: Plain text
#: en/pretty-formats.txt:229
#, priority:260
msgid "'abbrev=<number>': Instead of using the default number of hexadecimal digits (which will vary according to the number of objects in the repository with a default of 7) of the abbreviated object name, use <number> digits, or as many digits as needed to form a unique object name."
msgstr "'abbrev=<número>': Em vez de usar o número padrão com dígitos hexadecimais (que variam de acordo com a quantidade dos objetos no repositório com um padrão de 7) do nome abreviado do objeto, utilize `<número>` dígitos ou quantos dígitos forem necessários para formar um nome do objeto que seja único."

#. type: Plain text
#: en/pretty-formats.txt:231
#, priority:260
msgid "'match=<pattern>': Only consider tags matching the given `glob(7)` pattern, excluding the \"refs/tags/\" prefix."
msgstr "'match=<pattern>': Considere apenas as etiquetas que coincidam com o padrão `glob(7)` informado, excluindo o prefixo \"refs/tags/\"."

#. type: Plain text
#: en/pretty-formats.txt:233
#, priority:260
msgid "'exclude=<pattern>': Do not consider tags matching the given `glob(7)` pattern, excluding the \"refs/tags/\" prefix."
msgstr "'exclude=<pattern>': Desconsidere as etiquetas que coincidam com o padrão `glob(7)` informado, excluindo o prefixo \"refs/tags/\"."

#. type: Plain text
#: en/pretty-formats.txt:236
#, priority:260
msgid "ref name given on the command line by which the commit was reached (like `git log --source`), only works with `git log`"
msgstr "os nomes \"ref\" dado na linha de comando pela qual o commit foi alcançado (como `git log --source`), só funciona com o comando `git log`"

#. type: Labeled list
#: en/pretty-formats.txt:236
#, ignore-same, no-wrap, priority:260
msgid "'%e'"
msgstr "'%e'"

#. type: Plain text
#: en/pretty-formats.txt:237
#, priority:260
msgid "encoding"
msgstr "codificação"

#. type: Plain text
#: en/pretty-formats.txt:238
#, priority:260
msgid "subject"
msgstr "assunto"

#. type: Labeled list
#: en/pretty-formats.txt:238
#, ignore-same, no-wrap, priority:260
msgid "'%f'"
msgstr "'%f'"

#. type: Plain text
#: en/pretty-formats.txt:239
#, priority:260
msgid "sanitized subject line, suitable for a filename"
msgstr "linha do assunto higienizado, adequado para um nome de arquivo"

#. type: Labeled list
#: en/pretty-formats.txt:239
#, ignore-same, no-wrap, priority:260
msgid "'%b'"
msgstr "'%b'"

#. type: Plain text
#: en/pretty-formats.txt:240
#, priority:260
msgid "body"
msgstr "corpo"

#. type: Labeled list
#: en/pretty-formats.txt:240
#, ignore-same, no-wrap, priority:260
msgid "'%B'"
msgstr "'%B'"

#. type: Plain text
#: en/pretty-formats.txt:241
#, priority:260
msgid "raw body (unwrapped subject and body)"
msgstr "corpo bruto (assunto e corpo da mensagem desembrulhados)"

#. type: Labeled list
#: en/pretty-formats.txt:242
#, ignore-same, no-wrap, priority:260
msgid "'%N'"
msgstr "'%N'"

#. type: Plain text
#: en/pretty-formats.txt:243
#, priority:260
msgid "commit notes"
msgstr "anotações de quem fez o commit"

#. type: Labeled list
#: en/pretty-formats.txt:244
#, ignore-same, no-wrap, priority:260
msgid "'%GG'"
msgstr "'%GG'"

#. type: Plain text
#: en/pretty-formats.txt:245
#, priority:260
msgid "raw verification message from GPG for a signed commit"
msgstr "verificação bruta da mensagem vinda do GPG para um commit assinado"

#. type: Labeled list
#: en/pretty-formats.txt:245
#, no-wrap, priority:260
msgid "'%G?'"
msgstr "'%G?'"

#. type: Plain text
#: en/pretty-formats.txt:253
#, priority:260
msgid "show \"G\" for a good (valid) signature, \"B\" for a bad signature, \"U\" for a good signature with unknown validity, \"X\" for a good signature that has expired, \"Y\" for a good signature made by an expired key, \"R\" for a good signature made by a revoked key, \"E\" if the signature cannot be checked (e.g. missing key)  and \"N\" for no signature"
msgstr "exibe \"G\" quando uma assinatura for boa (válida), \"B\" para uma assinatura ruim, \"U\" para uma boa assinatura com validade desconhecida, \"X\" para uma boa assinatura que expirou, \"Y\" para uma boa assinatura feita por uma chave expirada, \"R\" para uma boa assinatura feita por uma chave revogada, \"E\" caso a assinatura não possa ser verificada (por exemplo, uma chave ausente) e \"N\" sem assinatura"

#. type: Labeled list
#: en/pretty-formats.txt:253
#, ignore-same, no-wrap, priority:260
msgid "'%GS'"
msgstr "'%GS'"

#. type: Plain text
#: en/pretty-formats.txt:254
#, priority:260
msgid "show the name of the signer for a signed commit"
msgstr "exibe o nome do assinante de um commit assinado"

#. type: Labeled list
#: en/pretty-formats.txt:254
#, ignore-same, no-wrap, priority:260
msgid "'%GK'"
msgstr "'%GK'"

#. type: Plain text
#: en/pretty-formats.txt:255
#, priority:260
msgid "show the key used to sign a signed commit"
msgstr "exibe a chave utilizada para assinar um commit assinado"

#. type: Labeled list
#: en/pretty-formats.txt:255
#, ignore-same, no-wrap, priority:260
msgid "'%GF'"
msgstr "'%GF'"

#. type: Plain text
#: en/pretty-formats.txt:256
#, priority:260
msgid "show the fingerprint of the key used to sign a signed commit"
msgstr "exiba a impressão digital da chave utilizada para assinar um commit já assinado"

#. type: Labeled list
#: en/pretty-formats.txt:256
#, ignore-same, no-wrap, priority:260
msgid "'%GP'"
msgstr "'%GP'"

#. type: Plain text
#: en/pretty-formats.txt:258
#, priority:260
msgid "show the fingerprint of the primary key whose subkey was used to sign a signed commit"
msgstr "exiba a impressão digital da chave primária cuja subchave foi utilizada para assinar um commit assinado"

#. type: Labeled list
#: en/pretty-formats.txt:258
#, ignore-same, no-wrap, priority:260
msgid "'%GT'"
msgstr "'%GT'"

#. type: Plain text
#: en/pretty-formats.txt:259
#, priority:260
msgid "show the trust level for the key used to sign a signed commit"
msgstr "exiba o nível de confiança da chave utilizada para assinar um commit assinado"

#. type: Labeled list
#: en/pretty-formats.txt:259
#, ignore-same, no-wrap, priority:260
msgid "'%gD'"
msgstr "'%gD'"

#. type: Plain text
#: en/pretty-formats.txt:264
#, priority:260
msgid "reflog selector, e.g., `refs/stash@{1}` or `refs/stash@{2 minutes ago}`; the format follows the rules described for the `-g` option. The portion before the `@` is the refname as given on the command line (so `git log -g refs/heads/master` would yield `refs/heads/master@{0}`)."
msgstr "seletor do reflog, como por exemplo, `refs/stash@{1}` or `refs/stash@{2 minutos atrás}`; o formato segue as regras descritas para a opção `-g`. A parte antes ao `@` é o \"refname\", conforme indicado na linha de comando (portanto, `git log -g refs/heads/master` produziria `refs/heads/master@{0}`)."

#. type: Labeled list
#: en/pretty-formats.txt:264
#, ignore-same, no-wrap, priority:260
msgid "'%gd'"
msgstr "'%gd'"

#. type: Plain text
#: en/pretty-formats.txt:267
#, priority:260
msgid "shortened reflog selector; same as `%gD`, but the refname portion is shortened for human readability (so `refs/heads/master` becomes just `master`)."
msgstr "o encurtamento do seletor do reflog; o mesmo que `%gD`, porém a parte do refname é reduzida visando a legibilidade humana (assim, o `refs/heads/master` se torna apenas `master`)."

#. type: Labeled list
#: en/pretty-formats.txt:267
#, ignore-same, no-wrap, priority:260
msgid "'%gn'"
msgstr "'%gn'"

#. type: Plain text
#: en/pretty-formats.txt:268
#, priority:260
msgid "reflog identity name"
msgstr "nome da identidade \"reflog\""

#. type: Labeled list
#: en/pretty-formats.txt:268
#, ignore-same, no-wrap, priority:260
msgid "'%gN'"
msgstr "'%gN'"

#. type: Plain text
#: en/pretty-formats.txt:270
#, priority:260
msgid "reflog identity name (respecting .mailmap, see linkgit:git-shortlog[1] or linkgit:git-blame[1])"
msgstr "nome da identidade do reflog (respeitando .mailmap, consulte linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#. type: Labeled list
#: en/pretty-formats.txt:270
#, ignore-same, no-wrap, priority:260
msgid "'%ge'"
msgstr "'%ge'"

#. type: Plain text
#: en/pretty-formats.txt:271
#, priority:260
msgid "reflog identity email"
msgstr "e-mail da identidade reflog"

#. type: Labeled list
#: en/pretty-formats.txt:271
#, ignore-same, no-wrap, priority:260
msgid "'%gE'"
msgstr "'%gE'"

#. type: Plain text
#: en/pretty-formats.txt:273
#, priority:260
msgid "reflog identity email (respecting .mailmap, see linkgit:git-shortlog[1] or linkgit:git-blame[1])"
msgstr "e-mail da identidade do reflog (respeitando .mailmap, consulte linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#. type: Labeled list
#: en/pretty-formats.txt:273
#, ignore-same, no-wrap, priority:260
msgid "'%gs'"
msgstr "'%gs'"

#. type: Plain text
#: en/pretty-formats.txt:274
#, priority:260
msgid "reflog subject"
msgstr "assunto reflog"

#. type: Labeled list
#: en/pretty-formats.txt:274
#, no-wrap, priority:260
msgid "'%(trailers[:options])'"
msgstr "'%(trailers[:options])'"

#. type: Plain text
#: en/pretty-formats.txt:281
#, priority:260
msgid "display the trailers of the body as interpreted by linkgit:git-interpret-trailers[1]. The `trailers` string may be followed by a colon and zero or more comma-separated options.  If any option is provided multiple times the last occurrence wins."
msgstr "exibe os trechos do corpo como interpretado através do linkgit:git-interpret-trailers[1]. Os trechos do texto da resposta podem ser seguidas por dois pontos, zero ou mais opções separadas por vírgula: Caso qualquer opção seja usada várias vezes, a última ocorrência ganha."

#. type: Plain text
#: en/pretty-formats.txt:290
#, priority:260
msgid "'key=<key>': only show trailers with specified <key>. Matching is done case-insensitively and trailing colon is optional. If option is given multiple times trailer lines matching any of the keys are shown. This option automatically enables the `only` option so that non-trailer lines in the trailer block are hidden. If that is not desired it can be disabled with `only=false`.  E.g., `%(trailers:key=Reviewed-by)` shows trailer lines with key `Reviewed-by`."
msgstr "'key=<chave>': exibe apenas os caracteres de resposta com as <chaves> que forem definidas. A combinação é feita sem distinção entre maiúsculas e minúsculas, os dois pontos à direita são opcionais. Caso a opção seja utilizada várias vezes, os atributos das linhas coincidentes a qualquer uma das teclas serão exibidas. Esta opção ativa automaticamente a opção `only`, para que as linhas de bloqueio não sejam ocultadas. Caso não seja o efeito desejado, pode ser desativado com a opção `only=false`.  Por exemplo, `%(trailers:key=Revisado-por)` exibe as linhas com caracteres de resposta com a chave `Revisado-por`."

#. type: Plain text
#: en/pretty-formats.txt:292
#, priority:260
msgid "'only[=<bool>]': select whether non-trailer lines from the trailer block should be included."
msgstr "'only[=<bool>]': selecione se as linhas não relacionadas à resposta a partir do bloco de resposta, devem ser incluídas ou não."

#. type: Plain text
#: en/pretty-formats.txt:300
#, priority:260
msgid "'separator=<sep>': specify a separator inserted between trailer lines. When this option is not given each trailer line is terminated with a line feed character. The string <sep> may contain the literal formatting codes described above. To use comma as separator one must use `%x2C` as it would otherwise be parsed as next option. E.g., `%(trailers:key=Ticket,separator=%x2C )` shows all trailer lines whose key is \"Ticket\" separated by a comma and a space."
msgstr "'separator=<sep>': defina um separador para ser inserido entre as linhas da resposta. Quando esta opção não é informada, cada linha de resposta é encerrada com um caractere de alimentação da linha. Uma string <sep> pode conter os códigos de formatação literal descritos acima. Para usar a vírgula como separador, deve-se usar `%x2C`, caso contrário, seria analisado como sendo a próxima opção. Por exemplo, `%(trailers:key=Ticket,separator=%x2C )` mostra todas as linhas de resposta cuja palavra principal seja \"Ticket\" separadas por uma vírgula e um espaço."

#. type: Plain text
#: en/pretty-formats.txt:303
#, priority:260
msgid "'unfold[=<bool>]': make it behave as if interpret-trailer's `--unfold` option was given. E.g., `%(trailers:only,unfold=true)` unfolds and shows all trailer lines."
msgstr "'unfold[=<bool>]': faça com que se comporte como se a opção `--unfold` do caracteres de resposta tenha sido passado. Por exemplo, `%(trailers:only,unfold=true)` desdobra e mostra todas as linhas de resposta."

#. type: Plain text
#: en/pretty-formats.txt:304
#, priority:260
msgid "'keyonly[=<bool>]': only show the key part of the trailer."
msgstr "'keyonly[=<bool>]': mostra apenas a parte principal da resposta."

#. type: Plain text
#: en/pretty-formats.txt:305
#, priority:260
msgid "'valueonly[=<bool>]': only show the value part of the trailer."
msgstr "'valueonly[=<bool>]': mostra apenas o valor da parte da resposta."

#. type: Plain text
#: en/pretty-formats.txt:309
#, priority:260
msgid "'key_value_separator=<sep>': specify a separator inserted between trailer lines. When this option is not given each trailer key-value pair is separated by \": \". Otherwise it shares the same semantics as 'separator=<sep>' above."
msgstr "'key_value_separator=<sep>': define um separador inserido entre as linhas de resposta. Quando esta opção não é informada, cada par dos valores da palavra principal da resposta é separado por \": \". Caso contrário, ele compartilha a mesma semântica de 'separator=<sep>' acima."

#. type: Plain text
#: en/pretty-formats.txt:316
#, priority:260
msgid "Some placeholders may depend on other options given to the revision traversal engine. For example, the `%g*` reflog options will insert an empty string unless we are traversing reflog entries (e.g., by `git log -g`). The `%d` and `%D` placeholders will use the \"short\" decoration format if `--decorate` was not already provided on the command line."
msgstr "Alguns espaços reservados podem depender das outras opções passadas para o motor percorrer a revisão. Por exemplo o opção `%g*` do reflog insere um espaço vazio a menos que estejamos percorrendo as entradas do reflog (exemplo, através do comando `git log -g`). Os espaços reservados `%d` e `%D` usarão o formato de decoração \"curta\" caso a opção `--decorate` já não esteja sendo utilizada na linha de comando."

#. type: Plain text
#: en/pretty-formats.txt:321
#, priority:260
msgid "The boolean options accept an optional value `[=<bool-value>]`. The values `true`, `false`, `on`, `off` etc. are all accepted. See the \"boolean\" sub-section in \"EXAMPLES\" in linkgit:git-config[1]. If a boolean option is given with no value, it's enabled."
msgstr "As opções booleanas aceitam um valor opcional `[=<bool>]`. Todos os valores `true`, `false`, `on`, `off` etc. são aceitos. Consulte a subseção \"booleana\" em \"EXEMPLOS\" em linkgit:git-config[1]. Caso uma opção booleana seja fornecida sem valor, ela será ativada."

#. type: Plain text
#: en/pretty-formats.txt:325
#, priority:260
msgid "If you add a `+` (plus sign) after '%' of a placeholder, a line-feed is inserted immediately before the expansion if and only if the placeholder expands to a non-empty string."
msgstr "Caso adicionemos um `+` (sinal de adição) após o '%' de um espaço reservado, um feed de linha será inserido imediatamente antes da expansão, se e somente se o espaço reservado se expandir para uma sequência de caracteres não vazio."

#. type: Plain text
#: en/pretty-formats.txt:329
#, priority:260
msgid "If you add a `-` (minus sign) after '%' of a placeholder, all consecutive line-feeds immediately preceding the expansion are deleted if and only if the placeholder expands to an empty string."
msgstr "Caso adicione um `-` (sinal de menos) após o '%' de um espaço reservado, imediatamente todos os feeds consecutivos das linhas anteriores à expansão serão excluídos caso e somente caso o espaço reservado se expanda para um texto vazio."

#. type: Plain text
#: en/pretty-formats.txt:333
#, priority:260
msgid "If you add a ` ` (space) after '%' of a placeholder, a space is inserted immediately before the expansion if and only if the placeholder expands to a non-empty string."
msgstr "Caso adicionemos um ` ` (espaço) após o '%' de um espaço reservado, um espaço será inserido imediatamente antes da expansão, se e somente se o espaço reservado se expandir para uma sequência de caracteres não vazios."

#. type: Plain text
#: en/pretty-formats.txt:335
#, priority:260
msgid "'tformat:'"
msgstr "'tformat:'"

#. type: Plain text
#: en/pretty-formats.txt:343
#, priority:260
msgid "The 'tformat:' format works exactly like 'format:', except that it provides \"terminator\" semantics instead of \"separator\" semantics. In other words, each commit has the message terminator character (usually a newline) appended, rather than a separator placed between entries.  This means that the final entry of a single-line format will be properly terminated with a new line, just as the \"oneline\" format does.  For example:"
msgstr "O formato 'tformat:' funciona exatamente como 'format:', exceto que ele provê a semântica \"terminator\" (terminador) em vez do \"separator\" (separador). Em outras palavras, cada commit tem o caractere terminador da mensagem (geralmente uma nova linha) adicionada em vez de um separador colocado entre as entradas.  Significa que o final de cada entrada do formato de uma linha única será terminada corretamente com uma nova linha, assim como o formato com uma linha faz (oneline).  Por exemplo:"

#. type: delimited block -
#: en/pretty-formats.txt:349
#, no-wrap, priority:260
msgid ""
"$ git log -2 --pretty=format:%h 4da45bef \\\n"
"  | perl -pe '$_ .= \" -- NO NEWLINE\\n\" unless /\\n/'\n"
"4da45be\n"
"7134973 -- NO NEWLINE\n"
msgstr ""
"$ git log -2 --pretty=format:%h 4da45bef \\\n"
"  | perl -pe '$_ .= \" -- NO NEWLINE\\n\" unless /\\n/'\n"
"4da45be\n"
"7134973 -- NO NEWLINE\n"

#. type: delimited block -
#: en/pretty-formats.txt:354
#, no-wrap, priority:260
msgid ""
"$ git log -2 --pretty=tformat:%h 4da45bef \\\n"
"  | perl -pe '$_ .= \" -- NO NEWLINE\\n\" unless /\\n/'\n"
"4da45be\n"
"7134973\n"
msgstr ""
"$ git log -2 --pretty=tformat:%h 4da45bef \\\n"
"  | perl -pe '$_ .= \" -- NO NEWLINE\\n\" unless /\\n/'\n"
"4da45be\n"
"7134973\n"

#. type: Plain text
#: en/pretty-formats.txt:359
#, priority:260
msgid "In addition, any unrecognized string that has a `%` in it is interpreted as if it has `tformat:` in front of it.  For example, these two are equivalent:"
msgstr "Além disso, qualquer string não reconhecida que tenha um `%` nela, é interpretada como se tivesse `tformat:` na frente.  Como por exemplo, estes dois são equivalentes:"

#. type: delimited block -
#: en/pretty-formats.txt:363
#, no-wrap, priority:260
msgid ""
"$ git log -2 --pretty=tformat:%h 4da45bef\n"
"$ git log -2 --pretty=%h 4da45bef\n"
msgstr ""
"$ git log -2 --pretty=tformat:%h 4da45bef\n"
"$ git log -2 --pretty=%h 4da45bef\n"

#. type: Labeled list
#: en/pretty-options.txt:1
#, no-wrap, priority:260
msgid "--pretty[=<format>]"
msgstr "--pretty[=<formato>]"

#. type: Plain text
#: en/pretty-options.txt:10
#, priority:260
msgid "Pretty-print the contents of the commit logs in a given format, where '<format>' can be one of 'oneline', 'short', 'medium', 'full', 'fuller', 'reference', 'email', 'raw', 'format:<string>' and 'tformat:<string>'.  When '<format>' is none of the above, and has '%placeholder' in it, it acts as if '--pretty=tformat:<format>' were given."
msgstr "Faça uma impressão bonita do conteúdo do registro log do commit em determinado formato, onde '<formato>' pode ser `oneline`, `short`, `medium`, `full`, `fuller`, `reference`, `email`, `raw`, `format:<texto>` e `tformat:<texto>`.  Quando '<formato>' não for nenhum dos itens acima e possua um `%placeholder`, ele age como se a opção `--pretty=tformat:<formato>' tenha sido utilizado."

#. type: Plain text
#: en/pretty-options.txt:13
#, priority:260
msgid "See the \"PRETTY FORMATS\" section for some additional details for each format.  When '=<format>' part is omitted, it defaults to 'medium'."
msgstr "Consulte a seção \"FORMATOS BONITOS\" para obter detalhes adicionais para cada formato.  Quando a parte do '=<formato>' é omitido a predefinição retorna para 'medium'."

#. type: Plain text
#: en/pretty-options.txt:16
#, priority:260
msgid "Note: you can specify the default pretty format in the repository configuration (see linkgit:git-config[1])."
msgstr "Nota: você pode especificar o formato \"pretty\" padrão na configuração do repositório (consulte linkgit:git-config[1])."

#. type: Labeled list
#: en/pretty-options.txt:17
#, ignore-same, no-wrap, priority:260
msgid "--abbrev-commit"
msgstr "--abbrev-commit"

#. type: Plain text
#: en/pretty-options.txt:22
#, priority:260
msgid "Instead of showing the full 40-byte hexadecimal commit object name, show a prefix that names the object uniquely.  \"--abbrev=<n>\" (which also modifies diff output, if it is displayed)  option can be used to specify the minimum length of the prefix."
msgstr "Em vez de exibir todos os 40 bytes hexadecimais do nome do objeto commit, exiba um prefixo que nomeie o objeto de forma única. \"--abbrev=<n>\" (que também altera o diff gerado, caso seja exibido) a opção pode ser usada para definir o tamanho mínimo do prefixo."

#. type: Plain text
#: en/pretty-options.txt:25
#, priority:260
msgid "This should make \"--pretty=oneline\" a whole lot more readable for people using 80-column terminals."
msgstr "Isso deve tornar `--pretty=oneline` muito mais legível para pessoas que usam terminais com 80 colunas."

#. type: Labeled list
#: en/pretty-options.txt:26
#, ignore-same, no-wrap, priority:260
msgid "--no-abbrev-commit"
msgstr "--no-abbrev-commit"

#. type: Plain text
#: en/pretty-options.txt:30
#, priority:260
msgid "Show the full 40-byte hexadecimal commit object name. This negates `--abbrev-commit`, either explicit or implied by other options such as \"--oneline\". It also overrides the `log.abbrevCommit` variable."
msgstr "Exibe o nome do objeto commit completo com 40 bytes hexadecimais. Isso nega o a opção `--abbrev-commit`, de forma explícita ou implícita pelas outras opções como \"--oneline\". Ele também substitui a variável `log.abbrevCommit`."

#. type: Plain text
#: en/pretty-options.txt:34
#, priority:260
msgid "This is a shorthand for \"--pretty=oneline --abbrev-commit\" used together."
msgstr "Este é um atalho para \"--pretty=oneline --abbrev-commit\" ser utilizado junto."

#. type: Plain text
#: en/pretty-options.txt:46
#, priority:260
msgid "Commit objects record the character encoding used for the log message in their encoding header; this option can be used to tell the command to re-code the commit log message in the encoding preferred by the user.  For non plumbing commands this defaults to UTF-8. Note that if an object claims to be encoded in `X` and we are outputting in `X`, we will output the object verbatim; this means that invalid sequences in the original commit may be copied to the output. Likewise, if iconv(3) fails to convert the commit, we will quietly output the original object verbatim."
msgstr "Os objetos commit registram a codificação dos caracteres utilizada para a mensagem do registro log em seu cabeçalho de codificação; esta opção pode ser usada para informar ao comando para novamente codificar a mensagem do registro log do commit na codificação preferida pelo usuário.  Para os comandos não redirecionáveis, a predefinição retorna para UTF-8. Observe que caso um objeto afirma ser codificado com `X` e estamos gerando em` X`, o objeto será gerado de forma literal; isso significa que as sequências inválidas no commit original podem ser copiadas para a saída. Da mesma forma, se o iconv(3) falhar na conversão do commit, nós emitiremos o objeto original em modo silencioso, literalmente."

#. type: Labeled list
#: en/pretty-options.txt:47
#, no-wrap, priority:260
msgid "--expand-tabs=<n>"
msgstr "--expand-tabs=<n>"

#. type: Labeled list
#: en/pretty-options.txt:48
#, ignore-same, no-wrap, priority:260
msgid "--expand-tabs"
msgstr "--expand-tabs"

#. type: Labeled list
#: en/pretty-options.txt:49
#, ignore-same, no-wrap, priority:260
msgid "--no-expand-tabs"
msgstr "--no-expand-tabs"

#. type: Plain text
#: en/pretty-options.txt:56
#, priority:260
msgid "Perform a tab expansion (replace each tab with enough spaces to fill to the next display column that is multiple of '<n>')  in the log message before showing it in the output.  `--expand-tabs` is a short-hand for `--expand-tabs=8`, and `--no-expand-tabs` is a short-hand for `--expand-tabs=0`, which disables tab expansion."
msgstr "Execute uma expansão de guia (substitua cada guia por espaços suficientes para preencher a próxima coluna da exibição que é o múltiplo de '<n>') na mensagem do registro log antes de exibi-la na saída.  A opção `--expand-tabs` é uma abreviação da opção `--expand-tabs=8`,  a opção `--no-expand-tabs` é uma abreviação da opção `--expand-tabs=0`, que desativa a expansão da guia."

#. type: Plain text
#: en/pretty-options.txt:60
#, priority:260
msgid "By default, tabs are expanded in pretty formats that indent the log message by 4 spaces (i.e.  'medium', which is the default, 'full', and 'fuller')."
msgstr "A predefinição é que as guias sejam expandidas em belos formatos que recuam a mensagem do registro log em 4 espaços (ou seja,  'medium', a predefinição, 'full' e 'fuller')."

#. type: Plain text
#: en/pretty-options.txt:68
#, priority:260
msgid "Show the notes (see linkgit:git-notes[1]) that annotate the commit, when showing the commit log message.  This is the default for `git log`, `git show` and `git whatchanged` commands when there is no `--pretty`, `--format`, or `--oneline` option given on the command line."
msgstr "Exiba as anotações (consulte linkgit:git-notes[1]) que acompanham o commit durante a exibição da mensagem do registro log do commit.  Este é a predefinição para os comandos `git log`, `git show` e `git whatchanged` quando não haja nenhuma opção `--pretty`, `--format` ou `--oneline` utilizada na linha de comando."

#. type: Plain text
#: en/pretty-options.txt:72
#, priority:260
msgid "By default, the notes shown are from the notes refs listed in the `core.notesRef` and `notes.displayRef` variables (or corresponding environment overrides). See linkgit:git-config[1] for more details."
msgstr "É predefinido que as anotações exibidas são das anotações refs listadas nas variáveis `core.notesRef` e `notes.displayRef` (ou substituições correspondentes do ambiente). Para mais detalhes consulte linkgit:git-config[1]."

#. type: Plain text
#: en/pretty-options.txt:77
#, priority:260
msgid "With an optional '<ref>' argument, use the ref to find the notes to display.  The ref can specify the full refname when it begins with `refs/notes/`; when it begins with `notes/`, `refs/` and otherwise `refs/notes/` is prefixed to form a full name of the ref."
msgstr "Com um argumento opcional '<ref>', usa a \"ref\" para encontrar as notas que serão exibidas.  A \"ref\" pode definir o nome completo da \"ref\" quando começar com `refs/notes/`; quando começa com `notes/`, `refs/` e caso contrário `refs/notes/` é prefixado para formar um nome completo da \"ref\"."

#. type: Plain text
#: en/pretty-options.txt:82
#, priority:260
msgid "Multiple --notes options can be combined to control which notes are being displayed. Examples: \"--notes=foo\" will show only notes from \"refs/notes/foo\"; \"--notes=foo --notes\" will show both notes from \"refs/notes/foo\" and from the default notes ref(s)."
msgstr "Várias opções `--notes` podem ser combinadas para controlar quais as notas estão sendo exibidas. Exemplos: `--notes=foo` mostrará apenas as notas vindas de \"refs/notes/foo\"; `--notes=foo --notes` mostrará as notas vindas de \"refs/notes/foo\" e das notas ref(s) predefinidas."

#. type: Plain text
#: en/pretty-options.txt:89
#, priority:260
msgid "Do not show notes. This negates the above `--notes` option, by resetting the list of notes refs from which notes are shown.  Options are parsed in the order given on the command line, so e.g.  \"--notes --notes=foo --no-notes --notes=bar\" will only show notes from \"refs/notes/bar\"."
msgstr "Não exiba as anotações. Isso nega a opção `--notes` acima, redefinindo a lista das anotações das 'refs' a partir de onde as notas são exibidas.  As opções são analisadas na ordem informada na linha de comando, portanto, \"--notes --notes=foo --no-notes --notes=bar\" exibirá apenas as anotações das \"refs/notes/bar\" por exemplo."

#. type: Labeled list
#: en/pretty-options.txt:90
#, no-wrap, priority:260
msgid "--show-notes[=<ref>]"
msgstr "--show-notes[=<ref>]"

#. type: Labeled list
#: en/pretty-options.txt:91
#, ignore-same, no-wrap, priority:260
msgid "--[no-]standard-notes"
msgstr "--[no-]standard-notes"

#. type: Plain text
#: en/pretty-options.txt:94
#, priority:260
msgid "These options are deprecated. Use the above --notes/--no-notes options instead."
msgstr "Essas opções estão obsoletas. Em vez disso, utilize as opções --notes/--no-notes acima."

#. type: Labeled list
#: en/pretty-options.txt:96
#, ignore-same, no-wrap, priority:260
msgid "--show-signature"
msgstr "--show-signature"

#. type: Plain text
#: en/pretty-options.txt:98
#, priority:260
msgid "Check the validity of a signed commit object by passing the signature to `gpg --verify` and show the output."
msgstr "Verifique a validade de um objeto commit assinado, passando a assinatura para `gpg --verify` e exibe a sua saída."

#. type: Plain text
#: en/pull-fetch-param.txt:6
#, priority:220
msgid "The \"remote\" repository that is the source of a fetch or pull operation.  This parameter can be either a URL (see the section <<URLS,GIT URLS>> below) or the name of a remote (see the section <<REMOTES,REMOTES>> below)."
msgstr "The \"remote\" repository that is the source of a fetch or pull operation.  Este parâmetro pode ser uma URL (consulte a seção <<URLS, GIT URLS>> abaixo) ou o nome de um ramo remoto (consulte a seção <<REMOTES, REMOTES>> abaixo)."

#. type: Labeled list
#: en/pull-fetch-param.txt:8
#, no-wrap, priority:220
msgid "<group>"
msgstr "<grupo>"

#. type: Plain text
#: en/pull-fetch-param.txt:12
#, priority:220
msgid "A name referring to a list of repositories as the value of remotes.<group> in the configuration file.  (See linkgit:git-config[1])."
msgstr "Um nome referente para a lista de repositórios como o valor no arquivo da configuração `remotes.<grupo>`.  (Consulte linkgit:git-config[1])."

#. type: Labeled list
#: en/pull-fetch-param.txt:14
#, no-wrap, priority:220
msgid "<refspec>"
msgstr "<refspec>"

#. type: Plain text
#: en/pull-fetch-param.txt:18
#, priority:220
msgid "Specifies which refs to fetch and which local refs to update.  When no <refspec>s appear on the command line, the refs to fetch are read from `remote.<repository>.fetch` variables instead"
msgstr "Determina quais as refs capturar e quais as refs locais atualizar.  Quando nenhum `<refspec>` aparece na linha de comando, em vez disso, os refs que serão capturados são lidos a partir das variáveis `remote.<repositório>.fetch`"

#. type: Plain text
#: en/pull-fetch-param.txt:20
#, no-wrap, priority:220
msgid "\t(see <<CRTB,CONFIGURED REMOTE-TRACKING BRANCHES>> below).\n"
msgstr "\t(consulte <<CRTB,CONFIGURAÇÕES DOS RAMOS MONITORADOS REMOTAMENTE>> below).\n"

#. type: Plain text
#: en/pull-fetch-param.txt:24
#, no-wrap, priority:220
msgid ""
"\t(see the section \"CONFIGURED REMOTE-TRACKING BRANCHES\"\n"
"\tin linkgit:git-fetch[1]).\n"
msgstr ""
"\t(consulte a seção \"CONFIGURAÇÕES DOS RAMOS MONITORADOS REMOTAMENTE\"\n"
"\tin linkgit:git-fetch[1]).\n"

#. type: Plain text
#: en/pull-fetch-param.txt:32
#, priority:220
msgid "The format of a <refspec> parameter is an optional plus `+`, followed by the source <src>, followed by a colon `:`, followed by the destination ref <dst>.  The colon can be omitted when <dst> is empty.  <src> is typically a ref, but it can also be a fully spelled hex object name."
msgstr "O formato de um parâmetro `<refspec>` é um opcional mais `+`, seguido pela fonte `<src>`, seguido por dois pontos `:`, seguido pelo destino \"ref\" `<dst>`.  Os dois pontos podem ser omitidos quando o destino `<dst>` estiver vazio.  A fonte `<src>` normalmente é uma referência, mas também pode ser um nome de objeto escrito totalmente em hexadecimal."

#. type: Plain text
#: en/pull-fetch-param.txt:38
#, priority:220
msgid "A <refspec> may contain a `*` in its <src> to indicate a simple pattern match. Such a refspec functions like a glob that matches any ref with the same prefix. A pattern <refspec> must have a `*` in both the <src> and <dst>. It will map refs to the destination by replacing the `*` with the contents matched from the source."
msgstr "Uma <refspec> pode conter um `*` na sua origem <src> para indicar uma simples combinação de padrões. Tal \"refspec\" funciona como um \"glob\" que combina com qualquer ref de mesmo prefixo. Um padrão <refspec> deve conter um `*` tanto origem <src> quanto no destino <dst>. Ele irá mapear os reffs para o destino substituindo o `*` pelo conteúdo correspondente da fonte."

#. type: Plain text
#: en/pull-fetch-param.txt:48
#, priority:220
msgid "If a refspec is prefixed by `^`, it will be interpreted as a negative refspec. Rather than specifying which refs to fetch or which local refs to update, such a refspec will instead specify refs to exclude. A ref will be considered to match if it matches at least one positive refspec, and does not match any negative refspec. Negative refspecs can be useful to restrict the scope of a pattern refspec so that it will not include specific refs.  Negative refspecs can themselves be pattern refspecs. However, they may only contain a <src> and do not specify a <dst>. Fully spelled out hex object names are also not supported."
msgstr "Caso uma refspec seja prefixada através do `^`, ela será interpretada como uma refspec negativa. Em vez de especificar quais as refs devem ser buscadas ou quais as refs locais devem ser atualizadas, tal refspec irá especificar as refs que serão excluídas. Uma ref será considerada compatível caso coincida com pelo menos uma ref positiva e não corresponda com nenhum ref negativo. Os refspecs negativos podem ser úteis para restringir o escopo padrão de um refspec para que ele não inclua determinados refspecs.  Os refspecs negativos podem ser padrões refspecs de si mesmo. Entretanto, eles podem conter apenas uma fonte <src> e não especificam um destino <dst>. Os nomes dos objetos em hexadecimais também não são suportados."

#. type: Plain text
#: en/pull-fetch-param.txt:51
#, priority:220
msgid "`tag <tag>` means the same as `refs/tags/<tag>:refs/tags/<tag>`; it requests fetching everything up to the given tag."
msgstr "A `tag` significa o mesmo que `refs/tags/<tag>:refs/tags/<tag>`; ele solicita a buscaa de tudo até a tag informada."

#. type: Plain text
#: en/pull-fetch-param.txt:55
#, priority:220
msgid "The remote ref that matches <src> is fetched, and if <dst> is not an empty string, an attempt is made to update the local ref that matches it."
msgstr "A \"ref\" remota que coincida com <src> é buscada e se <dst> não seja uma sequência vazia, é feita uma tentativa de atualizar a referência local que coincida com ela."

#. type: Plain text
#: en/pull-fetch-param.txt:62
#, ignore-ellipsis, priority:220
msgid "Whether that update is allowed without `--force` depends on the ref namespace it's being fetched to, the type of object being fetched, and whether the update is considered to be a fast-forward. Generally, the same rules apply for fetching as when pushing, see the `<refspec>...` section of linkgit:git-push[1] for what those are. Exceptions to those rules particular to 'git fetch' are noted below."
msgstr "Caso a atualização seja permitida sem a opção `--force` depende do espaço de nomes da ref onde está sendo buscada, do tipo do objeto que está sendo buscado e se a atualização é considerada um avanço rápido. Geralmente, as mesmas regras se aplicam à busca e ao impulsionar, consulte a seção `<refspec>...` do linkgit:git-push[1] para saber o que são. As exceções para estas regras específicas para o comando 'git fetch' são anotadas abaixo."

#. type: Plain text
#: en/pull-fetch-param.txt:70
#, priority:220
msgid "Until Git version 2.20, and unlike when pushing with linkgit:git-push[1], any updates to `refs/tags/*` would be accepted without `+` in the refspec (or `--force`). When fetching, we promiscuously considered all tag updates from a remote to be forced fetches.  Since Git version 2.20, fetching to update `refs/tags/*` works the same way as when pushing. I.e. any updates will be rejected without `+` in the refspec (or `--force`)."
msgstr "Até a versão 2.20 do Git, e diferentemente do envio com linkgit:git-push[1], qualquer atualização para `refs/tags/*` seria aceita sem o sinal `+` no refspec (ou `--force`). Ao buscar, consideramos promiscuamente todas as atualizações das tags de um ramo remoto como buscas impostas.  Desde a versão 2.20 Git, buscar a atualização `refs/tags/*` funciona da mesma maneira que quando fazer um impulsionamento. Ou seja, todas as atualizações serão rejeitadas sem o sinal `+` no refspec (ou `--force`)."

#. type: Plain text
#: en/pull-fetch-param.txt:76
#, priority:220
msgid "Unlike when pushing with linkgit:git-push[1], any updates outside of `refs/{tags,heads}/*` will be accepted without `+` in the refspec (or `--force`), whether that's swapping e.g. a tree object for a blob, or a commit for another commit that's doesn't have the previous commit as an ancestor etc."
msgstr "Ao contrário quando impulsionamos com o linkgit:git-push[1], qualquer atualização fora do `refs/{tags,heads}/*` será aceito sem o sinal `+` no refspec (ou `--force`), seja trocando, por exemplo, um objeto de árvore para uma bolha ou um commit para outro commit que não tenha o commit anterior como ancestral, etc."

#. type: Plain text
#: en/pull-fetch-param.txt:80
#, priority:220
msgid "Unlike when pushing with linkgit:git-push[1], there is no configuration which'll amend these rules, and nothing like a `pre-fetch` hook analogous to the `pre-receive` hook."
msgstr "Ao contrário quando impulsionamos com o linkgit:git-push[1], não existe uma configuração que corrija estas regras, e nada como um gancho `pre-fetch` análogo ao gancho `pre-receive`."

#. type: Plain text
#: en/pull-fetch-param.txt:87
#, priority:220
msgid "As with pushing with linkgit:git-push[1], all of the rules described above about what's not allowed as an update can be overridden by adding an the optional leading `+` to a refspec (or using `--force` command line option). The only exception to this is that no amount of forcing will make the `refs/heads/*` namespace accept a non-commit object."
msgstr "Assim como impulsionar com linkgit:git-push[1], todas as regras descritas acima sobre o que não é permitido como uma atualização pode ser sobrescrito ao adicionar um caractere opcional no \"refspec\" começando com `+` (ou utilizando a opção `--force` na linha de comando). A única exceção a isso é que nenhuma quantidade de imposição fará com que o espaço de nomes `refs/heads/*` aceite um objeto que não seja um commit."

#. type: Plain text
#: en/pull-fetch-param.txt:99
#, priority:220
msgid "When the remote branch you want to fetch is known to be rewound and rebased regularly, it is expected that its new tip will not be descendant of its previous tip (as stored in your remote-tracking branch the last time you fetched).  You would want to use the `+` sign to indicate non-fast-forward updates will be needed for such branches.  There is no way to determine or declare that a branch will be made available in a repository with this behavior; the pulling user simply must know this is the expected usage pattern for a branch."
msgstr "Quando se sabe que o ramo remoto que você quer buscar é retrocedida e reconstruída regularmente, espera-se que o novo topo não seja descendente do topo anterior (conforme foi armazenada no ramo monitorado remotamente da última vez que você fez a busca).  Você vai querer usar o sinal `+` para indicar que serão necessárias atualizações não rápidas para estas ramificações.  Não há como determinar ou declarar que uma ramificação será disponibilizada em um repositório com este comportamento; o usuário que está capturando simplesmente deve saber que esse é o padrão de uso esperado para um ramo."

#. type: Plain text
#: en/pull-fetch-param.txt:119
#, priority:220
msgid "There is a difference between listing multiple <refspec> directly on 'git pull' command line and having multiple `remote.<repository>.fetch` entries in your configuration for a <repository> and running a 'git pull' command without any explicit <refspec> parameters.  <refspec>s listed explicitly on the command line are always merged into the current branch after fetching.  In other words, if you list more than one remote ref, 'git pull' will create an Octopus merge.  On the other hand, if you do not list any explicit <refspec> parameter on the command line, 'git pull' will fetch all the <refspec>s it finds in the `remote.<repository>.fetch` configuration and merge only the first <refspec> found into the current branch.  This is because making an Octopus from remote refs is rarely done, while keeping track of multiple remote heads in one-go by fetching more than one is often useful."
msgstr "Há uma diferença entre listar múltiplos <refspec> diretamente na linha de comando com 'git pull' e ter várias entradas `remote.<repositório>.fetch` na sua configuração para um <repositório> e executar um comando com 'git pull' sem qualquer parâmetros explícitos <refspec>.  Os <refspec>s listados explicitamente na linha de comando são sempre mesclado no ramo atual após a busca.  Em outras palavras, caso você liste mais de uma \"ref\" remota, o comando 'git pull' criará uma mesclagem \"Octopus\" (Polvo).  Por outro lado, caso você não liste nenhum parâmetro <refspec> de forma explícita na linha de comando, o comando 'git pull' buscará tudo o que encontrar na configuração `remote.<repositório>.fetch` e mesclará apenas o primeiro que for encontrado no ramo atual.  Isso ocorre porque raramente é feito a criação de um \"polvo\" a partir das refs remotas, enquanto monitora os vários cabeçalhos remotos de uma só, isso geralmente é bastante útil."

#. type: Plain text
#: en/ref-reachability-filters.txt:4
#, priority:260
msgid "When combining multiple `--contains` and `--no-contains` filters, only references that contain at least one of the `--contains` commits and contain none of the `--no-contains` commits are shown."
msgstr "Ao combinar diversos filtros a opção `--contains` e a opção `--no-contains`, faz referências apenas aos que contenha pelo menos um dos commits `--contains` e não contenha nenhum dos commits mostrados com `--no-contains`."

#. type: Plain text
#: en/ref-reachability-filters.txt:7
#, priority:260
msgid "When combining multiple `--merged` and `--no-merged` filters, only references that are reachable from at least one of the `--merged` commits and from none of the `--no-merged` commits are shown."
msgstr "Ao combinar diversos filtros a opção `--merged` e a opção `--no-merged`, faz referências apenas aos que sejam acessíveis a partir um dos commits `--merged` e de nenhum dos commits mostrados com `--no-merged`."

#. type: Title -
#: en/revisions.txt:2
#, no-wrap, priority:100
msgid "SPECIFYING REVISIONS"
msgstr "DEFININDO AS REVISÕES"

#. type: Plain text
#: en/revisions.txt:9
#, priority:100
msgid "A revision parameter '<rev>' typically, but not necessarily, names a commit object.  It uses what is called an 'extended SHA-1' syntax.  Here are various ways to spell object names.  The ones listed near the end of this list name trees and blobs contained in a commit."
msgstr "Um parâmetro de revisão '<rev>' normalmente, mas não necessariamente, dá nome a um objeto commit.  Utiliza o que é chamado de uma sintaxe 'extended SHA-1'.  Aqui estão as várias maneiras de soletrar os nomes dos objetos.  Os listados próximos do final desta lista informam árvores e as bolhas existentes em um commit."

#. type: Plain text
#: en/revisions.txt:13
#, priority:100
msgid "This document shows the \"raw\" syntax as seen by git. The shell and other UIs might require additional quoting to protect special characters and to avoid word splitting."
msgstr "Este documento demonstra a sintaxe \"bruta\" como vista pelo git. O shell e outras UIs podem exigir citações adicionais para proteger os caracteres especiais e evitar a divisão de palavras."

#. type: Labeled list
#: en/revisions.txt:14
#, no-wrap, priority:100
msgid "'<sha1>', e.g. 'dae86e1950b1277e545cee180551750029cfe735', 'dae86e'"
msgstr "'<sha1>', exemplo. 'dae86e1950b1277e545cee180551750029cfe735', 'dae86e'"

#. type: Plain text
#: en/revisions.txt:20
#, priority:100
msgid "The full SHA-1 object name (40-byte hexadecimal string), or a leading substring that is unique within the repository.  E.g. dae86e1950b1277e545cee180551750029cfe735 and dae86e both name the same commit object if there is no other object in your repository whose object name starts with dae86e."
msgstr "O nome completo do objeto SHA-1 (a sequência hexadecimal com 40-bytes) ou uma carreira de caracteres que é exclusiva e única no repositório.  Por exemplo, dae86e1950b1277e545cee180551750029cfe735 e dae86e informam o mesmo objeto commit caso não haja um outro objeto em seu repositório cujo nome comece com daee."

#. type: Labeled list
#: en/revisions.txt:21
#, no-wrap, priority:100
msgid "'<describeOutput>', e.g. 'v1.7.4.2-679-g3bee7fb'"
msgstr "'<describeOutput>', exemplo. 'v1.7.4.2-679-g3bee7fb'"

#. type: Plain text
#: en/revisions.txt:25
#, priority:100
msgid "Output from `git describe`; i.e. a closest tag, optionally followed by a dash and a number of commits, followed by a dash, a 'g', and an abbreviated object name."
msgstr "A saída do `git describe`; ou seja, um tag mais próximo opcionalmente seguido por um traço e um número do commit seguido por um traço, um 'g' e um nome abreviado do objeto."

#. type: Labeled list
#: en/revisions.txt:26
#, no-wrap, priority:100
msgid "'<refname>', e.g. 'master', 'heads/master', 'refs/heads/master'"
msgstr "'<refname>', exemplo. 'master', 'heads/master', 'refs/heads/master'"

#. type: Plain text
#: en/revisions.txt:33
#, priority:100
msgid "A symbolic ref name.  E.g. 'master' typically means the commit object referenced by 'refs/heads/master'.  If you happen to have both 'heads/master' and 'tags/master', you can explicitly say 'heads/master' to tell Git which one you mean.  When ambiguous, a '<refname>' is disambiguated by taking the first match in the following rules:"
msgstr "Um nome simbólico `ref`.  'master' por exemplo, significa que o objeto de commit tem referência com 'refs/heads/master'.  Caso aconteça de haver ambos os 'heads/master' ou 'tags/master', você pode explicitamente usar 'heads/master' para informar o Git qual deles quer.  Quando ambíguo, um '<refname>' que desperte dúvidas é interpretado através da primeira coincidência de acordo com as seguintes regras:"

#. type: Plain text
#: en/revisions.txt:37
#, priority:100
msgid "If '$GIT_DIR/<refname>' exists, that is what you mean (this is usually useful only for `HEAD`, `FETCH_HEAD`, `ORIG_HEAD`, `MERGE_HEAD` and `CHERRY_PICK_HEAD`);"
msgstr "Caso '$GIT_DIR/<refname>' exista, quando é isso o que você quer dizer (geralmente é apenas útil para `HEAD`, `FETCH_HEAD`, `ORIG_HEAD`, `MERGE_HEAD` e `CHERRY_PICK_HEAD`);"

#. type: Plain text
#: en/revisions.txt:39
#, priority:100
msgid "otherwise, 'refs/<refname>' if it exists;"
msgstr "caso contrário, utilize 'refs/<refname>' caso exista;"

#. type: Plain text
#: en/revisions.txt:41
#, priority:100
msgid "otherwise, 'refs/tags/<refname>' if it exists;"
msgstr "caso contrário, utilize 'refs/tags/<refname>' caso exista;"

#. type: Plain text
#: en/revisions.txt:43
#, priority:100
msgid "otherwise, 'refs/heads/<refname>' if it exists;"
msgstr "caso contrário, utilize 'refs/heads/<refname>' caso exista;"

#. type: Plain text
#: en/revisions.txt:45
#, priority:100
msgid "otherwise, 'refs/remotes/<refname>' if it exists;"
msgstr "caso contrário, utilize 'refs/remotes/<refname>' caso exista;"

#. type: Plain text
#: en/revisions.txt:47
#, priority:100
msgid "otherwise, 'refs/remotes/<refname>/HEAD' if it exists."
msgstr "caso contrário, utilize 'refs/remotes/<refname>/HEAD' caso exista."

#. type: Plain text
#: en/revisions.txt:59
#, priority:100
msgid "`HEAD` names the commit on which you based the changes in the working tree.  `FETCH_HEAD` records the branch which you fetched from a remote repository with your last `git fetch` invocation.  `ORIG_HEAD` is created by commands that move your `HEAD` in a drastic way, to record the position of the `HEAD` before their operation, so that you can easily change the tip of the branch back to the state before you ran them.  `MERGE_HEAD` records the commit(s) which you are merging into your branch when you run `git merge`.  `CHERRY_PICK_HEAD` records the commit which you are cherry-picking when you run `git cherry-pick`."
msgstr "`HEAD` informa o commit no qual você teve como base as alterações na árvore de trabalho.  `FETCH_HEAD` registra em qual ramo você buscou no repositório remoto com a sua última invocação `git fetch`.  `ORIG_HEAD` é criado por comandos que movem seu` HEAD` de uma maneira drástica, para registrar a posição do `HEAD` antes da sua operação, para que você possa facilmente mudar a ponta do ramo de volta ao estado anterior a sua execução.  `MERGE_HEAD` registra os commits que você está mesclando no seu ramo quando você executa o comando `git merge`.  `CHERRY_PICK_HEAD` registra o commit que você está escolhendo quando executa o comando `git cherry-pick`."

#. type: Plain text
#: en/revisions.txt:64
#, priority:100
msgid "Note that any of the 'refs/*' cases above may come either from the `$GIT_DIR/refs` directory or from the `$GIT_DIR/packed-refs` file.  While the ref name encoding is unspecified, UTF-8 is preferred as some output processing may assume ref names in UTF-8."
msgstr "Observe que em qualquer um dos casos o 'refs/*' acima pode vir do diretório `$GIT_DIR/refs` ou do arquivo`$GIT_DIR/packed-refs`.  Embora a codificação do nome de referência não seja especificado, o UTF-8 é o predefinido pois algum processamento de saída pode assumir nomes `ref` em UTF-8."

#. type: Labeled list
#: en/revisions.txt:65
#, no-wrap, priority:100
msgid "'@'"
msgstr "'@'"

#. type: Plain text
#: en/revisions.txt:67
#, priority:100
msgid "'@' alone is a shortcut for `HEAD`."
msgstr "O '@' sozinho é um atalho para `HEAD`."

#. type: Labeled list
#: en/revisions.txt:68
#, no-wrap, priority:100
msgid "'[<refname>]@{<date>}', e.g. 'master@\\{yesterday\\}', 'HEAD@{5 minutes ago}'"
msgstr "'[<refname>]@{<data>}', exemplo. 'master@\\{yesterday\\}', 'HEAD@{5 minutos atrás}'"

#. type: Plain text
#: en/revisions.txt:79
#, priority:100
msgid "A ref followed by the suffix '@' with a date specification enclosed in a brace pair (e.g. '\\{yesterday\\}', '{1 month 2 weeks 3 days 1 hour 1 second ago}' or '{1979-02-26 18:30:00}') specifies the value of the ref at a prior point in time.  This suffix may only be used immediately following a ref name and the ref must have an existing log ('$GIT_DIR/logs/<ref>'). Note that this looks up the state of your *local* ref at a given time; e.g., what was in your local 'master' branch last week. If you want to look at commits made during certain times, see `--since` and `--until`."
msgstr "Uma \"ref\" seguida por um sufixo '@' com uma especificação ordinal incluída em um par de chaves (exemplo. '\\{ontem\\}', '{1 mês 2 semanas 3 dias 1 hora 1 segundo atrás}' ou '{1979-02-26 18:30:00}') determina o valor da \"ref\" em um momento anterior.  Esse sufixo pode ser utilizado imediatamente após um nome \"ref\" e a \"ref\" deve ter um registro log que já exista ('$GIT_DIR/logs/<ref>'). Observe que em um determinado momento a condição geral da sua \"ref\" *local* será consultada ; o que estava no seu ramo 'master' na semana passada por exemplo. Caso queira ver quais os commits foram feitos durante determinados períodos de tempo, consulte `--since` e `--until`."

#. type: Labeled list
#: en/revisions.txt:80
#, no-wrap, priority:100
msgid "'<refname>@{<n>}', e.g. 'master@\\{1\\}'"
msgstr "'<refname>@{<n>}', e.g. 'master@\\{1\\}'"

#. type: Plain text
#: en/revisions.txt:88
#, priority:100
msgid "A ref followed by the suffix '@' with an ordinal specification enclosed in a brace pair (e.g. '\\{1\\}', '\\{15\\}') specifies the n-th prior value of that ref.  For example 'master@\\{1\\}' is the immediate prior value of 'master' while 'master@\\{5\\}' is the 5th prior value of 'master'. This suffix may only be used immediately following a ref name and the ref must have an existing log ('$GIT_DIR/logs/<refname>')."
msgstr "Uma \"ref\" seguida pelo sufixo '@' com uma especificação ordinal incluída em um par de chaves (exemplo, '\\{1\\}', '\\{15\\}') especifica o enésimo valor anterior desta \"ref\".  Por exemplo, 'master@\\{1\\}' é o valor anterior imediato de 'master', enquanto 'master@\\{5\\}' é o quinto valor anterior do 'master'. Este sufixo poderá ser utilizado imediatamente após um nome \"ref\" e o mesmo deve ter um registro log já existente em ('$GIT_DIR/logs/<refname>')."

#. type: Labeled list
#: en/revisions.txt:89
#, no-wrap, priority:100
msgid "'@{<n>}', e.g. '@\\{1\\}'"
msgstr "'@{<n>}', exemplo. '@\\{1\\}'"

#. type: Plain text
#: en/revisions.txt:93
#, priority:100
msgid "You can use the '@' construct with an empty ref part to get at a reflog entry of the current branch. For example, if you are on branch 'blabla' then '@\\{1\\}' means the same as 'blabla@\\{1\\}'."
msgstr "Você pode usar a construção '@' com um `ref` vazio para obter uma entrada `reflog` do ramo atual. Por exemplo, caso esteja no ramo 'blabla' então '@\\{1\\}' significa o mesmo que 'blabla@\\{1\\}'."

#. type: Labeled list
#: en/revisions.txt:94
#, no-wrap, priority:100
msgid "'@{-<n>}', e.g. '@{-1}'"
msgstr "'@{-<n>}', exemplo, '@{-1}'"

#. type: Plain text
#: en/revisions.txt:97
#, priority:100
msgid "The construct '@{-<n>}' means the <n>th branch/commit checked out before the current one."
msgstr "O construtor '@{-<n>}' significa que <n> do ramo/commit foi verificado antes da atual."

#. type: Labeled list
#: en/revisions.txt:98
#, no-wrap, priority:100
msgid "'[<branchname>]@\\{upstream\\}', e.g. 'master@\\{upstream\\}', '@\\{u\\}'"
msgstr "'[<nome-do-ramo>]@\\{upstream\\}', exemplo, 'master@\\{upstream\\}', '@\\{u\\}'"

#. type: Plain text
#: en/revisions.txt:103
#, priority:100
msgid "A branch B may be set up to build on top of a branch X (configured with `branch.<name>.merge`) at a remote R (configured with `branch.<name>.remote`). B@{u} refers to the remote-tracking branch for the branch X taken from remote R, typically found at `refs/remotes/R/X`."
msgstr ""

#. type: Labeled list
#: en/revisions.txt:104
#, no-wrap, priority:100
msgid "'[<branchname>]@\\{push\\}', e.g. 'master@\\{push\\}', '@\\{push\\}'"
msgstr "'[<nome-do-ramo>]@\\{push\\}', exemplo, 'master@\\{push\\}', '@\\{push\\}'"

#. type: Plain text
#: en/revisions.txt:109
#, fuzzy, priority:100
#| msgid "The suffix '@\\{push}' reports the branch \"where we would push to\" if `git push` were run while `branchname` was checked out (or the current `HEAD` if no branchname is specified). Since our push destination is in a remote repository, of course, we report the local tracking branch that corresponds to that branch (i.e., something in `refs/remotes/`)."
msgid "The suffix '@\\{push}' reports the branch \"where we would push to\" if `git push` were run while `branchname` was checked out (or the current `HEAD` if no branchname is specified). Like for '@\\{upstream\\}', we report the remote-tracking branch that corresponds to that branch at the remote."
msgstr "O sufixo '@\\{push}' relata ao ramo \"para onde estaremos fazendo impulsionamento\" caso `git push` seja executado enquanto `branchname` seja verificado (ou o `HEAD` atual, caso nenhum nome do ramo tenha sido especificado). Como o nosso impulsionamento foi feito em um repositório remoto, é claro, relatamos o ramo de rastreamento local que tenha correspondência a esse ramo (ou seja, algo em `refs/remotes/`)."

#. type: Plain text
#: en/revisions.txt:111
#, priority:100
msgid "Here's an example to make it more clear:"
msgstr "Aqui um exemplo para deixar mais claro:"

#. type: delimited block -
#: en/revisions.txt:116
#, no-wrap, priority:100
msgid ""
"$ git config push.default current\n"
"$ git config remote.pushdefault myfork\n"
"$ git switch -c mybranch origin/master\n"
msgstr ""
"$ git config push.default current\n"
"$ git config remote.pushdefault myfork\n"
"$ git switch -c mybranch origin/master\n"

#. type: delimited block -
#: en/revisions.txt:119
#, no-wrap, priority:100
msgid ""
"$ git rev-parse --symbolic-full-name @{upstream}\n"
"refs/remotes/origin/master\n"
msgstr ""
"$ git rev-parse --symbolic-full-name @{upstream}\n"
"refs/remotes/origin/master\n"

#. type: delimited block -
#: en/revisions.txt:122
#, no-wrap, priority:100
msgid ""
"$ git rev-parse --symbolic-full-name @{push}\n"
"refs/remotes/myfork/mybranch\n"
msgstr ""
"$ git rev-parse --symbolic-full-name @{push}\n"
"refs/remotes/myfork/mybranch\n"

#. type: Plain text
#: en/revisions.txt:127
#, priority:100
msgid "Note in the example that we set up a triangular workflow, where we pull from one location and push to another. In a non-triangular workflow, '@\\{push}' is the same as '@\\{upstream}', and there is no need for it."
msgstr "Observe no exemplo que configuramos um fluxo de trabalho triangular, onde fazemos o `pull` (obtenção) de um local e o `push` (impulsionamento) para outro. Em um fluxo de trabalho não triangular, o '@\\{push}' é igual como o '@\\{upstream}' que não é necessário."

#. type: Plain text
#: en/revisions.txt:130
#, priority:100
msgid "This suffix is also accepted when spelled in uppercase, and means the same thing no matter the case."
msgstr "Esse sufixo também é aceito quando escrito em maiúsculas e significa a mesma coisa, não importa o caso."

#. type: Labeled list
#: en/revisions.txt:131
#, no-wrap, priority:100
msgid "'<rev>{caret}[<n>]', e.g. 'HEAD{caret}, v1.5.1{caret}0'"
msgstr "'<rev>{caret}[<n>]', exemplo, 'HEAD{caret}, v1.5.1{caret}0'"

#. type: Plain text
#: en/revisions.txt:138
#, priority:100
msgid "A suffix '{caret}' to a revision parameter means the first parent of that commit object.  '{caret}<n>' means the <n>th parent (i.e.  '<rev>{caret}' is equivalent to '<rev>{caret}1').  As a special rule, '<rev>{caret}0' means the commit itself and is used when '<rev>' is the object name of a tag object that refers to a commit object."
msgstr "Um sufixo '{caret}' para um parâmetro de revisão significa que a primeira origem deste objeto commit.  '{caret}<n>' significa que é a quantidade <n> da origem (ou seja,  '<rev>{caret}' é equivamente a '<rev>{caret}1').  Como regra especial, '<rev>{caret}0' significa o commit em si e é utilizado quando '<rev>' for o nome do objeto de um objeto `tag` que tenha referência a um objeto de commit."

#. type: Labeled list
#: en/revisions.txt:139
#, no-wrap, priority:100
msgid "'<rev>{tilde}[<n>]', e.g. 'HEAD{tilde}, master{tilde}3'"
msgstr "'<rev>{tilde}[<n>]', exemplo, 'HEAD{tilde}, master{tilde}3'"

#. type: Plain text
#: en/revisions.txt:148
#, priority:100
msgid "A suffix '{tilde}' to a revision parameter means the first parent of that commit object.  A suffix '{tilde}<n>' to a revision parameter means the commit object that is the <n>th generation ancestor of the named commit object, following only the first parents.  I.e. '<rev>{tilde}3' is equivalent to '<rev>{caret}{caret}{caret}' which is equivalent to '<rev>{caret}1{caret}1{caret}1'.  See below for an illustration of the usage of this form."
msgstr "Um sufixo '{tilde}' para um parâmetro de revisão significa o que a primeira origem deste objeto commit.  Um sufixo '{tilde}<n>' para um parâmetro de revisão significa que o objeto commit é o <n> do ancestral da geração do objeto commit informado, seguindo apenas os primeiras origens.  Ou seja, '<rev>{tilde}3' é equivalente a '<rev>{caret}{caret}{caret}' que é equivalente a '<rev>{caret}1{caret}1{caret}1'.  Veja abaixo uma ilustração do uso deste formato."

#. type: Labeled list
#: en/revisions.txt:149
#, no-wrap, priority:100
msgid "'<rev>{caret}{<type>}', e.g. 'v0.99.8{caret}\\{commit\\}'"
msgstr "'<rev>{caret}{<type>}', exemplo, 'v0.99.8{caret}\\{commit\\}'"

#. type: Plain text
#: en/revisions.txt:160
#, priority:100
msgid "A suffix '{caret}' followed by an object type name enclosed in brace pair means dereference the object at '<rev>' recursively until an object of type '<type>' is found or the object cannot be dereferenced anymore (in which case, barf).  For example, if '<rev>' is a commit-ish, '<rev>{caret}\\{commit\\}' describes the corresponding commit object.  Similarly, if '<rev>' is a tree-ish, '<rev>{caret}\\{tree\\}' describes the corresponding tree object.  '<rev>{caret}0' is a short-hand for '<rev>{caret}\\{commit\\}'."
msgstr "Um sufixo '{caret}' seguido por um tipo de objeto com nome fechado entre chaves significa remover a referência do objeto em '<ref>' recursivamente até que um objeto do tipo '<type>' seja encontrado ou não seja mais possível remover a referência do (nesse caso, `barf`).  Por exemplo, caso '<ref>' seja um commit ish, '<rev>{caret}\\{commit\\}' descreve o objeto commit correspondente.  Da mesma forma caso '<re>' seja um ish da árvore '<rev>{caret}\\{tree\\}', descreve o objeto da árvore correspondente.  '<rev>{caret}0' é um atalho para '<rev>{caret}\\{commit\\}'."

#. type: Plain text
#: en/revisions.txt:165
#, priority:100
msgid "'<rev>{caret}\\{object\\}' can be used to make sure '<rev>' names an object that exists, without requiring '<rev>' to be a tag, and without dereferencing '<rev>'; because a tag is already an object, it does not have to be dereferenced even once to get to an object."
msgstr "'<rev>{caret}\\{object\\}' pode ser utilizado para ter certeza que os nomes '<rev>' de um determinado objeto existam, sem requerer que '<rev>' seja uma tag e sem perder a referência com '<rev>'; pois `tag` já é um objeto, não a necessidade que seja perdido a referência nenhuma vez para chegar a um objeto."

#. type: Plain text
#: en/revisions.txt:168
#, priority:100
msgid "'<rev>{caret}\\{tag\\}' can be used to ensure that '<rev>' identifies an existing tag object."
msgstr "'<rev>{caret}\\{tag\\}' pode ser utilizado para ter certeza que '<rev>' identifique um objeto `tag` já existente."

#. type: Labeled list
#: en/revisions.txt:169
#, no-wrap, priority:100
msgid "'<rev>{caret}{}', e.g. 'v0.99.8{caret}{}'"
msgstr "'<rev>{caret}{}', exemplo, 'v0.99.8{caret}{}'"

#. type: Plain text
#: en/revisions.txt:174
#, priority:100
msgid "A suffix '{caret}' followed by an empty brace pair means the object could be a tag, and dereference the tag recursively until a non-tag object is found."
msgstr "Um sufixo '{caret}' seguido por um par de chaves vazias significa que o objeto pode ser uma tag e perder a referência de uma tag recursivamente, até que um objeto que não seja tag, seja encontrada."

#. type: Labeled list
#: en/revisions.txt:175
#, no-wrap, priority:100
msgid "'<rev>{caret}{/<text>}', e.g. 'HEAD^{/fix nasty bug}'"
msgstr "'<rev>{caret}{/<texto>}', exemplo, 'HEAD^{/fix nasty bug}'"

#. type: Plain text
#: en/revisions.txt:181
#, priority:100
msgid "A suffix '{caret}' to a revision parameter, followed by a brace pair that contains a text led by a slash, is the same as the ':/fix nasty bug' syntax below except that it returns the youngest matching commit which is reachable from the '<rev>' before '{caret}'."
msgstr "Um sufixo '{caret}' para um parâmetro de revisão, seguido por um par de chaves que contém um texto liderado por uma barra, é o mesmo que a sintaxe ':/fix nasty bug' abaixo, exceto que ele retorna o commit coincidente mais jovem que é acessível a partir de '<rev>' antes de '{caret}'."

#. type: Labeled list
#: en/revisions.txt:182
#, no-wrap, priority:100
msgid "':/<text>', e.g. ':/fix nasty bug'"
msgstr "':/<texto>', exemplo, ':/fix nasty bug'"

#. type: Plain text
#: en/revisions.txt:195
#, priority:100
msgid "A colon, followed by a slash, followed by a text, names a commit whose commit message matches the specified regular expression.  This name returns the youngest matching commit which is reachable from any ref, including HEAD.  The regular expression can match any part of the commit message. To match messages starting with a string, one can use e.g. ':/^foo'. The special sequence ':/!' is reserved for modifiers to what is matched. ':/!-foo' performs a negative match, while ':/!!foo' matches a literal '!' character, followed by 'foo'. Any other sequence beginning with ':/!' is reserved for now.  Depending on the given text, the shell's word splitting rules might require additional quoting."
msgstr "Da nome a um commit aqueles que forem seguidos por um traço e por um texto, e a mensagem de commit coincidir à expressão regular usada.  Esse nome retorna o commit coincidente mais jovem, acessível a partir de qualquer referência, incluindo `HEAD`.  A expressão regular pode corresponder a qualquer parte da mensagem do commit. Para coincidir mensagens que comecem com uma string, pode-se utilizar ':/^foo' por exemplo. A sequência especial ': /!' está reservada para modificadores que tenham coincidências. ':/!-foo' executa uma coincidência negativa, enquanto ':/!!foo' coincide com um caractere literal '!', seguido por 'foo'. No momento, qualquer outra sequência começando com ':/!' está reservada.  Dependendo do texto informado, as regras de divisão de palavras do shell podem exigir citações adicionais."

#. type: Labeled list
#: en/revisions.txt:196
#, no-wrap, priority:100
msgid "'<rev>:<path>', e.g. 'HEAD:README', 'master:./README'"
msgstr "'<rev>:<caminho>', exemplo, 'HEAD:README', 'master:./README'"

#. type: Plain text
#: en/revisions.txt:204
#, priority:100
msgid "A suffix ':' followed by a path names the blob or tree at the given path in the tree-ish object named by the part before the colon.  A path starting with './' or '../' is relative to the current working directory.  The given path will be converted to be relative to the working tree's root directory.  This is most useful to address a blob or tree from a commit or tree that has the same tree structure as the working tree."
msgstr "Um sufixo ':' seguido de um caminho nomeia a bolha ou a árvore no caminho especificado no objeto  da árvore \"ish\" informado pela parte antes dos dois pontos.  Um caminho começando com './' ou '../' é relativo ao diretório de trabalho atual.  O caminho especificado será convertido para ser relativo ao diretório raiz da árvore de trabalho.  Isso é mais útil para abordar uma bolha ou árvore de um commit ou uma árvore que tenha a mesma estrutura de árvore que uma árvore de trabalho."

#. type: Labeled list
#: en/revisions.txt:205
#, no-wrap, priority:100
msgid "':[<n>:]<path>', e.g. ':0:README', ':README'"
msgstr "':[<n>:]<caminho>', exemplo, ':0:README', ':README'"

#. type: Plain text
#: en/revisions.txt:213
#, priority:100
msgid "A colon, optionally followed by a stage number (0 to 3) and a colon, followed by a path, names a blob object in the index at the given path. A missing stage number (and the colon that follows it) names a stage 0 entry. During a merge, stage 1 is the common ancestor, stage 2 is the target branch's version (typically the current branch), and stage 3 is the version from the branch which is being merged."
msgstr "Os dois pontos opcionalmente seguidos por um número de estágio (0 para 3) e dois pontos, seguidos por um caminho, informam um objeto bolha no índice no caminho especificado. Nomeia uma entrada de estágio quando o número estiver ausente (assim como dois pontos que o seguem). Durante uma mesclagem, o estágio 1 é o ancestral comum, o estágio 2 é a versão do ramo de destino (normalmente o ramo atual) e o estágio 3 é a versão do ramo que está sendo mesclado."

#. type: Plain text
#: en/revisions.txt:217
#, priority:100
msgid "Here is an illustration, by Jon Loeliger.  Both commit nodes B and C are parents of commit node A.  Parent commits are ordered left-to-right."
msgstr "Aqui está uma ilustração, de Jon Loeliger.  Ambos os nós do commit B e C são as origens dos nós do commit A. Os commits da origem são ordenados da esquerda para a direita."

#. type: delimited block .
#: en/revisions.txt:229
#, no-wrap, priority:100
msgid ""
"G   H   I   J\n"
" \\ /     \\ /\n"
"  D   E   F\n"
"   \\  |  / \\\n"
"    \\ | /   |\n"
"     \\|/    |\n"
"      B     C\n"
"       \\   /\n"
"        \\ /\n"
"         A\n"
msgstr ""
"G   H   I   J\n"
" \\ /     \\ /\n"
"  D   E   F\n"
"   \\  |  / \\\n"
"    \\ | /   |\n"
"     \\|/    |\n"
"      B     C\n"
"       \\   /\n"
"        \\ /\n"
"         A\n"

#. type: Plain text
#: en/revisions.txt:241
#, no-wrap, priority:100
msgid ""
"    A =      = A^0\n"
"    B = A^   = A^1     = A~1\n"
"    C =      = A^2\n"
"    D = A^^  = A^1^1   = A~2\n"
"    E = B^2  = A^^2\n"
"    F = B^3  = A^^3\n"
"    G = A^^^ = A^1^1^1 = A~3\n"
"    H = D^2  = B^^2    = A^^^2  = A~2^2\n"
"    I = F^   = B^3^    = A^^3^\n"
"    J = F^2  = B^3^2   = A^^3^2\n"
msgstr ""
"    A =      = A^0\n"
"    B = A^   = A^1     = A~1\n"
"    C =      = A^2\n"
"    D = A^^  = A^1^1   = A~2\n"
"    E = B^2  = A^^2\n"
"    F = B^3  = A^^3\n"
"    G = A^^^ = A^1^1^1 = A~3\n"
"    H = D^2  = B^^2    = A^^^2  = A~2^2\n"
"    I = F^   = B^3^    = A^^3^\n"
"    J = F^2  = B^3^2   = A^^3^2\n"

#. type: Plain text
#: en/revisions.txt:248
#, priority:100
msgid "History traversing commands such as `git log` operate on a set of commits, not just a single commit."
msgstr "O histórico que atravessa os comandos como o `git log` opera em um determinado conjunto de commits e não apenas em único commit."

#. type: Plain text
#: en/revisions.txt:253
#, priority:100
msgid "For these commands, specifying a single revision, using the notation described in the previous section, means the set of commits `reachable` from the given commit."
msgstr "Para estes comandos, defina uma única revisão utilizando a notação descrita na seção anterior, significa que o conjunto dos commits `acessíveis` a partir do commit informado."

#. type: Plain text
#: en/revisions.txt:256
#, priority:100
msgid "Specifying several revisions means the set of commits reachable from any of the given commits."
msgstr "Ao especificar várias revisões significa que o conjunto dos commits acessíveis a partir de qualquer um dos commits informados."

#. type: Plain text
#: en/revisions.txt:259
#, priority:100
msgid "A commit's reachable set is the commit itself and the commits in its ancestry chain."
msgstr "O conjunto acessível de um commit é o próprio commit e o commit em sua cadeia de ancestrais."

#. type: Plain text
#: en/revisions.txt:262
#, priority:100
msgid "There are several notations to specify a set of connected commits (called a \"revision range\"), illustrated below."
msgstr "Existem várias notações para definir um conjunto de commits associados (chamado de \"intervalo de revisão\"), ilustrado abaixo."

#. type: Title ~
#: en/revisions.txt:265
#, no-wrap, priority:100
msgid "Commit Exclusions"
msgstr "Exclusões de Commits"

#. type: Labeled list
#: en/revisions.txt:267
#, no-wrap, priority:100
msgid "'{caret}<rev>' (caret) Notation"
msgstr "'{caret}<rev>' (caret) Notação"

#. type: Plain text
#: en/revisions.txt:272
#, priority:100
msgid "To exclude commits reachable from a commit, a prefix '{caret}' notation is used.  E.g. '{caret}r1 r2' means commits reachable from 'r2' but exclude the ones reachable from 'r1' (i.e. 'r1' and its ancestors)."
msgstr "Para excluir os commits acessíveis de um commit, é usada uma notação de prefixo '{caret}'.  Por exemplo, '{caret}r1 r2' significa os commits acessíveis de 'r2' porém exclui aqueles acessíveis do 'r1' (por exemplo, 'r1' e os seus ancestrais)."

#. type: Title ~
#: en/revisions.txt:274
#, no-wrap, priority:100
msgid "Dotted Range Notations"
msgstr "Notações do Intervalo Pontilhado"

#. type: Labeled list
#: en/revisions.txt:276
#, no-wrap, priority:100
msgid "The '..' (two-dot) Range Notation"
msgstr "A faixa de notação de intervalo '..' (dois pontos)"

#. type: Plain text
#: en/revisions.txt:282
#, priority:100
msgid "The '{caret}r1 r2' set operation appears so often that there is a shorthand for it.  When you have two commits 'r1' and 'r2' (named according to the syntax explained in SPECIFYING REVISIONS above), you can ask for commits that are reachable from r2 excluding those that are reachable from r1 by '{caret}r1 r2' and it can be written as 'r1..r2'."
msgstr "A operação do conjunto '{caret}r1 r2' aparece com tanta frequência que existe uma abreviação para isso.  Quando você tem dois commits 'r1' e 'r2' (nomeados de acordo com a sintaxe explicada em ESPECIFICANDO REVISÕES acima), você pode solicitar os commits que sejam acessíveis atraés do 'r2' excluindo aqueles que podem ser acessados através do 'r1' pelo '{caret}r1 r2' e podem ser escritos como 'r1..r2'."

#. type: Labeled list
#: en/revisions.txt:283
#, fuzzy, ignore-ellipsis, no-wrap, priority:100
#| msgid "The '...' (three-dot) Symmetric Difference Notation"
msgid "The '\\...' (three-dot) Symmetric Difference Notation"
msgstr "A notação da diferença simétrica '...' (três pontos)"

#. type: Plain text
#: en/revisions.txt:289
#, ignore-ellipsis, priority:100
msgid "A similar notation 'r1\\...r2' is called symmetric difference of 'r1' and 'r2' and is defined as 'r1 r2 --not $(git merge-base --all r1 r2)'.  It is the set of commits that are reachable from either one of 'r1' (left side) or 'r2' (right side) but not from both."
msgstr "Uma notação semelhante 'r1\\...r2' é chamada de uma diferença simétrica de 'r1' e 'r2' sendo definida como 'r1 r2 --not $(git merge-base --all r1 r2)'.  É o conjunto dos commits que são acessíveis a partir do 'r1' (lado esquerdo) ou 'r2' (lado direito), porém, não de ambos."

#. type: Plain text
#: en/revisions.txt:296
#, priority:100
msgid "In these two shorthand notations, you can omit one end and let it default to HEAD.  For example, 'origin..' is a shorthand for 'origin..HEAD' and asks \"What did I do since I forked from the origin branch?\" Similarly, '..origin' is a shorthand for 'HEAD..origin' and asks \"What did the origin do since I forked from them?\" Note that '..' would mean 'HEAD..HEAD' which is an empty range that is both reachable and unreachable from HEAD."
msgstr "Nestas duas notações abreviadas, é possível omitir uma extremidade e deixá-la como predefinido no `HEAD`.  Como por exemplo, 'origin..' é uma abreviação de 'origin..HEAD' e pergunta \"O que eu fiz desde que peguei a bifurcação no ramo de origem?\" Da mesma forma, '..origin' é uma abreviação de 'HEAD..origin' e pergunta \"O que a origem fez desde que eu as peguei?\" Observe que '..' significaria 'HEAD..HEAD', que é um intervalo vazio acessível e inacessível a partir do `HEAD`."

#. type: Plain text
#: en/revisions.txt:303
#, priority:100
msgid "Commands that are specifically designed to take two distinct ranges (e.g. \"git range-diff R1 R2\" to compare two ranges) do exist, but they are exceptions.  Unless otherwise noted, all \"git\" commands that operate on a set of commits work on a single revision range.  In other words, writing two \"two-dot range notation\" next to each other, e.g."
msgstr "Existem comandos que são concebidos de forma específica para tomar dois intervalos distintos (por exemplo, \"git range-diff R1 R2\" que compara dois intervalos), porém são exceções.  A menos que seja observado o contrário, todos os comandos \"git\" que operam em um conjunto de commits funcionam em uma única faixa da revisão.  Em outras palavras, escrever duas notações de \"dois intervalos de pontos\" um ao lado do outro, e.g."

#. type: Plain text
#: en/revisions.txt:305
#, no-wrap, priority:100
msgid "    $ git log A..B C..D\n"
msgstr "    $ git log A..B C..D\n"

#. type: Plain text
#: en/revisions.txt:310
#, priority:100
msgid "does *not* specify two revision ranges for most commands.  Instead it will name a single connected set of commits, i.e. those that are reachable from either B or D but are reachable from neither A or C.  In a linear history like this:"
msgstr "*não* especifica dois intervalos de revisão para a maioria dos comandos.  Em vez disso, ele nomeará um único conjunto de commits conectados, ou seja, aqueles que são acessíveis a partir de B ou D, mas que não são acessíveis a partir de A ou C. Em um histórico linear como este:"

#. type: Plain text
#: en/revisions.txt:312
#, no-wrap, priority:100
msgid "    ---A---B---o---o---C---D\n"
msgstr "    ---A---B---o---o---C---D\n"

#. type: Plain text
#: en/revisions.txt:315
#, priority:100
msgid "because A and B are reachable from C, the revision range specified by these two dotted ranges is a single commit D."
msgstr "porque A e B são alcançáveis a partir de C, o intervalo da faixa de revisão definido por estes dois intervalos pontilhados é um único commit D."

#. type: Title ~
#: en/revisions.txt:318
#, no-wrap, priority:100
msgid "Other <rev>{caret} Parent Shorthand Notations"
msgstr "Outras <rev>{caret} Notações Abreviadas dos pais"

#. type: Plain text
#: en/revisions.txt:321
#, priority:100
msgid "Three other shorthands exist, particularly useful for merge commits, for naming a set that is formed by a commit and its parent commits."
msgstr "Existem três outras abreviações, particularmente úteis para a mesclagem dos commits, para nomear um conjunto formado por um commit e o seu pai principal."

#. type: Plain text
#: en/revisions.txt:323
#, priority:100
msgid "The 'r1{caret}@' notation means all parents of 'r1'."
msgstr "A notação 'r1{caret}@' todos os pais do 'r1'."

#. type: Plain text
#: en/revisions.txt:326
#, priority:100
msgid "The 'r1{caret}!' notation includes commit 'r1' but excludes all of its parents.  By itself, this notation denotes the single commit 'r1'."
msgstr "A notação 'r1{caret}!' (cursor) inclui o commit 'r1', mas exclui todos as suas origens.  Por si só, essa notação denota o único commit 'r1'."

#. type: Plain text
#: en/revisions.txt:333
#, priority:100
msgid "The '<rev>{caret}-[<n>]' notation includes '<rev>' but excludes the <n>th parent (i.e. a shorthand for '<rev>{caret}<n>..<rev>'), with '<n>' = 1 if not given. This is typically useful for merge commits where you can just pass '<commit>{caret}-' to get all the commits in the branch that was merged in merge commit '<commit>' (including '<commit>' itself)."
msgstr "A notação '<rev>{caret}-[<n>]' incluí '<rev>' porém excluí o '<n>ésimo' pai (ou seja, é uma abreviação para '<rev>{caret}<n>..<rev>'), com '<n>' = 1 caso não seja informado. Geralmente é útil para a mesclagem dos commits onde é possível passar '<commit>{caret}-' para obter todos os commits do ramoq que foi mesclado na mesclagem do commit '<commit>' (incluindo o próprio '<commit>')."

#. type: Plain text
#: en/revisions.txt:337
#, priority:100
msgid "While '<rev>{caret}<n>' was about specifying a single commit parent, these three notations also consider its parents. For example you can say 'HEAD{caret}2{caret}@', however you cannot say 'HEAD{caret}@{caret}2'."
msgstr "Embora '<rev>{caret}<n>' fosse sobre a especificação do pai de um único commit, estas três notações também consideram os seus pais. Como por exemplo, você pode dizer 'HEAD{caret}2{caret}@', contudo não poderá dizer 'HEAD{caret}@{caret}2'."

#. type: Title -
#: en/revisions.txt:339
#, no-wrap, priority:100
msgid "Revision Range Summary"
msgstr "Resumo do Intervalo da Revisão"

#. type: Labeled list
#: en/revisions.txt:341
#, no-wrap, priority:100
msgid "'<rev>'"
msgstr "'<rev>'"

#. type: Plain text
#: en/revisions.txt:344
#, priority:100
msgid "Include commits that are reachable from <rev> (i.e. <rev> and its ancestors)."
msgstr "Inclua os commits que são acessíveis através do <ref> (ou seja, <rev> e seus ancestrais)."

#. type: Labeled list
#: en/revisions.txt:345
#, no-wrap, priority:100
msgid "'{caret}<rev>'"
msgstr "'{caret}<rev>'"

#. type: Plain text
#: en/revisions.txt:348
#, priority:100
msgid "Exclude commits that are reachable from <rev> (i.e. <rev> and its ancestors)."
msgstr "Exclua os commits que estejam acessíveis a partir de `<rev>` (<rev> e os seus ancestrais por exemplo)."

#. type: Labeled list
#: en/revisions.txt:349
#, no-wrap, priority:100
msgid "'<rev1>..<rev2>'"
msgstr "'<rev1>..<rev2>'"

#. type: Plain text
#: en/revisions.txt:353
#, priority:100
msgid "Include commits that are reachable from <rev2> but exclude those that are reachable from <rev1>.  When either <rev1> or <rev2> is omitted, it defaults to `HEAD`."
msgstr "Inclua os commits acessíveis a partir do <rev2>, porém exclua aquelas acessíveis a partir do <rev1>.  Quando <rev1> ou <rev2> for omitido, a predefinição retorna para `HEAD`."

#. type: Labeled list
#: en/revisions.txt:354
#, ignore-ellipsis, no-wrap, priority:100
msgid "'<rev1>\\...<rev2>'"
msgstr "'<rev1>\\...<rev2>'"

#. type: Plain text
#: en/revisions.txt:358
#, priority:100
msgid "Include commits that are reachable from either <rev1> or <rev2> but exclude those that are reachable from both.  When either <rev1> or <rev2> is omitted, it defaults to `HEAD`."
msgstr "Incluí os commits que sejam acessíveis seja de <rev1> ou <rev2> porém exclua aqueles que sejam acessíveis de ambos.  Quando <rev1> ou <rev2> for omitido, a predefinição retorna para `HEAD`."

#. type: Labeled list
#: en/revisions.txt:359
#, no-wrap, priority:100
msgid "'<rev>{caret}@', e.g. 'HEAD{caret}@'"
msgstr "'<rev>{caret}@', e.g. 'HEAD{caret}@'"

#. type: Plain text
#: en/revisions.txt:363
#, priority:100
msgid "A suffix '{caret}' followed by an at sign is the same as listing all parents of '<rev>' (meaning, include anything reachable from its parents, but not the commit itself)."
msgstr "Um sufixo '{caret}' seguido por um sinal de arroba é o mesmo que listar todas as origens de '<rev>' (ou seja, incluir qualquer coisa acessível das suas origens, mas não o próprio commit)."

#. type: Labeled list
#: en/revisions.txt:364
#, no-wrap, priority:100
msgid "'<rev>{caret}!', e.g. 'HEAD{caret}!'"
msgstr "'<rev>{caret}!', e.g. 'HEAD{caret}!'"

#. type: Plain text
#: en/revisions.txt:368
#, priority:100
msgid "A suffix '{caret}' followed by an exclamation mark is the same as giving commit '<rev>' and then all its parents prefixed with '{caret}' to exclude them (and their ancestors)."
msgstr "Um sufixo '{caret}' seguido de um ponto de exclamação é o mesmo que fazer um commit '<rev>' e em seguida, todos as suas origens prefixam com '{caret}' para excluí-los (assim como seus ancestrais)."

#. type: Labeled list
#: en/revisions.txt:369
#, no-wrap, priority:100
msgid "'<rev>{caret}-<n>', e.g. 'HEAD{caret}-, HEAD{caret}-2'"
msgstr "'<rev>{caret}-<n>', e.g. 'HEAD{caret}-, HEAD{caret}-2'"

#. type: Plain text
#: en/revisions.txt:372
#, priority:100
msgid "Equivalent to '<rev>{caret}<n>..<rev>', with '<n>' = 1 if not given."
msgstr "É o equivalente a '<rev>{caret}<n>..<rev>', with '<n>' = 1 caso nenhum seja informado."

#. type: Plain text
#: en/revisions.txt:376
#, priority:100
msgid "Here are a handful of examples using the Loeliger illustration above, with each step in the notation's expansion and selection carefully spelt out:"
msgstr "Aqui estão alguns exemplos utilizando a ilustração Loeliger acima, com cada etapa da expansão e da seleção da notação cuidadosamente explicitada:"

#. type: delimited block .
#: en/revisions.txt:400
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"   Args   Expanded arguments    Selected commits\n"
"   D                            G H D\n"
"   D F                          G H I J D F\n"
"   ^G D                         H D\n"
"   ^D B                         E I J F B\n"
"   ^D B C                       E I J F B C\n"
"   C                            I J F C\n"
"   B..C   = ^B C                C\n"
"   B...C  = B ^F C              G H D E B C\n"
"   B^-    = B^..B\n"
"\t  = ^B^1 B              E I J F B\n"
"   C^@    = C^1\n"
"\t  = F                   I J F\n"
"   B^@    = B^1 B^2 B^3\n"
"\t  = D E F               D G H E F I J\n"
"   C^!    = C ^C^@\n"
"\t  = C ^C^1\n"
"\t  = C ^F                C\n"
"   B^!    = B ^B^@\n"
"\t  = B ^B^1 ^B^2 ^B^3\n"
"\t  = B ^D ^E ^F          B\n"
"   F^! D  = F ^I ^J D           G H D F\n"
msgstr ""
"   Args   Expanded arguments    Selected commits\n"
"   D                            G H D\n"
"   D F                          G H I J D F\n"
"   ^G D                         H D\n"
"   ^D B                         E I J F B\n"
"   ^D B C                       E I J F B C\n"
"   C                            I J F C\n"
"   B..C   = ^B C                C\n"
"   B...C  = B ^F C              G H D E B C\n"
"   B^-    = B^..B\n"
"\t  = ^B^1 B              E I J F B\n"
"   C^@    = C^1\n"
"\t  = F                   I J F\n"
"   B^@    = B^1 B^2 B^3\n"
"\t  = D E F               D G H E F I J\n"
"   C^!    = C ^C^@\n"
"\t  = C ^C^1\n"
"\t  = C ^F                C\n"
"   B^!    = B ^B^@\n"
"\t  = B ^B^1 ^B^2 ^B^3\n"
"\t  = B ^D ^E ^F          B\n"
"   F^! D  = F ^I ^J D           G H D F\n"

#. type: Plain text
#: en/rev-list-description.txt:5
#, priority:260
msgid "List commits that are reachable by following the `parent` links from the given commit(s), but exclude commits that are reachable from the one(s)  given with a '{caret}' in front of them.  The output is given in reverse chronological order by default."
msgstr "Liste os commits que podem ser acessadas seguindo os links `parent` de determinados commits, porém exclua os commits acessíveis das que receberam um '{caret}' na frente deles.  Por predefinição, a saída é informada em ordem cronológica reversa."

#. type: Plain text
#: en/rev-list-description.txt:12
#, priority:260
msgid "You can think of this as a set operation. Commits reachable from any of the commits given on the command line form a set, and then commits reachable from any of the ones given with '{caret}' in front are subtracted from that set.  The remaining commits are what comes out in the command's output.  Various other options and paths parameters can be used to further limit the result."
msgstr "Você pode pensar nisso como uma operação conjunta. Os commits acessíveis a partir de qualquer um dos commits passados na linha de comando formam um conjunto e então os commits acessíveis a partir de qualquer um dos passados com '{caret}' na frente, são subtraídos desse conjunto.  Os commits restantes são os que saem do comando.  Várias outras opções e parâmetros dos caminhos podem ser usados para limitar ainda mais o resultado."

#. type: Plain text
#: en/rev-list-description.txt:14
#, priority:260
msgid "Thus, the following command:"
msgstr "Assim, o seguinte comando:"

#. type: delimited block -
#: en/rev-list-description.txt:18
#, no-wrap, priority:260
msgid "$ git rev-list foo bar ^baz\n"
msgstr "$ git rev-list foo bar ^baz\n"

#. type: delimited block -
#: en/rev-list-description.txt:23
#, no-wrap, priority:260
msgid "$ git log foo bar ^baz\n"
msgstr "$ git log foo bar ^baz\n"

#. type: Plain text
#: en/rev-list-description.txt:28
#, priority:260
msgid "means \"list all the commits which are reachable from 'foo' or 'bar', but not from 'baz'\"."
msgstr "significa \"listar todos os commits acessíveis a partir do 'foo' ou 'bar', porém não de 'baz'\"."

#. type: Plain text
#: en/rev-list-description.txt:32
#, priority:260
msgid "A special notation \"'<commit1>'..'<commit2>'\" can be used as a short-hand for \"^'<commit1>' '<commit2>'\". For example, either of the following may be used interchangeably:"
msgstr "Uma notação especial \"'<commit1>'..'<commit2>'\" pode ser usada como uma abreviação para \"^'<commit1>' '<commit2>'\". Por exemplo, qualquer um dos seguintes podem ser usados de forma intercambiável:"

#. type: delimited block -
#: en/rev-list-description.txt:37
#, no-wrap, priority:260
msgid ""
"$ git rev-list origin..HEAD\n"
"$ git rev-list HEAD ^origin\n"
msgstr ""
"$ git rev-list origin..HEAD\n"
"$ git rev-list HEAD ^origin\n"

#. type: delimited block -
#: en/rev-list-description.txt:43
#, no-wrap, priority:260
msgid ""
"$ git log origin..HEAD\n"
"$ git log HEAD ^origin\n"
msgstr ""
"$ git log origin..HEAD\n"
"$ git log HEAD ^origin\n"

#. type: Plain text
#: en/rev-list-description.txt:49
#, ignore-ellipsis, priority:260
msgid "Another special notation is \"'<commit1>'...'<commit2>'\" which is useful for merges.  The resulting set of commits is the symmetric difference between the two operands.  The following two commands are equivalent:"
msgstr "Outra notação especial é \"'<commit1>'...'<commit2>'\", útil para mesclagens.  O conjunto resultante dos commits é a diferença simétrica entre dois operandos.  Os dois comandos a seguir são equivalentes:"

#. type: delimited block -
#: en/rev-list-description.txt:54
#, ignore-ellipsis, no-wrap, priority:260
msgid ""
"$ git rev-list A B --not $(git merge-base --all A B)\n"
"$ git rev-list A...B\n"
msgstr ""
"$ git rev-list A B --not $(git merge-base --all A B)\n"
"$ git rev-list A...B\n"

#. type: delimited block -
#: en/rev-list-description.txt:60
#, ignore-ellipsis, no-wrap, priority:260
msgid ""
"$ git log A B --not $(git merge-base --all A B)\n"
"$ git log A...B\n"
msgstr ""
"$ git log A B --not $(git merge-base --all A B)\n"
"$ git log A...B\n"

#. type: Title ~
#: en/rev-list-options.txt:2
#, no-wrap, priority:260
msgid "Commit Limiting"
msgstr "Limitação do Commit"

#. type: Plain text
#: en/rev-list-options.txt:7
#, priority:260
msgid "Besides specifying a range of commits that should be listed using the special notations explained in the description, additional commit limiting may be applied."
msgstr "Além de especificar uma série de commits que devem ser listados utilizando as notações especiais explicadas na descrição, podem ser aplicadas limitações adicionais ao commit."

#. type: Plain text
#: en/rev-list-options.txt:12
#, priority:260
msgid "Using more options generally further limits the output (e.g.  `--since=<date1>` limits to commits newer than `<date1>`, and using it with `--grep=<pattern>` further limits to commits whose log message has a line that matches `<pattern>`), unless otherwise noted."
msgstr "O uso de mais opções geralmente limita ainda mais a saída (por exemplo,  limites `--since=<date1>` para commits mais recentes que `<data1>`, e usá-lo com `--grep=<padrão>` limita ainda mais para os commits cuja mensagem de registro log possua uma linha que coincida com `<padrão>`), a menos que indicado de outra maneira."

#. type: Plain text
#: en/rev-list-options.txt:15
#, priority:260
msgid "Note that these are applied before commit ordering and formatting options, such as `--reverse`."
msgstr "Observe que eles são aplicados antes da organização do commit e das opções de formatação como `--reverse`."

#. type: Labeled list
#: en/rev-list-options.txt:17
#, no-wrap, priority:260
msgid "-n <number>"
msgstr "-n <quantidade>"

#. type: Labeled list
#: en/rev-list-options.txt:18
#, no-wrap, priority:260
msgid "--max-count=<number>"
msgstr "--max-count=<quantidade>"

#. type: Plain text
#: en/rev-list-options.txt:20
#, priority:260
msgid "Limit the number of commits to output."
msgstr "Limita a quantidade de commits na saída."

#. type: Labeled list
#: en/rev-list-options.txt:21
#, no-wrap, priority:260
msgid "--skip=<number>"
msgstr "--skip=<quantidade>"

#. type: Plain text
#: en/rev-list-options.txt:23
#, priority:260
msgid "Skip 'number' commits before starting to show the commit output."
msgstr "Ignora a 'quantidade'de commits antes começa a exibir a saída do commit."

#. type: Labeled list
#: en/rev-list-options.txt:24
#, no-wrap, priority:260
msgid "--since=<date>"
msgstr "--since=<data>"

#. type: Labeled list
#: en/rev-list-options.txt:25
#, no-wrap, priority:260
msgid "--after=<date>"
msgstr "--after=<data>"

#. type: Plain text
#: en/rev-list-options.txt:27
#, priority:260
msgid "Show commits more recent than a specific date."
msgstr "Exiba os commits com data mais recente das que foram informada."

#. type: Labeled list
#: en/rev-list-options.txt:28
#, no-wrap, priority:260
msgid "--since-as-filter=<date>"
msgstr "--since-as-filter=<data>"

#. type: Plain text
#: en/rev-list-options.txt:32
#, priority:260
msgid "Show all commits more recent than a specific date. This visits all commits in the range, rather than stopping at the first commit which is older than a specific date."
msgstr "Mostra todos os commits mais recentes do que uma determinada data. Isso avalia todos os commits que estejam neste intervalo, em vez de parar no primeiro commit que for o mais antigo que uma determinada data."

#. type: Labeled list
#: en/rev-list-options.txt:33
#, no-wrap, priority:260
msgid "--until=<date>"
msgstr "--until=<data>"

#. type: Labeled list
#: en/rev-list-options.txt:34
#, no-wrap, priority:260
msgid "--before=<date>"
msgstr "--before=<data>"

#. type: Plain text
#: en/rev-list-options.txt:36
#, priority:260
msgid "Show commits older than a specific date."
msgstr "Exiba os commits mais antigos com data mais antiga das que foram informada."

#. type: Labeled list
#: en/rev-list-options.txt:38
#, no-wrap, priority:260
msgid "--max-age=<timestamp>"
msgstr "--max-age=<timestamp>"

#. type: Labeled list
#: en/rev-list-options.txt:39
#, no-wrap, priority:260
msgid "--min-age=<timestamp>"
msgstr "--min-age=<timestamp>"

#. type: Plain text
#: en/rev-list-options.txt:41
#, priority:260
msgid "Limit the commits output to specified time range."
msgstr "Limita a saída dos commits para um período de tempo específico."

#. type: Labeled list
#: en/rev-list-options.txt:43
#, no-wrap, priority:260
msgid "--author=<pattern>"
msgstr "--author=<padrão>"

#. type: Labeled list
#: en/rev-list-options.txt:44
#, no-wrap, priority:260
msgid "--committer=<pattern>"
msgstr "--committer=<padrão>"

#. type: Plain text
#: en/rev-list-options.txt:50
#, priority:260
msgid "Limit the commits output to ones with author/committer header lines that match the specified pattern (regular expression).  With more than one `--author=<pattern>`, commits whose author matches any of the given patterns are chosen (similarly for multiple `--committer=<pattern>`)."
msgstr "Limite os commits gerados para aqueles com linhas de cabeçalho do autor e de quem fez o commit que coincida com determinado padrão (expressão regular).  Com um ou mais de um `--author=<padrão>`, são selecionados os commits cujo autor coincida com qualquer um dos padrões informados (é similar para vários `--committer=<padrão>`)."

#. type: Labeled list
#: en/rev-list-options.txt:51
#, no-wrap, priority:260
msgid "--grep-reflog=<pattern>"
msgstr "--grep-reflog=<padrão>"

#. type: Plain text
#: en/rev-list-options.txt:57
#, priority:260
msgid "Limit the commits output to ones with reflog entries that match the specified pattern (regular expression). With more than one `--grep-reflog`, commits whose reflog message matches any of the given patterns are chosen.  It is an error to use this option unless `--walk-reflogs` is in use."
msgstr "Limite o commit gerado para aqueles com entradas de reflog que coincidam ao padrão informado (expressão regular). Com mais de uma opção `--grep-reflog`, são escolhidos os commits cuja mensagem do reflog coincida com qualquer um dos padrões informado.  É um erro usar esta opção, a menos que o `--walk-reflogs` esteja em uso."

#. type: Labeled list
#: en/rev-list-options.txt:58
#, no-wrap, priority:260
msgid "--grep=<pattern>"
msgstr "--grep=<padrão>"

#. type: Plain text
#: en/rev-list-options.txt:64
#, priority:260
msgid "Limit the commits output to ones with log message that matches the specified pattern (regular expression).  With more than one `--grep=<pattern>`, commits whose message matches any of the given patterns are chosen (but see `--all-match`)."
msgstr "Limite o commit gerado para aqueles com mensagem do registro log que coincida ao padrão informado (expressão regular).  Com mais de uma opção `--grep=<padrão>`, os commits cuja mensagem coincida com qualquer um dos padrões informados (porém consulte `--all-match`)."

#. type: Plain text
#: en/rev-list-options.txt:68
#, priority:260
msgid "When `--notes` is in effect, the message from the notes is matched as if it were part of the log message."
msgstr "Quando `--notes` está em vigor, a mensagem das anotações é coincidida como se fizesse parte da mensagem do registro log."

#. type: Plain text
#: en/rev-list-options.txt:73
#, priority:260
msgid "Limit the commits output to ones that match all given `--grep`, instead of ones that match at least one."
msgstr "Limita a saída dos commits para aqueles que coincidam com todos os comandos `--grep` utilizado, em vez daqueles que coincidam com apenas um."

#. type: Labeled list
#: en/rev-list-options.txt:74
#, ignore-same, no-wrap, priority:260
msgid "--invert-grep"
msgstr "--invert-grep"

#. type: Plain text
#: en/rev-list-options.txt:77
#, priority:260
msgid "Limit the commits output to ones with log message that do not match the pattern specified with `--grep=<pattern>`."
msgstr "Limita a saída dos commits para aqueles com uma mensagem do registro log que não coincida com o padrão utilizado em com o comando `--grep=<padrão>`."

#. type: Labeled list
#: en/rev-list-options.txt:79
#, ignore-same, no-wrap, priority:260
msgid "--regexp-ignore-case"
msgstr "--regexp-ignore-case"

#. type: Plain text
#: en/rev-list-options.txt:82
#, priority:260
msgid "Match the regular expression limiting patterns without regard to letter case."
msgstr "Coincida a expressão regular limitando o padrão sem considerar o tamanho das letras."

#. type: Plain text
#: en/rev-list-options.txt:86
#, priority:260
msgid "Consider the limiting patterns to be basic regular expressions; this is the default."
msgstr "Considere os padrões limitadores como expressões regulares básicas; Essa é a predefinição."

#. type: Plain text
#: en/rev-list-options.txt:91
#, priority:260
msgid "Consider the limiting patterns to be extended regular expressions instead of the default basic regular expressions."
msgstr "Considere os padrões de limitação a serem estendidos nas expressões regulares em vez das expressões regulares básicas predefinidas."

#. type: Plain text
#: en/rev-list-options.txt:96
#, priority:260
msgid "Consider the limiting patterns to be fixed strings (don't interpret pattern as a regular expression)."
msgstr "Considere os padrões limitadores como cadeias de caracteres fixos (não interprete o padrão como uma expressão regular)."

#. type: Plain text
#: en/rev-list-options.txt:101
#, priority:260
msgid "Consider the limiting patterns to be Perl-compatible regular expressions."
msgstr "Considere os padrões limitadores como expressões regulares compatíveis com o Perl."

#. type: Labeled list
#: en/rev-list-options.txt:106
#, ignore-same, no-wrap, priority:260
msgid "--remove-empty"
msgstr "--remove-empty"

#. type: Plain text
#: en/rev-list-options.txt:108
#, priority:260
msgid "Stop when a given path disappears from the tree."
msgstr "Pare quando um caminho informado tenha desaparecido da árvore."

#. type: Labeled list
#: en/rev-list-options.txt:109
#, ignore-same, no-wrap, priority:260
msgid "--merges"
msgstr "--merges"

#. type: Plain text
#: en/rev-list-options.txt:111
#, priority:260
msgid "Print only merge commits. This is exactly the same as `--min-parents=2`."
msgstr "Exiba apenas os commits que foram mesclados. É exatamente o mesmo que a opção `--min-parents=2`."

#. type: Labeled list
#: en/rev-list-options.txt:112
#, ignore-same, no-wrap, priority:260
msgid "--no-merges"
msgstr "--no-merges"

#. type: Plain text
#: en/rev-list-options.txt:115
#, priority:260
msgid "Do not print commits with more than one parent. This is exactly the same as `--max-parents=1`."
msgstr "Não imprima os commits com mais de um pai. É exatamente o mesmo que a opção `--max-parents=1`."

#. type: Labeled list
#: en/rev-list-options.txt:116
#, no-wrap, priority:260
msgid "--min-parents=<number>"
msgstr "--min-parents=<quantidade>"

#. type: Labeled list
#: en/rev-list-options.txt:117
#, no-wrap, priority:260
msgid "--max-parents=<number>"
msgstr "--max-parents=<quantidade>"

#. type: Labeled list
#: en/rev-list-options.txt:118
#, ignore-same, no-wrap, priority:260
msgid "--no-min-parents"
msgstr "--no-min-parents"

#. type: Labeled list
#: en/rev-list-options.txt:119
#, ignore-same, no-wrap, priority:260
msgid "--no-max-parents"
msgstr "--no-max-parents"

#. type: Plain text
#: en/rev-list-options.txt:124
#, priority:260
msgid "Show only commits which have at least (or at most) that many parent commits. In particular, `--max-parents=1` is the same as `--no-merges`, `--min-parents=2` is the same as `--merges`.  `--max-parents=0` gives all root commits and `--min-parents=3` all octopus merges."
msgstr "Exibe apenas os commits que tenham pelo menos (ou no máximo) aquela quantidade de pais dos commits. Em particular, `--max-parents=1` é o mesmo que `--no-merges`, `--min-parents=2` é o mesmo que `--merges`.  A opção `--max-parents=0` informa todos os commits raiz e `--min-parents=3` todas as mesclagens \"polvo\"."

#. type: Plain text
#: en/rev-list-options.txt:128
#, priority:260
msgid "`--no-min-parents` and `--no-max-parents` reset these limits (to no limit)  again.  Equivalent forms are `--min-parents=0` (any commit has 0 or more parents) and `--max-parents=-1` (negative numbers denote no upper limit)."
msgstr "As opções `--no-min-parents` e `--no-max-parents` redefinem estes limites (para nenhum limite) novamente.  As formas equivalentes são `--min-parents=0` (qualquer commit que tenha 0 ou mais pais) e `--max-parents=-1` (os números negativos indicam nenhum limite acima)."

#. type: Plain text
#: en/rev-list-options.txt:138
#, priority:260
msgid "When finding commits to include, follow only the first parent commit upon seeing a merge commit.  This option can give a better overview when viewing the evolution of a particular topic branch, because merges into a topic branch tend to be only about adjusting to updated upstream from time to time, and this option allows you to ignore the individual commits brought in to your history by such a merge."
msgstr "Ao encontrar os commits que serão incluídos, siga apenas o primeiro commit principal ao ver a mesclagem de um commit.  Essa opção pode lhe fornecer uma melhor visão geral durante a visualização da evolução de um tópico específico no ramo, pois faz a mesclagem em um tópico no ramo e tende a ser apenas sobre o ajuste das atualizações upstream de tempos em tempos, esta opção permite ignorar os commits individuais trazidas para o seu histórico feitas por essa mesclagem."

#. type: Plain text
#: en/rev-list-options.txt:142
#, priority:260
msgid "This option also changes default diff format for merge commits to `first-parent`, see `--diff-merges=first-parent` for details."
msgstr "Esta opção também muda o formato diff padrão para a mesclagem dos commits para `first-parent`, consulte `--diff-merges=first-parent` para mais detalhes."

#. type: Labeled list
#: en/rev-list-options.txt:144
#, ignore-same, no-wrap, priority:260
msgid "--exclude-first-parent-only"
msgstr "--exclude-first-parent-only"

#. type: Plain text
#: en/rev-list-options.txt:150
#, priority:260
msgid "When finding commits to exclude (with a '{caret}'), follow only the first parent commit upon seeing a merge commit.  This can be used to find the set of changes in a topic branch from the point where it diverged from the remote branch, given that arbitrary merges can be valid topic branch changes."
msgstr "Ao encontrar os commits para serem excluídos (com um '{caret}'), siga apenas o primeiro commit principal ao ver um commit para ser mesclado.  Isso pode ser usado para encontrar o conjunto de alterações num determinado ramo a partir do ponto em que ele divergiu do ramo remoto, dado que as mesclagens arbitrárias podem ser alterações válidas no tópico do ramo."

#. type: Plain text
#: en/rev-list-options.txt:154
#, priority:260
msgid "Reverses the meaning of the '{caret}' prefix (or lack thereof)  for all following revision specifiers, up to the next `--not`."
msgstr "Inverte o significado do prefixo '{cursor}' (ou falta dele)  para todos os especificadores das revisões seguintes, até o próximo `--not`."

#. type: Plain text
#: en/rev-list-options.txt:158
#, priority:260
msgid "Pretend as if all the refs in `refs/`, along with `HEAD`, are listed on the command line as '<commit>'."
msgstr "Finja como se todos os refs em `refs/` junto com `HEAD` estejam listados na linha de comando como '<commit>'."

#. type: Labeled list
#: en/rev-list-options.txt:159
#, no-wrap, priority:260
msgid "--branches[=<pattern>]"
msgstr "--branches[=<padrão>]"

#. type: Plain text
#: en/rev-list-options.txt:164
#, priority:260
msgid "Pretend as if all the refs in `refs/heads` are listed on the command line as '<commit>'. If '<pattern>' is given, limit branches to ones matching given shell glob. If pattern lacks '?', '{asterisk}', or '[', '/{asterisk}' at the end is implied."
msgstr "Finja como se todas as refs no `refs/heads` estejam listadas na linha de comando como '<commit>'. Caso '<padrão>' seja utilizado, limite os ramos para aqueles que coincidam com a \"shell blob\" informada. Caso o padrão não tenha '?', '{asterisco}', ou '[', '/{asterisco}' no final é implícito."

#. type: Labeled list
#: en/rev-list-options.txt:165
#, no-wrap, priority:260
msgid "--tags[=<pattern>]"
msgstr "--tags[=<padrão>]"

#. type: Plain text
#: en/rev-list-options.txt:170
#, priority:260
msgid "Pretend as if all the refs in `refs/tags` are listed on the command line as '<commit>'. If '<pattern>' is given, limit tags to ones matching given shell glob. If pattern lacks '?', '{asterisk}', or '[', '/{asterisk}' at the end is implied."
msgstr "Finja como se todas as refs no `refs/remotes` estejam listados na linha de comando como '<commit>'. Caso '<padrão>' seja utilizado, limite os ramos para aqueles que coincidam com a \"shell blob\" informada. Caso o padrão não tenha '?', '{asterisco}', ou '[', '/{asterisco}' no final é implícito."

#. type: Labeled list
#: en/rev-list-options.txt:171
#, no-wrap, priority:260
msgid "--remotes[=<pattern>]"
msgstr "--remotes[=<padrão>]"

#. type: Plain text
#: en/rev-list-options.txt:176
#, priority:260
msgid "Pretend as if all the refs in `refs/remotes` are listed on the command line as '<commit>'. If '<pattern>' is given, limit remote-tracking branches to ones matching given shell glob.  If pattern lacks '?', '{asterisk}', or '[', '/{asterisk}' at the end is implied."
msgstr "Finja como se todos as refs no `refs/remotes` estejam listados na linha de comando como '<commit>'. Caso um '<padrão>' seja utilizado, limite as ramificações rastreadas remotamente que coincidam com aqueles da \"shel glob\" informada.  Caso o padrão não tenha '?', '{asterisco}', ou '[', '/{asterisco}' no final é implícito."

#. type: Labeled list
#: en/rev-list-options.txt:177
#, no-wrap, priority:260
msgid "--glob=<glob-pattern>"
msgstr "--glob=<glob-pattern>"

#. type: Plain text
#: en/rev-list-options.txt:182
#, priority:260
msgid "Pretend as if all the refs matching shell glob '<glob-pattern>' are listed on the command line as '<commit>'. Leading 'refs/', is automatically prepended if missing. If pattern lacks '?', '{asterisk}', or '[', '/{asterisk}' at the end is implied."
msgstr "Finja como se todos as refs coincidentes com \"shell glob\" '<glob-pattern>' estejam listados na linha de comando como '<commit>'. A 'refs/' principal é anexada automaticamente caso esteja ausente. Caso o padrão não tenha '?', '{asterisco}', ou '[', '/{asterisco}' no final é implícito."

#. type: Labeled list
#: en/rev-list-options.txt:198
#, ignore-same, no-wrap, priority:260
msgid "--reflog"
msgstr "--reflog"

#. type: Plain text
#: en/rev-list-options.txt:201
#, priority:260
msgid "Pretend as if all objects mentioned by reflogs are listed on the command line as `<commit>`."
msgstr "Finja que todos os objetos mencionados pelos `reflogs` estejam listados na linha de comando como `<commit>`."

#. type: Labeled list
#: en/rev-list-options.txt:202
#, ignore-same, no-wrap, priority:260
msgid "--alternate-refs"
msgstr "--alternate-refs"

#. type: Plain text
#: en/rev-list-options.txt:209
#, priority:260
msgid "Pretend as if all objects mentioned as ref tips of alternate repositories were listed on the command line. An alternate repository is any repository whose object directory is specified in `objects/info/alternates`.  The set of included objects may be modified by `core.alternateRefsCommand`, etc. See linkgit:git-config[1]."
msgstr "Finja como se todos os objetos mencionados como dicas \"ref\" dos repositórios alternativos fossem listados na linha de comando. Um repositório alternativo é qualquer repositório cujo diretório dos objetos seja definido no `objects/info/alternates`.  O conjunto dos objetos incluídos podem ser modificados pelo `core.alternateRefsCommand`, etc. Consulte linkgit:git-config[1]."

#. type: Plain text
#: en/rev-list-options.txt:217
#, priority:260
msgid "By default, all working trees will be examined by the following options when there are more than one (see linkgit:git-worktree[1]): `--all`, `--reflog` and `--indexed-objects`.  This option forces them to examine the current working tree only."
msgstr "É predefinido que todas as árvores de trabalho serão examinadas através das seguintes opções quando houver mais de uma (consulte linkgit:git-worktree[1]): `--all`, `--reflog` e `--indexed-objects`.  Esta opção impõem o exame seja feito apenas na árvore de trabalho atual."

#. type: Plain text
#: en/rev-list-options.txt:221
#, priority:260
msgid "Upon seeing an invalid object name in the input, pretend as if the bad input was not given."
msgstr "Ao ver um nome de objeto inválido na entrada, finja que a entrada incorreta não foi informada."

#. type: Labeled list
#: en/rev-list-options.txt:223 en/rev-list-options.txt:777
#, ignore-same, no-wrap, priority:260
msgid "--bisect"
msgstr "--bisect"

#. type: Plain text
#: en/rev-list-options.txt:228
#, priority:260
msgid "Pretend as if the bad bisection ref `refs/bisect/bad` was listed and as if it was followed by `--not` and the good bisection refs `refs/bisect/good-*` on the command line."
msgstr "Finja como se uma bisseção ruim \"ref\" `refs/bisect/bad` estivesse listada e como se fosse seguida por `--not` e a boa bisseção refs `refs/bisect/good-*` na linha de comando."

#. type: Plain text
#: en/rev-list-options.txt:235
#, priority:260
msgid "In addition to the '<commit>' listed on the command line, read them from the standard input. If a `--` separator is seen, stop reading commits and start reading paths to limit the result."
msgstr "Além dos '<commits>' listados na linha de comando, leia-os na entrada padrão. Caso um separador `--` seja visto, pare de ler os commits e comece a ler os caminhos para limitar o resultado."

#. type: Plain text
#: en/rev-list-options.txt:243
#, priority:260
msgid "Don't print anything to standard output.  This form is primarily meant to allow the caller to test the exit status to see if a range of objects is fully connected (or not).  It is faster than redirecting stdout to `/dev/null` as the output does not have to be formatted."
msgstr "Não imprima nada na saída padrão.  Este formulário tem como principal objetivo, permitir que a pessoa que chame, teste a condição da saída para verificar se um conjunto de objetos está totalmente conectado (ou não).  É mais rápido que redirecionar o stdout para `/dev/null`, pois a saída não precisa ser formatada."

#. type: Labeled list
#: en/rev-list-options.txt:244
#, ignore-same, no-wrap, priority:260
msgid "--disk-usage"
msgstr "--disk-usage"

#. type: Labeled list
#: en/rev-list-options.txt:245
#, fuzzy, no-wrap, priority:260
#| msgid "--disk-usage"
msgid "--disk-usage=human"
msgstr "--disk-usage"

#. type: Plain text
#: en/rev-list-options.txt:255
#, fuzzy, priority:260
#| msgid "Suppress normal output; instead, print the sum of the bytes used for on-disk storage by the selected commits or objects. This is equivalent to piping the output into `git cat-file --batch-check='%(objectsize:disk)'`, except that it runs much faster (especially with `--use-bitmap-index`). See the `CAVEATS` section in linkgit:git-cat-file[1] for the limitations of what \"on-disk storage\" means."
msgid "Suppress normal output; instead, print the sum of the bytes used for on-disk storage by the selected commits or objects. This is equivalent to piping the output into `git cat-file --batch-check='%(objectsize:disk)'`, except that it runs much faster (especially with `--use-bitmap-index`). See the `CAVEATS` section in linkgit:git-cat-file[1] for the limitations of what \"on-disk storage\" means.  With the optional value `human`, on-disk storage size is shown in human-readable string(e.g. 12.24 Kib, 3.50 Mib)."
msgstr "Suprima a saída normal; em vez disso, imprima a soma dos bytes utilizados para o armazenamento em disco pelos commits ou pelos objetos selecionados. Isso é o o mesmo que canalizar a saída para `git cat-file --batch-check='%(objectsize:disk)'`, exceto que roda muito mais rápido (especialmente com `--use-bitmap-index`). Consulte a seção `RESSALVAS` em linkgit:git-cat-file[1] para conhecer as limitações do que significa o \"armazenamento em disco\"."

#. type: Labeled list
#: en/rev-list-options.txt:257
#, ignore-same, no-wrap, priority:260
msgid "--cherry-mark"
msgstr "--cherry-mark"

#. type: Plain text
#: en/rev-list-options.txt:260
#, priority:260
msgid "Like `--cherry-pick` (see below) but mark equivalent commits with `=` rather than omitting them, and inequivalent ones with `+`."
msgstr "Como `--cherry-pick` (veja abaixo), porém marque os commits equivalentes com `=` ao invés de omiti-los e equivalentes com `+`."

#. type: Labeled list
#: en/rev-list-options.txt:261
#, ignore-same, no-wrap, priority:260
msgid "--cherry-pick"
msgstr "--cherry-pick"

#. type: Plain text
#: en/rev-list-options.txt:265
#, priority:260
msgid "Omit any commit that introduces the same change as another commit on the ``other side'' when the set of commits are limited with symmetric difference."
msgstr "Omitir qualquer commit que apresente a mesma alteração como em outro commit do ``outro lado\" quando o conjunto de commits são limitadas com diferença simétrica."

#. type: Plain text
#: en/rev-list-options.txt:273
#, priority:260
msgid "For example, if you have two branches, `A` and `B`, a usual way to list all commits on only one side of them is with `--left-right` (see the example below in the description of the `--left-right` option). However, it shows the commits that were cherry-picked from the other branch (for example, ``3rd on b'' may be cherry-picked from branch A). With this option, such pairs of commits are excluded from the output."
msgstr "Como por exemplo, caso você tenha dois ramos, `A` e `B`, uma maneira comum de listar todos os commits em apenas um lado deles é com a opção `--left-right` (veja o exemplo abaixo na descrição da opção `--left-right`). No entanto, exibe os commits que foram selecionados de forma seletiva no outro ramo (por exemplo, ``3º no b'' pode ser a escolha seletiva do ramo `A`). Com esta opção, estes pares de commits são excluídos da saída."

#. type: Plain text
#: en/rev-list-options.txt:279
#, priority:260
msgid "List only commits on the respective side of a symmetric difference, i.e. only those which would be marked `<` resp. `>` by `--left-right`."
msgstr "Liste apenas os commits nos respectivos lados de um \"diff\" simétrico, ou seja, apenas aqueles que seriam marcados como `<` resp. `>` por `--left-right`."

#. type: Plain text
#: en/rev-list-options.txt:285
#, ignore-ellipsis, priority:260
msgid "For example, `--cherry-pick --right-only A...B` omits those commits from `B` which are in `A` or are patch-equivalent to a commit in `A`. In other words, this lists the `+` commits from `git cherry A B`.  More precisely, `--cherry-pick --right-only --no-merges` gives the exact list."
msgstr "Por exemplo, a opção `--cherry-pick --right-only A...B` omite os commits de `B` que estão em `A` ou são equivalentes ao patch para um commit em `A`. Em outras palavras, lista os commits com sinal `+` do `git cherry A B`.  Mais precisamente, `--cherry-pick --right-only --no-merges` informa a lista exata."

#. type: Labeled list
#: en/rev-list-options.txt:286
#, ignore-same, no-wrap, priority:260
msgid "--cherry"
msgstr "--cherry"

#. type: Plain text
#: en/rev-list-options.txt:292
#, ignore-ellipsis, priority:260
msgid "A synonym for `--right-only --cherry-mark --no-merges`; useful to limit the output to the commits on our side and mark those that have been applied to the other side of a forked history with `git log --cherry upstream...mybranch`, similar to `git cherry upstream mybranch`."
msgstr "Um sinônimo para `--right-only --cherry-mark --no-merges`; útil para limitar a saída dos commits do nosso lado e marcar aqueles que forem marcados no histórico bifurcado do outro lado com `git log --cherry upstream...meu-ramo`, semelhante ao `git cherry upstream meu-ramo`."

#. type: Labeled list
#: en/rev-list-options.txt:294
#, ignore-same, no-wrap, priority:260
msgid "--walk-reflogs"
msgstr "--walk-reflogs"

#. type: Plain text
#: en/rev-list-options.txt:300
#, ignore-ellipsis, priority:260
msgid "Instead of walking the commit ancestry chain, walk reflog entries from the most recent one to older ones.  When this option is used you cannot specify commits to exclude (that is, '{caret}commit', 'commit1..commit2', and 'commit1\\...commit2' notations cannot be used)."
msgstr "Em vez de percorrer a cadeia de ancestralidade do commit, passe pelas entradas do reflog vindo da mais recente para as mais antigas.  Quando esta opção é utilizada, você não pode definir os commits para exclusão (ou seja, as notações '{caret}commit', 'commit1..commit2' e 'commit1\\...commit2' não podem ser utilizadas)."

#. type: Plain text
#: en/rev-list-options.txt:307
#, priority:260
msgid "With `--pretty` format other than `oneline` and `reference` (for obvious reasons), this causes the output to have two extra lines of information taken from the reflog.  The reflog designator in the output may be shown as `ref@{Nth}` (where `Nth` is the reverse-chronological index in the reflog) or as `ref@{timestamp}` (with the timestamp for that entry), depending on a few rules:"
msgstr "Com o formato `--pretty` diferente do `oneline` e `reference` (por razões óbvias), isto faz com que a saída tenha duas linhas extras das informações extraídas do reflog.  O designador reflog na saída pode ser exibido como `ref@{Nth}` (onde `Nth` é o índice cronológico reverso no reflog) ou como `ref@{timestamp}` (com o registro de data e hora para esta entrada), dependendo de algumas regras:"

#. type: Plain text
#: en/rev-list-options.txt:311
#, priority:260
msgid "If the starting point is specified as `ref@{Nth}`, show the index format."
msgstr "Caso o ponto inicial seja utilizado como `ref@{Nth}`, exiba o formato do índice."

#. type: Plain text
#: en/rev-list-options.txt:314
#, priority:260
msgid "If the starting point was specified as `ref@{now}`, show the timestamp format."
msgstr "Caso o ponto inicial seja utilizado como `ref@{now}`, exiba o formato do registro de data e hora."

#. type: Plain text
#: en/rev-list-options.txt:317
#, priority:260
msgid "If neither was used, but `--date` was given on the command line, show the timestamp in the format requested by `--date`."
msgstr "Caso nenhum deles tenha sido utilizado, mas a opção `--data` foi utilizado na linha de comando, exibe o registro de data e hora no formato solicitado por `--data`."

#. type: Plain text
#: en/rev-list-options.txt:319
#, priority:260
msgid "Otherwise, show the index format."
msgstr "Caso contrário, exibe o formato do índice."

#. type: Plain text
#: en/rev-list-options.txt:325
#, priority:260
msgid "Under `--pretty=oneline`, the commit message is prefixed with this information on the same line.  This option cannot be combined with `--reverse`.  See also linkgit:git-reflog[1]."
msgstr "Em `pretty=oneline`, a mensagem do commit é prefixada com estas informações na mesma linha.  Esta opção não pode ser combinada com `--reverse`.  Consulte também linkgit:git-reflog[1]."

#. type: Plain text
#: en/rev-list-options.txt:327
#, priority:260
msgid "Under `--pretty=reference`, this information will not be shown at all."
msgstr "Esta informação não será exibida de forma alguma sob `--pretty = reference`."

#. type: Plain text
#: en/rev-list-options.txt:331
#, priority:260
msgid "After a failed merge, show refs that touch files having a conflict and don't exist on all heads to merge."
msgstr "Após uma falha na mesclagem, exiba as refs que estão em atrito com os arquivos e não existam em todos os `HEADS` que serão mesclados."

#. type: Labeled list
#: en/rev-list-options.txt:332
#, ignore-same, no-wrap, priority:260
msgid "--boundary"
msgstr "--boundary"

#. type: Plain text
#: en/rev-list-options.txt:335
#, priority:260
msgid "Output excluded boundary commits. Boundary commits are prefixed with `-`."
msgstr "O limite da exclusão dos commits que forem gerados. Os limites entre os commits são prefixados com `-`."

#. type: Labeled list
#: en/rev-list-options.txt:337
#, ignore-same, no-wrap, priority:260
msgid "--use-bitmap-index"
msgstr "--use-bitmap-index"

#. type: Plain text
#: en/rev-list-options.txt:342
#, priority:260
msgid "Try to speed up the traversal using the pack bitmap index (if one is available). Note that when traversing with `--objects`, trees and blobs will not have their associated path printed."
msgstr "Tente acelerar a passagem usando o índice do pacote bitmap (caso haja um disponível). Observe que ao percorrer com `--objects`, as árvores e as bolhas não terão o seu caminho associado impresso."

#. type: Labeled list
#: en/rev-list-options.txt:343
#, no-wrap, priority:260
msgid "--progress=<header>"
msgstr "--progress=<header>"

#. type: Plain text
#: en/rev-list-options.txt:346
#, priority:260
msgid "Show progress reports on stderr as objects are considered. The `<header>` text will be printed with each progress update."
msgstr "Exibe os relatórios de progresso no stderr à medida que os objetos são considerados. O texto `<header>` será impresso a cada atualização do progresso."

#. type: Title ~
#: en/rev-list-options.txt:349
#, no-wrap, priority:260
msgid "History Simplification"
msgstr "Simplificação do histórico"

#. type: Plain text
#: en/rev-list-options.txt:355
#, priority:260
msgid "Sometimes you are only interested in parts of the history, for example the commits modifying a particular <path>. But there are two parts of 'History Simplification', one part is selecting the commits and the other is how to do it, as there are various strategies to simplify the history."
msgstr "Às vezes, você está interessado apenas nas partes da história, por exemplo, os commit que alteraram um determinado <caminho>. Porém existem duas partes da 'Simplificação do Histórico', uma parte é a seleção dos commits e a outra é como fazê-lo, pois existem várias estratégias para simplificar o histórico."

#. type: Plain text
#: en/rev-list-options.txt:357
#, priority:260
msgid "The following options select the commits to be shown:"
msgstr "As seguintes opções selecionam os commits que serão exibidos:"

#. type: Labeled list
#: en/rev-list-options.txt:358
#, no-wrap, priority:260
msgid "<paths>"
msgstr "<caminhos>"

#. type: Plain text
#: en/rev-list-options.txt:360
#, priority:260
msgid "Commits modifying the given <paths> are selected."
msgstr "São selecionados os commits que alterarem os <caminhos> informados."

#. type: Labeled list
#: en/rev-list-options.txt:361
#, ignore-same, no-wrap, priority:260
msgid "--simplify-by-decoration"
msgstr "--simplify-by-decoration"

#. type: Plain text
#: en/rev-list-options.txt:363
#, priority:260
msgid "Commits that are referred by some branch or tag are selected."
msgstr "São selecionados os commits utilizados como referência por algumas ramificações ou tags."

#. type: Plain text
#: en/rev-list-options.txt:365
#, priority:260
msgid "Note that extra commits can be shown to give a meaningful history."
msgstr "Observe que os commits extras podem ser exibidos para fornecer um histórico significativo."

#. type: Plain text
#: en/rev-list-options.txt:367
#, priority:260
msgid "The following options affect the way the simplification is performed:"
msgstr "As seguintes opções afetam a maneira como a simplificação é feita:"

#. type: Labeled list
#: en/rev-list-options.txt:368 en/rev-list-options.txt:450
#, no-wrap, priority:260
msgid "Default mode"
msgstr "Modo predefinido"

#. type: Plain text
#: en/rev-list-options.txt:373
#, priority:260
msgid "Simplifies the history to the simplest history explaining the final state of the tree. Simplest because it prunes some side branches if the end result is the same (i.e. merging branches with the same content)"
msgstr "Simplifique o histórico para o mais simples, explicando a condição final da árvore. Mais simples, porque elimina algumas ramificações laterais caso o resultado final for o mesmo (ou seja, mescle os ramos com o mesmo conteúdo)"

#. type: Labeled list
#: en/rev-list-options.txt:374 en/rev-list-options.txt:728
#, ignore-same, no-wrap, priority:260
msgid "--show-pulls"
msgstr "--show-pulls"

#. type: Plain text
#: en/rev-list-options.txt:379
#, priority:260
msgid "Include all commits from the default mode, but also any merge commits that are not TREESAME to the first parent but are TREESAME to a later parent. This mode is helpful for showing the merge commits that \"first introduced\" a change to a branch."
msgstr "Inclua todas os commits no modo predefinido, porém também qualquer commits mesclado que não sejam 'TREESAME' para o primeiro parente, porém sejam 'TREESAME' para um parente posterior. Este modo auxilia na exibição do commit mesclado que \"introduziu primeiro\" a alteração em um ramo."

#. type: Labeled list
#: en/rev-list-options.txt:380
#, ignore-same, no-wrap, priority:260
msgid "--full-history"
msgstr "--full-history"

#. type: Plain text
#: en/rev-list-options.txt:382
#, priority:260
msgid "Same as the default mode, but does not prune some history."
msgstr "O mesmo que o modo predefinido, mas não corta parte do histórico."

#. type: Labeled list
#: en/rev-list-options.txt:383 en/rev-list-options.txt:518
#, ignore-same, no-wrap, priority:260
msgid "--dense"
msgstr "--dense"

#. type: Plain text
#: en/rev-list-options.txt:386
#, priority:260
msgid "Only the selected commits are shown, plus some to have a meaningful history."
msgstr "Apenas os commits selecionados são exibidos e mais alguns que tenham algum histórico significante."

#. type: Plain text
#: en/rev-list-options.txt:389
#, priority:260
msgid "All commits in the simplified history are shown."
msgstr "São exibidos todos os commits com um histórico simplificado."

#. type: Labeled list
#: en/rev-list-options.txt:390 en/rev-list-options.txt:529
#, ignore-same, no-wrap, priority:260
msgid "--simplify-merges"
msgstr "--simplify-merges"

#. type: Plain text
#: en/rev-list-options.txt:394
#, priority:260
msgid "Additional option to `--full-history` to remove some needless merges from the resulting history, as there are no selected commits contributing to this merge."
msgstr "Opção adicional para `--full-history` para remover algumas mesclagens desnecessárias do histórico resultante, pois não há commits selecionados contribuindo para essa mesclagem."

#. type: Labeled list
#: en/rev-list-options.txt:395 en/rev-list-options.txt:576
#, fuzzy, no-wrap, priority:260
#| msgid "--ancestry-path"
msgid "--ancestry-path[=<commit>]"
msgstr "--ancestry-path"

#. type: Plain text
#: en/rev-list-options.txt:403
#, fuzzy, priority:260
#| msgid "When given a range of commits to display (e.g. 'commit1..commit2' or 'commit2 {caret}commit1'), only display commits that exist directly on the ancestry chain between the 'commit1' and 'commit2', i.e. commits that are both descendants of 'commit1', and ancestors of 'commit2'."
msgid "When given a range of commits to display (e.g. 'commit1..commit2' or 'commit2 {caret}commit1'), only display commits in that range that are ancestors of <commit>, descendants of <commit>, or <commit> itself.  If no commit is specified, use 'commit1' (the excluded part of the range) as <commit>.  Can be passed multiple times; if so, a commit is included if it is any of the commits given or if it is an ancestor or descendant of one of them."
msgstr "Quando um intervalo dos commits é exibido (por exemplo, 'commit1..commit2' ou 'commit2 {caret}commit1'), apenas exibe os commits que existem diretamente na cadeia de ancestralidade entre o 'commit1' e o 'commit1', ou seja, os commits que são ambos descendentes doe 'commit1' e os ancestrais do 'commit2'."

#. type: Plain text
#: en/rev-list-options.txt:405
#, priority:260
msgid "A more detailed explanation follows."
msgstr "Segue explicações com mais detalhes."

#. type: Plain text
#: en/rev-list-options.txt:409
#, priority:260
msgid "Suppose you specified `foo` as the <paths>.  We shall call commits that modify `foo` !TREESAME, and the rest TREESAME.  (In a diff filtered for `foo`, they look different and equal, respectively.)"
msgstr "Suponha que você defina `foo` como o <caminho>.  Vamos chamar os commits que alteraram `foo` '!TREESAME', e o restante 'TREESAME'.  (Em um diff filtrado pelo `foo`, eles parecem diferentes e iguais, respectivamente.)"

#. type: Plain text
#: en/rev-list-options.txt:413
#, priority:260
msgid "In the following, we will always refer to the same example history to illustrate the differences between simplification settings.  We assume that you are filtering for a file `foo` in this commit graph:"
msgstr "A seguir, sempre nos referiremos ao mesmo exemplo do histórico para ilustrar as diferenças entre as configurações de simplificação.  Assumimos que esteja filtrando um arquivo `foo` neste grafo do commit:"

#. type: delimited block -
#: en/rev-list-options.txt:419
#, no-wrap, priority:260
msgid ""
"\t  .-A---M---N---O---P---Q\n"
"\t /     /   /   /   /   /\n"
"\tI     B   C   D   E   Y\n"
"\t \\   /   /   /   /   /\n"
"\t  `-------------'   X\n"
msgstr ""
"\t  .-A---M---N---O---P---Q\n"
"\t /     /   /   /   /   /\n"
"\tI     B   C   D   E   Y\n"
"\t \\   /   /   /   /   /\n"
"\t  `-------------'   X\n"

#. type: Plain text
#: en/rev-list-options.txt:422
#, priority:260
msgid "The horizontal line of history A---Q is taken to be the first parent of each merge.  The commits are:"
msgstr "A linha horizontal do histórico 'A---Q' é considerada o primeira origem de cada mesclagem.  Os commits são:"

#. type: Plain text
#: en/rev-list-options.txt:426
#, priority:260
msgid "`I` is the initial commit, in which `foo` exists with contents ``asdf'', and a file `quux` exists with contents ``quux''. Initial commits are compared to an empty tree, so `I` is !TREESAME."
msgstr "O `I` é o commit inicial onde `foo` existe com o conteúdo ``asdf'' e existe um arquivo `quux` com o conteúdo` `quux ''. Os commits iniciais são comparados com uma árvore vazia, então o `I` é !TREESAME."

#. type: Plain text
#: en/rev-list-options.txt:428
#, priority:260
msgid "In `A`, `foo` contains just ``foo''."
msgstr "Em `A`, `foo` contém apenas ``foo''."

#. type: Plain text
#: en/rev-list-options.txt:431
#, priority:260
msgid "`B` contains the same change as `A`.  Its merge `M` is trivial and hence TREESAME to all parents."
msgstr "O `B` contém a mesma alteração que `A`.  A mesclagem `M` é trivial e portanto, 'TREESAME' para todos os pais."

#. type: Plain text
#: en/rev-list-options.txt:434
#, priority:260
msgid "`C` does not change `foo`, but its merge `N` changes it to ``foobar'', so it is not TREESAME to any parent."
msgstr "O `C` não muda `foo`, mas a sua mesclagem `N` o altera para ``foobar'', portanto não é 'TREESAME' para nenhum dos pais."

#. type: Plain text
#: en/rev-list-options.txt:437
#, priority:260
msgid "`D` sets `foo` to ``baz''. Its merge `O` combines the strings from `N` and `D` to ``foobarbaz''; i.e., it is not TREESAME to any parent."
msgstr "`D` define `foo` para ``baz''. Mescla `O` combinado com textos vindos de ` N` e `D` a ``foobarbaz''; ou seja, não é \"TREESAME\" para nenhuma das origens."

#. type: Plain text
#: en/rev-list-options.txt:440
#, priority:260
msgid "`E` changes `quux` to ``xyzzy'', and its merge `P` combines the strings to ``quux xyzzy''. `P` is TREESAME to `O`, but not to `E`."
msgstr "O `E` altera `quux` para ``xyzzy'' e a sua mesclagem `P` combina as sequências dos caracteres para ``quux xyzzy''. O `P` é 'TREESAME' para `O`, porém não para `E`."

#. type: Plain text
#: en/rev-list-options.txt:444
#, priority:260
msgid "`X` is an independent root commit that added a new file `side`, and `Y` modified it. `Y` is TREESAME to `X`. Its merge `Q` added `side` to `P`, and `Q` is TREESAME to `P`, but not to `Y`."
msgstr "O `X` é um commit raiz independente que adicionou um novo arquivo `side`, e `Y` o alterou. O `Y` é 'TREESAME' para `X`. Mescla `Q` adicionou `side` para `P`, e `Q` e 'TREESAME' para `P`, mas não para `Y`."

#. type: Plain text
#: en/rev-list-options.txt:449
#, priority:260
msgid "`rev-list` walks backwards through history, including or excluding commits based on whether `--full-history` and/or parent rewriting (via `--parents` or `--children`) are used. The following settings are available."
msgstr "O `rev list` retrocede no histórico, incluindo ou excluindo os commits com base no uso do `--full-history` e/ou na reescrita dos pais (através da opção `--parents` ou `--children`). As seguintes configurações estão disponíveis."

#. type: Plain text
#: en/rev-list-options.txt:457
#, priority:260
msgid "Commits are included if they are not TREESAME to any parent (though this can be changed, see `--sparse` below).  If the commit was a merge, and it was TREESAME to one parent, follow only that parent.  (Even if there are several TREESAME parents, follow only one of them.)  Otherwise, follow all parents."
msgstr "Os commits serão incluídas caso não sejam 'TREESAME' para nenhum dos parentes (embora isso possa ser alterado, consulte a opção `--sparse` abaixo).  Se o commit foi uma mesclagem e também foi um 'TREESAME' para um parente, siga apenas este parente.  (Mesmo que haja vários parentes 'TREESAME', siga apenas um deles.) Caso contrário, siga todos."

#. type: Plain text
#: en/rev-list-options.txt:459
#, priority:260
msgid "This results in:"
msgstr "Isso resulta em:"

#. type: delimited block -
#: en/rev-list-options.txt:464
#, no-wrap, priority:260
msgid ""
"\t  .-A---N---O\n"
"\t /     /   /\n"
"\tI---------D\n"
msgstr ""
"\t  .-A---N---O\n"
"\t /     /   /\n"
"\tI---------D\n"

#. type: Plain text
#: en/rev-list-options.txt:470
#, priority:260
msgid "Note how the rule to only follow the TREESAME parent, if one is available, removed `B` from consideration entirely.  `C` was considered via `N`, but is TREESAME.  Root commits are compared to an empty tree, so `I` is !TREESAME."
msgstr "Observe como a regra para seguir apenas a origem TREESAME, caso haja um, removeu `B` completamente.  `C` foi considerado através do `N`, mas é o TREESAME.  Os commits raiz são comparadas com uma árvore vazia, então `I` é !TREESAME."

#. type: Plain text
#: en/rev-list-options.txt:474
#, priority:260
msgid "Parent/child relations are only visible with `--parents`, but that does not affect the commits selected in default mode, so we have shown the parent lines."
msgstr "As relações entre pai/filho são visíveis apenas com `--parents`, porém isso não afeta os commits selecionados no modo predefinido, portanto, mostramos as linhas dos pais."

#. type: Labeled list
#: en/rev-list-options.txt:475
#, no-wrap, priority:260
msgid "--full-history without parent rewriting"
msgstr "`--full-history` sem reescrita anterior"

#. type: Plain text
#: en/rev-list-options.txt:481
#, priority:260
msgid "This mode differs from the default in one point: always follow all parents of a merge, even if it is TREESAME to one of them.  Even if more than one side of the merge has commits that are included, this does not imply that the merge itself is! In the example, we get"
msgstr "Este modo difere da predefinição em um ponto: sempre siga todos os pais de uma mesclagem, mesmo que seja 'TREESAME' para um deles.  Mesmo se mais de um lado da mesclagem tiver commits que estejam inclusos, isso não implica que a própria mesclagem seja! No exemplo, nós temos"

#. type: delimited block -
#: en/rev-list-options.txt:484
#, no-wrap, priority:260
msgid "\tI  A  B  N  D  O  P  Q\n"
msgstr "\tI  A  B  N  D  O  P  Q\n"

#. type: Plain text
#: en/rev-list-options.txt:489
#, priority:260
msgid "`M` was excluded because it is TREESAME to both parents.  `E`, `C` and `B` were all walked, but only `B` was !TREESAME, so the others do not appear."
msgstr "O `M` foi excluído porque é 'TREESAME' para ambos os pais.  `E`, `C` e `B` foram todos percorridos, porém apenas `B` foi '!TREESAME', para que os outros não apareçam."

#. type: Plain text
#: en/rev-list-options.txt:493
#, priority:260
msgid "Note that without parent rewriting, it is not really possible to talk about the parent/child relationships between the commits, so we show them disconnected."
msgstr "Observe que, sem reescrever os pais, não é realmente possível falar sobre os relacionamentos pai/filho entre os commits, portanto, mostramos-lhes desconectados."

#. type: Labeled list
#: en/rev-list-options.txt:494
#, no-wrap, priority:260
msgid "--full-history with parent rewriting"
msgstr "`--full-history` com reescrita anterior"

#. type: Plain text
#: en/rev-list-options.txt:497
#, priority:260
msgid "Ordinary commits are only included if they are !TREESAME (though this can be changed, see `--sparse` below)."
msgstr "Os commits comuns são incluídos apenas se forem '!TREESAME' (embora é possível alterar isso, consulte `--sparse` abaixo)."

#. type: Plain text
#: en/rev-list-options.txt:501
#, priority:260
msgid "Merges are always included.  However, their parent list is rewritten: Along each parent, prune away commits that are not included themselves.  This results in"
msgstr "As mesclagens estão sempre inclusas.  No entanto, sua lista de origens é reescrita: em cada origem, remova os commit que não foram inclusos.  Isto resulta no"

#. type: delimited block -
#: en/rev-list-options.txt:508
#, no-wrap, priority:260
msgid ""
"\t  .-A---M---N---O---P---Q\n"
"\t /     /   /   /   /\n"
"\tI     B   /   D   /\n"
"\t \\   /   /   /   /\n"
"\t  `-------------'\n"
msgstr ""
"\t  .-A---M---N---O---P---Q\n"
"\t /     /   /   /   /\n"
"\tI     B   /   D   /\n"
"\t \\   /   /   /   /\n"
"\t  `-------------'\n"

#. type: Plain text
#: en/rev-list-options.txt:514
#, priority:260
msgid "Compare to `--full-history` without rewriting above.  Note that `E` was pruned away because it is TREESAME, but the parent list of P was rewritten to contain `E`'s parent `I`.  The same happened for `C` and `N`, and `X`, `Y` and `Q`."
msgstr "Compare com a opção `--full-history` sem reescrever acima.  Observe que `E` foi removido porque é um 'TREESAME', porém a lista dos parentes `P` foi reescrita para conter `E` parente do `I`.  O mesmo aconteceu para `C` e `N`, e `X`, `Y` e `Q`."

#. type: Plain text
#: en/rev-list-options.txt:517
#, priority:260
msgid "In addition to the above settings, you can change whether TREESAME affects inclusion:"
msgstr "Além das configurações acima, é possível alterar se o 'TREESAME' afeta a inclusão:"

#. type: Plain text
#: en/rev-list-options.txt:521
#, priority:260
msgid "Commits that are walked are included if they are not TREESAME to any parent."
msgstr "Os commits encaminhados serão incluídos caso não sejam um 'TREESAME' para nenhum dos parentes."

#. type: Plain text
#: en/rev-list-options.txt:524
#, priority:260
msgid "All commits that are walked are included."
msgstr "Todos os commits que forem passados serão incluidos."

#. type: Plain text
#: en/rev-list-options.txt:528
#, priority:260
msgid "Note that without `--full-history`, this still simplifies merges: if one of the parents is TREESAME, we follow only that one, so the other sides of the merge are never walked."
msgstr "Observe que sem o `--full-history', isso ainda simplifica as mesclagens: caso um dos pais seja 'TREESAME', seguiremos apenas este, para que os outros lados da mesclagem nunca sejam percorridos."

#. type: Plain text
#: en/rev-list-options.txt:532
#, priority:260
msgid "First, build a history graph in the same way that `--full-history` with parent rewriting does (see above)."
msgstr "Primeiro, construa um grafo do histórico da mesma maneira que `--full-history` com a reescrita dos parentes (veja acima)."

#. type: Plain text
#: en/rev-list-options.txt:535
#, priority:260
msgid "Then simplify each commit `C` to its replacement `C'` in the final history according to the following rules:"
msgstr "Simplifique cada commit `C` para a sua reposição `C'` no histórico final, de acordo com as seguintes regras:"

#. type: Plain text
#: en/rev-list-options.txt:538
#, priority:260
msgid "Set `C'` to `C`."
msgstr "Defina `C'` para `C`."

#. type: Plain text
#: en/rev-list-options.txt:543
#, priority:260
msgid "Replace each parent `P` of `C'` with its simplification `P'`.  In the process, drop parents that are ancestors of other parents or that are root commits TREESAME to an empty tree, and remove duplicates, but take care to never drop all parents that we are TREESAME to."
msgstr "Substitua cada pai `P` do `C'` por sua simplificação `P'`.  No processo, solte os pais que são ancestrais dos outros pais ou que os commits raiz 'TREESAME' em uma árvore vazia e remova as duplicatas, porém tome cuidado para nunca descartar todos os pais já que somos 'TREESAME' também."

#. type: Plain text
#: en/rev-list-options.txt:547
#, priority:260
msgid "If after this parent rewriting, `C'` is a root or merge commit (has zero or >1 parents), a boundary commit, or !TREESAME, it remains.  Otherwise, it is replaced with its only parent."
msgstr "Se após esta reescrita da origem, o `C'` for um commit raiz ou uma mesclagem (tem zero ou > origens), um commit limite ou !TREESAME, será mantido.  Caso contrário, será substituído pela sua única origem."

#. type: Plain text
#: en/rev-list-options.txt:551
#, priority:260
msgid "The effect of this is best shown by way of comparing to `--full-history` with parent rewriting.  The example turns into:"
msgstr "O efeito disso é melhor mostrado através da comparação com a opção `--full-history` com a reescrita dos pais.  O exemplo se transforma em:"

#. type: delimited block -
#: en/rev-list-options.txt:558
#, no-wrap, priority:260
msgid ""
"\t  .-A---M---N---O\n"
"\t /     /       /\n"
"\tI     B       D\n"
"\t \\   /       /\n"
"\t  `---------'\n"
msgstr ""
"\t  .-A---M---N---O\n"
"\t /     /       /\n"
"\tI     B       D\n"
"\t \\   /       /\n"
"\t  `---------'\n"

#. type: Plain text
#: en/rev-list-options.txt:561
#, priority:260
msgid "Note the major differences in `N`, `P`, and `Q` over `--full-history`:"
msgstr "Observe que as maiores diferenças entre `N`, `P`, e `Q` sobre `--full-history`:"

#. type: Plain text
#: en/rev-list-options.txt:565
#, priority:260
msgid "`N`'s parent list had `I` removed, because it is an ancestor of the other parent `M`.  Still, `N` remained because it is !TREESAME."
msgstr "A lista dos pais de `N` teve `I` removida, porque é um ancestral do outro pai `M`.  Ainda assim, `N` permaneceu porque é '!TREESAME'."

#. type: Plain text
#: en/rev-list-options.txt:568
#, priority:260
msgid "`P`'s parent list similarly had `I` removed.  `P` was then removed completely, because it had one parent and is TREESAME."
msgstr "A lista de pais de `P` também removeu o `I`.  O `P` foi então removido completamente, porque tinha um pai e é 'TREESAME'."

#. type: Plain text
#: en/rev-list-options.txt:572
#, priority:260
msgid "`Q`'s parent list had `Y` simplified to `X`. `X` was then removed, because it was a TREESAME root. `Q` was then removed completely, because it had one parent and is TREESAME."
msgstr "A lista de pais de `Q` tinha` Y` simplificado para `X`. O `X` foi então removido, porque era uma raiz 'TREESAME'. O `Q` foi removido completamente, porque tinha um pai e é 'TREESAME'."

#. type: Plain text
#: en/rev-list-options.txt:575
#, priority:260
msgid "There is another simplification mode available:"
msgstr "Há um outra modo de simplificação disponível:"

#. type: Plain text
#: en/rev-list-options.txt:580
#, priority:260
msgid "Limit the displayed commits to those which are an ancestor of <commit>, or which are a descendant of <commit>, or are <commit> itself."
msgstr ""

#. type: Plain text
#: en/rev-list-options.txt:582
#, priority:260
msgid "As an example use case, consider the following commit history:"
msgstr "Como um exemplo de caso, considere o seguinte histórico do commit:"

#. type: delimited block -
#: en/rev-list-options.txt:589
#, no-wrap, priority:260
msgid ""
"\t    D---E-------F\n"
"\t   /     \\       \\\n"
"\t  B---C---G---H---I---J\n"
"\t /                     \\\n"
"\tA-------K---------------L--M\n"
msgstr ""
"\t    D---E-------F\n"
"\t   /     \\       \\\n"
"\t  B---C---G---H---I---J\n"
"\t /                     \\\n"
"\tA-------K---------------L--M\n"

#. type: Plain text
#: en/rev-list-options.txt:597
#, priority:260
msgid "A regular 'D..M' computes the set of commits that are ancestors of `M`, but excludes the ones that are ancestors of `D`. This is useful to see what happened to the history leading to `M` since `D`, in the sense that ``what does `M` have that did not exist in `D`''. The result in this example would be all the commits, except `A` and `B` (and `D` itself, of course)."
msgstr "Um 'D..M' regular calcula o conjunto dos commits que são ancestrais do `M`, mas exclui os que são ancestrais do `D`. Isso é útil para ver o que aconteceu com a história que levou a `M` desde o `D`, no sentido que ``o que `M` possui e que não existia em `D`''. O resultado neste exemplo seria todos os commits, exceto `A` e `B` (e `D`, obviamente)."

#. type: Plain text
#: en/rev-list-options.txt:603
#, priority:260
msgid "When we want to find out what commits in `M` are contaminated with the bug introduced by `D` and need fixing, however, we might want to view only the subset of 'D..M' that are actually descendants of `D`, i.e.  excluding `C` and `K`. This is exactly what the `--ancestry-path` option does. Applied to the 'D..M' range, it results in:"
msgstr "Quando queremos descobrir o qual commit em `M` está contaminado com o bug introduzido por `D` e precisa ser corrigido, contudo, podemos querer visualizar apenas o subconjunto 'D..M' que são realmente descendentes do `D`, por exemplo, excluindo `C` e `K`. É exatamente isso que a opção `--ancestry-path` faz. Aplicado à faixa 'D..M', resulta em:"

#. type: delimited block -
#: en/rev-list-options.txt:610
#, no-wrap, priority:260
msgid ""
"\t\tE-------F\n"
"\t\t \\       \\\n"
"\t\t  G---H---I---J\n"
"\t\t\t       \\\n"
"\t\t\t\tL--M\n"
msgstr ""
"\t\tE-------F\n"
"\t\t \\       \\\n"
"\t\t  G---H---I---J\n"
"\t\t\t       \\\n"
"\t\t\t\tL--M\n"

#. type: Plain text
#: en/rev-list-options.txt:615
#, priority:260
msgid "We can also use `--ancestry-path=D` instead of `--ancestry-path` which means the same thing when applied to the 'D..M' range but is just more explicit."
msgstr ""

#. type: Plain text
#: en/rev-list-options.txt:620
#, priority:260
msgid "If we instead are interested in a given topic within this range, and all commits affected by that topic, we may only want to view the subset of `D..M` which contain that topic in their ancestry path.  So, using `--ancestry-path=H D..M` for example would result in:"
msgstr ""

#. type: delimited block -
#: en/rev-list-options.txt:627
#, fuzzy, no-wrap, priority:260
#| msgid ""
#| "\t\tE-------F\n"
#| "\t\t \\       \\\n"
#| "\t\t  G---H---I---J\n"
#| "\t\t\t       \\\n"
#| "\t\t\t\tL--M\n"
msgid ""
"\t\tE\n"
"\t\t \\\n"
"\t\t  G---H---I---J\n"
"\t\t\t       \\\n"
"\t\t\t\tL--M\n"
msgstr ""
"\t\tE-------F\n"
"\t\t \\       \\\n"
"\t\t  G---H---I---J\n"
"\t\t\t       \\\n"
"\t\t\t\tL--M\n"

#. type: Plain text
#: en/rev-list-options.txt:630
#, priority:260
msgid "Whereas `--ancestry-path=K D..M` would result in"
msgstr ""

#. type: delimited block -
#: en/rev-list-options.txt:633
#, no-wrap, priority:260
msgid "\t\tK---------------L--M\n"
msgstr ""

#. type: Plain text
#: en/rev-list-options.txt:637
#, priority:260
msgid "Before discussing another option, `--show-pulls`, we need to create a new example history."
msgstr "Antes de discutir outra opção, `--show-pulls`, precisamos criar um novo histórico de exemplo."

#. type: Plain text
#: en/rev-list-options.txt:642
#, priority:260
msgid "A common problem users face when looking at simplified history is that a commit they know changed a file somehow does not appear in the file's simplified history. Let's demonstrate a new example and show how options such as `--full-history` and `--simplify-merges` works in that case:"
msgstr "Um problema comum que os usuários enfrentam ao examinar o histórico simplificado é que um commit que eles conhecem alterou um arquivo e que de alguma maneira não aparece no histórico simplificado do arquivo. Vamos demonstrar um novo exemplo e exibir como as opções como `--full-history` e `--simplify-merges` funcionam neste caso:"

#. type: delimited block -
#: en/rev-list-options.txt:650
#, no-wrap, priority:260
msgid ""
"\t  .-A---M-----C--N---O---P\n"
"\t /     / \\  \\  \\/   /   /\n"
"\tI     B   \\  R-'`-Z'   /\n"
"\t \\   /     \\/         /\n"
"\t  \\ /      /\\        /\n"
"\t   `---X--'  `---Y--'\n"
msgstr ""
"\t  .-A---M-----C--N---O---P\n"
"\t /     / \\  \\  \\/   /   /\n"
"\tI     B   \\  R-'`-Z'   /\n"
"\t \\   /     \\/         /\n"
"\t  \\ /      /\\        /\n"
"\t   `---X--'  `---Y--'\n"

#. type: Plain text
#: en/rev-list-options.txt:663
#, priority:260
msgid "For this example, suppose `I` created `file.txt` which was modified by `A`, `B`, and `X` in different ways. The single-parent commits `C`, `Z`, and `Y` do not change `file.txt`. The merge commit `M` was created by resolving the merge conflict to include both changes from `A` and `B` and hence is not TREESAME to either. The merge commit `R`, however, was created by ignoring the contents of `file.txt` at `M` and taking only the contents of `file.txt` at `X`. Hence, `R` is TREESAME to `X` but not `M`. Finally, the natural merge resolution to create `N` is to take the contents of `file.txt` at `R`, so `N` is TREESAME to `R` but not `C`.  The merge commits `O` and `P` are TREESAME to their first parents, but not to their second parents, `Z` and `Y` respectively."
msgstr "Para este exemplo, suponha que `I` tenha criado o `file.txt` que foi modificado por `A`, `B` e` X` de maneiras diferentes. O único parente fa o commit `C`, `Z` e `Y` não alteram o `file.txt`. O commit mesclado `M` foi criado resolvendo o conflito da mesclagem para incluir as alterações de `A` e `B`, portanto, também não é um 'TREESAME'. O commit mesclado `R`, no entanto, foi criado ignorando o conteúdo do `file.txt` no `M` e levando apenas o conteúdo de `file.txt` no `X`. Portanto, `R` é o 'TREESAME' para `X`, mas não para `M`. Finalmente, a resolução de mesclagem natural para criar `N` é levar o conteúdo do `file.txt` para `R`, de modo onde `N` seja um 'TREESAME' para `R`, mas não para `C`.  O commit mesclado `O` e `P` são 'TREESAME' para seus primeiros parentes, mas não para seus os parentes secundários, `Z` e `Y` respectivamente."

#. type: Plain text
#: en/rev-list-options.txt:667
#, priority:260
msgid "When using the default mode, `N` and `R` both have a TREESAME parent, so those edges are walked and the others are ignored. The resulting history graph is:"
msgstr "Ao utilizar os modos predefinidos, ambos os `N` e `R` tem um pai TREESAME, então aquelas bordas são percorridas e outras são ignoradas. E o grafo resultante no histórico é:"

#. type: delimited block -
#: en/rev-list-options.txt:670
#, no-wrap, priority:260
msgid "\tI---X\n"
msgstr "\tI---X\n"

#. type: Plain text
#: en/rev-list-options.txt:675
#, priority:260
msgid "When using `--full-history`, Git walks every edge. This will discover the commits `A` and `B` and the merge `M`, but also will reveal the merge commits `O` and `P`. With parent rewriting, the resulting graph is:"
msgstr "Ao utilizar a opção `--full-history`, O Git percorre cada canto. Descobre se os commits `A`, `B` e o mesclado `M`, porém também revela se o commit mesclado `O` e `P`. Com a reescrita do pai, o resultado do grafo é:"

#. type: delimited block -
#: en/rev-list-options.txt:683
#, no-wrap, priority:260
msgid ""
"\t  .-A---M--------N---O---P\n"
"\t /     / \\  \\  \\/   /   /\n"
"\tI     B   \\  R-'`--'   /\n"
"\t \\   /     \\/         /\n"
"\t  \\ /      /\\        /\n"
"\t   `---X--'  `------'\n"
msgstr ""
"\t  .-A---M--------N---O---P\n"
"\t /     / \\  \\  \\/   /   /\n"
"\tI     B   \\  R-'`--'   /\n"
"\t \\   /     \\/         /\n"
"\t  \\ /      /\\        /\n"
"\t   `---X--'  `------'\n"

#. type: Plain text
#: en/rev-list-options.txt:691
#, fuzzy, priority:260
#| msgid "Here, the merge commits `O` and `P` contribute extra noise, as they did not actually contribute a change to `file.txt`. They only merged a topic that was based on an older version of `file.txt`. This is a common issue in repositories using a workflow where many contributors work in parallel and merge their topic branches along a single trunk: manu unrelated merges appear in the `--full-history` results."
msgid "Here, the merge commits `O` and `P` contribute extra noise, as they did not actually contribute a change to `file.txt`. They only merged a topic that was based on an older version of `file.txt`. This is a common issue in repositories using a workflow where many contributors work in parallel and merge their topic branches along a single trunk: many unrelated merges appear in the `--full-history` results."
msgstr "Aqui, a mesclagem do commit `O` e `P` contribuem com um ruído extra, pois na verdade não contribuíram com uma alteração no `file.txt`. Eles mesclaram apenas um 'topic' com base numa versão mais antiga do `file.txt`. Este é um problema comum em repositórios que utilizam um fluxo de trabalho onde que muitos colaboradores trabalham em paralelo e mesclam as suas ramificações dos tópicos em um único \"trunk\": as mesclagens não relacionadas ao manu aparecem nos resultados do comando `--full-history`."

#. type: Plain text
#: en/rev-list-options.txt:698
#, priority:260
msgid "When using the `--simplify-merges` option, the commits `O` and `P` disappear from the results. This is because the rewritten second parents of `O` and `P` are reachable from their first parents. Those edges are removed and then the commits look like single-parent commits that are TREESAME to their parent. This also happens to the commit `N`, resulting in a history view as follows:"
msgstr "Ao utilizar a opção `--simplify-merges`, os commits `O` e `P` desaparecem dos resultados. Pois as reescritas do segundo pai de `O` e `P` são acessíveis a partir dos seus primeiros pais. Estes cantos são removidos e então os commits se parecem com commits com pai singular só que são TREESAME em relação aos seus pais. Isso também acontece ao commit `N`, resultando no histórico a seguir:"

#. type: delimited block -
#: en/rev-list-options.txt:706
#, no-wrap, priority:260
msgid ""
"\t  .-A---M--.\n"
"\t /     /    \\\n"
"\tI     B      R\n"
"\t \\   /      /\n"
"\t  \\ /      /\n"
"\t   `---X--'\n"
msgstr ""
"\t  .-A---M--.\n"
"\t /     /    \\\n"
"\tI     B      R\n"
"\t \\   /      /\n"
"\t  \\ /      /\n"
"\t   `---X--'\n"

#. type: Plain text
#: en/rev-list-options.txt:713
#, priority:260
msgid "In this view, we see all of the important single-parent changes from `A`, `B`, and `X`. We also see the carefully-resolved merge `M` and the not-so-carefully-resolved merge `R`. This is usually enough information to determine why the commits `A` and `B` \"disappeared\" from history in the default view. However, there are a few issues with this approach."
msgstr "Nesta visão, vemos todas as alterações importantes da única origem vindas de `A`, `B` e `X`. Também vemos a mesclagem cuidadosamente resolvida de `M` e a mesclagem nem tão bem resolvida do `R`. Geralmente são informações suficientes para determinar por que os commit `A` e `B` \"desapareceram\" do histórico na visualização predefinida. No entanto, existem alguns problemas com esta abordagem."

#. type: Plain text
#: en/rev-list-options.txt:718
#, priority:260
msgid "The first issue is performance. Unlike any previous option, the `--simplify-merges` option requires walking the entire commit history before returning a single result. This can make the option difficult to use for very large repositories."
msgstr "O primeiro problema é o desempenho. Diferente das opções anteriores, a opção `--simplify-merges` precisa percorrer todo o histórico do commit antes de retornar um único resultado. Isso pode fazer com que a opção seja difícil de usar em repositórios muito grandes."

#. type: Plain text
#: en/rev-list-options.txt:727
#, priority:260
msgid "The second issue is one of auditing. When many contributors are working on the same repository, it is important which merge commits introduced a change into an important branch. The problematic merge `R` above is not likely to be the merge commit that was used to merge into an important branch. Instead, the merge `N` was used to merge `R` and `X` into the important branch. This commit may have information about why the change `X` came to override the changes from `A` and `B` in its commit message."
msgstr "O segundo problema é a auditoria. Quando muitos colaboradores estão trabalhando no mesmo repositório, é importante saber qual mesclagem do commit introduziu uma importante alteração no ramo. A mesclagem problemática `R` acima não parece ser o commit mesclado que foi utilizado na mesclagem de um ramo importante. Em vez disso, a mesclagem `N` foi utilizada para mesclar `R` e `X` em um importante ramo. Este commit por ter informação sobre o por que do `X` chegou a substituir as alterações do `A` e `B` em suas mensagens do commit."

#. type: Plain text
#: en/rev-list-options.txt:732
#, priority:260
msgid "In addition to the commits shown in the default history, show each merge commit that is not TREESAME to its first parent but is TREESAME to a later parent."
msgstr "Além dos commits exibidos no histórico predefinido, exiba cada mesclagem do commit que não seja 'TREESAME' para o primeiro parente, porém que seja 'TREESAME' para um parente posterior."

#. type: Plain text
#: en/rev-list-options.txt:737
#, priority:260
msgid "When a merge commit is included by `--show-pulls`, the merge is treated as if it \"pulled\" the change from another branch. When using `--show-pulls` on this example (and no other options) the resulting graph is:"
msgstr "Quando a mesclagem de um commit é incluso através da opção `--show-pulls`, a mesclagem é tratada como tivesse \"capturado\" as alterações de um outro ramo. Ao usar a opção `--show-pulls` nest exemplo (e em nenhuma outra opção) o grafo resultante será:"

#. type: delimited block -
#: en/rev-list-options.txt:740
#, no-wrap, priority:260
msgid "\tI---X---R---N\n"
msgstr "\tI---X---R---N\n"

#. type: Plain text
#: en/rev-list-options.txt:746
#, priority:260
msgid "Here, the merge commits `R` and `N` are included because they pulled the commits `X` and `R` into the base branch, respectively. These merges are the reason the commits `A` and `B` do not appear in the default history."
msgstr "Aqui, a mesclagem do commit `R` e `N` são incluídos porque obtiveram os commits `X` e `R` para o ramo base, respectivamente. Essas mesclagens são a razão pela qual os commits `A` e `B` não aparecem no histórico predefinido."

#. type: Plain text
#: en/rev-list-options.txt:749
#, priority:260
msgid "When `--show-pulls` is paired with `--simplify-merges`, the graph includes all of the necessary information:"
msgstr "Quando a opção `--show-pulls` for usado em conjunto com `--simplify-merges`, o grafo incluí todas as informações necessárias:"

#. type: delimited block -
#: en/rev-list-options.txt:757
#, no-wrap, priority:260
msgid ""
"\t  .-A---M--.   N\n"
"\t /     /    \\ /\n"
"\tI     B      R\n"
"\t \\   /      /\n"
"\t  \\ /      /\n"
"\t   `---X--'\n"
msgstr ""
"\t  .-A---M--.   N\n"
"\t /     /    \\ /\n"
"\tI     B      R\n"
"\t \\   /      /\n"
"\t  \\ /      /\n"
"\t   `---X--'\n"

#. type: Plain text
#: en/rev-list-options.txt:763
#, priority:260
msgid "Notice that since `M` is reachable from `R`, the edge from `N` to `M` was simplified away. However, `N` still appears in the history as an important commit because it \"pulled\" the change `R` into the main branch."
msgstr "Repare que desde que `M` seja acessível de `R`, o canto de `N` para `M` foi simplificado. No entanto, o `N` ainda aparece no histórico como um commit importante porque ele \"obteve\" as alterações vindas de `R` para o ramo principal."

#. type: Plain text
#: en/rev-list-options.txt:771
#, priority:260
msgid "The `--simplify-by-decoration` option allows you to view only the big picture of the topology of the history, by omitting commits that are not referenced by tags.  Commits are marked as !TREESAME (in other words, kept after history simplification rules described above) if (1) they are referenced by tags, or (2) they change the contents of the paths given on the command line.  All other commits are marked as TREESAME (subject to be simplified away)."
msgstr "A opção `--simplify-by-decoration` permite exibir apenas o quadro geral da topologia do histórico, omitindo os commits que não sejam referenciadas pelas tags.  Os commits são marcadas como '!TREESAME' (em outras palavras, mantidas após as regras da simplificação do histórico descritas acima) caso (1) sejam referenciadas pelas tags ou (2) alteram o conteúdo dos caminhos usados na linha de comando.  Todos os outros commits são marcados como 'TREESAME' (assunto que será simplificado)."

#. type: Title ~
#: en/rev-list-options.txt:775
#, no-wrap, priority:260
msgid "Bisection Helpers"
msgstr "Auxiliares da Bisseção"

#. type: Plain text
#: en/rev-list-options.txt:784
#, priority:260
msgid "Limit output to the one commit object which is roughly halfway between included and excluded commits. Note that the bad bisection ref `refs/bisect/bad` is added to the included commits (if it exists) and the good bisection refs `refs/bisect/good-*` are added to the excluded commits (if they exist). Thus, supposing there are no refs in `refs/bisect/`, if"
msgstr "Limite a geração do objeto para um único commit, que fica aproximadamente a meio caminho entre os commits incluídos e excluídos. Observe que a bisseção da \"ref\" ruim `refs/bisect/bad` é adicionada aos commits incluídos (caso existam) e a bisseção das boas refs `refs/bisect/good-*` é adicionada aos commits excluídos (caso existam). Assim, supondo que não haja nenhuma refs em `refs/bisect/`, se"

#. type: delimited block -
#: en/rev-list-options.txt:787
#, no-wrap, priority:260
msgid "\t$ git rev-list --bisect foo ^bar ^baz\n"
msgstr "\t$ git rev-list --bisect foo ^bar ^baz\n"

#. type: Plain text
#: en/rev-list-options.txt:790
#, priority:260
msgid "outputs 'midpoint', the output of the two commands"
msgstr "gera o 'midpoint', a saída dos dois comandos"

#. type: delimited block -
#: en/rev-list-options.txt:794
#, no-wrap, priority:260
msgid ""
"\t$ git rev-list foo ^midpoint\n"
"\t$ git rev-list midpoint ^bar ^baz\n"
msgstr ""
"\t$ git rev-list foo ^midpoint\n"
"\t$ git rev-list midpoint ^bar ^baz\n"

#. type: Plain text
#: en/rev-list-options.txt:800
#, priority:260
msgid "would be of roughly the same length.  Finding the change which introduces a regression is thus reduced to a binary search: repeatedly generate and test new 'midpoint's until the commit chain is of length one."
msgstr "teria aproximadamente o mesmo comprimento.  Descobrir qual a alteração que apresenta uma regressão se resume, assim, a uma busca binária: gerar e testar repetidamente novos 'pontos médios' até que a sequência de commits seja de comprimento um."

#. type: Labeled list
#: en/rev-list-options.txt:801
#, ignore-same, no-wrap, priority:260
msgid "--bisect-vars"
msgstr "--bisect-vars"

#. type: Plain text
#: en/rev-list-options.txt:812
#, priority:260
msgid "This calculates the same as `--bisect`, except that refs in `refs/bisect/` are not used, and except that this outputs text ready to be eval'ed by the shell. These lines will assign the name of the midpoint revision to the variable `bisect_rev`, and the expected number of commits to be tested after `bisect_rev` is tested to `bisect_nr`, the expected number of commits to be tested if `bisect_rev` turns out to be good to `bisect_good`, the expected number of commits to be tested if `bisect_rev` turns out to be bad to `bisect_bad`, and the number of commits we are bisecting right now to `bisect_all`."
msgstr "Calcula o mesmo que `--bisect`, exceto que as refs no `refs/bisect/` não são usados e a menos que isso gere um texto pronto para ser avaliado pelo shell. Essas linhas atribuirão o nome da revisão do ponto intermediário à variável `bisect_rev`, e a quantidade esperada dos commits que serão testados depois que `bisect_rev` for testado como `bisect_nr`, a quantidade esperada dos commits que serão testados caso `bisect_rev` acabe sendo bom para `bisect_good`, a quantidade esperada dos commits que serão testados caso `bisect_rev` acabe sendo ruim para `bisect_bad`, a quantidade esperada dos commits que agora estamos fazendo o bisseção para `bisect_all`."

#. type: Labeled list
#: en/rev-list-options.txt:813
#, ignore-same, no-wrap, priority:260
msgid "--bisect-all"
msgstr "--bisect-all"

#. type: Plain text
#: en/rev-list-options.txt:819
#, priority:260
msgid "This outputs all the commit objects between the included and excluded commits, ordered by their distance to the included and excluded commits. Refs in `refs/bisect/` are not used. The farthest from them is displayed first. (This is the only one displayed by `--bisect`.)"
msgstr "Gera todos os objetos commit entre os commits incluídos e excluídos, ordenadas pela distância entre os commits incluídos e excluídos. As referências em `refs/bisect/` não são usadas. O mais distante deles é exibido primeiro. (Este é o único exibido através do `--bisect`.)"

#. type: Plain text
#: en/rev-list-options.txt:823
#, priority:260
msgid "This is useful because it makes it easy to choose a good commit to test when you want to avoid to test some of them for some reason (they may not compile for example)."
msgstr "Isso é útil porque facilita a escolha de um bom commit para testar quando quiser evitar o teste de alguns deles por algum motivo (por eles não poderem ser compilados, por exemplo)."

#. type: Plain text
#: en/rev-list-options.txt:827
#, priority:260
msgid "This option can be used along with `--bisect-vars`, in this case, after all the sorted commit objects, there will be the same text as if `--bisect-vars` had been used alone."
msgstr "Esta opção pode ser utilizada junto com `--bisect-vars`, neste caso, quando todos os objetos commits forem classificados, haverá o mesmo texto como se `--bisect-vars` tivesse sido utilizado sozinho."

#. type: Title ~
#: en/rev-list-options.txt:832
#, no-wrap, priority:260
msgid "Commit Ordering"
msgstr "Ordenando os Commits"

#. type: Plain text
#: en/rev-list-options.txt:835
#, priority:260
msgid "By default, the commits are shown in reverse chronological order."
msgstr "É predefinido que os commits sejam exibidos em uma ordem cronológica reversa."

#. type: Plain text
#: en/rev-list-options.txt:839
#, priority:260
msgid "Show no parents before all of its children are shown, but otherwise show commits in the commit timestamp order."
msgstr "Não exiba nenhuma origem antes de todos os herdeiros, porém exiba os commits com uma ordem de data e hora."

#. type: Labeled list
#: en/rev-list-options.txt:840
#, ignore-same, no-wrap, priority:260
msgid "--author-date-order"
msgstr "--author-date-order"

#. type: Plain text
#: en/rev-list-options.txt:843
#, priority:260
msgid "Show no parents before all of its children are shown, but otherwise show commits in the author timestamp order."
msgstr "Não exiba nenhuma origem antes de todos os herdeiros, porém exiba os commits com uma ordem de data e hora do autor."

#. type: Plain text
#: en/rev-list-options.txt:848
#, priority:260
msgid "Show no parents before all of its children are shown, and avoid showing commits on multiple lines of history intermixed."
msgstr "Não exiba nenhuma origem antes de todos os herdeiros e evite exibir os commits com múltiplas linhas misturadas no histórico."

#. type: Plain text
#: en/rev-list-options.txt:850
#, priority:260
msgid "For example, in a commit history like this:"
msgstr "Por exemplo, em um histórico de commit como este:"

#. type: delimited block -
#: en/rev-list-options.txt:856
#, no-wrap, priority:260
msgid ""
"    ---1----2----4----7\n"
"\t\\\t       \\\n"
"\t 3----5----6----8---\n"
msgstr ""
"    ---1----2----4----7\n"
"\t\\\t       \\\n"
"\t 3----5----6----8---\n"

#. type: Plain text
#: en/rev-list-options.txt:862
#, priority:260
msgid "where the numbers denote the order of commit timestamps, `git rev-list` and friends with `--date-order` show the commits in the timestamp order: 8 7 6 5 4 3 2 1."
msgstr "onde os números indicam a ordem dos registros de data e hora do commit, o comando `git rev-list` e seus amigos `--date-order` exibem os commits na ordem de registro de data e hora: 8 7 6 5 4 3 2 1."

#. type: Plain text
#: en/rev-list-options.txt:867
#, priority:260
msgid "With `--topo-order`, they would show 8 6 5 3 7 4 2 1 (or 8 7 4 2 6 5 3 1); some older commits are shown before newer ones in order to avoid showing the commits from two parallel development track mixed together."
msgstr "Com `--topo-order`, eles demonstrariam 8 6 5 3 7 4 2 1 (ou 8 7 4 2 6 5 3 1); alguns commits mais antigos são exibidos antes dos mais recentes, a fim de se evitar exibir os commits das duas trilhas de desenvolvimento paralelas misturadas juntas."

#. type: Plain text
#: en/rev-list-options.txt:872
#, priority:260
msgid "Output the commits chosen to be shown (see Commit Limiting section above) in reverse order. Cannot be combined with `--walk-reflogs`."
msgstr "Envie os commits escolhidos para serem exibidos (consulte a seção Limite do Commit acima) na ordem inversa. Não pode ser combinado com `--walk-reflogs`."

#. type: Title ~
#: en/rev-list-options.txt:876
#, no-wrap, priority:260
msgid "Object Traversal"
msgstr "Passagem de Objeto"

#. type: Plain text
#: en/rev-list-options.txt:879
#, priority:260
msgid "These options are mostly targeted for packing of Git repositories."
msgstr "Essas opções são direcionadas principalmente para o empacotamento dos repositórios Git."

#. type: Labeled list
#: en/rev-list-options.txt:881
#, ignore-same, no-wrap, priority:260
msgid "--objects"
msgstr "--objects"

#. type: Plain text
#: en/rev-list-options.txt:886
#, priority:260
msgid "Print the object IDs of any object referenced by the listed commits.  `--objects foo ^bar` thus means ``send me all object IDs which I need to download if I have the commit object _bar_ but not _foo_''."
msgstr "Imprima as IDs do objeto de qualquer objeto referenciado pelos commits listados.  Os `--objects foo ^bar` significa, portanto, ``me envie todas as IDs dos objetos que eu preciso baixar caso eu tenha o objeto commit _bar_ mas não _foo_''."

#. type: Labeled list
#: en/rev-list-options.txt:887
#, ignore-same, no-wrap, priority:260
msgid "--in-commit-order"
msgstr "--in-commit-order"

#. type: Plain text
#: en/rev-list-options.txt:891
#, priority:260
msgid "Print tree and blob ids in order of the commits. The tree and blob ids are printed after they are first referenced by a commit."
msgstr "Imprima as IDs da árvore e da bolha na ordem dos commit. As IDs da árvore e da bolha são impressas após serem referenciados pelo commit."

#. type: Labeled list
#: en/rev-list-options.txt:892
#, ignore-same, no-wrap, priority:260
msgid "--objects-edge"
msgstr "--objects-edge"

#. type: Plain text
#: en/rev-list-options.txt:898
#, priority:260
msgid "Similar to `--objects`, but also print the IDs of excluded commits prefixed with a ``-'' character.  This is used by linkgit:git-pack-objects[1] to build a ``thin'' pack, which records objects in deltified form based on objects contained in these excluded commits to reduce network traffic."
msgstr "Semelhante a opção `--objects`, porém também imprime as IDs dos commits que foram excluídos e prefixados com um caractere ``-''.  Isso é usado pelo linkgit:git-pack-objects[1] para criar um pacote ``thin'', que registra os objetos em um formato \"deltificado\" com base nos objetos existentes nestes commits excluídos para reduzir o tráfego da rede."

#. type: Labeled list
#: en/rev-list-options.txt:899
#, ignore-same, no-wrap, priority:260
msgid "--objects-edge-aggressive"
msgstr "--objects-edge-aggressive"

#. type: Plain text
#: en/rev-list-options.txt:903
#, priority:260
msgid "Similar to `--objects-edge`, but it tries harder to find excluded commits at the cost of increased time.  This is used instead of `--objects-edge` to build ``thin'' packs for shallow repositories."
msgstr "Semelhante a opção `--objects-edge`, porém se esforça mais para localizar os commits excluídos com o custo do tempo aumentado.  É usado em vez da opão  `--objects-edge` para criar os pacotes ``thin'' para os repositórios rasos."

#. type: Labeled list
#: en/rev-list-options.txt:904
#, ignore-same, no-wrap, priority:260
msgid "--indexed-objects"
msgstr "--indexed-objects"

#. type: Plain text
#: en/rev-list-options.txt:908
#, priority:260
msgid "Pretend as if all trees and blobs used by the index are listed on the command line.  Note that you probably want to use `--objects`, too."
msgstr "Finja como se todas as árvores e as bolhas usadas pelo índice estivessem listados na linha de comando.  Observe que você provavelmente queira utilizar a opção `--objects` também."

#. type: Plain text
#: en/rev-list-options.txt:912
#, priority:260
msgid "Only useful with `--objects`; print the object IDs that are not in packs."
msgstr "Útil apenas com a opção `--objects`; imprima as IDs do objeto que não estejam nos pacotes."

#. type: Labeled list
#: en/rev-list-options.txt:913
#, ignore-same, no-wrap, priority:260
msgid "--object-names"
msgstr "--object-names"

#. type: Plain text
#: en/rev-list-options.txt:916
#, priority:260
msgid "Only useful with `--objects`; print the names of the object IDs that are found. This is the default behavior."
msgstr "Útil apenas com a opção `--objects`; imprima os nomes dos IDs dos objetos que forem encontrados. Este é o comportamento predefinido."

#. type: Labeled list
#: en/rev-list-options.txt:917
#, ignore-same, no-wrap, priority:260
msgid "--no-object-names"
msgstr "--no-object-names"

#. type: Plain text
#: en/rev-list-options.txt:922
#, priority:260
msgid "Only useful with `--objects`; does not print the names of the object IDs that are found. This inverts `--object-names`. This flag allows the output to be more easily parsed by commands such as linkgit:git-cat-file[1]."
msgstr "Útil apenas com a opção `--objects`; não imprima os nomes das IDs dos objetos que forem encontrados. Isto inverte a opção `--object-names`. Esta opção permite que a saída seja analisada mais facilmente por comandos como linkgit:git-cat-file[1]."

#. type: Plain text
#: en/rev-list-options.txt:927
#, priority:260
msgid "Only useful with one of the `--objects*`; omits objects (usually blobs) from the list of printed objects.  The '<filter-spec>' may be one of the following:"
msgstr "Útil apenas com um dos objetos `--objects*`; omite os objetos (geralmente bolhas) da lista dos objetos impressos.  O '<filter-spec>' pode ser um dos seguintes:"

#. type: Plain text
#: en/rev-list-options.txt:929
#, priority:260
msgid "The form '--filter=blob:none' omits all blobs."
msgstr "O formulário '--filter=blob:none' omite todos as \"bolhas\"."

#. type: Plain text
#: en/rev-list-options.txt:934
#, priority:260
msgid "The form '--filter=blob:limit=<n>[kmg]' omits blobs larger than n bytes or units.  n may be zero.  The suffixes k, m, and g can be used to name units in KiB, MiB, or GiB.  For example, 'blob:limit=1k' is the same as 'blob:limit=1024'."
msgstr "O formulário '--filter=blob:limit=<n>[kmg]' omite as bolhas que forem maiores que 'n' bytes ou unidades.  O 'n' pode ser zero.  Os sufixos 'k', 'm' e 'g' podem ser utilizados para nomear as unidades em 'KiB', 'MiB' ou 'GiB'.  Como, por exemplo, ''blob:limit=1k'' é o mesmo que 'blob:limit=1024'."

#. type: Plain text
#: en/rev-list-options.txt:937
#, priority:260
msgid "The form '--filter=object:type=(tag|commit|tree|blob)' omits all objects which are not of the requested type."
msgstr "A forma '--filter=object:type=(tag|commit|tree|blob)' omite todo os objetos que não sejam do mesmo tipo que foi requisitado."

#. type: Plain text
#: en/rev-list-options.txt:942
#, priority:260
msgid "The form '--filter=sparse:oid=<blob-ish>' uses a sparse-checkout specification contained in the blob (or blob-expression) '<blob-ish>' to omit blobs that would not be required for a sparse checkout on the requested refs."
msgstr "O formulário '--filter=sparse:oid=<blob-ish>' usa uma especificação de verificação esparsa contida na bolha (ou expressão bolha) '<blob-ish>' para omitir as bolhas que não seriam necessárias em uma verificação esparsa nas referências solicitadas."

#. type: Plain text
#: en/rev-list-options.txt:952
#, priority:260
msgid "The form '--filter=tree:<depth>' omits all blobs and trees whose depth from the root tree is >= <depth> (minimum depth if an object is located at multiple depths in the commits traversed). <depth>=0 will not include any trees or blobs unless included explicitly in the command-line (or standard input when --stdin is used). <depth>=1 will include only the tree and blobs which are referenced directly by a commit reachable from <commit> or an explicitly-given object. <depth>=2 is like <depth>=1 while also including trees and blobs one more level removed from an explicitly-given commit or tree."
msgstr "O formulário '--filter=tree:<profundidade>' omite todas as bolhas e as árvores cuja profundidade da árvore raiz seja >= <profundidade> (a profundidade mínima caso um objeto estiver localizado em várias profundidades nos commits que forem percorridos). A <profundidade>=0 não incluirá nenhuma árvore ou bolhas, a menos que seja incluso de forma explícita na linha de comando (ou na entrada padrão quando stdin seja usado) A <profundidade>=1 incluirá apenas a árvore e as bolhas que são referenciados diretamente por um commit acessível de um objeto informado de forma explícita. A <profundidade>=2 é semelhante a <profundidade>=1 enquanto também inclui as árvores e as bolhas, mais um nível removido de um commit ou da árvore informada de forma explicita."

#. type: Plain text
#: en/rev-list-options.txt:956
#, priority:260
msgid "Note that the form '--filter=sparse:path=<path>' that wants to read from an arbitrary path on the filesystem has been dropped for security reasons."
msgstr "Observe que o formulário '--filter=sparse:path=<caminho>' deseja ler de um caminho arbitrário no sistema de arquivos que foi descartado por motivos de segurança."

#. type: Plain text
#: en/rev-list-options.txt:959
#, priority:260
msgid "Multiple '--filter=' flags can be specified to combine filters. Only objects which are accepted by every filter are included."
msgstr "Várias opções `--filter=` podem ser utilizados para fazer a combinação dos filtros. Somente os objetos que são aceitos por todos os filtros serão incluídos."

#. type: Plain text
#: en/rev-list-options.txt:968
#, ignore-ellipsis, priority:260
msgid "The form '--filter=combine:<filter1>+<filter2>+...<filterN>' can also be used to combined several filters, but this is harder than just repeating the '--filter' flag and is usually not necessary. Filters are joined by '{plus}' and individual filters are %-encoded (i.e. URL-encoded).  Besides the '{plus}' and '%' characters, the following characters are reserved and also must be encoded: `~!@#$^&*()[]{}\\;\",<>?`+&#39;&#96;+ as well as all characters with ASCII code &lt;= `0x20`, which includes space and newline."
msgstr "O formulário '--filter=combine:<filter1>+<filter2>+...<filterN>' também pode ser usado para combinar vários filtros, mas isso é mais difícil do que apenas repetir o comando '--filter' e geralmente não é necessário. Os filtros são unidos pelo '{plus}' e os filtros individuais são %-codificados (ou seja, URL-codificada).  Além dos caracteres '{plus}' e '%' os seguintes caracteres são reservados e também devem ser codificados: `~!@#$^&*()[]{}\\;\",<>?`+&#39;&#96;+ assim como todos os caracteres com código ASCII &lt;= `0x20`, que inclui espaço e nova linha."

#. type: Plain text
#: en/rev-list-options.txt:972
#, priority:260
msgid "Other arbitrary characters can also be encoded. For instance, 'combine:tree:3+blob:none' and 'combine:tree%3A3+blob%3Anone' are equivalent."
msgstr "Outros caracteres arbitrários também podem ser codificados. Por exemplo, 'combine:tree:3+blob:none' e 'combine:tree%3A3+blob%3Anone' são equivalentes."

#. type: Plain text
#: en/rev-list-options.txt:975
#, priority:260
msgid "Turn off any previous `--filter=` argument."
msgstr "Desligue qualquer opção `--filter=` utilizada anteriormente."

#. type: Labeled list
#: en/rev-list-options.txt:976
#, ignore-same, no-wrap, priority:260
msgid "--filter-provided-objects"
msgstr "--filter-provided-objects"

#. type: Plain text
#: en/rev-list-options.txt:980
#, priority:260
msgid "Filter the list of explicitly provided objects, which would otherwise always be printed even if they did not match any of the filters. Only useful with `--filter=`."
msgstr "Filtre a lista dos objetos explicitamente informados, que, de outra forma, sempre seriam exibidos, ainda que não correspondam a nenhum dos filtros. Útil apenas com `--filter=`."

#. type: Labeled list
#: en/rev-list-options.txt:981
#, ignore-same, no-wrap, priority:260
msgid "--filter-print-omitted"
msgstr "--filter-print-omitted"

#. type: Plain text
#: en/rev-list-options.txt:984
#, priority:260
msgid "Only useful with `--filter=`; prints a list of the objects omitted by the filter.  Object IDs are prefixed with a ``~'' character."
msgstr "Útil apenas com a opção `--filter=`; imprime uma lista dos objetos omitidos pelo filtro.  As IDs dos objeto são prefixadas com um caractere ``~''."

#. type: Plain text
#: en/rev-list-options.txt:991
#, priority:260
msgid "The form '--missing=error' requests that rev-list stop with an error if a missing object is encountered.  This is the default action."
msgstr "A opção `--missing=error` solicita que os objetos do pacote parem com um erro caso um objeto perdido seja encontrado.  Esta é a ação predefinida."

#. type: Plain text
#: en/rev-list-options.txt:995
#, priority:260
msgid "The form '--missing=allow-any' will allow object traversal to continue if a missing object is encountered.  Missing objects will silently be omitted from the results."
msgstr "O formulário '--missing=allow-any' permitirá que a travessia do objeto continue caso um objeto ausente seja encontrado.  Os objetos ausentes serão omitidos silenciosamente dos resultados."

#. type: Plain text
#: en/rev-list-options.txt:999
#, priority:260
msgid "The form '--missing=allow-promisor' is like 'allow-any', but will only allow object traversal to continue for EXPECTED promisor missing objects.  Unexpected missing objects will raise an error."
msgstr "A opção '--missing=allow-promisor' é como `allow-any`, mas só vai permitir que a travessia de objetos continue para os objetos prometedores PREVISTOS.  Os objetos perdidos e inesperados provocarão um erro."

#. type: Plain text
#: en/rev-list-options.txt:1002
#, priority:260
msgid "The form '--missing=print' is like 'allow-any', but will also print a list of the missing objects.  Object IDs are prefixed with a ``?'' character."
msgstr "A opção `--missing=print' é como `allow any`, porém também imprime uma lista dos objetos perdidos.  As IDs do objeto são prefixadas com um caractere `?`."

#. type: Plain text
#: en/rev-list-options.txt:1009
#, priority:260
msgid "(For internal use only.)  Prefilter object traversal at promisor boundary.  This is used with partial clone.  This is stronger than `--missing=allow-promisor` because it limits the traversal, rather than just silencing errors about missing objects."
msgstr "(Apenas para uso interno.) Uma pré-filtragem da travessia do objeto em um limite promissor  Isso é utilizado com clone parcial.  É mais forte do que `--missing=allow-promisor` porque limita a passagem, em vez de apenas silenciar os erros sobre os objetos perdidos."

#. type: Labeled list
#: en/rev-list-options.txt:1011
#, no-wrap, priority:260
msgid "--no-walk[=(sorted|unsorted)]"
msgstr "--no-walk [=(com classificação|sem classificação)]"

#. type: Plain text
#: en/rev-list-options.txt:1019
#, priority:260
msgid "Only show the given commits, but do not traverse their ancestors.  This has no effect if a range is specified. If the argument `unsorted` is given, the commits are shown in the order they were given on the command line. Otherwise (if `sorted` or no argument was given), the commits are shown in reverse chronological order by commit time.  Cannot be combined with `--graph`."
msgstr "Exibe apenas determinados commits, mas não atravesse os seus ancestrais.  Isso não tem nenhum efeito caso um intervalo seja especificado. Caso o argumento `unsorted` (sem classificação) seja utilizada, os commits serão exibidos na ordem em que foram utilizadas na linha de comando. Caso contrário (se o argumento `ordenado` ou nenhum outro seja utilizado), os commits serão exibidos em ordem cronológica reversa pela data do commit.  Não pode ser combinado com `--graph`."

#. type: Labeled list
#: en/rev-list-options.txt:1020
#, ignore-same, no-wrap, priority:260
msgid "--do-walk"
msgstr "--do-walk"

#. type: Plain text
#: en/rev-list-options.txt:1022
#, priority:260
msgid "Overrides a previous `--no-walk`."
msgstr "Substitui um `--no-walk` anterior."

#. type: Title ~
#: en/rev-list-options.txt:1026
#, no-wrap, priority:260
msgid "Commit Formatting"
msgstr "Formatação do Commit"

#. type: Plain text
#: en/rev-list-options.txt:1032
#, priority:260
msgid "Using these options, linkgit:git-rev-list[1] will act similar to the more specialized family of commit log tools: linkgit:git-log[1], linkgit:git-show[1], and linkgit:git-whatchanged[1]"
msgstr "Utilizando estas opções linkgit:git-rev-list[1] funcionará de maneira semelhante à família mais especializada de ferramentas do registro log do commit: linkgit:git-log[1], linkgit:git-show[1] e linkgit:git-whatchanged[1]"

#. type: Labeled list
#: en/rev-list-options.txt:1036
#, ignore-same, no-wrap, priority:260
msgid "--relative-date"
msgstr "--relative-date"

#. type: Plain text
#: en/rev-list-options.txt:1038
#, priority:260
msgid "Synonym for `--date=relative`."
msgstr "É um sinônimo para `--date=relative`."

#. type: Labeled list
#: en/rev-list-options.txt:1039
#, no-wrap, priority:260
msgid "--date=<format>"
msgstr "--date=<formato>"

#. type: Plain text
#: en/rev-list-options.txt:1046
#, priority:260
msgid "Only takes effect for dates shown in human-readable format, such as when using `--pretty`. `log.date` config variable sets a default value for the log command's `--date` option. By default, dates are shown in the original time zone (either committer's or author's). If `-local` is appended to the format (e.g., `iso-local`), the user's local time zone is used instead."
msgstr "Somente entra em vigor para as datas demonstradas no formato legível para as pessoas como utilizada na opção `--pretty`. A variável de configuração `log.date` define um valor predefinido para a opção `--date` do comando do registro log. É predefinido que os horários sejam exibidas no fuso horário original (do autor do commit ou do autor). Caso `-local` seja anexado ao formato (por exemplo,`iso-local`), o fuso horário local do usuário será utilizado."

#. type: Plain text
#: en/rev-list-options.txt:1051
#, priority:260
msgid "`--date=relative` shows dates relative to the current time, e.g. ``2 hours ago''. The `-local` option has no effect for `--date=relative`."
msgstr "A opção `--date=relative` exibe as datas relativas à hora atual, por exemplo, ``2 horas atrás''. A opção `-local` não tem efeito para `--date=relative`."

#. type: Plain text
#: en/rev-list-options.txt:1053
#, priority:260
msgid "`--date=local` is an alias for `--date=default-local`."
msgstr "`date=local` é um apelido para `date=default-local`."

#. type: Plain text
#: en/rev-list-options.txt:1056
#, priority:260
msgid "`--date=iso` (or `--date=iso8601`) shows timestamps in a ISO 8601-like format.  The differences to the strict ISO 8601 format are:"
msgstr "A opção `--date=iso` (ou `date=iso`) exibe os registros de data e hora em formato semelhante ao ISO 8601.  As diferenças para o formato rígido do ISO 8601 são:"

#. type: Plain text
#: en/rev-list-options.txt:1058
#, priority:260
msgid "a space instead of the `T` date/time delimiter"
msgstr "um espaço em vez do `T` para delimitar data/hora"

#. type: Plain text
#: en/rev-list-options.txt:1059
#, priority:260
msgid "a space between time and time zone"
msgstr "um espaço entre a hora e o fuso horário"

#. type: Plain text
#: en/rev-list-options.txt:1060
#, priority:260
msgid "no colon between hours and minutes of the time zone"
msgstr "sem dois pontos entre horas e minutos do fuso horário"

#. type: Plain text
#: en/rev-list-options.txt:1063
#, priority:260
msgid "`--date=iso-strict` (or `--date=iso8601-strict`) shows timestamps in strict ISO 8601 format."
msgstr "a opção `--date=iso-strict` (ou `--date=iso8601-strict`) exibe o registro de data e hora com formato ISO 8601 restrito."

#. type: Plain text
#: en/rev-list-options.txt:1066
#, priority:260
msgid "`--date=rfc` (or `--date=rfc2822`) shows timestamps in RFC 2822 format, often found in email messages."
msgstr "a opção `--date=rfc` (ou `--date=rfc2822`) exibe o registro de data e hora no formato RFC 2822, geralmente encontrado nas mensagens de e-mail."

#. type: Plain text
#: en/rev-list-options.txt:1068
#, priority:260
msgid "`--date=short` shows only the date, but not the time, in `YYYY-MM-DD` format."
msgstr "`--date=short` exibe apenas a data em formato `AAAA-MM-DD` porém não a hora."

#. type: Plain text
#: en/rev-list-options.txt:1077
#, priority:260
msgid "`--date=raw` shows the date as seconds since the epoch (1970-01-01 00:00:00 UTC), followed by a space, and then the timezone as an offset from UTC (a `+` or `-` with four digits; the first two are hours, and the second two are minutes). I.e., as if the timestamp were formatted with `strftime(\"%s %z\")`).  Note that the `-local` option does not affect the seconds-since-epoch value (which is always measured in UTC), but does switch the accompanying timezone value."
msgstr "A opção `--date=raw` mostra a data como segundos desde a época (1970-01-01 00:00:00 UTC), seguido por um espaço e em seguida, o fuso horário como uma compensação do UTC (um `+` ou `-` com quatro dígitos; os dois primeiros são horas, e os dois seguintes são minutos). Ou seja, como se o registro de data e hora fosse formatado com `strftime(\"%s %z\")`).  Observe que a opção `-local` não afeta os segundos desde o valor da época (que é sempre medido em UTC), porém altera o valor do fuso horário que o acompanha."

#. type: Plain text
#: en/rev-list-options.txt:1084
#, priority:260
msgid "`--date=human` shows the timezone if the timezone does not match the current time-zone, and doesn't print the whole date if that matches (ie skip printing year for dates that are \"this year\", but also skip the whole date itself if it's in the last few days and we can just say what weekday it was).  For older dates the hour and minute is also omitted."
msgstr "A opção `--date=human` exibe o fuso horário como se o fuso horário não coincidisse com o fuso horário atual e não imprime a data inteira, caso coincida (por exemplo, ignore o ano da impressão para datas que são \"este ano\", mas também ignore a data inteira caso seja nos últimos dias e dizendo apenas qual o dia da semana era).  Para datas mais antigas, a hora e os minutos também são omitidos."

#. type: Plain text
#: en/rev-list-options.txt:1088
#, priority:260
msgid "`--date=unix` shows the date as a Unix epoch timestamp (seconds since 1970).  As with `--raw`, this is always in UTC and therefore `-local` has no effect."
msgstr "A opção `date=unix` exibe a data como um carimbo de data/hora da época do Unix (segundos desde 1970).  Assim como a opção `--raw`, isso sempre está no UTC e portanto, o `-local` não tem nenhum efeito."

#. type: Plain text
#: en/rev-list-options.txt:1095
#, ignore-ellipsis, priority:260
msgid "`--date=format:...` feeds the format `...` to your system `strftime`, except for %s, %z, and %Z, which are handled internally.  Use `--date=format:%c` to show the date in your system locale's preferred format.  See the `strftime` manual for a complete list of format placeholders. When using `-local`, the correct syntax is `--date=format-local:...`."
msgstr "A opção `--date=format:...` alimenta o formato `...` par ao seu sistema `strftime`, menos para %s, %z, e %Z, que são tratados internamente.  Use a opção `--date=format:%c` para exibir a data no formato preferido do código do idioma do sistema.  Consulte o manual do `strftime` para obter uma lista completa dos \"placeholders\". Ao utilizar o `-local`, a sintaxe correta é `--date=format-local:...`."

#. type: Plain text
#: en/rev-list-options.txt:1098
#, priority:260
msgid "`--date=default` is the default format, and is similar to `--date=rfc2822`, with a few exceptions:"
msgstr "A opção `--date=default` é o formato predefinido e similar ao `--date=rfc2822` com algumas excessões:"

#. type: Plain text
#: en/rev-list-options.txt:1100
#, priority:260
msgid "there is no comma after the day-of-week"
msgstr "não há vírgula após o dia da semana"

#. type: Plain text
#: en/rev-list-options.txt:1102
#, priority:260
msgid "the time zone is omitted when the local time zone is used"
msgstr "o fuso horário é omitido quando o fuso horário local é utilizado"

#. type: Labeled list
#: en/rev-list-options.txt:1104
#, ignore-same, no-wrap, priority:260
msgid "--header"
msgstr "--header"

#. type: Plain text
#: en/rev-list-options.txt:1107
#, priority:260
msgid "Print the contents of the commit in raw-format; each record is separated with a NUL character."
msgstr "Exiba o conteúdo dos commits em formato bruto; cada registro é separado por um caractere `NUL`."

#. type: Labeled list
#: en/rev-list-options.txt:1108
#, ignore-same, no-wrap, priority:260
msgid "--no-commit-header"
msgstr "--no-commit-header"

#. type: Plain text
#: en/rev-list-options.txt:1112
#, priority:260
msgid "Suppress the header line containing \"commit\" and the object ID printed before the specified format.  This has no effect on the built-in formats; only custom formats are affected."
msgstr "Exclui a linha do cabeçalho que contém o \"commit\" e o ID do objeto antes do formato especificado.  Isto não afeta os formatos incorporados; apenas os formatos personalizados são afetados."

#. type: Labeled list
#: en/rev-list-options.txt:1113
#, ignore-same, no-wrap, priority:260
msgid "--commit-header"
msgstr "--commit-header"

#. type: Plain text
#: en/rev-list-options.txt:1115
#, priority:260
msgid "Overrides a previous `--no-commit-header`."
msgstr "Substitui um `--no-commit-header` anterior."

#. type: Plain text
#: en/rev-list-options.txt:1120
#, ignore-ellipsis, priority:260
msgid "Print also the parents of the commit (in the form \"commit parent...\").  Also enables parent rewriting, see 'History Simplification' above."
msgstr "Imprima também os pais do commit (no formato \"commit parent...\").  Também permite reescrever os pais, consulte 'Simplificação do Histórico' acima."

#. type: Labeled list
#: en/rev-list-options.txt:1121
#, ignore-same, no-wrap, priority:260
msgid "--children"
msgstr "--children"

#. type: Plain text
#: en/rev-list-options.txt:1124
#, ignore-ellipsis, priority:260
msgid "Print also the children of the commit (in the form \"commit child...\").  Also enables parent rewriting, see 'History Simplification' above."
msgstr "Imprima também os filhos do commit (no formato \"commit child...\").  Também permite reescrever os pais, consulte 'Simplificação do Histórico' acima."

#. type: Labeled list
#: en/rev-list-options.txt:1126
#, ignore-same, no-wrap, priority:260
msgid "--timestamp"
msgstr "--timestamp"

#. type: Plain text
#: en/rev-list-options.txt:1128
#, priority:260
msgid "Print the raw commit timestamp."
msgstr "Exiba a data e hora do commit em formato bruto."

#. type: Labeled list
#: en/rev-list-options.txt:1130
#, ignore-same, no-wrap, priority:260
msgid "--left-right"
msgstr "--left-right"

#. type: Plain text
#: en/rev-list-options.txt:1135
#, priority:260
msgid "Mark which side of a symmetric difference a commit is reachable from.  Commits from the left side are prefixed with `<` and those from the right with `>`.  If combined with `--boundary`, those commits are prefixed with `-`."
msgstr "Marque de que lado da diferença simétrica de onde um commit seja acessível.  As confirmações do lado esquerdo são prefixadas com `<` e as da direita com `>`.  Caso combinemos com `--boundary`, estes commits são prefixados com `-`."

#. type: Plain text
#: en/rev-list-options.txt:1137
#, priority:260
msgid "For example, if you have this topology:"
msgstr "Por exemplo, caso tenha essa topologia:"

#. type: delimited block -
#: en/rev-list-options.txt:1144
#, no-wrap, priority:260
msgid ""
"\t     y---b---b  branch B\n"
"\t    / \\ /\n"
"\t   /   .\n"
"\t  /   / \\\n"
"\t o---x---a---a  branch A\n"
msgstr ""
"\t     y---b---b  branch B\n"
"\t    / \\ /\n"
"\t   /   .\n"
"\t  /   / \\\n"
"\t o---x---a---a  branch A\n"

#. type: Plain text
#: en/rev-list-options.txt:1147
#, priority:260
msgid "you would get an output like this:"
msgstr "você obterá uma saída como essa:"

#. type: delimited block -
#: en/rev-list-options.txt:1150
#, ignore-ellipsis, no-wrap, priority:260
msgid "\t$ git rev-list --left-right --boundary --pretty=oneline A...B\n"
msgstr "\t$ git rev-list --left-right --boundary --pretty=oneline A...B\n"

#. type: delimited block -
#: en/rev-list-options.txt:1157
#, ignore-ellipsis, no-wrap, priority:260
msgid ""
"\t>bbbbbbb... 3rd on b\n"
"\t>bbbbbbb... 2nd on b\n"
"\t<aaaaaaa... 3rd on a\n"
"\t<aaaaaaa... 2nd on a\n"
"\t-yyyyyyy... 1st on b\n"
"\t-xxxxxxx... 1st on a\n"
msgstr ""
"\t>bbbbbbb... 3º no b\n"
"\t>bbbbbbb... 2º no b\n"
"\t<aaaaaaa... 3º no a\n"
"\t<aaaaaaa... 2º no a\n"
"\t-yyyyyyy... 1º no b\n"
"\t-xxxxxxx... 1º no a\n"

#. type: Labeled list
#: en/rev-list-options.txt:1159
#, ignore-same, no-wrap, priority:260
msgid "--graph"
msgstr "--graph"

#. type: Plain text
#: en/rev-list-options.txt:1165
#, priority:260
msgid "Draw a text-based graphical representation of the commit history on the left hand side of the output.  This may cause extra lines to be printed in between commits, in order for the graph history to be drawn properly.  Cannot be combined with `--no-walk`."
msgstr "Desenhe uma representação gráfica com base no texto do histórico de consolidação no lado esquerdo da saída.  Pode fazer com que as linhas extras sejam impressas entre os commits, para que o histórico do grafo seja desenhado de forma correta.  Não pode ser combinado com `--no-walk`."

#. type: Plain text
#: en/rev-list-options.txt:1167
#, priority:260
msgid "This enables parent rewriting, see 'History Simplification' above."
msgstr "Permite a reescrita dos pais, consulte 'Simplificação do Histórico' acima."

#. type: Plain text
#: en/rev-list-options.txt:1170
#, priority:260
msgid "This implies the `--topo-order` option by default, but the `--date-order` option may also be specified."
msgstr "É predefinido que seja implícito o uso da opção `--topo-order`, porém a opção `--date-order` também possa ser utilizada."

#. type: Labeled list
#: en/rev-list-options.txt:1171
#, no-wrap, priority:260
msgid "--show-linear-break[=<barrier>]"
msgstr "--show-linear-break[=<barreira>]"

#. type: Plain text
#: en/rev-list-options.txt:1177
#, priority:260
msgid "When --graph is not used, all history branches are flattened which can make it hard to see that the two consecutive commits do not belong to a linear branch. This option puts a barrier in between them in that case. If `<barrier>` is specified, it is the string that will be shown instead of the default one."
msgstr "Quando a opção `--graph` não é utilizado, todas as ramificações do histórico são achatadas, o que dificulta a visualização onde dois commits consecutivos não pertençam em um ramo linear. Neste caso, esta opção coloca uma barreira entre eles. Caso `<barreira>` seja utilizado, é a string que será exibida em vez do que estiver predefinido."

#. type: Plain text
#: en/rev-list-options.txt:1187
#, priority:260
msgid "Print a number stating how many commits would have been listed, and suppress all other output.  When used together with `--left-right`, instead print the counts for left and right commits, separated by a tab. When used together with `--cherry-mark`, omit patch equivalent commits from these counts and print the count for equivalent commits separated by a tab."
msgstr "Imprima um número informando quantos commits teriam sido listados e suprima todas as outras saídas.  Quando usado em conjunto com a opção `--left-right`, imprima as contagens dos commits esquerdo e direito, separados por uma aba. Quando usado junto com a opção `--cherry-mark`, omita os commits equivalentes dos patches destas contagens e imprima a contagem para os commits equivalentes separados por uma aba."

#. type: Plain text
#: en/sequencer.txt:5
#, priority:100
msgid "Continue the operation in progress using the information in `.git/sequencer`.  Can be used to continue after resolving conflicts in a failed cherry-pick or revert."
msgstr "Continue a operação em andamento utilizando as informações existentes em `.git/sequencer`.  Pode ser utilizado para continuar após a resolução dos conflitos em uma falha na seleção ou reversão da escolha seletiva."

#. type: Plain text
#: en/sequencer.txt:9
#, priority:100
msgid "Skip the current commit and continue with the rest of the sequence."
msgstr "Ignore o commit atual e continue com o restante da sequência."

#. type: Plain text
#: en/sequencer.txt:14
#, priority:100
msgid "Forget about the current operation in progress.  Can be used to clear the sequencer state after a failed cherry-pick or revert."
msgstr "Esqueça a operação atual em andamento.  Pode ser utilizado para limpar a condição do sequenciador após uma falha na seleção ou reversão de uma escolha seletiva."

#. type: Plain text
#: en/sequencer.txt:16
#, priority:100
msgid "Cancel the operation and return to the pre-sequence state."
msgstr "Cancele a operação e retorne a condição pré-sequência."

#. type: Labeled list
#: en/signoff-option.txt:5
#, ignore-same, no-wrap, priority:280
msgid "--no-signoff"
msgstr "--no-signoff"

#. type: Plain text
#: en/signoff-option.txt:16
#, priority:280
msgid "Add a `Signed-off-by` trailer by the committer at the end of the commit log message.  The meaning of a signoff depends on the project to which you're committing.  For example, it may certify that the committer has the rights to submit the work under the project's license or agrees to some contributor representation, such as a Developer Certificate of Origin.  (See http://developercertificate.org for the one used by the Linux kernel and Git projects.)  Consult the documentation or leadership of the project to which you're contributing to understand how the signoffs are used in that project."
msgstr "Adicione uma resposta `Assinado-por` por quem fez o commit no final da mensagem de log do commit.  O significado de uma assinatura na saída da mensagem depende do projeto onde você está fazendo o commit.  Por exemplo, ele pode certificar que o autor do commit tem o direito de enviar o trabalho sob a licença do projeto ou concorda com alguma representação de quem está contribuindo, como um Certificado de Origem do Desenvolvedor.  (Consulte o http://developercertificate.org para conhecer aquele usado pelo kernel Linux e dos projetos Git.) Consulte a documentação ou liderança do projeto onde você está contribuindo para entender como as aprovações são usadas naquele projeto."

#. type: Plain text
#: en/signoff-option.txt:18
#, priority:280
msgid "The --no-signoff option can be used to countermand an earlier --signoff option on the command line."
msgstr "A opção --no-signoff pode ser usada para contra-ordenar uma opção --signoff anterior na linha de comando."

#. type: Plain text
#: en/transfer-data-leaks.txt:11
#, priority:220
msgid "The fetch and push protocols are not designed to prevent one side from stealing data from the other repository that was not intended to be shared. If you have private data that you need to protect from a malicious peer, your best option is to store it in another repository. This applies to both clients and servers. In particular, namespaces on a server are not effective for read access control; you should only grant read access to a namespace to clients that you would trust with read access to the entire repository."
msgstr "Os protocolos de busca e envio não foram projetados para impedir que um lado roube os dados do outro repositório que não deveriam ser compartilhado. Caso tenha dados particulares que precisam ser protegidos de um par malicioso, a sua melhor opção é armazená-los em um outro repositório. Isso se aplica aos clientes e aos servidores. Em particular, os espaço de nomes em um servidor não são eficazes para o controle de acesso de leitura; você só deve conceder acesso de leitura a um espaço de nomes para os clientes que você confiaria o acesso de leitura para todo o repositório."

#. type: Plain text
#: en/transfer-data-leaks.txt:13
#, priority:220
msgid "The known attack vectors are as follows:"
msgstr "Os vetores de ataque informados são os seguintes:"

#. type: Plain text
#: en/transfer-data-leaks.txt:26
#, priority:220
msgid "The victim sends \"have\" lines advertising the IDs of objects it has that are not explicitly intended to be shared but can be used to optimize the transfer if the peer also has them. The attacker chooses an object ID X to steal and sends a ref to X, but isn't required to send the content of X because the victim already has it. Now the victim believes that the attacker has X, and it sends the content of X back to the attacker later. (This attack is most straightforward for a client to perform on a server, by creating a ref to X in the namespace the client has access to and then fetching it. The most likely way for a server to perform it on a client is to \"merge\" X into a public branch and hope that the user does additional work on this branch and pushes it back to the server without noticing the merge.)"
msgstr "A vítima envia as linhas \"have\" anunciando as IDs dos objetos que possui, que não são explicitamente planejados para serem compartilhados, porém podem ser usados para otimizar a transferência caso o par também os tenha. O atacante escolhe um ID do objeto 'X' para roubar e envia uma \"ref\" para 'X', porém não é necessário enviar o conteúdo do 'X' porque a vítima já o possui. Agora a vítima acredita que o atacante tem o 'X' e depois envia seu conteúdo de volta ao atacante. (Esse ataque é mais simples para um cliente executar em um servidor, criando uma \"ref\" para 'X' no espaço de nomes onde o cliente tem acesso e em seguida, buscando-o. A maneira mais provável de um servidor executá-lo em um cliente é \"mesclar\" 'X' em um ramo público e esperar que o usuário faça um trabalho adicional neste ramo, enviá-lo de volta ao servidor sem perceber a mesclagem.)"

#. type: Plain text
#: en/transfer-data-leaks.txt:30
#, priority:220
msgid "As in #1, the attacker chooses an object ID X to steal. The victim sends an object Y that the attacker already has, and the attacker falsely claims to have X and not Y, so the victim sends Y as a delta against X.  The delta reveals regions of X that are similar to Y to the attacker."
msgstr "Como no item 1, o atacante escolhe um ID do objeto 'X' para roubar. A vítima envia um objeto 'Y' que o atacante já possui e o atacante afirma falsamente ter 'X' e não 'Y'; portanto, a vítima envia 'Y' como um delta contra 'X'. O delta revela as regiões de 'X' que são semelhantes para 'Y' ao atacante."

#. type: Title -
#: en/urls-remotes.txt:4
#, no-wrap, priority:220
msgid "REMOTES[[REMOTES]]"
msgstr "REMOTOS[[REMOTOS]]"

#. type: Plain text
#: en/urls-remotes.txt:8
#, priority:220
msgid "The name of one of the following can be used instead of a URL as `<repository>` argument:"
msgstr "O nome de um dos seguintes pode ser usado em vez de uma URL como argumento do `<repositório>`:"

#. type: Plain text
#: en/urls-remotes.txt:10
#, priority:220
msgid "a remote in the Git configuration file: `$GIT_DIR/config`,"
msgstr "um ramo remoto no arquivo de configuração do Git: `$GIT_DIR/config`,"

#. type: Plain text
#: en/urls-remotes.txt:11
#, priority:220
msgid "a file in the `$GIT_DIR/remotes` directory, or"
msgstr "um arquivo no diretório `$GIT_DIR/remotes` ou"

#. type: Plain text
#: en/urls-remotes.txt:12
#, priority:220
msgid "a file in the `$GIT_DIR/branches` directory."
msgstr "um arquivo no diretório `$GIT_DIR/branches`."

#. type: Plain text
#: en/urls-remotes.txt:15
#, priority:220
msgid "All of these also allow you to omit the refspec from the command line because they each contain a refspec which git will use by default."
msgstr "Tudo isso também permite seja omitido o refspec da linha de comando, pois cada um contém um refspec que o git utilizará de maneira predefinida."

#. type: Title ~
#: en/urls-remotes.txt:17
#, no-wrap, priority:220
msgid "Named remote in configuration file"
msgstr "Ramo remoto nomeado no arquivo de configuração"

#. type: Plain text
#: en/urls-remotes.txt:26
#, priority:220
msgid "You can choose to provide the name of a remote which you had previously configured using linkgit:git-remote[1], linkgit:git-config[1] or even by a manual edit to the `$GIT_DIR/config` file.  The URL of this remote will be used to access the repository.  The refspec of this remote will be used by default when you do not provide a refspec on the command line.  The entry in the config file would appear like this:"
msgstr "Você pode optar por informar o nome de um ramo remoto que você configurou anteriormente usando linkgit:git-remote[1], linkgit:git-config[1] ou até mesmo uma edição manual no arquivo `$GIT_DIR/config`.  A URL deste ramo remoto será usado para acessar o repositório.  É predefinido que o \"refspec\" deste ramo remoto será usado quando você não informar um refspec na linha de comando.  A entrada no arquivo de configuração ficaria assim:"

#. type: delimited block -
#: en/urls-remotes.txt:33
#, no-wrap, priority:220
msgid ""
"\t[remote \"<name>\"]\n"
"\t\turl = <URL>\n"
"\t\tpushurl = <pushurl>\n"
"\t\tpush = <refspec>\n"
"\t\tfetch = <refspec>\n"
msgstr ""
"\t[remote \"<nome>\"]\n"
"\t\turl = <URL>\n"
"\t\tpushurl = <pushurl>\n"
"\t\tpush = <refspec>\n"
"\t\tfetch = <refspec>\n"

#. type: Plain text
#: en/urls-remotes.txt:37
#, priority:220
msgid "The `<pushurl>` is used for pushes only. It is optional and defaults to `<URL>`."
msgstr "O `<pushurl>` é utilizado apenas para os envios. Além de opcional a sua predefinição retorna para `<URL>`."

#. type: Title ~
#: en/urls-remotes.txt:39
#, no-wrap, priority:220
msgid "Named file in `$GIT_DIR/remotes`"
msgstr "Arquivo nomeado no `$GIT_DIR/remotes`"

#. type: Plain text
#: en/urls-remotes.txt:47
#, priority:220
msgid "You can choose to provide the name of a file in `$GIT_DIR/remotes`.  The URL in this file will be used to access the repository.  The refspec in this file will be used as default when you do not provide a refspec on the command line.  This file should have the following format:"
msgstr "Você pode optar por fornecer o nome de um arquivo em `$GIT_DIR/remotes`.  A URL neste arquivo será utilizada para acessar o repositório.  O \"refspec\" neste arquivo será utilizado como uma predefinição quando você não informar um \"refspec\" na linha de comando.  Este arquivo deve ter o seguinte formato:"

#. type: delimited block -
#: en/urls-remotes.txt:52
#, no-wrap, priority:220
msgid ""
"\tURL: one of the above URL format\n"
"\tPush: <refspec>\n"
"\tPull: <refspec>\n"
msgstr ""
"\tURL: um dos formatos da URL acima\n"
"\tPush: <refspec>\n"
"\tPull: <refspec>\n"

#. type: Plain text
#: en/urls-remotes.txt:59
#, priority:220
msgid "`Push:` lines are used by 'git push' and `Pull:` lines are used by 'git pull' and 'git fetch'.  Multiple `Push:` and `Pull:` lines may be specified for additional branch mappings."
msgstr "`Push:` as linhas são usadas pelo comando 'git push' e `Pull:` as linhas são usadas pelo comando 'git pull' e 'git fetch'.  Várias linhas `Push:` e `Pull:` podem ser utilizadas para mapeamentos adicionais das ramificações."

#. type: Title ~
#: en/urls-remotes.txt:61
#, no-wrap, priority:220
msgid "Named file in `$GIT_DIR/branches`"
msgstr "Arquivo informado em `GIT_DIR/branches`"

#. type: Plain text
#: en/urls-remotes.txt:67
#, priority:220
msgid "You can choose to provide the name of a file in `$GIT_DIR/branches`.  The URL in this file will be used to access the repository.  This file should have the following format:"
msgstr "Você pode decidir entre informar o nome de um arquivo no `$GIT_DIR/branches`.  A URL neste arquivo será utilizada para acessar o repositório.  Este arquivo deve ter o seguinte formato:"

#. type: delimited block -
#: en/urls-remotes.txt:71
#, no-wrap, priority:220
msgid "\t<URL>#<head>\n"
msgstr "\t<URL>#<head>\n"

#. type: Plain text
#: en/urls-remotes.txt:74
#, priority:220
msgid "`<URL>` is required; `#<head>` is optional."
msgstr "A `<URL>` é necessária; `#<head>` é opcional."

#. type: Plain text
#: en/urls-remotes.txt:79
#, priority:220
msgid "Depending on the operation, git will use one of the following refspecs, if you don't provide one on the command line.  `<branch>` is the name of this file in `$GIT_DIR/branches` and `<head>` defaults to `master`."
msgstr "Dependendo da operação, o git usará um dos seguintes refspecs, caso nenhum seja utilizado na linha de comando.  O `<ramo>` (ramo) é o nome deste arquivo no `$GIT_DIR/branches` e `<head>` retorna a predefinição para `master`."

#. type: Plain text
#: en/urls-remotes.txt:81
#, priority:220
msgid "git fetch uses:"
msgstr "O git fetch usa:"

#. type: delimited block -
#: en/urls-remotes.txt:84
#, no-wrap, priority:220
msgid "\trefs/heads/<head>:refs/heads/<branch>\n"
msgstr "\trefs/heads/<head>:refs/heads/<ramo>\n"

#. type: Plain text
#: en/urls-remotes.txt:87
#, priority:220
msgid "git push uses:"
msgstr "O comando `git push` usa:"

#. type: delimited block -
#: en/urls-remotes.txt:90
#, no-wrap, priority:220
msgid "\tHEAD:refs/heads/<head>\n"
msgstr "\tHEAD:refs/heads/<head>\n"

#. type: Title -
#: en/urls.txt:2
#, no-wrap, priority:300
msgid "GIT URLS[[URLS]]"
msgstr "GIT URLS[[URLS]]"

#. type: Plain text
#: en/urls.txt:8
#, priority:300
msgid "In general, URLs contain information about the transport protocol, the address of the remote server, and the path to the repository.  Depending on the transport protocol, some of this information may be absent."
msgstr "Em geral as URLs contêm informações sobre o protocolo de transporte, o endereço do servidor remoto e o caminho para o repositório.  Dependendo do protocolo de transporte, algumas dessas informações podem estar ausentes."

#. type: Plain text
#: en/urls.txt:12
#, priority:300
msgid "Git supports ssh, git, http, and https protocols (in addition, ftp, and ftps can be used for fetching, but this is inefficient and deprecated; do not use it)."
msgstr "O Git suporta os protocolos ssh, git, http e https (além do ftp e ftps podem ser utilizados para capturar, porém é ineficiente e obsoleto; não utilize)."

#. type: Plain text
#: en/urls.txt:15
#, priority:300
msgid "The native transport (i.e. git:// URL) does no authentication and should be used with caution on unsecured networks."
msgstr "O transporte nativo (ou seja, git:// URL) não faz a autenticação e deve ser utilizado com cuidado em redes sem segurança."

#. type: Plain text
#: en/urls.txt:17
#, priority:300
msgid "The following syntaxes may be used with them:"
msgstr "As seguintes sintaxes podem ser utilizadas com eles:"

#. type: Plain text
#: en/urls.txt:19
#, priority:300
msgid "ssh://{startsb}user@{endsb}host.xz{startsb}:port{endsb}/path/to/repo.git/"
msgstr "ssh://{startsb}user@{endsb}host.xz{startsb}:port{endsb}/caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:20
#, priority:300
msgid "git://host.xz{startsb}:port{endsb}/path/to/repo.git/"
msgstr "git://host.xz{startsb}:port{endsb}/caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:21
#, priority:300
msgid "http{startsb}s{endsb}://host.xz{startsb}:port{endsb}/path/to/repo.git/"
msgstr "http{startsb}s{endsb}://host.xz{startsb}:port{endsb}/caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:22
#, priority:300
msgid "ftp{startsb}s{endsb}://host.xz{startsb}:port{endsb}/path/to/repo.git/"
msgstr "ftp{startsb}s{endsb}://host.xz{startsb}:port{endsb}/caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:24
#, priority:300
msgid "An alternative scp-like syntax may also be used with the ssh protocol:"
msgstr "Uma sintaxe alternativa como scp também pode ser utilizada com o protocolo ssh:"

#. type: Plain text
#: en/urls.txt:26
#, priority:300
msgid "{startsb}user@{endsb}host.xz:path/to/repo.git/"
msgstr "{startsb}user@{endsb}host.xz:caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:32
#, priority:300
msgid "This syntax is only recognized if there are no slashes before the first colon. This helps differentiate a local path that contains a colon. For example the local path `foo:bar` could be specified as an absolute path or `./foo:bar` to avoid being misinterpreted as an ssh url."
msgstr "Essa sintaxe apenas é reconhecida caso não haja barras antes dos primeiros dois pontos. Isso ajuda a diferenciar um caminho local que contém dois pontos. Por exemplo, o caminho local `foo:bar` pode ser utilizado como um caminho absoluto ou `./foo:bar` para evitar ser mal interpretado como uma url ssh."

#. type: Plain text
#: en/urls.txt:34
#, priority:300
msgid "The ssh and git protocols additionally support ~username expansion:"
msgstr "Os protocolos ssh e git também oferecem suporte à expansão do ~nome do usuário:"

#. type: Plain text
#: en/urls.txt:36
#, priority:300
msgid "ssh://{startsb}user@{endsb}host.xz{startsb}:port{endsb}/~{startsb}user{endsb}/path/to/repo.git/"
msgstr "ssh://{startsb}user@{endsb}host.xz{startsb}:port{endsb}/~{startsb}user{endsb}/caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:37
#, priority:300
msgid "git://host.xz{startsb}:port{endsb}/~{startsb}user{endsb}/path/to/repo.git/"
msgstr "git://host.xz{startsb}:port{endsb}/~{startsb}user{endsb}/caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:38
#, priority:300
msgid "{startsb}user@{endsb}host.xz:/~{startsb}user{endsb}/path/to/repo.git/"
msgstr "{startsb}user@{endsb}host.xz:/~{startsb}user{endsb}/caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:41
#, priority:300
msgid "For local repositories, also supported by Git natively, the following syntaxes may be used:"
msgstr "Para os repositórios locais, as seguintes sintaxes podem ser utilizadas que também são compatíveis de forma nativa pelo Git:"

#. type: Plain text
#: en/urls.txt:43
#, priority:300
msgid "/path/to/repo.git/"
msgstr "/caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:44
#, priority:300
msgid "\\file:///path/to/repo.git/"
msgstr "\\file:///caminho/para/o/repositório.git/"

#. type: Plain text
#: en/urls.txt:49
#, priority:300
msgid "These two syntaxes are mostly equivalent, except when cloning, when the former implies --local option. See linkgit:git-clone[1] for details."
msgstr "Estas duas sintaxes são basicamente equivalentes, exceto durante a clonagem, quando a primeira implica no uso da opção `--local`. Para mais detalhes, consulte linkgit:git-clone[1]."

#. type: Plain text
#: en/urls.txt:54
#, priority:300
msgid "These two syntaxes are mostly equivalent, except the former implies --local option."
msgstr "Essas duas sintaxes são basicamente equivalentes, exceto que a primeira implica no uso da opção `--local`."

#. type: Plain text
#: en/urls.txt:58
#, priority:300
msgid "'git clone', 'git fetch' and 'git pull', but not 'git push', will also accept a suitable bundle file. See linkgit:git-bundle[1]."
msgstr "O 'git clone', 'git fetch' e 'git pull', mas não o 'git push', também aceitarão um arquivo do pacote adequado. Consulte linkgit:git-bundle[1]."

#. type: Plain text
#: en/urls.txt:63
#, priority:300
msgid "When Git doesn't know how to handle a certain transport protocol, it attempts to use the 'remote-<transport>' remote helper, if one exists. To explicitly request a remote helper, the following syntax may be used:"
msgstr "Quando o Git não sabe como lidar com um determinado protocolo de transporte, quando existe, ele tenta usar o auxiliar `remote-<transporte>`. Para os repositórios locais, as seguintes sintaxes podem ser utilizadas:"

#. type: Plain text
#: en/urls.txt:65
#, priority:300
msgid "<transport>::<address>"
msgstr "<transporte>::<endereço>"

#. type: Plain text
#: en/urls.txt:69
#, priority:300
msgid "where <address> may be a path, a server and path, or an arbitrary URL-like string recognized by the specific remote helper being invoked. See linkgit:gitremote-helpers[7] for details."
msgstr "onde <endereço> pode ser um caminho, um servidor e um caminho ou uma sequência arbitrária semelhante a uma URL reconhecida por um auxiliar remoto em específico que está sendo chamado. Para mais detalhes, consulte linkgit:gitremote-helpers[7]."

#. type: Plain text
#: en/urls.txt:74
#, priority:300
msgid "If there are a large number of similarly-named remote repositories and you want to use a different format for them (such that the URLs you use will be rewritten into URLs that work), you can create a configuration section of the form:"
msgstr "Se houver um grande número de repositórios remotos com nomes semelhantes e caso queira usar um formato diferente para eles (de modo que as URLs utilizadas sejam reescritas nas URLs que funcionam), você poderá criar uma seção de configuração da opção:"

#. type: delimited block -
#: en/urls.txt:78
#, no-wrap, priority:300
msgid ""
"\t[url \"<actual url base>\"]\n"
"\t\tinsteadOf = <other url base>\n"
msgstr ""
"\t[url \"<url da base atual>\"]\n"
"\t\tinsteadOf = <a url da outra base>\n"

#. type: Plain text
#: en/urls.txt:81 en/urls.txt:100
#, priority:300
msgid "For example, with this:"
msgstr "Por exemplo:"

#. type: delimited block -
#: en/urls.txt:86
#, no-wrap, priority:300
msgid ""
"\t[url \"git://git.host.xz/\"]\n"
"\t\tinsteadOf = host.xz:/path/to/\n"
"\t\tinsteadOf = work:\n"
msgstr ""
"\t[url \"git://git.host.xz/\"]\n"
"\t\tinsteadOf = host.xz:/path/to/\n"
"\t\tinsteadOf = work:\n"

#. type: Plain text
#: en/urls.txt:90
#, priority:300
msgid "a URL like \"work:repo.git\" or like \"host.xz:/path/to/repo.git\" will be rewritten in any context that takes a URL to be \"git://git.host.xz/repo.git\"."
msgstr "uma URL como \"work:repo.git\" ou como \"host.xz:/caminho/para/o/repositório.git\" será reescrito em qualquer contexto onde a URL seja \"git://git.host.xz/repo.git\"."

#. type: Plain text
#: en/urls.txt:93
#, priority:300
msgid "If you want to rewrite URLs for push only, you can create a configuration section of the form:"
msgstr "Caso queira reescrever apenas as URLs para envio por \"push\" (impulsionamento), é possível criar uma seção de configuração da opção:"

#. type: delimited block -
#: en/urls.txt:97
#, no-wrap, priority:300
msgid ""
"\t[url \"<actual url base>\"]\n"
"\t\tpushInsteadOf = <other url base>\n"
msgstr ""
"\t[url \"<url da base atual>\"]\n"
"\t\tpushInsteadOf = <a url da outra base>\n"

#. type: delimited block -
#: en/urls.txt:104
#, no-wrap, priority:300
msgid ""
"\t[url \"ssh://example.org/\"]\n"
"\t\tpushInsteadOf = git://example.org/\n"
msgstr ""
"\t[url \"ssh://exemplo.org/\"]\n"
"\t\tpushInsteadOf = git://exemplo.org/\n"

#. type: Plain text
#: en/urls.txt:108
#, priority:300
msgid "a URL like \"git://example.org/path/to/repo.git\" will be rewritten to \"ssh://example.org/path/to/repo.git\" for pushes, but pulls will still use the original URL."
msgstr "uma URL como \"git://exemplo.org/caminho/para/o/repositório.git\" será reescrito para \"ssh://exemplo.org/caminho/para/o/repositório.git\" para os \"pushes\" (impulsionamentos), porém os \"pulls\" (obtenções) ainda usarão a URL original."

#. type: Title =
#: en/git-bisect-lk2009.txt:2
#, no-wrap, priority:100
msgid "Fighting regressions with git bisect"
msgstr "Combatendo as regressões com comando `git bisect`"

#. type: Title -
#: en/git-bisect-lk2009.txt:8
#, no-wrap, priority:100
msgid "Abstract"
msgstr "Resumo"

#. type: Plain text
#: en/git-bisect-lk2009.txt:17
#, priority:100
msgid "\"git bisect\" enables software users and developers to easily find the commit that introduced a regression. We show why it is important to have good tools to fight regressions. We describe how \"git bisect\" works from the outside and the algorithms it uses inside. Then we explain how to take advantage of \"git bisect\" to improve current practices. And we discuss how \"git bisect\" could improve in the future."
msgstr "O comando \"git bisect\" permite que os usuários e os desenvolvedores de software encontrem facilmente o commit que introduziu uma regressão. Mostramos por que é importante ter boas ferramentas para combater as regressões. Nós descrevemos como o comando \"git bisect\" funciona de fora e os algoritmos que ele utiliza por dentro. Em seguida, explicamos como tirar proveito do comando \"git bisect\" para melhorar as práticas atuais. E discutimos como o \"git bisect\" pode melhorar no futuro."

#. type: Title -
#: en/git-bisect-lk2009.txt:20
#, no-wrap, priority:100
msgid "Introduction to \"git bisect\""
msgstr "Introdução ao \"git bisect'"

#. type: Plain text
#: en/git-bisect-lk2009.txt:24
#, priority:100
msgid "Git is a Distributed Version Control system (DVCS) created by Linus Torvalds and maintained by Junio Hamano."
msgstr "O Git é um sistema de controle de versão distribuído (DVCS) criado por Linus Torvalds e mantido por Junio Hamano."

#. type: Plain text
#: en/git-bisect-lk2009.txt:30
#, priority:100
msgid "In Git like in many other Version Control Systems (VCS), the different states of the data that is managed by the system are called commits. And, as VCS are mostly used to manage software source code, sometimes \"interesting\" changes of behavior in the software are introduced in some commits."
msgstr "No Git como em muitos outros sistemas de controle de versão (VCS), as diferentes condições dos dados gerenciados pelo sistema são chamados de commits. E como o VCS é utilizado principalmente para gerenciar o código-fonte do software, algumas alterações \"interessantes\" do comportamento no software são introduzidas em alguns commits."

#. type: Plain text
#: en/git-bisect-lk2009.txt:37
#, priority:100
msgid "In fact people are specially interested in commits that introduce a \"bad\" behavior, called a bug or a regression. They are interested in these commits because a commit (hopefully) contains a very small set of source code changes. And it's much easier to understand and properly fix a problem when you only need to check a very small set of changes, than when you don't know where look in the first place."
msgstr "De fato, as pessoas estão especialmente interessadas em confirmações que introduzem um comportamento \"ruim\", chamado de bug ou regressão. Eles estão interessados nestes commits porque um commit (espero) contém um conjunto muito pequeno de alterações no código-fonte. E é muito mais fácil entender e corrigir adequadamente um problema quando você só precisa verificar um conjunto muito pequeno de alterações do que quando não sabe onde procurar."

#. type: Plain text
#: en/git-bisect-lk2009.txt:45
#, priority:100
msgid "So to help people find commits that introduce a \"bad\" behavior, the \"git bisect\" set of commands was invented. And it follows of course that in \"git bisect\" parlance, commits where the \"interesting behavior\" is present are called \"bad\" commits, while other commits are called \"good\" commits. And a commit that introduce the behavior we are interested in is called a \"first bad commit\". Note that there could be more than one \"first bad commit\" in the commit space we are searching."
msgstr "Portanto, para ajudar as pessoas a encontrar os commits que introduzam um comportamento \"ruim\", o conjunto dos comandos \"git bisect\" foi inventado. E segue-se, é claro, que na linguagem do comando \"git bisect\", os commits onde o \"comportamento interessante\" estão presente são chamados de \"commits ruins\", enquanto os outros commits são chamados de commits \"bons\". E um commit que introduz o comportamento que estamos interessados é chamado de \"primeiro commit ruim\". Observe que pode haver mais de um \"primeiro commit ruim\" no espaço do commit que estamos pesquisando."

#. type: Plain text
#: en/git-bisect-lk2009.txt:48
#, priority:100
msgid "So \"git bisect\" is designed to help find a \"first bad commit\". And to be as efficient as possible, it tries to perform a binary search."
msgstr "Portanto, o comando \"git bisect\" foi projetado para ajudar a encontrar um \"primeiro commit ruim\". E para ser o mais eficiente possível, ele tenta executar uma pesquisa binária."

#. type: Title -
#: en/git-bisect-lk2009.txt:51
#, no-wrap, priority:100
msgid "Fighting regressions overview"
msgstr "Uma visão geral da luta contra as regressões"

#. type: Title ~
#: en/git-bisect-lk2009.txt:54
#, no-wrap, priority:100
msgid "Regressions: a big problem"
msgstr "Regressões: um grande problema"

#. type: Plain text
#: en/git-bisect-lk2009.txt:58
#, priority:100
msgid "Regressions are a big problem in the software industry. But it's difficult to put some real numbers behind that claim."
msgstr "As regressões são um grande problema na indústria do software. Mas é difícil colocar alguns números reais por trás desta afirmação."

#. type: Plain text
#: en/git-bisect-lk2009.txt:61
#, priority:100
msgid "There are some numbers about bugs in general, like a NIST study in 2002 <<1>> that said:"
msgstr "Existem alguns números sobre os erros em geral, como um estudo do NIST em 2002 <<1>> que dizia:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:78
#, priority:100
msgid "Software bugs, or errors, are so prevalent and so detrimental that they cost the U.S. economy an estimated $59.5 billion annually, or about 0.6 percent of the gross domestic product, according to a newly released study commissioned by the Department of Commerce's National Institute of Standards and Technology (NIST). At the national level, over half of the costs are borne by software users and the remainder by software developers/vendors.  The study also found that, although all errors cannot be removed, more than a third of these costs, or an estimated $22.2 billion, could be eliminated by an improved testing infrastructure that enables earlier and more effective identification and removal of software defects. These are the savings associated with finding an increased percentage (but not 100 percent) of errors closer to the development stages in which they are introduced. Currently, over half of all errors are not found until \"downstream\" in the development process or during post-sale software use."
msgstr "Bugs ou erros de software são tão prevalentes e tão prejudiciais que custam à economia dos Estados Unidos um valor estimado em US$59.5 bilhões anualmente, ou cerca de 0.6 por cento do produto interno bruto, de acordo com um estudo recém-lançado, encomendado pelo Instituto Nacional de Padrões e Tecnologia do Departamento de Comércio (NIST). No nível nacional, mais da metade dos custos são drenados pelos usuários de software e o restante pelos desenvolvedores/fornecedores de software.  O estudo também descobriu que, embora todos os erros não possam ser removidos, mais de um terço destes custos, ou um valor estimado em US$22.2 bilhões, poderia ser eliminado por uma infraestrutura de teste mais aprimorada onde permita a identificação e a remoção antecipada e mais eficaz dos defeitos de software. Estas são as economias associadas à descoberta de uma porcentagem aumentada (mas não 100 por cento) dos erros mais próximos dos estágios de desenvolvimento onde são introduzidos. Atualmente, mais da metade de todos os erros não são encontrados até serem baixados no processo de desenvolvimento ou durante o uso do software pós-venda."

#. type: Plain text
#: en/git-bisect-lk2009.txt:81
#, priority:100
msgid "And then:"
msgstr "E depois:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:87
#, priority:100
msgid "Software developers already spend approximately 80 percent of development costs on identifying and correcting defects, and yet few products of any type other than software are shipped with such high levels of errors."
msgstr "Os desenvolvedores de software já gastam aproximadamente 80 por cento dos custos de desenvolvimento na identificação e na correção dos defeitos, e ainda assim poucos produtos de qualquer tipo que não sejam software são enviados com níveis muito altos de erros."

#. type: Plain text
#: en/git-bisect-lk2009.txt:90
#, priority:100
msgid "Eventually the conclusion started with:"
msgstr "Eventualmente, a conclusão começou com:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:94
#, priority:100
msgid "The path to higher software quality is significantly improved software testing."
msgstr "O caminho para uma maior qualidade de software é um teste significativamente aprimorado do software."

#. type: Plain text
#: en/git-bisect-lk2009.txt:98
#, priority:100
msgid "There are other estimates saying that 80% of the cost related to software is about maintenance <<2>>."
msgstr "Existem outras estimativas dizendo que 80% do custo relacionado ao software é relacionado com a manutenção<<2>>."

#. type: Plain text
#: en/git-bisect-lk2009.txt:100
#, priority:100
msgid "Though, according to Wikipedia <<3>>:"
msgstr "Porém, de acordo com a Wikipedia <<3>>:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:108
#, priority:100
msgid "A common perception of maintenance is that it is merely fixing bugs. However, studies and surveys over the years have indicated that the majority, over 80%, of the maintenance effort is used for non-corrective actions (Pigosky 1997). This perception is perpetuated by users submitting problem reports that in reality are functionality enhancements to the system."
msgstr "Uma percepção comum da manutenção é que ela está apenas consertando bugs. No entanto, estudos e pesquisas ao longo dos anos indicaram que a maioria, mais de 80%, do esforço de manutenção é usada para ações não corretivas (Pigosky, 1997). Essa percepção é perpetuada através dos usuários que enviam relatórios de problemas que, na realidade, são aprimoramentos da funcionalidade no sistema."

#. type: Plain text
#: en/git-bisect-lk2009.txt:113
#, priority:100
msgid "But we can guess that improving on existing software is very costly because you have to watch out for regressions. At least this would make the above studies consistent among themselves."
msgstr "Porém podemos adivinhar que o aprimoramento do software existente é muito caro porque é preciso estar atento às regressões. Pelo menos isso tornaria os estudos acima consistentes entre si."

#. type: Plain text
#: en/git-bisect-lk2009.txt:121
#, priority:100
msgid "Of course some kind of software is developed, then used during some time without being improved on much, and then finally thrown away. In this case, of course, regressions may not be a big problem. But on the other hand, there is a lot of big software that is continually developed and maintained during years or even tens of years by a lot of people. And as there are often many people who depend (sometimes critically) on such software, regressions are a really big problem."
msgstr "É claro que algum tipo de software é desenvolvido, usado durante algum tempo sem ser muito aprimorado e finalmente, jogado fora. Nesse caso, é claro, as regressões podem não ser um grande problema. Por outro lado, há muitos softwares grandes que são continuamente desenvolvidos e mantidos durante anos ou mesmo dezenas de anos por muitas pessoas. E como muitas vezes existem muitas pessoas que dependem (às vezes de maneira crítica) deste software, as regressões são realmente um grande problema."

#. type: Plain text
#: en/git-bisect-lk2009.txt:128
#, priority:100
msgid "One such software is the Linux kernel. And if we look at the Linux kernel, we can see that a lot of time and effort is spent to fight regressions. The release cycle start with a 2 weeks long merge window. Then the first release candidate (rc) version is tagged. And after that about 7 or 8 more rc versions will appear with around one week between each of them, before the final release."
msgstr "Um destes softwares é o kernel do Linux. E se olharmos para o kernel Linux, podemos ver que muito tempo e esforço são gastos para combater as regressões. O ciclo de lançamento começa com uma janela de mesclagem de duas semanas. Em seguida, o candidato do primeiro lançamento (rc) é marcado. E depois disso, cerca de 7 ou 8 versões de candidatos aparecerão com cerca de uma semana de espaço entre cada uma delas, antes do lançamento final."

#. type: Plain text
#: en/git-bisect-lk2009.txt:134
#, priority:100
msgid "The time between the first rc release and the final release is supposed to be used to test rc versions and fight bugs and especially regressions. And this time is more than 80% of the release cycle time. But this is not the end of the fight yet, as of course it continues after the release."
msgstr "O tempo entre a primeira versão rc (release candidate = versão de lançamento) e a versão final deve ser utilizado para testar as versões rc, resolver os bugs e especialmente as regressões. Mais de 80% deste tempo gira em torno do ciclo de lançamento. Mas este ainda não é o fim da batalha, pois é óbvio que ele continua após o seu lançamento."

#. type: Plain text
#: en/git-bisect-lk2009.txt:137
#, priority:100
msgid "And then this is what Ingo Molnar (a well known Linux kernel developer) says about his use of git bisect:"
msgstr "E é isso que o Ingo Molnar (um informado desenvolvedor de kernel do Linux) diz sobre o uso do 'git bisect':"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:143
#, priority:100
msgid "I most actively use it during the merge window (when a lot of trees get merged upstream and when the influx of bugs is the highest) - and yes, there have been cases that i used it multiple times a day. My average is roughly once a day."
msgstr "Eu o utilizo de forma mais ativa durante a janela da mesclagem (quando muitas árvores são mescladas na upstream e quando o influxo de bugs é mais alto) - e sim, houve casos onde eu o usei várias vezes no dia. Minha média é de aproximadamente uma vez por dia."

#. type: Plain text
#: en/git-bisect-lk2009.txt:149
#, priority:100
msgid "So regressions are fought all the time by developers, and indeed it is well known that bugs should be fixed as soon as possible, so as soon as they are found. That's why it is interesting to have good tools for this purpose."
msgstr "Portanto, as regressões são combatidas o tempo todo pelos desenvolvedores e de fato, é sabido que os bugs devem ser corrigidos o mais rápido possível, tão logo sejam encontrados. É por isso que é importante ter boas ferramentas para este fim."

#. type: Title ~
#: en/git-bisect-lk2009.txt:151
#, no-wrap, priority:100
msgid "Other tools to fight regressions"
msgstr "Outras ferramentas para combater as regressões"

#. type: Plain text
#: en/git-bisect-lk2009.txt:156
#, priority:100
msgid "So what are the tools used to fight regressions? They are nearly the same as those used to fight regular bugs. The only specific tools are test suites and tools similar as \"git bisect\"."
msgstr "Então, quais são as ferramentas utilizadas para combater as regressões? Eles são quase os mesmos daqueles utilizados para combater os bugs tradicionais. As únicas ferramentas específicas são pacotes de testes e as ferramentas similares ao \"git bisect\"."

#. type: Plain text
#: en/git-bisect-lk2009.txt:162
#, priority:100
msgid "Test suites are very nice. But when they are used alone, they are supposed to be used so that all the tests are checked after each commit. This means that they are not very efficient, because many tests are run for no interesting result, and they suffer from combinatorial explosion."
msgstr "Os conjuntos de teste são muito legais. Mas quando eles são utilizados sozinhos, eles devem ser usados para que todos os testes sejam verificados após cada commit. Isto significa que eles não são muito eficientes, porque muitos testes são realizados sem resultados interessantes e sofrem com explosões combinatórias."

#. type: Plain text
#: en/git-bisect-lk2009.txt:167
#, priority:100
msgid "In fact the problem is that big software often has many different configuration options and that each test case should pass for each configuration after each commit. So if you have for each release: N configurations, M commits and T test cases, you should perform:"
msgstr "De fato, o problema é que um software grande geralmente possui muitas opções de configuração diferentes e que cada caso de teste deve passar para cada configuração após cada commit. Portanto, caso tenha para cada release: 'N' configurações, 'M' commits e 'T' casos de teste, execute:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:170
#, no-wrap, priority:100
msgid "N * M * T tests\n"
msgstr "N * M * T tests\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:173
#, priority:100
msgid "where N, M and T are all growing with the size your software."
msgstr "onde 'N', 'M' e 'T' estão crescendo com o tamanho do seu software."

#. type: Plain text
#: en/git-bisect-lk2009.txt:175
#, priority:100
msgid "So very soon it will not be possible to completely test everything."
msgstr "Logo, não será possível testar completamente tudo."

#. type: Plain text
#: en/git-bisect-lk2009.txt:182
#, priority:100
msgid "And if some bugs slip through your test suite, then you can add a test to your test suite. But if you want to use your new improved test suite to find where the bug slipped in, then you will either have to emulate a bisection process or you will perhaps bluntly test each commit backward starting from the \"bad\" commit you have which may be very wasteful."
msgstr "E caso alguns erros passarem pelo seu conjunto de testes, você poderá adicionar um teste ao seu conjunto de testes. Porém caso queira utilizar o seu novo conjunto aprimorado de testes para descobrir onde o erro ocorreu, será necessário emular um processo de bisseção ou talvez você teste cada commit sem rodeios de forma inversa a partir do commit \"ruim\" que você possa ter, sendo um total desperdício."

#. type: Title -
#: en/git-bisect-lk2009.txt:184
#, no-wrap, priority:100
msgid "\"git bisect\" overview"
msgstr "Visão geral do \"git bisect\""

#. type: Title ~
#: en/git-bisect-lk2009.txt:187
#, no-wrap, priority:100
msgid "Starting a bisection"
msgstr "Iniciando uma bisseção"

#. type: Plain text
#: en/git-bisect-lk2009.txt:194
#, priority:100
msgid "The first \"git bisect\" subcommand to use is \"git bisect start\" to start the search. Then bounds must be set to limit the commit space. This is done usually by giving one \"bad\" and at least one \"good\" commit. They can be passed in the initial call to \"git bisect start\" like this:"
msgstr "O primeiro subcomando \"git bisect\" que será usado é \"git bisect start\" para iniciar a pesquisa. Em seguida, os limites devem ser definidos para limitar o espaço dos commits. Isso geralmente é feito com um commit \"ruim\" e pelo menos um commit \"bom\". Eles podem ser passados na chamada inicial para o comando \"git bisect start\" assim:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:197
#, ignore-ellipsis, no-wrap, priority:100
msgid "$ git bisect start [BAD [GOOD...]]\n"
msgstr "$ git bisect start [BAD [GOOD...]]\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:200
#, priority:100
msgid "or they can be set using:"
msgstr "ou eles podem ser definidos usando:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:203
#, no-wrap, priority:100
msgid "$ git bisect bad [COMMIT]\n"
msgstr "$ git bisect bad [COMMIT]\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:206
#, priority:100
msgid "and:"
msgstr "e:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:209
#, ignore-ellipsis, no-wrap, priority:100
msgid "$ git bisect good [COMMIT...]\n"
msgstr "$ git bisect good [COMMIT...]\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:213
#, priority:100
msgid "where BAD, GOOD and COMMIT are all names that can be resolved to a commit."
msgstr "onde `BAD`, `GOOD` e `COMMIT` são todos os nomes que podem ser resolvidos para um commit."

#. type: Plain text
#: en/git-bisect-lk2009.txt:216
#, priority:100
msgid "Then \"git bisect\" will checkout a commit of its choosing and ask the user to test it, like this:"
msgstr "Então, o comando \"git bisect\" fará a averiguação de um commit de sua escolha e solicitará que o usuário o teste, assim:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:221
#, no-wrap, priority:100
msgid ""
"$ git bisect start v2.6.27 v2.6.25\n"
"Bisecting: 10928 revisions left to test after this (roughly 14 steps)\n"
"[2ec65f8b89ea003c27ff7723525a2ee335a2b393] x86: clean up using max_low_pfn on 32-bit\n"
msgstr ""
"$ git bisect start v2.6.27 v2.6.25\n"
"Bisecting: 10928 revisions left to test after this (roughly 14 steps)\n"
"[2ec65f8b89ea003c27ff7723525a2ee335a2b393] x86: clean up using max_low_pfn on 32-bit\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:229
#, priority:100
msgid "Note that the example that we will use is really a toy example, we will be looking for the first commit that has a version like \"2.6.26-something\", that is the commit that has a \"SUBLEVEL = 26\" line in the top level Makefile. This is a toy example because there are better ways to find this commit with Git than using \"git bisect\" (for example \"git blame\" or \"git log -S<string>\")."
msgstr "Observe que o exemplo que usaremos é realmente um exemplo de brinquedo; procuraremos o primeiro commit que possui uma versão como \"2.6.26-alguma-coisa\", ou seja, o commit que possua uma linha \"SUBLEVEL = 26\" no nível mais alto do Makefile. Este é um exemplo de um brinquedo, porque existem maneiras melhores para encontrar este commit com o Git em vez de utilizar o \"git bisect\" (por exemplo, \"git blame\" ou \"git log -S<texto>\")."

#. type: Title ~
#: en/git-bisect-lk2009.txt:231
#, no-wrap, priority:100
msgid "Driving a bisection manually"
msgstr "Conduzindo uma bisseção manualmente"

#. type: Plain text
#: en/git-bisect-lk2009.txt:236
#, priority:100
msgid "At this point there are basically 2 ways to drive the search. It can be driven manually by the user or it can be driven automatically by a script or a command."
msgstr "Neste ponto, existem basicamente duas maneiras de conduzir a pesquisa. Pode ser acionado manualmente através do usuário ou automaticamente através de um script ou comando."

#. type: Plain text
#: en/git-bisect-lk2009.txt:241
#, priority:100
msgid "If the user is driving it, then at each step of the search, the user will have to test the current commit and say if it is \"good\" or \"bad\" using the \"git bisect good\" or \"git bisect bad\" commands respectively that have been described above. For example:"
msgstr "Caso o usuário esteja conduzindo, em cada etapa da pesquisa, o usuário terá que testar a confirmação atual e dizer se é \"bom\" ou \"ruim\" utilizando os comandos 'git bisect good' or 'git bisect bad' respectivamente, como foram descritos acima. Por exemplo:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:246
#, no-wrap, priority:100
msgid ""
"$ git bisect bad\n"
"Bisecting: 5480 revisions left to test after this (roughly 13 steps)\n"
"[66c0b394f08fd89236515c1c84485ea712a157be] KVM: kill file->f_count abuse in kvm\n"
msgstr ""
"$ git bisect bad\n"
"Bisecting: 5480 revisions left to test after this (roughly 13 steps)\n"
"[66c0b394f08fd89236515c1c84485ea712a157be] KVM: kill file->f_count abuse in kvm\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:250
#, priority:100
msgid "And after a few more steps like that, \"git bisect\" will eventually find a first bad commit:"
msgstr "E após mais algumas etapas como essa, o comando \"git bisect\" acabará por encontrar um primeiro commit incorreto:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:257
#, no-wrap, priority:100
msgid ""
"$ git bisect bad\n"
"2ddcca36c8bcfa251724fe342c8327451988be0d is the first bad commit\n"
"commit 2ddcca36c8bcfa251724fe342c8327451988be0d\n"
"Author: Linus Torvalds <torvalds@linux-foundation.org>\n"
"Date:   Sat May 3 11:59:44 2008 -0700\n"
msgstr ""
"$ git bisect bad\n"
"2ddcca36c8bcfa251724fe342c8327451988be0d is the first bad commit\n"
"commit 2ddcca36c8bcfa251724fe342c8327451988be0d\n"
"Autor: Linus Torvalds <torvalds@linux-foundation.org>\n"
"Data:   Sáb Mai 3 11:59:44 2008 -0700\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:259 en/git-bisect-lk2009.txt:273 en/git-bisect-lk2009.txt:333
#, no-wrap, priority:100
msgid "    Linux 2.6.26-rc1\n"
msgstr "    Linux 2.6.26-rc1\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:261
#, ignore-ellipsis, no-wrap, priority:100
msgid ":100644 100644 5cf82581... 4492984e... M      Makefile\n"
msgstr ":100644 100644 5cf82581... 4492984e... M      Makefile\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:265
#, priority:100
msgid "At this point we can see what the commit does, check it out (if it's not already checked out) or tinker with it, for example:"
msgstr "Neste ponto, podemos ver o que o commit faz, dar uma olhada (se ainda não tiver feito a averiguação) ou mexer com ele, por exemplo:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:271
#, no-wrap, priority:100
msgid ""
"$ git show HEAD\n"
"commit 2ddcca36c8bcfa251724fe342c8327451988be0d\n"
"Author: Linus Torvalds <torvalds@linux-foundation.org>\n"
"Date:   Sat May 3 11:59:44 2008 -0700\n"
msgstr ""
"$ git show HEAD\n"
"commit 2ddcca36c8bcfa251724fe342c8327451988be0d\n"
"Autor: Linus Torvalds <torvalds@linux-foundation.org>\n"
"Data:   Sáb Mai 3 11:59:44 2008 -0700\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:286
#, no-wrap, priority:100
msgid ""
"diff --git a/Makefile b/Makefile\n"
"index 5cf8258..4492984 100644\n"
"--- a/Makefile\n"
"+++ b/Makefile\n"
"@@ -1,7 +1,7 @@\n"
" VERSION = 2\n"
" PATCHLEVEL = 6\n"
"-SUBLEVEL = 25\n"
"-EXTRAVERSION =\n"
"+SUBLEVEL = 26\n"
"+EXTRAVERSION = -rc1\n"
" NAME = Funky Weasel is Jiggy wit it\n"
msgstr ""
"diff --git a/Makefile b/Makefile\n"
"index 5cf8258..4492984 100644\n"
"--- a/Makefile\n"
"+++ b/Makefile\n"
"@@ -1,7 +1,7 @@\n"
" VERSION = 2\n"
" PATCHLEVEL = 6\n"
"-SUBLEVEL = 25\n"
"-EXTRAVERSION =\n"
"+SUBLEVEL = 26\n"
"+EXTRAVERSION = -rc1\n"
" NAME = Funky Weasel is Jiggy wit it\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:288
#, no-wrap, priority:100
msgid " # *DOCUMENTATION*\n"
msgstr " # *DOCUMENTAÇÃO*\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:292
#, priority:100
msgid "And when we are finished we can use \"git bisect reset\" to go back to the branch we were in before we started bisecting:"
msgstr "E quando terminarmos, podemos usar o comando \"git bisect reset\" para voltar ao ramo em que estávamos antes de começarmos a dividir:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:298
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"$ git bisect reset\n"
"Checking out files: 100% (21549/21549), done.\n"
"Previous HEAD position was 2ddcca3... Linux 2.6.26-rc1\n"
"Switched to branch 'master'\n"
msgstr ""
"$ git bisect reset\n"
"Checking out files: 100% (21549/21549), done.\n"
"Previous HEAD position was 2ddcca3... Linux 2.6.26-rc1\n"
"Switched to branch 'master'\n"

#. type: Title ~
#: en/git-bisect-lk2009.txt:301
#, no-wrap, priority:100
msgid "Driving a bisection automatically"
msgstr "Conduzindo uma bisseção automaticamente"

#. type: Plain text
#: en/git-bisect-lk2009.txt:307
#, priority:100
msgid "The other way to drive the bisection process is to tell \"git bisect\" to launch a script or command at each bisection step to know if the current commit is \"good\" or \"bad\". To do that, we use the \"git bisect run\" command. For example:"
msgstr "A outra maneira de conduzir o processo de bisseção é dizer ao `git bisect` para lançar um script ou comando a cada etapa da bisseção para saber se o compromisso atual é \"bom\" ou \"ruim\". Para fazer isso, nós usamos o comando \"git bisect run\". Por exemplo:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:331
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"$ git bisect start v2.6.27 v2.6.25\n"
"Bisecting: 10928 revisions left to test after this (roughly 14 steps)\n"
"[2ec65f8b89ea003c27ff7723525a2ee335a2b393] x86: clean up using max_low_pfn on 32-bit\n"
"$\n"
"$ git bisect run grep '^SUBLEVEL = 25' Makefile\n"
"running grep ^SUBLEVEL = 25 Makefile\n"
"Bisecting: 5480 revisions left to test after this (roughly 13 steps)\n"
"[66c0b394f08fd89236515c1c84485ea712a157be] KVM: kill file->f_count abuse in kvm\n"
"running grep ^SUBLEVEL = 25 Makefile\n"
"SUBLEVEL = 25\n"
"Bisecting: 2740 revisions left to test after this (roughly 12 steps)\n"
"[671294719628f1671faefd4882764886f8ad08cb] V4L/DVB(7879): Adding cx18 Support for mxl5005s\n"
"...\n"
"...\n"
"running grep ^SUBLEVEL = 25 Makefile\n"
"Bisecting: 0 revisions left to test after this (roughly 0 steps)\n"
"[2ddcca36c8bcfa251724fe342c8327451988be0d] Linux 2.6.26-rc1\n"
"running grep ^SUBLEVEL = 25 Makefile\n"
"2ddcca36c8bcfa251724fe342c8327451988be0d is the first bad commit\n"
"commit 2ddcca36c8bcfa251724fe342c8327451988be0d\n"
"Author: Linus Torvalds <torvalds@linux-foundation.org>\n"
"Date:   Sat May 3 11:59:44 2008 -0700\n"
msgstr ""
"$ git bisect start v2.6.27 v2.6.25\n"
"Bisecting: 10928 revisions left to test after this (roughly 14 steps)\n"
"[2ec65f8b89ea003c27ff7723525a2ee335a2b393] x86: clean up using max_low_pfn on 32-bit\n"
"$\n"
"$ git bisect run grep '^SUBLEVEL = 25' Makefile\n"
"running grep ^SUBLEVEL = 25 Makefile\n"
"Bisecting: 5480 revisions left to test after this (roughly 13 steps)\n"
"[66c0b394f08fd89236515c1c84485ea712a157be] KVM: kill file->f_count abuse in kvm\n"
"running grep ^SUBLEVEL = 25 Makefile\n"
"SUBLEVEL = 25\n"
"Bisecting: 2740 revisions left to test after this (roughly 12 steps)\n"
"[671294719628f1671faefd4882764886f8ad08cb] V4L/DVB(7879): Adding cx18 Support for mxl5005s\n"
"...\n"
"...\n"
"running grep ^SUBLEVEL = 25 Makefile\n"
"Bisecting: 0 revisions left to test after this (roughly 0 steps)\n"
"[2ddcca36c8bcfa251724fe342c8327451988be0d] Linux 2.6.26-rc1\n"
"running grep ^SUBLEVEL = 25 Makefile\n"
"2ddcca36c8bcfa251724fe342c8327451988be0d is the first bad commit\n"
"commit 2ddcca36c8bcfa251724fe342c8327451988be0d\n"
"Author: Linus Torvalds <torvalds@linux-foundation.org>\n"
"Date:   Sat May 3 11:59:44 2008 -0700\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:336
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
":100644 100644 5cf82581... 4492984e... M      Makefile\n"
"bisect run success\n"
msgstr ""
":100644 100644 5cf82581... 4492984e... M      Makefile\n"
"bisect run success\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:345
#, priority:100
msgid "In this example, we passed \"grep '^SUBLEVEL = 25' Makefile\" as parameter to \"git bisect run\". This means that at each step, the grep command we passed will be launched. And if it exits with code 0 (that means success) then git bisect will mark the current state as \"good\". If it exits with code 1 (or any code between 1 and 127 included, except the special code 125), then the current state will be marked as \"bad\"."
msgstr "Neste exemplo, passamos \"grep '^SUBLEVEL = 25' Makefile\" como parâmetro para o comando `git bisect run`. Isso significa que, a cada passo, o comando 'grep' que encaminhamos será iniciado. E caso encerre com o código 0 (que significa sucesso), o comando `git bisect` marcará a condição atual como \"bom\". Caso encerre com o código 1 (ou qualquer código entre 1 e incluindo o 127, exceto o código especial 125), a condição atual será marcado como \"ruim\"."

#. type: Plain text
#: en/git-bisect-lk2009.txt:350
#, priority:100
msgid "Exit code between 128 and 255 are special to \"git bisect run\". They make it stop immediately the bisection process. This is useful for example if the command passed takes too long to complete, because you can kill it with a signal and it will stop the bisection process."
msgstr "O código de saída entre 128 e 255 é especial para o comando \"git bisect run\". Eles fazem parar imediatamente o processo de bisseção. É útil por exemplo, caso o comando encaminhado demorar muito para ser concluído, por é possível encerrá-lo com um sinal que interromperá o processo de bisseção."

#. type: Plain text
#: en/git-bisect-lk2009.txt:353
#, priority:100
msgid "It can also be useful in scripts passed to \"git bisect run\" to \"exit 255\" if some very abnormal situation is detected."
msgstr "Também pode ser útil nos scripts encaminhados para o comando \"git bisect run\" para \"exit 255\" Caso alguma situação muito anormal seja detectada."

#. type: Title ~
#: en/git-bisect-lk2009.txt:355
#, no-wrap, priority:100
msgid "Avoiding untestable commits"
msgstr "Evitando os commits que não foram testados"

#. type: Plain text
#: en/git-bisect-lk2009.txt:362
#, priority:100
msgid "Sometimes it happens that the current state cannot be tested, for example if it does not compile because there was a bug preventing it at that time. This is what the special exit code 125 is for. It tells \"git bisect run\" that the current commit should be marked as untestable and that another one should be chosen and checked out."
msgstr "Às vezes, acontece que a condição atual não possa ser testada, por exemplo, caso ele não seja compilado porque houve um erro que o impedia naquele momento. É para isso que serve o código de encerramento especial 125. Diz ao comando \"git bisect run\" que o commit atual deve ser marcado como não testável e que outro deve ser selecionado e averiguado."

#. type: Plain text
#: en/git-bisect-lk2009.txt:366
#, priority:100
msgid "If the bisection process is driven manually, you can use \"git bisect skip\" to do the same thing. (In fact the special exit code 125 makes \"git bisect run\" use \"git bisect skip\" in the background.)"
msgstr "Caso o processo de bisseção tenha sido conduzido manualmente, será possível utilizar o comando \"git bisect skip\" para realizar a mesma coisa. (De fato, o código de saída especial 125 faz o comando \"git bisect run\" utilizar \"git bisect skip\" em segundo plano.)"

#. type: Plain text
#: en/git-bisect-lk2009.txt:371
#, priority:100
msgid "Or if you want more control, you can inspect the current state using for example \"git bisect visualize\". It will launch gitk (or \"git log\" if the `DISPLAY` environment variable is not set) to help you find a better bisection point."
msgstr "Ou, caso queira mais controle, poderá inspecionar a condição atual usando, por exemplo, o comando \"git bisect visualize\". Ele iniciará o gitk (ou o comando \"git log\" caso a variável de ambiente `DISPLAY` não estiver configurada) para ajudá-lo a encontrar um melhor ponto de bisseção."

#. type: Plain text
#: en/git-bisect-lk2009.txt:376
#, priority:100
msgid "Either way, if you have a string of untestable commits, it might happen that the regression you are looking for has been introduced by one of these untestable commits. In this case it's not possible to tell for sure which commit introduced the regression."
msgstr "De qualquer forma, caso você tenha uma sequência de commits não testáveis, pode acontecer que a regressão que você está procurando tenha sido introduzido por um destes commits não testáveis. Nesse caso, não é possível saber com certeza qual o commit introduziu a regressão."

#. type: Plain text
#: en/git-bisect-lk2009.txt:379
#, priority:100
msgid "So if you used \"git bisect skip\" (or the run script exited with special code 125) you could get a result like this:"
msgstr "Portanto, tenha utilizado o comando \"git bisect skip\" (ou o script de execução encerrou com o código especial 125), poderá obter um resultado como este:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:388
#, no-wrap, priority:100
msgid ""
"There are only 'skip'ped commits left to test.\n"
"The first bad commit could be any of:\n"
"15722f2fa328eaba97022898a305ffc8172db6b1\n"
"78e86cf3e850bd755bb71831f42e200626fbd1e0\n"
"e15b73ad3db9b48d7d1ade32f8cd23a751fe0ace\n"
"070eab2303024706f2924822bfec8b9847e4ac1b\n"
"We cannot bisect more!\n"
msgstr ""
"Restam apenas os commits que foram 'ignorados' e faltam testar.\n"
"O primeiro commit incorreto pode ser qualquer um destes:\n"
"15722f2fa328eaba97022898a305ffc8172db6b1\n"
"78e86cf3e850bd755bb71831f42e200626fbd1e0\n"
"e15b73ad3db9b48d7d1ade32f8cd23a751fe0ace\n"
"070eab2303024706f2924822bfec8b9847e4ac1b\n"
"Não podemos mais seguir adiante com o bisect!\n"

#. type: Title ~
#: en/git-bisect-lk2009.txt:391
#, no-wrap, priority:100
msgid "Saving a log and replaying it"
msgstr "Salvando um registro log e reproduzindo-o"

#. type: Plain text
#: en/git-bisect-lk2009.txt:395
#, priority:100
msgid "If you want to show other people your bisection process, you can get a log using for example:"
msgstr "Caso queira exibir para outras pessoas o seu processo de bisseção, é possível obter um registro log utilizando, por exemplo:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:398
#, no-wrap, priority:100
msgid "$ git bisect log > bisect_log.txt\n"
msgstr "$ git bisect log > bisect_log.txt\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:401
#, priority:100
msgid "And it is possible to replay it using:"
msgstr "E é possível reproduzi-lo utilizando:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:404
#, no-wrap, priority:100
msgid "$ git bisect replay bisect_log.txt\n"
msgstr "$ git bisect replay bisect_log.txt\n"

#. type: Title -
#: en/git-bisect-lk2009.txt:408
#, no-wrap, priority:100
msgid "\"git bisect\" details"
msgstr "Detalhes do \"git bisect\""

#. type: Title ~
#: en/git-bisect-lk2009.txt:411
#, no-wrap, priority:100
msgid "Bisection algorithm"
msgstr "Algoritmo da bisseção"

#. type: Plain text
#: en/git-bisect-lk2009.txt:417
#, priority:100
msgid "As the Git commits form a directed acyclic graph (DAG), finding the best bisection commit to test at each step is not so simple. Anyway Linus found and implemented a \"truly stupid\" algorithm, later improved by Junio Hamano, that works quite well."
msgstr "Como o commit do Git forma um grafo acíclico direcionado (DAG), encontrar o melhor commit de bisseção para testar em cada etapa não é tão simples. De qualquer forma, Linus encontrou e implementou um algoritmo \"de forama verdadeiramente estúpida\", posteriormente aprimorado por Junio Hamano, que funciona muito bem."

#. type: Plain text
#: en/git-bisect-lk2009.txt:420
#, priority:100
msgid "So the algorithm used by \"git bisect\" to find the best bisection commit when there are no skipped commits is the following:"
msgstr "Portanto, o algoritmo usado pelo comando \"git bisect\" para encontrar a melhor bisseção do commit quando não há commits que foram ignorados é o seguinte:"

#. type: Plain text
#: en/git-bisect-lk2009.txt:422
#, priority:100
msgid "keep only the commits that:"
msgstr "mantenha apenas os commits que:"

#. type: Plain text
#: en/git-bisect-lk2009.txt:424
#, priority:100
msgid "are ancestor of the \"bad\" commit (including the \"bad\" commit itself),"
msgstr "são ancestrais do commit \"ruim\" (incluindo o próprio commit \"ruim\"),"

#. type: Plain text
#: en/git-bisect-lk2009.txt:425
#, priority:100
msgid "are not ancestor of a \"good\" commit (excluding the \"good\" commits)."
msgstr "não são ancestrais de um commit \"bom\" (excluindo os commits \"bons\")."

#. type: Plain text
#: en/git-bisect-lk2009.txt:427
#, priority:100
msgid "This means that we get rid of the uninteresting commits in the DAG."
msgstr "Significa que nos livramos dos commits que não interessam do DAG."

#. type: Plain text
#: en/git-bisect-lk2009.txt:429
#, priority:100
msgid "For example if we start with a graph like this:"
msgstr "Como por exemplo, caso comecemos com um grafo como este:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:438
#, no-wrap, priority:100
msgid ""
"G-Y-G-W-W-W-X-X-X-X\n"
"\t   \\ /\n"
"\t    W-W-B\n"
"\t   /\n"
"Y---G-W---W\n"
" \\ /   \\\n"
"Y-Y     X-X-X-X\n"
msgstr ""
"G-Y-G-W-W-W-X-X-X-X\n"
"\t   \\ /\n"
"\t    W-W-B\n"
"\t   /\n"
"Y---G-W---W\n"
" \\ /   \\\n"
"Y-Y     X-X-X-X\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:440
#, no-wrap, priority:100
msgid "-> time goes this way ->\n"
msgstr "-> o tempo passa neste sentido ->\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:445
#, priority:100
msgid "where B is the \"bad\" commit, \"G\" are \"good\" commits and W, X, and Y are other commits, we will get the following graph after this first step:"
msgstr "onde 'B' é o commit \"ruim\", o \"G\" são os commits \"bons\" e 'W', 'X' e 'Y' são outros commits, obteremos o seguinte grafo após esta primeira etapa:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:452
#, no-wrap, priority:100
msgid ""
"W-W-W\n"
"     \\\n"
"      W-W-B\n"
"     /\n"
"W---W\n"
msgstr ""
"W-W-W\n"
"     \\\n"
"      W-W-B\n"
"     /\n"
"W---W\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:457
#, priority:100
msgid "So only the W and B commits will be kept. Because commits X and Y will have been removed by rules a) and b) respectively, and because commits G are removed by rule b) too."
msgstr "Portanto, apenas os commits 'W' e 'B' serão mantidos. Como os commits 'X' e 'Y' serão removidos pelas regras a) e b) respectivamente, e porque os commits 'G' são removidos pela regra b) também."

#. type: Plain text
#: en/git-bisect-lk2009.txt:460
#, priority:100
msgid "Note for Git users, that it is equivalent as keeping only the commit given by:"
msgstr "Nota para os usuários do Git, é equivalente a manter apenas o commit informado por:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:463
#, ignore-ellipsis, no-wrap, priority:100
msgid "git rev-list BAD --not GOOD1 GOOD2...\n"
msgstr "git rev-list BAD --not GOOD1 GOOD2...\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:468
#, priority:100
msgid "Also note that we don't require the commits that are kept to be descendants of a \"good\" commit. So in the following example, commits W and Z will be kept:"
msgstr "Observe também que não exigimos que os commits mantidos sejam descendentes de um \"bom\" commit. Portanto, no exemplo a seguir, os commits 'W' e 'Z' serão mantidas:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:473
#, no-wrap, priority:100
msgid ""
"G-W-W-W-B\n"
"   /\n"
"Z-Z\n"
msgstr ""
"G-W-W-W-B\n"
"   /\n"
"Z-Z\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:477
#, priority:100
msgid "starting from the \"good\" ends of the graph, associate to each commit the number of ancestors it has plus one"
msgstr "a partir das extremidades \"boas\" do grafo, associe para cada commit a quantidade de ancestrais que possui mais um"

#. type: Plain text
#: en/git-bisect-lk2009.txt:480
#, priority:100
msgid "For example with the following graph where H is the \"bad\" commit and A and D are some parents of some \"good\" commits:"
msgstr "Como por exemplo, com o grafo a seguir, onde 'H' é o commit \"ruim\" e 'A' e o 'D' são alguns parentes de alguns commits \"bons\":"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:487
#, no-wrap, priority:100
msgid ""
"A-B-C\n"
"     \\\n"
"      F-G-H\n"
"     /\n"
"D---E\n"
msgstr ""
"A-B-C\n"
"     \\\n"
"      F-G-H\n"
"     /\n"
"D---E\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:490
#, priority:100
msgid "this will give:"
msgstr "isto nos dá:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:498
#, no-wrap, priority:100
msgid ""
"1 2 3\n"
"A-B-C\n"
"     \\6 7 8\n"
"      F-G-H\n"
"1   2/\n"
"D---E\n"
msgstr ""
"1 2 3\n"
"A-B-C\n"
"     \\6 7 8\n"
"      F-G-H\n"
"1   2/\n"
"D---E\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:501
#, priority:100
msgid "associate to each commit: min(X, N - X)"
msgstr "associado para cada commit: min(X, N - X)"

#. type: Plain text
#: en/git-bisect-lk2009.txt:504
#, priority:100
msgid "where X is the value associated to the commit in step 2) and N is the total number of commits in the graph."
msgstr "onde 'X' é o valor associado ao commit na etapa 2) e 'N' é a quantidade total dos commits no grafo."

#. type: Plain text
#: en/git-bisect-lk2009.txt:506
#, priority:100
msgid "In the above example we have N = 8, so this will give:"
msgstr "No exemplo acima, temos 'N=8', portanto, isso dará:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:514
#, no-wrap, priority:100
msgid ""
"1 2 3\n"
"A-B-C\n"
"     \\2 1 0\n"
"      F-G-H\n"
"1   2/\n"
"D---E\n"
msgstr ""
"1 2 3\n"
"A-B-C\n"
"     \\2 1 0\n"
"      F-G-H\n"
"1   2/\n"
"D---E\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:518
#, priority:100
msgid "the best bisection point is the commit with the highest associated number"
msgstr "o melhor ponto de bisseção é o commit com o maior número associado a ele"

#. type: Plain text
#: en/git-bisect-lk2009.txt:520
#, priority:100
msgid "So in the above example the best bisection point is commit C."
msgstr "Portanto, no exemplo acima, o melhor ponto de bisseção é o commit 'C'."

#. type: Plain text
#: en/git-bisect-lk2009.txt:522
#, priority:100
msgid "note that some shortcuts are implemented to speed up the algorithm"
msgstr "observe que alguns atalhos são implementados para acelerar o algoritmo"

#. type: Plain text
#: en/git-bisect-lk2009.txt:528
#, priority:100
msgid "As we know N from the beginning, we know that min(X, N - X) can't be greater than N/2. So during steps 2) and 3), if we would associate N/2 to a commit, then we know this is the best bisection point. So in this case we can just stop processing any other commit and return the current commit."
msgstr "Como conhecemos o \"N\" desde o início, sabemos que mínimo (X, N - X) não pode ser maior que N/2. Portanto, durante as etapas 2) e 3), se associarmos N/2 a um commit, sabemos que este é o melhor ponto de bisseção. Portanto neste caso, podemos simplesmente parar de processar qualquer outro commit e retorne para o commit atual."

#. type: Title ~
#: en/git-bisect-lk2009.txt:530
#, no-wrap, priority:100
msgid "Bisection algorithm debugging"
msgstr "Depuração do algoritmo da bisseção"

#. type: Plain text
#: en/git-bisect-lk2009.txt:534
#, priority:100
msgid "For any commit graph, you can see the number associated with each commit using \"git rev-list --bisect-all\"."
msgstr "Para qualquer grafo do commit, você pode ver o número associado a cada commit utilizando o comando \"git rev-list --bisect-all\"."

#. type: Plain text
#: en/git-bisect-lk2009.txt:536
#, priority:100
msgid "For example, for the above graph, a command like:"
msgstr "Por exemplo, para o grafo acima, o comando seria:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:539
#, no-wrap, priority:100
msgid "$ git rev-list --bisect-all BAD --not GOOD1 GOOD2\n"
msgstr "$ git rev-list --bisect-all BAD --not GOOD1 GOOD2\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:542
#, priority:100
msgid "would output something like:"
msgstr "geraria algo como:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:552
#, no-wrap, priority:100
msgid ""
"e15b73ad3db9b48d7d1ade32f8cd23a751fe0ace (dist=3)\n"
"15722f2fa328eaba97022898a305ffc8172db6b1 (dist=2)\n"
"78e86cf3e850bd755bb71831f42e200626fbd1e0 (dist=2)\n"
"a1939d9a142de972094af4dde9a544e577ddef0e (dist=2)\n"
"070eab2303024706f2924822bfec8b9847e4ac1b (dist=1)\n"
"a3864d4f32a3bf5ed177ddef598490a08760b70d (dist=1)\n"
"a41baa717dd74f1180abf55e9341bc7a0bb9d556 (dist=1)\n"
"9e622a6dad403b71c40979743bb9d5be17b16bd6 (dist=0)\n"
msgstr ""
"e15b73ad3db9b48d7d1ade32f8cd23a751fe0ace (dist=3)\n"
"15722f2fa328eaba97022898a305ffc8172db6b1 (dist=2)\n"
"78e86cf3e850bd755bb71831f42e200626fbd1e0 (dist=2)\n"
"a1939d9a142de972094af4dde9a544e577ddef0e (dist=2)\n"
"070eab2303024706f2924822bfec8b9847e4ac1b (dist=1)\n"
"a3864d4f32a3bf5ed177ddef598490a08760b70d (dist=1)\n"
"a41baa717dd74f1180abf55e9341bc7a0bb9d556 (dist=1)\n"
"9e622a6dad403b71c40979743bb9d5be17b16bd6 (dist=0)\n"

#. type: Title ~
#: en/git-bisect-lk2009.txt:555
#, no-wrap, priority:100
msgid "Bisection algorithm discussed"
msgstr "Discussão sobre o algoritmo da bissecção"

#. type: Plain text
#: en/git-bisect-lk2009.txt:561
#, priority:100
msgid "First let's define \"best bisection point\". We will say that a commit X is a best bisection point or a best bisection commit if knowing its state (\"good\" or \"bad\") gives as much information as possible whether the state of the commit happens to be \"good\" or \"bad\"."
msgstr "Primeiro vamos definir \"melhor ponto de bisseção\". Digamos que um commt 'X' é o melhor ponto de bisseção ou um melhor commit de bisseção caso conheça a sua condição (\"bom\" ou \"ruim\") fornece o máximo de informações possíveis caso a condição do commit seja \"bom\" ou \"ruim\"."

#. type: Plain text
#: en/git-bisect-lk2009.txt:564
#, priority:100
msgid "This means that the best bisection commits are the commits where the following function is maximum:"
msgstr "Isto significa que as melhores bisseção dos commits são os commits onde a seguinte função seja máxima:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:567
#, no-wrap, priority:100
msgid "f(X) = min(information_if_good(X), information_if_bad(X))\n"
msgstr "f(X) = min(information_if_good(X), information_if_bad(X))\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:571
#, priority:100
msgid "where information_if_good(X) is the information we get if X is good and information_if_bad(X) is the information we get if X is bad."
msgstr "onde 'information_if_good(X)' é a informação que obtemos caso 'X' seja bom e 'information_if_bad(X)' é a informação que obtemos caso 'X' seja ruim."

#. type: Plain text
#: en/git-bisect-lk2009.txt:580
#, priority:100
msgid "Now we will suppose that there is only one \"first bad commit\". This means that all its descendants are \"bad\" and all the other commits are \"good\". And we will suppose that all commits have an equal probability of being good or bad, or of being the first bad commit, so knowing the state of c commits gives always the same amount of information wherever these c commits are on the graph and whatever c is. (So we suppose that these commits being for example on a branch or near a good or a bad commit does not give more or less information)."
msgstr "Agora vamos supor que exista apenas um \"primeiro commit ruim\". Isto significa que todos os seus descendentes são \"ruins\" e todos os outros commits são \"bons\". E iremos supor que todos os commits têm uma probabilidade igual de serem bons ou ruins, ou de serem o primeiro commit incorreto, portanto, conhecer a condição do commit 'c' dá sempre a mesma quantidade de informações onde quer que estes commits 'c' estejam no grafo e independente do que o 'c' seja. (Portanto, supomos que estes commits, seja por exemplo, em um ramo ou próximo a um commit bom ou ruim, não forneçam mais ou menos informações)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:582
#, priority:100
msgid "Let's also suppose that we have a cleaned up graph like one after step"
msgstr "Vamos supor também que tenhamos um grafo limpo como um após o outro"

#. type: Plain text
#: en/git-bisect-lk2009.txt:585
#, priority:100
msgid "in the bisection algorithm above. This means that we can measure the information we get in terms of number of commit we can remove from the graph.."
msgstr "no algoritmo de bisseção acima. Isso significa que podemos medir as informações que obtemos em termos quantidade dos commits que podemos remover do grafo."

#. type: Plain text
#: en/git-bisect-lk2009.txt:587
#, priority:100
msgid "And let's take a commit X in the graph."
msgstr "E vamos receber um commit 'X' no grafo."

#. type: Plain text
#: en/git-bisect-lk2009.txt:590
#, priority:100
msgid "If X is found to be \"good\", then we know that its ancestors are all \"good\", so we want to say that:"
msgstr "Caso 'X' seja considerado \"bom\", sabemos que os seus ancestrais são todos \"bons\", então queremos dizer que:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:593
#, no-wrap, priority:100
msgid "information_if_good(X) = number_of_ancestors(X)  (TRUE)\n"
msgstr "information_if_good(X) = number_of_ancestors(X)  (TRUE)\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:597
#, priority:100
msgid "And this is true because at step 1) b) we remove the ancestors of the \"good\" commits."
msgstr "E isso é verdade porque na etapa 1) b) removemos os ancestrais dos \"bons\" commits."

#. type: Plain text
#: en/git-bisect-lk2009.txt:600
#, priority:100
msgid "If X is found to be \"bad\", then we know that its descendants are all \"bad\", so we want to say that:"
msgstr "Caso 'X' seja considerado \"ruim\", sabemos que todos os seus descendentes são \"ruins\", então queremos dizer que:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:603
#, no-wrap, priority:100
msgid "information_if_bad(X) = number_of_descendants(X)  (WRONG)\n"
msgstr "information_if_bad(X) = number_of_descendants(X)  (WRONG)\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:612
#, priority:100
msgid "But this is wrong because at step 1) a) we keep only the ancestors of the bad commit. So we get more information when a commit is marked as \"bad\", because we also know that the ancestors of the previous \"bad\" commit that are not ancestors of the new \"bad\" commit are not the first bad commit. We don't know if they are good or bad, but we know that they are not the first bad commit because they are not ancestor of the new \"bad\" commit."
msgstr "Mas é errado, porque na etapa 1) a) mantemos apenas os ancestrais dos commits ruins. Então obtemos mais informações quando um commit é marcado como \"ruim\", porque também sabemos que os ancestrais do commit \"ruim\" anterior, não são ancestrais do novo commit \"ruim\" que não são o primeiro commit incorreto. Não sabemos se eles são bons ou ruins, porém sabemos que eles não são o primeiro commit incorreto porque não são ancestrais do novo commit \"ruim\"."

#. type: Plain text
#: en/git-bisect-lk2009.txt:616
#, priority:100
msgid "So when a commit is marked as \"bad\" we know we can remove all the commits in the graph except those that are ancestors of the new \"bad\" commit. This means that:"
msgstr "Portanto, quando um commit é marcado como \"ruim\", sabemos que podemos remover todos os commit no grafo, exceto aqueles que são os ancestrais do novo commit \"ruim\". Isto significa que:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:619
#, no-wrap, priority:100
msgid "information_if_bad(X) = N - number_of_ancestors(X)  (TRUE)\n"
msgstr "information_if_bad(X) = N - number_of_ancestors(X)  (TRUE)\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:622
#, priority:100
msgid "where N is the number of commits in the (cleaned up) graph."
msgstr "onde 'N' é a quantidade de commits no grafo (limpos)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:625
#, priority:100
msgid "So in the end this means that to find the best bisection commits we should maximize the function:"
msgstr "Portanto, no final, isso significa que, para encontrar as melhores bisseções dos commits, devemos maximizar a função:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:628
#, no-wrap, priority:100
msgid "f(X) = min(number_of_ancestors(X), N - number_of_ancestors(X))\n"
msgstr "f(X) = min(number_of_ancestors(X), N - number_of_ancestors(X))\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:632
#, priority:100
msgid "And this is nice because at step 2) we compute number_of_ancestors(X)  and so at step 3) we compute f(X)."
msgstr "E isso é bom porque na etapa 2) calculamos 'number_of_ancestors(X)' (a quantidade de ancestrais) e, na etapa 3) calculamos 'f(X)'."

#. type: Plain text
#: en/git-bisect-lk2009.txt:634
#, priority:100
msgid "Let's take the following graph as an example:"
msgstr "Vamos tomar o seguinte grafo como exemplo:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:641
#, no-wrap, priority:100
msgid ""
"            G-H-I-J\n"
"           /       \\\n"
"A-B-C-D-E-F         O\n"
"           \\       /\n"
"            K-L-M-N\n"
msgstr ""
"            G-H-I-J\n"
"           /       \\\n"
"A-B-C-D-E-F         O\n"
"           \\       /\n"
"            K-L-M-N\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:644
#, priority:100
msgid "If we compute the following non optimal function on it:"
msgstr "Caso calculemos a seguinte função não ideal nela:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:647
#, no-wrap, priority:100
msgid "g(X) = min(number_of_ancestors(X), number_of_descendants(X))\n"
msgstr "g(X) = min(number_of_ancestors(X), number_of_descendants(X))\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:650
#, priority:100
msgid "we get:"
msgstr "nós temos:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:659
#, no-wrap, priority:100
msgid ""
"            4 3 2 1\n"
"            G-H-I-J\n"
"1 2 3 4 5 6/       \\0\n"
"A-B-C-D-E-F         O\n"
"           \\       /\n"
"            K-L-M-N\n"
"            4 3 2 1\n"
msgstr ""
"            4 3 2 1\n"
"            G-H-I-J\n"
"1 2 3 4 5 6/       \\0\n"
"A-B-C-D-E-F         O\n"
"           \\       /\n"
"            K-L-M-N\n"
"            4 3 2 1\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:662
#, priority:100
msgid "but with the algorithm used by git bisect we get:"
msgstr "porém com o algorítimo utilizado pelo 'git bisect' nós temos:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:671
#, no-wrap, priority:100
msgid ""
"            7 7 6 5\n"
"            G-H-I-J\n"
"1 2 3 4 5 6/       \\0\n"
"A-B-C-D-E-F         O\n"
"           \\       /\n"
"            K-L-M-N\n"
"            7 7 6 5\n"
msgstr ""
"            7 7 6 5\n"
"            G-H-I-J\n"
"1 2 3 4 5 6/       \\0\n"
"A-B-C-D-E-F         O\n"
"           \\       /\n"
"            K-L-M-N\n"
"            7 7 6 5\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:678
#, priority:100
msgid "So we chose G, H, K or L as the best bisection point, which is better than F. Because if for example L is bad, then we will know not only that L, M and N are bad but also that G, H, I and J are not the first bad commit (since we suppose that there is only one first bad commit and it must be an ancestor of L)."
msgstr "Então escolhemos 'G', 'H', 'K' ou 'L' como o melhor ponto de bisseção, que é melhor que 'F'. Porque, por exemplo, o 'L' é ruim, saberemos não apenas que 'L', 'M' e 'N' são ruins, mas também que o 'G', 'H', 'I' e 'J' não são os primeiros commits ruins (pois supomos que haja apenas um primeiro commit ruim e ele deve ser um ancestral do 'L')."

#. type: Plain text
#: en/git-bisect-lk2009.txt:681
#, priority:100
msgid "So the current algorithm seems to be the best possible given what we initially supposed."
msgstr "Portanto, o algoritmo atual parece ser o melhor possível, dado o que supomos inicialmente."

#. type: Title ~
#: en/git-bisect-lk2009.txt:683
#, no-wrap, priority:100
msgid "Skip algorithm"
msgstr "Algoritmo de salto"

#. type: Plain text
#: en/git-bisect-lk2009.txt:688
#, priority:100
msgid "When some commits have been skipped (using \"git bisect skip\"), then the bisection algorithm is the same for step 1) to 3). But then we use roughly the following steps:"
msgstr "Quando alguns commits forem ignoradas (utilizando o comando \"git bisect skip\"), o algoritmo de bisseção é o mesmo da etapa 1) a 3). Então utilizamos aproximadamente as seguintes etapas:"

#. type: Plain text
#: en/git-bisect-lk2009.txt:690
#, priority:100
msgid "sort the commit by decreasing associated value"
msgstr "classifique o commit diminuindo o valor associado"

#. type: Plain text
#: en/git-bisect-lk2009.txt:693
#, priority:100
msgid "if the first commit has not been skipped, we can return it and stop here"
msgstr "se o primeiro commit não foi ignorado, podemos retorná-lo e parar aqui"

#. type: Plain text
#: en/git-bisect-lk2009.txt:695
#, priority:100
msgid "otherwise filter out all the skipped commits in the sorted list"
msgstr "caso contrário, filtre todos os commits ignorados da lista"

#. type: Plain text
#: en/git-bisect-lk2009.txt:698
#, priority:100
msgid "use a pseudo random number generator (PRNG) to generate a random number between 0 and 1"
msgstr "use um gerador de número pseudo-aleatório (PRNG) para gerar um número aleatório entre '0' e '1'"

#. type: Plain text
#: en/git-bisect-lk2009.txt:701
#, priority:100
msgid "multiply this random number with its square root to bias it toward 0"
msgstr "multiplique este número aleatório com a a sua raiz quadrada para enviesá-lo para 0"

#. type: Plain text
#: en/git-bisect-lk2009.txt:704
#, priority:100
msgid "multiply the result by the number of commits in the filtered list to get an index into this list"
msgstr "multiplicada o resultado pela quantidade dos commits na lista dos filtrados e obtenha um índice nesta lista"

#. type: Plain text
#: en/git-bisect-lk2009.txt:706
#, priority:100
msgid "return the commit at the computed index"
msgstr "retorne o commit ao índice que foi processado"

#. type: Title ~
#: en/git-bisect-lk2009.txt:708
#, no-wrap, priority:100
msgid "Skip algorithm discussed"
msgstr "Discussão sobre o algoritmo de salto"

#. type: Plain text
#: en/git-bisect-lk2009.txt:715
#, priority:100
msgid "After step 7) (in the skip algorithm), we could check if the second commit has been skipped and return it if it is not the case. And in fact that was the algorithm we used from when \"git bisect skip\" was developed in Git version 1.5.4 (released on February 1st 2008) until Git version 1.6.4 (released July 29th 2009)."
msgstr "Após a etapa 7) (no algoritmo 'skip'), poderíamos verificar se o segundo commit foi ignorado e retorná-lo, se não for o caso. E de fato, este foi o algoritmo que utilizamos quando o comando \"git bisect skip\" foi desenvolvido no Git versão 1.5.4 (lançado em 1º de fevereiro de 2008) até o Git versão 1.6.4 (lançado em 29 de julho de 2009)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:721
#, priority:100
msgid "But Ingo Molnar and H. Peter Anvin (another well known linux kernel developer) both complained that sometimes the best bisection points all happened to be in an area where all the commits are untestable. And in this case the user was asked to test many untestable commits, which could be very inefficient."
msgstr "Porém o Ingo Molnar e o H. Peter Anvin (outro informado desenvolvedor de kernel do linux) reclamaram que às vezes os melhores pontos de bisseção aconteciam em uma área onde todos os commits eram testáveis. E neste caso, o usuário foi solicitado a testar muitos commits onde não são possíveis de serem testados, o que poderia ser muito ineficiente."

#. type: Plain text
#: en/git-bisect-lk2009.txt:725
#, priority:100
msgid "Indeed untestable commits are often untestable because a breakage was introduced at one time, and that breakage was fixed only after many other commits were introduced."
msgstr "Na verdade, os commits não testáveis geralmente não são testáveis porque uma quebra foi introduzida em algum momento, e essa quebra foi corrigida somente depois que muitos outras commits foram introduzidos."

#. type: Plain text
#: en/git-bisect-lk2009.txt:729
#, priority:100
msgid "This breakage is of course most of the time unrelated to the breakage we are trying to locate in the commit graph. But it prevents us to know if the interesting \"bad behavior\" is present or not."
msgstr "Naturalmente, essa quebra não está relacionada à quebra que estamos tentando localizar no grafo do commit. Porém isso nos impede de saber se o \"mau comportamento\" que interessa está presente ou não."

#. type: Plain text
#: en/git-bisect-lk2009.txt:733
#, priority:100
msgid "So it is a fact that commits near an untestable commit have a high probability of being untestable themselves. And the best bisection commits are often found together too (due to the bisection algorithm)."
msgstr "Portanto, é fato que os commits próximos de um commit onde o teste não possa ser feito têm uma alta probabilidade de serem elas mesmas as não testáveis. Os melhores commits para bisseção também são frequentemente encontrados juntos (devido ao algoritmo de bisseção)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:736
#, priority:100
msgid "This is why it is a bad idea to just chose the next best unskipped bisection commit when the first one has been skipped."
msgstr "É por isso que é uma péssima ideia escolher a próxima melhor bisseção do commit que não foi ignorado quando o primeiro tenha sido ignorado."

#. type: Plain text
#: en/git-bisect-lk2009.txt:741
#, priority:100
msgid "We found that most commits on the graph may give quite a lot of information when they are tested. And the commits that will not on average give a lot of information are the one near the good and bad commits."
msgstr "Descobrimos que a maioria dos commits no grafo pode fornecer muitas informações quando são testadas. E os commits que, em média, não fornecerão muita informação são os próximos commits bons e ruins."

#. type: Plain text
#: en/git-bisect-lk2009.txt:744
#, priority:100
msgid "So using a PRNG with a bias to favor commits away from the good and bad commits looked like a good choice."
msgstr "Portanto, ao usar um PRNG com um viés para favorecer os commits longe dos commits bons e ruins parecia ser uma boa escolha."

#. type: Plain text
#: en/git-bisect-lk2009.txt:751
#, priority:100
msgid "One obvious improvement to this algorithm would be to look for a commit that has an associated value near the one of the best bisection commit, and that is on another branch, before using the PRNG. Because if such a commit exists, then it is not very likely to be untestable too, so it will probably give more information than a nearly randomly chosen one."
msgstr "Uma melhoria óbvia neste algoritmo seria procurar por um commit que tenha um valor associado próximo ao do melhor commit de bisseção e que esteja em outra ramificação, antes de utilizar o PRNG. Pois caso este commit exista, é muito provável que também não seja testável, logo, provavelmente fornecerá mais informações do que o que foi selecionado aleatoriamente."

#. type: Title ~
#: en/git-bisect-lk2009.txt:753
#, no-wrap, priority:100
msgid "Checking merge bases"
msgstr "Verificando as bases mescladas"

#. type: Plain text
#: en/git-bisect-lk2009.txt:757
#, priority:100
msgid "There is another tweak in the bisection algorithm that has not been described in the \"bisection algorithm\" above."
msgstr "Há outro ajuste no algoritmo de bisseção que não foi descrito no \"algoritmo de bisseção\" acima."

#. type: Plain text
#: en/git-bisect-lk2009.txt:761
#, priority:100
msgid "We supposed in the previous examples that the \"good\" commits were ancestors of the \"bad\" commit. But this is not a requirement of \"git bisect\"."
msgstr "Nos exemplos anteriores, supomos que os commits \"bons\" eram ancestrais do commit \"ruim\". Porém isto não é um requisito do \"git bisect\"."

#. type: Plain text
#: en/git-bisect-lk2009.txt:769
#, priority:100
msgid "Of course the \"bad\" commit cannot be an ancestor of a \"good\" commit, because the ancestors of the good commits are supposed to be \"good\". And all the \"good\" commits must be related to the bad commit.  They cannot be on a branch that has no link with the branch of the \"bad\" commit. But it is possible for a good commit to be related to a bad commit and yet not be neither one of its ancestor nor one of its descendants."
msgstr "É claro que o commit \"ruim\" não pode ser um ancestral de um commit \"bom\", porque os ancestrais dos commits bons devem ser \"bons\". E todos os commits \"bons\" devem estar relacionadas ao commit \"ruim\".  Eles não podem estar em um ramo que não possua vínculo com o ramo do commit \"ruim\". Porém é possível que um bom commit esteja relacionado a um commit ruim e no entanto, não seja um de seus ancestrais e nem um dos seus descendentes."

#. type: Plain text
#: en/git-bisect-lk2009.txt:772
#, priority:100
msgid "For example, there can be a \"main\" branch, and a \"dev\" branch that was forked of the main branch at a commit named \"D\" like this:"
msgstr "Como por exemplo, pode haver um ramo \"main\" (principal) e um ramo \"dev\" que foi bifurcada no ramo principal em um commit chamado \"D\" desta maneira:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:777
#, no-wrap, priority:100
msgid ""
"A-B-C-D-E-F-G  <--main\n"
"       \\\n"
"        H-I-J  <--dev\n"
msgstr ""
"A-B-C-D-E-F-G  <--main\n"
"       \\\n"
"        H-I-J  <--dev\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:781
#, priority:100
msgid "The commit \"D\" is called a \"merge base\" for branch \"main\" and \"dev\" because it's the best common ancestor for these branches for a merge."
msgstr "O commit \"D\" é chamado de uma \"base de mesclagem\" para o ramo \"main\" e \"dev\" pois é o melhor ancestral comum destas ramificações para uma mesclagem."

#. type: Plain text
#: en/git-bisect-lk2009.txt:785
#, priority:100
msgid "Now let's suppose that commit J is bad and commit G is good and that we apply the bisection algorithm like it has been previously described."
msgstr "Agora, suponha que o commit J seja ruim, que o commit G seja bom e que apliquemos o algoritmo de bisseção como foi descrito anteriormente."

#. type: Plain text
#: en/git-bisect-lk2009.txt:789
#, priority:100
msgid "As described in step 1) b) of the bisection algorithm, we remove all the ancestors of the good commits because they are supposed to be good too."
msgstr "Conforme descrito na etapa 1) b) do algoritmo de bisseção, removemos todos os ancestrais dos commits bons porque eles também devem ser bons."

#. type: Plain text
#: en/git-bisect-lk2009.txt:791
#, priority:100
msgid "So we would be left with only:"
msgstr "Então, ficaríamos com apenas:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:794
#, no-wrap, priority:100
msgid "H-I-J\n"
msgstr "H-I-J\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:798
#, priority:100
msgid "But what happens if the first bad commit is \"B\" and if it has been fixed in the \"main\" branch by commit \"F\"?"
msgstr "Mas o que acontece caso o primeiro commit incorreto seja o \"B\" e se foi corrigido no ramo \"principal\" (main) pelo commit \"F\"?"

#. type: Plain text
#: en/git-bisect-lk2009.txt:801
#, priority:100
msgid "The result of such a bisection would be that we would find that H is the first bad commit, when in fact it's B. So that would be wrong!"
msgstr "O resultado dessa bisseção seria que descobriríamos que \"H\" é o primeiro commit ruim, quando na verdade é o \"B\". Portanto, isso seria errado!"

#. type: Plain text
#: en/git-bisect-lk2009.txt:807
#, priority:100
msgid "And yes it can happen in practice that people working on one branch are not aware that people working on another branch fixed a bug! It could also happen that F fixed more than one bug or that it is a revert of some big development effort that was not ready to be released."
msgstr "E sim, na prática pode acontecer das pessoas que trabalham em um ramo não estejam cientes que as pessoas que trabalham no outro ramo corrigiram um bug! Também pode acontecer que F tenha corrigido mais de um bug ou que seja uma reversão de algum grande esforço de desenvolvimento que não estava pronto para ser liberado."

#. type: Plain text
#: en/git-bisect-lk2009.txt:813
#, priority:100
msgid "In fact development teams often maintain both a development branch and a maintenance branch, and it would be quite easy for them if \"git bisect\" just worked when they want to bisect a regression on the development branch that is not on the maintenance branch. They should be able to start bisecting using:"
msgstr "De fato, as equipes de desenvolvimento geralmente mantêm um ramo de desenvolvimento e um ramo de manutenção, seria muito fácil para eles caso o comando \"git bisect\" funcionasse quando quisessem dividir uma regressão no ramo de desenvolvimento que não está no ramo de manutenção. Eles devem ser capaz de começar a dividir utilizando:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:816
#, no-wrap, priority:100
msgid "$ git bisect start dev main\n"
msgstr "$ git bisect start dev main\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:823
#, priority:100
msgid "To enable that additional nice feature, when a bisection is started and when some good commits are not ancestors of the bad commit, we first compute the merge bases between the bad and the good commits and we chose these merge bases as the first commits that will be checked out and tested."
msgstr "Para ativar esse recurso adicional, quando uma bisseção é iniciada e quando alguns commits bons não são ancestrais do commit ruim, primeiro calculamos a mesclagem das bases entre os commits ruins e os bons, escolhemos estas bases da mesclagem como os primeiros commits que serão averiguados e testados."

#. type: Plain text
#: en/git-bisect-lk2009.txt:826
#, priority:100
msgid "If it happens that one merge base is bad, then the bisection process is stopped with a message like:"
msgstr "Caso ocorra de uma base que foi mesclada esteja ruim, o processo de bisseção será interrompido com uma mensagem como:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:830
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"The merge base BBBBBB is bad.\n"
"This means the bug has been fixed between BBBBBB and [GGGGGG,...].\n"
msgstr ""
"A base da mesclagem BBBBBB é ruim.\n"
"Isto significa que o bug foi corrigido entre BBBBBB e [GGGGGG, ...].\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:834
#, ignore-ellipsis, priority:100
msgid "where BBBBBB is the sha1 hash of the bad merge base and [GGGGGG,...] is a comma separated list of the sha1 of the good commits."
msgstr "onde BBBBBB é o hash sha1 da base de mesclagem ruim e [GGGGGG, ...] é uma lista separada por vírgulas do sha1 do bom commit."

#. type: Plain text
#: en/git-bisect-lk2009.txt:838
#, priority:100
msgid "If some of the merge bases are skipped, then the bisection process continues, but the following message is printed for each skipped merge base:"
msgstr "Caso algumas das mesclagens das bases sejam ignoradas, o processo de bisseção continuará, porém a seguinte mensagem será impressa para cada mesclagem da base que foi ignorada:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:843
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"Warning: the merge base between BBBBBB and [GGGGGG,...] must be skipped.\n"
"So we cannot be sure the first bad commit is between MMMMMM and BBBBBB.\n"
"We continue anyway.\n"
msgstr ""
"Aviso: a base da mesclagem entre BBBBBB e [GGGGGG,...] deve ser ignorado.\n"
"Portanto, não podemos ter certeza de que o primeiro commit ruim esteja entre MMMMMM e BBBBBB.\n"
"Continuamos mesmo assim.\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:848
#, ignore-ellipsis, priority:100
msgid "where BBBBBB is the sha1 hash of the bad commit, MMMMMM is the sha1 hash of the merge base that is skipped and [GGGGGG,...] is a comma separated list of the sha1 of the good commits."
msgstr "onde BBBBBB é o hash sha1 do commit ruim, o MMMMMM é o sha1 da base da mesclagem que é ignorado e [GGGGGG, ...] é uma lista separada por vírgulas do sha1 dos commits bons."

#. type: Plain text
#: en/git-bisect-lk2009.txt:851
#, priority:100
msgid "So if there is no bad merge base, the bisection process continues as usual after this step."
msgstr "Portanto, caso não haja uma base da mesclagem ruim, o processo de bisseção continuará normalmente após esta etapa."

#. type: Title -
#: en/git-bisect-lk2009.txt:853
#, no-wrap, priority:100
msgid "Best bisecting practices"
msgstr "Melhores práticas para as bisseções"

#. type: Title ~
#: en/git-bisect-lk2009.txt:856
#, no-wrap, priority:100
msgid "Using test suites and git bisect together"
msgstr "Usando conjuntos de teste e o comando 'git bisect' juntos"

#. type: Plain text
#: en/git-bisect-lk2009.txt:863
#, priority:100
msgid "If you both have a test suite and use git bisect, then it becomes less important to check that all tests pass after each commit. Though of course it is probably a good idea to have some checks to avoid breaking too many things because it could make bisecting other bugs more difficult."
msgstr "Caso você possua um conjunto de testes e utiliza o `git bisect`, torna-se menos importante verificar se todos os testes passam após cada confirmação. Embora, claro, seja provavelmente uma boa ideia fazer algumas verificações para evitar a quebra de muitas coisas pois isso pode dificultar a bisseção dos outros bugs."

#. type: Plain text
#: en/git-bisect-lk2009.txt:868
#, priority:100
msgid "You can focus your efforts to check at a few points (for example rc and beta releases) that all the T test cases pass for all the N configurations. And when some tests don't pass you can use \"git bisect\" (or better \"git bisect run\"). So you should perform roughly:"
msgstr "Você pode concentrar os teus esforços para verificar alguns pontos (as versões rc e beta por exemplo) que todos os casos de teste 'T' passam por todas as 'N' configurações. E quando alguns testes não passam, você pode usar \"git bisect\" (ou melhor, \"git bisect run\"). Então você deve executar a grosso modo:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:871
#, no-wrap, priority:100
msgid "c * N * T + b * M * log2(M) tests\n"
msgstr "c * N * T + b * M * log2(M) tests\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:875
#, priority:100
msgid "where c is the number of rounds of test (so a small constant) and b is the ratio of bug per commit (hopefully a small constant too)."
msgstr "onde 'c' é a quantidade de rodadas de teste (portanto, uma constante pequena) e 'b' é a proporção dos erros por commit(espero que também seja uma constante pequena)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:878
#, priority:100
msgid "So of course it's much better as it's O(N * T) vs O(N * T * M) if you would test everything after each commit."
msgstr "Então é claro que é muito melhor que O(N * T) vs O(N * T * M) caso testasse tudo após cada commit."

#. type: Plain text
#: en/git-bisect-lk2009.txt:883
#, priority:100
msgid "This means that test suites are good to prevent some bugs from being committed and they are also quite good to tell you that you have some bugs. But they are not so good to tell you where some bugs have been introduced. To tell you that efficiently, git bisect is needed."
msgstr "Isto significa que os conjuntos de testes são bons para evitar que o commit de alguns bugs sejam feitos e também são bons para dizer que você tem alguns bugs. Mas eles não são tão bons para dizer onde alguns erros foram introduzidos. Para te dizer isso eficientemente, o comando 'git bisect' é necessário."

#. type: Plain text
#: en/git-bisect-lk2009.txt:890
#, priority:100
msgid "The other nice thing with test suites, is that when you have one, you already know how to test for bad behavior. So you can use this knowledge to create a new test case for \"git bisect\" when it appears that there is a regression. So it will be easier to bisect the bug and fix it. And then you can add the test case you just created to your test suite."
msgstr "A outra coisa interessante dos conjuntos de testes é que, quando você tem um, já sabe como testar o mau comportamento. Portanto, você pode usar este conhecimento para criar um novo caso de teste para o comando \"git bisect\" quando parecer que uma regressão existe. Portanto, será mais fácil dividir o bug e corrigi-lo. E então você pode adicionar o caso de teste que você acabou de criar ao seu conjunto de testes."

#. type: Plain text
#: en/git-bisect-lk2009.txt:893
#, priority:100
msgid "So if you know how to create test cases and how to bisect, you will be subject to a virtuous circle:"
msgstr "Portanto, caso saiba criar casos de teste e dividir em partes, estará sujeito a um círculo virtuoso:"

#. type: Plain text
#: en/git-bisect-lk2009.txt:895
#, priority:100
msgid "more tests => easier to create tests => easier to bisect => more tests"
msgstr "mais testes => mais fácil de criar testes => mais fácil de fazer 'bisect' => mais testes"

#. type: Plain text
#: en/git-bisect-lk2009.txt:898
#, priority:100
msgid "So test suites and \"git bisect\" are complementary tools that are very powerful and efficient when used together."
msgstr "Portanto, os conjuntos de testes e o comando \"git bisect\", quando utilizadas em conjunto, são ferramentas complementares que são muito poderosas e eficientes."

#. type: Title ~
#: en/git-bisect-lk2009.txt:900
#, no-wrap, priority:100
msgid "Bisecting build failures"
msgstr "Falhas na construção da bisseção"

#. type: Plain text
#: en/git-bisect-lk2009.txt:904
#, priority:100
msgid "You can very easily automatically bisect broken builds using something like:"
msgstr "Você pode facilmente fazer o 'bisect' automaticamente em construções quebradas usando algo como:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:908
#, no-wrap, priority:100
msgid ""
"$ git bisect start BAD GOOD\n"
"$ git bisect run make\n"
msgstr ""
"$ git bisect start BAD GOOD\n"
"$ git bisect run make\n"

#. type: Title ~
#: en/git-bisect-lk2009.txt:911
#, no-wrap, priority:100
msgid "Passing sh -c \"some commands\" to \"git bisect run\""
msgstr "Encaminhando sh -c \"alguns comandos\" para \"git bisect run\""

#. type: delimited block -
#: en/git-bisect-lk2009.txt:917
#, no-wrap, priority:100
msgid "$ git bisect run sh -c \"make || exit 125; ./my_app | grep 'good output'\"\n"
msgstr "$ git bisect run sh -c \"make || exit 125; ./my_app | grep 'good output'\"\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:921
#, priority:100
msgid "On the other hand if you do this often, then it can be worth having scripts to avoid too much typing."
msgstr "Por outro lado, caso faça isso com frequência, pode valer a pena ter scripts para evitar muita digitação."

#. type: Title ~
#: en/git-bisect-lk2009.txt:923
#, no-wrap, priority:100
msgid "Finding performance regressions"
msgstr "Localizando regressões de desempenho"

#. type: Plain text
#: en/git-bisect-lk2009.txt:927
#, priority:100
msgid "Here is an example script that comes slightly modified from a real world script used by Junio Hamano <<4>>."
msgstr "Aqui está um exemplo do script que é ligeiramente modificado a partir de um script do mundo real utilizado por Junio Hamano <<4>>."

#. type: Plain text
#: en/git-bisect-lk2009.txt:930
#, priority:100
msgid "This script can be passed to \"git bisect run\" to find the commit that introduced a performance regression:"
msgstr "Este script pode ser passado através de um \"git bisect run\" para localizar um commit que introduziu uma regressão de desempenho:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:936
#, no-wrap, priority:100
msgid ""
"# Build errors are not what I am interested in.\n"
"make my_app || exit 255\n"
msgstr ""
"# Os erros de compilação não me interessam.\n"
"make my_app || exit 255\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:939
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"# We are checking if it stops in a reasonable amount of time, so\n"
"# let it run in the background...\n"
msgstr ""
"# Estamos verificando se ele para em um período de tempo razoável, então\n"
"# deixe correr em segundo plano...\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:941
#, no-wrap, priority:100
msgid "./my_app >log 2>&1 &\n"
msgstr "./my_app >log 2>&1 &\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:944
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"# ... and grab its process ID.\n"
"pid=$!\n"
msgstr ""
"# ... e pega a ID do seu processo.\n"
"pid=$!\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:947
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"# ... and then wait for sufficiently long.\n"
"sleep $NORMAL_TIME\n"
msgstr ""
"# ... e aguarde o tempo suficiente.\n"
"sleep $NORMAL_TIME\n"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:959
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"# ... and then see if the process is still there.\n"
"if kill -0 $pid\n"
"then\n"
"\t# It is still running -- that is bad.\n"
"\tkill $pid; sleep 1; kill $pid;\n"
"\texit 1\n"
"else\n"
"\t# It has already finished (the $pid process was no more),\n"
"\t# and we are happy.\n"
"\texit 0\n"
"fi\n"
msgstr ""
"# ... e veja se o processo ainda está lá.\n"
"if kill -0 $pid\n"
"then\n"
"\t# e se ainda estiver rodando -- isso é ruim.\n"
"\tkill $pid; sleep 1; kill $pid;\n"
"\texit 1\n"
"else\n"
"\t# Ele já terminou (o $pid do processo não existe mais),\n"
"\t# e nós estamos felizes.\n"
"\texit 0\n"
"fi\n"

#. type: Title ~
#: en/git-bisect-lk2009.txt:962
#, no-wrap, priority:100
msgid "Following general best practices"
msgstr "Seguindo as melhores práticas gerais"

#. type: Plain text
#: en/git-bisect-lk2009.txt:967
#, priority:100
msgid "It is obviously a good idea not to have commits with changes that knowingly break things, even if some other commits later fix the breakage."
msgstr "Obviamente, é uma boa ideia não ter commits com alterações que conscientemente quebram as coisas, mesmo que os outros commits consigam consertar quebras posteriores."

#. type: Plain text
#: en/git-bisect-lk2009.txt:970
#, priority:100
msgid "It is also a good idea when using any VCS to have only one small logical change in each commit."
msgstr "Também é uma boa ideia ao usar qualquer VCS ter apenas uma pequena alteração lógica em cada commit."

#. type: Plain text
#: en/git-bisect-lk2009.txt:975
#, priority:100
msgid "The smaller the changes in your commit, the most effective \"git bisect\" will be. And you will probably need \"git bisect\" less in the first place, as small changes are easier to review even if they are only reviewed by the committer."
msgstr "Quanto menores as alterações no seu commit, mais eficaz será o \"git bisect\". E provavelmente você precisará do comando \"git bisect\", não de primeira pois as pequenas alterações são mais fáceis de revisar, mesmo que sejam revisadas apenas pelo responsável do envio."

#. type: Plain text
#: en/git-bisect-lk2009.txt:978
#, priority:100
msgid "Another good idea is to have good commit messages. They can be very helpful to understand why some changes were made."
msgstr "Outra boa ideia é ter boas mensagens para os commits. Eles podem ser muito úteis para entender por que algumas alterações foram feitas."

#. type: Plain text
#: en/git-bisect-lk2009.txt:980
#, priority:100
msgid "These general best practices are very helpful if you bisect often."
msgstr "Estas boas práticas são muito úteis caso você faça 'bisect' com muita frequência."

#. type: Title ~
#: en/git-bisect-lk2009.txt:982
#, no-wrap, priority:100
msgid "Avoiding bug prone merges"
msgstr "Evitando mesclagens propensas a erros"

#. type: Plain text
#: en/git-bisect-lk2009.txt:988
#, priority:100
msgid "First merges by themselves can introduce some regressions even when the merge needs no source code conflict resolution. This is because a semantic change can happen in one branch while the other branch is not aware of it."
msgstr "As primeiras mesclagens por si só podem introduzir algumas regressões, mesmo quando a mesclagem não precise de uma resolução de conflitos do código-fonte. Isso ocorre porque uma mudança semântica pode ocorrer em um ramo, enquanto o outro ramo não está ciente do que aconteceu."

#. type: Plain text
#: en/git-bisect-lk2009.txt:991
#, priority:100
msgid "For example one branch can change the semantic of a function while the other branch add more calls to the same function."
msgstr "Como por exemplo, um ramo pode alterar a semântica de uma função, enquanto o outro ramo adiciona mais chamadas à mesma função."

#. type: Plain text
#: en/git-bisect-lk2009.txt:998
#, priority:100
msgid "This is made much worse if many files have to be fixed to resolve conflicts. That's why such merges are called \"evil merges\". They can make regressions very difficult to track down. It can even be misleading to know the first bad commit if it happens to be such a merge, because people might think that the bug comes from bad conflict resolution when it comes from a semantic change in one branch."
msgstr "Piora muito caso muitos arquivos precisem ser corrigidos por causa de conflitos. É por isso que estas mesclagens são chamadas de \"mesclagens más\" (evil merges). Eles podem tornar as regressões muito difíceis de rastrear. Pode até ser enganador saber que o primeiro commit ruim, caso seja uma mesclagem deste tipo, porque as pessoas podem pensar que o bug vem de uma má resolução de conflito quando se trata de uma alteração semântica em um ramo."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1004
#, priority:100
msgid "Anyway \"git rebase\" can be used to linearize history. This can be used either to avoid merging in the first place. Or it can be used to bisect on a linear history instead of the non linear one, as this should give more information in case of a semantic change in one branch."
msgstr "De qualquer forma, \"git rebase\" pode ser utilizado para linearizar o histórico. Pode ser utilizado em primeiro lugar, para evitar a mesclagem. Ou pode ser utilizado para dividir um histórico linear em vez do que não seja linear, pois isso deve fornecer mais informações no caso de uma alteração semântica em um ramo."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1007
#, priority:100
msgid "Merges can be also made simpler by using smaller branches or by using many topic branches instead of only long version related branches."
msgstr "As mesclagens também podem ser simplificadas utilizando os ramos menores ou ao utilizar muitos tópicos das ramificações, em vez de apenas as ramificações das versões mais longas."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1010
#, priority:100
msgid "And testing can be done more often in special integration branches like linux-next for the linux kernel."
msgstr "E os testes podem ser feitos com mais frequência nos ramos nas integrações especiais como 'linux-next' para o kernel do linux."

#. type: Title ~
#: en/git-bisect-lk2009.txt:1012
#, no-wrap, priority:100
msgid "Adapting your work-flow"
msgstr "Adaptando o seu fluxo de trabalho"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1015
#, priority:100
msgid "A special work-flow to process regressions can give great results."
msgstr "Um fluxo de trabalho especial para processar as regressões pode dar ótimos resultados."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1017
#, priority:100
msgid "Here is an example of a work-flow used by Andreas Ericsson:"
msgstr "Aqui está um exemplo de um fluxo de trabalho utilizado por Andreas Ericsson:"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1019
#, priority:100
msgid "write, in the test suite, a test script that exposes the regression"
msgstr "escreva, no conjunto de testes, um script de teste que exponha a regressão"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1020
#, priority:100
msgid "use \"git bisect run\" to find the commit that introduced it"
msgstr "Utilize um \"git bisect run\" para localizar o commit que introduziu um bug"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1021
#, priority:100
msgid "fix the bug that is often made obvious by the previous step"
msgstr "corrija o bug que muitas vezes se torna óbvio na etapa anterior"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1022
#, priority:100
msgid "commit both the fix and the test script (and if needed more tests)"
msgstr "faz o commit de ambas as correções e o script de teste (e se necessário, mais testes)"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1024
#, priority:100
msgid "And here is what Andreas said about this work-flow <<5>>:"
msgstr "E aqui está o que o Andreas disse sobre este fluxo de trabalho <<5>>:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1034
#, priority:100
msgid "To give some hard figures, we used to have an average report-to-fix cycle of 142.6 hours (according to our somewhat weird bug-tracker which just measures wall-clock time). Since we moved to Git, we've lowered that to 16.2 hours. Primarily because we can stay on top of the bug fixing now, and because everyone's jockeying to get to fix bugs (we're quite proud of how lazy we are to let Git find the bugs for us). Each new release results in ~40% fewer bugs (almost certainly due to how we now feel about writing tests)."
msgstr "Para dar alguns números concretos, costumávamos ter um relatório médio para corrigir o ciclo de 142.6 horas (de acordo com nosso rastreador de bugs um tanto estranho que apenas mede o tempo). Desde que nos mudamos para o Git, diminuímos para 16.2 horas. Principalmente porque podemos ficar em cima da correção dos bugs agora e porque todo mundo está tentando resolver os bugs (estamos muito orgulhosos de como somos preguiçosos em deixar o Git encontrar os bugs para nós). Cada nova versão resulta em ~40% menos bugs (quase certamente devido à forma como nos sentimos ao escrever testes)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1039
#, priority:100
msgid "Clearly this work-flow uses the virtuous circle between test suites and \"git bisect\". In fact it makes it the standard procedure to deal with regression."
msgstr "Claramente, este fluxo de trabalho utiliza o círculo virtuoso entre os conjuntos de testes e o \"git bisect\". De fato, torna o procedimento padrão para lidar com a regressão."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1044
#, ignore-ellipsis, priority:100
msgid "In other messages Andreas says that they also use the \"best practices\" described above: small logical commits, topic branches, no evil merge,... These practices all improve the bisectability of the commit graph, by making it easier and more useful to bisect."
msgstr "Em outras mensagens, Andreas diz que eles também utilizam as \"melhores práticas\" descritas acima: pequenos commits lógicos, tópicos das ramificações, sem mesclagem \"do mal\",... Todas estas práticas aprimoram a bisectabilidade do grafo do commit, tornando mais fácil e mais útil o processo de bisseção."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1047
#, priority:100
msgid "So a good work-flow should be designed around the above points. That is making bisecting easier, more useful and standard."
msgstr "Portanto, um bom fluxo de trabalho deve ser projetado em torno dos pontos acima. Isso está tornando a divisão mais fácil, mais útil e padronizado."

#. type: Title ~
#: en/git-bisect-lk2009.txt:1049
#, no-wrap, priority:100
msgid "Involving QA people and if possible end users"
msgstr "Envolvendo pessoas do controle de qualidade e se possível, usuários finais"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1055
#, priority:100
msgid "One nice about \"git bisect\" is that it is not only a developer tool. It can effectively be used by QA people or even end users (if they have access to the source code or if they can get access to all the builds)."
msgstr "Um aspecto interessante do comando \"git bisect\" é que ele não é apenas uma ferramenta de desenvolvedor. Ele pode ser usado efetivamente por pessoas do controle de qualidade ou mesmo pelos usuários finais (caso eles tenham acesso ao código-fonte ou se puderem ter acesso a todas as compilações)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1059
#, priority:100
msgid "There was a discussion at one point on the linux kernel mailing list of whether it was ok to always ask end user to bisect, and very good points were made to support the point of view that it is ok."
msgstr "Houve uma discussão em um ponto na lista de discussão do kernel do linux sobre se era permitido sempre pedir ao usuário final que fizesse um 'bisect', foram levantados muitos pontos interessantes apoiando este ponto de vista que sim, é permitido."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1061
#, priority:100
msgid "For example David Miller wrote <<6>>:"
msgstr "Como por exemplo, David Miller escreveu <<6>>:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1068
#, priority:100
msgid "What people don't get is that this is a situation where the \"end node principle\" applies. When you have limited resources (here: developers)  you don't push the bulk of the burden upon them. Instead you push things out to the resource you have a lot of, the end nodes (here: users), so that the situation actually scales."
msgstr "O que as pessoas não entendem é que esta é uma situação onde o \"princípio do nó final\" se aplica. Quando você tem recursos limitados (aqui: desenvolvedores) você não impõe a maior parte do ônus sobre eles. Em vez disso, você envia as coisas para o recurso que possui muitos nós finais (aqui: usuários) para que a situação realmente se escale."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1072
#, priority:100
msgid "This means that it is often \"cheaper\" if QA people or end users can do it."
msgstr "Isto significa que geralmente é \"mais barato\" se as pessoas do controle de qualidade ou dos usuários finais puderem fazer isso."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1079
#, priority:100
msgid "What is interesting too is that end users that are reporting bugs (or QA people that reproduced a bug) have access to the environment where the bug happens. So they can often more easily reproduce a regression. And if they can bisect, then more information will be extracted from the environment where the bug happens, which means that it will be easier to understand and then fix the bug."
msgstr "O interessante também é que os usuários finais que estão relatando os bugs (ou das pessoas do controle de qualidade que reproduziram um bug) têm acesso ao ambiente onde o bug ocorre. Portanto, eles geralmente podem reproduzir mais facilmente uma regressão. E se eles puderem fazer um 'bisect', mais informações serão extraídas do ambiente onde o erro ocorre, o que significa que será mais fácil compreender e então corrigir o bug."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1083
#, priority:100
msgid "For open source projects it can be a good way to get more useful contributions from end users, and to introduce them to QA and development activities."
msgstr "Para os projetos de código aberto, pode ser uma boa maneira de obter contribuições mais úteis dos usuários finais e apresentá-las às atividades do controle de qualidade e desenvolvimento."

#. type: Title ~
#: en/git-bisect-lk2009.txt:1085
#, no-wrap, priority:100
msgid "Using complex scripts"
msgstr "Usando scripts complexos"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1089
#, priority:100
msgid "In some cases like for kernel development it can be worth developing complex scripts to be able to fully automate bisecting."
msgstr "Em alguns casos, como no desenvolvimento do kernel, pode valer a pena desenvolver scripts complexos para poder automatizar completamente a bissetriz."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1091
#, priority:100
msgid "Here is what Ingo Molnar says about that <<7>>:"
msgstr "Aqui está o que Ingo Molnar diz sobre isso <<7>>:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1101
#, priority:100
msgid "i have a fully automated bootup-hang bisection script. It is based on \"git-bisect run\". I run the script, it builds and boots kernels fully automatically, and when the bootup fails (the script notices that via the serial log, which it continuously watches - or via a timeout, if the system does not come up within 10 minutes it's a \"bad\" kernel), the script raises my attention via a beep and i power cycle the test box. (yeah, i should make use of a managed power outlet to 100% automate it)"
msgstr "Eu tenho um script para bisseção totalmente automatizado que trava o processo de boot. Tem origem no \"git-bisect run\". Eu o executo, ele cria e inicializa os kernels automaticamente e quando a inicialização falha (o script percebe que, por meio do registro log serial, que ele assiste continuamente ou por um tempo limite, caso o sistema não apareça em 10 minutos, é um kernel \"ruim\"), o script chama minha atenção através de um sinal sonoro e eu desligo a caixa de teste. (sim, eu devo usar uma tomada gerenciada para automatizá-la 100%)"

#. type: Title ~
#: en/git-bisect-lk2009.txt:1104
#, no-wrap, priority:100
msgid "Combining test suites, git bisect and other systems together"
msgstr "Combinando os conjuntos dos testes, git bisect e outros sistemas juntos"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1109
#, priority:100
msgid "We have seen that test suites and git bisect are very powerful when used together. It can be even more powerful if you can combine them with other systems."
msgstr "Vimos que os conjuntos dos testes e o comando 'git bisect' são muito poderosos quando usados juntos. Pode ser ainda mais poderoso caso possa combiná-los com outros sistemas."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1116
#, priority:100
msgid "For example some test suites could be run automatically at night with some unusual (or even random) configurations. And if a regression is found by a test suite, then \"git bisect\" can be automatically launched, and its result can be emailed to the author of the first bad commit found by \"git bisect\", and perhaps other people too. And a new entry in the bug tracking system could be automatically created too."
msgstr "Como por exemplo, alguns conjuntos de testes podem ser executados automaticamente à noite com algumas configurações incomuns (ou mesmo aleatórias). E caso uma regressão eja encontrada por um conjunto de testes, o comando \"git bisect\" poderá ser iniciado automaticamente e o seu resultado poderá ser enviado através de um e-mail ao autor do primeiro commit ruim encontrado pelo \"git bisect\", e talvez das outras pessoas também. E uma nova entrada no sistema de monitoramento dos bugs também pode ser criada de forma automática."

#. type: Title -
#: en/git-bisect-lk2009.txt:1119
#, no-wrap, priority:100
msgid "The future of bisecting"
msgstr "O futuro da bisseção"

#. type: Title ~
#: en/git-bisect-lk2009.txt:1122
#, no-wrap, priority:100
msgid "\"git replace\""
msgstr "\"git replace\""

#. type: Plain text
#: en/git-bisect-lk2009.txt:1128
#, priority:100
msgid "We saw earlier that \"git bisect skip\" is now using a PRNG to try to avoid areas in the commit graph where commits are untestable. The problem is that sometimes the first bad commit will be in an untestable area."
msgstr "Vimos anteriormente que o comando \"git bisect skip\" agora está usando um PRNG para tentar evitar as áreas no grafo do commit onde o commit não sejam testáveis. O problema é que, às vezes, o primeiro commit ruim fica em uma área não testável."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1134
#, priority:100
msgid "To simplify the discussion we will suppose that the untestable area is a simple string of commits and that it was created by a breakage introduced by one commit (let's call it BBC for bisect breaking commit) and later fixed by another one (let's call it BFC for bisect fixing commit)."
msgstr "Para simplificar a discussão, supomos que a área não testável seja uma cadeia simples de commits e que ela foi criada por uma quebra introduzida por um commit (vamos chamá-lo de 'BBC' para o 'bisect' quebrado do commit) e posteriormente corrigida por outro (vamos chamá-lo de 'BFC' para o 'bisect' que vai corrigir o commit)."

#. type: delimited block -
#: en/git-bisect-lk2009.txt:1139
#, ignore-ellipsis, no-wrap, priority:100
msgid "...-Y-BBC-X1-X2-X3-X4-X5-X6-BFC-Z-...\n"
msgstr "...-Y-BBC-X1-X2-X3-X4-X5-X6-BFC-Z-...\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1143
#, priority:100
msgid "where we know that Y is good and BFC is bad, and where BBC and X1 to X6 are untestable."
msgstr "onde sabemos que 'Y' é bom e 'BFC' é ruim e onde 'BBC' e de 'X1' até 'X6' onde os testes não sejam possíveis."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1150
#, priority:100
msgid "In this case if you are bisecting manually, what you can do is create a special branch that starts just before the BBC. The first commit in this branch should be the BBC with the BFC squashed into it. And the other commits in the branch should be the commits between BBC and BFC rebased on the first commit of the branch and then the commit after BFC also rebased on."
msgstr "Neste caso, se estiver fazendo o bisecting manualmente, o que você pode fazer é criar uma ramificação especial que comece logo antes da \"BBC\". O primeiro commit neste ramo deve ser o \"BBC\" com o \"BFC\" compactado nele. E os outros commits no ramo devem ser os commits entre \"BBC\" e \"BFC\" reconstruídos no primeiro commit do ramo e depois o commit após o BFC também ter sido reconstruído."

#. type: delimited block -
#: en/git-bisect-lk2009.txt:1157
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"      (BBC+BFC)-X1'-X2'-X3'-X4'-X5'-X6'-Z'\n"
"     /\n"
"...-Y-BBC-X1-X2-X3-X4-X5-X6-BFC-Z-...\n"
msgstr ""
"      (BBC+BFC)-X1'-X2'-X3'-X4'-X5'-X6'-Z'\n"
"     /\n"
"...-Y-BBC-X1-X2-X3-X4-X5-X6-BFC-Z-...\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1160
#, priority:100
msgid "where commits quoted with ' have been rebased."
msgstr "onde os commits citados com ' foram reconstruídos na sua base (rebased)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1162
#, priority:100
msgid "You can easily create such a branch with Git using interactive rebase."
msgstr "Você pode criar facilmente um ramo com o Git usando reconstrução interativa."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1164
#, priority:100
msgid "For example using:"
msgstr "Utilizando por exemplo:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:1167
#, no-wrap, priority:100
msgid "$ git rebase -i Y Z\n"
msgstr "$ git rebase -i Y Z\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1170
#, priority:100
msgid "and then moving BFC after BBC and squashing it."
msgstr "e depois mover o 'BFC' após o 'BBC' e esmagá-lo."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1173
#, priority:100
msgid "After that you can start bisecting as usual in the new branch and you should eventually find the first bad commit."
msgstr "Depois disso, é possível começar a dividir normalmente no novo ramo e eventualmente, encontrar o primeiro commit com problemas."

#. type: delimited block -
#: en/git-bisect-lk2009.txt:1178
#, no-wrap, priority:100
msgid "$ git bisect start Z' Y\n"
msgstr "$ git bisect start Z' Y\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1189
#, priority:100
msgid "If you are using \"git bisect run\", you can use the same manual fix up as above, and then start another \"git bisect run\" in the special branch. Or as the \"git bisect\" man page says, the script passed to \"git bisect run\" can apply a patch before it compiles and test the software <<8>>. The patch should turn a current untestable commits into a testable one. So the testing will result in \"good\" or \"bad\" and \"git bisect\" will be able to find the first bad commit. And the script should not forget to remove the patch once the testing is done before exiting from the script."
msgstr "Caso esteja utilizando o comando `git bisect run`, é possível utilizar a mesma correção manual acima e em seguida, iniciar outro comando `git bisect run` no ramo especial. Ou como diz na página do manual `git bisect`, o script passado ao `git bisect run` pode aplicar um patch antes de compilar e testar o software <<8>>. O patch deve transformar um commit atual não testável em um testável. Portanto, o teste resultará em \"bom\" ou \"ruim\" e o comando `git bisect` será capaz de encontrar o primeiro commit que estiver ruim. O script não deve se esquecer de remover o patch assim que o teste for concluído antes de encerrar o script."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1194
#, priority:100
msgid "(Note that instead of a patch you can use \"git cherry-pick BFC\" to apply the fix, and in this case you should use \"git reset --hard HEAD^\" to revert the cherry-pick after testing and before returning from the script.)"
msgstr "(Observe que, em vez de um patch, é possível utilizar o comando \"git cherry-pick BFC\" para aplicar a correção e neste caso, utilizar o comando \"git reset --hard HEAD^\" para reverter a escolha seletiva após o teste e antes de retornar do script.)"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1202
#, priority:100
msgid "But the above ways to work around untestable areas are a little bit clunky. Using special branches is nice because these branches can be shared by developers like usual branches, but the risk is that people will get many such branches. And it disrupts the normal \"git bisect\" work-flow. So, if you want to use \"git bisect run\" completely automatically, you have to add special code in your script to restart bisection in the special branches."
msgstr "Porém as maneiras demonstradas acima para solucionar as áreas não testáveis são um pouco atrapalhadas. Utilizar os ramos especiais é bom porque estas ramificações podem ser compartilhadas pelos desenvolvedores como ramos comuns, porém o risco é que as pessoas obtenham muitos ramos. E isso interrompe o fluxo de trabalho normal \"git bisect\". Portanto, caso queira utilizar o \"git bisect run\" automaticamente, precisará adicionar um código especial ao seu script para reiniciar a bisseção nos ramos especiais."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1207
#, priority:100
msgid "Anyway one can notice in the above special branch example that the Z' and Z commits should point to the same source code state (the same \"tree\" in git parlance). That's because Z' result from applying the same changes as Z just in a slightly different order."
msgstr "De qualquer forma, pode-se notar no exemplo do ramo especial acima que os commit Z' e Z devem apontar para a mesma condição do código-fonte (a mesma \"árvore\" da linguagem git). Isso ocorre porque Z' resulta da aplicação das mesmas alterações que Z em uma ordem ligeiramente diferente."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1211
#, priority:100
msgid "So if we could just \"replace\" Z by Z' when we bisect, then we would not need to add anything to a script. It would just work for anyone in the project sharing the special branches and the replacements."
msgstr "Portanto, se pudéssemos \"substituir\" 'Z' por 'Z' quando fazemos o 'bisect', não precisaríamos adicionar nada em um script. Funcionaria apenas para qualquer pessoa no projeto que compartilhasse as ramificações especiais e as substituições."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1213
#, priority:100
msgid "With the example above that would give:"
msgstr "Com o exemplo acima, isso daria:"

#. type: delimited block -
#: en/git-bisect-lk2009.txt:1218
#, ignore-ellipsis, no-wrap, priority:100
msgid ""
"      (BBC+BFC)-X1'-X2'-X3'-X4'-X5'-X6'-Z'-...\n"
"     /\n"
"...-Y-BBC-X1-X2-X3-X4-X5-X6-BFC-Z\n"
msgstr ""
"      (BBC+BFC)-X1'-X2'-X3'-X4'-X5'-X6'-Z'-...\n"
"     /\n"
"...-Y-BBC-X1-X2-X3-X4-X5-X6-BFC-Z\n"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1225
#, priority:100
msgid "That's why the \"git replace\" command was created. Technically it stores replacements \"refs\" in the \"refs/replace/\" hierarchy. These \"refs\" are like branches (that are stored in \"refs/heads/\") or tags (that are stored in \"refs/tags\"), and that means that they can automatically be shared like branches or tags among developers."
msgstr "É por isso que o comando \"git replace\" foi criado. Tecnicamente, ele armazena as substituições das refs na hierarquia \"refs/replace/\". Estas refs são como ramificações (que são armazenadas em \"refs/heads/\") ou nas tags (que são armazenadas em \"refs/tags\"), isso significa que eles podem ser automaticamente compartilhados como ramificações ou tags entre os desenvolvedores."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1230
#, priority:100
msgid "\"git replace\" is a very powerful mechanism. It can be used to fix commits in already released history, for example to change the commit message or the author. And it can also be used instead of git \"grafts\" to link a repository with another old repository."
msgstr "O comando \"git replace\" é um mecanismo muito poderoso. Pode ser utilizado para corrigir os commits no histórico já lançado, por exemplo, alterar a mensagem do commit ou o autor do mesmo. E também pode ser utilizado em vez dos \"enxertos\" do git para vincular um repositório a um outro repositório antigo."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1234
#, priority:100
msgid "In fact it's this last feature that \"sold\" it to the Git community, so it is now in the \"master\" branch of Git's Git repository and it should be released in Git 1.6.5 in October or November 2009."
msgstr "De fato, é este o último recurso que o \"vendeu\" para a comunidade Git, agora está no ramo \"master\" do repositório Git do Git e deve ser lançado no Git 1.6.5 em outubro ou novembro de 2009."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1241
#, priority:100
msgid "One problem with \"git replace\" is that currently it stores all the replacements refs in \"refs/replace/\", but it would be perhaps better if the replacement refs that are useful only for bisecting would be in \"refs/replace/bisect/\". This way the replacement refs could be used only for bisecting, while other refs directly in \"refs/replace/\" would be used nearly all the time."
msgstr "Um problema com o comando \"git replace\" é que ele atualmente armazena todas as substituições refs no \"refs/replace/\", mas talvez seja melhor caso as substituições das refs de que são úteis apenas para a bisseção estivessem no \"refs/replace/bisect/\". Dessa maneira, a reposição das refs poderiam ser usados apenas para fazer a bisseção, enquanto as outras refs diretamente em \"refs/replace/\" seriam utilizadas quase que o tempo todo."

#. type: Title ~
#: en/git-bisect-lk2009.txt:1243
#, no-wrap, priority:100
msgid "Bisecting sporadic bugs"
msgstr "Erros esporádicos da bisseção"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1248
#, priority:100
msgid "Another possible improvement to \"git bisect\" would be to optionally add some redundancy to the tests performed so that it would be more reliable when tracking sporadic bugs."
msgstr "Outra possível melhoria do \"git bisect\" seria adicionar opcionalmente alguma redundância aos testes que forem realizados, para que fosse mais confiável durante o rastreio de erros esporádicos."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1252
#, priority:100
msgid "This has been requested by some kernel developers because some bugs called sporadic bugs do not appear in all the kernel builds because they are very dependent on the compiler output."
msgstr "Isso foi solicitado por alguns desenvolvedores do kernel porque alguns erros chamados esporádicos não aparecem em todas as compilações porque são muito dependentes do que é gerado pelo compilador."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1261
#, priority:100
msgid "The idea is that every 3 test for example, \"git bisect\" could ask the user to test a commit that has already been found to be \"good\" or \"bad\" (because one of its descendants or one of its ancestors has been found to be \"good\" or \"bad\" respectively). If it happens that a commit has been previously incorrectly classified then the bisection can be aborted early, hopefully before too many mistakes have been made. Then the user will have to look at what happened and then restart the bisection using a fixed bisect log."
msgstr "A ideia é que a cada três testes por exemplo, o comando \"git bisect\" possa solicitar ao usuário que teste um commit que já foi considerado \"bom\" ou \"ruim\" (porque um de seus descendentes ou um dos seus ancestrais tenha sido encontrado como sendo \"bom\" ou \"ruim\", respectivamente). Caso um commit tenha sido previamente classificado incorretamente, a bisseção poderá ser interrompida mais cedo, antes que muitos erros possam ser cometidos. Em seguida, o usuário terá que verificar o que aconteceu e reiniciar a bisseção usando um registro log fixo do 'bisect'."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1265
#, priority:100
msgid "There is already a project called BBChop created by Ealdwulf Wuffinga on Github that does something like that using Bayesian Search Theory <<9>>:"
msgstr "Já existe um projeto chamado 'BBChop' criado por Ealdwulf Wuffinga no Github que faz algo assim usando a Teoria Bayesiana de Pesquisa <<9>>:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1272
#, priority:100
msgid "BBChop is like 'git bisect' (or equivalent), but works when your bug is intermittent. That is, it works in the presence of false negatives (when a version happens to work this time even though it contains the bug). It assumes that there are no false positives (in principle, the same approach would work, but adding it may be non-trivial)."
msgstr "O BBChop é como o comando 'git bisect' (ou equivalente), mas funciona quando o seu bug for intermitente. Ou seja, funciona na presença dos falsos negativos (quando uma versão funcione embora contenha o erro). Assume que não há falsos positivos (em princípio, a mesma abordagem funcionaria, porém adicioná-la pode não ser trivial)."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1276
#, priority:100
msgid "But BBChop is independent of any VCS and it would be easier for Git users to have something integrated in Git."
msgstr "Porém o 'BBChop' é independente de qualquer VCS e seria mais fácil para os usuários do Git ter algo integrado no Git."

#. type: Title -
#: en/git-bisect-lk2009.txt:1278
#, no-wrap, priority:100
msgid "Conclusion"
msgstr "Conclusão"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1285
#, priority:100
msgid "We have seen that regressions are an important problem, and that \"git bisect\" has nice features that complement very well practices and other tools, especially test suites, that are generally used to fight regressions. But it might be needed to change some work-flows and (bad) habits to get the most out of it."
msgstr "Vimos que as regressões são um problema importante e que o comando \"git bisect\" possui recursos interessantes que complementam as boas práticas e outras ferramentas, especialmente os conjuntos de testes, que geralmente são usados para combater as regressões. Mas pode ser necessário alterar alguns fluxos de trabalho e hábitos (ruins) para tirar o máximo proveito disso."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1292
#, priority:100
msgid "Some improvements to the algorithms inside \"git bisect\" are possible and some new features could help in some cases, but overall \"git bisect\" works already very well, is used a lot, and is already very useful. To back up that last claim, let's give the final word to Ingo Molnar when he was asked by the author how much time does he think \"git bisect\" saves him when he uses it:"
msgstr "Algumas melhorias nos algoritmos dentro do comando \"git bisect\" são possíveis e alguns novos recursos podem ajudar em alguns casos, porém o comando \"git bisect\" em geral já funciona muito bem, é muito usado e já é muito útil. Para apoiar essa última afirmação, vamos dar a palavra final ao Ingo Molnar, quando o autor lhe perguntou quanto tempo ele acha que o comando \"git bisect\" o salva quando ele o utiliza:"

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1295
#, priority:100
msgid "a _lot_."
msgstr "_muito_."

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1300
#, priority:100
msgid "About ten years ago did i do my first 'bisection' of a Linux patch queue. That was prior the Git (and even prior the BitKeeper) days. I literally days spent sorting out patches, creating what in essence were standalone commits that i guessed to be related to that bug."
msgstr "Cerca de dez anos atrás, eu fiz minha primeira \"bisseção\" de uma fila de patches do Linux. Isso foi antes dos dias do Git (e mesmo antes do \"BitKeeper\"). Eu literalmente passei os dias resolvendo os patches, criando o que em essência eram compromissos independentes que eu acho que estavam relacionados com este bug."

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1303
#, priority:100
msgid "It was a tool of absolute last resort. I'd rather spend days looking at printk output than do a manual 'patch bisection'."
msgstr "Foi uma ferramenta de último recurso absoluta. Prefiro passar dias olhando a saída do 'printk' do que fazer uma 'bisseção dos patches' manualmente."

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1308
#, priority:100
msgid "With Git bisect it's a breeze: in the best case i can get a ~15 step kernel bisection done in 20-30 minutes, in an automated way. Even with manual help or when bisecting multiple, overlapping bugs, it's rarely more than an hour."
msgstr "Com o Git bisect, é fácil: no melhor dos casos, é possível obter uma bisseção do kernel com ~15 passos entre 20 a 30 minutos de maneira automatizada. Mesmo com ajuda manual ou ao dividir vários bugs acumulados, raramente leva mais de uma hora."

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1314
#, priority:100
msgid "In fact it's invaluable because there are bugs i would never even _try_ to debug if it wasn't for git bisect. In the past there were bug patterns that were immediately hopeless for me to debug - at best i could send the crash/bug signature to lkml and hope that someone else can think of something."
msgstr "Na verdade, é inestimável porque existem bugs que eu nem tentaria depurar caso não fosse pelo comando `git bisect`. No passado, havia padrões de bug que eram imediatamente inúteis para se depurar - na melhor das hipóteses eu poderia enviar a assinatura da falha/bug para o 'lkml' e esperar que alguém pudesse pensar em algo."

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1318
#, priority:100
msgid "And even if a bisection fails today it tells us something valuable about the bug: that it's non-deterministic - timing or kernel image layout dependent."
msgstr "E ainda que uma bisseção falhe, hoje ela nos diz algo valioso sobre o bug: que é não determinístico - depende do tempo ou do layout da imagem do kernel."

#. type: delimited block _
#: en/git-bisect-lk2009.txt:1321
#, priority:100
msgid "So git bisect is unconditional goodness - and feel free to quote that ;-)"
msgstr "Portanto, o comando 'git bisect' é uma bondade incondicional e fique à vontade para citar isso ;-)"

#. type: Title -
#: en/git-bisect-lk2009.txt:1324
#, no-wrap, priority:100
msgid "Acknowledgments"
msgstr "Agradecimentos"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1330
#, priority:100
msgid "Many thanks to Junio Hamano for his help in reviewing this paper, for reviewing the patches I sent to the Git mailing list, for discussing some ideas and helping me improve them, for improving \"git bisect\" a lot and for his awesome work in maintaining and developing Git."
msgstr "Meus agradecimentos ao Junio Hamano por sua ajuda na revisão deste documento, por revisar os patches que enviei para a lista de discussão do Git, por discutir algumas ideias e por me ajudar a melhorá-las, por melhorar muito o \"git bisect\" e por seu incrível trabalho em manter e desenvolvendo o Git."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1335
#, priority:100
msgid "Many thanks to Ingo Molnar for giving me very useful information that appears in this paper, for commenting on this paper, for his suggestions to improve \"git bisect\" and for evangelizing \"git bisect\" on the linux kernel mailing lists."
msgstr "Meus agradecimentos ao Ingo Molnar por me fornecer informações muito úteis que aparecem neste artigo, por comentar este artigo, pelas suas sugestões para melhorar o \"git bisect\" e por evangelizar o \"git bisect\" nas listas de discussão do kernel do linux."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1338
#, priority:100
msgid "Many thanks to Linus Torvalds for inventing, developing and evangelizing \"git bisect\", Git and Linux."
msgstr "Meus agradecimentos ao Linus Torvalds por inventar, desenvolver e evangelizar \"git bisect\", Git e o Linux."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1343
#, priority:100
msgid "Many thanks to the many other great people who helped one way or another when I worked on Git, especially to Andreas Ericsson, Johannes Schindelin, H. Peter Anvin, Daniel Barkalow, Bill Lear, John Hawley, Shawn O. Pierce, Jeff King, Sam Vilain, Jon Seymour."
msgstr "Meus agradecimentos a muitas outras ótimas pessoas que ajudaram de um jeito ou de outro quando eu trabalhei no Git, especialmente ao Andreas Ericsson, Johannes Schindelin, H. Peter Anvin, Daniel Barkalow, Bill Lear, John Hawley, Shawn O. Pierce, Jeff King, Sam Vilain, Jon Seymour."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1346
#, priority:100
msgid "Many thanks to the Linux-Kongress program committee for choosing the author to given a talk and for publishing this paper."
msgstr "Meus agradecimentos ao comitê do programa Linux-Kongress por escolher o autor para dar uma palestra e por publicar este artigo."

#. type: Title -
#: en/git-bisect-lk2009.txt:1348
#, no-wrap, priority:100
msgid "References"
msgstr "Referências"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1351
#, priority:100
msgid "[[[1]]] https://www.nist.gov/sites/default/files/documents/director/planning/report02-3.pdf['The Economic Impacts of Inadequate Infratructure for Software Testing'.  Nist Planning Report 02-3], see Executive Summary and Chapter 8."
msgstr "[[[1]]] https://www.nist.gov/sites/default/files/documents/director/planning/report02-3.pdf['The Economic Impacts of Inadequate Infratructure for Software Testing'.  Nist Planning Report 02-3], Consulte o Resumo Executivo e o Capítulo 8."

#. type: Plain text
#: en/git-bisect-lk2009.txt:1352
#, priority:100
msgid "[[[2]]] http://www.oracle.com/technetwork/java/codeconvtoc-136057.html['Code Conventions for the Java Programming Language'. Sun Microsystems.]"
msgstr "[[[2]]] http://www.oracle.com/technetwork/java/codeconvtoc-136057.html['Code Conventions for the Java Programming Language'. Sun Microsystems.]"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1353
#, priority:100
msgid "[[[3]]] https://en.wikipedia.org/wiki/Software_maintenance['Software maintenance'. Wikipedia.]"
msgstr "[[[3]]] https://en.wikipedia.org/wiki/Software_maintenance['Manutenção do Software'. Wikipedia.]"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1354
#, priority:100
msgid "[[[4]]] https://lore.kernel.org/git/7vps5xsbwp.fsf_-_@assigned-by-dhcp.cox.net/[Junio C Hamano. 'Automated bisect success story'.]"
msgstr "[[[4]]] https://lore.kernel.org/git/7vps5xsbwp.fsf_-_@assigned-by-dhcp.cox.net/[Junio C Hamano. 'A História de sucesso de um bisect automatizado'.]"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1355
#, priority:100
msgid "[[[5]]] https://lwn.net/Articles/317154/[Christian Couder. 'Fully automated bisecting with \"git bisect run\"'. LWN.net.]"
msgstr "[[[5]]] https://lwn.net/Articles/317154/[Christian Couder. 'Um bisect totalmente automatizado com \"git bisect run\"'. LWN.net.]"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1356
#, priority:100
msgid "[[[6]]] https://lwn.net/Articles/277872/[Jonathan Corbet. 'Bisection divides users and developers'. LWN.net.]"
msgstr "[[[6]]] https://lwn.net/Articles/277872/[Jonathan Corbet. 'A bisseção divide usuários e os desenvolvedores'. LWN.net.]"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1357
#, priority:100
msgid "[[[7]]] https://lore.kernel.org/lkml/20071207113734.GA14598@elte.hu/[Ingo Molnar. 'Re: BUG 2.6.23-rc3 can't see sd partitions on Alpha'. Linux-kernel mailing list.]"
msgstr "[[[7]]] https://lore.kernel.org/lkml/20071207113734.GA14598@elte.hu/[Ingo Molnar. 'Re: BUG 2.6.23-rc3 can't see sd partitions on Alpha'. Linux-kernel mailing list.]"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1358
#, priority:100
msgid "[[[8]]] https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html[Junio C Hamano and the git-list. 'git-bisect(1) Manual Page'. Linux Kernel Archives.]"
msgstr "[[[8]]] https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html[Junio C Hamano and the git-list. 'git-bisect(1) Página do Manual'. Arquivos do Linux Kernel.]"

#. type: Plain text
#: en/git-bisect-lk2009.txt:1358
#, priority:100
msgid "[[[9]]] https://github.com/Ealdwulf/bbchop[Ealdwulf. 'bbchop'. GitHub.]"
msgstr "[[[9]]] https://github.com/Ealdwulf/bbchop[Ealdwulf. 'bbchop'. GitHub.]"

#, ignore-same, no-wrap
#~ msgid "--rerere-autoupdate"
#~ msgstr "--rerere-autoupdate"

#, ignore-same, no-wrap
#~ msgid "--no-rerere-autoupdate"
#~ msgstr "--no-rerere-autoupdate"

#~ msgid "Allow the rerere mechanism to update the index with the result of auto-conflict resolution if possible."
#~ msgstr "Permita que o mecanismo \"rerere\" atualize o índice com o resultado da resolução automática de conflitos, caso seja possível."

#, ignore-same, no-wrap
#~ msgid "apply.ignoreWhitespace"
#~ msgstr "apply.ignoreWhitespace"

#~ msgid "Set to 'change' if you want changes in whitespace to be ignored by default.  Set to one of: no, none, never, false if you want changes in whitespace to be significant."
#~ msgstr "Defina como 'change' caso queira que as alterações no espaço sejam sempre ignoradas.  Defina com um dos valores entre: `no`, `none`, `never`, `false` caso queira que as alterações no espaço sejam feitas de forma significativa."

#, ignore-same, no-wrap
#~ msgid "apply.whitespace"
#~ msgstr "apply.whitespace"

#~ msgid "When no `--whitespace` flag is given from the command line, this configuration item is used as the default."
#~ msgstr "Quando nenhum comando `--whitespace` for utilizado na linha de comandos, é predefinido que este item seja sempre utilizado."

#~ msgid "If not set explicitly with `--file`, there are four files where 'git config' will search for configuration options:"
#~ msgstr "Caso não seja definido de forma explicita com a opção `--file`, existem quatro arquivos onde o 'git config' irá procurar as opções de configuração:"

#~ msgid "Second user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, `$HOME/.config/git/config` will be used. Any single-valued variable set in this file will be overwritten by whatever is in `~/.gitconfig`.  It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly recently."
#~ msgstr "Segundo arquivo de configuração específico do usuário. Caso $XDG_CONFIG_HOME não esteja definido ou esteja vazio , a opção de configuração `$HOME/.config/git/config` será utilizada. Qualquer variável com valor único definido neste arquivo será substituída pelo que estiver em `~/.gitconfig`.  É uma boa ideia não criar este arquivo no caso de você às vezes usar versões mais antigas do Git, pois o suporte para este arquivo foi adicionado recentemente."

#~ msgid "User-specific configuration file. Also called \"global\" configuration file."
#~ msgstr "Arquivo de configuração específico do usuário. Também chamado de arquivo de configuração \"global\"."

#~ msgid "You can override these rules using the `--global`, `--system`, `--local`, `--worktree`, and `--file` command-line options; see <<OPTIONS>> above."
#~ msgstr "É possível substituir estas regras usando as opções na linha de comando `--global`, `--system`, `--local`, `--worktree` e `--file`; consulte <<OPÇÕES>> acima."

#~ msgid "GIT_CVSSERVER_ROOT specifies a single-directory whitelist. The repository must still be configured to allow access through git-cvsserver, as described above."
#~ msgstr "GIT_CVSSERVER_ROOT especifica uma lista branca de diretórios únicos. O repositório ainda deve estar configurado para permitir o acesso através do `git-cvsserver`, conforme descrito acima."

#~ msgid "A directory to add to the whitelist of allowed directories. Unless --strict-paths is specified this will also include subdirectories of each named directory."
#~ msgstr "Um diretório a ser adicionado à lista branca dos diretórios permitidos. A menos que `--strict-paths` seja especificado, isso também incluirá subdiretórios de cada diretório informado."

#, no-wrap
#~ msgid "CONFIG VARIABLES"
#~ msgstr "CONFIGURAÇÃO DAS VARIÁVEIS"

#, ignore-same, no-wrap
#~ msgid "diff.tool"
#~ msgstr "diff.tool"

#~ msgid "The default diff tool to use."
#~ msgstr "A ferramenta diff predefinida que será utilizada."

#, ignore-same, no-wrap
#~ msgid "diff.guitool"
#~ msgstr "diff.guitool"

#~ msgid "The default diff tool to use when `--gui` is specified."
#~ msgstr "A ferramenta diff predefinida a ser utilizada quando `--gui` for utilizado."

#, no-wrap
#~ msgid "difftool.<tool>.path"
#~ msgstr "difftool.<ferramenta>.path"

#~ msgid "Override the path for the given tool.  This is useful in case your tool is not in the PATH."
#~ msgstr "Substitua o caminho para a ferramenta informada.  É útil caso a sua ferramenta não esteja no `PATH`."

#, no-wrap
#~ msgid "difftool.<tool>.cmd"
#~ msgstr "difftool.<ferramenta>.cmd"

#~ msgid "Specify the command to invoke the specified diff tool."
#~ msgstr "Especifique o comando para chamar a ferramenta diff."

#~ msgid "See the `--tool=<tool>` option above for more details."
#~ msgstr "Consulte a opção `--tool=<ferramenta>` acima para mais detalhes."

#, ignore-same, no-wrap
#~ msgid "difftool.prompt"
#~ msgstr "difftool.prompt"

#~ msgid "Prompt before each invocation of the diff tool."
#~ msgstr "Avisar antes de cada chamada da ferramenta diff."

#, ignore-same, no-wrap
#~ msgid "difftool.trustExitCode"
#~ msgstr "difftool.trustExitCode"

#~ msgid "Exit difftool if the invoked diff tool returns a non-zero exit status."
#~ msgstr "Encerrar o `difftool` caso a ferramenta \"diff\" retorne uma condição de encerramento diferente de zero."

#~ msgid "See the `--trust-exit-code` option above for more details."
#~ msgstr "Consulte a opção `--trust-exit-code` acima para mais detalhes."

#~ msgid "The below documentation is the same as what's found in linkgit:git-config[1]:"
#~ msgstr "A documentação abaixo é igual à encontrada no linkgit:git-config[1]:"

#, no-wrap
#~ msgid "grep.lineNumber"
#~ msgstr "grep.lineNumber"

#~ msgid "If set to true, enable `-n` option by default."
#~ msgstr "Caso seja definido como `true`, é predefinido que a opção `-n` seja utilizada."

#, no-wrap
#~ msgid "grep.column"
#~ msgstr "grep.column"

#~ msgid "If set to true, enable the `--column` option by default."
#~ msgstr "Caso seja definido como `true`, é predefinido que a opção `--column` seja utilizada."

#, no-wrap
#~ msgid "grep.patternType"
#~ msgstr "grep.patternType"

#~ msgid "Set the default matching behavior. Using a value of 'basic', 'extended', 'fixed', or 'perl' will enable the `--basic-regexp`, `--extended-regexp`, `--fixed-strings`, or `--perl-regexp` option accordingly, while the value 'default' will return to the default matching behavior."
#~ msgstr "Define o comportamento de correspondência predefinido. A utilização de um valor 'basic', 'extended', 'fixed' ou 'perl' ativará as opções `--basic-regexp`, `--extended-regexp`, `--fixed-strings`, ou `--perl-regexp`, enquanto o valor 'default' retornará ao comportamento de coincidências já predefinida."

#, no-wrap
#~ msgid "grep.extendedRegexp"
#~ msgstr "grep.extendedRegexp"

#~ msgid "If set to true, enable `--extended-regexp` option by default. This option is ignored when the `grep.patternType` option is set to a value other than 'default'."
#~ msgstr "Caso seja definido como `true`, a predefinição é que a opção `--full-name` seja utilizada. Esta opção é ignorada quando a opção de configuração `grep.patternType` for configurada com um valor diferente de 'default'."

#, no-wrap
#~ msgid "grep.threads"
#~ msgstr "grep.threads"

#~ msgid "Number of grep worker threads to use. If unset (or set to 0), Git will use as many threads as the number of logical cores available."
#~ msgstr "Quantidade de instâncias de trabalho do \"grep\" que serão utilizados. Caso não seja definido (ou o seu valor seja 0), o Git usará a quantidade máxima de instâncias que estiverem disponíveis nos núcleos lógicos."

#, no-wrap
#~ msgid "grep.fullName"
#~ msgstr "grep.fullName"

#~ msgid "If set to true, enable `--full-name` option by default."
#~ msgstr "Caso seja definido como `true`, é predefinido que a opção `--full-name` seja utilizada."

#, no-wrap
#~ msgid "grep.fallbackToNoIndex"
#~ msgstr "grep.fallbackToNoIndex"

#~ msgid "If set to true, fall back to git grep --no-index if git grep is executed outside of a git repository.  Defaults to false."
#~ msgstr "Caso seja definido como `true`, retorne para `git grep --no-index` caso o `git grep` seja executado fora de um repositório Git.  A predefinição retorna para `false`."

#, ignore-same, no-wrap
#~ msgid "log.date"
#~ msgstr "log.date"

#~ msgid "Default format for human-readable dates.  (Compare the `--date` option.)  Defaults to \"default\", which means to write dates like `Sat May 8 19:35:34 2010 -0500`."
#~ msgstr "O formato predefinido para que as datas sejam legíveis para as pessoas.  (Compare a opção `--date`.)  A predefinição retorna para \"default\", o que significa escrever as datas como `Sat May 8 19:35:34 2010 -0500`."

#~ msgid "If the format is set to \"auto:foo\" and the pager is in use, format \"foo\" will be the used for the date format. Otherwise \"default\" will be used."
#~ msgstr "Caso o formato esteja definido como \"auto:foo\" e o pager estiver em uso, o format \"foo\" será utilizado para o formato da data. Caso contrário, a \"predefinição\" será usada."

#, ignore-same, no-wrap
#~ msgid "log.follow"
#~ msgstr "log.follow"

#~ msgid "If `true`, `git log` will act as if the `--follow` option was used when a single <path> is given.  This has the same limitations as `--follow`, i.e. it cannot be used to follow multiple files and does not work well on non-linear history."
#~ msgstr "Caso seja `true`, o comando `git log` como se a opção `--follow` tenha sido usada quando um único <caminho> seja utilizado.  Isso tem as mesmas limitações que a opção `--follow`, ou seja, não pode ser usado para seguir vários arquivos e não funciona bem em histórico não linear."

#, ignore-same, no-wrap
#~ msgid "log.showRoot"
#~ msgstr "log.showRoot"

#~ msgid "If `false`, `git log` and related commands will not treat the initial commit as a big creation event.  Any root commits in `git log -p` output would be shown without a diff attached.  The default is `true`."
#~ msgstr "Caso seja `false`, o comando `git log` e relacionados, não tratarão o commit inicial como um grande episódio de criação.  Qualquer commit raiz gerado pelo comando `git log -p` seria exibido sem um diff anexado.  A predefinição é `true`."

#, ignore-same, no-wrap
#~ msgid "log.showSignature"
#~ msgstr "log.showSignature"

#~ msgid "If `true`, `git log` and related commands will act as if the `--show-signature` option was passed to them."
#~ msgstr "Caso o valor `true` seja utilizado, o `git log` e os comandos relacionados atuarão como se a opção `--show-signature` tivesse sido utilizada."

#, no-wrap
#~ msgid "mailmap.*"
#~ msgstr "mailmap.*"

#~ msgid "See linkgit:git-shortlog[1]."
#~ msgstr "Consulte linkgit:git-shortlog[1]."

#, no-wrap
#~ msgid "notes.displayRef"
#~ msgstr "notes.displayRef"

#~ msgid "Which refs, in addition to the default set by `core.notesRef` or `GIT_NOTES_REF`, to read notes from when showing commit messages with the `log` family of commands.  See linkgit:git-notes[1]."
#~ msgstr "Quais as refs, além do padrão definido através da opção de configuração `core.notesRef` ou do `GIT_NOTES_REF`, para ler as anotações ao exiir as mensagens do commit com a família de comandos `log`.  Consulte linkgit:git-notes[1]."

#~ msgid "May be an unabbreviated ref name or a glob and may be specified multiple times.  A warning will be issued for refs that do not exist, but a glob that does not match any refs is silently ignored."
#~ msgstr "Pode ser um nome sem abreviação ou um \"glob\" e pode ser especificado várias vezes.  Um aviso será emitido para refs que não existem, mas um \"glob\" que não corresponda a nenhum \"ref\" é silenciosamente ignorado."

#~ msgid "This setting can be disabled by the `--no-notes` option, overridden by the `GIT_NOTES_DISPLAY_REF` environment variable, and overridden by the `--notes=<ref>` option."
#~ msgstr "Essa configuração pode ser desativada pela opção `--no-notes`, ou substituída pela variável de ambiente`GIT_NOTES_DISPLAY_REF` e substituída pela opção `--notes=<ref>`."

#, no-wrap
#~ msgid "'git merge-tree' <base-tree> <branch1> <branch2>\n"
#~ msgstr "'git merge-tree' <base-tree> <ramo1> <ramo2>\n"

#~ msgid "This is meant to be used by higher level scripts to compute merge results outside of the index, and stuff the results back into the index.  For this reason, the output from the command omits entries that match the <branch1> tree."
#~ msgstr "Isso foi pensado para ser utilizado por scripts de alto nível para processar os resultados de mesclagem fora do índice e posteriormente retorná-los.  Por esse motivo a saída do comando omite as entradas que coincidam com <branch1>."

#, no-wrap
#~ msgid "notes.mergeStrategy"
#~ msgstr "notes.mergeStrategy"

#~ msgid "Which merge strategy to choose by default when resolving notes conflicts.  Must be one of `manual`, `ours`, `theirs`, `union`, or `cat_sort_uniq`.  Defaults to `manual`.  See \"NOTES MERGE STRATEGIES\" section above for more information on each strategy."
#~ msgstr "Qual estratégia predefinida de mesclagem escolher ao resolver os conflitos das anotações.  Deve ser uma das opções `manual`, `ours` (nosso), `theirs` (deles), `union` (união) ou `cat_sort_uniq`.  A predefinição retorna para `manual`.  Consulte a seção \"OBSERVAÇÕES SOBRE AS ESTRATÉGIAS DA MESCLAGEM\" acima para obter mais informações sobre cada estratégia."

#~ msgid "This setting can be overridden by passing the `--strategy` option."
#~ msgstr "Esta configuração pode ser substituída ao utilizar a opção `--strategy`."

#, no-wrap
#~ msgid "notes.<name>.mergeStrategy"
#~ msgstr "notes.<nome>.mergeStrategy"

#~ msgid "Which merge strategy to choose when doing a notes merge into refs/notes/<name>.  This overrides the more general \"notes.mergeStrategy\".  See the \"NOTES MERGE STRATEGIES\" section above for more information on each available strategy."
#~ msgstr "Qual estratégia de mesclagem escolher ao fazer uma anotação na mesclagem em `refs/notes/<nome>`.  Isso substitui a opção \"notes.mergeStrategy\" que é mais genérica.  Consulte a seção \"OBSERVAÇÕES SOBRE AS ESTRATÉGIAS DA MESCLAGEM\" acima para obter mais informações sobre cada estratégia disponível."

#~ msgid "Which ref (or refs, if a glob or specified more than once), in addition to the default set by `core.notesRef` or `GIT_NOTES_REF`, to read notes from when showing commit messages with the 'git log' family of commands.  This setting can be overridden on the command line or by the `GIT_NOTES_DISPLAY_REF` environment variable.  See linkgit:git-log[1]."
#~ msgstr "Qual ref (ou refs, caso um \"glob\" seja especificado mais de uma vez), além do padrão definido pela variável `core.notesRef` ou` GIT_NOTES_REF`, para ler as anotações durante a exibição das mensagens do commit junto com a família de comandos 'git log'.  Esta configuração pode ser substituída na linha de comando ou pela variável de ambiente `GIT_NOTES_DISPLAY_REF`.  Consulte linkgit:git-log[1]."

#, no-wrap
#~ msgid "notes.rewrite.<command>"
#~ msgstr "notes.rewrite.<comando>"

#~ msgid "When rewriting commits with <command> (currently `amend` or `rebase`), if this variable is `false`, git will not copy notes from the original to the rewritten commit.  Defaults to `true`.  See also \"`notes.rewriteRef`\" below."
#~ msgstr "Ao reescrever os commits com o <comando> (atualmente `ammend` ou `rebase`), caso esta variável seja `false`, o git não copiará as anotações do original para o commit que foi reescrito.  A predefinição retorna para `true`.  Consulte também \"`notes.rewriteRef`\" abaixo."

#~ msgid "This setting can be overridden by the `GIT_NOTES_REWRITE_REF` environment variable."
#~ msgstr "Esta configuração pode ser substituída pela variável de ambiente `GIT_NOTES_REWRITE_REF`."

#, no-wrap
#~ msgid "notes.rewriteMode"
#~ msgstr "notes.rewriteMode"

#~ msgid "When copying notes during a rewrite, what to do if the target commit already has a note.  Must be one of `overwrite`, `concatenate`, `cat_sort_uniq`, or `ignore`.  Defaults to `concatenate`."
#~ msgstr "Ao copiar as anotações durante uma reescrita, o que fazer caso o commit de destino já tiver uma anotação.  Deve ser uma das opção `overwrite`,` concatenate`, `cat_sort_uniq` ou` ignore`.  A predefinição retorna para `concatenate`."

#~ msgid "This setting can be overridden with the `GIT_NOTES_REWRITE_MODE` environment variable."
#~ msgstr "Esta configuração pode ser substituída pela variável de ambiente `GIT_NOTES_REWRITE_MODE`."

#, no-wrap
#~ msgid "notes.rewriteRef"
#~ msgstr "notes.rewriteRef"

#~ msgid "When copying notes during a rewrite, specifies the (fully qualified) ref whose notes should be copied.  May be a glob, in which case notes in all matching refs will be copied.  You may also specify this configuration several times."
#~ msgstr "Ao copiar as anotações durante uma reescrita, defina a \"ref\" (totalmente qualificada) cujas anotações devem ser copiadas.  Pode ser um agrupamento \"glob\", onde as anotações em todas as referências coincidentes serão copiadas.  É possível também utilizar esta configuração várias vezes."

#~ msgid "Does not have a default value; you must configure this variable to enable note rewriting."
#~ msgstr "Não possui um valor predefinido; você deve configurar esta variável para ativar a reescrita das anotações."

#~ msgid "Can be overridden with the `GIT_NOTES_REWRITE_REF` environment variable."
#~ msgstr "Pode ser substituído pela variável de ambiente `GIT_NOTES_REWRITE_REF`."

#, ignore-same, no-wrap
#~ msgid "sendemail.aliasesFile"
#~ msgstr "sendemail.aliasesFile"

#~ msgid "To avoid typing long email addresses, point this to one or more email aliases files.  You must also supply `sendemail.aliasFileType`."
#~ msgstr "Para evitar a digitação dos longos endereços de e-mail, aponte para um ou mais arquivos aliases do e-mail.  Você também deve informar o `sendemail.aliasFileType`."

#, ignore-same, no-wrap
#~ msgid "sendemail.aliasFileType"
#~ msgstr "sendemail.aliasFileType"

#~ msgid "Format of the file(s) specified in sendemail.aliasesFile. Must be one of 'mutt', 'mailrc', 'pine', 'elm', or 'gnus', or 'sendmail'."
#~ msgstr "Formato do(s) arquivo(s) definidos(s) em `sendemail.aliasesFile`. Deve ser 'mutt', 'mailrc', 'pine', 'elm', 'gnus' ou 'sendmail'."

#~ msgid "What an alias file in each format looks like can be found in the documentation of the email program of the same name. The differences and limitations from the standard formats are described below:"
#~ msgstr "A aparência de um arquivo alias em cada formato pode ser encontrada na documentação do programa do e-mail com o mesmo nome. As diferenças e as limitações dos formatos predefinidas são descritas abaixo:"

#, no-wrap
#~ msgid "sendmail"
#~ msgstr "sendmail"

#~ msgid "Quoted aliases and quoted addresses are not supported: lines that"
#~ msgstr "Os aliases e os endereços citados não são compatíveis: linhas que"

#~ msgid "contain a `\"` symbol are ignored."
#~ msgstr "contenham o símbolo `\"` são ignorados."

#~ msgid "Redirection to a file (`/path/name`) or pipe (`|command`) is not"
#~ msgstr "O redirecionamento para um arquivo (`/nome/do/caminho`) ou pipe (`|comando`) não é"

#~ msgid "supported."
#~ msgstr "suportado."

#~ msgid "File inclusion (`:include: /path/name`) is not supported."
#~ msgstr "A inclusão dos arquivos (`:include: /path/nome`) não é suportada."

#~ msgid "Warnings are printed on the standard error output for any"
#~ msgstr "Os avisos são impressos na saída de erro predefinido para qualquer"

#~ msgid "explicitly unsupported constructs, and any other lines that are not recognized by the parser."
#~ msgstr "construções explicitamente não suportadas e quaisquer outras linhas que não sejam reconhecidas pelo analisador."

#, ignore-same, no-wrap
#~ msgid "sendemail.multiEdit"
#~ msgstr "sendemail.multiEdit"

#~ msgid "If true (default), a single editor instance will be spawned to edit files you have to edit (patches when `--annotate` is used, and the summary when `--compose` is used). If false, files will be edited one after the other, spawning a new editor each time."
#~ msgstr "Caso o valor seja `true` (predefinido), uma única instância do editor será gerada para editar os arquivos que precisam ser editados (os patches quando `--annotate` é utilizado e o resumo quando `--compose` é utilizado). Caso o valor seja `false`, os arquivos serão editados um após o outro, onde um novo editor é aberto a cada vez."

#, ignore-same, no-wrap
#~ msgid "sendemail.confirm"
#~ msgstr "sendemail.confirm"

#~ msgid "Sets the default for whether to confirm before sending. Must be one of 'always', 'never', 'cc', 'compose', or 'auto'. See `--confirm` in the previous section for the meaning of these values."
#~ msgstr "Define a predefinição para confirmar antes do envio. Deve ser um de 'always' (sempre), 'never' (nunca), 'cc' (com cópia), 'compose' (compor) ou 'auto'. Consulte `--confirm` na seção anterior para obter o significado destes valores."

#~ msgid "The suffix '@\\{upstream\\}' to a branchname (short form '<branchname>@\\{u\\}')  refers to the branch that the branch specified by branchname is set to build on top of (configured with `branch.<name>.remote` and `branch.<name>.merge`).  A missing branchname defaults to the current one. These suffixes are also accepted when spelled in uppercase, and they mean the same thing no matter the case."
#~ msgstr "O sufixo '@ {upstream}' para o nome de uma ramificação (o formato abreviado '<nome-do-ramo>@\\{u\\}') refere-se ao ramo onde o ramo informado pelo \"branchname\" esteja definido para construir em cima do `branch.<nome>.remote` e `branch.<nome>.merge`).  Em uma ramificação desaparecida a predefinição retorna para a atual. Estes sufixos também são aceitos quando digitados em maiúsculas e significam a mesma coisa, não importa o caso."

#~ msgid "Limit the displayed commits to those directly on the ancestry chain between the ``from'' and ``to'' commits in the given commit range. I.e. only display commits that are ancestor of the ``to'' commit and descendants of the ``from'' commit."
#~ msgstr "Limite os commits exibidos àquelas diretamente na cadeia de ancestralidade entre os commits ``from'' e ``to'' no intervalo dos commits informados. Ou seja, exiba apenas os commits que são ancestrais do commit ``to'' ('para') e os descendentes do commit ``from''."

#~ msgid "Prepend <prefix>/ to each filename in the archive."
#~ msgstr "Anexe o `<prefixo>/` em cada nome do arquivo no arquivo."

#~ msgid "`--track=direct` is the default when the start point is a remote-tracking branch.  Set the branch.autoSetupMerge configuration variable to `false` if you want `git switch`, `git checkout` and `git branch` to always behave as if `--no-track` were given. Set it to `always` if you want this behavior when the start-point is either a local or remote-tracking branch. Set it to `inherit` if you want to copy the tracking configuration from the branch point."
#~ msgstr "A opção `--track=direct` é a opção predefinida quando o ponto inicial for uma ramificação rastreada remotamente.  Defina a variável de configuração `branch.autoSetupMerge` como `false` caso queira que o `git switch`, `git checkout` e o `git branch` sempre se comportem como se a opção `--no-track` fosse utilizada. Defina-o como `always` caso queira que este comportamento quando o ponto de partida for uma ramificação local ou rastreada remotamente. Defina-o como `inherit` caso queira copiar a configuração de rastreamento a partir do ponto da ramificação."

#~ msgid "Note: The `update-index` and `read-tree` primitives for supporting the skip-worktree bit predated the introduction of linkgit:git-sparse-checkout[1].  Users are encouraged to use `sparse-checkout` in preference to these low-level primitives."
#~ msgstr "Nota: Os primitivos `update-index` e o `read-tree` são usadas para ser compatível com o \"bit skip-worktree\" antecederam a introdução do linkgit:git-sparse-checkout[1]. Os usuários são encorajados a utilizar o `sparse-checkout` em vez destes primitivos de baixo nível."

#~ msgid "Initialize and modify the sparse-checkout."
#~ msgstr "Alter e inicialize a averiguação esparsa."

#~ msgid "This option controls if and under what conditions new commits of populated submodules should be fetched too. It can be used as a boolean option to completely disable recursion when set to 'no' or to unconditionally recurse into all populated submodules when set to 'yes', which is the default when this option is used without any value. Use 'on-demand' to only recurse into a populated submodule when the superproject retrieves a commit that updates the submodule's reference to a commit that isn't already in the local submodule clone. By default, 'on-demand' is used, unless `fetch.recurseSubmodules` is set (see linkgit:git-config[1])."
#~ msgstr "Essa opção controla se e sob quais condições os novos commits dos submódulos preenchidos também devem ser capturadas. Pode ser utilizado como uma opção booleana para desativar completamente a recursão quando definido como 'no' ou para recursar incondicionalmente em todos os sub-módulos preenchidos quando definido como 'sim', que é a predefinição quando esta opção é utilizada sem qualquer valor. Utilize 'on demand' para re-examinar apenas em um submódulo preenchido quando o superprojeto recuperar um commit que atualize a referência do submódulo para um commit que ainda não esteja no clone do submódulo local. É predefinido que 'on demand' seja utilizado, a menos que `fetch.recurseSubmodules` seja definido (consulte linkgit:git-config[1])."

#, no-wrap
#~ msgid "--track [inherit|direct]"
#~ msgstr "--track [inherit|direct]"

#, no-wrap
#~ msgid ""
#~ "'git cat-file' (-t [--allow-unknown-type]| -s [--allow-unknown-type]| -e | -p | <type> | --textconv | --filters ) [--path=<path>] <object>\n"
#~ "'git cat-file' (--batch[=<format>] | --batch-check[=<format>]) [ --textconv | --filters ] [--follow-symlinks]\n"
#~ msgstr ""
#~ "'git cat-file' (-t [--allow-unknown-type]| -s [--allow-unknown-type]| -e | -p | <tipo> | --textconv | --filters ) [--path=<caminho>] <objeto>\n"
#~ "'git cat-file' (--batch[=<formato>] | --batch-check[=<formato>]) [ --textconv | --filters ] [--follow-symlinks]\n"

#~ msgid "Similar to `--local` except that `.git/config.worktree` is read from or written to if `extensions.worktreeConfig` is present. If not it's the same as `--local`."
#~ msgstr "Semelhante a opção `--local`, exceto que o a opção de configuração `.git/config.worktree` é lido ou gravado caso `extensions.worktreeConfig` existir. Caso não seja, é o mesmo que a opção `--local`."

#~ msgid "Prints all the available commands on the standard output. This option overrides any given command or guide name."
#~ msgstr "Exiba todos os comandos disponíveis na saída padrão. Esta opção substitui qualquer outro comando ou nome da guia."

#, no-wrap
#~ msgid "        <mode> SP <type> SP <object> TAB <file>\n"
#~ msgstr "        <mode> SP <tipo> SP <objeto> TAB <arquivo>\n"

#, no-wrap
#~ msgid "        <mode> SP <type> SP <object> SP <object size> TAB <file>\n"
#~ msgstr "        <mode> SP <tipo> SP <objeto> SP <object size> TAB <arquivo>\n"

#, ignore-same, no-wrap
#~ msgid "--no-quiet"
#~ msgstr "--no-quiet"

#~ msgid "Be quiet, only report errors. The default behavior is set by the `reset.quiet` config option. `--quiet` and `--no-quiet` will override the default behavior."
#~ msgstr "Relate apenas os erros. A predefinição deste comportamento é definido pela opção da configuração `reset.quiet`. As opções`--quiet` e `--no-quiet` substituirão este comportamento predefinido."

#~ msgid "To elaborate, \"reading\" means checking for file existence, reading file attributes or file content. The working directory version may be present or absent. If present, its content may match against the index version or not. Writing is not affected by this bit, content safety is still first priority. Note that Git _can_ update working directory file, that is marked skip-worktree, if it is safe to do so (i.e.  working directory version matches index version)"
#~ msgstr "Para elaborar, \"ler\" significa verificar a existência do arquivo, ler os atributos ou o conteúdo do mesmo. A versão do diretório de trabalho pode estar presente ou não. Caso esteja, o seu conteúdo pode coincidir à versão do índice ou não. A escrita não é afetada por este bit, a segurança do conteúdo ainda é a primeira prioridade. Observe que o Git _pode_ atualizar o arquivo do diretório de trabalho, marcado como 'skip-worktree' (ignore a árvore de trabalho), caso seja seguro fazê-lo (por exemplo, se a versão do diretório de trabalho coincide com à versão do índice)"

#~ msgid "Although this bit looks similar to assume-unchanged bit, its goal is different from assume-unchanged bit's. Skip-worktree also takes precedence over assume-unchanged bit when both are set."
#~ msgstr "Embora esse bit pareça com o bit assumido como inalterado, o seu objetivo é diferente dos bits que são assumidos como inalterados. Skip-worktree também tem precedência sobre o bit assumido como inalterado quando ambos estão definidos."

#, ignore-same, no-wrap
#~ msgid "--track"
#~ msgstr "--track"

#, no-wrap
#~ msgid "-b <new_branch>"
#~ msgstr "-b <novo-ramo>"

#, no-wrap
#~ msgid "-B <new_branch>"
#~ msgstr "-B <novo-ramo>"

#, no-wrap
#~ msgid "--orphan <new_branch>"
#~ msgstr "--orphan <novo-ramo>"

#, no-wrap
#~ msgid "<new_branch>"
#~ msgstr "<novo-ramo>"

#, no-wrap
#~ msgid "<start_point>"
#~ msgstr "<ponto-de-partida>"

#~ msgid "This option bypasses the pre-commit and commit-msg hooks.  See also linkgit:githooks[5]."
#~ msgstr "Esta opção ignora os ganchos dos commits anteriores e os ganchos das mensagens de commit.  Consulte também linkgit:githooks[5]."

#, no-wrap
#~ msgid "--shared[=(false|true|umask|group|all|world|everybody|0xxx)]"
#~ msgstr "--shared[=(false|true|umask|group|all|world|everybody|0xxx)]"

#, no-wrap
#~ msgid "'0xxx'"
#~ msgstr "'0xxx'"

#, no-wrap
#~ msgid "<url>"
#~ msgstr "<url>"

#, ignore-same, no-wrap
#~ msgid "--unsorted-input"
#~ msgstr "--unsorted-input"

#~ msgid "Show commits in the order they were given on the command line instead of sorting them in reverse chronological order by commit time. Cannot be combined with `--no-walk` or `--no-walk=sorted`."
#~ msgstr "Mostra os commits na ordem que eles foram passados na linha de comando em vez de classificá-los em ordem cronológica inversa por tempo do commit. Não pode ser combinado com `--no-walk` ou `--no-walk=sorted`."

#~ msgid "Store the files instead of deflating them."
#~ msgstr "Armazene os arquivos em vez de extraí-los."

#, ignore-same, no-wrap
#~ msgid "-9"
#~ msgstr "-9"

#~ msgid "Highest and slowest compression level.  You can specify any number from 1 to 9 to adjust compression speed and ratio."
#~ msgstr "Níveis de compressão mais altos e baixos.  Você pode utilizar qualquer número entre 1 e 9 para ajustar a velocidade e a taxa de compressão."

#~ msgid "Some workflows require that one or more branches of development on one machine be replicated on another machine, but the two machines cannot be directly connected, and therefore the interactive Git protocols (git, ssh, http) cannot be used."
#~ msgstr "Alguns fluxos de trabalho requerem que um ou mais ramificações do desenvolvimento em uma máquina sejam replicadas em uma outra máquina, porém as duas máquinas não podem ser conectadas diretamente, portanto, os protocolos interativos do Git (git, ssh, http) não podem ser utilizados."

#~ msgid "The 'git bundle' command packages objects and references in an archive at the originating machine, which can then be imported into another repository using 'git fetch', 'git pull', or 'git clone', after moving the archive by some means (e.g., by sneakernet)."
#~ msgstr "O comando 'git bundle' empacota os objetos e as referências em um arquivo na máquina de origem, que pode ser importado para um outro repositório utilizando o comando 'git fetch', 'git pull' ou 'git clone', depois de mover o arquivo de alguma maneira (através do \"sneakernet\" por exemplo)."

#~ msgid "As no direct connection between the repositories exists, the user must specify a basis for the bundle that is held by the destination repository: the bundle assumes that all objects in the basis are already in the destination repository."
#~ msgstr "Como não existe conexão direta entre os repositórios o usuário deve informar uma base para o pacote que é mantido pelo repositório no destino: o pacote assume que todos os objetos na base já estão no repositório no destino."

#~ msgid "'git bundle' will only package references that are shown by 'git show-ref': this includes heads, tags, and remote heads.  References such as `master~1` cannot be packaged, but are perfectly suitable for defining the basis.  More than one reference may be packaged, and more than one basis can be specified.  The objects packaged are those not contained in the union of the given bases.  Each basis can be specified explicitly (e.g. `^master~10`), or implicitly (e.g.  `master~10..master`, `--since=10.days.ago master`)."
#~ msgstr "O comando 'git bundle' apenas empacotará as referências que são exibidas através do comando 'git show-ref': isso inclui os cabeçalhos, tags e cabeçalhos remotos.  As referências como `master~1` não podem ser empacotadas porém são perfeitamente adequadas para definir a base.  Mais de uma referência pode ser empacotada assim como mais de uma base pode ser definida.  Os objetos empacotados são aqueles que não estão existentes na união das bases informadas.  Cada base pode ser definida de forma explicita (`^master~10` por exemplo) ou de forma implícita (`master~10..master`, `--since=10.days.ago master` por exemplo)."

#, no-wrap
#~ msgid "--nl=<N>"
#~ msgstr "--nl=<N>"

#, no-wrap
#~ msgid ""
#~ "   myuser:$1Oyx5r9mdGZ2\n"
#~ "   myuser:$1$BA)@$vbnMJMDym7tA32AamXrm./\n"
#~ msgstr ""
#~ "   myuser:$1Oyx5r9mdGZ2\n"
#~ "   myuser:$1$BA)@$vbnMJMDym7tA32AamXrm./\n"

#~ msgid "Alternatively you can produce the password with perl's crypt() operator:"
#~ msgstr "Como alternativa, você pode produzir a senha com o operador `crypt()` do perl:"

#, no-wrap
#~ msgid "   perl -e 'my ($user, $pass) = @ARGV; printf \"%s:%s\\n\", $user, crypt($user, $pass)' $USER password\n"
#~ msgstr "   perl -e 'my ($user, $pass) = @ARGV; printf \"%s:%s\\n\", $user, crypt($user, $pass)' $USER password\n"

#~ msgid "Incorporates changes from a remote repository into the current branch.  In its default mode, `git pull` is shorthand for `git fetch` followed by `git merge FETCH_HEAD`."
#~ msgstr "Incorpora as alterações de um repositório remoto no ramo atual.  Em seu modo predefinido, o comando `git pull` é uma abreviação do comando `git fetch` seguido por `git merge FETCH_HEAD`."

#~ msgid "More precisely, 'git pull' runs 'git fetch' with the given parameters and calls 'git merge' to merge the retrieved branch heads into the current branch.  With `--rebase`, it runs 'git rebase' instead of 'git merge'."
#~ msgstr "Mais precisamente, o comando 'git pull' executa o 'git fetch' com os parâmetros informados e chama o 'git merge' para mesclar os cabeçalhos recuperados da ramificação no ramo atual.  Com `--rebase`, ele executa o comando 'git rebase' em vez do 'git merge'."

#~ msgid "When set to `preserve` (deprecated in favor of `merges`), rebase with the `--preserve-merges` option passed to `git rebase` so that locally created merge commits will not be flattened."
#~ msgstr "Quando definido como `preserve` (já descontinuado em favor de `merges`), reconstrua passando a opção `--preserve-merges` para o comando `git rebase` para que a mesclagem dos commits criados localmente não sejam achatadas."

#~ msgid "Override earlier --rebase."
#~ msgstr "Ignora o `--rebase` anterior."

#, no-wrap
#~ msgid "--exclude-per-directory=<gitignore>"
#~ msgstr "--exclude-per-directory=<gitignore>"

#~ msgid "When running the command with `-u` and `-m` options, the merge result may need to overwrite paths that are not tracked in the current branch.  The command usually refuses to proceed with the merge to avoid losing such a path.  However this safety valve sometimes gets in the way.  For example, it often happens that the other branch added a file that used to be a generated file in your branch, and the safety valve triggers when you try to switch to that branch after you ran `make` but before running `make clean` to remove the generated file.  This option tells the command to read per-directory exclude file (usually '.gitignore') and allows such an untracked but explicitly ignored file to be overwritten."
#~ msgstr "Ao executar o comando com as opções `-u` e `-m`, o resultado da mesclagem pode precisar substituir os caminhos que não são monitorados na ramificação atual.  O comando geralmente se recusa a prosseguir com a mesclagem para evitar a perda deste caminho.  No entanto, essa válvula de segurança às vezes atrapalha.  Muitas vezes acontece do outro ramo ter adicionado um arquivo que costumava ser um arquivo que foi gerado na sua ramificação e a válvula de segurança é acionada quando você tenta alternar para esta ramificação depois de executar o comando `make`, porém antes de executar `make clean` para remover todos os arquivo gerados pelo processo `make`.  Essa opção informa ao comando para ler o arquivo de exclusão por diretório (geralmente '.gitignore') e permite que um arquivo que não seja monitorado, porém ignorado de forma explicita seja substituído."

#~ msgid "Use merging strategies to rebase.  When the recursive (default) merge strategy is used, this allows rebase to be aware of renames on the upstream side.  This is the default."
#~ msgstr "Utilize estratégias de mesclagem para fazer o `rebase`.  Quando a estratégia de mesclagem recursiva (predefinida) for utilizada, permite que o `rebase` esteja ciente das renomeações no lado upstream.  Esta é a predefinição."

#~ msgid "The `--rebase-merges` mode is similar in spirit to the deprecated `--preserve-merges` but works with interactive rebases, where commits can be reordered, inserted and dropped at will."
#~ msgstr "O modo `--rebase-merges` é semelhante (em espírito) a opção descontinuada `--preserve-merges` porém trabalha com reconstrução interativa (rebases), onde os commits possam ser reordenados, inseridos ou eliminados a vontade."

#, ignore-same, no-wrap
#~ msgid "--preserve-merges"
#~ msgstr "--preserve-merges"

#~ msgid "[DEPRECATED: use `--rebase-merges` instead] Recreate merge commits instead of flattening the history by replaying commits a merge commit introduces. Merge conflict resolutions or manual amendments to merge commits are not preserved."
#~ msgstr "[DESCONTINUADO: utilize `--rebase-merges`] Recrie os commits mesclados em vez de achatar o histórico, reproduzindo os commits introduzidos por uma mesclagem do commit. As resoluções dos conflitos da mesclagem ou das emendas manuais para mesclar os commits não são preservadas."

#~ msgid "This uses the `--interactive` machinery internally, but combining it with the `--interactive` option explicitly is generally not a good idea unless you know what you are doing (see BUGS below)."
#~ msgstr "Utiliza o mecanismo `--interactive` internamente, porém ao combiná-lo com a opção `--interactive` de forma explícita, em geral não é uma boa ideia a menos que saiba o que está fazendo (consulte 'BUGS' abaixo)."

#~ msgid "--preserve-merges and --interactive"
#~ msgstr "--preserve-merges e --interactive"

#~ msgid "--preserve-merges and --signoff"
#~ msgstr "--preserve-merges e --signoff"

#~ msgid "--preserve-merges and --rebase-merges"
#~ msgstr "--preserve-merges e --rebase-merges"

#~ msgid "--preserve-merges and --empty="
#~ msgstr "--preserve-merges e --empty="

#~ msgid "--preserve-merges and --ignore-whitespace"
#~ msgstr "--preserve-merges e --ignore-whitespace"

#~ msgid "--preserve-merges and --committer-date-is-author-date"
#~ msgstr "--preserve-merges e --committer-date-is-author-date"

#~ msgid "--preserve-merges and --ignore-date"
#~ msgstr "--preserve-merges e --ignore-date"

#~ msgid "The todo list presented by the deprecated `--preserve-merges --interactive` does not represent the topology of the revision graph (use `--rebase-merges` instead).  Editing commits and rewording their commit messages should work fine, but attempts to reorder commits tend to produce counterintuitive results.  Use `--rebase-merges` in such scenarios instead."
#~ msgstr "A lista de tarefas apresentada pela opção descontinuada `--preserve-merges --interactive` não representa a topologia do grafo da revisão (em vez disso use a opção `--rebase-merges`).  A edição dos commits e a reformulação das suas mensagens devem funcionar bem, porém as tentativas de reordenar os commits tendem a produzir resultados contra-intuitivos.  Em vez disso, use a opção `--rebase-merges` em tais cenários."

#~ msgid "For example, an attempt to rearrange"
#~ msgstr "Por exemplo, uma tentativa para reorganizar"

#, no-wrap
#~ msgid "1 --- 2 --- 3 --- 4 --- 5\n"
#~ msgstr "1 --- 2 --- 3 --- 4 --- 5\n"

#, no-wrap
#~ msgid "1 --- 2 --- 4 --- 3 --- 5\n"
#~ msgstr "1 --- 2 --- 4 --- 3 --- 5\n"

#~ msgid "by moving the \"pick 4\" line will result in the following history:"
#~ msgstr "movendo a linha \"pick 4\" resultará no seguinte histórico:"

#, no-wrap
#~ msgid ""
#~ "\t3\n"
#~ "       /\n"
#~ "1 --- 2 --- 4 --- 5\n"
#~ msgstr ""
#~ "\t3\n"
#~ "       /\n"
#~ "1 --- 2 --- 4 --- 5\n"

#~ msgid "'C' = copied"
#~ msgstr "'C' = copiado"

#, no-wrap
#~ msgid "--preserve-merges (DEPRECATED)"
#~ msgstr "--preserve-merges (DESCONTINUADO)"

#~ msgid "If set to `1`, include broken or badly named refs when iterating over lists of refs. In a normal, non-corrupted repository, this does nothing. However, enabling it may help git to detect and abort some operations in the presence of broken refs. Git sets this variable automatically when performing destructive operations like linkgit:git-prune[1]. You should not need to set it yourself unless you want to be paranoid about making sure an operation has touched every ref (e.g., because you are cloning a repository to make a backup)."
#~ msgstr "Caso seja definido como `1`, inclua as referências quebradas ou com nomes incorretos ao se iterar sobre as listas das referências. Em um repositório normal, não corrompido, isso não faz nada. No entanto, habilitá-lo pode ajudar o git a detectar e abortar algumas operações na presença de referências quebradas. O Git define essa variável de forma automática durante a execução das operações destrutivas como linkgit:git-prune[1]. Você não precisa configurá-lo sozinho, a menos que queira ser paranóico para garantir que uma operação toque em cada \"ref\" (caso esteja clonando um repositório para fazer uma cópia de segurança por exemplo)."

#, ignore-same, no-wrap
#~ msgid "--advertise-refs"
#~ msgstr "--advertise-refs"

#~ msgid "Only the initial ref advertisement is output, and the program exits immediately. This fits with the HTTP GET request model, where no request content is received but a response must be produced."
#~ msgstr "Somente o anúncio da \"ref\" inicial é produzido e o programa encerra imediatamente. Isso se encaixa no modelo de solicitação HTTP GET, onde nenhum conteúdo de solicitação é recebido, porém uma resposta deve ser produzida."

#~ msgid "With this option, 'merge-recursive' spends a little extra time to avoid mismerges that sometimes occur due to unimportant matching lines (e.g., braces from distinct functions).  Use this when the branches to be merged have diverged wildly.  See also linkgit:git-diff[1] `--patience`."
#~ msgstr "Com esta opção, 'merge-recursive' gasta um pouco de tempo extra para evitar as distorções que às vezes ocorrem devido as coincidência das linhas sem importância (por exemplo, chaves das funções distintas).  Use isso quando os ramos que serão mesclados divergirem bastante.  Consulte também linkgit:git-diff[1] `--patience`."

#~ msgid "The `-M` and `-C` options require O(n^2) processing time where n is the number of potential rename/copy targets.  This option prevents rename/copy detection from running if the number of rename/copy targets exceeds the specified number."
#~ msgstr "As opções `-M` e `-C` requerem um tempo de processamento O(n^2) em que n é a quantidade de possíveis alvos para renomeações/cópia.  Esta opção impede que a detecção da ação de renomear/cópia seja executada se a quantidade dos alvos a serem renomeados/copiados exceda o a quantidade usada."

#~ msgid "Use the given config file instead of the one specified by GIT_CONFIG."
#~ msgstr "Utilize o arquivo de configuração informado em vez daquele especificado por GIT_CONFIG."

#~ msgid "You can override these rules either by command-line options or by environment variables. The `--global`, `--system` and `--worktree` options will limit the file used to the global, system-wide or per-worktree file respectively.  The `GIT_CONFIG` environment variable has a similar effect, but you can specify any filename you want."
#~ msgstr "Estas regras podem ser substituídas através da linha de comando ou através das variáveis de ambiente. As opções `--global`, `--system` e `--worktree` limitarão o arquivo utilizado ao arquivo global, em todo o sistema ou por árvore de trabalho, respectivamente.  A variável de ambiente `GIT_CONFIG` environment variable has a similar effecttem um efeito similar, porém é possível definir um nome do arquivo caso queira."

#~ msgid "Take the configuration from the given file instead of .git/config.  Using the \"--global\" option forces this to ~/.gitconfig. Using the \"--system\" option forces this to $(prefix)/etc/gitconfig."
#~ msgstr "Pegue a configuração do arquivo informado em vez de .git/config. Usar a opção \"--global\" força isso para ~/.gitconfig. Usar a opção \"--system\" força isso para $(prefixo)/etc/gitconfig."

#, ignore-ellipsis, no-wrap
#~ msgid "'git diff' [<options>] <commit> [--] [<path>...]"
#~ msgstr "'git diff' [<opções>] <commit> [--] [<caminho>...]"

#, no-wrap
#~ msgid "--no-diff-merges:"
#~ msgstr "--no-diff-merges:"

#, no-wrap
#~ msgid "-m:"
#~ msgstr "-m:"

#, no-wrap
#~ msgid "-c:"
#~ msgstr "-c:"

#, no-wrap
#~ msgid "--cc:"
#~ msgstr "--cc:"

#~ msgid "Show only names of changed files."
#~ msgstr "Exiba apenas os nomes dos arquivos que foram alterados."

#~ msgid "Construct a commit message for use with `rebase --autosquash`.  The commit message will be the subject line from the specified commit with a prefix of \"fixup! \".  See linkgit:git-rebase[1] for details."
#~ msgstr "Constrói a mensagem de um commit para utilizar com `rebase --autosquash`.  A mensagem do commit será o assunt da linha a partir de um determinado commit com um prefixo \"fixup! \".  Para mais detalhes, consulte linkgit:git-rebase[1]."

#~ msgid "Die if the pack contains broken objects. For internal use only."
#~ msgstr "Encerre caso o pacote contenha objetos quebrados. Apenas para utilização interna."

#~ msgid "If the command contains the `$ARG` string, this string will be replaced with the <value> part of an existing trailer with the same <token>, if any, before the command is launched."
#~ msgstr "Caso o comando tiver um texto `$ARG`, ela será substituída pela parte `<valor>` do caractere de resposta já existente com o mesmo `<token>`, se houver, antes da execução do comando."

#, no-wrap
#~ msgid "show [<diff-options>] [<stash>]"
#~ msgstr "show [<opções-diff>] [<stash>]"

#~ msgid "All untracked files are also stashed and then cleaned up with `git clean`."
#~ msgstr "Todos os arquivos que não sejam monitorados também são armazenados e limpos com o `git clean`."

#~ msgid "If the file `.mailmap` exists at the toplevel of the repository, or at the location pointed to by the mailmap.file or mailmap.blob configuration options, it is used to map author and committer names and email addresses to canonical real names and email addresses."
#~ msgstr "Caso o arquivo `.mailmap` exista no topo do repositório ou no local apontado pelas opções da configuração `mailmap.file` ou `mailmap.blob`, ele será utilizado para mapear os nomes dos autores e os endereços de email para os seus respectivos nomes e endereços de email verdadeiros."

#~ msgid "In the simple form, each line in the file consists of the canonical real name of an author, whitespace, and an email address used in the commit (enclosed by '<' and '>') to map to the name. For example:"
#~ msgstr "No formato simples, cada linha do arquivo consiste no nome real de um autor, espaço e um endereço de email utilizado no commit (delimitado por '<' and '>') mapeando para o nome. Por exemplo:"

#, no-wrap
#~ msgid "\tProper Name <commit@email.xx>\n"
#~ msgstr "\tNome Próprio <commit@email.xx>\n"

#~ msgid "The more complex forms are:"
#~ msgstr "Os formatos mais complexos são:"

#, no-wrap
#~ msgid "\t<proper@email.xx> <commit@email.xx>\n"
#~ msgstr "\t<proper@email.xx> <commit@email.xx>\n"

#~ msgid "which allows mailmap to replace only the email part of a commit, and:"
#~ msgstr "o que permite que o mailmap substitua apenas a parte do email de um commit e:"

#, no-wrap
#~ msgid "\tProper Name <proper@email.xx> <commit@email.xx>\n"
#~ msgstr "\tNome Próprio <proper@email.xx> <commit@email.xx>\n"

#~ msgid "which allows mailmap to replace both the name and the email of a commit matching the specified commit email address, and:"
#~ msgstr "o que permite que o mailmap substitua ambos os nomes e o email de um commit correspondente ao endereço de email do commit especificado, e:"

#, no-wrap
#~ msgid "\tProper Name <proper@email.xx> Commit Name <commit@email.xx>\n"
#~ msgstr "\tNome Próprio <proper@email.xx> Nome de quem fez o Commit <commit@email.xx>\n"

#~ msgid "which allows mailmap to replace both the name and the email of a commit matching both the specified commit name and email address."
#~ msgstr "o que permite que o mailmap substitua ambos os nomes e o email de um commit que corresponda a ambos os nomes de quem fez o commit e com o endereço de email."

#~ msgid "Example 1: Your history contains commits by two authors, Jane and Joe, whose names appear in the repository under several forms:"
#~ msgstr "Exemplo 1: O seu histórico contém confirmações de dois autores, Jane e Joe, cujos nomes aparecem no repositório de diferentes maneiras:"

#, no-wrap
#~ msgid ""
#~ "Joe Developer <joe@example.com>\n"
#~ "Joe R. Developer <joe@example.com>\n"
#~ "Jane Doe <jane@example.com>\n"
#~ "Jane Doe <jane@laptop.(none)>\n"
#~ "Jane D. <jane@desktop.(none)>\n"
#~ msgstr ""
#~ "Joe Developer <joe@example.com>\n"
#~ "Joe R. Developer <joe@example.com>\n"
#~ "Jane Doe <jane@example.com>\n"
#~ "Jane Doe <jane@laptop.(none)>\n"
#~ "Jane D. <jane@desktop.(none)>\n"

#~ msgid "Now suppose that Joe wants his middle name initial used, and Jane prefers her family name fully spelled out. A proper `.mailmap` file would look like:"
#~ msgstr "Agora, suponha que Joe queira que seu nome do meio seja utilizado no começo e Jane prefere que o nome de sua família seja escrito por extenso. Um arquivo `.mailmap` apropriado se pareceria com:"

#, no-wrap
#~ msgid ""
#~ "Jane Doe         <jane@desktop.(none)>\n"
#~ "Joe R. Developer <joe@example.com>\n"
#~ msgstr ""
#~ "Jane Doe         <jane@desktop.(none)>\n"
#~ "Joe R. Developer <joe@example.com>\n"

#~ msgid "Note how there is no need for an entry for `<jane@laptop.(none)>`, because the real name of that author is already correct."
#~ msgstr "Observe como não há necessidade de uma entrada para `<jane@laptop.(none)>` porque o nome real deste autor já está correto."

#~ msgid "Example 2: Your repository contains commits from the following authors:"
#~ msgstr "Exemplo 2: O seu repositório contém commits dos seguintes autores:"

#, no-wrap
#~ msgid ""
#~ "nick1 <bugs@company.xx>\n"
#~ "nick2 <bugs@company.xx>\n"
#~ "nick2 <nick2@company.xx>\n"
#~ "santa <me@company.xx>\n"
#~ "claus <me@company.xx>\n"
#~ "CTO <cto@coompany.xx>\n"
#~ msgstr ""
#~ "nick1 <bugs@company.xx>\n"
#~ "nick2 <bugs@company.xx>\n"
#~ "nick2 <nick2@company.xx>\n"
#~ "santa <me@company.xx>\n"
#~ "claus <me@company.xx>\n"
#~ "CTO <cto@coompany.xx>\n"

#~ msgid "Then you might want a `.mailmap` file that looks like:"
#~ msgstr "Então você pode querer um arquivo `.mailmap` parecido com:"

#, no-wrap
#~ msgid ""
#~ "<cto@company.xx>                       <cto@coompany.xx>\n"
#~ "Some Dude <some@dude.xx>         nick1 <bugs@company.xx>\n"
#~ "Other Author <other@author.xx>   nick2 <bugs@company.xx>\n"
#~ "Other Author <other@author.xx>         <nick2@company.xx>\n"
#~ "Santa Claus <santa.claus@northpole.xx> <me@company.xx>\n"
#~ msgstr ""
#~ "<cto@company.xx>                       <cto@coompany.xx>\n"
#~ "Some Dude <some@dude.xx>         nick1 <bugs@company.xx>\n"
#~ "Other Author <other@author.xx>   nick2 <bugs@company.xx>\n"
#~ "Other Author <other@author.xx>         <nick2@company.xx>\n"
#~ "Santa Claus <santa.claus@northpole.xx> <me@company.xx>\n"

#~ msgid "Use hash '#' for comments that are either on their own line, or after the email address."
#~ msgstr "Utilize o sinal de jogo da velha '#' para comentários que estejam em sua própria linha ou após o endereço de email."

#, ignore-same, no-wrap
#~ msgid "linkgit:git-parse-remote[1]"
#~ msgstr "linkgit:git-parse-remote[1]"

#~ msgid "Routines to help parsing remote repository access parameters."
#~ msgstr "Rotinas para auxiliar na analise dos parâmetros de acesso ao repositório remoto."

#~ msgid "support the following date formats:"
#~ msgstr "são compatíveis com os seguintes formatos de data:"

#, no-wrap
#~ msgid "expect dangling commits - potential heads - due to lack of head information"
#~ msgstr "aguardar pelos commits pendentes - potenciais cabeçalhos - devido à falta de informações dos cabeçalhos"

#~ msgid "You haven't specified any nodes as heads so it won't be possible to differentiate between un-parented commits and root nodes."
#~ msgstr "Você não especificou nenhum nó como cabeçalho, portanto não será possível diferenciar entre os commits sem origem e os nós raiz."

#, no-wrap
#~ msgid "missing sha1 directory '<dir>'"
#~ msgstr "diretório sem sha1 '<dir>'"

#~ msgid "The directory holding the sha1 objects is missing."
#~ msgstr "O diretório que contém os objetos sha1 está ausente."

#~ msgid "This flag makes the merge commits show the full diff like regular commits; for each merge parent, a separate log entry and diff is generated. An exception is that only diff against the first parent is shown when `--first-parent` option is given; in that case, the output represents the changes the merge brought _into_ the then-current branch."
#~ msgstr "Esta opção faz com que os commits mesclados exibam o diff completo como os commits comuns; para cada pai mesclado, uma entrada a parte no registro log e os diffs são gerados. Uma exceção é que apenas quanto ao diff em relação ao primeiro pai que é exibido quando a opção `--first-parent` é utilizada; neste caso, a saída representa as alterações que a mesclagem trouxe para o ramo atual."

#~ msgid "The output is the new tag's <object> identifier."
#~ msgstr "A saída é o identificador <objeto> da nova tag."

#, no-wrap
#~ msgid "Configuration"
#~ msgstr "Configuração"

#~ msgid "The `.mailmap` feature is used to coalesce together commits by the same person in the shortlog, where their name and/or email address was spelled differently."
#~ msgstr "O recurso `.mailmap` é utilizado para agrupar os commits da mesma pessoa no \"shortlog\", onde o seu nome ou endereço de email foram escritos de maneiras diferentes."

#, no-wrap
#~ msgid "COMMON DIFF OPTIONS"
#~ msgstr "OPÇÕES DIFF QUE SÃO COMUNS"

#~ msgid "For paths with merge conflicts, `X` and `Y` show the modification states of each side of the merge. For paths that do not have merge conflicts, `X` shows the status of the index, and `Y` shows the status of the work tree.  For untracked paths, `XY` are `??`.  Other status codes can be interpreted as follows:"
#~ msgstr "Para os caminhos com conflitos de mesclagem, `X` e `Y` exibem a condição das modificações de cada lado da mesclagem. Para os caminhos que não possuam conflitos de mesclagem, `X` exibe a condição do índice e `Y` exibe a condição da árvore de trabalho.  Para os caminhos não rastreados, `XY` é `??`.  Os outros códigos das condições podem ser interpretados da seguinte maneira:"

#~ msgid "Ignored files are not listed, unless `--ignored` option is in effect, in which case `XY` are `!!`."
#~ msgstr "Os arquivos ignorados não estão listados, a menos que a opção `--ignored` esteja em vigor; nesse caso, `XY` é `!!`."

#~ msgid "'only[=val]': select whether non-trailer lines from the trailer block should be included. The `only` keyword may optionally be followed by an equal sign and one of `true`, `on`, `yes` to omit or `false`, `off`, `no` to show the non-trailer lines. If option is given without value it is enabled. If given multiple times the last value is used."
#~ msgstr "'only[=val]': seleciona se o atributo das linhas dos caracteres de resposta devem ser incluídos. A palavra-chave `only` pode opcionalmente ser seguido por um sinal de igual e uma das opções `true`, `on`, `yes` para omitir ou `false`, `off`, `no` para exibir as linhas que não sejam caracteres de resposta. Caso a opção seja usada sem qualquer valor, ela será ativada. Caso seja usado várias vezes, apenas o último valor será considerado."

#~ msgid "'valueonly[=val]': skip over the key part of the trailer line and only show the value part. Also this optionally allows explicit value."
#~ msgstr "'valueonly[=val]': ignore a parte principal da linha caractere de resposta e exiba apenas a parte do valor. Além disso, isto também permite que o valor seja explícito de maneira opcional."

#, ignore-same
#~ msgid "git-parse-remote(1)"
#~ msgstr "git-parse-remote(1)"

#~ msgid "git-parse-remote - Routines to help parsing remote repository access parameters"
#~ msgstr "git-parse-remote - Rotinas para ajudar na análise dos parâmetros de acesso ao repositório remoto"

#~ msgid "'. \"$(git --exec-path)/git-parse-remote\"'\n"
#~ msgstr "'. \"$(git --exec-path)/git-parse-remote\"'\n"

#~ msgid "This script is included in various scripts to supply routines to parse files under $GIT_DIR/remotes/ and $GIT_DIR/branches/ and configuration variables that are related to fetching, pulling and pushing."
#~ msgstr "Este script está incluso em vários scripts para fornecer rotinas para realizar a análise dos arquivos no `$GIT_DIR/remotes/` e `$GIT_DIR/branches/` e nas variáveis de configuração relacionadas à busca (fetch), captura (pull) e impulsionamento (pull)."

#~ msgid "The Git repository to import to.  If the directory doesn't"
#~ msgstr "O repositório Git para o qual irá importar.  Se o diretório não"

#~ msgid "Rewrite the object IDs for the submodule specified by <name> from the values"
#~ msgstr "Reescreva as IDs dos objetos para o submódulo definido pelo <nome> vindo dos valores"

#~ msgid "active_branches = 1 cur, 5 max\n"
#~ msgstr "active_branches = 1 cur, 5 max\n"

#~ msgid ""
#~ "Inactive Branches\n"
#~ "-----------------\n"
#~ "refs/heads/master:\n"
#~ msgstr ""
#~ "Ramos Inativos\n"
#~ "--------------\n"
#~ "refs/heads/master:\n"

#~ msgid ""
#~ "Empty commits\n"
#~ "~~~~~~~~~~~~~\n"
#~ msgstr ""
#~ "Commits vazios\n"
#~ "~~~~~~~~~~~~~\n"

#~ msgid ""
#~ "Context\n"
#~ "~~~~~~~\n"
#~ msgstr ""
#~ "Contexto\n"
#~ "~~~~~~~~\n"

#~ msgid ""
#~ "Hooks\n"
#~ "~~~~~\n"
#~ msgstr ""
#~ "Ganchos\n"
#~ "~~~~~~~\n"

#~ msgid ""
#~ "Interruptability\n"
#~ "~~~~~~~~~~~~~~~~\n"
#~ msgstr ""
#~ "Interruptabilidade\n"
#~ "~~~~~~~~~~~~~~~~~~\n"

#~ msgid ""
#~ "Commit Rewording\n"
#~ "~~~~~~~~~~~~~~~~\n"
#~ msgstr ""
#~ "Reformulando o Commit\n"
#~ "~~~~~~~~~~~~~~~~~~~~~\n"

#~ msgid "include::merge-strategies.txt[]\n"
#~ msgstr "include::merge-strategies.txt[]\n"

#~ msgid "NOTES\n"
#~ msgstr "OBSERVAÇÕES\n"

#~ msgid "the commit recorded in the superproject will be"
#~ msgstr "o commit registrado no superprojeto será"

#~ msgid "checked out in the submodule on a detached HEAD.\n"
#~ msgstr "verificado no submódulo em um HEAD desanexado.\n"

#~ msgid "the current branch of the submodule will be rebased"
#~ msgstr "a ramificação atual no submódulo onde o rebase será feito"

#~ msgid "onto the commit recorded in the superproject.\n"
#~ msgstr "no commit registrado no superprojeto.\n"

#~ msgid "the commit recorded in the superproject will be merged"
#~ msgstr "o commit registrado no superprojeto que será mesclado"

#~ msgid "into the current branch in the submodule.\n"
#~ msgstr "na ramificação atual no submódulo.\n"

#~ msgid "arbitrary shell command that takes a single"
#~ msgstr "comando shell arbitrário que utiliza um único"

#~ msgid "contents of <old|new>,\n"
#~ msgstr "conteúdo do <antigo|novo>,\n"

#~ msgid "the objects."
#~ msgstr "os objetos."

#~ msgid "'git update-index' continue anyway."
#~ msgstr "'git update-index' continue mesmo assim."

#~ msgid "If --refresh finds unmerged changes in the index, the default"
#~ msgstr "Caso a opção `--refresh` encontre alterações não mescladas no índice, é a predefinição"

#~ msgid "behavior is to error out.  This option makes 'git update-index'"
#~ msgstr "o comportamento gerar um erro.  Está opção faz 'git update-index'"

#~ msgid "continue anyway.\n"
#~ msgstr "continue mesmo assim.\n"

#~ msgid "color specification, as described under Values in the"
#~ msgstr "definições das cores, conforme descrito em Valores no"

#, ignore-same
#~ msgid "linkgit:git-shortlog[1]."
#~ msgstr "linkgit:git-shortlog[1]."

#~ msgid "make the next placeholder take at"
#~ msgstr "faça com que o próximo espaço reservado leve em"

#~ msgid "make the next placeholder take at least until Nth"
#~ msgstr "faça com que o próximo espaço reservado dure até Nth"

#~ msgid "columns, padding spaces on the right if necessary"
#~ msgstr "colunas, preenchimento de espaços à direita se necessário"

#~ msgid "similar to '%<(<N>)', '%<|(<N>)' respectively,"
#~ msgstr "semelhante a '%<(<N>)', '%<|(<N>)' respectivamente,"

#~ msgid "but padding spaces on the left"
#~ msgstr "mas com espaços de preenchimento à esquerda"

#~ msgid "similar to '%>(<N>)', '%>|(<N>)'"
#~ msgstr "semelhante a '%>(<N>)', '%>|(<N>)'"

#~ msgid "similar to '%<(<N>)', '%<|(<N>)'"
#~ msgstr "semelhante a '%<(<N>)', '%<|(<N>)'"

#~ msgid "respectively, but padding both sides (i.e. the text is centered)"
#~ msgstr "respectivamente, mas preenchendo os dois lados (ou seja, o texto é centralizado)"

#~ msgid "author name (respecting .mailmap, see linkgit:git-shortlog[1]"
#~ msgstr "nome do autor (respeitando .mailmap, consulte linkgit:git-shortlog[1]"

#~ msgid "or linkgit:git-blame[1])"
#~ msgstr "ou linkgit:git-blame[1])"

#~ msgid "author email (respecting .mailmap, see linkgit:git-shortlog[1]"
#~ msgstr "e-mail do autor (respeitando .mailmap, consulte linkgit:git-shortlog[1]"

#~ msgid "author local-part (see '%al') respecting .mailmap, see"
#~ msgstr "parte local do autor (consulte '%al') respeitando .mailmap, consulte"

#~ msgid "linkgit:git-shortlog[1] or linkgit:git-blame[1])"
#~ msgstr "linkgit:git-shortlog[1] ou linkgit:git-blame[1])"

#~ msgid "committer name (respecting .mailmap, see"
#~ msgstr "nome de quem fez o commit (respeitando .mailmap, consulte"

#~ msgid "committer email (respecting .mailmap, see"
#~ msgstr "e-mail de quem fez o commit (respeitando .mailmap, consulte"

#~ msgid "committer local-part (see '%cl') respecting .mailmap, see"
#~ msgstr "parte local do autor do commit (consulte '%cl') respeitando .mailmap, consulte"

#~ msgid "ref name given on the command line by which the commit was reached"
#~ msgstr "o nome \"ref\" utilizado na linha de comando pela qual cada commit foi alcançado"

#~ msgid "(like `git log --source`), only works with `git log`"
#~ msgstr "(como `git log --source`), só funciona com `git log`"

#~ msgid "show \"G\" for a good (valid) signature,"
#~ msgstr "exibe \"G\" para obter uma boa assinatura (válida),"

#~ msgid "to sign a signed commit"
#~ msgstr "para assinar um commit assinado"

#~ msgid "reflog selector, e.g., `refs/stash@{1}` or `refs/stash@{2"
#~ msgstr "seletor do \"reflog\", por exemplo, `refs/stash@{1}` ou `refs/stash@{2"

#~ msgid "shortened reflog selector; same as `%gD`, but the refname"
#~ msgstr "seletor do reflog encurtado; o mesmo que '%gD', menos o \"refname\""

#~ msgid "reflog identity name (respecting .mailmap, see"
#~ msgstr "nome da identidade reflog (respeitando .mailmap, consulte"

#~ msgid "reflog identity email (respecting .mailmap, see"
#~ msgstr "e-mail da identidade reflog (respeitando .mailmap, consulte"

#~ msgid "display the trailers of the body as"
#~ msgstr "exiba os sinais de resposta no corpo da mensagem como"

#~ msgid "Show whole surrounding functions of changes."
#~ msgstr "Exiba todas as funções ao redor das alterações."

#~ msgid "--abbrev=<length>"
#~ msgstr "--abrev=<comprimento>"

#~ msgid "Use `--no-guess` to disable this."
#~ msgstr "Utilize a opção `--no-guess` para desativar."

#~ msgid "Add `Signed-off-by:` line to the commit message, using the committer identity of yourself.  See the signoff option in linkgit:git-commit[1] for more information."
#~ msgstr "Adicione a linha `Signed-off-by:` (Assinada por:) à mensagem do commit, utilizando a sua identidade.  Para mais informações sobre a assinatura na saída da mensagem, consulte em linkgit:git-commit[1]."

#~ msgid "Show the surrounding text from the previous line containing a function name up to the one before the next function name, effectively showing the whole function in which the match was found."
#~ msgstr "Exibe o texto ao redor da linha anterior que contenha um nome da função até o nome anterior ao próximo, exibindo efetivamente toda a função em que a coincidência foi encontrada."

#~ msgid "With --no-signoff do not add a Signed-off-by line."
#~ msgstr "A opção `--no-signoff` não adiciona a linha de assinatura \"Signed-off-by\"."

#~ msgid "Boolean true literals are `yes`, `on`, `true`,"
#~ msgstr "Os literais booleanos verdadeiros são `yes`, `on`, `true`,"

#~ msgid "`0` and the empty string.\n"
#~ msgstr "`0` e uma cadeia de caracteres vazios.\n"

#~ msgid "When `--check` is in effect, or when applying the patch (which is the default when none of the options that disables it is in effect), make sure the patch is applicable to what the current index file records.  If the file to be patched in the working tree is not up to date, it is flagged as an error.  This flag also causes the index file to be updated."
#~ msgstr "Quando a opção `--check` estiver em vigor ou durante a aplicação do patch (que é a predefinição quando nenhuma das opções que o desabilita estiver em vigor), tenha certeza que o patch seja aplicável ao que o arquivo atual do índice registra.  Caso o arquivo que será corrigido na árvore de trabalho não esteja atualizado, será sinalizado como um erro.  Essa flag também faz com que o arquivo do índice seja atualizado."

#~ msgid "Apply a patch without touching the working tree. Instead take the cached data, apply the patch, and store the result in the index without using the working tree. This implies `--index`."
#~ msgstr "Aplique um patch sem tocar na árvore de trabalho. Em vez disso, pegue os dados no cache, aplique o patch e armazene o resultado no índice, sem utilizar a árvore de trabalho. Implica no uso da opção `--index`."

#~ msgid "To submit patches using GMail's IMAP interface, first, edit your ~/.gitconfig to specify your account settings:"
#~ msgstr "Para enviar os patches utilizando a interface IMAP do GMail, primeiro edite o seu ~/.gitconfig para definir as configurações da sua conta:"

#~ msgid "These flags are passed to 'git am' to easily change the dates of the rebased commits (see linkgit:git-am[1])."
#~ msgstr "Estas opções são passados para o comando 'git am' para alterar facilmente as datas dos commits onde o \"rebase\" foi feito (consulte linkgit:git-am[1])."

#~ msgid "Collect and show committer identities instead of authors."
#~ msgstr "Colete e exiba as identidades de quem realizou os commits em vez dos autores."

#~ msgid "'git show-index'\n"
#~ msgstr "'git show-index'\n"

#, ignore-same
#~ msgid "`GIT_REDACT_COOKIES`"
#~ msgstr "`GIT_REDACT_COOKIES`"

#~ msgid "This can be set to a comma-separated list of strings. When a curl trace is enabled (see `GIT_TRACE_CURL` above), whenever a \"Cookies:\" header sent by the client is dumped, values of cookies whose key is in that list (case-sensitive) are redacted."
#~ msgstr "Isso pode ser definido como uma lista de sequências de texto separadas por vírgula. Quando um rastreamento curl é ativado (consulte `GIT_TRACE_CURL` acima), sempre que um cabeçalho \"Cookies:\" enviado pelo cliente é despejado, os valores dos cookies cuja chave está nesta lista (diferencia as maiúsculas das minúsculas) são redigidos."

#~ msgid "`move` refuses to move a locked working tree unless `--force` is specified twice."
#~ msgstr "O `move` se recusa a mover uma árvore de trabalho bloqueada, a menos que a opção `--force` seja utilizado duas vezes."

#~ msgid "Diff Formatting"
#~ msgstr "Formatando o \"Diff\""

#~ msgid "Listed below are options that control the formatting of diff output.  Some of them are specific to linkgit:git-rev-list[1], however other diff options may be given. See linkgit:git-diff-files[1] for more options."
#~ msgstr "Abaixo estão listadas as opções que controlam a formatação da saída diff.  Alguns deles são específicos para linkgit:git-rev-list[1], porém outras opções diff podem ser informadas. Para mais opções, consulte linkgit:git-diff-files[1]."

#~ msgid "Show recursive diffs."
#~ msgstr "Exibe os \"diffs\" recursivos."

#~ msgid "Countermand `commit.gpgSign` configuration variable that is set to force each and every commit to be signed."
#~ msgstr "A revogação da variável de configuração `commit.gpgSign` que está definida para impor cada e todo commit que será assinado."

#~ msgid "The credential is split into a set of named attributes, with one attribute per line. Each attribute is specified by a key-value pair, separated by an `=` (equals) sign, followed by a newline. The key may contain any bytes except `=`, newline, or NUL. The value may contain any bytes except newline or NUL.  In both cases, all bytes are treated as-is (i.e., there is no quoting, and one cannot transmit a value with newline or NUL in it). The list of attributes is terminated by a blank line or end-of-file.  Git understands the following attributes:"
#~ msgstr "A credencial é dividida em um conjunto de atributos nomeados, com um atributo por linha. Cada atributo é especificado por um par de valores-chave, separado por um sinal de `=` (igual), seguido por uma nova linha. A chave pode conter quaisquer bytes, exceto `=`, nova linha ou NUL. O valor pode conter quaisquer bytes, exceto uma nova linha ou NUL.  Nos dois casos, todos os bytes são tratados como estão (ou seja, não há aspas e não é possível transmitir um valor com nova linha ou NUL nela). A lista de atributos é finalizada por uma linha em branco ou no final do arquivo.  O Git entende os seguintes atributos:"

#~ msgid "The remote hostname for a network credential."
#~ msgstr "O nome do host remoto para uma credencial de rede."

#~ msgid "Before starting rebase, stash local modifications away (see linkgit:git-stash[1]) if needed, and apply the stash entry when done. `--no-autostash` is useful to override the `rebase.autoStash` configuration variable (see linkgit:git-config[1])."
#~ msgstr "Se necessário antes de iniciar o \"rebase\", armazene as modificações locais (consulte linkgit:git-stash[1]) e aplique a entrada \"stash\" quando terminar. `--no-autostash` é útil para sobrescrever as configurações da variável `rebase.autoStash` (consulte linkgit:git-config[1])."

#~ msgid "This option is only valid when \"--rebase\" is used."
#~ msgstr "Essa opção só é válida quando a opção `--rebase` for usada."

#~ msgid "If not specified, the default restore source for the working tree is the index, and the default restore source for the index is `HEAD`. When both `--staged` and `--worktree` are specified, `--source` must also be specified."
#~ msgstr "Caso não seja especificado, o índice é a fonte de restauração predefinida para a árvore de trabalho e a fonte de restauração predefinida para o índice é `HEAD '. Quando `--staged` e `--worktree` são informados, a opção `--source` também deve ser usada."

#~ msgid "\t(see linkgit:git-fetch[1]).\n"
#~ msgstr "\t(consulte linkgit:git-fetch[1]).\n"

#, fuzzy
#~ msgid "Show the entire e-mail message \"git am\" has stopped at, because of conflicts."
#~ msgstr "Mostrar o patch sendo aplicado quando \"git am\" é interrompido devido a conflitos."

#~ msgid "Some workflows require that one or more branches of development on one machine be replicated on another machine, but the two machines cannot be directly connected, and therefore the interactive Git protocols (git, ssh, http) cannot be used.  This command provides support for 'git fetch' and 'git pull' to operate by packaging objects and references in an archive at the originating machine, then importing those into another repository using 'git fetch' and 'git pull' after moving the archive by some means (e.g., by sneakernet).  As no direct connection between the repositories exists, the user must specify a basis for the bundle that is held by the destination repository: the bundle assumes that all objects in the basis are already in the destination repository."
#~ msgstr "Alguns fluxos de trabalho exigem que um ou mais ramos de desenvolvimento em uma máquina sejam replicados em outra máquina, mas as duas máquinas não podem ser conectadas diretamente e, portanto, os protocolos Git interativos (git, ssh, http) não podem ser usados.  Este comando fornece suporte para 'git fetch' e 'git pull' para operar empacotando objetos e referências em um arquivo na máquina de origem, importando-os em outro repositório usando 'git fetch' e 'git pull' após mover o arquivo por alguns meios (por exemplo, por sneakernet).  Como não existe conexão direta entre os repositórios, o usuário deve especificar uma base para o bundle que é mantido pelo repositório de destino: o bundle assume que todos os objetos na base já estão no repositório de destino."

#~ msgid "create <file>"
#~ msgstr "criar <arquivo>"

#~ msgid "Overwrite paths in the working tree by replacing with the contents in the index or in the `<tree-ish>` (most often a commit).  When a `<tree-ish>` is given, the paths that match the `<pathspec>` are updated both in the index and in the working tree."
#~ msgstr ""
#~ "Sobrescreva caminhos na árvore de trabalho substituindo o conteúdo no índice ou no <tree-ish> (na maioria das vezes uma confirmação). \n"
#~ " Quando um <tree-ish> é fornecido, os caminhos que correspondem ao <pathspec> são atualizados no índice e na árvore de trabalho."

#~ msgid "Number of parallel children to be used for fetching submodules.  Each will fetch from different submodules, such that fetching many submodules will be faster. By default submodules will be fetched one at a time."
#~ msgstr "Número de filhos paralelos a serem usados para buscar submódulos. Cada um buscará de diferentes submódulos, de modo que buscar muitos submódulos será mais rápido. Por padrão, os submódulos serão buscados um de cada vez."

#~ msgid "Remove untracked directories in addition to untracked files.  If an untracked directory is managed by a different Git repository, it is not removed by default.  Use -f option twice if you really want to remove such a directory."
#~ msgstr "Remova os diretórios não acompanhados, além dos arquivos não acompanhados.  Se um diretório não rastreado for gerenciado por um repositório Git diferente, ele não será removido por padrão.  Use a opção -f duas vezes se você realmente quiser remover esse diretório."

#~ msgid "single path, only for \"dst\""
#~ msgstr "path único, apenas para \"dst\""

#~ msgid "::100644 100644 100644 fabadb8 cc95eb0 4866510 MM\tdescribe.c\n"
#~ msgstr "::100644 100644 100644 fabadb8 cc95eb0 4866510 MM\tdescrever.c\n"

#~ msgid "The optional configuration variable `core.excludesFile` indicates a path to a file containing patterns of file names to exclude from git-add, similar to $GIT_DIR/info/exclude.  Patterns in the exclude file are used in addition to those in info/exclude.  See linkgit:gitignore[5]."
#~ msgstr "A variável de configuração opcional core.excludesFile indica um caminho para um arquivo contendo padrões de nomes de arquivos a serem excluídos do git-add, similar a $GIT_DIR/info/exclude. Padrões no arquivo de exclusão são usados além daqueles em info/exclude. Veja linkgit:gitignore[5]."

#~ msgid "If `--list` is given, or if there are no non-option arguments, existing branches are listed; the current branch will be highlighted with an asterisk.  Option `-r` causes the remote-tracking branches to be listed, and option `-a` shows both local and remote branches. If a `<pattern>` is given, it is used as a shell wildcard to restrict the output to matching branches. If multiple patterns are given, a branch is shown if it matches any of the patterns.  Note that when providing a `<pattern>`, you must use `--list`; otherwise the command is interpreted as branch creation."
#~ msgstr "Se `--list` for fornecido, ou se não houver argumentos não-opcionais, as ramificações existentes serão listadas; o ramo atual será destacado com um asterisco. A opção `-r` faz com que as ramificações de rastreamento remoto sejam listadas, e a opção` -a` mostra ramificações locais e remotas. Se um `<pattern>` é dado, ele é usado como um caractere curinga do shell para restringir a saída às ramificações correspondentes. Se vários padrões forem fornecidos, uma ramificação será mostrada se corresponder a qualquer um dos padrões.  Note que ao fornecer um `<pattern>`, você deve usar `--list`; caso contrário, o comando é interpretado como criação de ramificação."

#~ msgid "The command's second form creates a new branch head named <branchname> which points to the current `HEAD`, or <start-point> if given."
#~ msgstr "O segundo formulário do comando cria um novo cabeçalho de ramificação chamado <branchname>, que aponta para o atual `HEAD`, ou <start-point>, se fornecido."

#~ msgid "In addition to those found in .gitignore (per directory) and $GIT_DIR/info/exclude, also consider these patterns to be in the set of the ignore rules in effect."
#~ msgstr "Além dos encontrados em .gitignore (por diretório) e $GIT_DIR/info/excluir, considere também que esses padrões estejam no conjunto das regras de ignorar em vigor."

#, ignore-same
#~ msgid "git-remote-testgit(1)"
#~ msgstr "git-remote-testgit(1)"
